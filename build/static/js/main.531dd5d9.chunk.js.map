{"version":3,"sources":["common/service/Payment/PostPayment.js","common/components/TextInput.tsx","store/actions/account.actions.ts","store/actions/users.action.ts","common/service/Aut/RefreshToken.tsx","common/service/User/UpdateStatusUser.tsx","common/service/Aut/Login.tsx","components/Account/Login.tsx","common/components/PrivateRoute.tsx","components/LeftMenu/LeftMenu.tsx","store/actions/profile.action.ts","common/service/User/GetProfile.tsx","components/TopMenu/TopMenuAccount.tsx","store/actions/notify.action.ts","common/service/Notify/GetNotify.tsx","store/actions/user_read_notification.action.ts","common/service/UserReadNotification/GetUserReadNotificationByUser.tsx","store/actions/semester.actions.ts","common/service/UserReadNotification/PutUserReadNotification.tsx","components/TopMenu/TopNotification.tsx","store/actions/user_register_join_semester.action.ts","common/service/UserRegisterJoinSemester/GetUserRegisterJoinSemesterByPayer.tsx","components/TopMenu/TopMenuCart.tsx","components/TopMenu/TopMenu.tsx","store/actions/root.actions.ts","common/components/TopCard.tsx","store/models/anonymous_notification.interface.ts","store/actions/anonymous_notification.action.ts","store/actions/art_age.action.ts","common/components/SelectKeyValue.tsx","components/Home/NotificationForm.tsx","common/service/AnonymousNotification/PostAnonymousNotification.tsx","store/actions/schedule_time_class.action.ts","common/service/ScheduleTimeClass/GetScheduleTimeClass.tsx","common/components/Loading.js","common/service/UserRegisterJoinSemester/GetTotalMoney.tsx","common/service/Teacher/GetTotalTeacher.tsx","common/service/Parent/GetTotalParent.tsx","common/service/Student/GetTotalStudent.tsx","store/actions/course.action.ts","common/service/Course/GetTotalCourse.tsx","store/actions/contest.action.ts","common/service/Contest/GetTotalContest.tsx","components/Home/Home.tsx","store/models/user.interface.ts","common/components/ConvertVietNamese.tsx","components/Teachers/TeacherList.tsx","store/actions/notifications.action.ts","common/service/Teacher/GetTeacher.tsx","common/service/Teacher/PostTeacher.tsx","common/service/User/GetUserById.tsx","common/service/Teacher/PutTeacher.tsx","components/Teachers/TeacherForm.tsx","common/service/User/DeleteUser.tsx","components/Teachers/TeacherImportForm.tsx","store/actions/teacher_register_quantification.action.ts","common/service/TeacherRegisterQuantification/GetTeacherRegisterQuantification.tsx","components/Teachers/Teacher.tsx","store/models/product.interface.ts","store/actions/products.action.ts","components/Teachers/HistoryTeach.tsx","common/service/Course/GetCourse.tsx","components/Teachers/DetailTeacher.tsx","components/Student/StudentList.tsx","common/service/Student/GetStudent.tsx","components/Student/Student.tsx","components/Student/HistoryStudent.tsx","components/Student/DetailStudent.tsx","components/Parent/ParentList.tsx","common/service/Parent/GetParent.tsx","components/Parent/Parent.tsx","components/Parent/HistoryParent.tsx","store/models/semester.interface.ts","components/Parent/DetailParent.tsx","components/Semester/SemesterList.tsx","common/components/NumberInput.tsx","common/service/semester/GetSemester.tsx","components/Semester/SemesterForm.tsx","common/service/semester/PostSemester.tsx","common/service/semester/PutSemester.tsx","components/Semester/Semester.tsx","store/models/lesson.interface.ts","common/service/semester/DeleteSemester.tsx","store/actions/lesson.action.ts","components/Lesson/LessonList.tsx","common/service/Lesson/GetLesson.tsx","components/Lesson/LessonForm.tsx","common/service/Lesson/PostLesson.tsx","common/service/Lesson/PutLesson.tsx","components/Lesson/Lesson.tsx","store/models/art_type.interface.ts","common/service/Lesson/DeleteLesson.tsx","store/actions/art_type.action.ts","components/Art/TeachTypeList.tsx","common/service/ArtType/GetArtType.tsx","components/Art/TeachTypeForm.tsx","store/models/art_level.interface.ts","common/service/ArtType/PostArtType.tsx","common/service/ArtType/PutArtType.tsx","store/actions/art_level.action.ts","components/Art/TeachLevelList.tsx","common/service/ArtLevel/GetArtLevel.tsx","components/Art/TeachLevelForm.tsx","store/models/art_age.interface.ts","common/service/ArtLevel/PostArtLevel.tsx","common/service/ArtLevel/PutArtLevel.tsx","components/Art/TeachAgeList.tsx","common/service/ArtAge/GetArtAge.tsx","components/Art/TeachAgeForm.tsx","common/service/ArtAge/PostArtAge.tsx","common/service/ArtAge/PutArtAge.tsx","components/Art/Art.tsx","store/models/course.interface.ts","common/service/ArtType/DeleteArtType.tsx","common/service/ArtAge/DeleteArtAge.tsx","common/service/ArtLevel/DeleteArtLevel.tsx","components/Course/CourseNomalList.tsx","components/Course/Course.tsx","store/models/my_class.interface.ts","common/service/Course/DeleteCourse.tsx","common/components/Select.tsx","components/Class/ClassForm.tsx","store/actions/my_class.action.ts","components/Class/ClassList.tsx","common/service/MyClass/GetMyClass.tsx","store/models/semester_class.interface.ts","store/actions/semester_class.action.ts","components/Class/ClassSemesterList.tsx","store/actions/schedule.action.ts","common/service/Schedule/GetSchedule.tsx","common/service/SemesterClass/GetSemesterClass.tsx","common/service/SemesterClass/PostSemesterClass.tsx","common/service/Schedule/PostSchedule.tsx","common/components/SelectKeyValueMutiple.tsx","common/components/SelectKeyValueMutiple2.tsx","components/Class/ClassSemesterForm.tsx","common/service/SemesterClass/PutSemesterClass.tsx","common/service/MyClass/PostScheduleClass.tsx","common/components/SelectKeyValueNotField.tsx","components/Class/Class.tsx","common/service/SemesterClass/DeleteSemesterClass.tsx","components/Class/LessonList.tsx","components/Class/StudentList.tsx","store/actions/information_class.action.ts","store/actions/time_schedule.action.ts","common/service/MyClass/GetInfoMyClass.tsx","components/Class/DetailClass.tsx","components/Class/DetailLesson.tsx","common/components/ChartBar.js","components/Turnover/TurnoverList.tsx","common/service/UserRegisterJoinSemester/GetUserRegisterJoinSemester.tsx","common/components/DoughnutPieCharts.js","components/Turnover/CourseAnalytis.tsx","common/components/CharLine.js","components/Turnover/UserAnalytis.tsx","store/actions/turnover.action.ts","common/service/TurnOver/GetTurnoverReport.tsx","store/actions/report_user.action.ts","common/service/ReportUser/GetUserReport.tsx","store/actions/course_report.action.ts","common/service/CourseReport/GetCourseReport.tsx","components/Turnover/Turnover.tsx","store/actions/teacher_leave.action.ts","common/service/NotifyDb/PostNotifyDb.tsx","common/service/UserReadNotification/PostUserReadNotification.tsx","common/service/TeacherLeave/PutTeacherLeave.tsx","components/Request/TeacherRequestList.tsx","common/service/TeacherLeave/GetTeacherLeave.tsx","components/Request/TeacherRequest.tsx","common/service/TeacherRegisterQuantification/GetTeacherRegisterQuantificationByTeacherId.tsx","common/service/TeacherRegisterQuantification/PutTeacherRegisterLevelAdmin.tsx","components/Request/RequestConfirmLevelList.tsx","components/Request/RequestConfirmLevel.tsx","common/components/Quill/EditorToolbar.js","common/components/Quill/EditorSectionTemplate.js","store/actions/tutorial_template_page.action.ts","common/service/TutorialTemplatePage/GetTutorialTemplatePageByTutorialTemplateId.tsx","common/service/TutorialTemplatePage/PostTutorialTemplatePage1.tsx","components/Course/LessonPlan.tsx","store/models/contest.interface.ts","common/components/ConverDate.js","components/Contest/ContestIsOnList.tsx","components/Contest/ContestEndList.tsx","components/Contest/ContestNotOnYetList.tsx","common/service/Contest/GetContest.tsx","components/Contest/Contest.tsx","common/service/Contest/DeleteContest.tsx","components/Request/DegreePhoto.tsx","common/components/Checkbox.tsx","common/components/Quill/Editor.js","common/service/Course/PostCourse.tsx","common/service/Course/PutCourse.tsx","components/Course/CourseNomalForm.tsx","common/service/UserGradeContest/PostUserGradeContest.tsx","common/service/Contest/PutContest.tsx","common/service/UserGradeContest/DeleteUserGradeContestByContest.tsx","common/components/ReactSelect.js","store/actions/user_grade_contest.action.ts","common/service/UserGradeContest/GetUserGradeContestByContestId.tsx","components/Contest/ContestForm.tsx","common/service/Contest/PostContest.tsx","components/Course/CourseNomalFormEdit.tsx","components/Account/Account.tsx","components/Account/ChangePassword.tsx","common/service/User/UpdatePassword.tsx","components/Contest/TopStudent.tsx","components/Contest/TopTeacher.tsx","store/actions/user_grade_contest_submission.action.ts","common/service/UserGradeContestSubmission/GetUserGradeContestSubmissionByContest.tsx","store/actions/contest_submission.action.ts","common/service/ContestSubmission/GetContestSubmissionByContest.tsx","components/Contest/ResultContest.tsx","store/models/section_template.interface.ts","store/actions/section_template.action.ts","components/SectionTemplate/SectionTemplateList.tsx","common/service/SectionTemplate/GetSectionTemplateByCourseId.tsx","store/actions/tutorial_template.action.ts","common/service/TutorialTemplate/GetTutorialTemplate.tsx","common/service/TutorialTemplatePage/GetTutorialTemplatePage.tsx","components/SectionTemplate/SectionTemplate.tsx","common/components/Quill/EditorEditSection.js","common/service/TutorialTemplatePage/PutTutorialTemplatePage.tsx","common/service/TutorialTemplatePage/DeleteTutorialTemplatePage.tsx","common/service/TutorialTemplatePage/PutTutorialTemplatePage1.tsx","common/service/SectionTemplate/PutSectionTemplate.tsx","common/service/SectionTemplate/GetSectionTemplate.tsx","components/SectionTemplate/SectionTemplateForm.tsx","common/components/TopCardUser.tsx","store/models/teacher_register_quantification.interface.ts","common/components/TopCardLevel.tsx","components/Home/TeacherLevelList.tsx","components/Home/TeacherHome.tsx","components/Class/ScheduleClass.tsx","common/components/TopCardCourseTeacher.tsx","components/Course/CourseTeacherNotRegisterList.tsx","store/actions/course_teacher_new.action.ts","common/service/CourseTeacherNew/GetCourseTeacherNew.tsx","components/Course/CourseTeacher.tsx","store/actions/time_schedule_teacher.action.ts","common/service/ScheduleTeacher/GetScheduleTeacher.tsx","components/Schedule/ScheduleTeacher.tsx","store/actions/course_teacher.action.ts","common/service/CourseTeacher/GetCourseTeacherByTeacher.tsx","components/Course/CourseTeacherDetail.tsx","common/service/UserTeachSemester/PostRegisterTeachSemester.tsx","components/TeacherLevel/TeacherLevelForm.tsx","common/service/TeacherRegisterQuantification/PostTeacherLevel.tsx","common/service/TeacherRegisterQuantification/PutTeacherRegisterLevel.tsx","components/TeacherLevel/TeacherLevelList.tsx","components/TeacherLevel/TeacherLevelNotApprovedNowList.tsx","common/service/Course/GetNewCourseForTeacher.tsx","components/TeacherLevel/TeacherLevel.tsx","store/models/class_teacher.interface.ts","components/TeacherLevel/TeacherLevelDetail.tsx","store/actions/class_teacher.action.ts","components/Class/ClassTeachingTeacherList.tsx","components/Class/ClassDoneTeacherList.tsx","common/service/ClassTeacher/GetClassTeacher.tsx","components/Class/ClassTeacher.tsx","components/Class/NotificationClassTeacher.tsx","common/service/Notification/PostNotificationByClass.tsx","components/Class/StudentForTeacherList.tsx","components/Class/ClassTeacherDetail.tsx","store/actions/contest_teacher.action.ts","common/service/ContestTeacher/GetContestTeacher.tsx","components/Contest/ContestNotDoingTeacherList.tsx","components/Contest/ContestDoingTeacherList.tsx","components/Contest/ContestEndTeacherList.tsx","components/Contest/ContestTeacher.tsx","store/actions/exercise_student.action.ts","common/service/ExerciseStudent/GetExerciseForClassStudent.tsx","common/service/Parent/GetParentById.tsx","store/actions/student_leave.action.ts","common/service/StudentLeave/GetStudentLeaveByClassStudent.tsx","store/actions/user_grade_exercise_submission.action.ts","common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByClassStudent.tsx","components/ManageStudent/ManageStudent.tsx","components/ManageStudent/ExerciseSectionList.tsx","components/ManageStudent/ExerciseStudentList.tsx","components/ManageStudent/DetailExerciseStudent.tsx","store/actions/exercise_submission.action.ts","common/service/ExerciseSubmission/GetExerciseSubmissionByClass.tsx","store/actions/section.action.ts","common/service/Section/GetSectionByClass.tsx","common/service/TeacherLeave/GetTeacherLeaveByTeacher.tsx","store/models/teacher_leave.interface.ts","components/Class/RequestOffSectionForm.tsx","common/service/TeacherLeave/PostTeacherLeave.tsx","components/Class/DetailClassTeacher.tsx","common/service/UserGradeExercise/PostUserGradeExercise.tsx","common/service/ExerciseSubmission/GetExerciseSubmissionByExeercise.tsx","components/Exam/GradeExamTeacher.tsx","common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByExeerciseAndClass.tsx","components/Exam/ScoreExamList.tsx","components/Exam/ResultGradeExamTeacher.tsx","components/Exam/AnalytisScoreExamTeacher.tsx","store/actions/exercise.action.ts","common/service/Exercise/GetExerciseBySection.tsx","store/actions/exercise_level.action.ts","store/models/exercise.interface.ts","common/service/ExerciseLevel/GetExerciseLevel.tsx","common/service/Section/GetSectionById.tsx","components/Exercise/ExerciseForm.tsx","common/service/Exercise/PostExercise.tsx","store/actions/tutorial_page.action.ts","common/service/TutorialPage/GetTutorialPageBySection.tsx","store/actions/tutorial.action.ts","common/service/Tutorial/GetTutorialBySection.tsx","components/SectionTeacher/SectionTeacher.tsx","common/service/TutorialPage/GetTutorialPageByTutorialId.tsx","common/service/UserRegisterTutorial/PostUserRegisterTutorial.tsx","common/service/UserRegisterTutorialPage/PostUserRegisterTutorialPageToast.tsx","common/service/UserRegisterTutorialPage/PostUserRegisterTutorialPage.tsx","components/SectionTeacher/EditSectionTeacher.tsx","components/SectionTeacher/ViewSectionTeacher.tsx","components/RequestTeacher/StudentLeaveList.tsx","common/service/StudentLeave/PutStudentLeave.tsx","components/RequestTeacher/TeacherLeaveList.tsx","common/service/StudentLeave/GetStudentLeaveByTeacher.tsx","components/RequestTeacher/RequestTeacher.tsx","components/Exam/ExamTeacher.tsx","components/RequestTeacher/StudentLeaveDetail.tsx","components/Request/DetailTeacherRequest.tsx","store/actions/user_register_tutorial.action.ts","common/service/UserRegisterTutorial/GetUserRegisterTutorial.tsx","common/service/UserRegisterTutorial/PutUserRegisterTutorial.tsx","components/Request/TutorialEditRequestList.tsx","components/Request/UserRegisterTutorialEditRequestList.tsx","components/Request/TutorialEditRequest.tsx","components/Contest/ContestDetailTeacher.tsx","common/service/UserGradeContestSubmission/PostUserGradeContestSubmission.tsx","components/Contest/GradeContestTeacher.tsx","components/Contest/ScoreContestList.tsx","common/service/Student/GetStudentByParent.tsx","components/Contest/ScoreContestListStudent.tsx","components/Contest/ResultGradeContestTeacher.tsx","components/Contest/AnalytisResultGradeContestTeacher.tsx","components/Contest/DetailContestTeacher.tsx","components/Notification/NotificationDetail.tsx","store/actions/notify_db.action.ts","common/service/NotifyDb/GetNotifyDb.tsx","components/Notification/Notification.tsx","common/components/TopCardAccount.tsx","components/Home/AccountChildList.tsx","components/AccountChild/AccountChildForm.tsx","common/service/User/PostUser.tsx","common/service/ScheduleTimeClass/GetScheduleTimeByParent.tsx","components/Home/ParentHome.tsx","components/GuessColor/Header/index.tsx","components/GuessColor/Game/components/ColorBlock/index.tsx","components/GuessColor/Game/index.tsx","components/GuessColor/Scoreboard/index.tsx","components/GuessColor/index.tsx","store/actions/course_parent.action.ts","common/service/CourseParent/GetCourseParent.tsx","components/Course/CourseParent.tsx","store/actions/contest_student.action.ts","common/service/ContestStudent/GetContestStudentByParent.tsx","components/Contest/ContestStudentNotOpenNowListList.tsx","components/Contest/ContestDoingStudentList.tsx","components/Contest/ContestEndStudentList.tsx","components/Contest/ContestParent.tsx","components/Schedule/ScheduleParent.tsx","components/Course/CourseStudent.tsx","common/service/ScheduleTimeClass/GetScheduleTimeByStudent.tsx","components/Schedule/ScheduleStudent.tsx","common/service/ContestStudent/GetContestStudent.tsx","components/Contest/ContestStudentDoingList1.tsx","components/Contest/ContestStudent.tsx","common/service/Course/GetTotalCourseForStudent.tsx","common/service/Contest/GetTotalContestForStudent.tsx","components/Home/StudentHome.tsx","common/service/Contest/GetContestByStudent.tsx","store/actions/classes_student.action.ts","common/service/ClassesStudent/GetClassesStudentByStudent.tsx","components/ManageChild/ManageChild.tsx","components/ManageChild/FormReviewClass.tsx","store/models/classes_parent.interface.ts","components/ManageChild/ManageClassesDone.tsx","store/actions/classes_parent.action.ts","common/service/ClassesParent/GetClassesParent.tsx","components/ClassParent/ClassDoingList.tsx","components/ClassParent/ClassDoneList.tsx","components/ClassParent/ClassParent.tsx","components/ManageChild/ManageClassesDoing.tsx","common/components/TopCardContestParent.tsx","components/Discovery/ContestList.tsx","common/components/TopCardCourseParentNew.tsx","components/Discovery/CourseNewList.tsx","store/actions/course_parent_new.action.ts","common/service/CourseParentNew/GetCourseParentNew.tsx","store/actions/contest_parent_new.action.ts","common/service/ContestParentNew/GetContestParentNew.tsx","components/Discovery/Discovery.tsx","common/service/SemesterClass/GetSemesterNew.tsx","store/actions/cart.action.ts","common/service/UserRegisterJoinSemester/PostUserRegisterJoinSemester.tsx","components/Discovery/SemesterClassDetail.tsx","components/Discovery/ContestDetail.tsx","common/service/UserRegisterContest/PostUserRegisterContest.tsx","components/Discovery/CartForm.tsx","components/ManageStudent/DetailContestStudent.tsx","store/actions/attendance.action.ts","common/service/Attendance/PutAttendance.tsx","common/service/Attendance/GetAttendance.tsx","components/SectionTeacher/AttendanceList.tsx","common/service/Attendance/GetAttendanceBySection.tsx","components/SectionTeacher/Attendance.tsx","store/models/classes_student.interface.ts","components/ClassStudent/ClassDoingList.tsx","components/ClassStudent/ClassDoneList.tsx","components/ClassStudent/ClassStudent.tsx","common/components/TopCardContest.tsx","components/DiscoveryStudent/ContestList.tsx","store/actions/course_new.action.ts","common/service/CourseNew/GetCourseNew.tsx","common/components/TopCardCourseNew.tsx","components/DiscoveryStudent/CourseNewList.tsx","store/models/student_leave.interface.ts","components/DiscoveryStudent/Discovery.tsx","components/DiscoveryStudent/SemesterClassDetail.tsx","common/service/StudentLeave/PostStudentLeave.tsx","common/service/StudentLeave/GetStudentLeave.tsx","components/ClassStudent/RequestOffSectionForm.tsx","components/ClassStudent/DetailClassStudent.tsx","common/service/ExerciseStudent/GetExerciseBySectionStudent.tsx","components/ClassStudent/SectionStudent.tsx","components/ClassStudent/ViewSectionStudent.tsx","common/service/Attendance/PutAttendanceByUserAndSection.tsx","common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByExerciseStudent.tsx","components/ManageStudent/DetailExerciseStudent1.tsx","components/ClassStudent/FormSubmit.tsx","common/service/ExerciseSubmission/PostExerciseSubmission.tsx","components/Contest/FormSubmitContestStudent.tsx","common/service/ContestSubmission/PostContestSubmission.tsx","components/ClassStudent/ScheduleClassStudent.tsx","common/service/ExerciseSubmission/GetExerciseSubmissionById.tsx","components/Exercise/ViewExerciseSubmission.tsx","store/actions/semester_class_student.action.ts","common/service/SemesterClassStudent/GetSemesterClassStudentNew.tsx","common/components/TopCardSemesterClassStudent.tsx","components/DiscoveryStudent/SemesterClassList.tsx","components/DiscoveryStudent/SemesterClasssStudentNew.tsx","common/service/FinalCourse/GetInfoFinalCourse.tsx","store/actions/class_has_register_join_semester.action.ts","common/service/ClassHasRegisterJoinSemester/GetInfoClassHasRegisterJoinSemester.tsx","components/ClassStudent/ReviewClassDone.tsx","components/ClassStudent/ExerciseSectionList1.tsx","components/ClassStudent/ExerciseStudentList1.tsx","components/ClassStudent/ReviewStart.tsx","common/service/ClassHasRegisterJoinSemester/PutClassHasRegisterJoinSemesterStudent.tsx","common/components/TopCardSemesterClassParent.tsx","components/Discovery/SemesterClassList.tsx","store/actions/semester_class_parent.action.ts","common/service/SemesterClasssParent/GetSemesterClassByParentCourse.tsx","components/Discovery/SemesterClassParentNew.tsx","common/components/TopCardSemesterClassTeacher.tsx","components/Course/SemesterClassList.tsx","store/actions/semester_class_teacher.action.ts","common/service/SemesterClassTeacherNew/GetSemesterClassTeacherNew.tsx","components/Course/SemesterClassTeacherNew.tsx","Routers/Routers.tsx","common/components/Header.tsx","common/components/Footer.tsx","components/LandingPage/LandingPage.tsx","components/Account/ForgotPassword.tsx","common/service/ResetPassword/PostResetPassword.tsx","components/Account/UpdatePassword.tsx","common/service/ResetPassword/PostSavePassword.tsx","components/Account/RegisterForm.tsx","common/service/Aut/Register.tsx","components/Discovery/PaymentSuccessfull.tsx","common/service/UserRegisterJoinSemester/PostStatusUserRegisterJoinSemester.tsx","App.tsx","serviceWorker.ts","store/reducers/products.reducer.ts","store/reducers/notification.reducer.ts","store/reducers/users.reducer.ts","store/actions/orders.actions.ts","store/reducers/order.reducer.ts","store/reducers/account.reducer.ts","store/reducers/semester.reducer.ts","store/reducers/lesson.reducer.ts","store/models/schedule.interface.ts","store/reducers/schedule.reducer.ts","store/models/schedule_item.interface.ts","store/actions/schedule_item.action.ts","store/reducers/schedule_item.reducer.ts","store/reducers/art_type.reducer.ts","store/reducers/art_level.reducer.ts","store/reducers/art_age.reducer.ts","store/reducers/course.reducer.ts","store/reducers/contest.reducer.ts","store/reducers/section_template.reducer.ts","store/models/tutorial_template.interface.ts","store/reducers/tutorial_template.reducer.ts","store/models/user_grade_contest.interface.ts","store/reducers/user_grade_contest.reducer.ts","store/models/tutorial_template_page.interface.ts","store/reducers/tutorial_template_page.reducer.ts","store/reducers/teacher_leave.reducer.ts","store/reducers/student_leave.reducer.ts","store/reducers/my_class.reducer.ts","store/reducers/teacher_register_quantification.reducer.ts","store/models/information_class.interface.ts","store/reducers/information_class.reducer.ts","store/models/time_schedule.interface.ts","store/reducers/time_schedule.reducer.ts","store/models/course_teacher.interface.ts","store/reducers/course_teacher.reducer.ts","store/models/time_schedule_teacher.interface.ts","store/reducers/time_schedule_teacher.reducer.ts","store/reducers/class_teacher.reducer.ts","store/models/contest_teacher.interface.ts","store/reducers/contest_teacher.reducer.ts","store/reducers/semester_class.reducer.ts","store/reducers/anonymous_notification.reducer.ts","store/models/section.interface.ts","store/reducers/section.reducer.ts","store/models/tutorial_page.interface.ts","store/reducers/tutorial_page.reducer.ts","store/reducers/exercise.reducer.ts","store/models/exercise_submission.interface.ts","store/reducers/exercise_submission.reducer.ts","store/models/turnover.interface.ts","store/reducers/turnover.reducer.ts","store/models/report_user.interface.ts","store/reducers/report_user.reducer.ts","store/models/course_report.interface.ts","store/reducers/course_report.reducer.ts","store/models/exercise_level.interface.ts","store/reducers/exercise_level.reducer.ts","store/models/user_grade_exercise_submission.interface.ts","store/reducers/user_grade_exercise_submission.reducer.ts","store/models/exercise_student.interface.ts","store/reducers/exercise_student.reducer.ts","store/models/tutorial.interface.ts","store/reducers/tutorial.reducer.ts","store/models/user_grade_contest_submission.interface.ts","store/reducers/user_grade_contest_submission.reducer.ts","store/models/user_register_tutorial_page.interface.ts","store/actions/user_register_tutorial_page.action.ts","store/reducers/user_register_tutorial_page.reducer.ts","store/models/user_register_tutorial.interface.ts","store/reducers/user_register_tutorial.reducer.ts","store/models/contest_submission.interface.ts","store/reducers/contest_submission.reducer.ts","store/models/schedule_time_class.interface.ts","store/reducers/schedule_time_class.reducer.ts","store/models/notify_db.interface.ts","store/reducers/notify_db.reducer.ts","store/models/user_read_notification.interface.ts","store/reducers/user_read_notification.reducer.ts","store/models/notify.interface.ts","store/reducers/notify.reducer.ts","store/reducers/classes_student.reducer.ts","store/reducers/classes_parent.reducer.ts","store/models/course_parent.interface.ts","store/reducers/course_parent.reducer.ts","store/models/contest_student.interface.ts","store/reducers/contest_student.reducer.ts","store/models/cart.interface.ts","store/reducers/cart.reducer.ts","store/models/attendance.interface.ts","store/reducers/attendance.reducer.ts","store/models/profile.interface.ts","store/reducers/profile.reducer.ts","store/models/user_register_join_semester.interface.ts","store/reducers/user_register_join_semester.reducer.ts","store/models/course_student.interface.ts","store/actions/course_student.action.ts","store/reducers/course_student.reducer.ts","store/models/course_new.interface.ts","store/reducers/course_new.reducer.ts","store/models/semester_class_student.interface.ts","store/reducers/semester_class_student.reducer.ts","store/models/class_has_register_join_semester.interface.ts","store/reducers/class_has_register_join_semester.reducer.ts","store/models/course_parent_new.interface.ts","store/reducers/course_parent_new.reducer.ts","store/models/semester_class_parent.interface.ts","store/reducers/semester_class_parent.reducer.ts","store/models/contest_parent_new.interface.ts","store/reducers/contest_parent_new.reducer.ts","store/models/course_teacher_new.interface.ts","store/reducers/course_teacher_new.reducer.ts","store/models/semester_class_teacher.interface.ts","store/reducers/semester_class_teacher.reducer.ts","store/reducers/root.reducer.ts","store/store.ts","index.tsx"],"names":["postMomo","total_price","ids","requestId","Date","getTime","orderId","ipnUrl","toString","console","log","redirectUrl","rawSignature","signature","crypto","update","digest","requestBody","JSON","stringify","partnerCode","accessKey","amount","orderInfo","extraData","requestType","lang","https","require","options","hostname","port","path","method","headers","Buffer","byteLength","req","request","res","statusCode","setEncoding","on","body","window","open","parse","payUrl","e","message","write","end","TextInput","props","useState","touched","setTouch","error","setError","htmlClass","setHtmlClass","setValue","htmlFor","id","label","value","type","onChange","event","target","validClass","elementValue","required","maxLength","length","field","className","inputClass","placeholder","LOG_IN","LOG_OUT","logout","FETCH_DATA_REQUEST","FETCH_DATA_SUCCESS","FETCH_DATA_ERROR","ADD_ADMIN","EDIT_ADMIN","REMOVE_ADMIN","REMOVE_TEACHER_ALL","INITIAL_TEACHER","ADD_TEACHER","REMOVE_TEACHER","EDIT_TEACHER","REMOVE_STUDENT_ALL","INITIAL_STUDENT","ADD_STUDENT","EDIT_STUDENT","REMOVE_STUDENT","REMOVE_PARENT_ALL","INITIAL_PARENT","ADD_PARENT","EDIT_PARENT","REMOVE_PARENT","SET_MODIFICATION_STATE","CHANGE_USER_PENDING_EDIT","CLEAR_USER_PENDING_EDIT","fetchDataRequest","fetchDataSuccess","user","fetchDataError","payload","initialTeacher","removeTeacherAll","initialStudent","removeStudentAll","initialParent","removeParentAll","addTeacher","editTeacher","addStudent","editStudent","changeSelectedUser","clearSelectedUser","setModificationState","postRefreshToken","refresh_token","localStorage","getItem","dispatch","fetch","process","then","response","ok","status","Error","statusText","putStatusUser","removeItem","json","data","setItem","accessToken","refreshToken","catch","bearer","val","postAut","username","password","changeRouteHome","clear","token","decoded","jwt_decode","role_privilege","profile_image_url","login","toast","render","isLoading","position","POSITION","TOP_CENTER","autoClose","setTimeout","openRequest","indexedDB","onerror","onsuccess","db","result","onversionchange","close","alert","query","transaction","objectStore","getAll","token_object","Login","useDispatch","history","useHistory","formState","setFormState","push","hasFormValueChanged","model","isFormInvalid","onClick","src","alt","onSubmit","preventDefault","loading","style","color","PrivateRoute","children","rest","useSelector","state","account","to","pathname","LeftMenu","leftMenuVisibility","setLeftMenuVisibility","roleUser","changeLeftMenuVisibility","getCollapseClass","split","href","ADD_PROFILE","EDIT_PROFILE","REMOVE_PROFILE","CHANGE_PROFILE_PENDING_EDIT","CLEAR_PROFILE_PENDING_EDIT","REMOVE_PROFILE_ALL","INITIAL_PROFILE","getProfile","ele","profile","addProfile","TopMenuAccount","profiles","useEffect","trackPromise","isShow","setShow","profile_image","id_x","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","data-target","ADD_NOTIFY","EDIT_NOTIFY","REMOVE_NOTIFY","CHANGE_NOTIFY_PENDING_EDIT","CLEAR_NOTIFY_PENDING_EDIT","REMOVE_NOTIFY_ALL","INITIAL_NOTIFY","getNotify","notifications","map","index","notification","idx","name","description","time","notify","ADD_USER_READED_NOTIFICATION","EDIT_USER_READED_NOTIFICATION","REMOVE_USER_READED_NOTIFICATION","CHANGE_USER_READED_NOTIFICATION_PENDING_EDIT","CLEAR_USER_READED_NOTIFICATION_PENDING_EDIT","REMOVE_USER_READED_NOTIFICATION_ALL","INITIAL_USER_READED_NOTIFICATION","ADD_USER_NOT_READED_NOTIFICATION","EDIT_USER_NOT_READED_NOTIFICATION","REMOVE_USER_NOT_READED_NOTIFICATION","CHANGE_USER_NOT_READED_NOTIFICATION_PENDING_EDIT","CLEAR_USER_NOT_READED_NOTIFICATION_PENDING_EDIT","REMOVE_USER_NOT_READED_NOTIFICATION_ALL","INITIAL_USER_NOT_READED_NOTIFICATION","getUserReadNotification","user_read_notification","UserReadNotification","userReadNotification","notification_id","user_id","is_read","addUserReadedNotification","addUserNotReadedNotification","ADD_SEMESTER","EDIT_SEMESTER","REMOVE_SEMESTER","CHANGE_SEMESTER_PENDING_EDIT","CLEAR_SEMESTER_PENDING_EDIT","REMOVE_SEMESTER_ALL","INITIAL_SEMESTER","semester","addSemester","editSemester","removeSemester","clearSelectedSemester","putUserReadNotification","xx","TopMenuNotification","notifys","user_read_notifications","user_not_readed_notifications","data_not_read","total","item","notification_name","notification_time","notification_desciption","user_readed_notifications","key","routeChange","ADD_COMPLETED","EDIT_COMPLETED","REMOVE_COMPLETED","CHANGE_COMPLETED_PENDING_EDIT","CLEAR_COMPLETED_PENDING_EDIT","REMOVE_COMPLETED_ALL","INITIAL_COMPLETED","ADD_WAITING","EDIT_WAITING","REMOVE_WAITING","CHANGE_WAITING_PENDING_EDIT","CLEAR_WAITING_PENDING_EDIT","REMOVE_WAITING_ALL","INITIAL_WAITING","removeCompletedAll","addCompleted","user_register_join_semester","removeWaitingAll","addWaiting","getUserRegisterJoinSemesterByPayer","user_register_semester","student_id","student_name","link_url","payer_name","course_name","payer_id","price","semester_class_id","TopMenuCart","user_register_join_semesters","waiting","TopMenu","page","root","area","subArea","UPDATE_CURRENT_PATH","updateCurrentPath","TopCard","AnonymousNotificationModificationStatus","class","title","text","icon","ADD_ANONYMOUS_NOTIFICATION","EDIT_ANONYMOUS_NOTIFICATION","REMOVE_ANONYMOUS_NOTIFICATION","CHANGE_ANONYMOUS_NOTIFICATION_PENDING_EDIT","CLEAR_ANONYMOUS_NOTIFICATION_PENDING_EDIT","REMOVE_ANONYMOUS_NOTIFICATION_ALL","INITIAL_ANONYMOUS_NOTIFICATION","addAnonymousNotification","anonymous_notification","editAnonymousNotification","clearSelectedAnonymousNotification","setModificationStateAnonymousNotification","ADD_ART_AGE","EDIT_ART_AGE","REMOVE_ART_AGE","CHANGE_ART_AGE_PENDING_EDIT","CLEAR_ART_AGE_PENDING_EDIT","REMOVE_ART_AGE_ALL","INITIAL_ART_AGE","addArtAge","art_age","editArtAge","removeArtAge","clearSelectedArtAge","setModificationStateArtAge","SelectKeyValue","getOptions","option","TeachAgeForm","anonymous_notifications","selectedAnonymousNotification","isCreate","modificationState","Create","type_send","isCheck","saveFn","postAnonymousNotification","recipient","subject","msgBody","attachment","None","saveForm","ADD_TIME_SCHEDULE","EDIT_TIME_SCHEDULE","REMOVE_TIME_SCHEDULE","CHANGE_TIME_SCHEDULE_PENDING_EDIT","CLEAR_TIME_SCHEDULE_PENDING_EDIT","REMOVE_TIME_SCHEDULE_ALL","INITIAL_TIME_SCHEDULE","schedule_time_class","removeScheduleTimeClassAll","addScheduleTimeClass","getScheduleTimeClass","schedules","x","Object","values","y","keys","ele_1","ele_2","ele_3","ele_4","class_name","start_time","end_time","Loading","height","width","getTotalMoney","total_money","getTotalTeacher","getTotalParent","getTotalStudent","ADD_COURSE","EDIT_COURSE","REMOVE_COURSE","CHANGE_COURSE_PENDING_EDIT","CLEAR_COURSE_PENDING_EDIT","REMOVE_COURSE_ALL","INITIAL_COURSE","course","initialCourse","removeCourseAll","addCourse","editCourse","removeCourse","clearSelectedCourse","getTotalCourse","ADD_CONTEST","EDIT_CONTEST","REMOVE_CONTEST","CHANGE_CONTEST_PENDING_EDIT","CLEAR_CONTEST_PENDING_EDIT","REMOVE_CONTEST_ALL","INITIAL_CONTEST","contest","addContest","editContest","removeContest","changeSelectedContest","clearSelectedContest","getTotalContest","UserModificationStatus","Home","promiseInProgress","usePromiseTracker","popup1","setPopup1","onRemovePopup1","numberStudentsCount","parseInt","id_y","numberParentsCount","id_z","numberTeachersCount","id_k","numberCoursesCount","id_l","numberContestsCount","id_m","parseFloat","schedule_time_classes","undefined","Id","Subject","StartTime","EndTime","IsAllDay","access_token","access_token_decode","refresh_token_decode","exp_access_token_decode","exp","exp_refresh_token_decode","now_time","now","onClose","closeOnDocumentClick","NotificationForm","selectedDate","eventSettings","dataSource","fields","isAllDay","startTime","endTime","startHour","endHour","showWeekend","services","Day","Week","WorkWeek","Month","Agenda","toNonAccentVietnamese","str","replace","TeacherList","users","teacher_register_quantifications","userElements","teachers","filter","toLowerCase","includes","teacher","teacher_level","not_approved_now","teacher_id","approveds","selectedUser","scope","firstName","lastName","email","onSelect","Edit","Remove","ADD_NOTIFICATION","REMOVE_NOTIFICATION","addNotification","getTeacher","dateOfBirth","sex","phone","address","parents","createTime","postTeacher","getUserById","putTeacher","TeacherForm","roleNames","deleteUser","TeacherImportForm","csvFile","setCsvFile","file","reader","FileReader","onload","delim","slice","indexOf","rows","headerx","newArray","row","reduce","obj","header","i","processCSV","readAsText","accept","files","REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_ALL","INITIAL_TEACHER_REGISTER_QUANTIFICATION_APPROVED","ADD_TEACHER_REGISTER_QUANTIFICATION_APPROVED","EDIT_TEACHER_REGISTER_QUANTIFICATION_APPROVED","REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED","CHANGE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT","CLEAR_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT","REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_ALL","INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED","ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED","EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED","REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED","CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT","CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT","REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_ALL","INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW","ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW","EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW","REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW","CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT","CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT","teacher_register_quantification","initialTeacherRegisterQuatificationApproved","teacher_register_quantification_approved","removeTeacherRegisterQuatificationApprovedAll","addTeacherRegisterQuatificationApproved","changeSelectedTeacherRegisterQuatificationApproved","clearSelectedTeacherRegisterQuatification","initialTeacherRegisterQuatificationNotApproved","teacher_register_quantification_not_approved","removeTeacherRegisterQuatificationNotApprovedAll","addTeacherRegisterQuatificationNotApproved","editTeacherRegisterQuatificationNotApproved","initialTeacherRegisterQuatificationNotApprovedNow","teacher_register_quantification_not_approved_now","removeTeacherRegisterQuatificationNotApprovedNowAll","addTeacherRegisterQuatificationNotApprovedNow","clearSelectedTeacherRegisterNotQuatificationNow","getTeacherRegisterQuantification","teacher_register_qualification","TeacherRegisterQuantification","reviewer_id","teacher_name","course_id","art_age_name","art_level_name","art_type_name","degree_photo_url","ProductModificationStatus","Teacher","numberItemsCount","popup","setPopup","searchTerm","setSearchTerm","onUserRemove","onRemovePopup","ImportFile","ADD_PRODUCT","EDIT_PRODUCT","REMOVE_PRODUCT","CHANGE_PRODUCT_AMOUNT","CHANGE_PRODUCT_PENDING_EDIT","CLEAR_PRODUCT_PENDING_EDIT","addProduct","product","editProduct","changeSelectedProduct","clearSelectedProduct","HistoryTeach","productElements","RatingStar","rating","rating_star","getCourse","courses","max_participant","num_of_section","image_url","is_enabled","creator_id","art_type_id","art_level_id","checked_tutoral","art_age_id","create_time","update_time","DetailTeacher","checked","setChecked","products","useLocation","course_ids","onProductSelect","StudentList","students","student","getStudent","Student","HistoryStudent","DetailStudent","parent","find","parent_name","onUserSelect","textAlign","margin","backgroundColor","ParentList","getParent","addParent","Parent","HistoryParent","SemesterModificationStatus","DetailParent","SemesterList","semesters","semesterElements","strDate","strDate_1","selectedSemester","year","number","substring","NumberInput","max","isNaN","Number","min","getSemester","strDate_2","initialSemester","SemesterForm","saveUserFn","postSemester","putSemester","LessonModificationStatus","Semester","onSemesterRemove","changeSelectedSemester","deleteSemester","ADD_LESSON","EDIT_LESSON","REMOVE_LESSON","CHANGE_LESSON_PENDING_EDIT","CLEAR_LESSON_PENDING_EDIT","REMOVE_LESSON_ALL","INITIAL_LESSON","lesson","addLesson","editLesson","removeLesson","clearSelectedLesson","LessonList","lessons","lessonElements","selectedLesson","getLesson","lesson_times","initialLesson","LessonForm","postLesson","putLesson","ArtTypeModificationStatus","Lesson","onLessonRemove","changeSelectedLesson","deleteLesson","ADD_ART_TYPE","EDIT_ART_TYPE","REMOVE_ART_TYPE","CHANGE_ART_TYPE_PENDING_EDIT","CLEAR_ART_TYPE_PENDING_EDIT","REMOVE_ART_TYPE_ALL","INITIAL_ART_TYPE","addArtType","art_type","editArtType","removeArtType","clearSelectedArtType","ArtTypeList","art_types","artTypeElements","artTypes","selectedArtType","getArtType","artType","initialArtType","TeachTypeForm","ArtLevelModificationStatus","postArtType","putArtType","ADD_ART_LEVEL","EDIT_ART_LEVEL","REMOVE_ART_LEVEL","CHANGE_ART_LEVEL_PENDING_EDIT","CLEAR_ART_LEVEL_PENDING_EDIT","REMOVE_ART_LEVEL_ALL","INITIAL_ART_LEVEL","addArtLevel","art_level","editArtLevel","removeArtLevel","clearSelectedArtLevel","setModificationStateArtLevel","ArtLevelList","art_levels","artLevelElements","artLevels","selectedArtLevel","getArtLevel","artLevel","initialArtLevel","TeachLevelForm","ArtAgeModificationStatus","postArtLevel","putArtLevel","ArtAgeList","art_ages","artAgeElements","artAges","selectedArtAge","getArtAge","artAge","initialArtAge","postArtAge","putArtAge","CourseModificationStatus","Art","checked1","setChecked1","checked2","setChecked2","checked3","setChecked3","numberArtTypeCount","numberArtLevelCount","numberArtAgeCount","popup2","setPopup2","popup3","setPopup3","onArtTypeSelect","changeSelectedArtType","onArtTypeRemove","onArtLevelSelect","changeSelectedArtLevel","onArtLevelRemove","onArtAgeSelect","changeSelectedArtAge","onArtAgeRemove","onRemovePopup2","onRemovePopup3","TeachTypeList","deleteArtType","TeachAgeList","deleteArtAge","TeachLevelList","deleteArtLevel","CourseNomalList","courseElements","selectedCourse","routeEdit","MyClassModificationStatus","Course","numberCourseCount","onCourseRemove1","course_value","changeSelectedCourse","deleteCourse","SelectInput","ClassForm","selectedProduct","hasExpiryDate","category","Select","ADD_MY_CLASS","EDIT_MY_CLASS","REMOVE_MY_CLASS","CHANGE_MY_CLASS_PENDING_EDIT","CLEAR_MY_CLASS_PENDING_EDIT","REMOVE_MY_CLASS_ALL","INITIAL_MY_CLASS","myclass","clearSelectedMyClass","ClassList","myclasss","myclasses","myclassElements","myClasses","selectedMyClass","class_id","routeViewSchedule","getMyClass","classes","my_class","security_code","user_register_teach_semester","addMyClass","SemesterClassModificationStatus","ADD_SEMESTER_CLASS","EDIT_SEMESTER_CLASS","REMOVE_SEMESTER_CLASS","CHANGE_SEMESTER_CLASS_PENDING_EDIT","CLEAR_SEMESTER_CLASS_PENDING_EDIT","REMOVE_SEMESTER_CLASS_ALL","INITIAL_SEMESTER_CLASS","addSemesterClass","semester_class","editSemesterClass","clearSelectedSemesterClass","setModificationStateSemesterClass","ClassSemesterList","semester_classes","schedule_list","semesterClasses","element","lesson_time","selectedSemesterClass","semester_name","ADD_SCHEDULE","EDIT_SCHEDULE","REMOVE_SCHEDULE","CHANGE_SCHEDULE_PENDING_EDIT","CLEAR_SCHEDULE_PENDING_EDIT","REMOVE_SCHEDULE_ALL","INITIAL_SCHEDULE","getSchedule","schedule","lesson_time_id","semester_classes_id","date_of_week","initialSchedule","addSchedule","getSemesterClass","class_ele","semester_id","registration_time","initialSemesterClass","postSemesterClass","schedule_element","data_1","postSchedule","SelectKeyValueMutiple","SelectKeyValueMutiple2","ClassSemesterForm","semester_classe","listSemesters","listCourses","lesson_time_list","forEach","list_date_of_week","list_lesson","list_lessons","total_date_of_week","listScheduleItemId","setListScheduleItemId","listLessonId","setListLessonId","res_1","date_of_week_obj","lesson_time_obj","hasFormMutipleValueChanged1","is_check","hasFormMutipleValueChanged2","date_of_weeks","putSemesterClass","Array","from","postScheduleClass","SelectKeyValueNotField","format","Class","numberSemesterClassesCount","DateObject","set","day","semesterId","setSemesterId","listSemester","onMyClassSelect","changeSelectedMyClass","onSemesterClassSelect","onSemesterClassRemove","hasFormValueChangedNotFiled","a","multiple","plugins","handleScheduleClass","deleteSemesterClass","number_stuent","studentElements","ADD_INFORMATION_CLASS","EDIT_INFORMATION_CLASS","REMOVE_INFORMATION_CLASS","CHANGE_INFORMATION_CLASS_PENDING_EDIT","CLEAR_INFORMATION_CLASS_PENDING_EDIT","REMOVE_INFORMATION_CLASS_ALL","INITIAL_INFORMATION_CLASS","getInfoMyClass","information_class","number_section","number_student","time_schedule","addInformationClass","DetailClass","information_classes","informationClasses","DetailLesson","frameBorder","allow","allowFullScreen","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","responsive","legend","display","ChartBar","TurnoverList","userRegisterJoinSemesters","userRegisterJoinSemesterElements","completed","userRegisterJoinSemester","selectedUserRegisterJoinSemester","getUserRegisterJoinSemester","DoughnutPieCharts","ArcElement","CourseAnalytis","course_reports","data_list","data_name_list","total_register","labels","datasets","borderColor","borderWidth","PointElement","LineElement","ChartLine","report_users","currentYear","getFullYear","ADD_TURNOVER_NOW","EDIT_TURNOVER_NOW","REMOVE_TURNOVER_NOW","CHANGE_TURNOVER_NOW_PENDING_EDIT","CLEAR_TURNOVER_NOW_PENDING_EDIT","REMOVE_TURNOVER_NOW_ALL","INITIAL_TURNOVER_NOW","ADD_TURNOVER_LAST","EDIT_TURNOVER_LAST","REMOVE_TURNOVER_LAST","CHANGE_TURNOVER_LAST_PENDING_EDIT","CLEAR_TURNOVER_LAST_PENDING_EDIT","REMOVE_TURNOVER_LAST_ALL","INITIAL_TURNOVER_LAST","getTurnOverReport","turnover","report_user_register_semester_now","addTurnoverNow","report_user_register_semester_last","addTurnoverLast","ADD_REPORT_USER","EDIT_REPORT_USER","REMOVE_REPORT_USER","CHANGE_REPORT_USER_PENDING_EDIT","CLEAR_REPORT_USER_PENDING_EDIT","REMOVE_REPORT_USER_ALL","INITIAL_REPORT_USER","getReportUser","report_user","ADD_COURSE_REPORT","EDIT_COURSE_REPORT","REMOVE_COURSE_REPORT","CHANGE_COURSE_REPORT_PENDING_EDIT","CLEAR_COURSE_REPORT_PENDING_EDIT","REMOVE_COURSE_REPORT_ALL","INITIAL_COURSE_REPORT","getCourseReport","report_course","report","course_report","Turnover","turnovers","totalPrice","turnover_now","prev","next","totalUserNew","totalCourse","now_data","last_data","turnover_last","UserAnalytis","REMOVE_REMOVE_LEAVE_ALL","INITIAL_REMOVE_LEAVE","ADD_REMOVE_LEAVE","REMOVE_REMOVE_LEAVE","EDIT_REMOVE_LEAVE","REMOVE_LEAVES_ALL","INITIAL_LEAVES","ADD_LEAVES","EDIT_LEAVES","REMOVE_LEAVES","REMOVE_ACCEPT_LEAVE_ALL","INITIAL_ACCEPT_LEAVE","ADD_ACCEPT_LEAVE","EDIT_ACCEPT_LEAVE","REMOVE_ACCEPT_LEAVE","teacherLeave","removeRemoveTeacherLeaveAll","addRemoveTeacherLeave","teacher_leave","removeAcceptTeacherLeaveAll","addAcceptTeacherLeave","removeLeavesAll","addLeaves","postNotifyDb","postUserReadNotification","putTeacherLeaveStatus","section_number","TeacherRequestList","teacher_leaves","routeChange1","handleTeacherLeave","teacher_leaveElements","leaves","selectedTeacherLeave","section_name","substitute_teacher_name","getTeacherLeave","section_id","substitute_teacher_id","TeacherRequest","getTeacherRegisterQuantificationByTeacherId","approved","not_approved","putTeacherRegisterLevelAdmin","RequestConfirmLevelList","degree_photo","selectedTeacherRegisterQuantification","info","approvedTeacherLevel","notApprovedTeacherLevel","RequestConfirmLevel","CustomUndo","viewBox","points","d","CustomRedo","Size","Quill","import","whitelist","Font","modules","imageResize","parchment","toolbar","container","handlers","undo","this","quill","redo","delay","maxStack","userOnly","formats","QuillToolbar","defaultValue","ImageResize","Editor","reactQuillRef","useRef","React","current","getEditor","clipboard","dangerouslyPasteHTML","setState","EditorToolbar","ref","theme","getValue","ADD_TUTORIAL_TEMPLATE_PAGE","EDIT_TUTORIAL_TEMPLATE_PAGE","REMOVE_TUTORIAL_TEMPLATE_PAGE","CHANGE_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT","CLEAR_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT","REMOVE_TUTORIAL_TEMPLATE_PAGE_ALL","INITIAL_TUTORIAL_TEMPLATE_PAGE","tutorial_template_page","initialTutorialTemplatePage","removeTutorialTemplatePageAll","getTutorialTemplatePageByTutorialTemplateId","TutorialTemplatePage","tutorial_template_id","addTutorialTemplatePage","postTutorialTemplatePage1","tutorialtemplatepage","ContestModificationStatus","LessonPlan","number_of_sum","id_t","contentTutorialSection","setContentTutorialSection","contentTutorialPage","setContentTutorialPage","currentPage","setCurrentPage","numberSection","setNumberSection","setText","total_page","handleSaveStep","value1","textHtml","setTextHtml","handleNextPage","contentPage","content","handleNextSection","contentSection","teaching_form","value2","tutorial","setHtmlClass1","setHtmlClass2","setValue1","setValue2","error1","setError1","htmlClass1","error2","setError2","htmlClass2","getOptions2","handleBackPage","handleRemove","handleNewPage","validClass1","elementValue1","validClass2","elementValue2","padTo2Digits","num","padStart","formatDate","date","getMonth","getDate","join","getHours","getMinutes","getSeconds","ContestIsOnList","contests","toUTCString","date_now","contestElements","strDate1","strDate2","selectedContest","ContestEndList","contest_id","ContestNotOnYetList","getContest","strDate3","total_contest_submission_graded","total_contest_submission","total_register_contest","initialContest","Contest","numberContestEndCount","numberContestOnCount","numberContestNotStartCount","onContestSelectNotOnYetList","onContestSelectOnList","onContestSelectEndList","contest_value","deleteContest","DegreePhoto","Checkbox","postCourse","putCourse","CourseNomalForm","listLevel","listLevels","listMytype","listMytypes","listArtAge","listArtAges","preview","setPreview","setImageAction","url","image","setImage","formData","FormData","append","pictureAsFile","url_image","picturePreview","URL","createObjectURL","postUserGradeContest","putContest","valueTeacher","routeHome","deleteUserGradeContestByContest","ReactSelect","selectedOption","setSelectedOption","isMulti","changeValue","ADD_TUTORIAL_TEMPLATE","EDIT_TUTORIAL_TEMPLATE","REMOVE_TUTORIAL_TEMPLATE","CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT","CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT","REMOVE_TUTORIAL_TEMPLATE_ALL","INITIAL_TUTORIAL_TEMPLATE","getUserGradeContestByContestId","user_grade_contest","teacher_grade_contest","contest_name","initialUserGradeContest","addUserGradeContest","ContestForm","listTeacher","listTeachers","listTeacherGradeContest","user_grade_contests","userGradeContests","listTeacherGradeContests","postContest","lst","setValueTeacher","CourseNomalFormEdit","Account","rolePrivilege","userRole","url_x","parent_ids","ChangePassword","putPassword","pre_password","new_password","TopStudent","user_gradee_contest_submissions","user_grade_contest_submissions","user_register_semesterElements","userGradeContestSubmissions","score","TopTeacher","contest_submissions","Math","round","contest_gradeds","contest_not_gradeds","user_grade_contestElements","ADD_USER_GRADE_CONTEST_SUBMISSION","EDIT_USER_GRADE_CONTEST_SUBMISSION","REMOVE_USER_GRADE_CONTEST_SUBMISSION","CHANGE_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT","CLEAR_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT","REMOVE_USER_GRADE_CONTEST_SUBMISSION_ALL","INITIAL_USER_GRADE_CONTEST_SUBMISSION","getUserGradeContestSubmissionByContestId","user_grade_contest_submission","UserGradeContestSubmission","contest_submission_id","feedback","addUserGradeContestSubmission","ADD_EXERCISE_SUBMISSION_NOT_GRADED","EDIT_EXERCISE_SUBMISSION_NOT_GRADED","REMOVE_EXERCISE_SUBMISSION_NOT_GRADED","CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT","CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT","REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL","INITIAL_EXERCISE_SUBMISSION_NOT_GRADED","ADD_EXERCISE_SUBMISSION_GRADED","EDIT_EXERCISE_SUBMISSION_GRADED","REMOVE_EXERCISE_SUBMISSION_GRADED","CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT","CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT","REMOVE_EXERCISE_SUBMISSION_GRADED_ALL","INITIAL_EXERCISE_SUBMISSION_GRADED","getContestSubmissionByContest","contest_submission","contest_not_graded","addContestNotGraded","contest_graded","addContestGraded","SectionTemplateModificationStatus","ResultContest","scores","ADD_SECTION_TEMPLATE","EDIT_SECTION_TEMPLATE","REMOVE_SECTION_TEMPLATE","CHANGE_SECTION_TEMPLATE_PENDING_EDIT","CLEAR_SECTION_TEMPLATE_PENDING_EDIT","REMOVE_SECTION_TEMPLATE_ALL","INITIAL_SECTION_TEMPLATE","section_template","initialSectionTemplate","removeSectionTemplateAll","addSectionTemplate","setModificationStateSectionTemplate","SectionTemplateList","section_templates","tutorial_templates","tutorial_template_pages","section_templateElements","sectionTemplates","sort","b","selectedSectionTemplate","tutorial_template_page_list","tutorialTemplates","section_template_id","tutorialTemplatePages","getSectionTemplateByCourseId","SectionTemplate","getTutorialTemplate","tutorial_template","TutorialTemplate","initialTutorialTemplate","addTutorialTemplate","getTutorialTemplatePage","SectionTemplates","putTutorialTemplatePage","deleteTutorialTemplatePage","putTutorialTemplatePage1","putSectionTemplate","getSectionTemplate","SectionTemplateForm","list_description","initial_text","id_h","tutorial_name","totalPage","setTotalPage","checkCreateNew","setCheckCreateNew","checkAfterCreate","setCheckAfterCreate","warning","k","handleSave","TeacherRegisterQuantificationModificationStatus","TopCardLevel","stopPropagation","TeacherRegisterQuantificationList","teacherRegisterQuantificationElements","TeacherHome","teacherRegisterQuantifications","numberApprovedCount","numberNotApprovedNowCount","teacherRegisterQuantification","ScheduleClass","time_schedules","timeSchedules","TopCardCourseTeacherNew","CourseTeacherNotRegisterList","course_teacher_new","TopCardCourseTeacher","total_registed","ADD_COURSE_TEACHER_NEW","EDIT_COURSE_TEACHER_NEW","REMOVE_COURSE_TEACHER_NEW","CHANGE_COURSE_TEACHER_NEW_PENDING_EDIT","CLEAR_COURSE_TEACHER_NEW_PENDING_EDIT","REMOVE_COURSE_TEACHER_NEW_ALL","INITIAL_COURSE_TEACHER_NEW","getCourseTeacherNew","student_registered_id","student_registered_name","initialCourseTeacherNew","addCourseTeacherNew","CourseTeacher","ADD_TIME_SCHEDULE_TEACHER","EDIT_TIME_SCHEDULE_TEACHER","REMOVE_TIME_SCHEDULE_TEACHER","CHANGE_TIME_SCHEDULE_TEACHER_PENDING_EDIT","CLEAR_TIME_SCHEDULE_TEACHER_PENDING_EDIT","REMOVE_TIME_SCHEDULE_TEACHER_ALL","INITIAL_TIME_SCHEDULE_TEACHER","getScheduleTeacher","time_schedule_teacher","schedule_time","addTimeScheduleTeacher","ScheduleTeacher","time_schedule_teacherss","time_schedule_teachers","timeScheduleTeachers","ADD_REGISTER_SUCCESSFULL_COURSE","EDIT_REGISTER_SUCCESSFULL_COURSE","REMOVE_REGISTER_SUCCESSFULL_COURSE","CHANGE_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT","CLEAR_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT","REMOVE_REGISTER_SUCCESSFULL_COURSE_ALL","INITIAL_REGISTER_SUCCESSFULL_COURSE","ADD_NOT_REGISTER_COURSE","EDIT_NOT_REGISTER_COURSE","REMOVE_NOT_REGISTER_COURSE","CHANGE_NOT_REGISTER_COURSE_PENDING_EDIT","CLEAR_NOT_REGISTER_COURSE_PENDING_EDIT","REMOVE_NOT_REGISTER_COURSE_ALL","INITIAL_NOT_REGISTER_COURSE","removeRegisterSuccessfullCourseAll","addRegisterSuccessfullCourse","getCourseTeacher","register_successfull_courses","semster_class_id","registration_deadline","initialRegisterSuccessfullCourse","not_register_courses","initialNotRegisterCourse","addNotRegisterCourse","CourseTeacherDetail","id_a","description_course","id_c","id_d","id_e","id_f","semester_class_name","id_n","handleRegister","postRegisterTeachSemester","success","dangerouslySetInnerHTML","__html","TeacherLevelForm","teacher_register_not_approved_nows","teacher_register_not_approved","listCourse","postTeaherLevel","putTeacherRegisterLevel","TeacherLevelList","TeacherLevelNotApprovedNowList","getCourseNewForTeacher","ClassTeacherModificationStatus","TeacherLevel","numberNotApprovedCount","not_approves","onTeacherRegisterQuantificationSelect","TeacherLevelDetail","ADD_DOING_CLASS","EDIT_DOING_CLASS","REMOVE_DOING_CLASS","CHANGE_DOING_CLASS_PENDING_EDIT","CLEAR_DOING_CLASS_PENDING_EDIT","REMOVE_DOING_CLASS_ALL","INITIAL_DOING_CLASS","ADD_DONE_CLASS","EDIT_DONE_CLASS","REMOVE_DONE_CLASS","CHANGE_DONE_CLASS_PENDING_EDIT","CLEAR_DONE_CLASS_PENDING_EDIT","REMOVE_DONE_CLASS_ALL","INITIAL_DONE_CLASS","ClassDoingList","class_teachers","class_doing","class_teacher","total_student","ClassDoneList","class_done","getClassTeacher","classes_done","classes_doing","initialDoneClass","addDoneClass","initialDoinglClass","addDoinglClass","ClassTeacher","numberClassDoingCount","numberClassDoneCount","onClassTeacherSelect","changeSelectedDoinglClass","NotificationClassTeacher","postNotificationByClass","parent_id","ClassTeacherDetail","ADD_CONTEST_TEACHER_OPENING","EDIT_CONTEST_TEACHER_OPENING","REMOVE_CONTEST_TEACHER_OPENING","CHANGE_CONTEST_TEACHER_OPENING_PENDING_EDIT","CLEAR_CONTEST_TEACHER_OPENING_PENDING_EDIT","REMOVE_CONTEST_TEACHER_OPENING_ALL","INITIAL_CONTEST_TEACHER_OPENING","ADD_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER","EDIT_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER","REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER","CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT","CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT","REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_ALL","INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER","ADD_CONTEST_TEACHER_END","EDIT_CONTEST_TEACHER_END","REMOVE_CONTEST_TEACHER_END","CHANGE_CONTEST_TEACHER_END_PENDING_EDIT","CLEAR_CONTEST_TEACHER_END_PENDING_EDIT","REMOVE_CONTEST_TEACHER_END_ALL","INITIAL_CONTEST_TEACHER_END","ADD_CONTEST_TEACHER_NOT_OPEN_NOW","EDIT_CONTEST_TEACHER_NOT_OPEN_NOW","REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW","CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT","CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT","REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_ALL","INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW","initialContestTeacherOpening","removeContestTeacherOpeningAll","addContestTeacherOpening","removeContestTeacherNotOpenNowNotTeacherAll","initialContestTeacherEnd","removeContestTeacherEndAll","addContestTeacherEnd","initialContestTeacherNotOpenNow","removeContestTeacherNotOpenNowAll","addContestTeacherNotOpenNow","getContestTeacher","contest_opening","contest_not_open_now_not_teacher","initialContestTeacherNotOpenNowNotTeacher","addContestTeacherNotOpenNowNotTeacher","contest_end","contest_not_open_now","ContestTeacherNotDoingList","contest_teachers","contest_teacher","onChangeRoute","ContestTeacherDoingList","ContestTeacherEndList","ContestTeacher","numberContestOpeningCount","numberContestNotOpenNowCount","ContestEndTeacherList","ADD_EXERCISE_NOT_SUBMIT","EDIT_EXERCISE_NOT_SUBMIT","REMOVE_EXERCISE_NOT_SUBMIT","REMOVE_EXERCISE_NOT_SUBMIT_ALL","INITIAL_EXERCISE_NOT_SUBMIT","ADD_EXERCISE_SUBMITED_NOT_GRADE","EDIT_EXERCISE_SUBMITED_NOT_GRADE","REMOVE_EXERCISE_SUBMITED_NOT_GRADE","REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL","INITIAL_EXERCISE_SUBMITED_NOT_GRADE","ADD_EXERCISE_SUBMITED_GRADED","EDIT_EXERCISE_SUBMITED_GRADED","REMOVE_EXERCISE_SUBMITED_GRADED","REMOVE_EXERCISE_SUBMITED_GRADED_ALL","INITIAL_EXERCISE_SUBMITED_GRADED","exercise_student","removeExerciseNotSubmitAll","addExerciseNotSubmit","removeExerciseSubmitNotGradeAll","addExerciseSubmitNotGrade","getExerciseForClassStudent","exercise_not_submit","exercise","level_id","exercise_submission_id","time_submit","deadline","level_name","exercise_submitted","getParentById","ADD_STUDENT_LEAVE_NOT_APPROVED_NOW","EDIT_STUDENT_LEAVE_NOT_APPROVED_NOW","REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW","CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT","CLEAR_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT","REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW_ALL","INITIAL_STUDENT_LEAVE_NOT_APPROVED_NOW","ADD_STUDENT_LEAVE_APPROVED","EDIT_STUDENT_LEAVE_APPROVED","REMOVE_STUDENT_LEAVE_APPROVED","REMOVE_STUDENT_LEAVE_APPROVED_ALL","INITIAL_STUDENT_LEAVE_APPROVED","ADD_STUDENT_LEAVE_NOT_APPROVED","EDIT_STUDENT_LEAVE_NOT_APPROVED","REMOVE_STUDENT_LEAVE_NOT_APPROVED","REMOVE_STUDENT_LEAVE_NOT_APPROVED_ALL","INITIAL_STUDENT_LEAVE_NOT_APPROVED","student_leave","removeStudentLeaveNotApprovedNowAll","addStudentLeaveNotApprovedNow","removeStudentLeaveApprovedAll","addStudentLeaveApproved","removeStudentLeaveNotApprovedAll","addStudentLeaveNotApproved","getStudentLeaveByClassAndStudent","ADD_USER_GRADE_EXERCISE_SUBMISSION","EDIT_USER_GRADE_EXERCISE_SUBMISSION","REMOVE_USER_GRADE_EXERCISE_SUBMISSION","CHANGE_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT","CLEAR_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT","REMOVE_USER_GRADE_EXERCISE_SUBMISSION_ALL","INITIAL_USER_GRADE_EXERCISE_SUBMISSION","user_grade_exercise_submission","removeUserGradeExerciseSubmissionAll","addUserGradeExerciseSubmission","getUserGradeExerciseByStudentAndClass","UserGradeExerciseSubmission","exercise_name","ManageStudent","exercise_students","student_leaves","user_grade_exercise_submissions","numberSubmittedCount","exercise_submitted_not_grade","exercise_submitted_graded","numberNotSubmitNowCount","numberStudentLeaveCount","acceptLeaves","list_score_user_grade_exercise","list_name_user_grade_exercise","ExerciseSectionList","ExerciseStudentList","DetailExerciseStudent","image_url_exercise","percentage","exercise_submission","removeExerciseNotGradedAll","addExerciseNotGraded","removeExerciseGradedAll","addExerciseGraded","getExerciseSubmissionByClass","exercise_not_graded","exercise_id","exercise_graded","ADD_SECTION","EDIT_SECTION","REMOVE_SECTION","CHANGE_SECTION_PENDING_EDIT","CLEAR_SECTION_PENDING_EDIT","REMOVE_SECTION_ALL","INITIAL_SECTION","section","removeSectionAll","addSection","getSectionByClass","Section","teach_form","recording","initialSection","getTeacherLeaveByTeacher","TeacherLeaveModificationStatus","RequestOffSectionForm","teacherleaves","sections","listSections","postTeacherLeave","classes_id","DetailClassTeacher","tutorials","tutorial_pages","exercise_submissions","exercise_not_gradeds","total_time","start_time_0","end_time_0","hour_start","minus_tart","sercon_start","hour_end","minus_end","sercon_end","toDateString","count","postUserGradeExercise","getExerciseSubmissionByExercise","GradeExamTeacher","setCount","setImageUrl","setStudentName","setStudentId","setExerciseSubmissionId","setTimeSubmit","image_url_","student_name_","time_submit_","student_id_","exercise_submission_id_","getUserGradeExerciseByExerciseAndClass","ScoreExamList","ResultGradeExamTeacher","Infinity","class_id_","AnalytisResultGradeExamTeacher","ADD_EXERCISE","EDIT_EXERCISE","REMOVE_EXERCISE","CHANGE_EXERCISE_PENDING_EDIT","CLEAR_EXERCISE_PENDING_EDIT","REMOVE_EXERCISE_ALL","INITIAL_EXERCISE","addExercise","editExercise","getExerciseBySection","Exercise","initialExercise","ExerciseModificationStatus","ADD_EXERCISE_LEVEL","EDIT_EXERCISE_LEVEL","REMOVE_EXERCISE_LEVEL","CHANGE_EXERCISE_LEVEL_PENDING_EDIT","CLEAR_EXERCISE_LEVEL_PENDING_EDIT","REMOVE_EXERCISE_LEVEL_ALL","INITIAL_EXERCISE_LEVEL","getExerciseLevel","exercise_level","ExerciseLevel","weight","addExerciseLevel","getSectionById","ExerciseForm","exercises","exercise_levels","selectedExercise","listExerciseLevel","listExerciseLevels","postExercise","ADD_TUTORIAL_PAGE","EDIT_TUTORIAL_PAGE","REMOVE_TUTORIAL_PAGE","REMOVE_TUTORIAL_PAGE_BY_NUMBER","CHANGE_TUTORIAL_PAGE_PENDING_EDIT","CLEAR_TUTORIAL_PAGE_PENDING_EDIT","REMOVE_TUTORIAL_PAGE_ALL","INITIAL_TUTORIAL_PAGE","tutorial_page","initialTutorialPage","removeTutorialPageAll","addTutorialPage","editTutorialPage","removeTutorialPage","getTutorialPageBySection","TutorialPage","tutorial_id","ADD_TUTORIAL","EDIT_TUTORIAL","REMOVE_TUTORIAL","CHANGE_TUTORIAL_PENDING_EDIT","CLEAR_TUTORIAL_PENDING_EDIT","REMOVE_TUTORIAL_ALL","INITIAL_TUTORIAL","getTutorialBySection","creator_name","addTutorial","SectionTeacher","link_jisti","routeChange4","routeChange5","tutorialPages","routeChange3","getTutorialPageByTutorialId","postUserRegisterTutorial","postUserRegisterTutorialPageToast","user_register_tutorial_id","postUserRegisterTutorialPage","EditSectionTeacher","selectedSection","currentPageOld","setCurrentPageOld","ViewSectionTeacher","TutorialPages","setChangeCount","setChangeCountBack","StudentLeaveList","handleStudentLeave","putStudentLeaveStatus","TeacherLeaveList","updateStatusTeacherLeave","getStudentLeaveByTeacher","RequestTeacher","numberTeacherRegisterSuccessfullCount","numberTeacherNotRegisterCount","ExamTeacher","exercise_gradeds","exercise_description","exercise_description_","exercise_name_","exercise_level_name","exercise_level_name_","StudentLeaveDetail","detail_resson","DetailTeacherRequest","ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW","EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW","REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW","CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT","CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT","REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_ALL","INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW","ADD_USER_REGISTER_TUTORIAL_APPROVED","EDIT_USER_REGISTER_TUTORIAL_APPROVED","REMOVE_USER_REGISTER_TUTORIAL_APPROVED","REMOVE_USER_REGISTER_TUTORIAL_APPROVED_ALL","INITIAL_USER_REGISTER_TUTORIAL_APPROVED","ADD_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE","EDIT_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE","REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE","REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_ALL","INITIAL_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE","ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED","EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED","REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED","REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_ALL","INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED","user_register_tutorial","getUserRegisterTutorial","UserRegisterTutorial","addUserRegisterTutorialApproved","initialUserRegisterTutorialNotApprovedNow","addUserRegisterTutorialNotApprovedNow","initialUserRegisterTutorialApprovedToTutorialTemplate","addUserRegisterTutorialApprovedToTutorialTemplate","initialUserRegisterTutorialNotApproved","addUserRegisterTutorialNotApproved","putUserRegisterTutorial","TutorialEditRequestList","user_register_tutorials","user_register_tutorial_not_approved_nows","selectedUserRegisterTutorial","approvedTutorial","notApprovedTutorial","UserRegisterTutorialEditRequestList","user_register_tutorial_approveds","TutorialEditRequest","numberItemsApprovedCount","ContestDetailTeacher","numberNotGradedCount","numberGradedCount","contest_description","contest_description_","contest_name_","art_type_contest","art_age_contest","postUserGradeContestSubmission","GradeContestTeacher","setContestSubmissionId","contest_submission_id_","ScoreContestList","childs","child_id","getStudentByParent","ScoreContestListStudent","ResultGradeContestTeacher","AnalytisResultGradeContestTeacher","DetailContestTeacher","NotificationDetail","ADD_NOTIFY_DB","EDIT_NOTIFY_DB","REMOVE_NOTIFY_DB","CHANGE_NOTIFY_DB_PENDING_EDIT","CLEAR_NOTIFY_DB_PENDING_EDIT","REMOVE_NOTIFY_DB_ALL","INITIAL_NOTIFY_DB","getNotifyDb","notificationDb","notify_db","Notification","notificationDbs","notify_dbs","o","data_readed","TopCardAccount","fullname","birthday","AccountChildList","accountChildElements","AccountChildForm","postUser","getScheduleTimeByParent","xxas","x_1","y_1","ele_5","ele_6","ele_7","ParentHome","numberChildCount","totalMoney","ContentHeader","styled","correct","pickedColor","Header","MotionBlock","motion","div","visible","ColorBlock","checkColor","setVisibility","transition","duration","whileHover","scale","rotate","whileTap","borderRadius","GameSection","ColorGrid","Game","colors","difficulty","handleCorrect","handleGameColors","handleMessage","handleButtonMessage","divColor","correctColor","changeColors","gamesWonArr","averageDifficultyArr","PageBase","ScoreboardContainer","ScoreboardTitle","h1","FlexWrap","StatTitle","p","StatValue","Scoreboard","gamesWon","setGamesWon","averageDifficulty","setAverageDifficulty","wins","avgDifficulty","difficultyMode","mode","arr","v","pop","init","difficultyMap","useMemo","scoreBoardStats","stat","MenuBar","MenuButton","button","DifficultyButton","buttonDifficulty","gameDifficulty","Message","span","GuessColor","setDifficulty","gameColors","setGameColors","setPickedColor","setCorrect","setMessage","playButtonMessage","setPlayButtonMessage","randomColor","r","floor","random","g","generateRandomColors","useCallback","randomIndex","resetGame","setupLocalStorage","border","ADD_DOING_COURSE","EDIT_DOING_COURSE","REMOVE_DOING_COURSE","CHANGE_DOING_COURSE_PENDING_EDIT","CLEAR_DOING_COURSE_PENDING_EDIT","REMOVE_DOING_COURSE_ALL","INITIAL_DOING_COURSE","ADD_DONE_COURSE","EDIT_DONE_COURSE","REMOVE_DONE_COURSE","CHANGE_DONE_COURSE_PENDING_EDIT","CLEAR_DONE_COURSE_PENDING_EDIT","REMOVE_DONE_COURSE_ALL","INITIAL_DONE_COURSE","getCourseParent","course_parent","courses_registed","courses_not_registed_now","classes_parent","addCourseRegisted","addCourseNotRegistedNow","CourseParent","course_teachers","course_parents","numberParentRegisterSuccessfullCount","ADD_CONTEST_STUDENT_OPENING","EDIT_CONTEST_STUDENT_OPENING","REMOVE_CONTEST_STUDENT_OPENING","CHANGE_CONTEST_STUDENT_OPENING_PENDING_EDIT","CLEAR_CONTEST_STUDENT_OPENING_PENDING_EDIT","REMOVE_CONTEST_STUDENT_OPENING_ALL","INITIAL_CONTEST_STUDENT_OPENING","ADD_CONTEST_STUDENT_NEW","EDIT_CONTEST_STUDENT_NEW","REMOVE_CONTEST_STUDENT_NEW","CHANGE_CONTEST_STUDENT_NEW_PENDING_EDIT","CLEAR_CONTEST_STUDENT_NEW_PENDING_EDIT","REMOVE_CONTEST_STUDENT_NEW_ALL","INITIAL_CONTEST_STUDENT_NEW","ADD_CONTEST_STUDENT_END","EDIT_CONTEST_STUDENT_END","REMOVE_CONTEST_STUDENT_END","CHANGE_CONTEST_STUDENT_END_PENDING_EDIT","CLEAR_CONTEST_STUDENT_END_PENDING_EDIT","REMOVE_CONTEST_STUDENT_END_ALL","INITIAL_CONTEST_STUDENT_END","ADD_CONTEST_STUDENT_NOT_OPEN_NOW","EDIT_CONTEST_STUDENT_NOT_OPEN_NOW","REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW","CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT","CLEAR_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT","REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW_ALL","INITIAL_CONTEST_STUDENT_NOT_OPEN_NOW","initialContestStudentOpening","removeContestStudentOpeningAll","addContestStudentOpening","initialContestStudentNew","removeContestStudentNewAll","addContestStudentNew","initialContestStudentEnd","removeContestStudentEndAll","addContestStudentEnd","initialContestStudentNotOpenNow","removeContestStudentNotOpenNowAll","addContestStudentNotOpenNow","getContestStudentByParent","contest_new","ContestStudentNotOpenNowList","contest_students","contest_student","ContestStudentDoingList","ContestStudentEndList","ContestParent","numberNotOpenNowCount","ScheduleParent","getScheduleTimeByChild","ScheduleStudent","getContestStudentByStudent","ContestStudentDoingList1","ContestStudent","getTotalCourseForStudent","getTotalContestForStudent","StudentHome","total_contest_student","total_course_student","getContestByStudent","getClassesStudent","classes_student","user_register_join_semester_id","total_section","ManageChild","classes_students","listClasses","hasFormValueChangedNotFiled1","datax","FormReviewClass","ClassesParentModificationStatus","review_start","review","setRating","rate","ratingValue","showTooltip","tooltipArray","ManageClassesDone","getClassesParent","classes_parents","ClassParent","onClassesParentSelect","ManageClassesDoing","TopCardContest","ContestList","contest_parent_new","TopCardCourseParentNew","CourseNewList","course_parent_news","ADD_COURSE_PARENT_NEW","EDIT_COURSE_PARENT_NEW","REMOVE_COURSE_PARENT_NEW","CHANGE_COURSE_PARENT_NEW_PENDING_EDIT","CLEAR_COURSE_PARENT_NEW_PENDING_EDIT","REMOVE_COURSE_PARENT_NEW_ALL","INITIAL_COURSE_PARENT_NEW","getCourseParentNew","course_parent_new","initialCourseParentNew","addCourseParentNew","ADD_CONTEST_PARENT_NEW","EDIT_CONTEST_PARENT_NEW","REMOVE_CONTEST_PARENT_NEW","CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT","CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT","REMOVE_CONTEST_PARENT_NEW_ALL","INITIAL_CONTEST_PARENT_NEW","getContestParentNew","initialContestParentNew","addContestParentNew","DiscoveryParent","getSemesterClassNew","ADD_CART","EDIT_CART","REMOVE_CART","INCREASE_QUANTITY","DECREASE_QUANTITY","CHANGE_CART_PENDING_EDIT","CLEAR_CART_PENDING_EDIT","addCart","cart","postUserRegisterJoinSemester","SemesterClassDetail","id_b","id_nx","quantity","ConestDetailStudent","description_contest","postUserRegisterContest","CartForm","removeCart","colSpan","handlePayment","DetailContestStudent","submistions","ADD_ATTENDANCE","EDIT_ATTENDANCE","REMOVE_ATTENDANCE","CHANGE_ATTENDANCE_PENDING_EDIT","CLEAR_ATTENDANCE_PENDING_EDIT","REMOVE_ATTENDANCE_ALL","INITIAL_ATTENDANCE","attendance","initialAttendance","removeAttendanceAll","addAttendance","putAttendance","getAttendance","UserAttendance","AttendanceList","attendances","getAttendanceBySection","ClassesStudentModificationStatus","Attendance","ClassStudent","onClassesStudentSelect","ADD_COURSE_NEW","EDIT_COURSE_NEW","REMOVE_COURSE_NEW","CHANGE_COURSE_NEW_PENDING_EDIT","CLEAR_COURSE_NEW_PENDING_EDIT","REMOVE_COURSE_NEW_ALL","INITIAL_COURSE_NEW","getCourseNew","course_new","initialCourseNew","addCourseNew","TopCardCourseNew","StudentLeaveModificationStatus","course_news","DiscoveryStudent","SemesterClassDetailStudent","postStudentLeave","getStudentLeave","studentleaves","selectedStudentLeave","listStudent","listStudents","DetailClassStudent","numberSectionCount","tutorial_page_list","routeChange2","routeChangeVIewExerciseSubmission","getExerciseForSectionStudent","SectionStudent","class_students","ViewSectionStudent","handleChecked","putAttendanceByUserAndSection","getUserGradeExerciseByExerciseAndStudent","DetailExerciseStudent1","FormSubmit","postExerciseSubmission","FormSubmitContestStudent","postContestSubmission","ScheduleClassStudent","getExerciseSubmissionById","ViewExerciseSubmission","ADD_NOT_PAYED_NOW","EDIT_NOT_PAYED_NOW","REMOVE_NOT_PAYED_NOW","CHANGE_NOT_PAYED_NOW_PENDING_EDIT","CLEAR_NOT_PAYED_NOW_PENDING_EDIT","REMOVE_NOT_PAYED_NOW_ALL","INITIAL_NOT_PAYED_NOW","ADD_PAYED","EDIT_PAYED","REMOVE_PAYED","REMOVE_PAYED_ALL","INITIAL_PAYED","ADD_NOT_PAYED","EDIT_NOT_PAYED","REMOVE_NOT_PAYED","REMOVE_NOT_PAYED_ALL","INITIAL_NOT_PAYED","getSemesterClassStudent","semester_class_student","addSemesterClassStudentPayed","addSemesterClassStudentNotPayed","addSemesterClassStudentNotPayedNow","TopCardSemesterClassStudent","SemesterClassList","payed","teacherRegisterQuantificationElements1","not_payed","teacherRegisterQuantificationElements2","not_payed_now","SemesterClassStudentNew","getInfoFinalCourse","final_grade","ADD_CLASS_HAS_REGISTER_JOIN_SEMESTER","EDIT_CLASS_HAS_REGISTER_JOIN_SEMESTER","REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER","CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT","CLEAR_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT","REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER_ALL","INITIAL_CLASS_HAS_REGISTER_JOIN_SEMESTER","getInforClassHasRegisterJoinSemester","class_has_register_join_semester","student_feedback","teacher_feedback","review_star","addClassHasRegisterJoinSemester","ReivewClassDone","class_has_register_join_semesters","ExerciseSectionList1","ExerciseStudentList1","ReviewStart","putClassHasRegisterJoinSemester","TopCardSemesterClassParent","semester_class_parent","getSemesterClassByParentCourse","addSemesterClassParentPayed","addSemesterClassParentNotPayed","addSemesterClassParentNotPayedNow","SemesterClassParentNew","TopCardSemesterClassTeacher","semester_class_teacher","semester_class_teachers","ADD_SEMESTER_CLASS_TEACHER","EDIT_SEMESTER_CLASS_TEACHER","REMOVE_SEMESTER_CLASS_TEACHER","CHANGE_SEMESTER_CLASS_TEACHER_PENDING_EDIT","CLEAR_SEMESTER_CLASS_TEACHER_PENDING_EDIT","REMOVE_SEMESTER_CLASS_TEACHER_ALL","INITIAL_SEMESTER_CLASS_TEACHER","getSemesterClassNewByTeacherCourse","addSemesterClassTeacher","SemesterClassTeacherNew","Routers","CourseStudent","fontSize","aria-controls","aria-label","marginRight","fontWeight","Footer","LandingPage","marginLeft","marginTop","ForgotPassword","postResetPassword","UpdatePassword","postSavePassword","newPassword","RegisterForm","postRegister","PaymentSuccessfull","queryString","location","search","URLSearchParams","get","postStatusUserRegisterJoinSemester","aria-hidden","App","Boolean","match","initialState","productsReducer","action","foundIndex","findIndex","pr","notificationReducer","admins","userReducer","ADD_ORDER","orders","orderReducer","order","accountReducer","semestersReducer","lessonsReducer","ScheduleModificationStatus","selectedSchedule","schedulesReducer","ScheduleItemModificationStatus","ADD_SCHEDULE_ITEM","EDIT_SCHEDULE_ITEM","REMOVE_SCHEDULE_ITEM","CHANGE_SCHEDULE_ITEM_PENDING_EDIT","CLEAR_SCHEDULE_ITEM_PENDING_EDIT","REMOVE_SCHEDULE_ITEM_ALL","INITIAL_SCHEDULE_ITEM","selectedScheduleItem","schedule_items","schedule_itemsReducer","schedule_item","artTypesReducer","artLevelsReducer","artAgesReducer","coursesReducer","contestsReducer","sectionTemplatesReducer","TutorialTemplateModificationStatus","selectedTutorialTemplate","tutorialTemplatesReducer","UserGradeContestModificationStatus","selectedUserGradeContest","userGradeContestsReducer","TutorialTemplatePageModificationStatus","selectedTutorialTemplatePage","tutorialTemplatePagesReducer","removeLeaves","teacherLeaveReducer","leavess","accept_leaves","remove_leaves","studentLeaveReducer","myClassesReducer","teacher_register_quantificationsReducer","InformationClassModificationStatus","not_approveds","selectedInformationClass","informationClassesReducer","TimeScheduleModificationStatus","selectedTimeSchedule","time_schedulesReducer","CourseTeacherModificationStatus","selectedCourseTeacher","courseTeachersReducer","TimeScheduleTeacherModificationStatus","selectedTimeScheduleTeacher","time_schedule_teachersReducer","selectedClassTeacher","classTeachersReducer","ContestTeacherModificationStatus","selectedContestTeacher","contestTeachersReducer","semesterClassesReducer","anonymousNotificationsReducer","SectionModificationStatus","sectionsReducer","TutorialPageModificationStatus","selectedTutorialPage","tutorialPagesReducer","exercisesReducer","ExerciseSubmissionModificationStatus","selectedExerciseSubmission","exerciseSubmissionsReducer","TurnoverModificationStatus","selectedTurnover","turnoversReducer","ReportUserModificationStatus","selectedReportUser","report_usersReducer","CourseReportModificationStatus","selectedCourseReport","course_reportsReducer","ExerciseLevelModificationStatus","selectedExerciseLevel","exercise_levelsReducer","UserGradeExerciseSubmissionModificationStatus","selectedUserGradeExerciseSubmission","user_grade_exercise_submissionsReducer","ExerciseStudentModificationStatus","selectedExerciseStudent","exerciseStudentReducer","TutorialModificationStatus","exercise_not_submits","accept_exercise_not_submit","remove_exercise_not_submit","selectedTutorial","UserGradeContestSubmissionModificationStatus","selectedUserGradeContestSubmission","userGradeContestSubmissionsReducer","UserRegisterTutorialPageModificationStatus","ADD_USER_REGISTER_JOIN_SEMESTER","EDIT_USER_REGISTER_JOIN_SEMESTER","REMOVE_USER_REGISTER_JOIN_SEMESTER","CHANGE_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT","CLEAR_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT","REMOVE_USER_REGISTER_JOIN_SEMESTER_ALL","INITIAL_USER_REGISTER_JOIN_SEMESTER","selectedUserRegisterTutorialPage","user_register_tutorial_pages","user_register_tutorial_pagesReducer","UserRegisterTutorialModificationStatus","user_register_tutorial_page","user_register_tutorial_not_approveds","user_register_tutorial_approved_to_tutorial_templates","userRegisterTutorialReducer","ContestSubmissionModificationStatus","selectedContestSubmission","contestSubmissionsReducer","ScheduleTimeClassModificationStatus","selectedScheduleTimeClass","schedule_time_classsReducer","NotifyDbModificationStatus","schedule_time_classs","selectedNotifyDb","notify_dbsReducer","UserReadNotificationModificationStatus","selectedUserReadNotification","userReadNotificationsReducer","NotifyModificationStatus","selectedNotify","notifysReducer","selectedClassesStudent","classesStudentsReducer","selectedClassesParent","classesParentsReducer","CourseParentModificationStatus","selectedCourseParent","courseParentsReducer","ContestStudentModificationStatus","selectedContestStudent","contestStudentsReducer","CartModificationStatus","selectedCart","carts","cartReducer","AttendanceModificationStatus","selectedAttendance","attendancesReducer","ProfileModificationStatus","selectedProfile","profilesReducer","UserRegisterJoinSemesterModificationStatus","user_register_join_semestersReducer","CourseStudentModificationStatus","selectedCourseStudent","courseStudentsReducer","CourseNewModificationStatus","course_student","selectedCourseNew","course_newsReducer","SemesterClassStudentModificationStatus","selectedSemesterClassStudent","semesterClassStudentReducer","ClassHasRegisterJoinSemesterModificationStatus","accept_not_payed_now","remove_not_payed_now","selectedClassHasRegisterJoinSemester","class_has_register_join_semestersReducer","CourseParentNewModificationStatus","selectedCourseParentNew","course_parent_newsReducer","SemesterClassParentModificationStatus","selectedSemesterClassParent","semesterClassParentReducer","ContestParentNewModificationStatus","selectedContestParentNew","contest_parent_newsReducer","CourseTeacherNewModificationStatus","selectedCourseTeacherNew","course_teacher_newsReducer","SemesterClassTeacherModificationStatus","selectedSemesterClassTeacher","semester_class_teachersReducer","rootReducers","combineReducers","exerciseStudentsReducer","tutorialsReducer","classes_studentsReducer","course_students","store","createStore","applyMiddleware","thunkMiddleware","subscribe","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.531dd5d9.chunk.js","sourcesContent":["import * as crypto from 'crypto';\r\n\r\nexport function postMomo(total_price, ids) {\r\n    //https://developers.momo.vn/#/docs/en/aiov2/?id=payment-method\r\n    //parameters\r\n    var partnerCode = \"MOMOXF6D20220917\";\r\n    var accessKey = \"HPMTKkWVbUl3tgTL\";\r\n    var secretkey = \"PBPj1LDu4cIIHE0FKVKJv1B4sRsOT7LU\";\r\n    var requestId = partnerCode + new Date().getTime();\r\n    var orderId = requestId;\r\n    var orderInfo = \"pay with MoMo\";\r\n    var ipnUrl = \"http://localhost:8080/api/v1/user-register-join-semester/payment?ids=\" + ids.toString();\r\n\r\n    console.log(\"ipnUrl\", ipnUrl)\r\n    var redirectUrl = \"http://localhost:3000/payment-successfull?ids=\" + ids.toString();\r\n    // var ipnUrl = redirectUrl = \"https://webhook.site/454e7b77-f177-4ece-8236-ddf1c26ba7f8\";\r\n    var amount = 1000;\r\n    var requestType = \"captureWallet\"\r\n    var extraData = \"\"; //pass empty value if your merchant does not have stores\r\n\r\n    //before sign HMAC SHA256 with format\r\n    //accessKey=$accessKey&amount=$amount&extraData=$extraData&ipnUrl=$ipnUrl&orderId=$orderId&orderInfo=$orderInfo&partnerCode=$partnerCode&redirectUrl=$redirectUrl&requestId=$requestId&requestType=$requestType\r\n    var rawSignature = \"accessKey=\" + accessKey + \"&amount=\" + amount + \"&extraData=\" + extraData + \"&ipnUrl=\" + ipnUrl + \"&orderId=\" + orderId + \"&orderInfo=\" + orderInfo + \"&partnerCode=\" + partnerCode + \"&redirectUrl=\" + redirectUrl + \"&requestId=\" + requestId + \"&requestType=\" + requestType \r\n    //puts raw signature\r\n    console.log(\"--------------------RAW SIGNATURE----------------\")\r\n    console.log(rawSignature)\r\n    var signature = crypto.createHmac('sha256', secretkey)\r\n        .update(rawSignature)\r\n        .digest('hex');\r\n    console.log(\"--------------------SIGNATURE----------------\")\r\n    console.log(signature)\r\n\r\n    //json object send to MoMo endpoint\r\n    const requestBody = JSON.stringify({\r\n        partnerCode: partnerCode,\r\n        accessKey: accessKey,\r\n        requestId: requestId,\r\n        amount: amount,\r\n        orderId: orderId,\r\n        orderInfo: orderInfo,\r\n        redirectUrl: redirectUrl,\r\n        ipnUrl: ipnUrl,\r\n        extraData: extraData,\r\n        requestType: requestType,\r\n        signature: signature,\r\n        lang: 'en'\r\n    });\r\n    //Send the request and get the response\r\n    //Create the HTTPS objects\r\n    const https = require('https');\r\n    const options = {\r\n        hostname: 'test-payment.momo.vn',\r\n        port: 443,\r\n        path: '/v2/gateway/api/create',\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'charset': 'UTF-8',\r\n            'Content-Length': Buffer.byteLength(requestBody)\r\n        }\r\n    }\r\n    //Send the request and get the response\r\n    const req = https.request(options, res => {\r\n        console.log(`Status: ${res.statusCode}`);\r\n        console.log(`Headers: ${JSON.stringify(res.headers)}`);\r\n        res.setEncoding('utf8');\r\n        res.on('data', (body) => {\r\n            console.log('Body: ');\r\n            console.log(body);\r\n            console.log('payUrl: ');\r\n            window.open(JSON.parse(body).payUrl, '_blank');\r\n            console.log(JSON.parse(body).payUrl);\r\n        });\r\n        res.on('end', () => {\r\n            console.log('No more data in response.');\r\n        });\r\n    })\r\n\r\n    req.on('error', (e) => {\r\n        console.log(`problem with request: ${e.message}`);\r\n    });\r\n    // write data to request body\r\n    console.log(\"Sending....\")\r\n    req.write(requestBody);\r\n    req.end();\r\n\r\n}","import React, { useState, ChangeEvent } from \"react\";\nimport { TextInputProps } from \"../types/TextInput.types\";\n\nfunction TextInput(props: TextInputProps): JSX.Element {\n    const [touched, setTouch] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [htmlClass, setHtmlClass] = useState(\"\");\n    const [, setValue] = useState(\"\");\n\n\n    function onValueChanged(event: ChangeEvent<HTMLInputElement>): void {\n        let [error, validClass, elementValue] = [\"\", \"\", event.target.value];\n\n        [error, validClass] = (!elementValue && props.required) ?\n            [\"Value cannot be empty\", \"is-invalid\"] : [\"\", \"is-valid\"];\n\n        if (!error) {\n            [error, validClass] = (props.maxLength && elementValue && elementValue.length > (props.maxLength)) ?\n            [`Value can't have more than ${props.maxLength} characters`, \"is-invalid\"] : [\"\", \"is-valid\"];\n        }\n\n        props.onChange({ value: elementValue, error: error, touched: touched, field: props.field });\n\n        setTouch(true);\n        setError(error);\n        setHtmlClass(validClass);\n        setValue(elementValue);\n    }\n\n    return (\n        <div>\n            <label htmlFor={props.id.toString()}>{props.label}</label>\n            <input\n                value={props.value}\n                type={props.type}\n                onChange={onValueChanged}\n                className={`form-control ${props.inputClass} ${htmlClass}`}\n                id={`id_${props.label}`}\n                placeholder={props.placeholder} />\n            {error ?\n                <div className=\"invalid-feedback\">\n                    {error}\n                </div> : null\n            }\n        </div>\n    );\n}\n\nexport default TextInput;","export const LOG_IN: string = \"LOG_IN\";\nexport const LOG_OUT: string = \"LOG_OUT\";\n\nexport function login(username: string): ILogInActionType {\n    return { type: LOG_IN, username: username };\n}\n\nexport function logout(): ILogOutActionType {\n    return { type: LOG_OUT};\n}\n\ninterface ILogInActionType { type: string, username: string };\ninterface ILogOutActionType { type: string };\n","import { IUser, UserModificationStatus } from \"../models/user.interface\";\n\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\n\n//Admin\nexport const ADD_ADMIN: string = \"ADD_ADMIN\";\nexport const EDIT_ADMIN: string = \"EDIT_ADMIN\";\nexport const REMOVE_ADMIN: string = \"REMOVE_ADMIN\";\n\n//Teacher\nexport const REMOVE_TEACHER_ALL: string = \"REMOVE_TEACHER_ALL\";\nexport const INITIAL_TEACHER: string = \"INITIAL_TEACHER\";\nexport const ADD_TEACHER: string = \"ADD_TEACHER\";\nexport const REMOVE_TEACHER: string = \"REMOVE_TEACHER\";\nexport const EDIT_TEACHER: string = \"EDIT_TEACHER\";\n\n\n//Student\nexport const REMOVE_STUDENT_ALL: string = \"REMOVE_STUDENT_ALL\";\nexport const INITIAL_STUDENT: string = \"INITIAL_STUDENT\";\nexport const ADD_STUDENT: string = \"ADD_STUDENT\";\nexport const EDIT_STUDENT: string = \"EDIT_STUDENT\";\nexport const REMOVE_STUDENT: string = \"REMOVE_STUDENT\";\n\n//Parent\nexport const REMOVE_PARENT_ALL: string = \"REMOVE_PARENT_ALL\";\nexport const INITIAL_PARENT: string = \"INITIAL_PARENT\";\nexport const ADD_PARENT: string = \"ADD_PARENT\";\nexport const EDIT_PARENT: string = \"EDIT_PARENT\";\nexport const REMOVE_PARENT: string = \"REMOVE_PARENT\";\n\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\nexport const CHANGE_USER_PENDING_EDIT: string = \"CHANGE_USER_PENDING_EDIT\";\nexport const CLEAR_USER_PENDING_EDIT: string = \"CLEAR_USER_PENDING_EDIT\";\n\nexport function fetchDataRequest() {\n    return {\n        type: FETCH_DATA_REQUEST\n    };\n}\n\nexport function fetchDataSuccess(user: IUser) {\n    return {\n        type: FETCH_DATA_SUCCESS,\n        user\n    };\n}\n\nexport function fetchDataError(error: any) {\n    return {\n        type: FETCH_DATA_ERROR,\n        payload: { error }\n    };\n}\n\nexport function initialTeacher(user: IUser): IInitialUserTeacherActionType {\n    return { type: INITIAL_TEACHER, user: user };\n}\n\nexport function removeTeacherAll(): IRemoveUserTeacherAllActionType {\n    return { type: REMOVE_TEACHER_ALL };\n}\n\nexport function initialStudent(user: IUser): IInitialUserStudentActionType {\n    return { type: INITIAL_STUDENT, user: user };\n}\n\nexport function removeStudentAll(): IRemoveUserStudentAllActionType {\n    return { type: REMOVE_STUDENT_ALL };\n}\n\nexport function initialParent(user: IUser): IInitialUserParentActionType {\n    return { type: INITIAL_PARENT, user: user };\n}\n\nexport function removeParentAll(): IRemoveUserParentAllActionType {\n    return { type: REMOVE_PARENT_ALL };\n}\n\nexport function addAdmin(user: IUser): IAddAdminActionType {\n    return { type: ADD_ADMIN, user: user };\n}\n\nexport function editAdmin(user: IUser): IEditAdminActionType {\n    return { type: EDIT_ADMIN, user: user };\n}\n\nexport function removeAdmin(id: string): IRemoveAdminActionType {\n    return { type: REMOVE_ADMIN, id: id };\n}\n\nexport function addTeacher(user: IUser): IAddTeacherActionType {\n    return { type: ADD_TEACHER, user: user };\n}\n\nexport function editTeacher(user: IUser): IEditTeacherActionType {\n    return { type: EDIT_TEACHER, user: user };\n}\n\nexport function removeTeacher(id: string): IRemoveTeacherActionType {\n    return { type: REMOVE_TEACHER, id: id };\n}\n\nexport function addStudent(user: IUser): IAddStudentActionType {\n    return { type: ADD_STUDENT, user: user };\n}\n\nexport function editStudent(user: IUser): IEditStudentActionType {\n    return { type: EDIT_STUDENT, user: user };\n}\n\nexport function removeStudent(id: string): IRemoveStudentActionType {\n    return { type: REMOVE_STUDENT, id: id };\n}\n\nexport function addParent(user: IUser): IAddParentActionType {\n    return { type: ADD_PARENT, user: user };\n}\n\nexport function editParent(user: IUser): IEditParentActionType {\n    return { type: EDIT_PARENT, user: user };\n}\n\nexport function removeParent(id: string): IRemoveParentActionType {\n    return { type: REMOVE_PARENT, id: id };\n}\n\nexport function changeSelectedUser(user: IUser): IChangeSelectedUserActionType {\n    return { type: CHANGE_USER_PENDING_EDIT, user: user };\n}\n\nexport function clearSelectedUser(): IClearSelectedUserActionType {\n    return { type: CLEAR_USER_PENDING_EDIT };\n}\n\nexport function setModificationState(value: UserModificationStatus): ISetModificationStateActionType {\n    return { type: SET_MODIFICATION_STATE, value: value };\n}\n\n// Admin\ninterface IAddAdminActionType { type: string, user: IUser };\ninterface IEditAdminActionType { type: string, user: IUser };\ninterface IRemoveAdminActionType { type: string, id: string };\n\n// Teacher\ninterface IInitialUserTeacherActionType {type: string, user: IUser};\ninterface IRemoveUserTeacherAllActionType { type: string };\ninterface IAddTeacherActionType { type: string, user: IUser };\ninterface IEditTeacherActionType { type: string, user: IUser };\ninterface IRemoveTeacherActionType { type: string, id: string };\ninterface IChangeSelectedTeacherActionType { type: string, user: IUser };\ninterface IClearSelectedTeacherActionType { type: string };\n\n//Student\ninterface IInitialUserStudentActionType {type: string, user: IUser};\ninterface IRemoveUserStudentAllActionType { type: string };\ninterface IAddStudentActionType { type: string, user: IUser };\ninterface IEditStudentActionType { type: string, user: IUser };\ninterface IRemoveStudentActionType { type: string, id: string };\n\n//Parent\ninterface IInitialUserParentActionType {type: string, user: IUser};\ninterface IRemoveUserParentAllActionType { type: string };\ninterface IAddParentActionType { type: string, user: IUser };\ninterface IEditParentActionType { type: string, user: IUser };\ninterface IRemoveParentActionType { type: string, id: string };\n\n\ninterface ISetModificationStateActionType { type: string, value:  UserModificationStatus};\ninterface IChangeSelectedUserActionType { type: string, user: IUser };\ninterface IClearSelectedUserActionType { type: string };","import { logout } from \"../../../store/actions/account.actions\";\r\nimport { putStatusUser } from \"../User/UpdateStatusUser\";\r\n\r\nexport function postRefreshToken() {\r\n    var refresh_token = localStorage.getItem(\"refresh_token\");\r\n\r\n    return (dispatch: any) => {\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/auth/refresh`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        \"refreshToken\":refresh_token\r\n                    })\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 500){\r\n                        let id = localStorage.getItem('id');\r\n                        dispatch(putStatusUser(id, {\r\n                            status: null\r\n                          }))\r\n                        localStorage.removeItem('access_token') // Authorization\r\n                        localStorage.removeItem('refresh_token')\r\n                        localStorage.removeItem('username')\r\n                        localStorage.removeItem('role_privilege')\r\n                        localStorage.removeItem('id')\r\n                        localStorage.removeItem('contest_id')\r\n                        localStorage.removeItem('schedule_id')\r\n                        dispatch(logout())\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                return response.json()\r\n            })\r\n            .then (data => {\r\n                localStorage.removeItem('access_token') // Authorization\r\n                localStorage.removeItem('refresh_token')\r\n                localStorage.setItem('access_token', data.accessToken) // Authorization\r\n                localStorage.setItem('refresh_token', data.refreshToken)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataRequest, fetchDataSuccess, fetchDataError } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function putStatusUser(id: any, data: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/status/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putStatusUser(id,data))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                console.log(id)\r\n                dispatch(fetchDataSuccess(data))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport { login } from \"../../../store/actions/account.actions\";\r\nimport { toast } from 'react-toastify';\r\nimport { putStatusUser } from \"../User/UpdateStatusUser\";\r\n\r\nexport function postAut(username: string, password: string, changeRouteHome: any, id: any) {\r\n    \r\n    return (dispatch: any) => {\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/auth`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                'Access-Control-Allow-Credentials': 'true'\r\n            },\r\n            body: JSON.stringify({\r\n                \"username\": username,\r\n                \"password\": password\r\n            })\r\n        }\r\n        )\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw Error(response.statusText);\r\n                }\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                localStorage.clear();\r\n                localStorage.setItem('access_token', data.accessToken) // Authorization\r\n                localStorage.setItem('refresh_token', data.refreshToken)\r\n                localStorage.setItem('username', username)\r\n                const token: string = data.accessToken;\r\n                const decoded: any = jwt_decode(token);\r\n                console.log(decoded)\r\n                localStorage.setItem('role_privilege', decoded.role_privilege)\r\n                localStorage.setItem('id', decoded.id)\r\n                localStorage.setItem('link_profile', decoded.profile_image_url)\r\n                dispatch(login(username));\r\n                toast.update(id, { render: \"Đăng nhập thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                setTimeout(function () {\r\n                    changeRouteHome(true);\r\n                }, 2000); \r\n                let openRequest = indexedDB.open(\"firebase-messaging-database\", 1);\r\n                openRequest.onerror = function() {\r\n                    console.error(\"Error\", openRequest.error);\r\n                };\r\n                \r\n                openRequest.onsuccess = function() {\r\n                    let db = openRequest.result;\r\n                    db.onversionchange = function() {\r\n                        db.close();\r\n                        alert(\"Database is outdated, please reload the page.\")\r\n                    };\r\n                    // continue working with database using db object\r\n                    console.log(db)\r\n                    const txn = db.transaction('firebase-messaging-store', 'readwrite');\r\n                    const store = txn.objectStore('firebase-messaging-store');\r\n\r\n                    let query = store.getAll();\r\n\r\n                    query.onerror = function() {\r\n                        console.error(\"Error\", openRequest.error);\r\n                    };\r\n\r\n                    query.onsuccess = (event: any) => {\r\n                        if (!event.target.result) {\r\n                            console.log(`The firebase device token with 0 not found`);\r\n                        } else {\r\n                            console.log(event.target.result);\r\n                            let token_object = event.target.result[0];\r\n                            dispatch(putStatusUser(localStorage.getItem('id'), {\r\n                                status: token_object.token\r\n                            }))\r\n                        }\r\n                    };\r\n                };            \r\n            })\r\n            .catch(error => {\r\n                toast.update(id, { render: \"Đăng nhập không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch } from \"react\";\nimport { OnChangeModel } from \"../../common/types/Form.types\";\nimport { useDispatch } from \"react-redux\";\nimport TextInput from \"../../common/components/TextInput\";\nimport '../../assets/css/Login.css'\nimport { postAut } from \"../../common/service/Aut/Login\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useHistory } from \"react-router-dom\";\n\nconst Login: React.FC = () => {\n  const dispatch: Dispatch<any> = useDispatch();\n  const history = useHistory()\n\n  const [formState, setFormState] = useState({\n    username: { error: \"\", value: \"\" },\n    password: { error: \"\", value: \"\" }\n  });\n\n  function changeRouteHome(value: boolean) {\n    if (value === true){\n      history.push('/')\n    }\n  }\n\n  function routeRegister() {\n      history.push('/register')\n  }\n\n  function routeForgetPassword() {\n    history.push('/forgot-password')\n}\n\n  function hasFormValueChanged(model: OnChangeModel): void {\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\n  }\n\n  function submit(e: FormEvent<HTMLFormElement>): void {\n    e.preventDefault();\n    if(isFormInvalid()) { return; }\n    const id = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\n      position: toast.POSITION.TOP_CENTER\n    });\n    dispatch(postAut(formState.username.value, formState.password.value, changeRouteHome, id))\n  }\n\n  function isFormInvalid() {\n    return (formState.username.error || formState.password.error\n      || !formState.username.value || !formState.password.value);\n  }\n\n  function getDisabledClass(): string {\n    let isError: boolean = isFormInvalid() as boolean;\n    return isError ? \"disabled\" : \"\";\n  }\n\n  const changeRoute = () => {\n    history.push('/landing-page')\n  }\n\n  return (\n\n    <div className=\"container-fluid \" id=\"login-page\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-xl-10 col-lg-10 col-md-9\">\n          <h2 id=\"text-logo\" onClick={changeRoute}>KidsDrawing</h2>\n        </div>\n      </div>\n      <ToastContainer />\n      <div className=\"row justify-content-center\">\n        <div className=\"col-xl-10 col-lg-12 col-md-9\">\n          <div className=\"card o-hidden border-0  my-5\">\n            <div className=\"card-body p-0\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 d-none d-lg-block text-center\" id=\"image-login-page\">\n                  <img src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1653726835/yfzr51aot4uof2awbush.png\" alt=\"First slide\" />\n                </div>\n                <div className=\"col-lg-6 shadow-lg\">\n                  <div className=\"p-5\">\n                    <div className=\"text-center\">\n                      <h1 className=\"h4 text-gray-900 mb-4\">Đăng nhập</h1>\n                    </div>\n                    <form className=\"user\" onSubmit={submit}>\n                      <div className=\"form-group\">\n\n                        <TextInput id=\"input_username\"\n                          field=\"username\"\n                          value={formState.username.value}\n                          onChange={hasFormValueChanged}\n                          required={true}\n                          maxLength={100}\n                          label=\"Tên đăng nhập\"\n                          placeholder=\"\" />\n                      </div>\n                      <div className=\"form-group\">\n                        <TextInput id=\"input_password\"\n                          field=\"password\"\n                          value={formState.password.value}\n                          onChange={hasFormValueChanged}\n                          required={true}\n                          maxLength={100}\n                          type=\"password\"\n                          label=\"Mật khẩu\"\n                          placeholder=\"\" />\n                      </div>\n                      <div className=\"form-group\">\n                        <div className=\"custom-control custom-checkbox small\">\n                          <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck\" />\n                          <label className=\"custom-control-label\"\n                            htmlFor=\"customCheck\">Nhớ mật khẩu</label>\n                        </div>\n                      </div>\n                      <button\n                        className={`btn btn-primary btn-user btn-block ${getDisabledClass()}`}\n                        type=\"submit\">\n                        Đăng nhập\n                      </button>\n                    </form>\n                    <div className=\"justify-content-center text-center\">\n                      <p className=\"link\" style={{color: '#0066FF'}} onClick={() => {routeForgetPassword()}}>Quên mật khẩu?</p>\n                    </div>\n                    <div className=\"justify-content-center text-center\">\n                      <p>Bạn chưa có tài khoản? <span style={{color: '#0066FF'}}><span className=\"link\" style={{color: '#0066FF'}} onClick={() => {routeRegister()}}>Đăng kí</span></span></p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import { Route, RouteProps } from \"react-router\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { IStateType } from \"../../store/models/root.interface\";\nimport { Redirect } from \"react-router-dom\";\n\n\nexport function PrivateRoute({ children, ...rest }: RouteProps): JSX.Element {\n\n    useSelector((state: IStateType) => state.account);\n\n    return (\n        <Route\n            {...rest}\n            render={() =>\n                localStorage.getItem('username') ? (\n                    children\n                ) : <Redirect\n                to={{\n                    pathname: \"/auth\"\n                }}\n            />\n            }\n        />\n    );\n}","import React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\nimport { FaChild } from \"react-icons/fa\";\nimport { RiParentFill } from \"react-icons/ri\";\nimport { BsMap } from \"react-icons/bs\";\nimport { AiOutlineBook, AiOutlineFileText } from \"react-icons/ai\";\nimport { FaPaintBrush } from \"react-icons/fa\";\nimport { MdSchool } from \"react-icons/md\";\nimport { GiVideoConference } from \"react-icons/gi\";\nimport { BsCashCoin } from \"react-icons/bs\";\nimport \"./LeftMenu.css\";\n\nconst LeftMenu: React.FC = () => {\n\n    let [leftMenuVisibility, setLeftMenuVisibility] = useState(false);\n\n    var role_privilege = localStorage.getItem('role_privilege')\n    var rolePrivilege:string[] =[]\n    var roleUser :string =\"\"\n    if (role_privilege !== null) {\n        rolePrivilege = role_privilege.split(',')\n        roleUser = rolePrivilege[0]\n    }\n\n    function changeLeftMenuVisibility() {\n        setLeftMenuVisibility(!leftMenuVisibility);\n    }\n\n    function getCollapseClass() {\n        return (leftMenuVisibility) ? \"\" : \"collapsed\";\n    }\n\n    if (roleUser === 'ADMIN_USER'){\n        return (\n            <Fragment>\n                <div className=\"toggle-area\">\n                    <button className=\"btn btn-primary toggle-button\" onClick={() => changeLeftMenuVisibility()}>\n                        <i className=\"fas fa-bolt\"></i>\n                    </button>\n                </div>\n    \n                <ul className={`navbar-nav bg-gradient-primary-green sidebar sidebar-dark accordion ${getCollapseClass()}`}\n                    id=\"collapseMenu\">\n    \n                    <a className=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"index.html\">\n                        <div className=\"sidebar-brand-icon icon-green rotate-n-15\">\n                            <i className=\"fas fa-bolt\"></i>\n                        </div>\n                        <div className=\"sidebar-brand-text mx-3\">Kids <sup>Drawing</sup></div>\n                    </a>\n    \n                    <hr className=\"sidebar-divider my-0\" />\n    \n                    <li className=\"nav-item active\">\n    \n                        <Link className=\"nav-link\" to=\"/Home\">\n                            <i className=\"fas fa-fw fa-tachometer-alt\"></i>\n                            <span>Trang chủ</span>\n                        </Link>\n                    </li>\n    \n                    <hr className=\"sidebar-divider\" />\n                    <div className=\"sidebar-heading\">\n                        Quản lý người dùng\n                    </div>\n    \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/teachers`}>\n                            <FaChalkboardTeacher />\n                            <span> Giáo viên</span>\n                        </Link>\n                    </li>\n    \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/students`}>\n                            <FaChild />\n                            <span> Học sinh</span>\n                        </Link>\n                    </li>\n    \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/parents`}>\n                            <RiParentFill />\n                            <span> Phụ huynh</span>\n                        </Link>\n                    </li>\n    \n                    <hr className=\"sidebar-divider\" />\n    \n                    <div className=\"sidebar-heading\">\n                        Quản lý hệ thống\n                    </div>\n    \n    \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/semesters`}>\n                            <BsMap />\n                            <span> Học kì</span>\n                        </Link>\n                    </li>\n    \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/lessons`}>\n                            <AiOutlineBook />\n                            <span> Tiết học</span>\n                        </Link>\n                    </li>\n    \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/arts`}>\n                            <FaPaintBrush />\n                            <span> Nghệ thuật</span>\n                        </Link>\n                    </li>\n    \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/courses`}>\n                            <MdSchool />\n                            <span> Khóa học</span>\n                        </Link>\n                    </li>\n    \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/class`}>\n                            <GiVideoConference />\n                            <span> Lớp</span>\n                        </Link>\n                    </li>\n    \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/contests`}>\n                            <AiOutlineFileText />\n                            <span> Cuộc thi</span>\n                        </Link>\n                    </li>\n    \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/turnovers`}>\n                            <BsCashCoin />\n                            <span> Phân tích</span>\n                        </Link>\n                    </li>\n    \n                    <hr className=\"sidebar-divider\" />\n    \n                    {/* <div className=\"sidebar-heading\">\n                        Trò chơi\n                    </div>\n    \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/game`}>\n                            <TbDeviceGamepad2 />\n                            <span> Game nhận biết màu sắc</span>\n                        </Link>\n                    </li> */}\n    \n                    <hr className=\"sidebar-divider\" />\n    \n                    <div className=\"sidebar-heading\">\n                        Yêu cầu người dùng\n                    </div>\n    \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/tutorial-edit`}>\n                            <span>Yêu cầu chỉnh giáo án</span>\n                        </Link>\n                    </li>\n    \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/request-teacher-off`}>\n                            <span>Nghỉ dạy</span>\n                        </Link>\n                    </li>\n\n    \n                    <hr className=\"sidebar-divider d-none d-md-block\" />\n                </ul>\n            </Fragment>\n        );\n    }\n    \n    else if (roleUser === 'TEACHER_USER') {\n        return (\n            <Fragment>\n                <div className=\"toggle-area\">\n                    <button className=\"btn btn-primary toggle-button\" onClick={() => changeLeftMenuVisibility()}>\n                        <i className=\"fas fa-bolt\"></i>\n                    </button>\n                </div>\n    \n                <ul className={`navbar-nav teacher-navbar-nav sidebar sidebar-dark accordion ${getCollapseClass()}`}\n                    id=\"collapseMenu\">\n    \n                    <a className=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"index.html\">\n                        <div className=\"sidebar-brand-icon icon-green rotate-n-15\">\n                            <i className=\"fas fa-bolt\"></i>\n                        </div>\n                        <div className=\"sidebar-brand-text mx-3\">Kids <sup>Drawing</sup></div>\n                    </a>\n    \n                    <hr className=\"sidebar-divider my-0\" />\n    \n                    <li className=\"nav-item active\">\n    \n                        <Link className=\"nav-link\" to=\"/Home\">\n                            <i className=\"fas fa-fw fa-tachometer-alt\"></i>\n                            <span>Trang chủ</span>\n                        </Link>\n                    </li>\n\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/teacher-level`}>\n                            <MdSchool />\n                            <span> Trình độ</span>\n                        </Link>\n                    </li>\n    \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/courses`}>\n                            <MdSchool />\n                            <span> Khám phá</span>\n                        </Link>\n                    </li>\n    \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/classes`}>\n                            <GiVideoConference />\n                            <span> Lớp</span>\n                        </Link>\n                    </li>\n    \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/contests`}>\n                            <AiOutlineFileText />\n                            <span> Cuộc thi</span>\n                        </Link>\n                    </li>\n    \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/schedule-teacher`}>\n                            <BsCashCoin />\n                            <span> Thời khóa biểu</span>\n                        </Link>\n                    </li>\n\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/request`}>\n                            <BsCashCoin />\n                            <span> Yêu cầu</span>\n                        </Link>\n                    </li>\n    \n                    <hr className=\"sidebar-divider d-none d-md-block\" />\n                    <img className=\"img-profile rounded-circle\" alt=\"\" src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1653726835/yfzr51aot4uof2awbush.png\" />\n                </ul>\n            </Fragment>\n        );\n    }\n\n    else if (roleUser === 'PARENT_USER') {\n        return (\n            <Fragment>\n                <div className=\"toggle-area\">\n                    <button className=\"btn btn-primary toggle-button\" onClick={() => changeLeftMenuVisibility()}>\n                        <i className=\"fas fa-bolt\"></i>\n                    </button>\n                </div>\n    \n                <ul className={`navbar-nav teacher-navbar-nav sidebar sidebar-dark accordion ${getCollapseClass()}`}\n                    id=\"collapseMenu\">\n    \n                    <a className=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"index.html\">\n                        <div className=\"sidebar-brand-icon icon-green rotate-n-15\">\n                            <i className=\"fas fa-bolt\"></i>\n                        </div>\n                        <div className=\"sidebar-brand-text mx-3\">Kids <sup>Drawing</sup></div>\n                    </a>\n    \n                    <hr className=\"sidebar-divider my-0\" />\n    \n                    <li className=\"nav-item active\">\n    \n                        <Link className=\"nav-link\" to=\"/Home\">\n                            <i className=\"fas fa-fw fa-tachometer-alt\"></i>\n                            <span>Trang chủ</span>\n                        </Link>\n                    </li>\n\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/classes`}>\n                            <GiVideoConference />\n                            <span> Lớp của bé</span>\n                        </Link>\n                    </li>\n    \n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/contests`}>\n                            <AiOutlineFileText />\n                            <span> Cuộc thi của bé</span>\n                        </Link>\n                    </li>\n\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/discover`}>\n                            <MdSchool />\n                            <span> Khám phá</span>\n                        </Link>\n                    </li>\n\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/schedules`}>\n                            <BsCashCoin />\n                            <span> Thời khóa biểu</span>\n                        </Link>\n                    </li>\n    \n                    <hr className=\"sidebar-divider d-none d-md-block\" />\n                    <img className=\"img-profile rounded-circle\" alt=\"\" src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1653726835/yfzr51aot4uof2awbush.png\" />\n                </ul>\n            </Fragment>\n        );\n    }\n\n    return (\n        <Fragment>\n            <div className=\"toggle-area\">\n                <button className=\"btn btn-primary toggle-button\" onClick={() => changeLeftMenuVisibility()}>\n                        <i className=\"fas fa-bolt\"></i>\n                </button>\n            </div>\n\n            <ul className={`navbar-nav teacher-navbar-nav sidebar sidebar-dark accordion ${getCollapseClass()}`}\n                    id=\"collapseMenu\">\n\n                <a className=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"index.html\">\n                    <div className=\"sidebar-brand-icon icon-green rotate-n-15\">\n                        <i className=\"fas fa-bolt\"></i>\n                    </div>\n                    <div className=\"sidebar-brand-text mx-3\">Kids <sup>Drawing</sup></div>\n                </a>\n\n                <hr className=\"sidebar-divider my-0\" />\n\n                <li className=\"nav-item active\">\n\n                    <Link className=\"nav-link\" to=\"/Home\">\n                        <i className=\"fas fa-fw fa-tachometer-alt\"></i>\n                        <span>Trang chủ</span>\n                    </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to={`/classes`}>\n                        <GiVideoConference />\n                        <span> Khóa học của bé</span>\n                    </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to={`/contests`}>\n                        <AiOutlineFileText />\n                        <span> Cuộc thi của bé</span>\n                    </Link>\n                </li>\n                \n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to={`/discover`}>\n                        <MdSchool />\n                        <span> Khám phá</span>\n                    </Link>\n                </li>\n\n        \n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to={`/schedules`}>\n                        <BsCashCoin />\n                        <span> Thời khóa biểu</span>\n                    </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to={`/game/guess-color`}>\n                        <BsCashCoin />\n                        <span> Trò chơi</span>\n                    </Link>\n                </li>\n\n                <hr className=\"sidebar-divider d-none d-md-block\" />\n                <img className=\"img-profile rounded-circle\" alt=\"\" src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1653726835/yfzr51aot4uof2awbush.png\" />\n            </ul>\n        </Fragment>\n    );\n};\n\nexport default LeftMenu;\n","import { IProfile, ProfileModificationStatus } from \"../models/profile.interface\";\r\nexport const ADD_PROFILE: string = \"ADD_PROFILE\";\r\nexport const EDIT_PROFILE: string = \"EDIT_PROFILE\";\r\nexport const REMOVE_PROFILE: string = \"REMOVE_PROFILE\";\r\nexport const CHANGE_PROFILE_AMOUNT: string = \"CHANGE_PROFILE_AMOUNT\";\r\nexport const CHANGE_PROFILE_PENDING_EDIT: string = \"CHANGE_PROFILE_PENDING_EDIT\";\r\nexport const CLEAR_PROFILE_PENDING_EDIT: string = \"CLEAR_PROFILE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_PROFILE_ALL: string = \"REMOVE_PROFILE_ALL\";\r\nexport const INITIAL_PROFILE: string = \"INITIAL_PROFILE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(profile: IProfile) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        profile\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialProfile(profile: IProfile): IInitialProfileActionType {\r\n    return { type: INITIAL_PROFILE, profile: profile };\r\n}\r\n\r\nexport function removeProfileAll(): IRemoveProfileAllActionType {\r\n    return { type: REMOVE_PROFILE_ALL };\r\n}\r\n\r\nexport function addProfile(profile: IProfile): IAddProfileActionType {\r\n    return { type: ADD_PROFILE, profile: profile };\r\n}\r\n\r\nexport function editProfile(profile: IProfile): IEditProfileActionType {\r\n    return { type: EDIT_PROFILE, profile: profile };\r\n}\r\n\r\nexport function removeProfile(id: string): IRemoveProfileActionType {\r\n    return { type: REMOVE_PROFILE, id: id };\r\n}\r\n\r\nexport function changeSelectedProfile(profile: IProfile): IChangeSelectedProfileActionType {\r\n    return { type: CHANGE_PROFILE_PENDING_EDIT, profile: profile };\r\n}\r\n\r\nexport function clearSelectedProfile(): IClearSelectedProfileActionType {\r\n    return { type: CLEAR_PROFILE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateProfile(value: ProfileModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddProfileActionType { type: string, profile: IProfile };\r\ninterface IEditProfileActionType { type: string, profile: IProfile };\r\ninterface IRemoveProfileActionType { type: string, id: string };\r\ninterface IChangeSelectedProfileActionType { type: string, profile: IProfile };\r\ninterface IClearSelectedProfileActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ProfileModificationStatus};\r\ninterface IRemoveProfileAllActionType { type: string }\r\ninterface IInitialProfileActionType {type: string, profile: IProfile}","import { fetchDataSuccess, fetchDataError, removeProfileAll, addProfile } from \"../../../store/actions/profile.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface Profile {\r\n    id: string,\r\n    profile_image_url: string,\r\n}\r\nexport function getProfile(dispatch: any , id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getProfile(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (ele => {\r\n                console.log(ele)\r\n                dispatch(fetchDataSuccess(ele))\r\n                dispatch(removeProfileAll())\r\n                var user: Profile = {\r\n                    id: ele.id,\r\n                    profile_image_url: ele.profile_image_url,\r\n                }\r\n                    //console.log(strDate.substring(0, 16))\r\n                dispatch(addProfile(user));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, Dispatch, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { putStatusUser } from \"../../common/service/User/UpdateStatusUser\";\nimport { logout } from \"../../store/actions/account.actions\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport { IProfileState, IStateType } from \"../../store/models/root.interface\";\nimport { getProfile } from \"../../common/service/User/GetProfile\";\n\nfunction TopMenuAccount(): JSX.Element {\n  const dispatch: Dispatch<any> = useDispatch();\n  const username: string | null = localStorage.getItem('username');\n  const id = localStorage.getItem('id')\n  const profiles: IProfileState = useSelector((state: IStateType) => state.profiles);\n  useEffect(() => {\n    trackPromise(getProfile(dispatch, id))\n  }, [dispatch, id])\n  const [isShow, setShow] = useState(false);\n\n  console.log(profiles.profiles)\n  let profile_image = \"\"\n  if (profiles.profiles.length > 0 ){\n    localStorage.setItem('profile_image', profiles.profiles[0].profile_image_url)\n  }\n\n  var id_x = localStorage.getItem('profile_image');\n  if (id_x !== null) {\n    profile_image = id_x;\n  }\n\n  return (\n\n    <li className=\"nav-item dropdown no-arrow\">\n      <p className=\"nav-link dropdown-toggle\"\n        onClick={() => {\n          setShow(!isShow);\n        }}\n        id=\"userDropdown\"\n        role=\"button\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\">\n        <span className=\"mr-2 d-none d-lg-inline small cadet\">{username}</span>\n        <img className=\"img-profile rounded-circle\" alt=\"\"\n          src={profile_image !== null ? profile_image :  \"https://source.unsplash.com/QAB-WJcbgJk/60x60\"} />\n      </p>\n\n      <div className={`dropdown-menu dropdown-menu-right shadow animated--grow-in ${(isShow) ? \"show\" : \"\"}`}\n        aria-labelledby=\"userDropdown\">\n        <a className=\"dropdown-item\"\n        onClick={() =>{}}\n        href=\"/account\" \n        data-toggle=\"modal\"\n        data-target=\"#logoutModal\">\n          <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"></i>\n          Chỉnh thông tin các nhân\n        </a>\n        <a className=\"dropdown-item\"\n        onClick={() =>{}}\n        href=\"/change-password\" \n        data-toggle=\"modal\"\n        data-target=\"#change-password\">\n          <i className=\"fas fa-key fa-sm fa-fw mr-2 text-gray-400\"></i>\n          Thay đổi mật khẩu\n        </a>\n        <p className=\"dropdown-item logout-btn\"\n        onClick={() => {\n          let id = localStorage.getItem('id');\n          localStorage.clear();\n          dispatch(logout())\n          dispatch(putStatusUser(id, {\n            status: null\n          }))\n        }}\n        data-toggle=\"modal\"\n        data-target=\"#logoutModal\">\n          <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i>\n          Logout\n        </p>\n      </div>\n    </li>\n  );\n};\n\nexport default TopMenuAccount;\n","import { INotify, NotifyModificationStatus } from \"../models/notify.interface\";\r\nexport const ADD_NOTIFY: string = \"ADD_NOTIFY\";\r\nexport const EDIT_NOTIFY: string = \"EDIT_NOTIFY\";\r\nexport const REMOVE_NOTIFY: string = \"REMOVE_NOTIFY\";\r\nexport const CHANGE_NOTIFY_AMOUNT: string = \"CHANGE_NOTIFY_AMOUNT\";\r\nexport const CHANGE_NOTIFY_PENDING_EDIT: string = \"CHANGE_NOTIFY_PENDING_EDIT\";\r\nexport const CLEAR_NOTIFY_PENDING_EDIT: string = \"CLEAR_NOTIFY_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_NOTIFY_ALL: string = \"REMOVE_NOTIFY_ALL\";\r\nexport const INITIAL_NOTIFY: string = \"INITIAL_NOTIFY\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(notify: INotify) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        notify\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialNotify(notify: INotify): IInitialNotifyActionType {\r\n    return { type: INITIAL_NOTIFY, notify: notify };\r\n}\r\n\r\nexport function removeNotifyAll(): IRemoveNotifyAllActionType {\r\n    return { type: REMOVE_NOTIFY_ALL };\r\n}\r\n\r\nexport function addNotify(notify: INotify): IAddNotifyActionType {\r\n    return { type: ADD_NOTIFY, notify: notify };\r\n}\r\n\r\nexport function editNotify(notify: INotify): IEditNotifyActionType {\r\n    return { type: EDIT_NOTIFY, notify: notify };\r\n}\r\n\r\nexport function removeNotify(id: string): IRemoveNotifyActionType {\r\n    return { type: REMOVE_NOTIFY, id: id };\r\n}\r\n\r\nexport function changeSelectedNotify(notify: INotify): IChangeSelectedNotifyActionType {\r\n    return { type: CHANGE_NOTIFY_PENDING_EDIT, notify: notify };\r\n}\r\n\r\nexport function clearSelectedNotify(): IClearSelectedNotifyActionType {\r\n    return { type: CLEAR_NOTIFY_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateNotify(value: NotifyModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddNotifyActionType { type: string, notify: INotify };\r\ninterface IEditNotifyActionType { type: string, notify: INotify };\r\ninterface IRemoveNotifyActionType { type: string, id: string };\r\ninterface IChangeSelectedNotifyActionType { type: string, notify: INotify };\r\ninterface IClearSelectedNotifyActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  NotifyModificationStatus};\r\ninterface IRemoveNotifyAllActionType { type: string }\r\ninterface IInitialNotifyActionType {type: string, notify: INotify}","import { fetchDataRequest, fetchDataError, removeNotifyAll, initialNotify } from \"../../../store/actions/notify.action\";\r\nimport { INotify } from \"../../../store/models/notify.interface\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nexport function getNotify() {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/notification-database`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getNotify())\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(removeNotifyAll())\r\n                console.log(data.body.notifications)\r\n                data.body.notifications.map((ele: any, index: any) => {\r\n                    let notification: INotify = {\r\n                        idx: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        time: ele.time\r\n                    }\r\n                    console.log(ele)\r\n                    return dispatch(initialNotify(notification))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { IUserReadNotification, UserReadNotificationModificationStatus } from \"../models/user_read_notification.interface\";\r\n\r\n// register_successfull_user_read_notifications\r\nexport const ADD_USER_READED_NOTIFICATION: string = \"ADD_USER_READED_NOTIFICATION\";\r\nexport const EDIT_USER_READED_NOTIFICATION: string = \"EDIT_USER_READED_NOTIFICATION\";\r\nexport const REMOVE_USER_READED_NOTIFICATION: string = \"REMOVE_USER_READED_NOTIFICATION\";\r\nexport const CHANGE_USER_READED_NOTIFICATION_AMOUNT: string = \"CHANGE_USER_READED_NOTIFICATION_AMOUNT\";\r\nexport const CHANGE_USER_READED_NOTIFICATION_PENDING_EDIT: string = \"CHANGE_USER_READED_NOTIFICATION_PENDING_EDIT\";\r\nexport const CLEAR_USER_READED_NOTIFICATION_PENDING_EDIT: string = \"CLEAR_USER_READED_NOTIFICATION_PENDING_EDIT\";\r\nexport const REMOVE_USER_READED_NOTIFICATION_ALL: string = \"REMOVE_USER_READED_NOTIFICATION_ALL\";\r\nexport const INITIAL_USER_READED_NOTIFICATION: string = \"INITIAL_USER_READED_NOTIFICATION\";\r\n\r\n// not_register_user_read_notifications\r\nexport const ADD_USER_NOT_READED_NOTIFICATION: string = \"ADD_USER_NOT_READED_NOTIFICATION\";\r\nexport const EDIT_USER_NOT_READED_NOTIFICATION: string = \"EDIT_USER_NOT_READED_NOTIFICATION\";\r\nexport const REMOVE_USER_NOT_READED_NOTIFICATION: string = \"REMOVE_USER_NOT_READED_NOTIFICATION\";\r\nexport const CHANGE_USER_NOT_READED_NOTIFICATION_AMOUNT: string = \"CHANGE_USER_NOT_READED_NOTIFICATION_AMOUNT\";\r\nexport const CHANGE_USER_NOT_READED_NOTIFICATION_PENDING_EDIT: string = \"CHANGE_USER_NOT_READED_NOTIFICATION_PENDING_EDIT\";\r\nexport const CLEAR_USER_NOT_READED_NOTIFICATION_PENDING_EDIT: string = \"CLEAR_USER_NOT_READED_NOTIFICATION_PENDING_EDIT\";\r\nexport const REMOVE_USER_NOT_READED_NOTIFICATION_ALL: string = \"REMOVE_USER_NOT_READED_NOTIFICATION_ALL\";\r\nexport const INITIAL_USER_NOT_READED_NOTIFICATION: string = \"INITIAL_USER_NOT_READED_NOTIFICATION\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(user_read_notification: IUserReadNotification) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        user_read_notification\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialUserReadedNotification(user_read_notification: IUserReadNotification): IInitialUserReadedNotificationActionType {\r\n    return { type: INITIAL_USER_READED_NOTIFICATION, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function removeUserReadedNotificationAll(): IRemoveUserReadedNotificationAllActionType {\r\n    return { type: REMOVE_USER_READED_NOTIFICATION_ALL };\r\n}\r\n\r\nexport function addUserReadedNotification(user_read_notification: IUserReadNotification): IAddUserReadedNotificationActionType {\r\n    return { type: ADD_USER_READED_NOTIFICATION, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function editUserReadedNotification(user_read_notification: IUserReadNotification): IEditUserReadedNotificationActionType {\r\n    return { type: EDIT_USER_READED_NOTIFICATION, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function removeUserReadedNotification(id: string): IRemoveUserReadedNotificationActionType {\r\n    return { type: REMOVE_USER_READED_NOTIFICATION, id: id };\r\n}\r\n\r\nexport function changeSelectedUserReadedNotification(user_read_notification: IUserReadNotification): IChangeSelectedUserReadedNotificationActionType {\r\n    return { type: CHANGE_USER_READED_NOTIFICATION_PENDING_EDIT, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function clearSelectedUserReadedNotification(): IClearSelectedUserReadedNotificationActionType {\r\n    return { type: CLEAR_USER_READED_NOTIFICATION_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialUserNotReadedNotification(user_read_notification: IUserReadNotification): IInitialUserNotReadedNotificationActionType {\r\n    return { type: INITIAL_USER_NOT_READED_NOTIFICATION, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function removeUserNotReadedNotificationAll(): IRemoveUserNotReadedNotificationAllActionType {\r\n    return { type: REMOVE_USER_NOT_READED_NOTIFICATION_ALL };\r\n}\r\n\r\nexport function addUserNotReadedNotification(user_read_notification: IUserReadNotification): IAddUserNotReadedNotificationActionType {\r\n    return { type: ADD_USER_NOT_READED_NOTIFICATION, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function editUserNotReadedNotification(user_read_notification: IUserReadNotification): IEditUserNotReadedNotificationActionType {\r\n    return { type: EDIT_USER_NOT_READED_NOTIFICATION, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function removeUserNotReadedNotification(id: string): IRemoveUserNotReadedNotificationActionType {\r\n    return { type: REMOVE_USER_NOT_READED_NOTIFICATION, id: id };\r\n}\r\n\r\nexport function changeSelectedUserNotReadedNotification(user_read_notification: IUserReadNotification): IChangeSelectedUserNotReadedNotificationActionType {\r\n    return { type: CHANGE_USER_NOT_READED_NOTIFICATION_PENDING_EDIT, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function clearSelectedUserNotReadedNotification(): IClearSelectedUserNotReadedNotificationActionType {\r\n    return { type: CLEAR_USER_NOT_READED_NOTIFICATION_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: UserReadNotificationModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_user_read_notifications\r\ninterface IAddUserReadedNotificationActionType { type: string, user_read_notification: IUserReadNotification };\r\ninterface IEditUserReadedNotificationActionType { type: string, user_read_notification: IUserReadNotification };\r\ninterface IRemoveUserReadedNotificationActionType { type: string, id: string };\r\ninterface IChangeSelectedUserReadedNotificationActionType { type: string, user_read_notification: IUserReadNotification };\r\ninterface IClearSelectedUserReadedNotificationActionType { type: string };\r\ninterface IRemoveUserReadedNotificationAllActionType { type: string }\r\ninterface IInitialUserReadedNotificationActionType {type: string, user_read_notification: IUserReadNotification}\r\n\r\n// not_register_user_read_notifications\r\ninterface IAddUserNotReadedNotificationActionType { type: string, user_read_notification: IUserReadNotification };\r\ninterface IEditUserNotReadedNotificationActionType { type: string, user_read_notification: IUserReadNotification };\r\ninterface IRemoveUserNotReadedNotificationActionType { type: string, id: string };\r\ninterface IChangeSelectedUserNotReadedNotificationActionType { type: string, user_read_notification: IUserReadNotification };\r\ninterface IClearSelectedUserNotReadedNotificationActionType { type: string };\r\ninterface IRemoveUserNotReadedNotificationAllActionType { type: string }\r\ninterface IInitialUserNotReadedNotificationActionType {type: string, user_read_notification: IUserReadNotification}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  UserReadNotificationModificationStatus};","import { fetchDataRequest, fetchDataSuccess, fetchDataError, addUserNotReadedNotification, removeUserNotReadedNotificationAll, addUserReadedNotification, removeUserReadedNotificationAll} from \"../../../store/actions/user_read_notification.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface UserReadNotification {\r\n    notification_id: string;\r\n    user_id: string;\r\n    is_read: boolean;\r\n}\r\nexport function getUserReadNotification(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-read-notification/user/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserReadNotification(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeUserNotReadedNotificationAll())\r\n                dispatch(removeUserReadedNotificationAll())\r\n                console.log(data.body.UserReadNotification)\r\n                data.body.UserReadNotification.map((ele: any, index: any) => {\r\n                    var userReadNotification: UserReadNotification = {\r\n                        notification_id: ele.notification_id,\r\n                        user_id: ele.user_id,\r\n                        is_read: ele.is_read\r\n                    }\r\n                    if (userReadNotification.is_read === true){\r\n                        return dispatch(addUserReadedNotification(userReadNotification))\r\n                    }\r\n                    else {\r\n                        return dispatch(addUserNotReadedNotification(userReadNotification))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { ISemester, SemesterModificationStatus } from \"../models/semester.interface\";\r\nexport const ADD_SEMESTER: string = \"ADD_SEMESTER\";\r\nexport const EDIT_SEMESTER: string = \"EDIT_SEMESTER\";\r\nexport const REMOVE_SEMESTER: string = \"REMOVE_SEMESTER\";\r\nexport const CHANGE_SEMESTER_AMOUNT: string = \"CHANGE_SEMESTER_AMOUNT\";\r\nexport const CHANGE_SEMESTER_PENDING_EDIT: string = \"CHANGE_SEMESTER_PENDING_EDIT\";\r\nexport const CLEAR_SEMESTER_PENDING_EDIT: string = \"CLEAR_SEMESTER_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SEMESTER_ALL: string = \"REMOVE_SEMESTER_ALL\";\r\nexport const INITIAL_SEMESTER: string = \"INITIAL_SEMESTER\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(semester: ISemester) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        semester\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSemester(semester: ISemester): IInitialSemesterActionType {\r\n    return { type: INITIAL_SEMESTER, semester: semester };\r\n}\r\n\r\nexport function removeSemesterAll(): IRemoveSemesterAllActionType {\r\n    return { type: REMOVE_SEMESTER_ALL };\r\n}\r\n\r\nexport function addSemester(semester: ISemester): IAddSemesterActionType {\r\n    return { type: ADD_SEMESTER, semester: semester };\r\n}\r\n\r\nexport function editSemester(semester: ISemester): IEditSemesterActionType {\r\n    return { type: EDIT_SEMESTER, semester: semester };\r\n}\r\n\r\nexport function removeSemester(id: string): IRemoveSemesterActionType {\r\n    return { type: REMOVE_SEMESTER, id: id };\r\n}\r\n\r\nexport function changeSelectedSemester(semester: ISemester): IChangeSelectedSemesterActionType {\r\n    return { type: CHANGE_SEMESTER_PENDING_EDIT, semester: semester };\r\n}\r\n\r\nexport function clearSelectedSemester(): IClearSelectedSemesterActionType {\r\n    return { type: CLEAR_SEMESTER_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: SemesterModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddSemesterActionType { type: string, semester: ISemester };\r\ninterface IEditSemesterActionType { type: string, semester: ISemester };\r\ninterface IRemoveSemesterActionType { type: string, id: string };\r\ninterface IChangeSelectedSemesterActionType { type: string, semester: ISemester };\r\ninterface IClearSelectedSemesterActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  SemesterModificationStatus};\r\ninterface IRemoveSemesterAllActionType { type: string }\r\ninterface IInitialSemesterActionType {type: string, semester: ISemester}","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester.actions\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getUserReadNotification } from \"./GetUserReadNotificationByUser\";\r\n\r\nexport function putUserReadNotification(data: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-read-notification`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putUserReadNotification(data))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (xx => {\r\n                console.log(xx)\r\n                dispatch(getUserReadNotification(data.user_id))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getNotify } from \"../../common/service/Notify/GetNotify\";\r\nimport { getUserReadNotification } from \"../../common/service/UserReadNotification/GetUserReadNotificationByUser\";\r\nimport { putUserReadNotification } from \"../../common/service/UserReadNotification/PutUserReadNotification\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { INotifyState, IStateType, IUserReadNotificationState } from \"../../store/models/root.interface\";\r\nimport \"./TopNotification.css\"\r\n\r\ntype Options = {\r\n  notification_id: string;\r\n  user_id: string;\r\n  notification_name: string;\r\n  notification_desciption: string;\r\n  notification_time: string;\r\n  is_read: boolean;\r\n}\r\n\r\nfunction TopMenuNotification(): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const notifys: INotifyState = useSelector((state: IStateType) => state.notifys);\r\n  const user_read_notifications: IUserReadNotificationState = useSelector((state: IStateType) => state.user_read_notifications);\r\n  const [isShow, setShow] = useState(false);\r\n\r\n  var id_x = localStorage.getItem('id');\r\n  let user_id: string = \"\";\r\n  if (id_x !== null) {\r\n    user_id = id_x\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserReadNotification(user_id))\r\n    dispatch(getNotify())\r\n  }, [dispatch, user_id])\r\n\r\n  console.log(notifys.notifys)\r\n  console.log(user_read_notifications.user_not_readed_notifications)\r\n\r\n  let data_not_read: Options[] = [];\r\n  let total = 0;\r\n  user_read_notifications.user_not_readed_notifications.map((ele, idx) => {\r\n    return notifys.notifys.map(notification => {\r\n      if (notification.idx === ele.notification_id){\r\n        let item: Options = {\r\n          notification_id: ele.notification_id,\r\n          notification_name: notification.name,\r\n          user_id: ele.user_id,\r\n          notification_time: notification.time,\r\n          notification_desciption: notification.description,\r\n          is_read: ele.is_read\r\n        }\r\n        total ++;\r\n        return data_not_read.push(item)\r\n      }\r\n      return notification\r\n    })\r\n  })\r\n\r\n  let data_readed: Options[] = [];\r\n  user_read_notifications.user_readed_notifications.map((ele, idx) => {\r\n    return notifys.notifys.map(notification => {\r\n      if (notification.idx === ele.notification_id && total <= 6){\r\n        let item: Options = {\r\n          notification_id: ele.notification_id,\r\n          notification_name: notification.name,\r\n          user_id: ele.user_id,\r\n          notification_time: notification.time,\r\n          notification_desciption: notification.description,\r\n          is_read: ele.is_read\r\n        }\r\n        total ++;\r\n        return data_not_read.push(item)\r\n      }\r\n      return notification\r\n    })\r\n  })\r\n\r\n  const history = useHistory();\r\n  const routeChange = (props: Options) =>{ \r\n      setShow(!isShow)\r\n      dispatch(putUserReadNotification({\r\n        user_id: user_id,\r\n        notification_id: props.notification_id,\r\n        is_read: true\r\n      }))\r\n      localStorage.removeItem('notification_id');\r\n      localStorage.setItem('notification_id', props.notification_id.toString());\r\n      localStorage.removeItem('user_id');\r\n      localStorage.setItem('user_id', props.user_id.toString());\r\n      localStorage.removeItem('notification_name');\r\n      localStorage.setItem('notification_name', props.notification_name);\r\n      localStorage.removeItem('notification_desciption');\r\n      localStorage.setItem('notification_desciption', props.notification_desciption);\r\n      localStorage.removeItem('notification_time');\r\n      localStorage.setItem('notification_time', props.notification_time);\r\n      let path = '/notification/detail'; \r\n      history.push({\r\n          pathname: path,\r\n      });\r\n  }\r\n\r\n  return (\r\n\r\n    <li className=\"nav-item dropdown no-arrow\">\r\n\r\n\r\n      <p className=\"nav-link dropdown-toggle waves-effect waves-light\" id=\"navbarDropdownMenuLink-5\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\" onClick={() => {\r\n        setShow(!isShow);\r\n      }}>\r\n        <span className=\"badge badge-danger ml-2\">{user_read_notifications.user_not_readed_notifications.length}</span>\r\n        <i className=\"fas fa-bell\"></i>\r\n      </p>\r\n\r\n      <div className={`dropdown-menu dropdown-menu-right shadow dropdown-secondary animated--grow-in ${(isShow) ? \"show\" : \"\"} notification`}\r\n        aria-labelledby=\"userDropdown\">\r\n          <ul className=\"list-notify\">\r\n            {\r\n              data_not_read.map((ele, idx) => {\r\n                return (\r\n                  <li key={idx}>\r\n                    <p className=\"dropdown-item waves-light\"\r\n                      onClick={() => {routeChange(ele)}}\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#logoutModal\">\r\n                      <i className=\"fas fa-bell fa-sm fa-fw mr-2\"></i>\r\n                      {ele.notification_name}\r\n                      <span className=\"badge badge-danger ml-2\">*</span>\r\n                    </p>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n\r\n\r\n            {\r\n              data_readed.map((ele, idx) => {\r\n                return (\r\n                  <li>\r\n                    <p className=\"dropdown-item waves-light\"\r\n                      onClick={() => dispatch(logout())}\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#logoutModal\">\r\n                      <i className=\"fas fa-bell fa-sm fa-fw mr-2 text-gray-400\"></i>\r\n                      {ele.notification_name}\r\n                    </p>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n          <div className=\"view-all-notify text-center\">\r\n            <a href=\"/notification\">Xem toàn bộ</a>\r\n          </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TopMenuNotification;\r\n","import { IUserRegisterJoinSemester, UserRegisterJoinSemesterModificationStatus } from \"../models/user_register_join_semester.interface\";\r\n\r\n// register_successfull_user_register_join_semesters\r\nexport const ADD_COMPLETED: string = \"ADD_COMPLETED\";\r\nexport const EDIT_COMPLETED: string = \"EDIT_COMPLETED\";\r\nexport const REMOVE_COMPLETED: string = \"REMOVE_COMPLETED\";\r\nexport const CHANGE_COMPLETED_AMOUNT: string = \"CHANGE_COMPLETED_AMOUNT\";\r\nexport const CHANGE_COMPLETED_PENDING_EDIT: string = \"CHANGE_COMPLETED_PENDING_EDIT\";\r\nexport const CLEAR_COMPLETED_PENDING_EDIT: string = \"CLEAR_COMPLETED_PENDING_EDIT\";\r\nexport const REMOVE_COMPLETED_ALL: string = \"REMOVE_COMPLETED_ALL\";\r\nexport const INITIAL_COMPLETED: string = \"INITIAL_COMPLETED\";\r\n\r\n// not_register_user_register_join_semesters\r\nexport const ADD_WAITING: string = \"ADD_WAITING\";\r\nexport const EDIT_WAITING: string = \"EDIT_WAITING\";\r\nexport const REMOVE_WAITING: string = \"REMOVE_WAITING\";\r\nexport const CHANGE_WAITING_AMOUNT: string = \"CHANGE_WAITING_AMOUNT\";\r\nexport const CHANGE_WAITING_PENDING_EDIT: string = \"CHANGE_WAITING_PENDING_EDIT\";\r\nexport const CLEAR_WAITING_PENDING_EDIT: string = \"CLEAR_WAITING_PENDING_EDIT\";\r\nexport const REMOVE_WAITING_ALL: string = \"REMOVE_WAITING_ALL\";\r\nexport const INITIAL_WAITING: string = \"INITIAL_WAITING\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(user_register_join_semester: IUserRegisterJoinSemester) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        user_register_join_semester\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCompleted(user_register_join_semester: IUserRegisterJoinSemester): IInitialCompletedActionType {\r\n    return { type: INITIAL_COMPLETED, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function removeCompletedAll(): IRemoveCompletedAllActionType {\r\n    return { type: REMOVE_COMPLETED_ALL };\r\n}\r\n\r\nexport function addCompleted(user_register_join_semester: IUserRegisterJoinSemester): IAddCompletedActionType {\r\n    return { type: ADD_COMPLETED, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function editCompleted(user_register_join_semester: IUserRegisterJoinSemester): IEditCompletedActionType {\r\n    return { type: EDIT_COMPLETED, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function removeCompleted(id: string): IRemoveCompletedActionType {\r\n    return { type: REMOVE_COMPLETED, id: id };\r\n}\r\n\r\nexport function changeSelectedCompleted(user_register_join_semester: IUserRegisterJoinSemester): IChangeSelectedCompletedActionType {\r\n    return { type: CHANGE_COMPLETED_PENDING_EDIT, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function clearSelectedCompleted(): IClearSelectedCompletedActionType {\r\n    return { type: CLEAR_COMPLETED_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialWaiting(user_register_join_semester: IUserRegisterJoinSemester): IInitialWaitingActionType {\r\n    return { type: INITIAL_WAITING, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function removeWaitingAll(): IRemoveWaitingAllActionType {\r\n    return { type: REMOVE_WAITING_ALL };\r\n}\r\n\r\nexport function addWaiting(user_register_join_semester: IUserRegisterJoinSemester): IAddWaitingActionType {\r\n    return { type: ADD_WAITING, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function editWaiting(user_register_join_semester: IUserRegisterJoinSemester): IEditWaitingActionType {\r\n    return { type: EDIT_WAITING, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function removeWaiting(id: string): IRemoveWaitingActionType {\r\n    return { type: REMOVE_WAITING, id: id };\r\n}\r\n\r\nexport function changeSelectedWaiting(user_register_join_semester: IUserRegisterJoinSemester): IChangeSelectedWaitingActionType {\r\n    return { type: CHANGE_WAITING_PENDING_EDIT, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function clearSelectedWaiting(): IClearSelectedWaitingActionType {\r\n    return { type: CLEAR_WAITING_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: UserRegisterJoinSemesterModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_user_register_join_semesters\r\ninterface IAddCompletedActionType { type: string, user_register_join_semester: IUserRegisterJoinSemester };\r\ninterface IEditCompletedActionType { type: string, user_register_join_semester: IUserRegisterJoinSemester };\r\ninterface IRemoveCompletedActionType { type: string, id: string };\r\ninterface IChangeSelectedCompletedActionType { type: string, user_register_join_semester: IUserRegisterJoinSemester };\r\ninterface IClearSelectedCompletedActionType { type: string };\r\ninterface IRemoveCompletedAllActionType { type: string }\r\ninterface IInitialCompletedActionType {type: string, user_register_join_semester: IUserRegisterJoinSemester}\r\n\r\n// not_register_user_register_join_semesters\r\ninterface IAddWaitingActionType { type: string, user_register_join_semester: IUserRegisterJoinSemester };\r\ninterface IEditWaitingActionType { type: string, user_register_join_semester: IUserRegisterJoinSemester };\r\ninterface IRemoveWaitingActionType { type: string, id: string };\r\ninterface IChangeSelectedWaitingActionType { type: string, user_register_join_semester: IUserRegisterJoinSemester };\r\ninterface IClearSelectedWaitingActionType { type: string };\r\ninterface IRemoveWaitingAllActionType { type: string }\r\ninterface IInitialWaitingActionType {type: string, user_register_join_semester: IUserRegisterJoinSemester}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  UserRegisterJoinSemesterModificationStatus};","import { fetchDataError, addCompleted, addWaiting, removeCompletedAll, removeWaitingAll} from \"../../../store/actions/user_register_join_semester.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user_register_semester {\r\n    id: string;\r\n    student_id: string;\r\n    payer_id: string;\r\n    payer_name: string;\r\n    course_name: string;\r\n    price: number;\r\n    student_name: string;\r\n    link_url: string;\r\n    status: string;\r\n    semester_class_id: string;\r\n    time: string;\r\n}\r\nexport function getUserRegisterJoinSemesterByPayer(dispatch: any, id: string) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-join-semester/payer/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserRegisterJoinSemesterByPayer(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(removeCompletedAll())\r\n                dispatch(removeWaitingAll())\r\n                console.log(data.body.user_register_semester)\r\n                data.body.user_register_semester.map((ele: any, index: any) => {\r\n                    var user_register_semester: user_register_semester = {\r\n                        id: ele.id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        link_url: ele.link_url,\r\n                        payer_name: \"\",\r\n                        course_name: ele.course_name,\r\n                        status: ele.status,\r\n                        payer_id: ele.payer_id,\r\n                        price: ele.price,\r\n                        semester_class_id: ele.semester_class_id,\r\n                        time: ele.time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (ele.status === \"Completed\") {\r\n                        dispatch(addCompleted(user_register_semester))\r\n                    }\r\n                    else {\r\n                        dispatch(addWaiting(user_register_semester))\r\n                    }\r\n                    return index\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getNotify } from \"../../common/service/Notify/GetNotify\";\r\nimport { getUserReadNotification } from \"../../common/service/UserReadNotification/GetUserReadNotificationByUser\";\r\nimport { putUserReadNotification } from \"../../common/service/UserReadNotification/PutUserReadNotification\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { INotifyState, IStateType, IUserReadNotificationState, IUserRegisterJoinSemesterState } from \"../../store/models/root.interface\";\r\nimport \"./TopNotification.css\"\r\nimport { AiOutlineShoppingCart } from \"react-icons/ai\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { getUserRegisterJoinSemesterByPayer } from \"../../common/service/UserRegisterJoinSemester/GetUserRegisterJoinSemesterByPayer\";\r\n\r\ntype Options = {\r\n  notification_id: string;\r\n  user_id: string;\r\n  notification_name: string;\r\n  notification_desciption: string;\r\n  notification_time: string;\r\n  is_read: boolean;\r\n}\r\n\r\nfunction TopMenuCart(): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const notifys: INotifyState = useSelector((state: IStateType) => state.notifys);\r\n  const user_read_notifications: IUserReadNotificationState = useSelector((state: IStateType) => state.user_read_notifications);\r\n  const [isShow, setShow] = useState(false);\r\n  const user_register_join_semesters: IUserRegisterJoinSemesterState = useSelector((state: IStateType) => state.user_register_join_semesters);\r\n\r\n  var id_x = localStorage.getItem('id');\r\n  let user_id: string = \"\";\r\n  if (id_x !== null) {\r\n    user_id = id_x\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserReadNotification(user_id))\r\n    dispatch(getNotify())\r\n  }, [dispatch, user_id])\r\n\r\n  useEffect(() => {\r\n    trackPromise(getUserRegisterJoinSemesterByPayer(dispatch, user_id))\r\n  }, [dispatch, user_id])\r\n\r\n  console.log(notifys.notifys)\r\n  console.log(user_read_notifications.user_not_readed_notifications)\r\n\r\n  let data_not_read: Options[] = [];\r\n  let total = 0;\r\n  user_read_notifications.user_not_readed_notifications.map((ele, idx) => {\r\n    return notifys.notifys.map(notification => {\r\n      if (notification.idx === ele.notification_id){\r\n        let item: Options = {\r\n          notification_id: ele.notification_id,\r\n          notification_name: notification.name,\r\n          user_id: ele.user_id,\r\n          notification_time: notification.time,\r\n          notification_desciption: notification.description,\r\n          is_read: ele.is_read\r\n        }\r\n        total ++;\r\n        return data_not_read.push(item)\r\n      }\r\n      return notification\r\n    })\r\n  })\r\n\r\n  let data_readed: Options[] = [];\r\n  user_read_notifications.user_readed_notifications.map((ele, idx) => {\r\n    return notifys.notifys.map(notification => {\r\n      if (notification.idx === ele.notification_id && total <= 6){\r\n        let item: Options = {\r\n          notification_id: ele.notification_id,\r\n          notification_name: notification.name,\r\n          user_id: ele.user_id,\r\n          notification_time: notification.time,\r\n          notification_desciption: notification.description,\r\n          is_read: ele.is_read\r\n        }\r\n        total ++;\r\n        return data_not_read.push(item)\r\n      }\r\n      return notification\r\n    })\r\n  })\r\n\r\n  const history = useHistory();\r\n  const routeChange = (props: Options) =>{ \r\n      setShow(!isShow)\r\n      dispatch(putUserReadNotification({\r\n        user_id: user_id,\r\n        notification_id: props.notification_id,\r\n        is_read: true\r\n      }))\r\n      localStorage.removeItem('notification_id');\r\n      localStorage.setItem('notification_id', props.notification_id.toString());\r\n      localStorage.removeItem('user_id');\r\n      localStorage.setItem('user_id', props.user_id.toString());\r\n      localStorage.removeItem('notification_name');\r\n      localStorage.setItem('notification_name', props.notification_name);\r\n      localStorage.removeItem('notification_desciption');\r\n      localStorage.setItem('notification_desciption', props.notification_desciption);\r\n      localStorage.removeItem('notification_time');\r\n      localStorage.setItem('notification_time', props.notification_time);\r\n      let path = '/notification/detail'; \r\n      history.push({\r\n          pathname: path,\r\n      });\r\n  }\r\n\r\n  function routeCart() {\r\n    let path = '/cart'; \r\n    history.push({\r\n        pathname: path\r\n    });\r\n  }\r\n\r\n  return (\r\n\r\n    <li className=\"nav-item dropdown no-arrow\">\r\n\r\n\r\n      <p className=\"nav-link dropdown-toggle waves-effect waves-light\" id=\"navbarDropdownMenuLink-5\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\" onClick={() => {\r\n        routeCart();\r\n      }}>\r\n        <span className=\"badge badge-danger ml-2\">{user_register_join_semesters.waiting.length}</span>\r\n        <AiOutlineShoppingCart />\r\n      </p>\r\n\r\n      <div className={`dropdown-menu dropdown-menu-right shadow dropdown-secondary animated--grow-in ${(isShow) ? \"show\" : \"\"} notification`}\r\n        aria-labelledby=\"userDropdown\">\r\n          <ul className=\"list-notify\">\r\n            {\r\n              data_not_read.map((ele, idx) => {\r\n                return (\r\n                  <li key={idx}>\r\n                    <p className=\"dropdown-item waves-light\"\r\n                      onClick={() => {routeChange(ele)}}\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#logoutModal\">\r\n                      <i className=\"fas fa-bell fa-sm fa-fw mr-2\"></i>\r\n                      {ele.notification_name}\r\n                      <span className=\"badge badge-danger ml-2\">*</span>\r\n                    </p>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n\r\n\r\n            {\r\n              data_readed.map((ele, idx) => {\r\n                return (\r\n                  <li>\r\n                    <p className=\"dropdown-item waves-light\"\r\n                      onClick={() => dispatch(logout())}\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#logoutModal\">\r\n                      <i className=\"fas fa-bell fa-sm fa-fw mr-2 text-gray-400\"></i>\r\n                      {ele.notification_name}\r\n                    </p>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n          <div className=\"view-all-notify text-center\">\r\n            <a href=\"/notification\">Xem toàn bộ</a>\r\n          </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TopMenuCart;\r\n","import React from \"react\";\nimport TopMenuAccount from \"./TopMenuAccount\";\nimport \"./TopMenu.css\";\nimport { useSelector } from \"react-redux\";\nimport { IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\nimport TopMenuNotification from \"./TopNotification\";\nimport TopMenuCart from \"./TopMenuCart\";\n\nconst TopMenu: React.FC = () => {\n  const page: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\n  var role_privilege = localStorage.getItem('role_privilege')\n  var rolePrivilege:string[] =[]\n  var roleUser :string =\"\"\n  if (role_privilege !== null) {\n      rolePrivilege = role_privilege.split(',')\n      roleUser = rolePrivilege[0]\n  }\n\n  if (roleUser === \"ADMIN_USER\"){\n    return (\n      <nav className=\"navbar navbar-expand navbar-light bg-custom-dark topbar mb-4 static-top shadow\">\n        <ol className=\"breadcrumb dark-breadcrumb\">\n          <li className=\"breadcrumb-item\"><a href=\"# \">{page ? page.area : null}</a></li>\n          <li className=\"breadcrumb-item\"><a href=\"# \">{page ? page.subArea : null}</a></li>\n        </ol>\n  \n        <ul className=\"navbar-nav ml-auto\">\n          <TopMenuNotification />\n          <div className=\"topbar-divider d-none d-sm-block\"></div>\n          <TopMenuAccount />\n        </ul>\n      </nav>\n    );\n  }\n  else if (roleUser === \"TEACHER_USER\"){\n    return (\n      <nav className=\"navbar navbar-expand navbar-light bg-custom-dark topbar mb-4 static-top\" id=\"teacher_navbar\">\n        <ol className=\"breadcrumb dark-breadcrumb\" id=\"teacher_breadcrumb\">\n          <li className=\"breadcrumb-item teacher-breadcrumb-item\"><h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">{page ? page.area : null}</h1></li>\n          <li className=\"breadcrumb-item teacher-breadcrumb-item\"><h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">{page ? page.subArea : null}</h1></li>\n        </ol>\n  \n        <ul className=\"navbar-nav ml-auto\">\n          <TopMenuNotification />\n          <div className=\"topbar-divider d-none d-sm-block\"></div>\n          <TopMenuAccount />\n        </ul>\n      </nav>\n    );\n  }\n\n  else if (roleUser === \"PARENT_USER\" || roleUser === \"STUDENT_USER\") {\n    return (\n      <nav className=\"navbar navbar-expand navbar-light bg-custom-dark topbar mb-4\" id=\"teacher_navbarx\">\n        <ol className=\"breadcrumb dark-breadcrumb\" id=\"teacher_breadcrumb\">\n          <li className=\"breadcrumb-item teacher-breadcrumb-item\"><h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">{page ? page.area : null}</h1></li>\n          <li className=\"breadcrumb-item teacher-breadcrumb-item\"><h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">{page ? page.subArea : null}</h1></li>\n        </ol>\n  \n        <ul className=\"navbar-nav ml-auto\">\n          <TopMenuCart />\n          <div className=\"topbar-divider d-none d-sm-block\"></div>\n          <TopMenuNotification />\n          <div className=\"topbar-divider d-none d-sm-block\"></div>\n          <TopMenuAccount />\n        </ul>\n      </nav>\n    );\n  }\n  return (\n    <nav className=\"navbar navbar-expand navbar-light bg-custom-dark topbar mb-4 static-top shadow\">\n      <ol className=\"breadcrumb dark-breadcrumb\">\n        <li className=\"breadcrumb-item\"><a href=\"# \">{page ? page.area : null}</a></li>\n        <li className=\"breadcrumb-item\"><a href=\"# \">{page ? page.subArea : null}</a></li>\n      </ol>\n\n      <ul className=\"navbar-nav ml-auto\">\n        <TopMenuNotification />\n        <div className=\"topbar-divider d-none d-sm-block\"></div>\n        <TopMenuAccount />\n      </ul>\n    </nav>\n  );\n  \n};\n\nexport default TopMenu;\n","export const UPDATE_CURRENT_PATH: string = \"UPDATE_CURRENT_PATH\";\n\nexport function updateCurrentPath(area: string, subArea: string): IUpdateCurrentPathActionType {\n    return { type: UPDATE_CURRENT_PATH, area: area, subArea: subArea };\n}\n\n\ninterface IUpdateCurrentPathActionType { type: string, area: string, subArea: string };","import React, { PropsWithChildren, ReactElement } from \"react\";\nimport { ICardProperties } from \"../types/TopCard.types\";\n\nfunction TopCard(props: PropsWithChildren<ICardProperties>): ReactElement {\n    return (\n        <div className=\"col-xl-3 col-md-6 mb-4\">\n            <div className={`card border-left-${props.class} shadow h-100 py-2 `}>\n                <div className=\"card-body\">\n                    <div className=\"row no-gutters align-items-center\">\n                        <div className=\"col mr-2\">\n                            <div className=\"text-xs font-weight-bold text-green text-uppercase mb-1\">{props.title}</div>\n                            <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{props.text}</div>\n                        </div>\n                        <div className=\"col-auto\">\n                            <i className={`fas fa-${props.icon} fa-2x text-gray-300`}></i>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default TopCard;\n","export interface IAnonymousNotification {\r\n    id: string,\r\n    name: string, \r\n    description: string,\r\n    time: string\r\n}\r\n\r\nexport enum AnonymousNotificationModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n} ","import { IAnonymousNotification, AnonymousNotificationModificationStatus } from \"../models/anonymous_notification.interface\";\r\nexport const ADD_ANONYMOUS_NOTIFICATION: string = \"ADD_ANONYMOUS_NOTIFICATION\";\r\nexport const EDIT_ANONYMOUS_NOTIFICATION: string = \"EDIT_ANONYMOUS_NOTIFICATION\";\r\nexport const REMOVE_ANONYMOUS_NOTIFICATION: string = \"REMOVE_ANONYMOUS_NOTIFICATION\";\r\nexport const CHANGE_ANONYMOUS_NOTIFICATION_AMOUNT: string = \"CHANGE_ANONYMOUS_NOTIFICATION_AMOUNT\";\r\nexport const CHANGE_ANONYMOUS_NOTIFICATION_PENDING_EDIT: string = \"CHANGE_ANONYMOUS_NOTIFICATION_PENDING_EDIT\";\r\nexport const CLEAR_ANONYMOUS_NOTIFICATION_PENDING_EDIT: string = \"CLEAR_ANONYMOUS_NOTIFICATION_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_ANONYMOUS_NOTIFICATION_ALL: string = \"REMOVE_ANONYMOUS_NOTIFICATION_ALL\";\r\nexport const INITIAL_ANONYMOUS_NOTIFICATION: string = \"INITIAL_ANONYMOUS_NOTIFICATION\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(anonymous_notification: IAnonymousNotification) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        anonymous_notification\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialAnonymousNotification(anonymous_notification: IAnonymousNotification): IInitialAnonymousNotificationActionType {\r\n    return { type: INITIAL_ANONYMOUS_NOTIFICATION, anonymous_notification: anonymous_notification };\r\n}\r\n\r\nexport function removeAnonymousNotificationAll(): IRemoveAnonymousNotificationAllActionType {\r\n    return { type: REMOVE_ANONYMOUS_NOTIFICATION_ALL };\r\n}\r\n\r\nexport function addAnonymousNotification(anonymous_notification: IAnonymousNotification): IAddAnonymousNotificationActionType {\r\n    return { type: ADD_ANONYMOUS_NOTIFICATION, anonymous_notification: anonymous_notification };\r\n}\r\n\r\nexport function editAnonymousNotification(anonymous_notification: IAnonymousNotification): IEditAnonymousNotificationActionType {\r\n    return { type: EDIT_ANONYMOUS_NOTIFICATION, anonymous_notification: anonymous_notification };\r\n}\r\n\r\nexport function removeAnonymousNotification(id: string): IRemoveAnonymousNotificationActionType {\r\n    return { type: REMOVE_ANONYMOUS_NOTIFICATION, id: id };\r\n}\r\n\r\nexport function changeSelectedAnonymousNotification(anonymous_notification: IAnonymousNotification): IChangeSelectedAnonymousNotificationActionType {\r\n    return { type: CHANGE_ANONYMOUS_NOTIFICATION_PENDING_EDIT, anonymous_notification: anonymous_notification };\r\n}\r\n\r\nexport function clearSelectedAnonymousNotification(): IClearSelectedAnonymousNotificationActionType {\r\n    return { type: CLEAR_ANONYMOUS_NOTIFICATION_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateAnonymousNotification(value: AnonymousNotificationModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddAnonymousNotificationActionType { type: string, anonymous_notification: IAnonymousNotification };\r\ninterface IEditAnonymousNotificationActionType { type: string, anonymous_notification: IAnonymousNotification };\r\ninterface IRemoveAnonymousNotificationActionType { type: string, id: string };\r\ninterface IChangeSelectedAnonymousNotificationActionType { type: string, anonymous_notification: IAnonymousNotification };\r\ninterface IClearSelectedAnonymousNotificationActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  AnonymousNotificationModificationStatus};\r\ninterface IRemoveAnonymousNotificationAllActionType { type: string }\r\ninterface IInitialAnonymousNotificationActionType {type: string, anonymous_notification: IAnonymousNotification}","import { IArtAge, ArtAgeModificationStatus } from \"../models/art_age.interface\";\r\nexport const ADD_ART_AGE: string = \"ADD_ART_AGE\";\r\nexport const EDIT_ART_AGE: string = \"EDIT_ART_AGE\";\r\nexport const REMOVE_ART_AGE: string = \"REMOVE_ART_AGE\";\r\nexport const CHANGE_ART_AGE_AMOUNT: string = \"CHANGE_ART_AGE_AMOUNT\";\r\nexport const CHANGE_ART_AGE_PENDING_EDIT: string = \"CHANGE_ART_AGE_PENDING_EDIT\";\r\nexport const CLEAR_ART_AGE_PENDING_EDIT: string = \"CLEAR_ART_AGE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_ART_AGE_ALL: string = \"REMOVE_ART_AGE_ALL\";\r\nexport const INITIAL_ART_AGE: string = \"INITIAL_ART_AGE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(art_age: IArtAge) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        art_age\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialArtAge(art_age: IArtAge): IInitialArtAgeActionType {\r\n    return { type: INITIAL_ART_AGE, art_age: art_age };\r\n}\r\n\r\nexport function removeArtAgeAll(): IRemoveArtAgeAllActionType {\r\n    return { type: REMOVE_ART_AGE_ALL };\r\n}\r\n\r\nexport function addArtAge(art_age: IArtAge): IAddArtAgeActionType {\r\n    return { type: ADD_ART_AGE, art_age: art_age };\r\n}\r\n\r\nexport function editArtAge(art_age: IArtAge): IEditArtAgeActionType {\r\n    return { type: EDIT_ART_AGE, art_age: art_age };\r\n}\r\n\r\nexport function removeArtAge(id: string): IRemoveArtAgeActionType {\r\n    return { type: REMOVE_ART_AGE, id: id };\r\n}\r\n\r\nexport function changeSelectedArtAge(art_age: IArtAge): IChangeSelectedArtAgeActionType {\r\n    return { type: CHANGE_ART_AGE_PENDING_EDIT, art_age: art_age };\r\n}\r\n\r\nexport function clearSelectedArtAge(): IClearSelectedArtAgeActionType {\r\n    return { type: CLEAR_ART_AGE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateArtAge(value: ArtAgeModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddArtAgeActionType { type: string, art_age: IArtAge };\r\ninterface IEditArtAgeActionType { type: string, art_age: IArtAge };\r\ninterface IRemoveArtAgeActionType { type: string, id: string };\r\ninterface IChangeSelectedArtAgeActionType { type: string, art_age: IArtAge };\r\ninterface IClearSelectedArtAgeActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ArtAgeModificationStatus};\r\ninterface IRemoveArtAgeAllActionType { type: string }\r\ninterface IInitialArtAgeActionType {type: string, art_age: IArtAge}","import React, { useState, ChangeEvent, Fragment } from \"react\";\r\nimport { SelectProps } from \"../types/Select.types\";\r\n\r\nfunction SelectKeyValue(props: SelectProps): JSX.Element {\r\n    const [touched, setTouch] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [htmlClass, setHtmlClass] = useState(\"\");\r\n    const [value, setValue] = useState(props.value);\r\n\r\n\r\n    function onValueChanged(event: ChangeEvent<HTMLSelectElement>): void {\r\n        let [error, validClass, elementValue] = [\"\", \"\", event.target.value];\r\n\r\n        [error, validClass] = (!elementValue && props.required) ?\r\n            [\"Value has to be selected\", \"is-invalid\"] : [\"\", \"is-valid\"];\r\n\r\n\r\n        props.onChange({ value: elementValue, error: error, touched: touched, field: props.field });\r\n\r\n        setTouch(true);\r\n        setError(error);\r\n        setHtmlClass(validClass);\r\n        setValue(elementValue);\r\n    }\r\n\r\n    //console.log(props.options)\r\n\r\n    const getOptions: (JSX.Element | null)[] = props.options.map( (option: any, index:number) => {\r\n        return (\r\n            <option key={index} value={option.value}>{option.name}</option>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <Fragment>\r\n            <label htmlFor={`${props.id}`}>{props.label}</label>\r\n            <select\r\n                value={value}\r\n                id={`${props.id}`}\r\n                className={`form-control ${props.inputClass ? props.inputClass : \"\"} ${htmlClass}`}\r\n                onChange={onValueChanged}>\r\n                <option value= {0}>Choose...</option>\r\n                {getOptions}\r\n            </select>\r\n\r\n            {error ?\r\n                <div className=\"invalid-feedback\">\r\n                    {error}\r\n                </div> : null\r\n            }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default SelectKeyValue;","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IAnonymousNotificationState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IAnonymousNotification, AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editAnonymousNotification, clearSelectedAnonymousNotification, setModificationStateAnonymousNotification, addAnonymousNotification } from \"../../store/actions/anonymous_notification.action\";\r\nimport { OnChangeModel, IAnonymousNotificationFormState } from \"../../common/types/Form.types\";\r\nimport { postAnonymousNotification } from \"../../common/service/AnonymousNotification/PostAnonymousNotification\";\r\nimport SelectKeyValue from \"../../common/components/SelectKeyValue\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type artAgeListProps = {\r\n    isCheck: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\n\r\nfunction TeachAgeForm(props: artAgeListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const notifications: IAnonymousNotificationState | null = useSelector((state: IStateType) => state.anonymous_notifications);\r\n    let notification: IAnonymousNotification | null = notifications.selectedAnonymousNotification;\r\n    const isCreate: boolean = (notifications.modificationState === AnonymousNotificationModificationStatus.Create);\r\n\r\n    if (!notification || isCreate) {\r\n        notification = { id: \"\", name: \"\", description: \"\", time: \"\" };\r\n    }\r\n\r\n    const [formState, setFormState] = useState({\r\n        name: { error: \"\", value: notification.name },\r\n        description: { error: \"\", value: notification.description },\r\n        type_send: { error: \"\", value: \"Chon gửi tới\" },\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        props.isCheck(false);\r\n        let saveUserFn: Function = (isCreate) ? addAnonymousNotification : editAnonymousNotification;\r\n        saveForm(formState, saveUserFn);\r\n    }\r\n\r\n    function saveForm(formState: IAnonymousNotificationFormState, saveFn: Function): void {\r\n        if (notification) {\r\n            const idx = toast.loading(\"Đang xử lý yêu cầu. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            \r\n            if (saveFn === addAnonymousNotification) {\r\n                dispatch(postAnonymousNotification(formState.type_send.value, {\r\n                    subject: formState.name.value,\r\n                    msgBody: formState.description.value,\r\n                    attachment: \"\"\r\n                }, idx))\r\n            }\r\n\r\n            console.log({\r\n                name: formState.name.value,\r\n                description: formState.description.value,\r\n                type_send: formState.type_send\r\n            })\r\n\r\n            dispatch(clearSelectedAnonymousNotification());\r\n            dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.None));\r\n        }\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        props.isCheck(false);\r\n        dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.name.error || !formState.name.value) as boolean;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} độ tuổi</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_email\"\r\n                                        value={formState.name.value}\r\n                                        field=\"name\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={20000}\r\n                                        label=\"Tên\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_description\"\r\n                                        field=\"description\"\r\n                                        value={formState.description.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        maxLength={100000}\r\n                                        label=\"Miêu tả\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n\r\n                                <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <SelectKeyValue id=\"input_type_send\"\r\n                                        field=\"type_send\"\r\n                                        value={formState.type_send.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        label=\"Gửi tới\"\r\n                                        options={[\r\n                                            {\r\n                                                name: \"Toàn hệ thống\",\r\n                                                value: \"admin\"\r\n                                            },\r\n                                            {\r\n                                                name: \"Chỉ giáo viên\",\r\n                                                value: \"teacher\"\r\n                                            },\r\n                                            {\r\n                                                name: \"Học viên và phụ huynh\",\r\n                                                value: \"student\"\r\n                                            }\r\n                                        ]}\r\n                                    />\r\n                                </div>\r\n                                </div>\r\n\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default TeachAgeForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/art_age.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postAnonymousNotification(recipient: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/sendEmail/${recipient}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Authorization': bearer,\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                'Access-Control-Allow-Credentials': 'true'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }\r\n        )\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postAnonymousNotification(recipient,data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then(data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Gửi thông báo thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Gửi thông báo không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { IScheduleTimeClass, ScheduleTimeClassModificationStatus } from \"../models/schedule_time_class.interface\";\r\nexport const ADD_TIME_SCHEDULE: string = \"ADD_TIME_SCHEDULE\";\r\nexport const EDIT_TIME_SCHEDULE: string = \"EDIT_TIME_SCHEDULE\";\r\nexport const REMOVE_TIME_SCHEDULE: string = \"REMOVE_TIME_SCHEDULE\";\r\nexport const CHANGE_TIME_SCHEDULE_AMOUNT: string = \"CHANGE_TIME_SCHEDULE_AMOUNT\";\r\nexport const CHANGE_TIME_SCHEDULE_PENDING_EDIT: string = \"CHANGE_TIME_SCHEDULE_PENDING_EDIT\";\r\nexport const CLEAR_TIME_SCHEDULE_PENDING_EDIT: string = \"CLEAR_TIME_SCHEDULE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_TIME_SCHEDULE_ALL: string = \"REMOVE_TIME_SCHEDULE_ALL\";\r\nexport const INITIAL_TIME_SCHEDULE: string = \"INITIAL_TIME_SCHEDULE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(schedule_time_class: IScheduleTimeClass) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        schedule_time_class\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialScheduleTimeClass(schedule_time_class: IScheduleTimeClass): IInitialScheduleTimeClassActionType {\r\n    return { type: INITIAL_TIME_SCHEDULE, schedule_time_class: schedule_time_class };\r\n}\r\n\r\nexport function removeScheduleTimeClassAll(): IRemoveScheduleTimeClassAllActionType {\r\n    return { type: REMOVE_TIME_SCHEDULE_ALL };\r\n}\r\n\r\nexport function addScheduleTimeClass(schedule_time_class: IScheduleTimeClass): IAddScheduleTimeClassActionType {\r\n    return { type: ADD_TIME_SCHEDULE, schedule_time_class: schedule_time_class };\r\n}\r\n\r\nexport function editScheduleTimeClass(schedule_time_class: IScheduleTimeClass): IEditScheduleTimeClassActionType {\r\n    return { type: EDIT_TIME_SCHEDULE, schedule_time_class: schedule_time_class };\r\n}\r\n\r\nexport function removeScheduleTimeClass(id: string): IRemoveScheduleTimeClassActionType {\r\n    return { type: REMOVE_TIME_SCHEDULE, id: id };\r\n}\r\n\r\nexport function changeSelectedScheduleTimeClass(schedule_time_class: IScheduleTimeClass): IChangeSelectedScheduleTimeClassActionType {\r\n    return { type: CHANGE_TIME_SCHEDULE_PENDING_EDIT, schedule_time_class: schedule_time_class };\r\n}\r\n\r\nexport function clearSelectedScheduleTimeClass(): IClearSelectedScheduleTimeClassActionType {\r\n    return { type: CLEAR_TIME_SCHEDULE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ScheduleTimeClassModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddScheduleTimeClassActionType { type: string, schedule_time_class: IScheduleTimeClass };\r\ninterface IEditScheduleTimeClassActionType { type: string, schedule_time_class: IScheduleTimeClass };\r\ninterface IRemoveScheduleTimeClassActionType { type: string, id: string };\r\ninterface IChangeSelectedScheduleTimeClassActionType { type: string, schedule_time_class: IScheduleTimeClass };\r\ninterface IClearSelectedScheduleTimeClassActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ScheduleTimeClassModificationStatus};\r\ninterface IRemoveScheduleTimeClassAllActionType { type: string }\r\ninterface IInitialScheduleTimeClassActionType {type: string, schedule_time_class: IScheduleTimeClass}","import { fetchDataSuccess, fetchDataError, addScheduleTimeClass, removeScheduleTimeClassAll } from \"../../../store/actions/schedule_time_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\ninterface ScheduleTimeClass {\r\n    class_name: string;\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\nexport function getScheduleTimeClass(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/classes/schedule-all`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getScheduleTimeClass(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeScheduleTimeClassAll())\r\n                //console.log(data.body.schedule_time)\r\n                data.body.schedules.map((ele: any, index: any) => {\r\n                    let x = Object.values(ele)\r\n                    let y = Object.keys(ele)\r\n                    return x.map((ele_1: any, idx: any) => {\r\n                        //console.log(ele_1)\r\n                        return Object.values(ele_1).map((ele_2: any) => {\r\n                            //console.log(ele_2)\r\n                            let x_1 = Object.values(ele_2)\r\n                            return x_1.map((ele_3: any) => {\r\n                                return ele_3.map((ele_4: any) => {\r\n                                    console.log(ele_4)\r\n                                    if (ele_4.length !== 0){\r\n                                        let time: ScheduleTimeClass = {\r\n                                            class_name: y[0],\r\n                                            start_time: ele_4[0],\r\n                                            end_time: ele_4[1]\r\n                                        }\r\n                                        dispatch(addScheduleTimeClass(time))\r\n                                    }\r\n                                    return ele_4\r\n                                })\r\n                            })\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n \r\nconst Loading = ({ type, color }) => (\r\n    <div className=\"text-center\">\r\n        <ReactLoading type={type} color={color} height={100} width={100}/>\r\n        <h3>Đang tải...</h3>\r\n    </div>\r\n);\r\n \r\nexport default Loading;","import { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalMoney(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-join-semester/total-money`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalMoney(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                localStorage.removeItem('total_money');\r\n                localStorage.setItem('total_money', data.body.total_money)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n            });\r\n}","import { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalTeacher(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/teacher/total`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalTeacher(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                localStorage.removeItem('total_teacher');\r\n                localStorage.setItem('total_teacher', data.body.user)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n            });\r\n}","import { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalParent(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/parent/total`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalParent(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                localStorage.removeItem('total_parent');\r\n                localStorage.setItem('total_parent', data.body.user)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n            });\r\n}","import { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalStudent(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/student/total`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalStudent(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                localStorage.removeItem('total_student');\r\n                localStorage.setItem('total_student', data.body.user)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n            });\r\n}","import { ICourse, CourseModificationStatus } from \"../models/course.interface\";\r\nexport const ADD_COURSE: string = \"ADD_COURSE\";\r\nexport const EDIT_COURSE: string = \"EDIT_COURSE\";\r\nexport const REMOVE_COURSE: string = \"REMOVE_COURSE\";\r\nexport const CHANGE_COURSE_AMOUNT: string = \"CHANGE_COURSE_AMOUNT\";\r\nexport const CHANGE_COURSE_PENDING_EDIT: string = \"CHANGE_COURSE_PENDING_EDIT\";\r\nexport const CLEAR_COURSE_PENDING_EDIT: string = \"CLEAR_COURSE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_COURSE_ALL: string = \"REMOVE_COURSE_ALL\";\r\nexport const INITIAL_COURSE: string = \"INITIAL_COURSE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course: ICourse) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCourse(course: ICourse): IInitialCourseActionType {\r\n    return { type: INITIAL_COURSE, course: course };\r\n}\r\n\r\nexport function removeCourseAll(): IRemoveCourseAllActionType {\r\n    return { type: REMOVE_COURSE_ALL };\r\n}\r\n\r\nexport function addCourse(course: ICourse): IAddCourseActionType {\r\n    return { type: ADD_COURSE, course: course };\r\n}\r\n\r\nexport function editCourse(course: ICourse): IEditCourseActionType {\r\n    return { type: EDIT_COURSE, course: course };\r\n}\r\n\r\nexport function removeCourse(id: string): IRemoveCourseActionType {\r\n    return { type: REMOVE_COURSE, id: id };\r\n}\r\n\r\nexport function changeSelectedCourse(course: ICourse): IChangeSelectedCourseActionType {\r\n    return { type: CHANGE_COURSE_PENDING_EDIT, course: course };\r\n}\r\n\r\nexport function clearSelectedCourse(): IClearSelectedCourseActionType {\r\n    return { type: CLEAR_COURSE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddCourseActionType { type: string, course: ICourse };\r\ninterface IEditCourseActionType { type: string, course: ICourse };\r\ninterface IRemoveCourseActionType { type: string, id: string };\r\ninterface IChangeSelectedCourseActionType { type: string, course: ICourse };\r\ninterface IClearSelectedCourseActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  CourseModificationStatus};\r\ninterface IRemoveCourseAllActionType { type: string }\r\ninterface IInitialCourseActionType {type: string, course: ICourse}","import { fetchDataSuccess, fetchDataError } from \"../../../store/actions/course.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalCourse(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/course/total`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalCourse(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                localStorage.removeItem('total_course');\r\n                localStorage.setItem('total_course', data.body.course)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { IContest, ContestModificationStatus } from \"../models/contest.interface\";\r\nexport const ADD_CONTEST: string = \"ADD_CONTEST\";\r\nexport const EDIT_CONTEST: string = \"EDIT_CONTEST\";\r\nexport const REMOVE_CONTEST: string = \"REMOVE_CONTEST\";\r\nexport const CHANGE_CONTEST_AMOUNT: string = \"CHANGE_CONTEST_AMOUNT\";\r\nexport const CHANGE_CONTEST_PENDING_EDIT: string = \"CHANGE_CONTEST_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_PENDING_EDIT: string = \"CLEAR_CONTEST_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_CONTEST_ALL: string = \"REMOVE_CONTEST_ALL\";\r\nexport const INITIAL_CONTEST: string = \"INITIAL_CONTEST\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(contest: IContest) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        contest\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialContest(contest: IContest): IInitialContestActionType {\r\n    return { type: INITIAL_CONTEST, contest: contest };\r\n}\r\n\r\nexport function removeContestAll(): IRemoveContestAllActionType {\r\n    return { type: REMOVE_CONTEST_ALL };\r\n}\r\n\r\nexport function addContest(contest: IContest): IAddContestActionType {\r\n    return { type: ADD_CONTEST, contest: contest };\r\n}\r\n\r\nexport function editContest(contest: IContest): IEditContestActionType {\r\n    return { type: EDIT_CONTEST, contest: contest };\r\n}\r\n\r\nexport function removeContest(id: string): IRemoveContestActionType {\r\n    return { type: REMOVE_CONTEST, id: id };\r\n}\r\n\r\nexport function changeSelectedContest(contest: IContest): IChangeSelectedContestActionType {\r\n    return { type: CHANGE_CONTEST_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContest(): IClearSelectedContestActionType {\r\n    return { type: CLEAR_CONTEST_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ContestModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddContestActionType { type: string, contest: IContest };\r\ninterface IEditContestActionType { type: string, contest: IContest };\r\ninterface IRemoveContestActionType { type: string, id: string };\r\ninterface IChangeSelectedContestActionType { type: string, contest: IContest };\r\ninterface IClearSelectedContestActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ContestModificationStatus};\r\ninterface IRemoveContestAllActionType { type: string }\r\ninterface IInitialContestActionType {type: string, contest: IContest}","import { fetchDataSuccess, fetchDataError } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalContest(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest/total`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalContest(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                localStorage.removeItem('total_contest');\r\n                localStorage.setItem('total_contest', data.body.contest)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\nimport TopCard from \"../../common/components/TopCard\";\nimport { IAnonymousNotificationState, IScheduleTimeClassState, IStateType} from \"../../store/models/root.interface\";\nimport { logout } from \"../../store/actions/account.actions\";\nimport jwt_decode from \"jwt-decode\";\nimport { setModificationStateAnonymousNotification } from \"../../store/actions/anonymous_notification.action\";\nimport { AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\nimport NotificationForm from \"./NotificationForm\";\nimport Popup from \"reactjs-popup\";\nimport { ToastContainer } from \"react-toastify\";\nimport { getScheduleTimeClass } from \"../../common/service/ScheduleTimeClass/GetScheduleTimeClass\";\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, ViewsDirective, ViewDirective } from \"@syncfusion/ej2-react-schedule\";\n\nimport \"@syncfusion/ej2-base/styles/material.css\";\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\nimport \"@syncfusion/ej2-lists/styles/material.css\";\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\nimport \"@syncfusion/ej2-popups/styles/material.css\";\nimport \"@syncfusion/ej2-splitbuttons/styles/material.css\";\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\n\nimport { trackPromise, usePromiseTracker } from 'react-promise-tracker';\nimport Loading from \"../../common/components/Loading\";\nimport { getTotalMoney } from \"../../common/service/UserRegisterJoinSemester/GetTotalMoney\";\nimport { getTotalTeacher } from \"../../common/service/Teacher/GetTotalTeacher\";\nimport { getTotalParent } from \"../../common/service/Parent/GetTotalParent\";\nimport { getTotalStudent } from \"../../common/service/Student/GetTotalStudent\";\nimport { getTotalCourse } from \"../../common/service/Course/GetTotalCourse\";\nimport { getTotalContest } from \"../../common/service/Contest/GetTotalContest\";\n\n\n\n\n\nconst Home: React.FC = () => {\n  const { promiseInProgress } = usePromiseTracker();\n\n  const [popup1, setPopup1] = useState(false);\n\n  function onAnonymousNotificationRemove() {\n    setPopup1(true);\n  }\n\n  function onRemovePopup1(value: boolean) {\n    setPopup1(false);\n  }\n\n  const anonymous_notifications: IAnonymousNotificationState | null = useSelector((state: IStateType) => state.anonymous_notifications);\n\n  var id_x = localStorage.getItem('total_student');\n  let  numberStudentsCount: number = 0;\n\n  if (id_x !== null) {\n    numberStudentsCount = parseInt(id_x)\n  }\n\n  var id_y = localStorage.getItem('total_parent');\n  let  numberParentsCount: number = 0;\n\n  if (id_y !== null) {\n    numberParentsCount = parseInt(id_y)\n  }\n\n  var id_z = localStorage.getItem('total_teacher');\n  let  numberTeachersCount: number = 0;\n\n  if (id_z !== null) {\n    numberTeachersCount = parseInt(id_z)\n  }\n\n  var id_k = localStorage.getItem('total_course');\n  let  numberCoursesCount: number = 0;\n\n  if (id_k !== null) {\n    numberCoursesCount = parseInt(id_k)\n  }\n\n  var id_l = localStorage.getItem('total_contest');\n  let  numberContestsCount: number = 0;\n\n  if (id_l !== null) {\n    numberContestsCount = parseInt(id_l)\n  }\n\n  var id_m = localStorage.getItem('total_money');\n  let  total_money: number = 0;\n\n  if (id_m !== null) {\n    total_money = parseFloat(id_m)\n  }\n  \n\n\n  const schedule_time_classes: IScheduleTimeClassState = useSelector((state: IStateType) => state.schedule_time_classes);\n  console.log(schedule_time_classes)\n\n  let data: object[] = []\n\n  schedule_time_classes.schedule_time_classes.map((ele, index) => {\n    if (ele !== undefined && ele != null) {\n      return data.push({\n        Id: index,\n        Subject: ele.class_name !== undefined && ele.class_name !== null ? ele.class_name : \"\",\n        StartTime: new Date(ele.start_time),\n        EndTime: new Date(ele.end_time),\n        IsAllDay: false\n      })\n    }\n    return 1\n  })\n\n  console.log(data)\n\n  const dispatch: Dispatch<any> = useDispatch();\n  dispatch(updateCurrentPath(\"Trang chủ\", \"\"));\n\n  let access_token = localStorage.getItem(\"access_token\");\n  let refresh_token = localStorage.getItem(\"refresh_token\");\n  useEffect(() => {\n    if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\n      let access_token_decode: any = jwt_decode(access_token)\n      let refresh_token_decode: any = jwt_decode(refresh_token)\n      let exp_access_token_decode = access_token_decode.exp;\n      let exp_refresh_token_decode = refresh_token_decode.exp;\n      let now_time = Date.now() / 1000;\n      console.log(exp_access_token_decode)\n      console.log(now_time)\n      if (exp_access_token_decode < now_time) {\n        if (exp_refresh_token_decode < now_time) {\n          localStorage.removeItem('access_token') // Authorization\n          localStorage.removeItem('refresh_token')\n          localStorage.removeItem('username')\n          localStorage.removeItem('role_privilege')\n          localStorage.removeItem('id')\n          localStorage.removeItem('contest_id')\n          localStorage.removeItem('schedule_id')\n          dispatch(logout())\n        }\n        else {\n          trackPromise(getTotalMoney(dispatch))\n          trackPromise(getTotalTeacher(dispatch))\n          trackPromise(getTotalParent(dispatch))\n          trackPromise(getTotalStudent(dispatch))\n          trackPromise(getTotalCourse(dispatch))\n          trackPromise(getTotalContest(dispatch))\n          trackPromise(getScheduleTimeClass(dispatch))\n        }\n      }\n      else {\n        trackPromise(getTotalMoney(dispatch))\n        trackPromise(getTotalTeacher(dispatch))\n        trackPromise(getTotalParent(dispatch))\n        trackPromise(getTotalStudent(dispatch))\n        trackPromise(getTotalCourse(dispatch))\n        trackPromise(getTotalContest(dispatch))\n        trackPromise(getScheduleTimeClass(dispatch))\n      }\n    }\n  }, [dispatch, access_token, refresh_token])\n\n  return (\n    promiseInProgress ?\n      <div className=\"row\" id=\"search-box\">\n        <div className=\"col-xl-12 col-lg-12\">\n          <div className=\"input-group\" id=\"search-content\">\n            <div className=\"form-outline\">\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\n            </div>\n          </div>\n        </div>\n      </div> : <Fragment>\n        <ToastContainer />\n        <h1 className=\"h3 mb-2 text-gray-800\">Trang chủ</h1>\n\n        <div className=\"row\">\n          <TopCard title=\"KHÓA HỌC\" text={`${numberCoursesCount}`} icon=\"book\" class=\"primary\" />\n          <TopCard title=\"CUỘC THI\" text={`${numberContestsCount}`} icon=\"book\" class=\"danger\" />\n          <TopCard title=\"DOANH THU\" text={`$${total_money}`} icon=\"dollar-sign\" class=\"success\" />\n        </div>\n\n        <div className=\"row\">\n          <TopCard title=\"HỌC VIÊN\" text={`${numberStudentsCount}`} icon=\"user\" class=\"primary\" />\n          <TopCard title=\"GIÁO VIÊN\" text={`${numberTeachersCount}`} icon=\"user\" class=\"danger\" />\n          <TopCard title=\"PHỤ HUYNH\" text={`${numberParentsCount}`} icon=\"user\" class=\"danger\" />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-xl-6 col-md-4 mb-4\">\n            <button\n              className=\"btn btn-success btn-green\"\n              onClick={() => {\n                dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.Create))\n                onAnonymousNotificationRemove()\n              }}\n            >\n              <i className=\"fas fa fa-plus\"></i>\n              Gửi thông báo\n            </button>\n          </div>\n        </div>\n\n        <Popup\n          open={popup1}\n          onClose={() => setPopup1(false)}\n          closeOnDocumentClick\n        >\n          <>\n            {\n              function () {\n                if ((anonymous_notifications.modificationState === AnonymousNotificationModificationStatus.Create)) {\n                  return <NotificationForm isCheck={onRemovePopup1} />\n                }\n              }()\n            }\n          </>\n        </Popup>\n\n\n        <div className=\"row\">\n          <div className=\"col-xl-12 col-lg-12\">\n            <div className=\"card shadow mb-4\">\n              <div className=\"card-header py-3\">\n                <h6 className=\"m-0 font-weight-bold text-green\">Lịch học chi tiết</h6>\n              </div>\n              <div className=\"card-body\">\n                <ScheduleComponent height='550px' selectedDate={new Date()} eventSettings={{\n                  dataSource: data, fields: {\n                    id: 'Id',\n                    subject: { name: 'Subject' },\n                    isAllDay: { name: 'IsAllDay' },\n                    startTime: { name: 'StartTime' },\n                    endTime: { name: 'EndTime' }\n                  }\n                }}>\n\n                  <ViewsDirective>\n                    <ViewDirective option='WorkWeek' startHour='07:00' endHour='22:00' />\n                    <ViewDirective option='Week' startHour='07:00' endHour='22:00' />\n                    <ViewDirective option='Month' showWeekend={false} />\n                  </ViewsDirective>\n                  <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\n                </ScheduleComponent>;\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </Fragment>\n  );\n}\n\nexport default Home;\n","export interface IUser {\n    id: string,\n    username: string,\n    email: string,\n    password: string,\n    status: string,\n    firstName: string,\n    lastName: string,\n    dateOfBirth: string,\n    profile_image_url: string,\n    sex: string,\n    phone: string,\n    address: string,\n    parents: string,\n    createTime: string\n}\n\nexport enum UserModificationStatus {\n    None = 0,\n    Create = 1,\n    Edit = 2,\n    Remove = 3,\n    ClosePopup = 4,\n    ImportFile = 5\n}","// This function keeps the casing unchanged for str, then perform the conversion\r\nexport function toNonAccentVietnamese(str: string) {\r\n    str = str.replace(/A|Á|À|Ã|Ạ|Â|Ấ|Ầ|Ẫ|Ậ|Ă|Ắ|Ằ|Ẵ|Ặ/g, \"A\");\r\n    str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, \"a\");\r\n    str = str.replace(/E|É|È|Ẽ|Ẹ|Ê|Ế|Ề|Ễ|Ệ/, \"E\");\r\n    str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, \"e\");\r\n    str = str.replace(/I|Í|Ì|Ĩ|Ị/g, \"I\");\r\n    str = str.replace(/ì|í|ị|ỉ|ĩ/g, \"i\");\r\n    str = str.replace(/O|Ó|Ò|Õ|Ọ|Ô|Ố|Ồ|Ỗ|Ộ|Ơ|Ớ|Ờ|Ỡ|Ợ/g, \"O\");\r\n    str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, \"o\");\r\n    str = str.replace(/U|Ú|Ù|Ũ|Ụ|Ư|Ứ|Ừ|Ữ|Ự/g, \"U\");\r\n    str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, \"u\");\r\n    str = str.replace(/Y|Ý|Ỳ|Ỹ|Ỵ/g, \"Y\");\r\n    str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, \"y\");\r\n    str = str.replace(/Đ/g, \"D\");\r\n    str = str.replace(/đ/g, \"d\");\r\n    // Some system encode vietnamese combining accent as individual utf-8 characters\r\n    str = str.replace(/\\u0300|\\u0301|\\u0303|\\u0309|\\u0323/g, \"\"); // Huyền sắc hỏi ngã nặng \r\n    str = str.replace(/\\u02C6|\\u0306|\\u031B/g, \"\"); // Â, Ê, Ă, Ơ, Ư\r\n    return str;\r\n}","import React, { Dispatch, Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, ITeacherRegisterQuantificationState, IUserState } from \"../../store/models/root.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setModificationState } from \"../../store/actions/users.action\";\r\nimport { UserModificationStatus, IUser } from \"../../store/models/user.interface\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\n\r\nexport type userListProps = {\r\n  onSelect?: (user: IUser) => void;\r\n  value?: string;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction TeacherList(props: userListProps): JSX.Element {\r\n\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n\r\n  const users: IUserState = useSelector((state: IStateType) => state.users);\r\n  const teacher_register_quantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n  const history = useHistory();\r\n\r\n  const routeChange = (user: IUser) => {\r\n    let path = '/teachers/detail';\r\n    history.push({\r\n      pathname: path,\r\n      state: { user: user }\r\n    });\r\n  }\r\n\r\n  const onChangeRequest = (teacher_id: string) => {\r\n    let path = '/teachers/request-level';\r\n    localStorage.removeItem(\"teacher_id\");\r\n    localStorage.setItem(\"teacher_id\", teacher_id.toString())\r\n    history.push({\r\n      pathname: path\r\n    });\r\n  }\r\n\r\n  const userElements: (JSX.Element | null)[] = users.teachers.filter((val) => {\r\n    if (props.value === \"\"){\r\n      return val;\r\n    }\r\n    else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.username).toLowerCase().includes(props.value.toLowerCase()) || val.username.toLowerCase().includes(props.value.toLowerCase()))){\r\n      return val;\r\n    }\r\n    return null\r\n  }).map((teacher, index) => {\r\n    if (!teacher) { return null; }\r\n    let total = 0;\r\n    let teacher_level = 0;\r\n    teacher_register_quantifications.not_approved_now.map((ele, index) => {\r\n      if (ele.teacher_id === teacher.id){\r\n        total ++;\r\n      }\r\n      return ele\r\n    })\r\n    teacher_register_quantifications.approveds.map((ele, index) => {\r\n      if (ele.teacher_id === teacher.id){\r\n        teacher_level ++;\r\n      }\r\n      return ele\r\n    })\r\n    return (<tr className={`table-row ${(users.selectedUser && users.selectedUser.id === teacher.id) ? \"selected\" : \"\"}`}\r\n\r\n      key={`user_${index}`}>\r\n      <th scope=\"row\" onClick={() => {routeChange(teacher)}}>{index + 1}</th>\r\n      <td onClick={() => {routeChange(teacher)}}>{teacher.firstName} {teacher.lastName}</td>\r\n      <td onClick={() => {routeChange(teacher)}}>{teacher.username}</td>\r\n      <td onClick={() => {routeChange(teacher)}}>{teacher.email}</td>\r\n      <td>{teacher_level}</td>\r\n      <td onClick={() => {\r\n        onChangeRequest(teacher.id)\r\n      }}>{total}</td> \r\n      {\r\n        function () {\r\n          console.log(teacher.status)\r\n          if (teacher.status !== \"\" && teacher.status !== null){\r\n            return (\r\n              <td style={{color: \"#18AB56\"}}>Đang hoạt động</td>\r\n            )\r\n          }\r\n          else { \r\n            return (\r\n              <td style={{color:\"#2F4F4F\"}}>Không hoạt động</td>\r\n            )\r\n          }\r\n        }()\r\n      }\r\n\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n          if(props.onSelect) props.onSelect(teacher);\r\n          dispatch(setModificationState(UserModificationStatus.Edit))\r\n        }}>Chỉnh sửa</button>\r\n      </td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() =>{\r\n          if(props.onSelect) props.onSelect(teacher);\r\n          dispatch(setModificationState(UserModificationStatus.Remove))\r\n        }}>Xóa</button>\r\n      </td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"table-responsive portlet\">\r\n        <table className=\"table\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Tên</th>\r\n              <th scope=\"col\">Tài khoản</th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">Trình độ</th>\r\n              <th scope=\"col\">Xác nhận trình độ</th>\r\n              <th scope=\"col\">Trạng thái</th>\r\n              <th scope=\"col\">Hành động</th>\r\n              <th scope=\"col\"></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {userElements}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default TeacherList;\r\n","export const ADD_NOTIFICATION: string = \"ADD_NOTIFICATION\";\nexport const REMOVE_NOTIFICATION: string = \"REMOVE_NOTIFICATION\";\n\nexport function addNotification(title: string, text: string): IAddNotificationActionType {\n    return { type: ADD_NOTIFICATION, text: text, title: title };\n}\n\nexport function removeNotification(id: string): IRemoveNotificationActionType {\n    return { type: REMOVE_NOTIFICATION, id: id };\n}\n\ninterface IAddNotificationActionType { type: string, text: string, title: string };\ninterface IRemoveNotificationActionType { type: string, id: string };\n","import { fetchDataSuccess, fetchDataError, removeTeacherAll, initialTeacher, addTeacher } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user {\r\n    id: string,\r\n    username: string,\r\n    email: string,\r\n    password: string,\r\n    status: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    dateOfBirth: string,\r\n    profile_image_url: string,\r\n    sex: string,\r\n    phone: string,\r\n    address: string,\r\n    parents: string,\r\n    createTime: string\r\n}\r\nexport function getTeacher(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/teacher`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTeacher(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeTeacherAll())\r\n                console.log(data.body.teachers)\r\n                data.body.teachers.map((ele: any, index: any) => {\r\n                    var user: user = {\r\n                        id: ele.id,\r\n                        username: ele.username,\r\n                        email: ele.email,\r\n                        password: ele.password,\r\n                        status: ele.status,\r\n                        firstName: ele.firstName,\r\n                        lastName: ele.lastName,\r\n                        dateOfBirth: ele.dateOfBirth,\r\n                        profile_image_url: ele.profile_image_url,\r\n                        sex: ele.sex,\r\n                        phone: ele.phone,\r\n                        address: ele.address,\r\n                        parents: ele.parents,\r\n                        createTime: ele.createTime\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialTeacher(user));\r\n                    }\r\n                    else{\r\n                        return dispatch(addTeacher(user))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getTeacher } from \"./GetTeacher\";\r\n\r\nexport function postTeacher(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/teacher`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postTeacher(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                toast.update(idx, { render: \"Chỉnh thông tin tài khoản thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER });\r\n                getTeacher(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Chỉnh thông tin tài khoản không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER });\r\n            });\r\n    };\r\n}","import { fetchDataSuccess, fetchDataError, removeTeacherAll, initialTeacher } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user {\r\n    id: string,\r\n    username: string,\r\n    email: string,\r\n    status: string,\r\n    password: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    dateOfBirth: string,\r\n    profile_image_url: string,\r\n    sex: string,\r\n    phone: string,\r\n    address: string,\r\n    parents: string,\r\n    createTime: string\r\n}\r\nexport function getUserById(dispatch: any , id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserById(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (ele => {\r\n                console.log(ele)\r\n                dispatch(fetchDataSuccess(ele))\r\n                dispatch(removeTeacherAll())\r\n                var user: user = {\r\n                    id: ele.id,\r\n                    username: ele.username,\r\n                    email: ele.email,\r\n                    password: \"\",\r\n                    status: ele.status,\r\n                    firstName: ele.firstName,\r\n                    lastName: ele.lastName,\r\n                    dateOfBirth: ele.dateOfBirth,\r\n                    profile_image_url: ele.profile_image_url,\r\n                    sex: ele.sex,\r\n                    phone: ele.phone,\r\n                    address: ele.address,\r\n                    parents: ele.parents,\r\n                    createTime: ele.createTime\r\n                }\r\n                    //console.log(strDate.substring(0, 16))\r\n                dispatch(initialTeacher(user));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getUserById } from \"../User/GetUserById\";\r\n\r\nexport function putTeacher(id: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putTeacher(id, data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                console.log(id)\r\n                toast.update(idx, { render: \"Chỉnh thông tin tài khoản thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                getUserById(dispatch, id)\r\n            })\r\n            .catch(error => {\r\n                toast.update(id, { render: \"Chỉnh thông tin tài khoản không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editTeacher, clearSelectedUser, setModificationState, addTeacher } from \"../../store/actions/users.action\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { OnChangeModel, IUserFormState } from \"../../common/types/Form.types\";\r\nimport { postTeacher } from \"../../common/service/Teacher/PostTeacher\";\r\nimport { putTeacher } from \"../../common/service/Teacher/PutTeacher\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type teacherListProps = {\r\n  isCheck: (value: boolean) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction TeacherForm(props: teacherListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const users: IUserState = useSelector((state: IStateType) => state.users);\r\n  let user: IUser | null = users.selectedUser;\r\n  const isCreate: boolean = (users.modificationState === UserModificationStatus.Create);\r\n\r\n  if (!user || isCreate) {\r\n    user = { id: \"\", username: \"\", email: \"\", password: \"\", status: \"\", firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: \"\" };\r\n  }\r\n\r\n  const [formState, setFormState] = useState({\r\n    username: { error: \"\", value: user.username },\r\n    email: { error: \"\", value: user.email },\r\n    password: { error: \"\", value: user.password }\r\n  });\r\n\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n  }\r\n\r\n  function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if (isFormInvalid()) {\r\n      return;\r\n    }\r\n    props.isCheck(false);\r\n    let saveUserFn: Function = (isCreate) ? addTeacher : editTeacher;\r\n    saveForm(formState, saveUserFn);\r\n  }\r\n\r\n  function saveForm(formState: IUserFormState, saveFn: Function): void {\r\n    if (user) {\r\n\r\n      const id = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n\r\n      if (saveFn === addTeacher){\r\n        dispatch(postTeacher({\r\n          username: formState.username.value,\r\n          email: formState.email.value,\r\n          password: formState.password.value,\r\n          firstName: null,\r\n          lastName: null,\r\n          dateOfBirth: null,\r\n          profile_image_url: null,\r\n          sex: null,\r\n          phone: null,\r\n          address: null,\r\n          roleNames: [\"TEACHER_USER\"]\r\n        }, id));\r\n      }\r\n\r\n      else if (saveFn === editTeacher) {\r\n        dispatch(putTeacher(user.id, {\r\n          username: formState.username.value,\r\n          email: formState.email.value,\r\n          password: formState.password.value,\r\n          firstName: null,\r\n          lastName: null,\r\n          dateOfBirth: null,\r\n          profile_image_url: null,\r\n          sex: null,\r\n          phone: null,\r\n          address: null,\r\n          roleNames: [\"TEACHER_USER\"]\r\n        }, id));\r\n      }\r\n\r\n      dispatch(addNotification(\"Giáo viên\", ` ${formState.username.value} chỉnh bởi bạn`));\r\n      dispatch(clearSelectedUser());\r\n      dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    props.isCheck(false);\r\n    dispatch(setModificationState(UserModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid();\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  function isFormInvalid(): boolean {\r\n    return (formState.username.error || formState.email.error\r\n      || !formState.email.value || !formState.username.value || !formState.password.value ) as boolean;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row text-left\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} giáo viên</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={saveUser}>\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col-md-6\">\r\n                    <TextInput id=\"input_username\"\r\n                      field=\"username\"\r\n                      value={formState.username.value}\r\n                      onChange={hasFormValueChanged}\r\n                      required={true}\r\n                      maxLength={100}\r\n                      label=\"Tên đăng nhập\"\r\n                      placeholder=\"\" />\r\n                  </div>\r\n                  <div className=\"form-group col-md-6\">\r\n                    <TextInput id=\"input_email\"\r\n                      field=\"email\"\r\n                      value={formState.email.value}\r\n                      onChange={hasFormValueChanged}\r\n                      required={true}\r\n                      maxLength={200}\r\n                      label=\"Email\"\r\n                      placeholder=\"\" />\r\n                  </div>\r\n                </div>\r\n                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TeacherForm;\r\n","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteUser(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/user/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteUser(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport { clearSelectedUser, setModificationState, addTeacher } from \"../../store/actions/users.action\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { postTeacher } from \"../../common/service/Teacher/PostTeacher\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type teacherListProps = {\r\n  isCheck: (value: boolean) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction TeacherImportForm(props: teacherListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const users: IUserState = useSelector((state: IStateType) => state.users);\r\n  let user: IUser | null = users.selectedUser;\r\n  const isCreate: boolean = (users.modificationState === UserModificationStatus.Create);\r\n\r\n  if (!user || isCreate) {\r\n    user = { id: \"\", username: \"\", email: \"\", password: \"\", status: \"\", firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: \"\" };\r\n  }\r\n\r\n  function saveForm(formState: any, saveFn: Function): void {\r\n    const id = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\r\n      position: toast.POSITION.TOP_CENTER\r\n    });\r\n\r\n    if (user) {\r\n      console.log({\r\n        username: formState.username,\r\n        email: formState.email,\r\n        password: null,\r\n        firstName: null,\r\n        lastName: null,\r\n        dateOfBirth: null,\r\n        profile_image_url: null,\r\n        sex: null,\r\n        phone: null,\r\n        address: null,\r\n        roleNames: [\"TEACHER_USER\"]\r\n      })\r\n      if (saveFn === addTeacher){\r\n        dispatch(postTeacher({\r\n          username: formState.username,\r\n          email: formState.email,\r\n          password: null,\r\n          firstName: null,\r\n          lastName: null,\r\n          dateOfBirth: null,\r\n          profile_image_url: null,\r\n          sex: null,\r\n          phone: null,\r\n          address: null,\r\n          roleNames: [\"TEACHER_USER\"]\r\n        }, id));\r\n      }\r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    props.isCheck(false);\r\n    dispatch(setModificationState(UserModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    return !csvFile ? \"disabled\" : \"\";\r\n  }\r\n\r\n  const [csvFile, setCsvFile] = useState<any>();\r\n\r\n  const processCSV = (str: string, delim = ',') => {\r\n    console.log('hello')\r\n    const headers = str.slice(0, str.indexOf('\\n')).split(delim);\r\n    console.log(headers)\r\n    const rows = str.slice(str.indexOf('\\n') + 1).split('\\n');\r\n    const headerx = [\"username\", \"email\"]\r\n\r\n    const newArray = rows.map(row => {\r\n      const values = row.split(delim);\r\n      const eachObject = headerx.reduce((obj: any, header, i) => {\r\n        obj[header] = values[i];\r\n        return obj;\r\n      }, {})\r\n      return eachObject;\r\n    })\r\n    console.log(newArray)\r\n    newArray.map((ele: any, index: any) => {\r\n      if (ele.username !== \"\") {\r\n        let x = {\r\n            username: ele.username,\r\n            email: ele.email\r\n        };\r\n\r\n        console.log(x)\r\n        let saveUserFn: Function = addTeacher;\r\n        saveForm(x, saveUserFn);\r\n        dispatch(addNotification(\"Giáo viên\", ` ${x.username} chỉnh bởi bạn`));\r\n        dispatch(clearSelectedUser());\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n        //let saveUserFn: Function = addTeacher;\r\n        //saveForm(x, saveUserFn);\r\n      }\r\n      return 0\r\n    })\r\n  }\r\n\r\n  const saveTeacherCSV = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    props.isCheck(false)\r\n    const file = csvFile;\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = function (e: any) {\r\n        const text = e.target.result;\r\n        processCSV(text)\r\n    }\r\n\r\n    reader.readAsText(file);\r\n\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row text-left\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} giáo viên</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={saveTeacherCSV}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"profile_image\">Chọn file (.xml):</label>\r\n                  <input\r\n                  type={\"file\"}\r\n                  accept=\".csv,.xlsx,.xls\"\r\n                  id=\"csvFile\"\r\n                  onChange={(e: any) => {\r\n                    setCsvFile(e.target.files[0])\r\n                  }}\r\n                />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <a href={`${process.env.REACT_APP_API_LOCAL}\\\\example.csv`}>File mẫu</a>\r\n                </div>\r\n                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TeacherImportForm;\r\n","import { ITeacherRegisterQuantification, TeacherRegisterQuantificationModificationStatus } from \"../models/teacher_register_quantification.interface\";\r\n\r\n// Approved\r\nexport const REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_ALL: string = \"REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_ALL\";\r\nexport const INITIAL_TEACHER_REGISTER_QUANTIFICATION_APPROVED: string = \"INITIAL_TEACHER_REGISTER_QUANTIFICATION_APPROVED\";\r\nexport const ADD_TEACHER_REGISTER_QUANTIFICATION_APPROVED: string = \"ADD_TEACHER_REGISTER_QUANTIFICATION_APPROVED\";\r\nexport const EDIT_TEACHER_REGISTER_QUANTIFICATION_APPROVED: string = \"EDIT_TEACHER_REGISTER_QUANTIFICATION_APPROVED\";\r\nexport const REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED: string = \"REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED\";\r\nexport const CHANGE_TEACHER_REGISTER_QUANTIFICATION_AMOUNT_APPROVED: string = \"CHANGE_TEACHER_REGISTER_QUANTIFICATION_AMOUNT_APPROVED\";\r\nexport const CHANGE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT: string = \"CHANGE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT\";\r\nexport const CLEAR_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT: string = \"CLEAR_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT\";\r\n\r\n// Not approved\r\nexport const REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_ALL: string = \"REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_ALL\";\r\nexport const INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: string = \"INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED\";\r\nexport const ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: string = \"ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED\";\r\nexport const EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: string = \"EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED\";\r\nexport const REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: string = \"REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED\";\r\nexport const CHANGE_TEACHER_REGISTER_QUANTIFICATION_AMOUNT_NOT_APPROVED: string = \"CHANGE_TEACHER_REGISTER_QUANTIFICATION_AMOUNT_NOT_APPROVED\";\r\nexport const CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT: string = \"CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT\";\r\nexport const CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT: string = \"CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT\";\r\n\r\n// Not approved now\r\nexport const REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_ALL: string = \"REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_ALL\";\r\nexport const INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: string = \"INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW\";\r\nexport const ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: string = \"ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW\";\r\nexport const EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: string = \"EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW\";\r\nexport const REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: string = \"REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW\";\r\nexport const CHANGE_TEACHER_REGISTER_QUANTIFICATION_AMOUNT_NOT_APPROVED_NOW: string = \"CHANGE_TEACHER_REGISTER_QUANTIFICATION_AMOUNT_NOT_APPROVED_NOW\";\r\nexport const CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT: string = \"CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT\";\r\nexport const CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT: string = \"CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT\";\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(teacher_register_quantification: ITeacherRegisterQuantification) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        teacher_register_quantification\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function setModificationState(value: TeacherRegisterQuantificationModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n// Approved\r\nexport function initialTeacherRegisterQuatificationApproved(teacher_register_quantification_approved: ITeacherRegisterQuantification): IInitialTeacherRegisterQuatificationApprovedActionType {\r\n    return { type: INITIAL_TEACHER_REGISTER_QUANTIFICATION_APPROVED, teacher_register_quantification_approved: teacher_register_quantification_approved };\r\n}\r\n\r\nexport function removeTeacherRegisterQuatificationApprovedAll(): IRemoveTeacherRegisterQuatificationAllApprovedActionType {\r\n    return { type: REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_ALL };\r\n}\r\n\r\nexport function addTeacherRegisterQuatificationApproved(teacher_register_quantification_approved: ITeacherRegisterQuantification): IAddTeacherRegisterQuatificationApprovedActionType {\r\n    return { type: ADD_TEACHER_REGISTER_QUANTIFICATION_APPROVED, teacher_register_quantification_approved: teacher_register_quantification_approved };\r\n}\r\n\r\nexport function editTeacherRegisterQuatificationApproved(teacher_register_quantification_approved: ITeacherRegisterQuantification): IEditTeacherRegisterQuatificationApprovedActionType {\r\n    return { type: EDIT_TEACHER_REGISTER_QUANTIFICATION_APPROVED, teacher_register_quantification_approved: teacher_register_quantification_approved };\r\n}\r\n\r\nexport function removeTeacherRegisterQuatificationApproved(id: string): IRemoveTeacherRegisterQuatificationApprovedActionType {\r\n    return { type: REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED, id: id };\r\n}\r\n\r\nexport function changeSelectedTeacherRegisterQuatificationApproved(teacher_register_quantification_approved: ITeacherRegisterQuantification): IChangeSelectedTeacherRegisterQuatificationApprovedActionType {\r\n    return { type: CHANGE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT, teacher_register_quantification_approved: teacher_register_quantification_approved };\r\n}\r\n\r\nexport function clearSelectedTeacherRegisterQuatification(): IClearSelectedTeacherRegisterQuatificationApprovedActionType {\r\n    return { type: CLEAR_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT };\r\n}\r\n\r\n\r\n// Not Approved\r\nexport function initialTeacherRegisterQuatificationNotApproved(teacher_register_quantification_not_approved: ITeacherRegisterQuantification): IInitialTeacherRegisterQuatificationNotApprovedActionType {\r\n    return { type: INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED, teacher_register_quantification_not_approved: teacher_register_quantification_not_approved };\r\n}\r\n\r\nexport function removeTeacherRegisterQuatificationNotApprovedAll(): IRemoveTeacherRegisterQuatificationAllNotApprovedActionType {\r\n    return { type: REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_ALL };\r\n}\r\n\r\nexport function addTeacherRegisterQuatificationNotApproved(teacher_register_quantification_not_approved: ITeacherRegisterQuantification): IAddTeacherRegisterQuatificationNotApprovedActionType {\r\n    return { type: ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED, teacher_register_quantification_not_approved: teacher_register_quantification_not_approved };\r\n}\r\n\r\nexport function editTeacherRegisterQuatificationNotApproved(teacher_register_quantification_not_approved: ITeacherRegisterQuantification): IEditTeacherRegisterQuatificationNotApprovedActionType {\r\n    return { type: EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED, teacher_register_quantification_not_approved: teacher_register_quantification_not_approved };\r\n}\r\n\r\nexport function removeTeacherRegisterQuatificationNotApproved(id: string): IRemoveTeacherRegisterQuatificationNotApprovedActionType {\r\n    return { type: REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED, id: id };\r\n}\r\n\r\nexport function changeSelectedTeacherRegisterQuatificationNotApproved(teacher_register_quantification_not_approved: ITeacherRegisterQuantification): IChangeSelectedTeacherRegisterQuatificationNotApprovedActionType {\r\n    return { type: CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT, teacher_register_quantification_not_approved: teacher_register_quantification_not_approved };\r\n}\r\n\r\nexport function clearSelectedTeacherRegisterNotQuatification(): IClearSelectedTeacherRegisterQuatificationNotApprovedActionType {\r\n    return { type: CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT };\r\n}\r\n\r\n\r\n\r\n// Not Approved now\r\nexport function initialTeacherRegisterQuatificationNotApprovedNow(teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification): IInitialTeacherRegisterQuatificationNotApprovedNowActionType {\r\n    return { type: INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW, teacher_register_quantification_not_approved_now: teacher_register_quantification_not_approved_now };\r\n}\r\n\r\nexport function removeTeacherRegisterQuatificationNotApprovedNowAll(): IRemoveTeacherRegisterQuatificationAllNotApprovedNowActionType {\r\n    return { type: REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_ALL };\r\n}\r\n\r\nexport function addTeacherRegisterQuatificationNotApprovedNow(teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification): IAddTeacherRegisterQuatificationNotApprovedNowActionType {\r\n    return { type: ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW, teacher_register_quantification_not_approved_now: teacher_register_quantification_not_approved_now };\r\n}\r\n\r\nexport function editTeacherRegisterQuatificationNotApprovedNow(teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification): IEditTeacherRegisterQuatificationNotApprovedNowActionType {\r\n    return { type: EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW, teacher_register_quantification_not_approved_now: teacher_register_quantification_not_approved_now };\r\n}\r\n\r\nexport function removeTeacherRegisterQuatificationNotApprovedNow(id: string): IRemoveTeacherRegisterQuatificationNotApprovedNowActionType {\r\n    return { type: REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedTeacherRegisterQuatificationNotApprovedNow(teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification): IChangeSelectedTeacherRegisterQuatificationNotApprovedNowActionType {\r\n    return { type: CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT, teacher_register_quantification_not_approved_now: teacher_register_quantification_not_approved_now };\r\n}\r\n\r\nexport function clearSelectedTeacherRegisterNotQuatificationNow(): IClearSelectedTeacherRegisterQuatificationNotApprovedNowActionType {\r\n    return { type: CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT };\r\n}\r\n\r\n// Approved\r\ninterface IAddTeacherRegisterQuatificationApprovedActionType { type: string, teacher_register_quantification_approved: ITeacherRegisterQuantification };\r\ninterface IEditTeacherRegisterQuatificationApprovedActionType { type: string, teacher_register_quantification_approved: ITeacherRegisterQuantification };\r\ninterface IRemoveTeacherRegisterQuatificationApprovedActionType { type: string, id: string };\r\ninterface IChangeSelectedTeacherRegisterQuatificationApprovedActionType { type: string, teacher_register_quantification_approved: ITeacherRegisterQuantification };\r\ninterface IClearSelectedTeacherRegisterQuatificationApprovedActionType { type: string };\r\ninterface IRemoveTeacherRegisterQuatificationAllApprovedActionType { type: string }\r\ninterface IInitialTeacherRegisterQuatificationApprovedActionType {type: string, teacher_register_quantification_approved: ITeacherRegisterQuantification}\r\n\r\n// Not Approved\r\ninterface IAddTeacherRegisterQuatificationNotApprovedActionType { type: string, teacher_register_quantification_not_approved: ITeacherRegisterQuantification };\r\ninterface IEditTeacherRegisterQuatificationNotApprovedActionType { type: string, teacher_register_quantification_not_approved: ITeacherRegisterQuantification };\r\ninterface IRemoveTeacherRegisterQuatificationNotApprovedActionType { type: string, id: string };\r\ninterface IChangeSelectedTeacherRegisterQuatificationNotApprovedActionType { type: string, teacher_register_quantification_not_approved: ITeacherRegisterQuantification };\r\ninterface IClearSelectedTeacherRegisterQuatificationNotApprovedActionType { type: string };\r\ninterface IRemoveTeacherRegisterQuatificationAllNotApprovedActionType { type: string }\r\ninterface IInitialTeacherRegisterQuatificationNotApprovedActionType {type: string, teacher_register_quantification_not_approved: ITeacherRegisterQuantification}\r\n\r\n// Not Approved now\r\ninterface IAddTeacherRegisterQuatificationNotApprovedNowActionType { type: string, teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification };\r\ninterface IEditTeacherRegisterQuatificationNotApprovedNowActionType { type: string, teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification };\r\ninterface IRemoveTeacherRegisterQuatificationNotApprovedNowActionType { type: string, id: string };\r\ninterface IChangeSelectedTeacherRegisterQuatificationNotApprovedNowActionType { type: string, teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification };\r\ninterface IClearSelectedTeacherRegisterQuatificationNotApprovedNowActionType { type: string };\r\ninterface IRemoveTeacherRegisterQuatificationAllNotApprovedNowActionType { type: string }\r\ninterface IInitialTeacherRegisterQuatificationNotApprovedNowActionType {type: string, teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification}\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  TeacherRegisterQuantificationModificationStatus};","import { fetchDataSuccess, fetchDataError, removeTeacherRegisterQuatificationApprovedAll, initialTeacherRegisterQuatificationApproved, addTeacherRegisterQuatificationApproved, removeTeacherRegisterQuatificationNotApprovedNowAll, removeTeacherRegisterQuatificationNotApprovedAll, initialTeacherRegisterQuatificationNotApproved, addTeacherRegisterQuatificationNotApproved, initialTeacherRegisterQuatificationNotApprovedNow, addTeacherRegisterQuatificationNotApprovedNow } from \"../../../store/actions/teacher_register_quantification.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface TeacherRegisterQuantification {\r\n    id: string;\r\n    teacher_id: string;\r\n    teacher_name: string;\r\n    reviewer_id: string;\r\n    course_id: string;\r\n    course_name: string;\r\n    art_age_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    degree_photo_url: string;\r\n    status: string;\r\n}\r\nexport function getTeacherRegisterQuantification(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/teacher-register-level`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTeacherRegisterQuantification(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeTeacherRegisterQuatificationApprovedAll())\r\n                dispatch(removeTeacherRegisterQuatificationNotApprovedNowAll())\r\n                dispatch(removeTeacherRegisterQuatificationNotApprovedAll())\r\n                console.log(data.body.teacher_register_qualification)\r\n                data.body.teacher_register_qualification.map((ele: any, index: any) => {\r\n                    var TeacherRegisterQuantification: TeacherRegisterQuantification = {\r\n                        id: ele.id,\r\n                        teacher_id: ele.teacher_id,\r\n                        reviewer_id: ele.reviewer_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        course_id: ele.course_id,\r\n                        course_name:ele.course_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        degree_photo_url: ele.degree_photo_url,\r\n                        status: ele.status\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (ele.status === \"Approved\"){\r\n                        if (index === 0){\r\n                            return dispatch(initialTeacherRegisterQuatificationApproved(TeacherRegisterQuantification));\r\n                        }\r\n                        else{\r\n                            return dispatch(addTeacherRegisterQuatificationApproved(TeacherRegisterQuantification))\r\n                        }\r\n                    }\r\n                    else if (ele.status === \"Not approved now\"){\r\n                        if (index === 0){\r\n                            return dispatch(initialTeacherRegisterQuatificationNotApprovedNow(TeacherRegisterQuantification));\r\n                        }\r\n                        else{\r\n                            return dispatch(addTeacherRegisterQuatificationNotApprovedNow(TeacherRegisterQuantification))\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (index === 0){\r\n                            return dispatch(initialTeacherRegisterQuatificationNotApproved(TeacherRegisterQuantification));\r\n                        }\r\n                        else{\r\n                            return dispatch(addTeacherRegisterQuatificationNotApproved(TeacherRegisterQuantification))\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport TeacherList from \"./TeacherList\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./Teacher.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IUserState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport {clearSelectedUser, setModificationState, changeSelectedUser, removeTeacher  } from \"../../store/actions/users.action\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport TeacherForm from \"./TeacherForm\";\r\nimport { getTeacher } from \"../../common/service/Teacher/GetTeacher\";\r\nimport { deleteUser } from \"../../common/service/User/DeleteUser\";\r\nimport TeacherImportForm from \"./TeacherImportForm\";\r\nimport { getTeacherRegisterQuantification } from \"../../common/service/TeacherRegisterQuantification/GetTeacherRegisterQuantification\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\n\r\n\r\nconst Teacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = users.teachers.length;\r\n    const [popup, setPopup] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getTeacher(dispatch))\r\n                    trackPromise(getTeacherRegisterQuantification(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getTeacher(dispatch))\r\n                trackPromise(getTeacherRegisterQuantification(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token])\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedUser());\r\n        dispatch(updateCurrentPath(\"Giáo viên\", \"Danh sách\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    function onUserSelect(user: IUser): void {\r\n        dispatch(changeSelectedUser(user));\r\n        onUserRemove();\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n\r\n    function onUserRemove() {\r\n        setPopup(true);\r\n    }\r\n\r\n    function onRemovePopup(value: boolean) {\r\n        setPopup(value);\r\n    }\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> :<Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Giáo viên</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"GIÁO VIÊN\" text={`${numberItemsCount}`} icon=\"user\" class=\"primary\" />\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                                setSearchTerm(event.target.value)\r\n                                console.log(searchTerm)\r\n                            }}/>\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Danh sách giáo viên</h6>\r\n                            <div className=\"header-buttons\">\r\n                                <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                    dispatch(setModificationState(UserModificationStatus.ImportFile))\r\n                                    onUserRemove()\r\n                                }}>\r\n                                    <i className=\"fas fa fa-plus\"></i>\r\n                                    Import file\r\n                                </button>\r\n                                <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                    dispatch(setModificationState(UserModificationStatus.Create))\r\n                                    onUserRemove()\r\n                                }}>\r\n                                    <i className=\"fas fa fa-plus\"></i>\r\n                                    Thêm thủ công\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <TeacherList\r\n                                onSelect={onUserSelect} value={searchTerm}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <Popup\r\n                open={popup}\r\n                onClose={() => setPopup(false)}\r\n                closeOnDocumentClick\r\n            >\r\n                <>\r\n                    {\r\n                        function () {\r\n                            if ((users.modificationState === UserModificationStatus.Create) || ((users.selectedUser) && (users.modificationState === UserModificationStatus.Edit))) {\r\n                                return <TeacherForm isCheck={onRemovePopup}/>\r\n                            }\r\n\r\n                            else if (users.modificationState === UserModificationStatus.ImportFile){\r\n                                return <TeacherImportForm isCheck={onRemovePopup}/>\r\n                            }\r\n                        }()\r\n                    }\r\n                </>\r\n            </Popup>\r\n            {\r\n                function () {\r\n                    if ((users.selectedUser) && (users.modificationState === UserModificationStatus.Remove)) {\r\n                        return (\r\n                            <Popup\r\n                                open={popup}\r\n                                onClose={() => setPopup(false)}\r\n                                closeOnDocumentClick\r\n                            >\r\n                                <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                    <div className=\"popup-title\">\r\n                                        Are you sure?\r\n                                    </div>\r\n                                    <div className=\"popup-content\">\r\n                                        <button type=\"button\"\r\n                                            className=\"btn btn-danger\"\r\n                                            onClick={() => {\r\n                                                if (!users.selectedUser) {\r\n                                                    return;\r\n                                                }\r\n                                                dispatch(deleteUser(users.selectedUser.id))\r\n                                                dispatch(addNotification(\"Giáo viên\", `${users.selectedUser.username} đã được xóa!`));\r\n                                                dispatch(removeTeacher(users.selectedUser.id));\r\n                                                dispatch(clearSelectedUser());\r\n                                                setPopup(false);\r\n                                            }}>Remove\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </Popup>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Teacher;\r\n","export interface IProduct {\n    id: string;\n    name: string;\n    category: string;\n    description: string;\n    amount: number;\n    price: number;\n    hasExpiryDate: boolean;\n}\n\nexport enum ProductModificationStatus {\n    None = 0,\n    Create = 1,\n    Edit = 2\n}","import { IProduct, ProductModificationStatus } from \"../models/product.interface\";\nexport const ADD_PRODUCT: string = \"ADD_PRODUCT\";\nexport const EDIT_PRODUCT: string = \"EDIT_PRODUCT\";\nexport const REMOVE_PRODUCT: string = \"REMOVE_PRODUCT\";\nexport const CHANGE_PRODUCT_AMOUNT: string = \"CHANGE_PRODUCT_AMOUNT\";\nexport const CHANGE_PRODUCT_PENDING_EDIT: string = \"CHANGE_PRODUCT_PENDING_EDIT\";\nexport const CLEAR_PRODUCT_PENDING_EDIT: string = \"CLEAR_PRODUCT_PENDING_EDIT\";\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\n\nexport function addProduct(product: IProduct): IAddProductActionType {\n    return { type: ADD_PRODUCT, product: product };\n}\n\nexport function editProduct(product: IProduct): IEditProductActionType {\n    return { type: EDIT_PRODUCT, product: product };\n}\n\nexport function removeProduct(id: string): IRemoveProductActionType {\n    return { type: REMOVE_PRODUCT, id: id };\n}\n\nexport function changeProductAmount(id: string, amount: number): IChangeProductAmountType {\n    return { type: CHANGE_PRODUCT_AMOUNT, id: id, amount: amount };\n}\n\nexport function changeSelectedProduct(product: IProduct): IChangeSelectedProductActionType {\n    return { type: CHANGE_PRODUCT_PENDING_EDIT, product: product };\n}\n\nexport function clearSelectedProduct(): IClearSelectedProductActionType {\n    return { type: CLEAR_PRODUCT_PENDING_EDIT };\n}\n\nexport function setModificationState(value: ProductModificationStatus): ISetModificationStateActionType {\n    return { type: SET_MODIFICATION_STATE, value: value };\n}\n\ninterface IAddProductActionType { type: string, product: IProduct };\ninterface IEditProductActionType { type: string, product: IProduct };\ninterface IRemoveProductActionType { type: string, id: string };\ninterface IChangeSelectedProductActionType { type: string, product: IProduct };\ninterface IClearSelectedProductActionType { type: string };\ninterface ISetModificationStateActionType { type: string, value:  ProductModificationStatus};\ninterface IChangeProductAmountType {type: string, id: string, amount: number};","import React from \"react\";\r\nimport { IProduct } from \"../../store/models/product.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { RatingStar } from \"rating-star\";\r\n\r\nexport type productListProps = {\r\n    onSelect?: (product: IProduct) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nconst data = [\r\n    {\r\n        'id': 1,\r\n        'class_name': 'CM-1',\r\n        'course_name': 'Chì màu 4-6 tuổi',\r\n        'semester': 'Học kì 1 2022',\r\n        'rating_star': 4\r\n    },\r\n    {\r\n        'id': 2,\r\n        'class_name': 'CM-2',\r\n        'course_name': 'Chì màu 4-6 tuổi',\r\n        'semester': 'Học kì 1 2022',\r\n        'rating_star': 5\r\n    },\r\n    {\r\n        'id': 3,\r\n        'class_name': 'CM-3',\r\n        'course_name': 'Chì màu 4-6 tuổi',\r\n        'semester': 'Học kì 1 2022',\r\n        'rating_star': 3.5\r\n    },\r\n]\r\n\r\nfunction HistoryTeach(props: productListProps): JSX.Element {\r\n    const history = useHistory();\r\n\r\n    const routeChange = () => {\r\n        let path = '/teachers/detail';\r\n        history.push(path);\r\n    }\r\n\r\n    const productElements: (JSX.Element | null)[] = data.map(product => {\r\n        if (!product) { return null; }\r\n        return (<tr className={`table-row`}\r\n            onClick={routeChange}\r\n            key={`product_${product.id}`}>\r\n            <th scope=\"row\">{product.id}</th>\r\n            <td>{product.class_name}</td>\r\n            <td>{product.course_name}</td>\r\n            <td>{product.semester}</td>\r\n            <td>\r\n                <RatingStar id={product.class_name} rating={product.rating_star} />\r\n            </td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"table-responsive portlet\">\r\n            <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Mã lớp</th>\r\n                        <th scope=\"col\">Khóa học</th>\r\n                        <th scope=\"col\">Học kì</th>\r\n                        <th scope=\"col\">Đánh giá</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {productElements}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default HistoryTeach;\r\n","import { logout } from \"../../../store/actions/account.actions\";\r\nimport { fetchDataSuccess, fetchDataError, removeCourseAll, initialCourse, addCourse } from \"../../../store/actions/course.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface Course {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    creator_id: string;\r\n    art_type_id: string;\r\n    art_level_id: string;\r\n    art_age_id: string;\r\n    art_age_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    checked_tutoral: boolean;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getCourse(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/course?page=0&size=10`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getCourse(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeCourseAll())\r\n                console.log(data.body.courses)\r\n                data.body.courses.map((ele: any, index: any) => {\r\n                    var course: Course = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        is_enabled: ele.is_enabled,\r\n                        creator_id: ele.creator_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        art_level_id: ele.art_level_id,\r\n                        art_age_name: ele.art_age_name, \r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        checked_tutoral: ele.checked_tutoral,\r\n                        art_age_id: ele.art_age_id,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n\r\n                    }\r\n                    console.log(course)\r\n                    if (index === 0){\r\n                        return dispatch(initialCourse(course));\r\n                    }\r\n                    else{\r\n                        return dispatch(addCourse(course))\r\n                    }\r\n                })\r\n                dispatch(logout())\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./DetailTeacher.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IProductState, IStateType, IRootPageStateType, ICourseState, ITeacherRegisterQuantificationState } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedProduct, setModificationState,\r\n    changeSelectedProduct\r\n} from \"../../store/actions/products.action\";\r\nimport { ProductModificationStatus, IProduct } from \"../../store/models/product.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport HistoryTeach from \"./HistoryTeach\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { IUser } from \"../../store/models/user.interface\";\r\nimport { getCourse } from \"../../common/service/Course/GetCourse\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n\r\nconst DetailTeacher: React.FC = () => {\r\n    const [checked, setChecked] = useState(true);\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const products: IProductState = useSelector((state: IStateType) => state.products);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = products.products.length;\r\n    const teacher_register_quantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n    const courses: ICourseState = useSelector((state: IStateType) => state.courses);\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    dispatch(getCourse(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                dispatch(getCourse(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token])\r\n\r\n    const { state } = useLocation<any>();\r\n    let user: IUser = { id: \"\", username: \"\", email: \"\", password: \"\", status: \"\", firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: \"\" };\r\n    if (typeof state !== undefined){\r\n        user = state.user\r\n    }\r\n\r\n    console.log(user)\r\n\r\n    let course_ids: string[] = [];\r\n    teacher_register_quantifications.approveds.map((ele, index) => {\r\n        if (ele.teacher_id === user.id && ele.status === \"Approved\"){\r\n            course_ids.push(ele.course_id)\r\n        } \r\n        return ele\r\n    })\r\n    console.log(course_ids)\r\n    console.log(courses.courses)\r\n\r\n    let course_name = \"\";\r\n    course_ids.map((ele, index) => {\r\n        return courses.courses.map(course => {\r\n            if (course.id === ele){\r\n                console.log(\"hello\")\r\n                if (course_name !== \"\"){\r\n                    course_name = course_name + \", \"+ course.name;\r\n                }\r\n                else {\r\n                    course_name = course_name + course.name;\r\n                    console.log(\"hello\")\r\n                }\r\n            }\r\n            return course\r\n        })\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedProduct());\r\n        dispatch(updateCurrentPath(\"products\", \"list\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    function onProductSelect(product: IProduct): void {\r\n        dispatch(changeSelectedProduct(product));\r\n        dispatch(setModificationState(ProductModificationStatus.None));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Giáo viên</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"LỚP ĐANG DẠY\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n                <TopCard title=\"LỚP ĐÃ DẠY\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked === false) {\r\n                            setChecked(true)\r\n                        }\r\n                    }} style={{\r\n                        color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Thông tin giáo viên</h6>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked === true) {\r\n                            setChecked(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                        }}>Lịch sử dạy</h6>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12\">\r\n                                    <div className=\"card shadow mb-4\">\r\n                                        <div className=\"card-body\">\r\n                                            <form>\r\n                                                <div className=\"form-row\">\r\n                                                    <div className=\"form-group col-md-6 text-center\">\r\n                                                    <img className=\"img-profile\" id=\"img-profile\" alt=\"\"\r\n                                                        src={user.profile_image_url} />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Tên đăng nhập\"\r\n                                                            placeholder={user.username} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Ngày sinh\"\r\n                                                            placeholder={user.dateOfBirth} />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Giới tính\"\r\n                                                            placeholder={user.sex} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Số điện thoại\"\r\n                                                            placeholder={user.phone} />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Địa chỉ\"\r\n                                                            placeholder={user.address} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-row\">\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={100}\r\n                                                            label=\"Trình độ\"\r\n                                                            placeholder={course_name} />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12\">\r\n                                    <div className=\"card shadow mb-4\">\r\n                                        <div className=\"card-header py-3\">\r\n                                            <h6 className=\"m-0 font-weight-bold text-green\">Lịch sử dạy</h6>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <HistoryTeach\r\n                                                onSelect={onProductSelect}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default DetailTeacher;\r\n","import React, { Dispatch, Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setModificationState } from \"../../store/actions/users.action\";\r\nimport { UserModificationStatus, IUser } from \"../../store/models/user.interface\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\n\r\nexport type userListProps = {\r\n  onSelect?: (user: IUser) => void;\r\n  value?: string;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction StudentList(props: userListProps): JSX.Element {\r\n\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n\r\n  const users: IUserState = useSelector((state: IStateType) => state.users);\r\n  const history = useHistory();\r\n\r\n\r\n  function routeChange() {\r\n    let path = '/students/detail';\r\n    history.push(path);\r\n  }\r\n\r\n\r\n  const userElements: (JSX.Element | null)[] = users.students.filter((val) => {\r\n    if (props.value === \"\"){\r\n      return val;\r\n    }\r\n    else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.username).toLowerCase().includes(props.value.toLowerCase()) || val.username.toLowerCase().includes(props.value.toLowerCase()))){\r\n      return val;\r\n    }\r\n    return null\r\n  }).map((student, index) => {\r\n    if (!student) { return null; }\r\n    return (<tr className={`table-row ${(users.selectedUser && users.selectedUser.id === student.id) ? \"selected\" : \"\"}`}\r\n\r\n      key={`user_${index}`}>\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td onClick={() => {\r\n        if(props.onSelect) props.onSelect(student);\r\n        routeChange()\r\n      }}\r\n      >\r\n        {student.firstName} {student.lastName}\r\n      </td>\r\n      <td>{student.username}</td>\r\n      {\r\n        function () {\r\n          if (student.status !== \"\" && student.status !== null){\r\n            return (\r\n              <td style={{color: \"#18AB56\"}}>Đang hoạt động</td>\r\n            )\r\n          }\r\n          else { \r\n            return (\r\n              <td style={{color:\"#2F4F4F\"}}>Không hoạt động</td>\r\n            )\r\n          }\r\n        }()\r\n      }\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() =>{\r\n          if(props.onSelect) props.onSelect(student);\r\n          dispatch(setModificationState(UserModificationStatus.Remove))\r\n        }}>Xóa</button>\r\n      </td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"table-responsive portlet\">\r\n        <table className=\"table\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Tên</th>\r\n              <th scope=\"col\">Tài khoản</th>\r\n              <th scope=\"col\">Trạng thái</th>\r\n              <th scope=\"col\">Hành động</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {userElements}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default StudentList;\r\n","import { fetchDataSuccess, fetchDataError, removeStudentAll, initialStudent, addStudent } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user {\r\n    id: string,\r\n    username: string,\r\n    email: string,\r\n    password: string,\r\n    status: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    dateOfBirth: string,\r\n    profile_image_url: string,\r\n    sex: string,\r\n    phone: string,\r\n    address: string,\r\n    parents: string,\r\n    createTime: string\r\n}\r\nexport function getStudent(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/student`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getStudent(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeStudentAll())\r\n                data.body.students.map((ele: any, index: any) => {\r\n                    var user: user = {\r\n                        id: ele.id,\r\n                        username: ele.username,\r\n                        email: ele.email,\r\n                        password: \"\",\r\n                        status: ele.status,\r\n                        firstName: ele.firstName,\r\n                        lastName: ele.lastName,\r\n                        dateOfBirth: ele.dateOfBirth,\r\n                        profile_image_url: ele.profile_image_url,\r\n                        sex: ele.sex,\r\n                        phone: ele.phone,\r\n                        address: ele.address,\r\n                        parents: ele.parents,\r\n                        createTime: ele.createTime\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialStudent(user));\r\n                    }\r\n                    else{\r\n                        return dispatch(addStudent(user))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport StudentList from \"./StudentList\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./Student.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IUserState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport {clearSelectedUser, setModificationState, changeSelectedUser, removeStudent  } from \"../../store/actions/users.action\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport { deleteUser } from \"../../common/service/User/DeleteUser\";\r\nimport { getStudent } from \"../../common/service/Student/GetStudent\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\n\r\n\r\nconst Student: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = users.students.length;\r\n    const [popup, setPopup] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getStudent(dispatch))\r\n                    console.log(\"hello\")\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getStudent(dispatch))\r\n                console.log(\"hello 1\")\r\n            }\r\n        }\r\n        \r\n    }, [dispatch, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedUser());\r\n        dispatch(updateCurrentPath(\"Học sinh\", \"Danh sách\"));\r\n    }, [path.area, dispatch])\r\n\r\n    function onUserSelect(user: IUser): void {\r\n        dispatch(changeSelectedUser(user));\r\n        onUserRemove();\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n\r\n    function onUserRemove() {\r\n        setPopup(true);\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> :<Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Học sinh</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"HỌC SINH\" text={`${numberItemsCount}`} icon=\"user\" class=\"primary\" />\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                                setSearchTerm(event.target.value)\r\n                                console.log(searchTerm)\r\n                            }}/>\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Danh sách học sinh</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <StudentList\r\n                                onSelect={onUserSelect} value={searchTerm}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                function () {\r\n                    if ((users.selectedUser) && (users.modificationState === UserModificationStatus.Remove)) {\r\n                        return (\r\n                            <Popup\r\n                                open={popup}\r\n                                onClose={() => setPopup(false)}\r\n                                closeOnDocumentClick\r\n                            >\r\n                                <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                    <div className=\"popup-title\">\r\n                                        Are you sure?\r\n                                    </div>\r\n                                    <div className=\"popup-content\">\r\n                                        <button type=\"button\"\r\n                                            className=\"btn btn-danger\"\r\n                                            onClick={() => {\r\n                                                if (!users.selectedUser) {\r\n                                                    return;\r\n                                                }\r\n                                                dispatch(deleteUser(users.selectedUser.id))\r\n                                                dispatch(addNotification(\"Phụ huynh\", `${users.selectedUser.username} đã được xóa!`));\r\n                                                dispatch(removeStudent(users.selectedUser.id));\r\n                                                dispatch(clearSelectedUser());\r\n                                                setPopup(false);\r\n                                            }}>Remove\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </Popup>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Student;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { IUser } from \"../../store/models/user.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport type userListProps = {\r\n    onSelect?: (user: IUser) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nconst data = [\r\n    {\r\n        'id': \"\",\r\n        'class_name': 'CM-1',\r\n        'course_name': 'Chì màu 4-6 tuổi',\r\n        'semester': 'Học kì 1 2022'\r\n    },\r\n    {\r\n        'id': \"\",\r\n        'class_name': 'CM-2',\r\n        'course_name': 'Chì màu 4-6 tuổi',\r\n        'semester': 'Học kì 1 2022'\r\n    },\r\n    {\r\n        'id': \"\",\r\n        'class_name': 'CM-3',\r\n        'course_name': 'Chì màu 4-6 tuổi',\r\n        'semester': 'Học kì 1 2022'\r\n    },\r\n]\r\n\r\nfunction HistoryStudent(props: userListProps): JSX.Element {\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const history = useHistory();\r\n\r\n    const routeChange = () => {\r\n        let path = '/students/detail';\r\n        history.push(path);\r\n    }\r\n\r\n    const userElements: (JSX.Element | null)[] = data.map(user => {\r\n        if (!user) { return null; }\r\n        return (<tr className={`table-row ${(users.selectedUser && users.selectedUser.id === user.id) ? \"selected\" : \"\"}`}\r\n            onClick={routeChange}\r\n            key={`user_${user.id}`}>\r\n            <th scope=\"row\">{user.id}</th>\r\n            <td>{user.class_name}</td>\r\n            <td>{user.course_name}</td>\r\n            <td>{user.semester}</td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"table-responsive portlet\">\r\n            <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Mã lớp</th>\r\n                        <th scope=\"col\">Khóa học</th>\r\n                        <th scope=\"col\">Học kì</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {userElements}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default HistoryStudent;\r\n","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./DetailStudent.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IUserState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport {\r\n    setModificationState,\r\n    changeSelectedUser\r\n} from \"../../store/actions/users.action\";\r\nimport { UserModificationStatus, IUser } from \"../../store/models/user.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport HistoryStudent from \"./HistoryStudent\";\r\n\r\nconst DetailStudent: React.FC = () => {\r\n    const [checked, setChecked] = useState(true);\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = users.students.length;\r\n    const parents: IUser[] = users.parents;\r\n    let user: IUser | null = users.selectedUser;\r\n    console.log(user)\r\n    if (!user || user === null) {\r\n        user = { id: \"\", username: \"\", email: \"\", password: \"\", status: \"\", firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: \"\" };\r\n    }\r\n\r\n    let parent: IUser | undefined = parents.find((value) => user !== null && value.id === user.id)\r\n    let parent_name: string = \"\"\r\n    if (typeof parent !== undefined && parent !== undefined){\r\n        parent_name = parent.firstName + \" \" + parent.lastName\r\n    }\r\n    \r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Học sinh\", \"\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    function onUserSelect(user: IUser): void {\r\n        dispatch(changeSelectedUser(user));\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Học sinh</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"LỚP ĐANG HỌC\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n                <TopCard title=\"LỚP ĐÃ HỌC\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"infor_student\" onClick={() => {\r\n                        if (checked === false) {\r\n                            setChecked(true)\r\n                        }\r\n                    }} style={{\r\n                        color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Thông tin học sinh</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"history_student\" onClick={() => {\r\n                        if (checked === true) {\r\n                            setChecked(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                        }}>Lịch sử học</h6>\r\n                        <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#ffffff\" : \"#F24E1E\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12\">\r\n                                    <div className=\"card shadow mb-4\">\r\n                                        <div className=\"card-body\">\r\n                                            <form>\r\n                                                <div className=\"form-row\">\r\n                                                    <div className=\"form-group col-md-6 text-center\">\r\n                                                    <img className=\"img-profile\" id=\"img-profile\" alt=\"\"\r\n                                                        src=\"https://source.unsplash.com/QAB-WJcbgJk/60x60\" />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Tên đăng nhập\"\r\n                                                            placeholder={user.username} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Ngày sinh\"\r\n                                                            placeholder={user.dateOfBirth} />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Giới tính\"\r\n                                                            placeholder={user.sex} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Số điện thoại\"\r\n                                                            placeholder={user.phone} />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Địa chỉ\"\r\n                                                            placeholder={user.address} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Phụ huynh\"\r\n                                                            placeholder={parent_name} />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12\">\r\n                                    <div className=\"card shadow mb-4\">\r\n                                        <div className=\"card-header py-3\">\r\n                                            <h6 className=\"m-0 font-weight-bold text-green\">Lịch sử học</h6>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <HistoryStudent\r\n                                                onSelect={onUserSelect}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default DetailStudent;\r\n","import React, { Dispatch, Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setModificationState } from \"../../store/actions/users.action\";\r\nimport { UserModificationStatus, IUser } from \"../../store/models/user.interface\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\n\r\nexport type userListProps = {\r\n  onSelect?: (user: IUser) => void;\r\n  value?: string;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction ParentList(props: userListProps): JSX.Element {\r\n\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n\r\n  const users: IUserState = useSelector((state: IStateType) => state.users);\r\n  const history = useHistory();\r\n\r\n  const routeChange = () => {\r\n    let path = '/parents/detail';\r\n    history.push(path);\r\n  }\r\n\r\n  const userElements: (JSX.Element | null)[] = users.parents.filter((val) => {\r\n    if (props.value === \"\"){\r\n      return val;\r\n    }\r\n    else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.username).toLowerCase().includes(props.value.toLowerCase()) || val.username.toLowerCase().includes(props.value.toLowerCase()))){\r\n      return val;\r\n    }\r\n    return null\r\n  }).map((parent, index) => {\r\n    if (!parent) { return null; }\r\n    return (<tr className={`table-row ${(users.selectedUser && users.selectedUser.id === parent.id) ? \"selected\" : \"\"}`}\r\n\r\n      key={`user_${index}`}>\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td onClick={routeChange}>{parent.firstName} {parent.lastName}</td>\r\n      <td>{parent.username}</td>\r\n      {\r\n        function () {\r\n          if (parent.status !== \"\" && parent.status !== null){\r\n            return (\r\n              <td style={{color: \"#18AB56\"}}>Đang hoạt động</td>\r\n            )\r\n          }\r\n          else { \r\n            return (\r\n              <td style={{color:\"#2F4F4F\"}}>Không hoạt động</td>\r\n            )\r\n          }\r\n        }()\r\n      }\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() =>{\r\n          if(props.onSelect) props.onSelect(parent);\r\n          dispatch(setModificationState(UserModificationStatus.Remove))\r\n        }}>Xóa</button>\r\n      </td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"table-responsive portlet\">\r\n        <table className=\"table\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Tên</th>\r\n              <th scope=\"col\">Tài khoản</th>\r\n              <th scope=\"col\">Trạng thái</th>\r\n              <th scope=\"col\">Hành động</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {userElements}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default ParentList;\r\n","import { fetchDataSuccess, fetchDataError, removeParentAll, initialParent, addParent } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user {\r\n    id: string,\r\n    username: string,\r\n    email: string,\r\n    password: string,\r\n    status: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    dateOfBirth: string,\r\n    profile_image_url: string,\r\n    sex: string,\r\n    phone: string,\r\n    address: string,\r\n    parents: string,\r\n    createTime: string\r\n}\r\nexport function getParent(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/parent`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getParent(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeParentAll())\r\n                data.body.parents.map((ele: any, index: any) => {\r\n                    var user: user = {\r\n                        id: ele.id,\r\n                        username: ele.username,\r\n                        email: ele.email,\r\n                        password: \"\",\r\n                        status: ele.status,\r\n                        firstName: ele.firstName,\r\n                        lastName: ele.lastName,\r\n                        dateOfBirth: ele.dateOfBirth,\r\n                        profile_image_url: ele.profile_image_url,\r\n                        sex: ele.sex,\r\n                        phone: ele.phone,\r\n                        address: ele.address,\r\n                        parents: ele.parents,\r\n                        createTime: ele.createTime\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialParent(user));\r\n                    }\r\n                    else{\r\n                        return dispatch(addParent(user))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport ParentList from \"./ParentList\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./Parent.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IUserState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport {clearSelectedUser, setModificationState, changeSelectedUser, removeParent  } from \"../../store/actions/users.action\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport { deleteUser } from \"../../common/service/User/DeleteUser\";\r\nimport { getParent } from \"../../common/service/Parent/GetParent\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\n\r\n\r\nconst Parent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = users.parents.length;\r\n    const [popup, setPopup] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getParent(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getParent(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token])\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedUser());\r\n        dispatch(updateCurrentPath(\"Phụ huynh\", \"Danh sách\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    function onUserSelect(user: IUser): void {\r\n        dispatch(changeSelectedUser(user));\r\n        onUserRemove();\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n\r\n    function onUserRemove() {\r\n        setPopup(true);\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> :<Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Phụ huynh</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"PHỤ HUYNH\" text={`${numberItemsCount}`} icon=\"user\" class=\"primary\" />\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                                setSearchTerm(event.target.value)\r\n                                console.log(searchTerm)\r\n                            }}/>\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Danh sách phụ huynh</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <ParentList\r\n                                onSelect={onUserSelect} value={searchTerm}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                function () {\r\n                    if ((users.selectedUser) && (users.modificationState === UserModificationStatus.Remove)) {\r\n                        return (\r\n                            <Popup\r\n                                open={popup}\r\n                                onClose={() => setPopup(false)}\r\n                                closeOnDocumentClick\r\n                            >\r\n                                <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                    <div className=\"popup-title\">\r\n                                        Are you sure?\r\n                                    </div>\r\n                                    <div className=\"popup-content\">\r\n                                        <button type=\"button\"\r\n                                            className=\"btn btn-danger\"\r\n                                            onClick={() => {\r\n                                                if (!users.selectedUser) {\r\n                                                    return;\r\n                                                }\r\n                                                dispatch(deleteUser(users.selectedUser.id))\r\n                                                dispatch(addNotification(\"Phụ huynh \", `${users.selectedUser.username} đã được xóa!`));\r\n                                                dispatch(removeParent(users.selectedUser.id));\r\n                                                dispatch(clearSelectedUser());\r\n                                                setPopup(false);\r\n                                            }}>Remove\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </Popup>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Parent;\r\n","import React from \"react\";\r\nimport { IProduct } from \"../../store/models/product.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport type productListProps = {\r\n    onSelect?: (product: IProduct) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nconst data = [\r\n    {\r\n        'id': 1,\r\n        'class_name': 'CM-1',\r\n        'course_name': 'Chì màu 4-6 tuổi',\r\n        'semester': 'Học kì 1 2022'\r\n    },\r\n    {\r\n        'id': 2,\r\n        'class_name': 'CM-2',\r\n        'course_name': 'Chì màu 4-6 tuổi',\r\n        'semester': 'Học kì 1 2022'\r\n    },\r\n    {\r\n        'id': 3,\r\n        'class_name': 'CM-3',\r\n        'course_name': 'Chì màu 4-6 tuổi',\r\n        'semester': 'Học kì 1 2022'\r\n    },\r\n]\r\n\r\nfunction HistoryParent(props: productListProps): JSX.Element {\r\n    const history = useHistory();\r\n\r\n    const routeChange = () => {\r\n        let path = '/students/detail';\r\n        history.push(path);\r\n    }\r\n\r\n    const productElements: (JSX.Element | null)[] = data.map(product => {\r\n        if (!product) { return null; }\r\n        return (<tr className={`table-row `}\r\n            onClick={routeChange}\r\n            key={`product_${product.id}`}>\r\n            <th scope=\"row\">{product.id}</th>\r\n            <td>{product.class_name}</td>\r\n            <td>{product.course_name}</td>\r\n            <td>{product.semester}</td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"table-responsive portlet\">\r\n            <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Mã lớp</th>\r\n                        <th scope=\"col\">Khóa học</th>\r\n                        <th scope=\"col\">Học kì</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {productElements}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default HistoryParent;\r\n","export interface ISemester {\r\n    id: string;\r\n    number: number;\r\n    year: number;\r\n    name: string;\r\n    creator_id: string;\r\n    description: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum SemesterModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./DetailParent.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IProductState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedProduct, setModificationState,\r\n    changeSelectedProduct\r\n} from \"../../store/actions/products.action\";\r\nimport { ProductModificationStatus, IProduct } from \"../../store/models/product.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport HistoryParent from \"./HistoryParent\";\r\n\r\nconst data = {\r\n    'id': 3,\r\n    'first_name': 'Thao',\r\n    'last_name': 'Nguyễn',\r\n    'username': 'thaonguyen123',\r\n    'status': 'Đang hoạt động',\r\n    'date_of_birth': '10/10/2000',\r\n    'phone': '0989439678',\r\n    'sex': 'Nữ',\r\n    'address': 'Thanh Hoa',\r\n    'child': ['thanhtrung123', 'hahang123'],\r\n}\r\n\r\n\r\nconst DetailParent: React.FC = () => {\r\n    const [checked, setChecked] = useState(true);\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const products: IProductState = useSelector((state: IStateType) => state.products);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = products.products.length;\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedProduct());\r\n        dispatch(updateCurrentPath(\"Phụ huynh\", \"Chi tiết\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    function onProductSelect(product: IProduct): void {\r\n        dispatch(changeSelectedProduct(product));\r\n        dispatch(setModificationState(ProductModificationStatus.None));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Le Thi Thao</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"KHÓA HỌC ĐÃ MUA\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" onClick={() => {\r\n                        if (checked === false) {\r\n                            setChecked(true)\r\n                        }\r\n                    }} style={{\r\n                        color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Thông tin học sinh</h6>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" onClick={() => {\r\n                        if (checked === true) {\r\n                            setChecked(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                        }}>Lịch sử học</h6>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12\">\r\n                                    <div className=\"card shadow mb-4\">\r\n                                        <div className=\"card-body\">\r\n                                            <form>\r\n                                                <div className=\"form-row\">\r\n                                                    <div className=\"form-group col-md-6 text-center\">\r\n                                                    <img className=\"img-profile\" id=\"img-profile\" alt=\"\"\r\n                                                        src=\"https://source.unsplash.com/QAB-WJcbgJk/60x60\" />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Tên đăng nhập\"\r\n                                                            placeholder={data.username} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Ngày sinh\"\r\n                                                            placeholder={data.date_of_birth} />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Giới tính\"\r\n                                                            placeholder={data.sex} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Số điện thoại\"\r\n                                                            placeholder={data.phone} />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Địa chỉ\"\r\n                                                            placeholder={data.address} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Tài khoản con\"\r\n                                                            placeholder={data.child[0] + ', ' + data.child[1]} />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12\">\r\n                                    <div className=\"card shadow mb-4\">\r\n                                        <div className=\"card-header py-3\">\r\n                                            <h6 className=\"m-0 font-weight-bold text-green\">Lịch sử mua</h6>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <HistoryParent\r\n                                                onSelect={onProductSelect}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default DetailParent;\r\n","import React, { Dispatch, Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, ISemesterState } from \"../../store/models/root.interface\";\r\nimport { ISemester, SemesterModificationStatus } from \"../../store/models/semester.interface\";\r\nimport { setModificationState } from \"../../store/actions/semester.actions\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\n\r\nexport type semesterListProps = {\r\n  onSelect?: (semester: ISemester) => void;\r\n  value?: string;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction SemesterList(props: semesterListProps): JSX.Element  {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const semesters: ISemesterState = useSelector((state: IStateType) => state.semesters);\r\n  console.log(props.value)\r\n\r\n\r\n  const semesterElements: (JSX.Element | null)[] = semesters.semesters.filter((val) => {\r\n    if (props.value === \"\"){\r\n      return val;\r\n    }\r\n    else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))){\r\n      return val;\r\n    }\r\n    return null\r\n  }).map((semester, index) => {\r\n    var strDate = semester.start_time;\r\n    var strDate_1 = semester.end_time;\r\n    //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n    if (!semester) { return null; }\r\n    return (<tr className={`table-row ${(semesters.selectedSemester && semesters.selectedSemester.id === semester.id) ? \"selected\" : \"\"}`}\r\n      key={`semester_${semester.id}`}>\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td>{semester.name}</td>\r\n      <td>{semester.year}</td>\r\n      <td>{semester.number}</td>\r\n      <td>{strDate.substring(0, 10) + \" \" + strDate.substring(11,19)}</td>\r\n      <td>{strDate_1.substring(0, 10) + \" \" + strDate_1.substring(11,19)}</td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={()=> {\r\n          if(props.onSelect) props.onSelect(semester);\r\n          dispatch(setModificationState(SemesterModificationStatus.Edit))\r\n        }}>Chỉnh sửa</button>\r\n      </td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() =>{\r\n          if(props.onSelect) props.onSelect(semester);\r\n          dispatch(setModificationState(SemesterModificationStatus.Remove))\r\n        }}>Xóa</button>\r\n      </td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"table-responsive portlet\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Tên</th>\r\n            <th scope=\"col\">Năm học</th>\r\n            <th scope=\"col\">Học kì</th>\r\n            <th scope=\"col\">Thời gian bắt đầu</th>\r\n            <th scope=\"col\">Thời gian kết thúc</th>\r\n            <th scope=\"col\">Hành động</th>\r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {semesterElements}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    </Fragment> \r\n  );\r\n}\r\n\r\nexport default SemesterList;\r\n","import React, { useState, ChangeEvent } from \"react\";\nimport { NumberInputProps } from \"../types/NumberInput.types\";\n\nfunction NumberInput(props: NumberInputProps): JSX.Element {\n    const [touched, setTouch] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [htmlClass, setHtmlClass] = useState(\"\");\n    const [, setValue] = useState(0);\n\n\n    function onValueChanged(event: ChangeEvent<HTMLInputElement>): void {\n        let elementValue: number = (isNaN(Number(event.target.value))) ? 0 : Number(event.target.value);\n        let [error, validClass] = [\"\", \"\"];\n\n        if (!error) {\n            [error, validClass] = ((props.max != null) && elementValue > (props.max)) ?\n            [`Value can't be higher than ${props.max} `, \"is-invalid\"] : [\"\", \"is-valid\"];\n        }\n\n        if (!error) {\n            [error, validClass] = ((props.min != null) && elementValue < (props.min)) ?\n            [`Value can't be lower than ${props.min} `, \"is-invalid\"] : [\"\", \"is-valid\"];\n        }\n\n        props.onChange({ value: elementValue, error: error, touched: touched, field: props.field });\n\n        setTouch(true);\n        setError(error);\n        setHtmlClass(validClass);\n        setValue(elementValue);\n    }\n\n    return (\n        <div>\n            <label htmlFor={props.id.toString()}>{props.label}</label>\n            <input\n                value={props.value}\n                type=\"number\"\n                max={props.max}\n                onChange={onValueChanged}\n                className={`form-control ${props.inputClass} ${htmlClass}`}\n                id={`id_${props.label}`}/>\n            {error ?\n                <div className=\"invalid-feedback\">\n                    {error}\n                </div> : null\n            }\n        </div>\n    );\n}\n\nexport default NumberInput;","import { fetchDataSuccess, fetchDataError, removeSemesterAll, initialSemester, addSemester } from \"../../../store/actions/semester.actions\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface semester {\r\n    id: string;\r\n    number: number;\r\n    year: number;\r\n    name: string;\r\n    creator_id: string;\r\n    description: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getSemester(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSemester(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeSemesterAll())\r\n                //console.log(data.body.semesters)\r\n                data.body.semesters.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.start_time;\r\n                    var strDate_2 = ele.end_time;\r\n                    var semester: semester = {\r\n                        id: ele.id,\r\n                        number: ele.number,\r\n                        year: ele.year,\r\n                        name: ele.name,\r\n                        creator_id: ele.creator_id,\r\n                        description: ele.description,\r\n                        start_time: strDate_1.substring(0, 16),\r\n                        end_time: strDate_2.substring(0, 16),\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time,\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialSemester(semester));\r\n                    }\r\n                    else{\r\n                        return dispatch(addSemester(semester))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, ISemesterState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ISemester, SemesterModificationStatus } from \"../../store/models/semester.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editSemester, clearSelectedSemester, setModificationState, addSemester } from \"../../store/actions/semester.actions\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport NumberInput from \"../../common/components/NumberInput\";\r\nimport { OnChangeModel, ISemesterFormState } from \"../../common/types/Form.types\";\r\nimport { postSemester } from \"../../common/service/semester/PostSemester\";\r\nimport { putSemester } from \"../../common/service/semester/PutSemester\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type semesterListProps = {\r\n  isCheck: (value: boolean) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction SemesterForm(props: semesterListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const semesters: ISemesterState | null = useSelector((state: IStateType) => state.semesters);\r\n  let semester: ISemester | null = semesters.selectedSemester;\r\n  const isCreate: boolean = (semesters.modificationState === SemesterModificationStatus.Create);\r\n\r\n  if (!semester || isCreate) {\r\n    semester = { id: \"\", name: \"\", description: \"\", number: 0, year: 0, start_time: \"\", end_time: \"\", create_time: \"\", update_time: \"\", creator_id: \"\" };\r\n  }\r\n\r\n  const [formState, setFormState] = useState({\r\n    name: { error: \"\", value: semester.name },\r\n    description: { error: \"\", value: semester.description },\r\n    number: { error: \"\", value: semester.number },\r\n    year: { error: \"\", value: semester.year },\r\n    start_time: { error: \"\", value: semester.start_time },\r\n    end_time: { error: \"\", value: semester.end_time }\r\n  });\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    //console.log(formState)\r\n  }\r\n\r\n  function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if (isFormInvalid()) {\r\n      return;\r\n    }\r\n\r\n    let saveUserFn: Function = (isCreate) ? addSemester : editSemester;\r\n    props.isCheck(false);\r\n    saveForm(formState, saveUserFn);\r\n  }\r\n\r\n  function saveForm(formState: ISemesterFormState, saveFn: Function): void {\r\n    if (semester) {\r\n      const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n      \r\n      if (saveFn === addSemester) {\r\n        dispatch(postSemester({\r\n          name: formState.name.value,\r\n          year: formState.year.value,\r\n          description: formState.description.value,\r\n          number: formState.number.value,\r\n          start_time: formState.start_time.value,\r\n          end_time: formState.end_time.value,\r\n          creator_id: localStorage.getItem('id')\r\n        }, idx));\r\n      }\r\n      else {\r\n        dispatch(putSemester(semester.id, {\r\n          name: formState.name.value,\r\n          year: formState.year.value,\r\n          description: formState.description.value,\r\n          number: formState.number.value,\r\n          start_time: formState.start_time.value,\r\n          end_time: formState.end_time.value,\r\n          creator_id: localStorage.getItem('id')\r\n        }, idx));\r\n      }\r\n\r\n      console.log(saveFn)\r\n\r\n      dispatch(addNotification(\"Học kì \", `${formState.name.value} chỉnh bởi bạn`));\r\n      dispatch(clearSelectedSemester());\r\n      dispatch(setModificationState(SemesterModificationStatus.None));\r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    props.isCheck(false);\r\n    dispatch(setModificationState(SemesterModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid();\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  function isFormInvalid(): boolean {\r\n    return (formState.number.error || formState.description.error\r\n      || formState.name.error || formState.year.error || formState.start_time.error || formState.end_time.error\r\n      || !formState.name.value || !formState.start_time.value || !formState.end_time.value) as boolean;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row text-left\">\r\n      <div className=\"col-xl-12 col-lg-12\">\r\n        <div className=\"card shadow mb-4\">\r\n          <div className=\"card-header py-3\">\r\n            <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} học kì</h6>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={saveUser}>\r\n              <div className=\"form-group\">\r\n                <TextInput id=\"input_name\"\r\n                  value={formState.name.value}\r\n                  field=\"name\"\r\n                  onChange={hasFormValueChanged}\r\n                  required={true}\r\n                  maxLength={2000}\r\n                  label=\"Tên\"\r\n                  placeholder=\"\" />\r\n              </div>\r\n              {/* <div className=\"form-group\">\r\n                <label>Mô tả</label>\r\n              <Editor />\r\n              </div> */}\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <NumberInput id=\"input_year\"\r\n                    value={formState.year.value}\r\n                    field=\"year\"\r\n                    onChange={hasFormValueChanged}\r\n                    max={10000}\r\n                    min={0}\r\n                    label=\"Năm học\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <NumberInput id=\"input_number\"\r\n                    field=\"number\"\r\n                    value={formState.number.value}\r\n                    onChange={hasFormValueChanged}\r\n                    max={10000}\r\n                    min={0}\r\n                    label=\"Học kì\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <TextInput id=\"input_start_time\"\r\n                    field=\"start_time\"\r\n                    value={formState.start_time.value}\r\n                    onChange={hasFormValueChanged}\r\n                    type=\"datetime-local\"\r\n                    required={false}\r\n                    maxLength={100}\r\n                    label=\"Thời gian bắt đầu\"\r\n                    placeholder=\"\" />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <TextInput id=\"input_end_time\"\r\n                    field=\"end_time\"\r\n                    value={formState.end_time.value}\r\n                    onChange={hasFormValueChanged}\r\n                    type=\"datetime-local\"\r\n                    required={false}\r\n                    maxLength={100}\r\n                    label=\"Thời gian kết thúc\"\r\n                    placeholder=\"\" />\r\n                </div>\r\n              </div>\r\n              <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n              <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SemesterForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess, fetchDataError } from \"../../../store/actions/semester.actions\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getSemester } from \"./GetSemester\";\r\n\r\nexport function postSemester(semester: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(semester)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postSemester(semester, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(semester))\r\n                toast.update(idx, { render: \"Thêm học kì thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(data)\r\n                getSemester(dispatch)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Thêm khóa học không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess, fetchDataError } from \"../../../store/actions/semester.actions\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getSemester } from \"./GetSemester\";\r\n\r\nexport function putSemester(id: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putSemester(id,data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                console.log(id)\r\n                toast.update(idx, { render: \"Chỉnh học kì thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataSuccess(data))\r\n                getSemester(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Chỉnh khóa học không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport SemesterList from \"./SemesterList\";\r\nimport SemesterForm from \"./SemesterForm\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./Semester.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { ISemesterState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport Popup from \"reactjs-popup\";\r\nimport {\r\n    removeSemester, clearSelectedSemester, setModificationState,\r\n    changeSelectedSemester\r\n} from \"../../store/actions/semester.actions\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { SemesterModificationStatus, ISemester } from \"../../store/models/semester.interface\";\r\nimport { getSemester } from \"../../common/service/semester/GetSemester\";\r\nimport { deleteSemester } from \"../../common/service/semester/DeleteSemester\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\n\r\nconst Semester: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const semesters: ISemesterState = useSelector((state: IStateType) => state.semesters);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = semesters.semesters.length;\r\n    const [popup, setPopup] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getSemester(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getSemester(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token])\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedSemester());\r\n        dispatch(updateCurrentPath(\"Học kì\", \"Danh sách\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    function onSemesterSelect(semester: ISemester): void {\r\n        dispatch(changeSelectedSemester(semester));\r\n        onSemesterRemove();\r\n        dispatch(setModificationState(SemesterModificationStatus.None));\r\n    }\r\n\r\n    function onSemesterRemove() {\r\n        setPopup(true);\r\n    }\r\n\r\n    function onRemovePopup(value: boolean) {\r\n        setPopup(false);\r\n    }\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> :<Fragment>\r\n      <ToastContainer />\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Học kì</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ HỌC KÌ\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"text\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                                setSearchTerm(event.target.value)\r\n                                console.log(searchTerm)\r\n                            }}/>\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Danh sách học kì</h6>\r\n                            <div className=\"header-buttons\">\r\n                                <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                    dispatch(setModificationState(SemesterModificationStatus.Create))\r\n                                    onSemesterRemove()\r\n                                }}>\r\n                                    <i className=\"fas fa fa-plus\"></i>\r\n                                    Thêm học kì\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <SemesterList\r\n                                onSelect={onSemesterSelect} value={searchTerm}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <Popup\r\n                open={popup}\r\n                onClose={() => setPopup(false)}\r\n                closeOnDocumentClick\r\n            >\r\n                <>\r\n                    {\r\n                        function () {\r\n                            if ((semesters.modificationState === SemesterModificationStatus.Create) || ((semesters.selectedSemester) && (semesters.modificationState === SemesterModificationStatus.Edit))) {\r\n                                return <SemesterForm isCheck={onRemovePopup}/>\r\n                            }\r\n                        }()\r\n                    }\r\n                </>\r\n            </Popup>\r\n            {\r\n                function () {\r\n                    if ((semesters.selectedSemester) && (semesters.modificationState === SemesterModificationStatus.Remove)) {\r\n                        return (\r\n                            <Popup\r\n                                open={popup}\r\n                                onClose={() => setPopup(false)}\r\n                                closeOnDocumentClick\r\n                            >\r\n                                <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                    <div className=\"popup-title\">\r\n                                        Are you sure?\r\n                                    </div>\r\n                                    <div className=\"popup-content\">\r\n                                        <button type=\"button\"\r\n                                            className=\"btn btn-danger\"\r\n                                            onClick={() => {\r\n                                                if (!semesters.selectedSemester) {\r\n                                                    return;\r\n                                                }\r\n                                                dispatch(deleteSemester(semesters.selectedSemester.id))\r\n                                                dispatch(addNotification(\"Semester removed\", `Semester ${semesters.selectedSemester.name} was removed`));\r\n                                                dispatch(removeSemester(semesters.selectedSemester.id));\r\n                                                dispatch(clearSelectedSemester());\r\n                                                setPopup(false);\r\n                                            }}>Remove\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </Popup>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Semester;\r\n","export interface ILesson {\r\n    id: string;\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\n\r\nexport enum LessonModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { fetchDataRequest, fetchDataSuccess, fetchDataError, removeSemester } from \"../../../store/actions/semester.actions\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteSemester(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/semester/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteSemester(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeSemester(id))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { ILesson, LessonModificationStatus } from \"../models/lesson.interface\";\r\nexport const ADD_LESSON: string = \"ADD_LESSON\";\r\nexport const EDIT_LESSON: string = \"EDIT_LESSON\";\r\nexport const REMOVE_LESSON: string = \"REMOVE_LESSON\";\r\nexport const CHANGE_LESSON_AMOUNT: string = \"CHANGE_LESSON_AMOUNT\";\r\nexport const CHANGE_LESSON_PENDING_EDIT: string = \"CHANGE_LESSON_PENDING_EDIT\";\r\nexport const CLEAR_LESSON_PENDING_EDIT: string = \"CLEAR_LESSON_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_LESSON_ALL: string = \"REMOVE_LESSON_ALL\";\r\nexport const INITIAL_LESSON: string = \"INITIAL_LESSON\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(lesson: ILesson) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        lesson\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialLesson(lesson: ILesson): IInitialLessonActionType {\r\n    return { type: INITIAL_LESSON, lesson: lesson };\r\n}\r\n\r\nexport function removeLessonAll(): IRemoveLessonAllActionType {\r\n    return { type: REMOVE_LESSON_ALL };\r\n}\r\n\r\nexport function addLesson(lesson: ILesson): IAddLessonActionType {\r\n    return { type: ADD_LESSON, lesson: lesson };\r\n}\r\n\r\nexport function editLesson(lesson: ILesson): IEditLessonActionType {\r\n    return { type: EDIT_LESSON, lesson: lesson };\r\n}\r\n\r\nexport function removeLesson(id: string): IRemoveLessonActionType {\r\n    return { type: REMOVE_LESSON, id: id };\r\n}\r\n\r\nexport function changeSelectedLesson(lesson: ILesson): IChangeSelectedLessonActionType {\r\n    return { type: CHANGE_LESSON_PENDING_EDIT, lesson: lesson };\r\n}\r\n\r\nexport function clearSelectedLesson(): IClearSelectedLessonActionType {\r\n    return { type: CLEAR_LESSON_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: LessonModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddLessonActionType { type: string, lesson: ILesson };\r\ninterface IEditLessonActionType { type: string, lesson: ILesson };\r\ninterface IRemoveLessonActionType { type: string, id: string };\r\ninterface IChangeSelectedLessonActionType { type: string, lesson: ILesson };\r\ninterface IClearSelectedLessonActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  LessonModificationStatus};\r\ninterface IRemoveLessonAllActionType { type: string }\r\ninterface IInitialLessonActionType {type: string, lesson: ILesson}","import React, { Dispatch, Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, ILessonState } from \"../../store/models/root.interface\";\r\nimport { ILesson, LessonModificationStatus } from \"../../store/models/lesson.interface\";\r\nimport { setModificationState } from \"../../store/actions/lesson.action\";\r\n\r\nexport type lessonListProps = {\r\n  onSelect?: (lesson: ILesson) => void;\r\n  value?: string;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction LessonList(props: lessonListProps): JSX.Element  {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const lessons: ILessonState = useSelector((state: IStateType) => state.lessons);\r\n  console.log(props.value)\r\n\r\n\r\n  const lessonElements: (JSX.Element | null)[] = lessons.lessons.map((lesson, index) => {\r\n    //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n    if (!lesson) { return null; }\r\n    return (<tr className={`table-row ${(lessons.selectedLesson && lessons.selectedLesson.id === lesson.id) ? \"selected\" : \"\"}`}\r\n      key={`lesson_${lesson.id}`}>\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td>{lesson.start_time}</td>\r\n      <td>{lesson.end_time}</td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={()=> {\r\n          if(props.onSelect) props.onSelect(lesson);\r\n          dispatch(setModificationState(LessonModificationStatus.Edit))\r\n        }}>Chỉnh sửa</button>\r\n      </td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() =>{\r\n          if(props.onSelect) props.onSelect(lesson);\r\n          dispatch(setModificationState(LessonModificationStatus.Remove))\r\n        }}>Xóa</button>\r\n      </td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"table-responsive portlet\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Thời gian bắt đầu</th>\r\n            <th scope=\"col\">Thời gian kết thúc</th>\r\n            <th scope=\"col\">Hành động</th>\r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {lessonElements}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    </Fragment> \r\n  );\r\n}\r\n\r\nexport default LessonList;\r\n","import { fetchDataSuccess, fetchDataError, removeLessonAll, initialLesson, addLesson } from \"../../../store/actions/lesson.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface lesson {\r\n    id: string;\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\nexport function getLesson(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/lesson-time?page=0&size=5`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getLesson(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeLessonAll())\r\n                //console.log(data.body.lessons)\r\n                data.body.lesson_times.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.start_time;\r\n                    var strDate_2 = ele.end_time;\r\n                    var lesson: lesson = {\r\n                        id: ele.id,\r\n                        start_time: strDate_1.substring(0, 5),\r\n                        end_time: strDate_2.substring(0, 5),\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialLesson(lesson));\r\n                    }\r\n                    else{\r\n                        return dispatch(addLesson(lesson))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, ILessonState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ILesson, LessonModificationStatus } from \"../../store/models/lesson.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editLesson, clearSelectedLesson, setModificationState, addLesson } from \"../../store/actions/lesson.action\";\r\nimport { OnChangeModel, ILessonFormState } from \"../../common/types/Form.types\";\r\nimport { postLesson } from \"../../common/service/Lesson/PostLesson\";\r\nimport { putLesson } from \"../../common/service/Lesson/PutLesson\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type lessonListProps = {\r\n  isCheck: (value: boolean) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction LessonForm(props: lessonListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const lessons: ILessonState | null = useSelector((state: IStateType) => state.lessons);\r\n  let lesson: ILesson | null = lessons.selectedLesson;\r\n  const isCreate: boolean = (lessons.modificationState === LessonModificationStatus.Create);\r\n\r\n  if (!lesson || isCreate) {\r\n    lesson = { id: \"\", start_time: \"\",end_time: \"\"};\r\n  }\r\n\r\n  const [formState, setFormState] = useState({\r\n    start_time: { error: \"\", value: lesson.start_time },\r\n    end_time: { error: \"\", value: lesson.end_time }\r\n  });\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    //console.log(formState)\r\n  }\r\n\r\n  function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if (isFormInvalid()) {\r\n      return;\r\n    }\r\n\r\n    let saveUserFn: Function = (isCreate) ? addLesson : editLesson;\r\n    props.isCheck(false);\r\n    saveForm(formState, saveUserFn);\r\n  }\r\n\r\n  function saveForm(formState: ILessonFormState, saveFn: Function): void {\r\n    if (lesson) {\r\n      \r\n      const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n\r\n      if (saveFn === addLesson) {\r\n        dispatch(postLesson({\r\n          start_time: formState.start_time.value,\r\n          end_time: formState.end_time.value\r\n        }, idx));\r\n      }\r\n      else {\r\n        dispatch(putLesson(lesson.id, {\r\n          start_time: formState.start_time.value,\r\n          end_time: formState.end_time.value\r\n        }, idx));\r\n      }\r\n\r\n      console.log(saveFn)\r\n\r\n      dispatch(clearSelectedLesson());\r\n      dispatch(setModificationState(LessonModificationStatus.None));\r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    props.isCheck(false);\r\n    dispatch(setModificationState(LessonModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid();\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  function isFormInvalid(): boolean {\r\n    return (formState.start_time.error || formState.end_time.error\r\n      || !formState.start_time.value || !formState.end_time.value) as boolean;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row text-left\">\r\n      <div className=\"col-xl-12 col-lg-12\">\r\n        <div className=\"card shadow mb-4\">\r\n          <div className=\"card-header py-3\">\r\n            <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} học kì</h6>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={saveUser}>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <TextInput id=\"input_start_time\"\r\n                    field=\"start_time\"\r\n                    value={formState.start_time.value}\r\n                    onChange={hasFormValueChanged}\r\n                    type=\"time\"\r\n                    required={false}\r\n                    maxLength={100}\r\n                    label=\"Thời gian bắt đầu\"\r\n                    placeholder=\"\" />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <TextInput id=\"input_end_time\"\r\n                    field=\"end_time\"\r\n                    value={formState.end_time.value}\r\n                    onChange={hasFormValueChanged}\r\n                    type=\"time\"\r\n                    required={false}\r\n                    maxLength={100}\r\n                    label=\"Thời gian kết thúc\"\r\n                    placeholder=\"\" />\r\n                </div>\r\n              </div>\r\n              <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n              <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LessonForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess, fetchDataError } from \"../../../store/actions/lesson.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getLesson } from \"./GetLesson\";\r\n\r\nexport function postLesson(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/lesson-time`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postLesson(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                toast.update(idx, { render: \"Thêm tiết học thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataSuccess(data))\r\n                getLesson(dispatch)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Thêm tiết học không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess, fetchDataError } from \"../../../store/actions/lesson.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getLesson } from \"./GetLesson\";\r\n\r\nexport function putLesson(id: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/lesson-time/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putLesson(id,data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                console.log(id)\r\n                toast.update(idx, { render: \"Chỉnh tiết học thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataSuccess(data))\r\n                getLesson(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Chỉnh tiết học thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport LessonList from \"./LessonList\";\r\nimport LessonForm from \"./LessonForm\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./Lesson.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { ILessonState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport Popup from \"reactjs-popup\";\r\nimport {\r\n    removeLesson, clearSelectedLesson, setModificationState,\r\n    changeSelectedLesson\r\n} from \"../../store/actions/lesson.action\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { LessonModificationStatus, ILesson } from \"../../store/models/lesson.interface\";\r\nimport { getLesson } from \"../../common/service/Lesson/GetLesson\";\r\nimport { deleteLesson } from \"../../common/service/Lesson/DeleteLesson\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\n\r\nconst Lesson: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const lessons: ILessonState = useSelector((state: IStateType) => state.lessons);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = lessons.lessons.length;\r\n    const [popup, setPopup] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getLesson(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getLesson(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token])\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedLesson());\r\n        dispatch(updateCurrentPath(\"Tiết học\", \"Danh sách\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    function onLessonSelect(lesson: ILesson): void {\r\n        dispatch(changeSelectedLesson(lesson));\r\n        onLessonRemove();\r\n        dispatch(setModificationState(LessonModificationStatus.None));\r\n    }\r\n\r\n    function onLessonRemove() {\r\n        setPopup(true);\r\n    }\r\n\r\n    function onRemovePopup(value: boolean) {\r\n        setPopup(false);\r\n    }\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <ToastContainer />\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Tiết học</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"TIẾT HỌC\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"text\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                                setSearchTerm(event.target.value)\r\n                                console.log(searchTerm)\r\n                            }}/>\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Danh sách tiết học</h6>\r\n                            <div className=\"header-buttons\">\r\n                                <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                    dispatch(setModificationState(LessonModificationStatus.Create))\r\n                                    onLessonRemove()\r\n                                }}>\r\n                                    <i className=\"fas fa fa-plus\"></i>\r\n                                    Thêm tiết học\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <LessonList\r\n                                onSelect={onLessonSelect} value={searchTerm}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <Popup\r\n                open={popup}\r\n                onClose={() => setPopup(false)}\r\n                closeOnDocumentClick\r\n            >\r\n                <>\r\n                    {\r\n                        function () {\r\n                            if ((lessons.modificationState === LessonModificationStatus.Create) || ((lessons.selectedLesson) && (lessons.modificationState === LessonModificationStatus.Edit))) {\r\n                                return <LessonForm isCheck={onRemovePopup}/>\r\n                            }\r\n                        }()\r\n                    }\r\n                </>\r\n            </Popup>\r\n            {\r\n                function () {\r\n                    if ((lessons.selectedLesson) && (lessons.modificationState === LessonModificationStatus.Remove)) {\r\n                        return (\r\n                            <Popup\r\n                                open={popup}\r\n                                onClose={() => setPopup(false)}\r\n                                closeOnDocumentClick\r\n                            >\r\n                                <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                    <div className=\"popup-title\">\r\n                                        Are you sure?\r\n                                    </div>\r\n                                    <div className=\"popup-content\">\r\n                                        <button type=\"button\"\r\n                                            className=\"btn btn-danger\"\r\n                                            onClick={() => {\r\n                                                if (!lessons.selectedLesson) {\r\n                                                    return;\r\n                                                }\r\n                                                dispatch(deleteLesson(lessons.selectedLesson.id))\r\n                                                dispatch(addNotification(\"Tiết học \", `${lessons.selectedLesson.start_time} đã được xóa`));\r\n                                                dispatch(removeLesson(lessons.selectedLesson.id));\r\n                                                dispatch(clearSelectedLesson());\r\n                                                setPopup(false);\r\n                                            }}>Remove\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </Popup>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Lesson;\r\n","export interface IArtType {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nexport enum ArtTypeModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { fetchDataRequest, fetchDataError, removeLesson } from \"../../../store/actions/lesson.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteLesson(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/lesson-time/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteLesson(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(removeLesson(id))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { IArtType, ArtTypeModificationStatus } from \"../models/art_type.interface\";\r\nexport const ADD_ART_TYPE: string = \"ADD_ART_TYPE\";\r\nexport const EDIT_ART_TYPE: string = \"EDIT_ART_TYPE\";\r\nexport const REMOVE_ART_TYPE: string = \"REMOVE_ART_TYPE\";\r\nexport const CHANGE_ART_TYPE_AMOUNT: string = \"CHANGE_ART_TYPE_AMOUNT\";\r\nexport const CHANGE_ART_TYPE_PENDING_EDIT: string = \"CHANGE_ART_TYPE_PENDING_EDIT\";\r\nexport const CLEAR_ART_TYPE_PENDING_EDIT: string = \"CLEAR_ART_TYPE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_ART_TYPE_ALL: string = \"REMOVE_ART_TYPE_ALL\";\r\nexport const INITIAL_ART_TYPE: string = \"INITIAL_ART_TYPE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(art_type: IArtType) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        art_type\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialArtType(art_type: IArtType): IInitialArtTypeActionType {\r\n    return { type: INITIAL_ART_TYPE, art_type: art_type };\r\n}\r\n\r\nexport function removeArtTypeAll(): IRemoveArtTypeAllActionType {\r\n    return { type: REMOVE_ART_TYPE_ALL };\r\n}\r\n\r\nexport function addArtType(art_type: IArtType): IAddArtTypeActionType {\r\n    return { type: ADD_ART_TYPE, art_type: art_type };\r\n}\r\n\r\nexport function editArtType(art_type: IArtType): IEditArtTypeActionType {\r\n    return { type: EDIT_ART_TYPE, art_type: art_type };\r\n}\r\n\r\nexport function removeArtType(id: string): IRemoveArtTypeActionType {\r\n    return { type: REMOVE_ART_TYPE, id: id };\r\n}\r\n\r\nexport function changeSelectedArtType(art_type: IArtType): IChangeSelectedArtTypeActionType {\r\n    return { type: CHANGE_ART_TYPE_PENDING_EDIT, art_type: art_type };\r\n}\r\n\r\nexport function clearSelectedArtType(): IClearSelectedArtTypeActionType {\r\n    return { type: CLEAR_ART_TYPE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ArtTypeModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddArtTypeActionType { type: string, art_type: IArtType };\r\ninterface IEditArtTypeActionType { type: string, art_type: IArtType };\r\ninterface IRemoveArtTypeActionType { type: string, id: string };\r\ninterface IChangeSelectedArtTypeActionType { type: string, art_type: IArtType };\r\ninterface IClearSelectedArtTypeActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ArtTypeModificationStatus};\r\ninterface IRemoveArtTypeAllActionType { type: string }\r\ninterface IInitialArtTypeActionType {type: string, art_type: IArtType}","import React, { Dispatch, Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IArtTypeState } from \"../../store/models/root.interface\";\r\nimport { IArtType, ArtTypeModificationStatus } from \"../../store/models/art_type.interface\";\r\nimport { setModificationState } from \"../../store/actions/art_type.action\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\n\r\nexport type artTypeListProps = {\r\n  onSelect?: (art_type: IArtType) => void;\r\n  value?: string;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction ArtTypeList(props: artTypeListProps): JSX.Element  {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const art_types: IArtTypeState = useSelector((state: IStateType) => state.art_types);\r\n  console.log(art_types)\r\n  console.log(art_types)\r\n\r\n\r\n  const artTypeElements: (JSX.Element | null)[] = art_types.artTypes.filter((val) => {\r\n    if (props.value === \"\"){\r\n      return val;\r\n    }\r\n    else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))){\r\n      return val;\r\n    }\r\n    return null\r\n    }).map((art_type, index) => {\r\n    //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n    if (!art_type) { return null; }\r\n    return (<tr className={`table-row ${(art_types.selectedArtType && art_types.selectedArtType.id === art_type.id) ? \"selected\" : \"\"}`}\r\n      key={`art_type_${art_type.id}`}>\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td>{art_type.name}</td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={()=> {\r\n          if(props.onSelect) props.onSelect(art_type);\r\n          dispatch(setModificationState(ArtTypeModificationStatus.Edit))\r\n        }}>Chỉnh sửa</button>\r\n      </td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() =>{\r\n          if(props.onSelect) props.onSelect(art_type);\r\n          dispatch(setModificationState(ArtTypeModificationStatus.Remove))\r\n        }}>Xóa</button>\r\n      </td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"table-responsive portlet\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Thời gian bắt đầu</th>\r\n            <th scope=\"col\">Thời gian kết thúc</th>\r\n            <th scope=\"col\">Hành động</th>\r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {artTypeElements}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    </Fragment> \r\n  );\r\n}\r\n\r\nexport default ArtTypeList;\r\n","import { fetchDataSuccess, fetchDataError, removeArtTypeAll, initialArtType, addArtType } from \"../../../store/actions/art_type.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ArtType {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n}\r\nexport function getArtType(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/art-type?page=0&size=5`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getArtType(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeArtTypeAll())\r\n                console.log(data.body.art_type)\r\n                data.body.art_type.map((ele: any, index: any) => {\r\n                    var artType: ArtType = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialArtType(artType));\r\n                    }\r\n                    else{\r\n                        return dispatch(addArtType(artType))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IArtTypeState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IArtType, ArtTypeModificationStatus } from \"../../store/models/art_type.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editArtType, clearSelectedArtType, setModificationState, addArtType } from \"../../store/actions/art_type.action\";\r\nimport { OnChangeModel, IArtTypeFormState } from \"../../common/types/Form.types\";\r\nimport { postArtType } from \"../../common/service/ArtType/PostArtType\";\r\nimport { putArtType } from \"../../common/service/ArtType/PutArtType\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type artTypeListProps = {\r\n  isCheck: (value: boolean) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction TeachTypeForm(props: artTypeListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const art_types: IArtTypeState | null = useSelector((state: IStateType) => state.art_types);\r\n  let art_type: IArtType | null = art_types.selectedArtType;\r\n  const isCreate: boolean = (art_types.modificationState === ArtTypeModificationStatus.Create);\r\n  \r\n  if (!art_type || isCreate) {\r\n    art_type = { id: \"\", name: \"\", description: \"\" };\r\n  }\r\n\r\n  const [formState, setFormState] = useState({\r\n    name: { error: \"\", value: art_type.name },\r\n    description: { error: \"\", value: art_type.description },\r\n  });\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n  }\r\n\r\n  function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if (isFormInvalid()) {\r\n      return;\r\n    }\r\n    props.isCheck(false);\r\n\r\n    let saveUserFn: Function = (isCreate) ? addArtType : editArtType;\r\n    saveForm(formState, saveUserFn);\r\n  }\r\n\r\n  function saveForm(formState: IArtTypeFormState, saveFn: Function): void {\r\n    if (art_type) {\r\n      const id = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n      \r\n      if (saveFn === addArtType) {\r\n        dispatch(postArtType({\r\n          name: formState.name.value,\r\n          description: formState.description.value\r\n        }, id))\r\n      }\r\n\r\n      else if (saveFn === editArtType) {\r\n        dispatch(putArtType(art_type.id, {\r\n          name: formState.name.value,\r\n          description: formState.description.value\r\n        }, id))\r\n      }\r\n\r\n      dispatch(clearSelectedArtType());\r\n      dispatch(setModificationState(ArtTypeModificationStatus.None));\r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    props.isCheck(false);\r\n    dispatch(setModificationState(ArtTypeModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid();\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  function isFormInvalid(): boolean {\r\n    return (formState.name.error|| !formState.name.value) as boolean;\r\n}\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row text-left\">\r\n      <div className=\"col-xl-12 col-lg-12\">\r\n        <div className=\"card shadow mb-4\">\r\n          <div className=\"card-header py-3\">\r\n            <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} thể loại</h6>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={saveUser}>\r\n              <div className=\"form-group\">\r\n                  <TextInput id=\"input_email\"\r\n                    value={formState.name.value}\r\n                    field=\"name\"\r\n                    onChange={hasFormValueChanged}\r\n                    required={true}\r\n                    maxLength={20}\r\n                    label=\"Tên\"\r\n                    placeholder=\"\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <TextInput id=\"input_description\"\r\n                  field = \"description\"\r\n                    value={formState.description.value}\r\n                    onChange={hasFormValueChanged}\r\n                    required={false}\r\n                    maxLength={100}\r\n                    label=\"Miêu tả\"\r\n                    placeholder=\"\" />\r\n              </div>\r\n            \r\n              <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n              <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TeachTypeForm;\r\n","export interface IArtLevel {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nexport enum ArtLevelModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/art_type.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getArtType } from \"./GetArtType\";\r\n\r\nexport function postArtType(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/art-type`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postArtType(data,idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (xx => {\r\n                toast.update(idx, { render: \"Thêm thể loại thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                getArtType(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Thêm thể loại không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/art_type.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getArtType } from \"./GetArtType\";\r\n\r\nexport function putArtType(id: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/art-type/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putArtType(id, data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                console.log(id)\r\n                toast.update(idx, { render: \"Chỉnh thể loại thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                getArtType(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Chỉnh thể loại không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { IArtLevel, ArtLevelModificationStatus } from \"../models/art_level.interface\";\r\nexport const ADD_ART_LEVEL: string = \"ADD_ART_LEVEL\";\r\nexport const EDIT_ART_LEVEL: string = \"EDIT_ART_LEVEL\";\r\nexport const REMOVE_ART_LEVEL: string = \"REMOVE_ART_LEVEL\";\r\nexport const CHANGE_ART_LEVEL_AMOUNT: string = \"CHANGE_ART_LEVEL_AMOUNT\";\r\nexport const CHANGE_ART_LEVEL_PENDING_EDIT: string = \"CHANGE_ART_LEVEL_PENDING_EDIT\";\r\nexport const CLEAR_ART_LEVEL_PENDING_EDIT: string = \"CLEAR_ART_LEVEL_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_ART_LEVEL_ALL: string = \"REMOVE_ART_LEVEL_ALL\";\r\nexport const INITIAL_ART_LEVEL: string = \"INITIAL_ART_LEVEL\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(art_level: IArtLevel) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        art_level\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialArtLevel(art_level: IArtLevel): IInitialArtLevelActionType {\r\n    return { type: INITIAL_ART_LEVEL, art_level: art_level };\r\n}\r\n\r\nexport function removeArtLevelAll(): IRemoveArtLevelAllActionType {\r\n    return { type: REMOVE_ART_LEVEL_ALL };\r\n}\r\n\r\nexport function addArtLevel(art_level: IArtLevel): IAddArtLevelActionType {\r\n    return { type: ADD_ART_LEVEL, art_level: art_level };\r\n}\r\n\r\nexport function editArtLevel(art_level: IArtLevel): IEditArtLevelActionType {\r\n    return { type: EDIT_ART_LEVEL, art_level: art_level };\r\n}\r\n\r\nexport function removeArtLevel(id: string): IRemoveArtLevelActionType {\r\n    return { type: REMOVE_ART_LEVEL, id: id };\r\n}\r\n\r\nexport function changeSelectedArtLevel(art_level: IArtLevel): IChangeSelectedArtLevelActionType {\r\n    return { type: CHANGE_ART_LEVEL_PENDING_EDIT, art_level: art_level };\r\n}\r\n\r\nexport function clearSelectedArtLevel(): IClearSelectedArtLevelActionType {\r\n    return { type: CLEAR_ART_LEVEL_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateArtLevel(value: ArtLevelModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddArtLevelActionType { type: string, art_level: IArtLevel };\r\ninterface IEditArtLevelActionType { type: string, art_level: IArtLevel };\r\ninterface IRemoveArtLevelActionType { type: string, id: string };\r\ninterface IChangeSelectedArtLevelActionType { type: string, art_level: IArtLevel };\r\ninterface IClearSelectedArtLevelActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ArtLevelModificationStatus};\r\ninterface IRemoveArtLevelAllActionType { type: string }\r\ninterface IInitialArtLevelActionType {type: string, art_level: IArtLevel}","import React, { Dispatch, Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IArtLevelState } from \"../../store/models/root.interface\";\r\nimport { IArtLevel, ArtLevelModificationStatus } from \"../../store/models/art_level.interface\";\r\nimport { setModificationStateArtLevel } from \"../../store/actions/art_level.action\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\n\r\nexport type artLevelListProps = {\r\n  onSelect?: (art_level: IArtLevel) => void;\r\n  value?: string;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction ArtLevelList(props: artLevelListProps): JSX.Element  {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const art_levels: IArtLevelState = useSelector((state: IStateType) => state.art_levels);\r\n  console.log(props.value)\r\n\r\n\r\n  const artLevelElements: (JSX.Element | null)[] = art_levels.artLevels.filter((val) => {\r\n    if (props.value === \"\"){\r\n      return val;\r\n    }\r\n    else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))){\r\n      return val;\r\n    }\r\n    return null\r\n    }).map((art_level, index) => {\r\n    //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n    if (!art_level) { return null; }\r\n    return (<tr className={`table-row ${(art_levels.selectedArtLevel && art_levels.selectedArtLevel.id === art_level.id) ? \"selected\" : \"\"}`}\r\n      key={`art_level_${art_level.id}`}>\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td>{art_level.name}</td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={()=> {\r\n          if(props.onSelect) props.onSelect(art_level);\r\n          dispatch(setModificationStateArtLevel(ArtLevelModificationStatus.Edit))\r\n        }}>Chỉnh sửa</button>\r\n      </td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() =>{\r\n          if(props.onSelect) props.onSelect(art_level);\r\n          dispatch(setModificationStateArtLevel(ArtLevelModificationStatus.Remove))\r\n        }}>Xóa</button>\r\n      </td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"table-responsive portlet\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Tên</th>\r\n            <th scope=\"col\">Hành động</th>\r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {artLevelElements}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    </Fragment> \r\n  );\r\n}\r\n\r\nexport default ArtLevelList;\r\n","import { fetchDataSuccess, fetchDataError, removeArtLevelAll, initialArtLevel, addArtLevel } from \"../../../store/actions/art_level.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ArtLevel {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n}\r\nexport function getArtLevel(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/art-level?page=0&size=5`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getArtLevel(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeArtLevelAll())\r\n                console.log(data.body.art_level)\r\n                data.body.art_level.map((ele: any, index: any) => {\r\n                    var artLevel: ArtLevel = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialArtLevel(artLevel));\r\n                    }\r\n                    else{\r\n                        return dispatch(addArtLevel(artLevel))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IArtLevelState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IArtLevel, ArtLevelModificationStatus } from \"../../store/models/art_level.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editArtLevel, clearSelectedArtLevel, setModificationStateArtLevel, addArtLevel } from \"../../store/actions/art_level.action\";\r\nimport { OnChangeModel, IArtLevelFormState } from \"../../common/types/Form.types\";\r\nimport { postArtLevel } from \"../../common/service/ArtLevel/PostArtLevel\";\r\nimport { putArtLevel } from \"../../common/service/ArtLevel/PutArtLevel\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type artLevelListProps = {\r\n  isCheck: (value: boolean) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction TeachLevelForm(props: artLevelListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const art_levels: IArtLevelState | null = useSelector((state: IStateType) => state.art_levels);\r\n  let art_level: IArtLevel | null = art_levels.selectedArtLevel;\r\n  const isCreate: boolean = (art_levels.modificationState === ArtLevelModificationStatus.Create);\r\n  \r\n  if (!art_level || isCreate) {\r\n    art_level = { id: \"\", name: \"\", description: \"\" };\r\n  }\r\n\r\n  const [formState, setFormState] = useState({\r\n    name: { error: \"\", value: art_level.name },\r\n    description: { error: \"\", value: art_level.description }\r\n  });\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n  }\r\n\r\n  function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if (isFormInvalid()) {\r\n      return;\r\n    }\r\n\r\n    props.isCheck(false);\r\n\r\n    let saveUserFn: Function = (isCreate) ? addArtLevel : editArtLevel;\r\n    saveForm(formState, saveUserFn);\r\n  }\r\n\r\n  function saveForm(formState: IArtLevelFormState, saveFn: Function): void {\r\n    if (art_level) {\r\n      const id = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n      \r\n      if (saveFn === addArtLevel) {\r\n        dispatch(postArtLevel({\r\n          name: formState.name.value,\r\n          description: formState.description.value\r\n        }, id))\r\n      }\r\n\r\n      else if (saveFn === editArtLevel) {\r\n        dispatch(putArtLevel(art_level.id, {\r\n          name: formState.name.value,\r\n          description: formState.description.value\r\n        }, id))\r\n      }\r\n\r\n      dispatch(clearSelectedArtLevel());\r\n      dispatch(setModificationStateArtLevel(ArtLevelModificationStatus.None));\r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    props.isCheck(false);\r\n    dispatch(setModificationStateArtLevel(ArtLevelModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid();\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  function isFormInvalid(): boolean {\r\n    return (formState.name.error || !formState.name.value) as boolean;\r\n}\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row text-left\">\r\n      <div className=\"col-xl-12 col-lg-12\">\r\n        <div className=\"card shadow mb-4\">\r\n          <div className=\"card-header py-3\">\r\n            <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} trình độ</h6>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={saveUser}>\r\n            <div className=\"form-group\">\r\n                  <TextInput id=\"input_email\"\r\n                    value={formState.name.value}\r\n                    field=\"name\"\r\n                    onChange={hasFormValueChanged}\r\n                    required={true}\r\n                    maxLength={20}\r\n                    label=\"Tên\"\r\n                    placeholder=\"\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <TextInput id=\"input_description\"\r\n                  field = \"description\"\r\n                    value={formState.description.value}\r\n                    onChange={hasFormValueChanged}\r\n                    required={false}\r\n                    maxLength={100}\r\n                    label=\"Miêu tả\"\r\n                    placeholder=\"\" />\r\n              </div>\r\n              <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n              <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TeachLevelForm;\r\n","export interface IArtAge {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nexport enum ArtAgeModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/art_level.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getArtLevel } from \"./GetArtLevel\";\r\n\r\nexport function postArtLevel(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/art-level`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postArtLevel(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Thêm trình độ thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                getArtLevel(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Thêm trình độ không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/art_level.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getArtLevel } from \"./GetArtLevel\";\r\n\r\nexport function putArtLevel(id: string, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/art-level/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putArtLevel(id, data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                console.log(id)\r\n                toast.update(idx, { render: \"Chỉnh trình độ thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                getArtLevel(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Chỉnh trình độ không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Dispatch, Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IArtAgeState } from \"../../store/models/root.interface\";\r\nimport { IArtAge, ArtAgeModificationStatus } from \"../../store/models/art_age.interface\";\r\nimport { setModificationStateArtAge } from \"../../store/actions/art_age.action\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\n\r\nexport type artAgeListProps = {\r\n  onSelect?: (art_age: IArtAge) => void;\r\n  value?: string;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction ArtAgeList(props: artAgeListProps): JSX.Element  {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const art_ages: IArtAgeState = useSelector((state: IStateType) => state.art_ages);\r\n  console.log(props.value)\r\n\r\n\r\n  const artAgeElements: (JSX.Element | null)[] = art_ages.artAges.filter((val) => {\r\n    if (props.value === \"\"){\r\n      return val;\r\n    }\r\n    else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))){\r\n      return val;\r\n    }\r\n    return null\r\n    }).map((art_age, index) => {\r\n    //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n    if (!art_age) { return null; }\r\n    return (<tr className={`table-row ${(art_ages.selectedArtAge && art_ages.selectedArtAge.id === art_age.id) ? \"selected\" : \"\"}`}\r\n      key={`art_age_${art_age.id}`}>\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td>{art_age.name}</td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={()=> {\r\n          if(props.onSelect) props.onSelect(art_age);\r\n          dispatch(setModificationStateArtAge(ArtAgeModificationStatus.Edit))\r\n        }}>Chỉnh sửa</button>\r\n      </td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() =>{\r\n          if(props.onSelect) props.onSelect(art_age);\r\n          dispatch(setModificationStateArtAge(ArtAgeModificationStatus.Remove))\r\n        }}>Xóa</button>\r\n      </td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"table-responsive portlet\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Tên</th>\r\n            <th scope=\"col\">Hành động</th>\r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {artAgeElements}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    </Fragment> \r\n  );\r\n}\r\n\r\nexport default ArtAgeList;\r\n","import { fetchDataSuccess, fetchDataError, removeArtAgeAll, initialArtAge, addArtAge } from \"../../../store/actions/art_age.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ArtAge {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n}\r\nexport function getArtAge(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/art-age?page=0&size=5`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getArtAge(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeArtAgeAll())\r\n                console.log(data.body.art_age)\r\n                data.body.art_age.map((ele: any, index: any) => {\r\n                    var artAge: ArtAge = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialArtAge(artAge));\r\n                    }\r\n                    else{\r\n                        return dispatch(addArtAge(artAge))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IArtAgeState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IArtAge, ArtAgeModificationStatus } from \"../../store/models/art_age.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editArtAge, clearSelectedArtAge, setModificationStateArtAge, addArtAge } from \"../../store/actions/art_age.action\";\r\nimport { OnChangeModel, IArtAgeFormState } from \"../../common/types/Form.types\";\r\nimport { postArtAge } from \"../../common/service/ArtAge/PostArtAge\";\r\nimport { putArtAge } from \"../../common/service/ArtAge/PutArtAge\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type artAgeListProps = {\r\n  isCheck: (value: boolean) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction TeachAgeForm(props: artAgeListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const art_ages: IArtAgeState | null = useSelector((state: IStateType) => state.art_ages);\r\n  let art_age: IArtAge | null = art_ages.selectedArtAge;\r\n  const isCreate: boolean = (art_ages.modificationState === ArtAgeModificationStatus.Create);\r\n  \r\n  if (!art_age || isCreate) {\r\n    art_age = { id: \"\", name: \"\", description: \"\"};\r\n  }\r\n\r\n  const [formState, setFormState] = useState({\r\n    name: { error: \"\", value: art_age.name },\r\n    description: { error: \"\", value: art_age.description },\r\n  });\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n  }\r\n\r\n  function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if (isFormInvalid()) {\r\n      return;\r\n    }\r\n    props.isCheck(false);\r\n    let saveUserFn: Function = (isCreate) ? addArtAge : editArtAge;\r\n    saveForm(formState, saveUserFn);\r\n  }\r\n\r\n  function saveForm(formState: IArtAgeFormState, saveFn: Function): void {\r\n    if (art_age) {\r\n      const id = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n\r\n      if (saveFn === addArtAge) {\r\n        dispatch(postArtAge({\r\n          name: formState.name.value,\r\n          description: formState.description.value\r\n        }, id))\r\n      }\r\n\r\n      else if (saveFn === editArtAge) {\r\n        dispatch(putArtAge(art_age.id, {\r\n          name: formState.name.value,\r\n          description: formState.description.value\r\n        }, id))\r\n      }\r\n\r\n      dispatch(clearSelectedArtAge());\r\n      dispatch(setModificationStateArtAge(ArtAgeModificationStatus.None));\r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    props.isCheck(false);\r\n    dispatch(setModificationStateArtAge(ArtAgeModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid();\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  function isFormInvalid(): boolean {\r\n    return (formState.name.error || !formState.name.value ) as boolean;\r\n}\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row text-left\">\r\n      <div className=\"col-xl-12 col-lg-12\">\r\n        <div className=\"card shadow mb-4\">\r\n          <div className=\"card-header py-3\">\r\n            <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} độ tuổi</h6>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={saveUser}>\r\n            <div className=\"form-group\">\r\n                  <TextInput id=\"input_email\"\r\n                    value={formState.name.value}\r\n                    field=\"name\"\r\n                    onChange={hasFormValueChanged}\r\n                    required={true}\r\n                    maxLength={20}\r\n                    label=\"Tên\"\r\n                    placeholder=\"\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <TextInput id=\"input_description\"\r\n                  field = \"description\"\r\n                    value={formState.description.value}\r\n                    onChange={hasFormValueChanged}\r\n                    required={false}\r\n                    maxLength={100}\r\n                    label=\"Miêu tả\"\r\n                    placeholder=\"\" />\r\n              </div>\r\n            \r\n              <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n              <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TeachAgeForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/art_age.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getArtAge } from \"./GetArtAge\";\r\n\r\nexport function postArtAge(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/art-age`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postArtAge(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Thêm độ tuổi thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                getArtAge(dispatch)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Thêm độ tuổi không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/art_age.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getArtAge } from \"./GetArtAge\";\r\n\r\nexport function putArtAge(id: string, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/art-age/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putArtAge(id, data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                console.log(id)\r\n                toast.update(idx, { render: \"Chỉnh độ tuổi thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER });\r\n                getArtAge(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Chỉnh độ tuổi không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport TeachTypeList from \"./TeachTypeList\";\r\nimport TeachTypeForm from \"./TeachTypeForm\";\r\nimport TeachLevelList from \"./TeachLevelList\";\r\nimport TeachLevelForm from \"./TeachLevelForm\";\r\nimport TeachAgeList from \"./TeachAgeList\";\r\nimport TeachAgeForm from \"./TeachAgeForm\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./Art.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IArtTypeState, IArtLevelState, IArtAgeState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedArtType, setModificationState,\r\n    changeSelectedArtType,\r\n    removeArtType\r\n} from \"../../store/actions/art_type.action\";\r\nimport { ArtLevelModificationStatus, IArtLevel } from \"../../store/models/art_level.interface\";\r\nimport {\r\n    clearSelectedArtLevel,\r\n    changeSelectedArtLevel,\r\n    setModificationStateArtLevel,\r\n    removeArtLevel\r\n} from \"../../store/actions/art_level.action\";\r\nimport { ArtTypeModificationStatus, IArtType } from \"../../store/models/art_type.interface\";\r\nimport {\r\n    clearSelectedArtAge,\r\n    changeSelectedArtAge,\r\n    setModificationStateArtAge,\r\n    removeArtAge\r\n} from \"../../store/actions/art_age.action\";\r\nimport { ArtAgeModificationStatus, IArtAge } from \"../../store/models/art_age.interface\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { getArtType } from \"../../common/service/ArtType/GetArtType\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { deleteArtType } from \"../../common/service/ArtType/DeleteArtType\";\r\nimport { deleteArtLevel } from \"../../common/service/ArtLevel/DeleteArtLevel\";\r\nimport { deleteArtAge } from \"../../common/service/ArtAge/DeleteArtAge\";\r\nimport { getArtLevel } from \"../../common/service/ArtLevel/GetArtLevel\";\r\nimport { getArtAge } from \"../../common/service/ArtAge/GetArtAge\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\n\r\nconst Art: React.FC = () => {\r\n    const [checked1, setChecked1] = useState(true);\r\n    const [checked2, setChecked2] = useState(false);\r\n    const [checked3, setChecked3] = useState(false);\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getArtType(dispatch))\r\n                    trackPromise(getArtAge(dispatch))\r\n                    trackPromise(getArtLevel(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getArtType(dispatch))\r\n                trackPromise(getArtAge(dispatch))\r\n                trackPromise(getArtLevel(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token])\r\n    \r\n    \r\n    const art_types: IArtTypeState = useSelector((state: IStateType) => state.art_types);\r\n    const art_levels: IArtLevelState = useSelector((state: IStateType) => state.art_levels);\r\n    const art_ages: IArtAgeState = useSelector((state: IStateType) => state.art_ages);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberArtTypeCount: number = art_types.artTypes.length;\r\n    const numberArtLevelCount: number = art_levels.artLevels.length;\r\n    const numberArtAgeCount: number = art_ages.artAges.length;\r\n    const [popup1, setPopup1] = useState(false);\r\n    const [popup2, setPopup2] = useState(false);\r\n    const [popup3, setPopup3] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedArtType());\r\n        dispatch(clearSelectedArtLevel());\r\n        dispatch(clearSelectedArtAge());\r\n        dispatch(updateCurrentPath(\"Nghệ thuật\", \"danh sách\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    function onArtTypeSelect(art_type: IArtType): void {\r\n        dispatch(changeSelectedArtType(art_type));\r\n        onArtTypeRemove()\r\n        dispatch(setModificationState(ArtTypeModificationStatus.None));\r\n    }\r\n\r\n    function onArtLevelSelect(art_level: IArtLevel): void {\r\n        dispatch(changeSelectedArtLevel(art_level));\r\n        onArtLevelRemove()\r\n        dispatch(setModificationStateArtLevel(ArtLevelModificationStatus.None));\r\n    }\r\n\r\n    function onArtAgeSelect(art_age: IArtAge): void {\r\n        dispatch(changeSelectedArtAge(art_age));\r\n        onArtAgeRemove()\r\n        dispatch(setModificationStateArtAge(ArtAgeModificationStatus.None));\r\n    }\r\n\r\n    function onArtTypeRemove() {\r\n        setPopup1(true);\r\n    }\r\n    function onArtLevelRemove() {\r\n        setPopup3(true);\r\n    }\r\n\r\n    function onArtAgeRemove() {\r\n        setPopup2(true);\r\n    }\r\n\r\n    function onRemovePopup1(value: boolean) {\r\n        setPopup1(false);\r\n    }\r\n\r\n    function onRemovePopup2(value: boolean) {\r\n        setPopup2(false);\r\n    }\r\n\r\n    function onRemovePopup3(value: boolean) {\r\n        setPopup3(false);\r\n    }\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <ToastContainer />\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Nghệ thuật</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"THỂ LOẠI\" text={`${numberArtTypeCount}`} icon=\"box\" class=\"primary\" />\r\n                <TopCard title=\"ĐỘ TUỔI\" text={`${numberArtAgeCount}`} icon=\"box\" class=\"primary\" />\r\n                <TopCard title=\"TRÌNH ĐỘ\" text={`${numberArtLevelCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                                setSearchTerm(event.target.value)\r\n                                console.log(searchTerm)\r\n                            }} />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked1 === false) {\r\n                            setChecked1(true)\r\n                            setChecked2(false)\r\n                            setChecked3(false)\r\n                        }\r\n                    }} style={{\r\n                        color: checked1 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Thể loại</h6>\r\n\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked1 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked2 === false) {\r\n                            setChecked2(true)\r\n                            setChecked1(false)\r\n                            setChecked3(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked2 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Độ tuổi</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked2 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked3 === false) {\r\n                            setChecked3(true)\r\n                            setChecked1(false)\r\n                            setChecked2(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked3 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Trình độ</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked3 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {\r\n                function () {\r\n                    if (checked1 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\">Danh sách thể loại</h6>\r\n                                                <div className=\"header-buttons\">\r\n                                                    <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                                        dispatch(setModificationState(ArtTypeModificationStatus.Create))\r\n                                                        onArtTypeRemove()\r\n                                                    }}>\r\n                                                        <i className=\"fas fa fa-plus\"></i>\r\n                                                        Thêm thể loại\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <TeachTypeList\r\n                                                    onSelect={onArtTypeSelect} value={searchTerm}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <Popup\r\n                                    open={popup1}\r\n                                    onClose={() => setPopup1(false)}\r\n                                    closeOnDocumentClick\r\n                                >\r\n                                    <>\r\n                                        {\r\n                                            function () {\r\n                                                if ((art_types.modificationState === ArtTypeModificationStatus.Create) || ((art_types.selectedArtType) && (art_types.modificationState === ArtTypeModificationStatus.Edit))) {\r\n                                                    return <TeachTypeForm isCheck={onRemovePopup1} />\r\n                                                }\r\n                                            }()\r\n                                        }\r\n                                    </>\r\n                                </Popup>\r\n                                {\r\n                                    function () {\r\n                                        if ((art_types.selectedArtType) && (art_types.modificationState === ArtTypeModificationStatus.Remove)) {\r\n                                            return (\r\n                                                <Popup\r\n                                                    open={popup1}\r\n                                                    onClose={() => setPopup1(false)}\r\n                                                    closeOnDocumentClick\r\n                                                >\r\n                                                    <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                                        <div className=\"popup-title\">\r\n                                                            Are you sure?\r\n                                                        </div>\r\n                                                        <div className=\"popup-content\">\r\n                                                            <button type=\"button\"\r\n                                                                className=\"btn btn-danger\"\r\n                                                                onClick={() => {\r\n                                                                    if (!art_types.selectedArtType) {\r\n                                                                        return;\r\n                                                                    }\r\n                                                                    const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                                                                        position: toast.POSITION.TOP_CENTER\r\n                                                                    });\r\n                                                                    dispatch(deleteArtType(art_types.selectedArtType.id, idx))\r\n                                                                    dispatch(addNotification(\"Thể loại \", `${art_types.selectedArtType.name} đã được xóa`));\r\n                                                                    dispatch(removeArtType(art_types.selectedArtType.id));\r\n                                                                    dispatch(clearSelectedArtType());\r\n                                                                    setPopup1(false);\r\n                                                                }}>Remove\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Popup>\r\n                                            )\r\n                                        }\r\n                                    }()\r\n                                }\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else if (checked2 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\">Danh sách độ tuổi</h6>\r\n                                                <div className=\"header-buttons\">\r\n                                                    <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                                        dispatch(setModificationStateArtAge(ArtAgeModificationStatus.Create))\r\n                                                        onArtAgeRemove()\r\n                                                    }}>\r\n                                                        <i className=\"fas fa fa-plus\"></i>\r\n                                                        Thêm độ tuổi\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <TeachAgeList\r\n                                                    onSelect={onArtAgeSelect} value={searchTerm}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <Popup\r\n                                    open={popup2}\r\n                                    onClose={() => setPopup2(false)}\r\n                                    closeOnDocumentClick\r\n                                >\r\n                                    <>\r\n                                        {\r\n                                            function () {\r\n                                                if ((art_ages.modificationState === ArtAgeModificationStatus.Create) || ((art_ages.selectedArtAge) && (art_ages.modificationState === ArtAgeModificationStatus.Edit))) {\r\n                                                    return <TeachAgeForm isCheck={onRemovePopup2} />\r\n                                                }\r\n                                            }()\r\n                                        }\r\n                                    </>\r\n                                </Popup>\r\n                                {\r\n                                    function () {\r\n                                        if ((art_ages.selectedArtAge) && (art_ages.modificationState === ArtAgeModificationStatus.Remove)) {\r\n                                            return (\r\n                                                <Popup\r\n                                                    open={popup2}\r\n                                                    onClose={() => setPopup2(false)}\r\n                                                    closeOnDocumentClick\r\n                                                >\r\n                                                    <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                                        <div className=\"popup-title\">\r\n                                                            Are you sure?\r\n                                                        </div>\r\n                                                        <div className=\"popup-content\">\r\n                                                            <button type=\"button\"\r\n                                                                className=\"btn btn-danger\"\r\n                                                                onClick={() => {\r\n                                                                    if (!art_ages.selectedArtAge) {\r\n                                                                        return;\r\n                                                                    }\r\n                                                                    const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                                                                        position: toast.POSITION.TOP_CENTER\r\n                                                                    });\r\n                                                                    dispatch(deleteArtAge(art_ages.selectedArtAge.id, idx))\r\n                                                                    dispatch(addNotification(\"Độ tuổi \", `${art_ages.selectedArtAge.name} đã được xóa`));\r\n                                                                    dispatch(removeArtAge(art_ages.selectedArtAge.id));\r\n                                                                    dispatch(clearSelectedArtAge());\r\n                                                                    setPopup2(false);\r\n                                                                }}>Remove\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Popup>\r\n                                            )\r\n                                        }\r\n                                    }()\r\n                                }\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n\r\n                    else if (checked3 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\">Danh sách trình độ</h6>\r\n                                                <div className=\"header-buttons\">\r\n                                                    <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                                        dispatch(setModificationStateArtLevel(ArtLevelModificationStatus.Create))\r\n                                                        onArtLevelRemove()\r\n                                                    }}>\r\n                                                        <i className=\"fas fa fa-plus\"></i>\r\n                                                        Thêm trình độ\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <TeachLevelList\r\n                                                    onSelect={onArtLevelSelect} value={searchTerm}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <Popup\r\n                                    open={popup3}\r\n                                    onClose={() => setPopup3(false)}\r\n                                    closeOnDocumentClick\r\n                                >\r\n                                    <>\r\n                                        {\r\n                                            function () {\r\n                                                if ((art_levels.modificationState === ArtLevelModificationStatus.Create) || ((art_levels.selectedArtLevel) && (art_levels.modificationState === ArtLevelModificationStatus.Edit))) {\r\n                                                    return <TeachLevelForm isCheck={onRemovePopup3} />\r\n                                                }\r\n                                            }()\r\n                                        }\r\n                                    </>\r\n                                </Popup>\r\n                                {\r\n                                    function () {\r\n                                        if ((art_levels.selectedArtLevel) && (art_levels.modificationState === ArtLevelModificationStatus.Remove)) {\r\n                                            return (\r\n                                                <Popup\r\n                                                    open={popup3}\r\n                                                    onClose={() => setPopup3(false)}\r\n                                                    closeOnDocumentClick\r\n                                                >\r\n                                                    <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                                        <div className=\"popup-title\">\r\n                                                            Are you sure?\r\n                                                        </div>\r\n                                                        <div className=\"popup-content\">\r\n                                                            <button type=\"button\"\r\n                                                                className=\"btn btn-danger\"\r\n                                                                onClick={() => {\r\n                                                                    if (!art_levels.selectedArtLevel) {\r\n                                                                        return;\r\n                                                                    }\r\n                                                                    const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                                                                        position: toast.POSITION.TOP_CENTER\r\n                                                                    });\r\n                                                                    dispatch(deleteArtLevel(art_levels.selectedArtLevel.id, idx))\r\n                                                                    dispatch(addNotification(\"Trình độ \", `${art_levels.selectedArtLevel.name} đã được xóa`));\r\n                                                                    dispatch(removeArtLevel(art_levels.selectedArtLevel.id));\r\n                                                                    dispatch(clearSelectedArtLevel());\r\n                                                                    setPopup3(false);\r\n                                                                }}>Remove\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Popup>\r\n                                            )\r\n                                        }\r\n                                    }()\r\n                                }\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Art;\r\n","export interface ICourse {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    creator_id: string;\r\n    art_type_id: string;\r\n    art_level_id: string;\r\n    art_age_id: string;\r\n    art_age_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    checked_tutoral: boolean;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum CourseModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError, removeArtType } from \"../../../store/actions/art_type.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteArtType(id: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/art-type/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteArtType(id, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Xóa trình độ thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(removeArtType(id))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Xóa trình độ không thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError, removeArtAge } from \"../../../store/actions/art_age.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteArtAge(id: string, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/art-age/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteArtAge(id, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                toast.update(idx, { render: \"Xóa độ tuổi thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(data)\r\n                dispatch(removeArtAge(id))\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Xóa độ tuổi không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError, removeArtLevel } from \"../../../store/actions/art_level.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteArtLevel(id: string, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/art-level/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteArtLevel(id, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Xóa trình độ thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(removeArtLevel(id))\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Xóa trình độ không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Dispatch } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, ICourseState } from \"../../store/models/root.interface\";\r\nimport { CourseModificationStatus, ICourse } from \"../../store/models/course.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setModificationState } from \"../../store/actions/course.action\";\r\n\r\nexport type courseListProps = {\r\n  onSelect?: (course: ICourse) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\ntype Options = {\r\n  name: string;\r\n  value: any;\r\n}\r\n\r\n\r\nfunction CourseNomalList(props: courseListProps): JSX.Element {\r\n  const courses: ICourseState = useSelector((state: IStateType) => state.courses);\r\n  const history = useHistory();\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n\r\n\r\n\r\n  const routeChange = (course: ICourse) => {\r\n    localStorage.removeItem('course_id')\r\n    localStorage.setItem('course_id', course.id.toString())\r\n    localStorage.removeItem('number_of_sum')\r\n    localStorage.setItem('number_of_sum', course.num_of_section.toString())\r\n    localStorage.removeItem('course_name')\r\n    localStorage.setItem('course_name', course.name)\r\n    let path = '/courses/section-template';\r\n    history.push({\r\n      pathname: path\r\n    });\r\n  }\r\n\r\n  const routeEdit = (course: ICourse) => {\r\n    dispatch(setModificationState(CourseModificationStatus.None));\r\n    let path = `/courses/edit-course`;\r\n    history.push(path);\r\n  }\r\n\r\n  function routeChange1 (course: ICourse) {\r\n    localStorage.removeItem('course_id')\r\n    localStorage.setItem('course_id', course.id.toString())\r\n    localStorage.removeItem('number_of_sum')\r\n    localStorage.setItem('number_of_sum', course.num_of_section.toString())\r\n    localStorage.removeItem('course_name')\r\n    localStorage.setItem('course_name', course.name)\r\n    let path = '/courses/lesson-plan';\r\n    history.push(path);\r\n  }\r\n\r\n  const courseElements: (JSX.Element | null)[] = courses.courses.map((course, index) => {\r\n    if (!course) { return null; }\r\n    return (<tr className={`table-row ${(courses.selectedCourse && courses.selectedCourse.id === course.id) ? \"selected\" : \"\"}`}\r\n      key={`course_${index}`}>\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td onClick={() => {\r\n        if(props.onSelect) props.onSelect(course);\r\n        routeChange(course)\r\n      }}>{course.name}</td>\r\n      <td>{course.art_type_name}</td>\r\n      <td>{course.art_age_name}</td>\r\n      <td>{course.art_level_name}</td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n          if(props.onSelect) props.onSelect(course);\r\n          routeEdit(course)}}\r\n        >Chỉnh thông tin</button>\r\n      </td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-warning\" onClick={() => {\r\n          if (props.onSelect) props.onSelect(course);\r\n          routeChange(course)\r\n        }}\r\n        >Chỉnh giáo án</button>\r\n      </td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"table-responsive portlet\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Tên</th>\r\n            <th scope=\"col\">Thể loại</th>\r\n            <th scope=\"col\">Độ tuổi</th>\r\n            <th scope=\"col\">Trình độ</th>\r\n            <th scope=\"col\">Hành động</th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {courseElements}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default CourseNomalList;\r\n","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport CourseNomalList from \"./CourseNomalList\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./Course.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { ICourseState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport Popup from \"reactjs-popup\";\r\nimport {\r\n    clearSelectedCourse, setModificationState,\r\n    changeSelectedCourse,\r\n    removeCourse\r\n} from \"../../store/actions/course.action\";\r\nimport { CourseModificationStatus, ICourse } from \"../../store/models/course.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getCourse } from \"../../common/service/Course/GetCourse\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { deleteCourse } from \"../../common/service/Course/DeleteCourse\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\n\r\nconst Course: React.FC = () => {\r\n\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const courses: ICourseState = useSelector((state: IStateType) => state.courses);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberCourseCount: number = courses.courses.length;\r\n    const [popup1, setPopup1] = useState(false);\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    console.log(courses)\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        dispatch(clearSelectedCourse());\r\n        dispatch(updateCurrentPath(\"Khóa học\", \"danh sách\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getCourse(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getCourse(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token])\r\n\r\n    function onCourseSelect(course: ICourse): void {\r\n        dispatch(changeSelectedCourse(course));\r\n        onCourseRemove1()\r\n        dispatch(setModificationState(CourseModificationStatus.None));\r\n    }\r\n\r\n    function onCourseRemove1() {\r\n        setPopup1(true);\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    const routeChange = () => {\r\n        let path = `/courses/create-course`;\r\n        history.push(\r\n            {\r\n                pathname: path,\r\n                state: { course_value: null } // your data array of objects\r\n            }\r\n        );\r\n    }\r\n\r\n    console.log(courses.modificationState)\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <ToastContainer />\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Khóa học</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"KHÓA HỌC\" text={`${numberCourseCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Danh sách khóa học</h6>\r\n                            <div className=\"header-buttons\">\r\n                                <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                    dispatch(setModificationState(CourseModificationStatus.Create))\r\n                                    routeChange()\r\n                                    onCourseRemove1()\r\n                                }}>\r\n                                    <i className=\"fas fa fa-plus\"></i>\r\n                                    Thêm khóa học\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <CourseNomalList\r\n                                onSelect={onCourseSelect}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {\r\n                function () {\r\n                    if ((courses.selectedCourse) && (courses.modificationState === CourseModificationStatus.Remove)) {\r\n                        return (\r\n                            <Popup\r\n                                open={popup1}\r\n                                onClose={() => setPopup1(false)}\r\n                                closeOnDocumentClick\r\n                            >\r\n                                <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                    <div className=\"popup-title\">\r\n                                        Are you sure?\r\n                                    </div>\r\n                                    <div className=\"popup-content\">\r\n                                        <button type=\"button\"\r\n                                            className=\"btn btn-danger\"\r\n                                            onClick={() => {\r\n                                                if (!courses.selectedCourse) {\r\n                                                    return;\r\n                                                }\r\n                                                dispatch(deleteCourse(courses.selectedCourse.id))\r\n                                                dispatch(addNotification(\"Khóa học \", `${courses.selectedCourse.id} đã được xóa`));\r\n                                                dispatch(removeCourse(courses.selectedCourse.id));\r\n                                                dispatch(clearSelectedCourse());\r\n                                                setPopup1(false);\r\n                                            }}>Remove\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </Popup>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Course;\r\n","export interface IMyClass {\r\n    id: string;\r\n    creator_id: string;\r\n    user_register_teach_semester: number;\r\n    security_code: string;\r\n    name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n\r\n}\r\n\r\nexport enum MyClassModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { fetchDataRequest, fetchDataError, removeCourse } from \"../../../store/actions/course.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteCourse(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/course/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteCourse(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(removeCourse(id))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, ChangeEvent, Fragment } from \"react\";\nimport { SelectProps } from \"../types/Select.types\";\n\nfunction SelectInput(props: SelectProps): JSX.Element {\n    const [touched, setTouch] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [htmlClass, setHtmlClass] = useState(\"\");\n    const [value, setValue] = useState(props.value);\n\n\n    function onValueChanged(event: ChangeEvent<HTMLSelectElement>): void {\n        let [error, validClass, elementValue] = [\"\", \"\", event.target.value];\n\n        [error, validClass] = (!elementValue && props.required) ?\n            [\"Value has to be selected\", \"is-invalid\"] : [\"\", \"is-valid\"];\n\n\n        props.onChange({ value: elementValue, error: error, touched: touched, field: props.field });\n\n        setTouch(true);\n        setError(error);\n        setHtmlClass(validClass);\n        setValue(elementValue);\n    }\n\n    const getOptions: (JSX.Element | null)[] = props.options.map((option: any, index: number) => {\n        return (\n            <option key={index} value={`${option}`}>{option}</option>\n        )\n    });\n\n    return (\n        <Fragment>\n            <label htmlFor={`${props.id}`}>{props.label}</label>\n            <select\n                value={value}\n                id={`${props.id}`}\n                className={`form-control ${props.inputClass ? props.inputClass : \"\"} ${htmlClass}`}\n                onChange={onValueChanged}>\n                <option value=\"\">Choose...</option>\n                {getOptions}\n            </select>\n\n            {error ?\n                <div className=\"invalid-feedback\">\n                    {error}\n                </div> : null\n            }\n        </Fragment>\n    );\n}\n\nexport default SelectInput;","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IProductState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IProduct, ProductModificationStatus } from \"../../store/models/product.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editProduct, clearSelectedProduct, setModificationState, addProduct } from \"../../store/actions/products.action\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport SelectInput from \"../../common/components/Select\";\r\nimport { OnChangeModel, IProductFormState } from \"../../common/types/Form.types\";\r\n\r\nconst ClassForm: React.FC = () => {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const products: IProductState | null = useSelector((state: IStateType) => state.products);\r\n  let product: IProduct | null = products.selectedProduct;\r\n  const isCreate: boolean = (products.modificationState === ProductModificationStatus.Create);\r\n  \r\n  if (!product || isCreate) {\r\n    product = { id: \"\", name: \"\", description: \"\", amount: 0, price: 0, hasExpiryDate: false, category: \"\" };\r\n  }\r\n\r\n  const [formState, setFormState] = useState({\r\n    name: { error: \"\", value: product.name },\r\n    description: { error: \"\", value: product.description },\r\n    amount: { error: \"\", value: product.amount },\r\n    price: { error: \"\", value: product.price },\r\n    hasExpiryDate: { error: \"\", value: product.hasExpiryDate },\r\n    category: { error: \"\", value: product.category }\r\n  });\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n  }\r\n\r\n  function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if (isFormInvalid()) {\r\n      return;\r\n    }\r\n\r\n    let saveUserFn: Function = (isCreate) ? addProduct : editProduct;\r\n    saveForm(formState, saveUserFn);\r\n  }\r\n\r\n  function saveForm(formState: IProductFormState, saveFn: Function): void {\r\n    if (product) {\r\n      dispatch(saveFn({\r\n        ...product,\r\n        name: formState.name.value,\r\n        description: formState.description.value,\r\n        price: formState.price.value,\r\n        amount: formState.amount.value,\r\n        hasExpiryDate: formState.hasExpiryDate.value,\r\n        category: formState.category.value\r\n      }));\r\n\r\n      dispatch(addNotification(\"Lớp\", ` ${formState.name.value} chỉnh bỏi bạn`));\r\n      dispatch(clearSelectedProduct());\r\n      dispatch(setModificationState(ProductModificationStatus.None));\r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    dispatch(setModificationState(ProductModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid();\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  function isFormInvalid(): boolean {\r\n    return (formState.amount.error || formState.description.error\r\n      || formState.name.error || formState.price.error || formState.hasExpiryDate.error\r\n      || formState.category.error || !formState.name.value || !formState.category.value) as boolean;\r\n}\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"col-xl-12 col-lg-12\">\r\n        <div className=\"card shadow mb-4\">\r\n          <div className=\"card-header py-3\">\r\n            <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} lớp học</h6>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={saveUser}>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <SelectInput\r\n                    id=\"input_category\"\r\n                    field=\"category\"\r\n                    label=\"Giáo viên\"\r\n                    options={[\"Chung Nguyễn\", \"Thành Nguyễn\", \"Thao Nguyễn\"]}\r\n                    required={true}\r\n                    onChange={hasFormValueChanged}\r\n                    value={formState.category.value}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                <TextInput id=\"input_description\"\r\n                    field = \"description\"\r\n                    value={formState.description.value}\r\n                    onChange={hasFormValueChanged}\r\n                    required={false}\r\n                    type=\"number\"\r\n                    maxLength={100}\r\n                    label=\"Số học sinh\"\r\n                    placeholder=\"\" />\r\n                </div>\r\n              </div>\r\n              <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n              <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClassForm;\r\n","import { IMyClass, MyClassModificationStatus } from \"../models/my_class.interface\";\r\nexport const ADD_MY_CLASS: string = \"ADD_MY_CLASS\";\r\nexport const EDIT_MY_CLASS: string = \"EDIT_MY_CLASS\";\r\nexport const REMOVE_MY_CLASS: string = \"REMOVE_MY_CLASS\";\r\nexport const CHANGE_MY_CLASS_AMOUNT: string = \"CHANGE_MY_CLASS_AMOUNT\";\r\nexport const CHANGE_MY_CLASS_PENDING_EDIT: string = \"CHANGE_MY_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_MY_CLASS_PENDING_EDIT: string = \"CLEAR_MY_CLASS_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_MY_CLASS_ALL: string = \"REMOVE_MY_CLASS_ALL\";\r\nexport const INITIAL_MY_CLASS: string = \"INITIAL_MY_CLASS\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(myclass: IMyClass) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        myclass\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialMyClass(myclass: IMyClass): IInitialMyClassActionType {\r\n    return { type: INITIAL_MY_CLASS, myclass: myclass };\r\n}\r\n\r\nexport function removeMyClassAll(): IRemoveMyClassAllActionType {\r\n    return { type: REMOVE_MY_CLASS_ALL };\r\n}\r\n\r\nexport function addMyClass(myclass: IMyClass): IAddMyClassActionType {\r\n    return { type: ADD_MY_CLASS, myclass: myclass };\r\n}\r\n\r\nexport function editMyClass(myclass: IMyClass): IEditMyClassActionType {\r\n    return { type: EDIT_MY_CLASS, myclass: myclass };\r\n}\r\n\r\nexport function removeMyClass(id: string): IRemoveMyClassActionType {\r\n    return { type: REMOVE_MY_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedMyClass(myclass: IMyClass): IChangeSelectedMyClassActionType {\r\n    return { type: CHANGE_MY_CLASS_PENDING_EDIT, myclass: myclass };\r\n}\r\n\r\nexport function clearSelectedMyClass(): IClearSelectedMyClassActionType {\r\n    return { type: CLEAR_MY_CLASS_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: MyClassModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddMyClassActionType { type: string, myclass: IMyClass };\r\ninterface IEditMyClassActionType { type: string, myclass: IMyClass };\r\ninterface IRemoveMyClassActionType { type: string, id: string };\r\ninterface IChangeSelectedMyClassActionType { type: string, myclass: IMyClass };\r\ninterface IClearSelectedMyClassActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  MyClassModificationStatus};\r\ninterface IRemoveMyClassAllActionType { type: string }\r\ninterface IInitialMyClassActionType {type: string, myclass: IMyClass}","import React, { Dispatch, Fragment, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IMyClassState } from \"../../store/models/root.interface\";\r\nimport { IMyClass, MyClassModificationStatus } from \"../../store/models/my_class.interface\";\r\nimport ClassForm from \"./ClassForm\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setModificationState } from \"../../store/actions/my_class.action\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nexport type myclassListProps = {\r\n  onSelect?: (myclass: IMyClass) => void;\r\n  value?: string;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction ClassList(props: myclassListProps): JSX.Element  {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n\r\n  const myclasss: IMyClassState = useSelector((state: IStateType) => state.myclasses);\r\n\r\n  const history = useHistory();\r\n\r\n  const [popup, setPopup] = useState(false);\r\n  \r\n  const routeChange = (class_id: string) =>{ \r\n    let path = '/class/detail'; \r\n    history.push({\r\n      pathname: path,\r\n      state: { class_id: class_id }\r\n    });\r\n  }\r\n\r\n  function onMyClassRemove() {\r\n    setPopup(true);\r\n}\r\n\r\nconst routeViewSchedule = (class_id: string, class_name: string) =>{ \r\n  localStorage.removeItem('class_id')\r\n  localStorage.setItem('class_id', class_id.toString())\r\n  localStorage.removeItem('class_name')\r\n  localStorage.setItem('class_name', class_name)\r\n  let path = '/class/schedule'; \r\n  history.push({\r\n    pathname: path,\r\n    state: { class_id: class_id }\r\n  });\r\n}\r\n\r\n  const myclassElements: (JSX.Element | null)[] = myclasss.myClasses.map((myclass, idx) => {\r\n    if (!myclass) { return null; }\r\n    return (<tr className={`table-row ${(myclasss.selectedMyClass && myclasss.selectedMyClass.id === myclass.id) ? \"selected\" : \"\"}`}\r\n      key={`myclass_${idx}`}>\r\n      <th scope=\"row\">{idx + 1}</th>\r\n      <td onClick={() => {routeChange(myclass.id)}}>{myclass.name}</td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n          if(props.onSelect) props.onSelect(myclass);\r\n          routeViewSchedule(myclass.id, myclass.name)}}\r\n        >Chi tiết</button>\r\n      </td>\r\n      <td>\r\n      <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n          dispatch(setModificationState(MyClassModificationStatus.Create))\r\n          onMyClassRemove()\r\n        }}>Chỉnh sửa</button>\r\n      </td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-danger\">Xóa</button>\r\n      </td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n    <div className=\"table-responsive portlet\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Tên lớp</th>\r\n            <th scope=\"col\">Lịch học</th>\r\n            <th scope=\"col\">Hành động</th>\r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {myclassElements}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <Popup\r\n                open={popup}\r\n                onClose={() => setPopup(false)}\r\n                closeOnDocumentClick\r\n            >\r\n                <div className=\"row text-left\">\r\n                    <ClassForm />\r\n                </div>\r\n            </Popup>\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default ClassList;\r\n","import { fetchDataSuccess, fetchDataError, removeMyClassAll, initialMyClass, addMyClass } from \"../../../store/actions/my_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface MyClass {\r\n    id: string;\r\n    creator_id: string;\r\n    user_register_teach_semester: number;\r\n    security_code: string;\r\n    name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getMyClass(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/classes`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getMyClass(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeMyClassAll())\r\n                console.log(data.body.classes)\r\n                data.body.classes.map((ele: any, index: any) => {\r\n                    //var strDate_1 = ele.start_time;\r\n                    //var strDate_2 = ele.end_time;\r\n                    var my_class: MyClass = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        security_code: ele.security_code,\r\n                        creator_id: ele.creator_id,\r\n                        user_register_teach_semester: ele.user_register_teach_semester,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialMyClass(my_class));\r\n                    }\r\n                    else{\r\n                        return dispatch(addMyClass(my_class))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","export interface ISemesterClass {\r\n    id: string;\r\n    name: string;\r\n    semester_id: string;\r\n    semester_name: string;\r\n    registration_time: string;\r\n    course_id: string;\r\n    course_name: string;\r\n    max_participant: number;\r\n}\r\n\r\nexport enum SemesterClassModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ISemesterClass, SemesterClassModificationStatus } from \"../models/semester_class.interface\";\r\nexport const ADD_SEMESTER_CLASS: string = \"ADD_SEMESTER_CLASS\";\r\nexport const EDIT_SEMESTER_CLASS: string = \"EDIT_SEMESTER_CLASS\";\r\nexport const REMOVE_SEMESTER_CLASS: string = \"REMOVE_SEMESTER_CLASS\";\r\nexport const CHANGE_SEMESTER_CLASS_AMOUNT: string = \"CHANGE_SEMESTER_CLASS_AMOUNT\";\r\nexport const CHANGE_SEMESTER_CLASS_PENDING_EDIT: string = \"CHANGE_SEMESTER_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_SEMESTER_CLASS_PENDING_EDIT: string = \"CLEAR_SEMESTER_CLASS_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SEMESTER_CLASS_ALL: string = \"REMOVE_SEMESTER_CLASS_ALL\";\r\nexport const INITIAL_SEMESTER_CLASS: string = \"INITIAL_SEMESTER_CLASS\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(semester_class: ISemesterClass) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        semester_class\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSemesterClass(semester_class: ISemesterClass): IInitialSemesterClassActionType {\r\n    return { type: INITIAL_SEMESTER_CLASS, semester_class: semester_class };\r\n}\r\n\r\nexport function removeSemesterClassAll(): IRemoveSemesterClassAllActionType {\r\n    return { type: REMOVE_SEMESTER_CLASS_ALL };\r\n}\r\n\r\nexport function addSemesterClass(semester_class: ISemesterClass): IAddSemesterClassActionType {\r\n    return { type: ADD_SEMESTER_CLASS, semester_class: semester_class };\r\n}\r\n\r\nexport function editSemesterClass(semester_class: ISemesterClass): IEditSemesterClassActionType {\r\n    return { type: EDIT_SEMESTER_CLASS, semester_class: semester_class };\r\n}\r\n\r\nexport function removeSemesterClass(id: string): IRemoveSemesterClassActionType {\r\n    return { type: REMOVE_SEMESTER_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClass(semester_class: ISemesterClass): IChangeSelectedSemesterClassActionType {\r\n    return { type: CHANGE_SEMESTER_CLASS_PENDING_EDIT, semester_class: semester_class };\r\n}\r\n\r\nexport function clearSelectedSemesterClass(): IClearSelectedSemesterClassActionType {\r\n    return { type: CLEAR_SEMESTER_CLASS_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateSemesterClass(value: SemesterClassModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddSemesterClassActionType { type: string, semester_class: ISemesterClass };\r\ninterface IEditSemesterClassActionType { type: string, semester_class: ISemesterClass };\r\ninterface IRemoveSemesterClassActionType { type: string, id: string };\r\ninterface IChangeSelectedSemesterClassActionType { type: string, semester_class: ISemesterClass };\r\ninterface IClearSelectedSemesterClassActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  SemesterClassModificationStatus};\r\ninterface IRemoveSemesterClassAllActionType { type: string }\r\ninterface IInitialSemesterClassActionType {type: string, semester_class: ISemesterClass}","import React, { Dispatch } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, ISemesterClassState, IScheduleState } from \"../../store/models/root.interface\";\r\nimport { ISemesterClass, SemesterClassModificationStatus } from \"../../store/models/semester_class.interface\";\r\nimport { setModificationStateSemesterClass } from \"../../store/actions/semester_class.action\";\r\n\r\nexport type semesterClassListProps = {\r\n  onSelect?: (semester_class: ISemesterClass) => void;\r\n  children?: React.ReactNode;\r\n  value?: string;\r\n};\r\n\r\ntype Options = {\r\n  name: string;\r\n  value: any;\r\n}\r\n\r\n\r\nfunction ClassSemesterList(props: semesterClassListProps): JSX.Element  {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const semester_classes: ISemesterClassState = useSelector((state: IStateType) => state.semester_classes);\r\n  const schedules: IScheduleState = useSelector((state: IStateType) => state.schedules);\r\n  let schedule_list: Options[] = []\r\n  console.log(semester_classes.semesterClasses)\r\n  if (schedules.schedules.length > 0){\r\n    semester_classes.semesterClasses.map(ele => {\r\n      let item: string = \"\";\r\n      schedules.schedules.map(element => {\r\n        if (element.semester_class_id === ele.id) {\r\n          console.log(element.lesson_time)\r\n          item += element.lesson_time\r\n        }\r\n        return element\r\n      })\r\n      return schedule_list.push({\r\n        name: ele.name,\r\n        value: item\r\n      })\r\n    })\r\n  }\r\n\r\n  console.log(schedule_list)\r\n\r\n  const courseElements: (JSX.Element | null)[] = semester_classes.semesterClasses.map((semester_class, index) => {\r\n    if (!semester_class) { return null; }\r\n    return (<tr className={`table-row ${(semester_classes.selectedSemesterClass && semester_classes.selectedSemesterClass.id === semester_class.id) ? \"selected\" : \"\"}`}\r\n      key={`semester_class_${semester_class.id}`}>\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td>{semester_class.name}</td>\r\n      <td>{semester_class.course_name}</td>\r\n      <td>{semester_class.semester_name}</td>\r\n      <td>{schedule_list.length ===0 ? \"\" : schedule_list[index].value}</td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={()=> {\r\n          if(props.onSelect) props.onSelect(semester_class);\r\n          dispatch(setModificationStateSemesterClass(SemesterClassModificationStatus.Edit))\r\n        }}>Chỉnh sửa</button>\r\n      </td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() =>{\r\n          if(props.onSelect) props.onSelect(semester_class);\r\n          dispatch(setModificationStateSemesterClass(SemesterClassModificationStatus.Remove))\r\n        }}>Xóa</button>\r\n      </td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"table-responsive portlet\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Tên lớp</th>\r\n            <th scope=\"col\">Thuộc khóa học</th>\r\n            <th scope=\"col\">Học kì</th>\r\n            <th scope=\"col\">Lịch học</th>\r\n            <th scope=\"col\">Hành động</th>\r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {courseElements}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default ClassSemesterList;\r\n","import { ISchedule, ScheduleModificationStatus } from \"../models/schedule.interface\";\r\nexport const ADD_SCHEDULE: string = \"ADD_SCHEDULE\";\r\nexport const EDIT_SCHEDULE: string = \"EDIT_SCHEDULE\";\r\nexport const REMOVE_SCHEDULE: string = \"REMOVE_SCHEDULE\";\r\nexport const CHANGE_SCHEDULE_AMOUNT: string = \"CHANGE_SCHEDULE_AMOUNT\";\r\nexport const CHANGE_SCHEDULE_PENDING_EDIT: string = \"CHANGE_SCHEDULE_PENDING_EDIT\";\r\nexport const CLEAR_SCHEDULE_PENDING_EDIT: string = \"CLEAR_SCHEDULE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SCHEDULE_ALL: string = \"REMOVE_SCHEDULE_ALL\";\r\nexport const INITIAL_SCHEDULE: string = \"INITIAL_SCHEDULE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(schedule: ISchedule) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        schedule\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSchedule(schedule: ISchedule): IInitialScheduleActionType {\r\n    return { type: INITIAL_SCHEDULE, schedule: schedule };\r\n}\r\n\r\nexport function removeScheduleAll(): IRemoveScheduleAllActionType {\r\n    return { type: REMOVE_SCHEDULE_ALL };\r\n}\r\n\r\nexport function addSchedule(schedule: ISchedule): IAddScheduleActionType {\r\n    return { type: ADD_SCHEDULE, schedule: schedule };\r\n}\r\n\r\nexport function editSchedule(schedule: ISchedule): IEditScheduleActionType {\r\n    return { type: EDIT_SCHEDULE, schedule: schedule };\r\n}\r\n\r\nexport function removeSchedule(id: string): IRemoveScheduleActionType {\r\n    return { type: REMOVE_SCHEDULE, id: id };\r\n}\r\n\r\nexport function changeSelectedSchedule(schedule: ISchedule): IChangeSelectedScheduleActionType {\r\n    return { type: CHANGE_SCHEDULE_PENDING_EDIT, schedule: schedule };\r\n}\r\n\r\nexport function clearSelectedSchedule(): IClearSelectedScheduleActionType {\r\n    return { type: CLEAR_SCHEDULE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ScheduleModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddScheduleActionType { type: string, schedule: ISchedule };\r\ninterface IEditScheduleActionType { type: string, schedule: ISchedule };\r\ninterface IRemoveScheduleActionType { type: string, id: string };\r\ninterface IChangeSelectedScheduleActionType { type: string, schedule: ISchedule };\r\ninterface IClearSelectedScheduleActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ScheduleModificationStatus};\r\ninterface IRemoveScheduleAllActionType { type: string }\r\ninterface IInitialScheduleActionType {type: string, schedule: ISchedule}","import { fetchDataSuccess, fetchDataError, removeScheduleAll, initialSchedule, addSchedule } from \"../../../store/actions/schedule.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface schedule {\r\n    id: string;\r\n    lesson_time_id: string;\r\n    lesson_time: string;\r\n    semester_class_id: string;\r\n    date_of_week: number;\r\n}\r\nexport function getSchedule(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/schedule`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSchedule(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeScheduleAll())\r\n                console.log(data.body.schedules)\r\n                data.body.schedules.map((ele: any, index: any) => {\r\n                    var schedule: schedule = {\r\n                        id: ele.id,\r\n                        lesson_time_id: ele.lesson_time_id,\r\n                        lesson_time: ele.lesson_time,\r\n                        semester_class_id: ele.semester_classes_id,\r\n                        date_of_week: ele.date_of_week\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialSchedule(schedule));\r\n                    }\r\n                    else{\r\n                        return dispatch(addSchedule(schedule))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { fetchDataSuccess, fetchDataError, removeSemesterClassAll, initialSemesterClass, addSemesterClass } from \"../../../store/actions/semester_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface SemesterClass {\r\n    id: string;\r\n    name: string;\r\n    semester_id: string;\r\n    registration_time: string;\r\n    semester_name: string;\r\n    course_name: string;\r\n    course_id: string;\r\n    max_participant: number;\r\n}\r\nexport function getSemesterClass(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester-class`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSemesterClass(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeSemesterClassAll())\r\n                //console.log(data.body.lessons)\r\n                data.body.semester_classes.map((ele: any, index: any) => {\r\n                    var class_ele: SemesterClass = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        semester_id: ele.semester_id,\r\n                        registration_time: ele.registration_time,\r\n                        semester_name: ele.semester_name,\r\n                        course_id: ele.course_id,\r\n                        course_name: ele.course_name,\r\n                        max_participant: ele.max_participant\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialSemesterClass(class_ele));\r\n                    }\r\n                    else{\r\n                        return dispatch(addSemesterClass(class_ele))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postSchedule } from \"../Schedule/PostSchedule\";\r\nimport { getSemesterClass } from \"./GetSemesterClass\";\r\n\r\nexport function postSemesterClass(data: any, schedule_element: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester-class`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postSemesterClass(data, schedule_element, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data_1 => {\r\n                console.log(data_1)\r\n                toast.update(idx, { render: \"Thêm lớp theo kì thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                schedule_element.map((ele: any) => {\r\n                    return dispatch(postSchedule({\r\n                        lesson_time: ele.lesson_time,\r\n                        date_of_week: ele.date_of_week,\r\n                        semester_classes_id: data_1.id\r\n                    }))\r\n                })\r\n                getSemesterClass(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Thêm lớp theo kì không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/schedule.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getSchedule } from \"./GetSchedule\";\r\n\r\nexport function postSchedule(data: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/schedule`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postSchedule(data))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                getSchedule(dispatch)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, ChangeEvent, Fragment } from \"react\";\r\nimport { SelectMutipleProps } from \"../types/SelectMutiple.types\";\r\n\r\nfunction SelectKeyValueMutiple(props: SelectMutipleProps): JSX.Element {\r\n    const [error, setError] = useState(\"\");\r\n    const [htmlClass, setHtmlClass] = useState(\"\");\r\n    const [value, setValue] = useState(props.value);\r\n\r\n    function onValueChanged(event: ChangeEvent<HTMLSelectElement>): void {\r\n        let [error, validClass, elementValue] = [\"\", \"\", event.target.value];\r\n\r\n        [error, validClass] = (!elementValue && props.required) ?\r\n            [\"Value has to be selected\", \"is-invalid\"] : [\"\", \"is-valid\"];\r\n\r\n\r\n        props.onChange(parseInt(elementValue), props.index);\r\n        setError(error);\r\n        setHtmlClass(validClass);\r\n        setValue(parseInt(elementValue));\r\n    }\r\n\r\n    //console.log(props.options)\r\n\r\n    const getOptions: (JSX.Element | null)[] = props.options.map( (option: any, index:number) => {\r\n        return (\r\n            <option key={index} value={option.value}>{option.name}</option>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <Fragment>\r\n            <label>{props.label}</label>\r\n            <select\r\n                value={value}\r\n                className={`form-control ${props.inputClass ? props.inputClass : \"\"} ${htmlClass}`}\r\n                onChange={onValueChanged}>\r\n                <option value= {0}>Choose...</option>\r\n                {getOptions}\r\n            </select>\r\n\r\n            {error ?\r\n                <div className=\"invalid-feedback\">\r\n                    {error}\r\n                </div> : null\r\n            }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default SelectKeyValueMutiple;","import React, { useState, ChangeEvent, Fragment } from \"react\";\r\nimport { SelectMutipleProps } from \"../types/SelectMutiple.types\";\r\n\r\nfunction SelectKeyValueMutiple2(props: SelectMutipleProps): JSX.Element {\r\n    const [error, setError] = useState(\"\");\r\n    const [htmlClass, setHtmlClass] = useState(\"\");\r\n    const [value, setValue] = useState(props.value);\r\n\r\n    function onValueChanged(event: ChangeEvent<HTMLSelectElement>): void {\r\n        let [error, validClass, elementValue] = [\"\", \"\", event.target.value];\r\n\r\n        [error, validClass] = (!elementValue && props.required) ?\r\n            [\"Value has to be selected\", \"is-invalid\"] : [\"\", \"is-valid\"];\r\n\r\n\r\n        props.onChange(elementValue, props.index);\r\n        setError(error);\r\n        setHtmlClass(validClass);\r\n        setValue(elementValue);\r\n    }\r\n\r\n    //console.log(props.options)\r\n\r\n    const getOptions: (JSX.Element | null)[] = props.options.map( (option: any, index:number) => {\r\n        return (\r\n            <option key={index} value={option.value}>{option.name}</option>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <Fragment>\r\n            <label>{props.label}</label>\r\n            <select\r\n                value={value}\r\n                className={`form-control ${props.inputClass ? props.inputClass : \"\"} ${htmlClass}`}\r\n                onChange={onValueChanged}>\r\n                <option value= {\"\"}>Choose...</option>\r\n                {getOptions}\r\n            </select>\r\n\r\n            {error ?\r\n                <div className=\"invalid-feedback\">\r\n                    {error}\r\n                </div> : null\r\n            }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default SelectKeyValueMutiple2;","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, ISemesterClassState, ISemesterState, ILessonState, IScheduleState, ICourseState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ISemesterClass, SemesterClassModificationStatus } from \"../../store/models/semester_class.interface\";\r\nimport { editSemesterClass, clearSelectedSemesterClass, setModificationStateSemesterClass, addSemesterClass } from \"../../store/actions/semester_class.action\"\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { OnChangeModel, ISemesterClassFormState } from \"../../common/types/Form.types\";\r\nimport SelectKeyValue from \"../../common/components/SelectKeyValue\";\r\nimport { postSemesterClass } from \"../../common/service/SemesterClass/PostSemesterClass\";\r\nimport { putSemesterClass } from \"../../common/service/SemesterClass/PutSemesterClass\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport NumberInput from \"../../common/components/NumberInput\";\r\nimport { ILesson } from \"../../store/models/lesson.interface\";\r\nimport SelectKeyValueMutiple from \"../../common/components/SelectKeyValueMutiple\";\r\nimport { toast } from \"react-toastify\";\r\nimport SelectKeyValueMutiple2 from \"../../common/components/SelectKeyValueMutiple2\";\r\n\r\nexport type semesterClassListProps = {\r\n  isCheck: (value: boolean) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\ntype Options = {\r\n  name: string;\r\n  value: any;\r\n}\r\n\r\ntype LessonTime = {\r\n  key: number;\r\n  value: string;\r\n}\r\n\r\ntype ScheduleType = {\r\n  lesson_time: string;\r\n  date_of_week: number;\r\n}\r\n\r\ntype Option1s = {\r\n  key: number;\r\n  value: string;\r\n}\r\n\r\ntype Option2s = {\r\n  key: number;\r\n  value: number;\r\n}\r\n\r\n\r\nfunction ClassSemesterForm(props: semesterClassListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const semester_classes: ISemesterClassState | null = useSelector((state: IStateType) => state.semester_classes);\r\n  const semesters: ISemesterState | null = useSelector((state: IStateType) => state.semesters);\r\n  const courses: ICourseState | null = useSelector((state: IStateType) => state.courses);\r\n  let semester_classe: ISemesterClass | null = semester_classes.selectedSemesterClass;\r\n  const isCreate: boolean = (semester_classes.modificationState === SemesterClassModificationStatus.Create);\r\n  let semester_class_id: string = \"\";\r\n  if (!semester_classe || isCreate) {\r\n    semester_classe = { id: \"\", max_participant: 0, semester_name: \"\", course_id: \"\", course_name: \"\", semester_id: \"\", name: \"\", registration_time: \"\" };\r\n  }\r\n  else {\r\n    semester_class_id = semester_classe.id;\r\n  }\r\n\r\n  const listSemesters: Options[] = [];\r\n  semesters.semesters.map((ele) => {\r\n    let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n    return listSemesters.push(item)\r\n  })\r\n\r\n  const listCourses: Options[] = [];\r\n  courses.courses.map((ele) => {\r\n    let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n    return listCourses.push(item)\r\n  })\r\n\r\n  const schedules: IScheduleState = useSelector((state: IStateType) => state.schedules);\r\n  let lesson_time_list: LessonTime[] = []\r\n  console.log(schedules.schedules)\r\n  if (semester_class_id !== \"\") {\r\n    schedules.schedules.forEach(element => {\r\n      if (element.semester_class_id === semester_class_id) {\r\n        lesson_time_list.push({\r\n          key: element.date_of_week,\r\n          value: element.lesson_time_id\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  console.log(lesson_time_list)\r\n\r\n\r\n\r\n  const list_date_of_week: Options[] = [\r\n    {\r\n      \"name\": \"Thứ 2\",\r\n      \"value\": 2\r\n    },\r\n    {\r\n      \"name\": \"Thứ 3\",\r\n      \"value\": 3\r\n    },\r\n    {\r\n      \"name\": \"Thứ 4\",\r\n      \"value\": 4\r\n    },\r\n    {\r\n      \"name\": \"Thứ 5\",\r\n      \"value\": 5\r\n    },\r\n    {\r\n      \"name\": \"Thứ 6\",\r\n      \"value\": 6\r\n    },\r\n    {\r\n      \"name\": \"Thứ 7\",\r\n      \"value\": 7\r\n    }\r\n  ];\r\n\r\n  const lesson_times: ILessonState = useSelector((state: IStateType) => state.lessons);\r\n  const list_lesson: ILesson[] = lesson_times.lessons\r\n  const list_lessons: Options[] = [];\r\n  list_lesson.map((ele) => {\r\n    let item: Options = { \"name\": ele.start_time + \" - \" + ele.end_time, \"value\": ele.id }\r\n    return list_lessons.push(item)\r\n  })\r\n\r\n  let total = schedules.schedules.filter((value) => value.semester_class_id === semester_class_id).length\r\n  let schedule_list = schedules.schedules.filter((value) => value.semester_class_id === semester_class_id)\r\n\r\n  const [formState, setFormState] = useState({\r\n    semester_id: { error: \"\", value: semester_classe.semester_id },\r\n    name: { error: \"\", value: semester_classe.name },\r\n    max_participant: { error: \"\", value: semester_classe.max_participant },\r\n    course_id: { error: \"\", value: semester_classe.course_id },\r\n    total_date_of_week: { error: \"\", value: total },\r\n    registration_time: { error: \"\", value: semester_classe.registration_time }\r\n  });\r\n\r\n\r\n  const [listScheduleItemId, setListScheduleItemId] = useState<Option2s[]>([])\r\n  const [listLessonId, setListLessonId] = useState<Option1s[]>([])\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n\r\n    let res_1: Option2s[] = []\r\n    if (total > 0) {\r\n      for (let index = 0; index < total; index++) {\r\n        let date_of_week_obj: Option2s = {\r\n          key: index,\r\n          value: schedule_list[index].date_of_week\r\n        }\r\n        let lesson_time_obj: Option1s = {\r\n          key: index,\r\n          value: schedule_list[index].lesson_time_id\r\n        }\r\n        res_1.push(date_of_week_obj)\r\n        listScheduleItemId.push(date_of_week_obj)\r\n        listLessonId.push(lesson_time_obj)\r\n      }\r\n    }\r\n    setListScheduleItemId([...listScheduleItemId])\r\n    setListLessonId([...listLessonId])\r\n  }\r\n\r\n  function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if (isFormInvalid()) {\r\n      return;\r\n    }\r\n\r\n    props.isCheck(false);\r\n\r\n    let saveUserFn: Function = (isCreate) ? addSemesterClass : editSemesterClass;\r\n    saveForm(formState, saveUserFn);\r\n  }\r\n\r\n  console.log(listLessonId)\r\n\r\n  function saveForm(formState: ISemesterClassFormState, saveFn: Function): void {\r\n    if (semester_classe) {\r\n      let lesson_times: Option1s[] = listLessonId.filter((value, index) => value.key < formState.total_date_of_week.value)\r\n      let date_of_weeks: Option2s[] = listScheduleItemId.filter((value, index) => value.key < formState.total_date_of_week.value)\r\n      let schedule_element: ScheduleType[] = [];\r\n      lesson_times.map((ele, idx) => {\r\n        return schedule_element.push({\r\n          lesson_time: ele.value,\r\n          date_of_week: date_of_weeks[idx].value\r\n        })\r\n      })\r\n\r\n      const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n\r\n      console.log(schedule_element)\r\n      if (saveFn === addSemesterClass) {\r\n        dispatch(postSemesterClass({\r\n          semester_id: formState.semester_id.value,\r\n          name: formState.name.value,\r\n          registration_time: formState.registration_time.value,\r\n          course_id: formState.course_id.value\r\n        }, schedule_element, idx))\r\n      }\r\n\r\n      else if (saveFn === editSemesterClass) {\r\n        dispatch(putSemesterClass(semester_classe.id, {\r\n          semester_id: formState.semester_id.value,\r\n          registration_time: formState.registration_time.value,\r\n          name: formState.name.value,\r\n          course_id: formState.course_id.value\r\n        }, idx))\r\n      }\r\n\r\n      dispatch(addNotification(\"Mở lớp đăng kí theo kì \", `chỉnh bởi bạn`));\r\n      dispatch(clearSelectedSemesterClass());\r\n      dispatch(setModificationStateSemesterClass(SemesterClassModificationStatus.None));\r\n\r\n\r\n\r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    props.isCheck(false);\r\n    dispatch(setModificationStateSemesterClass(SemesterClassModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid();\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  function isFormInvalid(): boolean {\r\n    return (formState.name.error  || formState.semester_id.error || formState.registration_time.error\r\n      || formState.course_id.error || !formState.semester_id.value || !formState.course_id.value\r\n      || !formState.name.value || !formState.registration_time.value ) as boolean;\r\n  }\r\n/*   useEffect(() => {\r\n    let res_1: Option1s[] = []\r\n    if (total > 0) {\r\n      for (let index = 0; index < total; index++) {\r\n        let date_of_week_obj: Option1s = {\r\n          key: index,\r\n          value: schedule_list[index].date_of_week\r\n        }\r\n        let lesson_time_obj: Option1s = {\r\n          key: index,\r\n          value: schedule_list[index].lesson_time\r\n        }\r\n        res_1.push(date_of_week_obj)\r\n        listScheduleItemId.push(date_of_week_obj)\r\n        listLessonId.push(lesson_time_obj)\r\n      }\r\n    }\r\n    setListScheduleItemId([...listScheduleItemId])\r\n    setListLessonId([...listLessonId])\r\n\r\n  }, [total]) */\r\n  function hasFormMutipleValueChanged1(value: number, index: number) {\r\n\r\n    console.log(listScheduleItemId)\r\n    if (listScheduleItemId.length === 0) {\r\n      setListScheduleItemId([...listScheduleItemId, { \"key\": index, \"value\": value }])\r\n    }\r\n    else {\r\n      let is_check = false\r\n      for (let idx = 0; idx < listScheduleItemId.length; idx++) {\r\n        if (listScheduleItemId[idx].key === index) {\r\n          if (listScheduleItemId[idx].value !== value) {\r\n            is_check = true\r\n            setListScheduleItemId([...listScheduleItemId.filter((item, idx) => item.key !== index), { \"key\": index, \"value\": value }])\r\n          }\r\n          break\r\n        }\r\n\r\n      }\r\n\r\n      if (is_check === false) {\r\n        setListScheduleItemId([...listScheduleItemId, { \"key\": index, \"value\": value }])\r\n      }\r\n    }\r\n  }\r\n\r\n  console.log(listScheduleItemId)\r\n\r\n  function hasFormMutipleValueChanged2(value: string, index: number) {\r\n    console.log(value)\r\n    console.log(index)\r\n\r\n    if (listLessonId.length === 0) {\r\n      setListLessonId([...listLessonId, { \"key\": index, \"value\": value }])\r\n    }\r\n    else {\r\n      let is_check = false\r\n      for (let idx = 0; idx < listLessonId.length; idx++) {\r\n        if (listLessonId[idx].key === index) {\r\n          if (listLessonId[idx].value !== value) {\r\n            is_check = true\r\n            setListLessonId([...listLessonId.filter((item, idx) => item.key !== index), { \"key\": index, \"value\": value }])\r\n          }\r\n          break\r\n        }\r\n\r\n      }\r\n\r\n      if (is_check === false) {\r\n        setListLessonId([...listLessonId, { \"key\": index, \"value\": value }])\r\n      }\r\n    }\r\n  }\r\n\r\n  console.log(listLessonId)\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row text-left\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card shadow mb-1\">\r\n            <div className=\"card-header py-2\">\r\n              <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} lớp theo kì</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={saveUser}>\r\n                <div className=\"form-group\">\r\n                    <TextInput id=\"input_name\"\r\n                      field=\"name\"\r\n                      value={formState.name.value}\r\n                      onChange={hasFormValueChanged}\r\n                      required={false}\r\n                      maxLength={1000}\r\n                      label=\"Tên\"\r\n                      placeholder=\"\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col-md-6\">\r\n                    <SelectKeyValue id=\"input_semester_id\"\r\n                      field=\"semester_id\"\r\n                      value={formState.semester_id.value}\r\n                      onChange={hasFormValueChanged}\r\n                      required={true}\r\n                      label=\"Học kì\"\r\n                      options={listSemesters}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group col-md-6\">\r\n                    <SelectKeyValue id=\"input_course_id\"\r\n                      field=\"course_id\"\r\n                      value={formState.course_id.value}\r\n                      onChange={hasFormValueChanged}\r\n                      required={true}\r\n                      label=\"Thuộc khóa học\"\r\n                      options={listCourses}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                    <TextInput id=\"input_registration_time\"\r\n                      field=\"registration_time\"\r\n                      value={formState.registration_time.value}\r\n                      onChange={hasFormValueChanged}\r\n                      type=\"datetime-local\"\r\n                      required={false}\r\n                      maxLength={100}\r\n                      label=\"Thời gian bắt đầu đăng kí\"\r\n                      placeholder=\"\" />\r\n                  </div>\r\n                  <div className=\"form-group col-md-6\">\r\n                    <NumberInput id=\"input_total_date_of_week\"\r\n                      value={formState.total_date_of_week.value}\r\n                      field=\"total_date_of_week\"\r\n                      onChange={hasFormValueChanged}\r\n                      max={3}\r\n                      min={0}\r\n                      label=\"Tổng số ngày học trong tuần\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {\r\n                  Array.from(Array(formState.total_date_of_week.value).keys()).map((value, index) => {\r\n                    return (\r\n                      <div className=\"form-row\" key={index}>\r\n                        <div className=\"form-group col-md-6\">\r\n                          <SelectKeyValueMutiple\r\n                            value={isCreate ? 0 : lesson_time_list[index].key}\r\n                            index={index}\r\n                            inputClass={`schedule_item_date_of_week_${index}`}\r\n                            onChange={hasFormMutipleValueChanged1}\r\n                            required={true}\r\n                            label=\"Thứ trong tuần\"\r\n                            options={list_date_of_week}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                          <SelectKeyValueMutiple2\r\n                            value={isCreate ? 0 : lesson_time_list[index].value}\r\n                            inputClass={`schedule_item_lesson_time_${index}`}\r\n                            index={index}\r\n                            onChange={hasFormMutipleValueChanged2}\r\n                            required={true}\r\n                            label=\"Tiết\"\r\n                            options={list_lessons}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n\r\n                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClassSemesterForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getSemesterClass } from \"./GetSemesterClass\";\r\n\r\nexport function putSemesterClass(id: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester-class/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putSemesterClass(id, data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                console.log(id)\r\n                toast.update(idx, { render: \"Chỉnh lớp theo kì thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                getSemesterClass(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Chỉnh lớp theo kì không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getMyClass } from \"./GetMyClass\";\r\n\r\nexport function postScheduleClass(id: any, data: any, idx: any) {\r\n    console.log(\"post ++\")\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester/schedule-class/${id}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postScheduleClass(id, data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                toast.update(idx, { render: \"Xếp lớp thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                getMyClass(dispatch)\r\n                \r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Xếp lớp không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, ChangeEvent, Fragment } from \"react\";\r\nimport { SelectNotFieldProps } from \"../types/SelectNotField\";\r\n\r\nfunction SelectKeyValueNotField(props: SelectNotFieldProps): JSX.Element {\r\n    const [touched, setTouch] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [htmlClass, setHtmlClass] = useState(\"\");\r\n    const [value, setValue] = useState(props.value);\r\n\r\n\r\n    function onValueChanged(event: ChangeEvent<HTMLSelectElement>): void {\r\n        let [error, validClass, elementValue] = [\"\", \"\", event.target.value];\r\n\r\n        [error, validClass] = (!elementValue && props.required) ?\r\n            [\"Value has to be selected\", \"is-invalid\"] : [\"\", \"is-valid\"];\r\n\r\n        if (props.inputClass !== \"\"){\r\n            [error, validClass] = [\"\", \"\"];\r\n        }\r\n\r\n        console.log(props.inputClass)\r\n\r\n        console.log(elementValue)\r\n        props.onChange({ value: elementValue, error: error, touched: touched});\r\n\r\n        setTouch(true);\r\n        setError(error);\r\n        setHtmlClass(validClass);\r\n        setValue(elementValue);\r\n    }\r\n\r\n    //console.log(props.options)\r\n\r\n    const getOptions: (JSX.Element | null)[] = props.options.map( (option: any, index:number) => {\r\n        return (\r\n            <option key={index} value={option.value}>{option.name}</option>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <Fragment>\r\n            <label htmlFor={`${props.id}`}>{props.label}</label>\r\n            <select\r\n                value={value}\r\n                id={`${props.id}`}\r\n                className={`form-control ${props.inputClass ? props.inputClass : \"\"} ${htmlClass}`}\r\n                onChange={onValueChanged}>\r\n                <option value= {\"\"}>Choose...</option>\r\n                {getOptions}\r\n            </select>\r\n\r\n            {error ?\r\n                <div className=\"invalid-feedback\">\r\n                    {error}\r\n                </div> : null\r\n            }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default SelectKeyValueNotField;","import React, { Fragment, Dispatch, useEffect, useState } from \"react\";\r\nimport ClassList from \"./ClassList\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./Class.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IMyClassState, IStateType, IRootPageStateType, ISemesterState, ISemesterClassState } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedMyClass,\r\n    changeSelectedMyClass,\r\n    setModificationState,\r\n    removeMyClass\r\n} from \"../../store/actions/my_class.action\";\r\nimport { MyClassModificationStatus, IMyClass } from \"../../store/models/my_class.interface\";\r\nimport { ISemester } from \"../../store/models/semester.interface\";\r\nimport { getMyClass } from \"../../common/service/MyClass/GetMyClass\";\r\nimport DatePicker, { DateObject } from \"react-multi-date-picker\";\r\nimport DatePanel from \"react-multi-date-picker/plugins/date_panel\";\r\nimport { OnChangeModelNotFiled } from \"../../common/types/Form.types\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { ISemesterClass, SemesterClassModificationStatus } from \"../../store/models/semester_class.interface\";\r\nimport { changeSelectedSemesterClass, clearSelectedSemesterClass, removeSemesterClass, setModificationStateSemesterClass } from \"../../store/actions/semester_class.action\"\r\nimport ClassSemesterList from \"./ClassSemesterList\";\r\nimport Popup from \"reactjs-popup\";\r\nimport ClassSemesterForm from \"./ClassSemesterForm\";\r\nimport { deleteSemesterClass } from \"../../common/service/SemesterClass/DeleteSemesterClass\";\r\nimport { getSemesterClass } from \"../../common/service/SemesterClass/GetSemesterClass\";\r\nimport { getSchedule } from \"../../common/service/Schedule/GetSchedule\";\r\nimport { getLesson } from \"../../common/service/Lesson/GetLesson\";\r\nimport { getCourse } from \"../../common/service/Course/GetCourse\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { postScheduleClass } from \"../../common/service/MyClass/PostScheduleClass\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getSemesterNext } from \"../../common/service/semester/GetSemesterNext\";\r\nimport SelectKeyValueNotField from \"../../common/components/SelectKeyValueNotField\";\r\nimport { getSemester } from \"../../common/service/semester/GetSemester\";\r\n\r\ntype Options = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\ntype Obj = {\r\n    time: string[]\r\n}\r\nconst format = \"YYYY-MM-DD\";\r\n\r\nconst Class: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const myclasss: IMyClassState = useSelector((state: IStateType) => state.myclasses);\r\n    const semester_classes: ISemesterClassState = useSelector((state: IStateType) => state.semester_classes);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = myclasss.myClasses.length\r\n    const numberSemesterClassesCount: number = semester_classes.semesterClasses.length;\r\n    const [value, setValue] = useState<any>([\r\n        new DateObject().set({ day: 4, format }),\r\n        new DateObject().set({ day: 25, format }),\r\n        new DateObject().set({ day: 20, format })\r\n    ]);\r\n    const [checked1, setChecked1] = useState(true);\r\n    const [checked2, setChecked2] = useState(false);\r\n    const [checked3, setChecked3] = useState(false);\r\n    const [semesterId, setSemesterId] = useState(0);\r\n    const [popup1, setPopup1] = useState(false);\r\n    const [popup2, setPopup2] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedMyClass());\r\n        dispatch(updateCurrentPath(\"Lớp học\", \"Danh sách\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getMyClass(dispatch))\r\n                    trackPromise(getSemester(dispatch))\r\n                    trackPromise(getSemesterClass(dispatch))\r\n                    trackPromise(getSchedule(dispatch))\r\n                    trackPromise(getLesson(dispatch))\r\n                    trackPromise(getCourse(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getMyClass(dispatch))\r\n                trackPromise(getSemester(dispatch))\r\n                trackPromise(getSemesterClass(dispatch))\r\n                trackPromise(getSchedule(dispatch))\r\n                trackPromise(getLesson(dispatch))\r\n                trackPromise(getCourse(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token])\r\n\r\n    const semesters: ISemesterState = useSelector((state: IStateType) => state.semesters);\r\n    const listSemester: ISemester[] = semesters.semesters\r\n    //console.log(listLevel)\r\n    const listSemesters: Options[] = [];\r\n    listSemester.map((ele) => {\r\n        let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n        return listSemesters.push(item)\r\n    })\r\n\r\n    function onMyClassSelect(myclass: IMyClass): void {\r\n        dispatch(changeSelectedMyClass(myclass));\r\n        dispatch(setModificationState(MyClassModificationStatus.None));\r\n    }\r\n\r\n    function onSemesterClassSelect(course: ISemesterClass): void {\r\n        dispatch(changeSelectedSemesterClass(course));\r\n        onSemesterClassRemove()\r\n        dispatch(setModificationStateSemesterClass(SemesterClassModificationStatus.None));\r\n    }\r\n\r\n    function hasFormValueChangedNotFiled(model: OnChangeModelNotFiled): void {\r\n        setSemesterId(model.value);\r\n    }\r\n\r\n    console.log(semesterId)\r\n\r\n    async function handleScheduleClass() {\r\n        let time: String[] = [];\r\n        value.map((ele: any, index: any) => {\r\n            return time.push(ele.toString())\r\n        })\r\n\r\n        const idx = toast.loading(\"Đang xếp lớp. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n    \r\n        dispatch(postScheduleClass(semesterId, { time: time }, idx));\r\n    }\r\n\r\n    function onSemesterClassRemove() {\r\n        setPopup1(true);\r\n    }\r\n\r\n    function onRemovePopup1(value: boolean) {\r\n        setPopup1(false);\r\n    }\r\n\r\n    return (\r\n\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <ToastContainer />\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Lớp học</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ LỚP THEO KÌ\" text={`${numberSemesterClassesCount}`} icon=\"box\" class=\"primary\" />\r\n                <TopCard title=\"SỐ LỚP HỌC\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                                setSearchTerm(event.target.value)\r\n                                console.log(searchTerm)\r\n                            }} />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked1 === false) {\r\n                            setChecked1(true)\r\n                            setChecked2(false)\r\n                            setChecked3(false)\r\n                        }\r\n                    }} style={{\r\n                        color: checked1 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Xếp lớp</h6>\r\n\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked1 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked2 === false) {\r\n                            setChecked2(true)\r\n                            setChecked1(false)\r\n                            setChecked3(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked2 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Lớp theo kì</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked2 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked3 === false) {\r\n                            setChecked3(true)\r\n                            setChecked1(false)\r\n                            setChecked2(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked3 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Lớp học</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked3 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {\r\n                function () {\r\n                    if (checked1 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"mb-4\">\r\n                                            <div className=\"py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\">Xếp lớp</h6>\r\n                                            </div>\r\n                                            <form>\r\n                                                <div className=\"form-row\">\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <SelectKeyValueNotField\r\n                                                            value={semesterId}\r\n                                                            id=\"input_total_page\"\r\n                                                            onChange={hasFormValueChangedNotFiled}\r\n                                                            required={true}\r\n                                                            label=\"Học kì: \"\r\n                                                            options={listSemesters}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <label>Ngày nghỉ: </label>\r\n                                                        <DatePicker\r\n                                                            multiple\r\n                                                            id=\"date-picker-class\"\r\n                                                            value={value}\r\n                                                            onChange={setValue}\r\n                                                            format={format}\r\n                                                            plugins={[\r\n                                                                <DatePanel />\r\n                                                            ]}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                            <button className={`btn btn-success left-margin`} onClick={() => {handleScheduleClass()}}>Xếp lớp</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else if (checked2 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\">Danh sách lớp mở theo kì</h6>\r\n                                                <div className=\"header-buttons\">\r\n                                                    <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                                        dispatch(setModificationStateSemesterClass(SemesterClassModificationStatus.Create))\r\n                                                        onSemesterClassRemove()\r\n                                                    }}>\r\n                                                        <i className=\"fas fa fa-plus\"></i>\r\n                                                        Mở lớp\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ClassSemesterList\r\n                                                    onSelect={onSemesterClassSelect} value={searchTerm}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <Popup\r\n                                    open={popup1}\r\n                                    onClose={() => setPopup1(false)}\r\n                                    closeOnDocumentClick\r\n                                >\r\n                                    <>\r\n                                        {\r\n                                            function () {\r\n                                                if ((semester_classes.modificationState === SemesterClassModificationStatus.Create) || ((semester_classes.selectedSemesterClass) && (semester_classes.modificationState === SemesterClassModificationStatus.Edit))) {\r\n                                                    return <ClassSemesterForm isCheck={onRemovePopup1} />\r\n                                                }\r\n                                            }()\r\n                                        }\r\n                                    </>\r\n                                </Popup>\r\n                                {\r\n                                    function () {\r\n                                        if ((semester_classes.selectedSemesterClass) && (semester_classes.modificationState === SemesterClassModificationStatus.Remove)) {\r\n                                            return (\r\n                                                <Popup\r\n                                                    open={popup1}\r\n                                                    onClose={() => setPopup1(false)}\r\n                                                    closeOnDocumentClick\r\n                                                >\r\n                                                    <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                                        <div className=\"popup-title\">\r\n                                                            Are you sure?\r\n                                                        </div>\r\n                                                        <div className=\"popup-content\">\r\n                                                            <button type=\"button\"\r\n                                                                className=\"btn btn-danger\"\r\n                                                                onClick={() => {\r\n                                                                    if (!semester_classes.selectedSemesterClass) {\r\n                                                                        return;\r\n                                                                    }\r\n                                                                    dispatch(deleteSemesterClass(semester_classes.selectedSemesterClass.id))\r\n                                                                    dispatch(addNotification(\"Độ tuổi \", `${semester_classes.selectedSemesterClass.name} đã được xóa`));\r\n                                                                    dispatch(removeSemesterClass(semester_classes.selectedSemesterClass.id));\r\n                                                                    dispatch(clearSelectedSemesterClass());\r\n                                                                    setPopup1(false);\r\n                                                                }}>Remove\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Popup>\r\n                                            )\r\n                                        }\r\n                                    }()\r\n                                }\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n\r\n                    else if (checked3 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\">Danh sách lớp học</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ClassList\r\n                                                    onSelect={onMyClassSelect} value={searchTerm}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {\r\n                                    function () {\r\n                                        if ((myclasss.selectedMyClass) && (myclasss.modificationState === MyClassModificationStatus.Remove)) {\r\n                                            return (\r\n                                                <Popup\r\n                                                    open={popup2}\r\n                                                    onClose={() => setPopup2(false)}\r\n                                                    closeOnDocumentClick\r\n                                                >\r\n                                                    <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                                        <div className=\"popup-title\">\r\n                                                            Are you sure?\r\n                                                        </div>\r\n                                                        <div className=\"popup-content\">\r\n                                                            <button type=\"button\"\r\n                                                                className=\"btn btn-danger\"\r\n                                                                onClick={() => {\r\n                                                                    if (!myclasss.selectedMyClass) {\r\n                                                                        return;\r\n                                                                    }\r\n                                                                    dispatch(addNotification(\"Trình độ \", `${myclasss.selectedMyClass.name} đã được xóa`));\r\n                                                                    dispatch(removeMyClass(myclasss.selectedMyClass.id));\r\n                                                                    dispatch(clearSelectedMyClass());\r\n                                                                    setPopup2(false);\r\n                                                                }}>Remove\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Popup>\r\n                                            )\r\n                                        }\r\n                                    }()\r\n                                }\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Class;\r\n","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteSemesterClass(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/semester-class/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteSemesterClass(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IProductState } from \"../../store/models/root.interface\";\r\nimport { IProduct } from \"../../store/models/product.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport type productListProps = {\r\n  onSelect?: (product: IProduct) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nconst data = [\r\n  {\r\n    'id': \"\",\r\n    'lesson': 'Buổi 1',\r\n    'teacher': 'Chung Nguyễn',\r\n    'number_stuent': '5/6',\r\n  },\r\n  {\r\n    'id': \"\",\r\n    'lesson': 'Buổi 2',\r\n    'teacher': 'Chung Nguyễn',\r\n    'number_stuent': '6/6',\r\n  },\r\n  {\r\n    'id': \"\",\r\n    'lesson': 'Buổi 3',\r\n    'teacher': 'Chung Nguyễn',\r\n    'number_stuent': '5/6',\r\n  },\r\n  {\r\n    'id': \"\",\r\n    'lesson': 'Buổi 4',\r\n    'teacher': 'Chung Nguyễn',\r\n    'number_stuent': '5/6',\r\n  },\r\n  {\r\n    'id': '',\r\n    'lesson': 'Buổi 5',\r\n    'teacher': 'Chung Nguyễn',\r\n    'number_stuent': '5/6',\r\n  },\r\n]\r\n\r\nfunction LessonList(props: productListProps): JSX.Element  {\r\n\r\n  const products: IProductState = useSelector((state: IStateType) => state.products);\r\n  const history = useHistory();\r\n  \r\n  const routeChange = () =>{ \r\n    let path = '/class/lesson'; \r\n    history.push(path);\r\n  }\r\n\r\n\r\n  const productElements: (JSX.Element | null)[] = data.map(product => {\r\n    if (!product) { return null; }\r\n    return (<tr className={`table-row ${(products.selectedProduct && products.selectedProduct.id === product.id) ? \"selected\" : \"\"}`}\r\n      key={`product_${product.id}`} onClick={routeChange}>\r\n      <th scope=\"row\">{product.id}</th>\r\n      <td>{product.lesson}</td>\r\n      <td>{product.teacher}</td>\r\n      <td>{product.number_stuent}</td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"table-responsive portlet\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Buổi</th>\r\n            <th scope=\"col\">Giáo viên dạy</th>\r\n            <th scope=\"col\">Số học sinh tham gia</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {productElements}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default LessonList;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction StudentList(): JSX.Element  {\r\n\r\n  const students: IUserState = useSelector((state: IStateType) => state.users);\r\n  const history = useHistory();\r\n\r\n  \r\n  const routeChange = () =>{ \r\n    let path = '/class/lesson'; \r\n    history.push(path);\r\n  }\r\n\r\n\r\n  const studentElements: (JSX.Element | null)[] = students.students.map((student, idx) => {\r\n    if (!student) { return null; }\r\n    return (<tr className={`table-row ${(students.selectedUser && students.selectedUser.id === student.id) ? \"selected\" : \"\"}`}\r\n      key={`student_${idx}`} onClick={routeChange}>\r\n      <th scope=\"row\">{idx + 1}</th>\r\n      <td>{student.username}</td>\r\n      <td>{student.dateOfBirth}</td>\r\n      <td>{student.sex}</td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"table-responsive portlet\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Tên</th>\r\n            <th scope=\"col\">Tuổi</th>\r\n            <th scope=\"col\">Giới tính</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {studentElements}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default StudentList;\r\n","import { IInformationClass, InformationClassModificationStatus } from \"../models/information_class.interface\";\r\nexport const ADD_INFORMATION_CLASS: string = \"ADD_INFORMATION_CLASS\";\r\nexport const EDIT_INFORMATION_CLASS: string = \"EDIT_INFORMATION_CLASS\";\r\nexport const REMOVE_INFORMATION_CLASS: string = \"REMOVE_INFORMATION_CLASS\";\r\nexport const CHANGE_INFORMATION_CLASS_AMOUNT: string = \"CHANGE_INFORMATION_CLASS_AMOUNT\";\r\nexport const CHANGE_INFORMATION_CLASS_PENDING_EDIT: string = \"CHANGE_INFORMATION_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_INFORMATION_CLASS_PENDING_EDIT: string = \"CLEAR_INFORMATION_CLASS_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_INFORMATION_CLASS_ALL: string = \"REMOVE_INFORMATION_CLASS_ALL\";\r\nexport const INITIAL_INFORMATION_CLASS: string = \"INITIAL_INFORMATION_CLASS\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(information_class: IInformationClass) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        information_class\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialInformationClass(information_class: IInformationClass): IInitialInformationClassActionType {\r\n    return { type: INITIAL_INFORMATION_CLASS, information_class: information_class };\r\n}\r\n\r\nexport function removeInformationClassAll(): IRemoveInformationClassAllActionType {\r\n    return { type: REMOVE_INFORMATION_CLASS_ALL };\r\n}\r\n\r\nexport function addInformationClass(information_class: IInformationClass): IAddInformationClassActionType {\r\n    return { type: ADD_INFORMATION_CLASS, information_class: information_class };\r\n}\r\n\r\nexport function editInformationClass(information_class: IInformationClass): IEditInformationClassActionType {\r\n    return { type: EDIT_INFORMATION_CLASS, information_class: information_class };\r\n}\r\n\r\nexport function removeInformationClass(id: string): IRemoveInformationClassActionType {\r\n    return { type: REMOVE_INFORMATION_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedInformationClass(information_class: IInformationClass): IChangeSelectedInformationClassActionType {\r\n    return { type: CHANGE_INFORMATION_CLASS_PENDING_EDIT, information_class: information_class };\r\n}\r\n\r\nexport function clearSelectedInformationClass(): IClearSelectedInformationClassActionType {\r\n    return { type: CLEAR_INFORMATION_CLASS_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: InformationClassModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddInformationClassActionType { type: string, information_class: IInformationClass };\r\ninterface IEditInformationClassActionType { type: string, information_class: IInformationClass };\r\ninterface IRemoveInformationClassActionType { type: string, id: string };\r\ninterface IChangeSelectedInformationClassActionType { type: string, information_class: IInformationClass };\r\ninterface IClearSelectedInformationClassActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  InformationClassModificationStatus};\r\ninterface IRemoveInformationClassAllActionType { type: string }\r\ninterface IInitialInformationClassActionType {type: string, information_class: IInformationClass}","import { ITimeSchedule, TimeScheduleModificationStatus } from \"../models/time_schedule.interface\";\r\nexport const ADD_TIME_SCHEDULE: string = \"ADD_TIME_SCHEDULE\";\r\nexport const EDIT_TIME_SCHEDULE: string = \"EDIT_TIME_SCHEDULE\";\r\nexport const REMOVE_TIME_SCHEDULE: string = \"REMOVE_TIME_SCHEDULE\";\r\nexport const CHANGE_TIME_SCHEDULE_AMOUNT: string = \"CHANGE_TIME_SCHEDULE_AMOUNT\";\r\nexport const CHANGE_TIME_SCHEDULE_PENDING_EDIT: string = \"CHANGE_TIME_SCHEDULE_PENDING_EDIT\";\r\nexport const CLEAR_TIME_SCHEDULE_PENDING_EDIT: string = \"CLEAR_TIME_SCHEDULE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_TIME_SCHEDULE_ALL: string = \"REMOVE_TIME_SCHEDULE_ALL\";\r\nexport const INITIAL_TIME_SCHEDULE: string = \"INITIAL_TIME_SCHEDULE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(time_schedule: ITimeSchedule) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        time_schedule\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialTimeSchedule(time_schedule: ITimeSchedule): IInitialTimeScheduleActionType {\r\n    return { type: INITIAL_TIME_SCHEDULE, time_schedule: time_schedule };\r\n}\r\n\r\nexport function removeTimeScheduleAll(): IRemoveTimeScheduleAllActionType {\r\n    return { type: REMOVE_TIME_SCHEDULE_ALL };\r\n}\r\n\r\nexport function addTimeSchedule(time_schedule: ITimeSchedule): IAddTimeScheduleActionType {\r\n    return { type: ADD_TIME_SCHEDULE, time_schedule: time_schedule };\r\n}\r\n\r\nexport function editTimeSchedule(time_schedule: ITimeSchedule): IEditTimeScheduleActionType {\r\n    return { type: EDIT_TIME_SCHEDULE, time_schedule: time_schedule };\r\n}\r\n\r\nexport function removeTimeSchedule(id: string): IRemoveTimeScheduleActionType {\r\n    return { type: REMOVE_TIME_SCHEDULE, id: id };\r\n}\r\n\r\nexport function changeSelectedTimeSchedule(time_schedule: ITimeSchedule): IChangeSelectedTimeScheduleActionType {\r\n    return { type: CHANGE_TIME_SCHEDULE_PENDING_EDIT, time_schedule: time_schedule };\r\n}\r\n\r\nexport function clearSelectedTimeSchedule(): IClearSelectedTimeScheduleActionType {\r\n    return { type: CLEAR_TIME_SCHEDULE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: TimeScheduleModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddTimeScheduleActionType { type: string, time_schedule: ITimeSchedule };\r\ninterface IEditTimeScheduleActionType { type: string, time_schedule: ITimeSchedule };\r\ninterface IRemoveTimeScheduleActionType { type: string, id: string };\r\ninterface IChangeSelectedTimeScheduleActionType { type: string, time_schedule: ITimeSchedule };\r\ninterface IClearSelectedTimeScheduleActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  TimeScheduleModificationStatus};\r\ninterface IRemoveTimeScheduleAllActionType { type: string }\r\ninterface IInitialTimeScheduleActionType {type: string, time_schedule: ITimeSchedule}","import { addInformationClass, removeInformationClassAll } from \"../../../store/actions/information_class.action\";\r\nimport { fetchDataSuccess, fetchDataError } from \"../../../store/actions/my_class.action\";\r\nimport { addTimeSchedule, removeTimeScheduleAll } from \"../../../store/actions/time_schedule.action\";\r\nimport { addStudent, removeStudentAll } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface MyClass {\r\n    id: \"\",\r\n    name: string;\r\n    teacher: string;\r\n    security_code: string;\r\n    course: string;\r\n    art_age: string;\r\n    art_type: string;\r\n    art_level: string;\r\n    number_section: number;\r\n    number_student: number;\r\n}\r\n\r\ninterface user {\r\n    id: string,\r\n    username: string,\r\n    email: string,\r\n    password: string,\r\n    status: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    dateOfBirth: string,\r\n    profile_image_url: string,\r\n    sex: string,\r\n    phone: string,\r\n    address: string,\r\n    parents: string,\r\n    createTime: string\r\n}\r\nexport function getInfoMyClass(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/classes/info/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getInfoMyClass(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeStudentAll())\r\n                console.log(data.body.students)\r\n                data.body.students.map((ele: any, index: any) => {\r\n                    var user: user = {\r\n                        id: ele.id,\r\n                        username: ele.username,\r\n                        email: ele.email,\r\n                        status: ele.status,\r\n                        password: \"\",\r\n                        firstName: ele.firstName,\r\n                        lastName: ele.lastName,\r\n                        dateOfBirth: ele.dateOfBirth,\r\n                        profile_image_url: ele.profile_image_url,\r\n                        sex: ele.sex,\r\n                        phone: ele.phone,\r\n                        address: ele.address,\r\n                        parents: ele.parents,\r\n                        createTime: ele.createTime\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addStudent(user))\r\n                })\r\n                console.log(data.body.classes.security_code)\r\n                dispatch(removeInformationClassAll())\r\n                let information_class: MyClass = {\r\n                    id: \"\",\r\n                    name: data.body.classes.name,\r\n                    teacher: data.body.teacher.username,\r\n                    security_code: data.body.classes.security_code,\r\n                    course: data.body.course.name,\r\n                    art_age: data.body.art_age.name,\r\n                    art_level: data.body.art_level.name,\r\n                    art_type: data.body.art_type.name,\r\n                    number_section: data.body.course.num_of_section,\r\n                    number_student: data.body.students.length\r\n                }\r\n\r\n                dispatch(removeTimeScheduleAll())\r\n                data.body.lesson_time.map((ele: any, index: any) => {\r\n                    let x = Object.values(ele)\r\n                    return x.map((ele_1: any) => {\r\n                        return ele_1.map((ele_2: any) => {\r\n                            //console.log(ele_2)\r\n                            if (ele_2.length !== 0){\r\n                                dispatch(addTimeSchedule({start_time: ele_2[0], end_time: ele_2[1]}))\r\n                            }\r\n                            return ele_2\r\n                        })\r\n                    })\r\n                })\r\n\r\n                dispatch(addInformationClass(information_class))\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IStateType, IRootPageStateType, IUserState, IInformationClassState } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedProduct, setModificationState,\r\n    changeSelectedProduct\r\n} from \"../../store/actions/products.action\";\r\nimport { ProductModificationStatus, IProduct } from \"../../store/models/product.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport LessonList from \"./LessonList\";\r\nimport StudentList from \"./StudentList\";\r\nimport { getInfoMyClass } from \"../../common/service/MyClass/GetInfoMyClass\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\n\r\nconst DetailClass: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const students: IUserState = useSelector((state: IStateType) => state.users);\r\n    const information_class: IInformationClassState = useSelector((state: IStateType) => state.information_classes);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = students.students.length;\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedProduct());\r\n        dispatch(updateCurrentPath(\"Lớp\", \"Lớp CM-1\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    var id_x = localStorage.getItem('class_id')\r\n    let class_id: string = \"\";\r\n    if (id_x !== null){\r\n        class_id = id_x\r\n    }\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getInfoMyClass(dispatch, class_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getInfoMyClass(dispatch, class_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, class_id]);\r\n\r\n    function onProductSelect(product: IProduct): void {\r\n        dispatch(changeSelectedProduct(product));\r\n        dispatch(setModificationState(ProductModificationStatus.None));\r\n    }\r\n\r\n    console.log(information_class.informationClasses)\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">{information_class.informationClasses.length > 0 ? information_class.informationClasses[0].name : \"\"}</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ HỌC SINH\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n                <TopCard title=\"SỐ BUỔI ĐÃ DẠY\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Thông tin chi tiết</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6 \">\r\n                                    <TextInput id=\"input_email\"\r\n                                            value={''}\r\n                                            field=\"name\"\r\n                                            onChange={() => { }}\r\n                                            required={true}\r\n                                            maxLength={20}\r\n                                            label=\"Mã lớp\"\r\n                                            placeholder={information_class.informationClasses.length > 0 ? information_class.informationClasses[0].security_code : \"\"} />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_email\"\r\n                                            value={''}\r\n                                            field=\"name\"\r\n                                            onChange={() => { }}\r\n                                            required={true}\r\n                                            maxLength={20}\r\n                                            label=\"Thuộc khóa học\"\r\n                                            placeholder={information_class.informationClasses.length > 0 ? information_class.informationClasses[0].course : \"\"} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_email\"\r\n                                            value={''}\r\n                                            field=\"name\"\r\n                                            onChange={() => { }}\r\n                                            required={true}\r\n                                            maxLength={20}\r\n                                            label=\"Thể loại\"\r\n                                            placeholder={information_class.informationClasses.length > 0 ? information_class.informationClasses[0].art_type : \"\"} />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_email\"\r\n                                            value={''}\r\n                                            field=\"name\"\r\n                                            onChange={() => { }}\r\n                                            required={true}\r\n                                            maxLength={20}\r\n                                            label=\"Độ tuổi\"\r\n                                            placeholder={information_class.informationClasses.length > 0 ? information_class.informationClasses[0].art_level : \"\"} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_email\"\r\n                                            value={''}\r\n                                            field=\"name\"\r\n                                            onChange={() => { }}\r\n                                            required={true}\r\n                                            maxLength={20}\r\n                                            label=\"Giảng viên\"\r\n                                            placeholder={information_class.informationClasses.length > 0 ? information_class.informationClasses[0].teacher : \"\"} />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_email\"\r\n                                            value={''}\r\n                                            field=\"name\"\r\n                                            onChange={() => { }}\r\n                                            required={true}\r\n                                            maxLength={20}\r\n                                            label=\"Số buổi\"\r\n                                            placeholder={information_class.informationClasses.length > 0 ? information_class.informationClasses[0].number_section.toString() : \"\"} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_email\"\r\n                                            value={''}\r\n                                            field=\"name\"\r\n                                            onChange={() => { }}\r\n                                            required={true}\r\n                                            maxLength={20}\r\n                                            label=\"Số học sinh\"\r\n                                            placeholder={information_class.informationClasses.length > 0 ? information_class.informationClasses[0].number_student.toString() : \"\"} />\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Buổi học đã dạy</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                        <LessonList\r\n                                onSelect={onProductSelect}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Học sinh</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                        <StudentList />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default DetailClass;\r\n","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IProductState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedProduct\r\n} from \"../../store/actions/products.action\";\r\n\r\n\r\n\r\n\r\nconst DetailLesson: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const products: IProductState = useSelector((state: IStateType) => state.products);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = products.products.length;\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedProduct());\r\n        dispatch(updateCurrentPath(\"Lớp CM-1\", \"Buổi 1\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Buổi 1</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ HỌC SINH THAM GIA\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6\">\r\n                    <div className=\"card mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Thông tin chi tiết</h6>\r\n                        </div>\r\n                        <div className=\"card-body text-center\">\r\n                            <button className={`btn btn-success left-margin`}>Xem giáo trình</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Video buổi dạy học</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                        <iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/kROrqp0Dx8o\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6\"> </div>\r\n                <div className=\"col-xl-6 col-lg-6\">\r\n                    <div className=\"card mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Tin nhắn buổi học</h6>\r\n                        </div>\r\n                        <div className=\"card-body text-center\">\r\n                            <button className={`btn btn-success left-margin`}>Xuất</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default DetailLesson;\r\n","import React from 'react';\r\n\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nexport const options = {\r\n    responsive: true,\r\n    plugins: {\r\n        legend: {\r\n            position: 'top',\r\n        },\r\n        title: {\r\n            display: true,\r\n            text: 'Chart.js Bar Chart',\r\n        },\r\n    },\r\n};\r\n\r\n\r\nexport function ChartBar(props) {\r\n    return <Bar options={options} data={props.data} />;\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {IStateType, IUserRegisterJoinSemesterState } from \"../../store/models/root.interface\";\r\nimport { IUserRegisterJoinSemester } from \"../../store/models/user_register_join_semester.interface\"\r\n\r\nexport type userRegisterJoinSemesterListProps = {\r\n  onSelect?: (userRegisterJoinSemester: IUserRegisterJoinSemester) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction TurnoverList(props: userRegisterJoinSemesterListProps): JSX.Element  {\r\n  const userRegisterJoinSemesters: IUserRegisterJoinSemesterState = useSelector((state: IStateType) => state.user_register_join_semesters);\r\n\r\n\r\n  const userRegisterJoinSemesterElements: (JSX.Element | null)[] = userRegisterJoinSemesters.completed.map((userRegisterJoinSemester, index) => {\r\n    if (!userRegisterJoinSemester) { return null; }\r\n    return (<tr className={`table-row ${(userRegisterJoinSemesters.selectedUserRegisterJoinSemester && userRegisterJoinSemesters.selectedUserRegisterJoinSemester.id === userRegisterJoinSemester.id) ? \"selected\" : \"\"}`}\r\n      key={`userRegisterJoinSemester_${index}`}>\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td>{userRegisterJoinSemester.payer_name}</td>\r\n      <td>{userRegisterJoinSemester.student_name}</td>\r\n      <td>{userRegisterJoinSemester.course_name}</td>\r\n      <td>{userRegisterJoinSemester.price}</td>\r\n      <td>{userRegisterJoinSemester.time}</td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"table-responsive portlet\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Phụ huynh</th>\r\n            <th scope=\"col\">Học sinh</th>\r\n            <th scope=\"col\">Khóa học</th>\r\n            <th scope=\"col\">Giá tiền</th>\r\n            <th scope=\"col\">Ngày giao dịch</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {userRegisterJoinSemesterElements}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default TurnoverList;\r\n","import { fetchDataError, addCompleted, addWaiting, removeCompletedAll, removeWaitingAll} from \"../../../store/actions/user_register_join_semester.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user_register_semester {\r\n    id: string;\r\n    student_id: string;\r\n    payer_id: string;\r\n    payer_name: string;\r\n    course_name: string;\r\n    price: number;\r\n    student_name: string;\r\n    link_url: string;\r\n    status: string;\r\n    semester_class_id: string;\r\n    time: string;\r\n}\r\nexport function getUserRegisterJoinSemester(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-join-semester`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserRegisterJoinSemester(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(removeCompletedAll())\r\n                dispatch(removeWaitingAll())\r\n                console.log(data.body.user_register_semester)\r\n                data.body.user_register_semester.map((ele: any, index: any) => {\r\n                    var user_register_semester: user_register_semester = {\r\n                        id: ele.id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        link_url: ele.link_url,\r\n                        payer_name: ele.payer_name,\r\n                        course_name: ele.course_name,\r\n                        status: ele.status,\r\n                        payer_id: ele.payer_id,\r\n                        price: ele.price,\r\n                        semester_class_id: ele.semester_class_id,\r\n                        time: ele.time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (ele.status === \"Completed\") {\r\n                        dispatch(addCompleted(user_register_semester))\r\n                    }\r\n                    else {\r\n                        dispatch(addWaiting(user_register_semester))\r\n                    }\r\n                    return index\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React from 'react';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nexport function DoughnutPieCharts(props) {\r\n    return <Doughnut data={props.data} />;\r\n}","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, ICourseReportState } from \"../../store/models/root.interface\";\r\nimport { IArtAge } from \"../../store/models/art_age.interface\";\r\nimport { DoughnutPieCharts } from \"../../common/components/DoughnutPieCharts\";\r\n\r\nexport type artAgeListProps = {\r\n    onSelect?: (art_age: IArtAge) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction CourseAnalytis(props: artAgeListProps): JSX.Element {\r\n  const course_reports: ICourseReportState = useSelector((state: IStateType) => state.course_reports); \r\n\r\n  let data_list: number[] = []\r\n  let data_name_list: string[] = []\r\n  if (course_reports.course_reports.length > 0){\r\n    course_reports.course_reports.map(ele => {\r\n          data_list.push(ele.total_register)\r\n          data_name_list.push(ele.name)\r\n          return ele\r\n    })\r\n  }\r\n\r\n    const data = {\r\n        labels: data_name_list,\r\n        datasets: [\r\n          {\r\n            label: '# of Votes',\r\n            data: data_list,\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.2)',\r\n              'rgba(54, 162, 235, 0.2)',\r\n              'rgba(255, 206, 86, 0.2)',\r\n              'rgba(75, 192, 192, 0.2)',\r\n              'rgba(153, 102, 255, 0.2)',\r\n              'rgba(255, 159, 64, 0.2)',\r\n            ],\r\n            borderColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)',\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n\r\n    return (\r\n        <Fragment>\r\n            <DoughnutPieCharts data ={data}/>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default CourseAnalytis;\r\n","import React from 'react';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nexport const options = {\r\n    responsive: true,\r\n    plugins: {\r\n        legend: {\r\n            position: 'top',\r\n        },\r\n        title: {\r\n            display: true,\r\n            text: 'Chart.js Line Chart',\r\n        },\r\n    },\r\n};\r\n\r\nexport function ChartLine(props) {\r\n    return <Line options={options} data={props.data} />;\r\n}","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IReportUserState } from \"../../store/models/root.interface\";\r\nimport { IArtAge } from \"../../store/models/art_age.interface\";\r\nimport { ChartLine } from \"../../common/components/CharLine\";\r\n\r\nexport type artAgeListProps = {\r\n    onSelect?: (art_age: IArtAge) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction CourseAnalytis(props: artAgeListProps): JSX.Element {\r\n\r\n    const report_users: IReportUserState = useSelector((state: IStateType) => state.report_users); \r\n\r\n    let data_list: number[] = []\r\n    if (report_users.report_users.length > 0){\r\n        report_users.report_users.map(ele => {\r\n            return data_list.push(ele.total)\r\n        })\r\n    }\r\n\r\n    const currentYear = new Date().getFullYear();\r\n\r\n    const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'Septempber', 'October', 'November', 'December'];\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: `Năm ${currentYear}`,\r\n                data: data_list,\r\n                borderColor: 'rgb(53, 162, 235)',\r\n                backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <ChartLine data={data} />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default CourseAnalytis;\r\n","import { ITurnover, TurnoverModificationStatus } from \"../models/turnover.interface\";\r\n\r\n// register_successfull_turnovers\r\nexport const ADD_TURNOVER_NOW: string = \"ADD_TURNOVER_NOW\";\r\nexport const EDIT_TURNOVER_NOW: string = \"EDIT_TURNOVER_NOW\";\r\nexport const REMOVE_TURNOVER_NOW: string = \"REMOVE_TURNOVER_NOW\";\r\nexport const CHANGE_TURNOVER_NOW_AMOUNT: string = \"CHANGE_TURNOVER_NOW_AMOUNT\";\r\nexport const CHANGE_TURNOVER_NOW_PENDING_EDIT: string = \"CHANGE_TURNOVER_NOW_PENDING_EDIT\";\r\nexport const CLEAR_TURNOVER_NOW_PENDING_EDIT: string = \"CLEAR_TURNOVER_NOW_PENDING_EDIT\";\r\nexport const REMOVE_TURNOVER_NOW_ALL: string = \"REMOVE_TURNOVER_NOW_ALL\";\r\nexport const INITIAL_TURNOVER_NOW: string = \"INITIAL_TURNOVER_NOW\";\r\n\r\n// not_register_turnovers\r\nexport const ADD_TURNOVER_LAST: string = \"ADD_TURNOVER_LAST\";\r\nexport const EDIT_TURNOVER_LAST: string = \"EDIT_TURNOVER_LAST\";\r\nexport const REMOVE_TURNOVER_LAST: string = \"REMOVE_TURNOVER_LAST\";\r\nexport const CHANGE_TURNOVER_LAST_AMOUNT: string = \"CHANGE_TURNOVER_LAST_AMOUNT\";\r\nexport const CHANGE_TURNOVER_LAST_PENDING_EDIT: string = \"CHANGE_TURNOVER_LAST_PENDING_EDIT\";\r\nexport const CLEAR_TURNOVER_LAST_PENDING_EDIT: string = \"CLEAR_TURNOVER_LAST_PENDING_EDIT\";\r\nexport const REMOVE_TURNOVER_LAST_ALL: string = \"REMOVE_TURNOVER_LAST_ALL\";\r\nexport const INITIAL_TURNOVER_LAST: string = \"INITIAL_TURNOVER_LAST\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(turnover: ITurnover) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        turnover\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialTurnoverNow(turnover: ITurnover): IInitialTurnoverNowActionType {\r\n    return { type: INITIAL_TURNOVER_NOW, turnover: turnover };\r\n}\r\n\r\nexport function removeTurnoverNowAll(): IRemoveTurnoverNowAllActionType {\r\n    return { type: REMOVE_TURNOVER_NOW_ALL };\r\n}\r\n\r\nexport function addTurnoverNow(turnover: ITurnover): IAddTurnoverNowActionType {\r\n    return { type: ADD_TURNOVER_NOW, turnover: turnover };\r\n}\r\n\r\nexport function editTurnoverNow(turnover: ITurnover): IEditTurnoverNowActionType {\r\n    return { type: EDIT_TURNOVER_NOW, turnover: turnover };\r\n}\r\n\r\nexport function removeTurnoverNow(id: string): IRemoveTurnoverNowActionType {\r\n    return { type: REMOVE_TURNOVER_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedTurnoverNow(turnover: ITurnover): IChangeSelectedTurnoverNowActionType {\r\n    return { type: CHANGE_TURNOVER_NOW_PENDING_EDIT, turnover: turnover };\r\n}\r\n\r\nexport function clearSelectedTurnoverNow(): IClearSelectedTurnoverNowActionType {\r\n    return { type: CLEAR_TURNOVER_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialTurnoverLast(turnover: ITurnover): IInitialTurnoverLastActionType {\r\n    return { type: INITIAL_TURNOVER_LAST, turnover: turnover };\r\n}\r\n\r\nexport function removeTurnoverLastAll(): IRemoveTurnoverLastAllActionType {\r\n    return { type: REMOVE_TURNOVER_LAST_ALL };\r\n}\r\n\r\nexport function addTurnoverLast(turnover: ITurnover): IAddTurnoverLastActionType {\r\n    return { type: ADD_TURNOVER_LAST, turnover: turnover };\r\n}\r\n\r\nexport function editTurnoverLast(turnover: ITurnover): IEditTurnoverLastActionType {\r\n    return { type: EDIT_TURNOVER_LAST, turnover: turnover };\r\n}\r\n\r\nexport function removeTurnoverLast(id: string): IRemoveTurnoverLastActionType {\r\n    return { type: REMOVE_TURNOVER_LAST, id: id };\r\n}\r\n\r\nexport function changeSelectedTurnoverLast(turnover: ITurnover): IChangeSelectedTurnoverLastActionType {\r\n    return { type: CHANGE_TURNOVER_LAST_PENDING_EDIT, turnover: turnover };\r\n}\r\n\r\nexport function clearSelectedTurnoverLast(): IClearSelectedTurnoverLastActionType {\r\n    return { type: CLEAR_TURNOVER_LAST_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: TurnoverModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_turnovers\r\ninterface IAddTurnoverNowActionType { type: string, turnover: ITurnover };\r\ninterface IEditTurnoverNowActionType { type: string, turnover: ITurnover };\r\ninterface IRemoveTurnoverNowActionType { type: string, id: string };\r\ninterface IChangeSelectedTurnoverNowActionType { type: string, turnover: ITurnover };\r\ninterface IClearSelectedTurnoverNowActionType { type: string };\r\ninterface IRemoveTurnoverNowAllActionType { type: string }\r\ninterface IInitialTurnoverNowActionType {type: string, turnover: ITurnover}\r\n\r\n// not_register_turnovers\r\ninterface IAddTurnoverLastActionType { type: string, turnover: ITurnover };\r\ninterface IEditTurnoverLastActionType { type: string, turnover: ITurnover };\r\ninterface IRemoveTurnoverLastActionType { type: string, id: string };\r\ninterface IChangeSelectedTurnoverLastActionType { type: string, turnover: ITurnover };\r\ninterface IClearSelectedTurnoverLastActionType { type: string };\r\ninterface IRemoveTurnoverLastAllActionType { type: string }\r\ninterface IInitialTurnoverLastActionType {type: string, turnover: ITurnover}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  TurnoverModificationStatus};","import { fetchDataSuccess, fetchDataError, addTurnoverNow, addTurnoverLast, removeTurnoverNowAll, removeTurnoverLastAll} from \"../../../store/actions/turnover.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface TurnOver {\r\n    turnover: number;\r\n}\r\nexport function getTurnOverReport(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    const currentYear = new Date().getFullYear();\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-join-semester/report/${currentYear}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTurnOverReport(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeTurnoverNowAll())\r\n                console.log(data.body.report_user_register_semester_now)\r\n                data.body.report_user_register_semester_now.map((ele: any, index: any) => {\r\n                    var turnover: TurnOver = {\r\n                        turnover: ele\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addTurnoverNow(turnover))\r\n                })\r\n\r\n                dispatch(removeTurnoverLastAll())\r\n                console.log(data.body.report_user_register_semester_last)\r\n                data.body.report_user_register_semester_last.map((ele: any, index: any) => {\r\n                    var turnover: TurnOver = {\r\n                        turnover: ele\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addTurnoverLast(turnover))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { IReportUser, ReportUserModificationStatus } from \"../models/report_user.interface\";\r\nexport const ADD_REPORT_USER: string = \"ADD_REPORT_USER\";\r\nexport const EDIT_REPORT_USER: string = \"EDIT_REPORT_USER\";\r\nexport const REMOVE_REPORT_USER: string = \"REMOVE_REPORT_USER\";\r\nexport const CHANGE_REPORT_USER_AMOUNT: string = \"CHANGE_REPORT_USER_AMOUNT\";\r\nexport const CHANGE_REPORT_USER_PENDING_EDIT: string = \"CHANGE_REPORT_USER_PENDING_EDIT\";\r\nexport const CLEAR_REPORT_USER_PENDING_EDIT: string = \"CLEAR_REPORT_USER_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_REPORT_USER_ALL: string = \"REMOVE_REPORT_USER_ALL\";\r\nexport const INITIAL_REPORT_USER: string = \"INITIAL_REPORT_USER\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(report_user: IReportUser) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        report_user\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialReportUser(report_user: IReportUser): IInitialReportUserActionType {\r\n    return { type: INITIAL_REPORT_USER, report_user: report_user };\r\n}\r\n\r\nexport function removeReportUserAll(): IRemoveReportUserAllActionType {\r\n    return { type: REMOVE_REPORT_USER_ALL };\r\n}\r\n\r\nexport function addReportUser(report_user: IReportUser): IAddReportUserActionType {\r\n    return { type: ADD_REPORT_USER, report_user: report_user };\r\n}\r\n\r\nexport function editReportUser(report_user: IReportUser): IEditReportUserActionType {\r\n    return { type: EDIT_REPORT_USER, report_user: report_user };\r\n}\r\n\r\nexport function removeReportUser(id: string): IRemoveReportUserActionType {\r\n    return { type: REMOVE_REPORT_USER, id: id };\r\n}\r\n\r\nexport function changeSelectedReportUser(report_user: IReportUser): IChangeSelectedReportUserActionType {\r\n    return { type: CHANGE_REPORT_USER_PENDING_EDIT, report_user: report_user };\r\n}\r\n\r\nexport function clearSelectedReportUser(): IClearSelectedReportUserActionType {\r\n    return { type: CLEAR_REPORT_USER_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ReportUserModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddReportUserActionType { type: string, report_user: IReportUser };\r\ninterface IEditReportUserActionType { type: string, report_user: IReportUser };\r\ninterface IRemoveReportUserActionType { type: string, id: string };\r\ninterface IChangeSelectedReportUserActionType { type: string, report_user: IReportUser };\r\ninterface IClearSelectedReportUserActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ReportUserModificationStatus};\r\ninterface IRemoveReportUserAllActionType { type: string }\r\ninterface IInitialReportUserActionType {type: string, report_user: IReportUser}","import { fetchDataError, removeReportUserAll, addReportUser } from \"../../../store/actions/report_user.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ReportUser {\r\n    total: number\r\n}\r\nexport function getReportUser(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    const currentYear = new Date().getFullYear();\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/report/${currentYear}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getReportUser(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(removeReportUserAll())\r\n                console.log(data.body.report_user)\r\n                data.body.report_user.map((ele: any, index: any) => {\r\n                    var report: ReportUser = {\r\n                        total: ele\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addReportUser(report))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { ICourseReport, CourseReportModificationStatus } from \"../models/course_report.interface\";\r\nexport const ADD_COURSE_REPORT: string = \"ADD_COURSE_REPORT\";\r\nexport const EDIT_COURSE_REPORT: string = \"EDIT_COURSE_REPORT\";\r\nexport const REMOVE_COURSE_REPORT: string = \"REMOVE_COURSE_REPORT\";\r\nexport const CHANGE_COURSE_REPORT_AMOUNT: string = \"CHANGE_COURSE_REPORT_AMOUNT\";\r\nexport const CHANGE_COURSE_REPORT_PENDING_EDIT: string = \"CHANGE_COURSE_REPORT_PENDING_EDIT\";\r\nexport const CLEAR_COURSE_REPORT_PENDING_EDIT: string = \"CLEAR_COURSE_REPORT_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_COURSE_REPORT_ALL: string = \"REMOVE_COURSE_REPORT_ALL\";\r\nexport const INITIAL_COURSE_REPORT: string = \"INITIAL_COURSE_REPORT\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course_report: ICourseReport) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course_report\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCourseReport(course_report: ICourseReport): IInitialCourseReportActionType {\r\n    return { type: INITIAL_COURSE_REPORT, course_report: course_report };\r\n}\r\n\r\nexport function removeCourseReportAll(): IRemoveCourseReportAllActionType {\r\n    return { type: REMOVE_COURSE_REPORT_ALL };\r\n}\r\n\r\nexport function addCourseReport(course_report: ICourseReport): IAddCourseReportActionType {\r\n    return { type: ADD_COURSE_REPORT, course_report: course_report };\r\n}\r\n\r\nexport function editCourseReport(course_report: ICourseReport): IEditCourseReportActionType {\r\n    return { type: EDIT_COURSE_REPORT, course_report: course_report };\r\n}\r\n\r\nexport function removeCourseReport(id: string): IRemoveCourseReportActionType {\r\n    return { type: REMOVE_COURSE_REPORT, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseReport(course_report: ICourseReport): IChangeSelectedCourseReportActionType {\r\n    return { type: CHANGE_COURSE_REPORT_PENDING_EDIT, course_report: course_report };\r\n}\r\n\r\nexport function clearSelectedCourseReport(): IClearSelectedCourseReportActionType {\r\n    return { type: CLEAR_COURSE_REPORT_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseReportModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddCourseReportActionType { type: string, course_report: ICourseReport };\r\ninterface IEditCourseReportActionType { type: string, course_report: ICourseReport };\r\ninterface IRemoveCourseReportActionType { type: string, id: string };\r\ninterface IChangeSelectedCourseReportActionType { type: string, course_report: ICourseReport };\r\ninterface IClearSelectedCourseReportActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  CourseReportModificationStatus};\r\ninterface IRemoveCourseReportAllActionType { type: string }\r\ninterface IInitialCourseReportActionType {type: string, course_report: ICourseReport}","import { fetchDataError, removeCourseReportAll, addCourseReport } from \"../../../store/actions/course_report.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface CourseReport {\r\n    total_register: number;\r\n    name: string;\r\n}\r\nexport function getCourseReport(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    const currentYear = new Date().getFullYear();\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/course/report/${currentYear}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getCourseReport(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(removeCourseReportAll())\r\n                console.log(data.body.report_course)\r\n                data.body.report_course.map((ele: any, index: any) => {\r\n                    var report: CourseReport = {\r\n                        total_register: ele.total_register,\r\n                        name: ele.name\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addCourseReport(report))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport { IStateType, ITurnoverState, IReportUserState, ICourseReportState } from \"../../store/models/root.interface\";\r\nimport { ChartBar } from \"../../common/components/ChartBar\";\r\nimport TurnoverList from \"./TurnoverList\";\r\nimport { getUserRegisterJoinSemester } from \"../../common/service/UserRegisterJoinSemester/GetUserRegisterJoinSemester\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport CourseAnalytis from \"./CourseAnalytis\";\r\nimport UserAnalytis from \"./UserAnalytis\";\r\nimport { getTurnOverReport } from \"../../common/service/TurnOver/GetTurnoverReport\";\r\nimport { getReportUser } from \"../../common/service/ReportUser/GetUserReport\";\r\nimport { getCourseReport } from \"../../common/service/CourseReport/GetCourseReport\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst Turnover: React.FC = () => {\r\n  const turnovers: ITurnoverState = useSelector((state: IStateType) => state.turnovers);\r\n  const report_users: IReportUserState = useSelector((state: IStateType) => state.report_users); \r\n  const course_reports: ICourseReportState = useSelector((state: IStateType) => state.course_reports); \r\n\r\n  const totalPrice: number = turnovers.turnover_now.reduce((prev, next) => prev + ((next.turnover) || 0), 0);\r\n  const totalUserNew: number = report_users.report_users.reduce((prev, next) => prev + ((next.total) || 0), 0);\r\n  const totalCourse: number = course_reports.course_reports.reduce((prev, next) => prev + ((next.total_register) || 0), 0);\r\n  \r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  dispatch(updateCurrentPath(\"Doanh thu\", \"\"));\r\n\r\n  const [checked1, setChecked1] = useState(true);\r\n  const [checked2, setChecked2] = useState(false);\r\n  const [checked3, setChecked3] = useState(false);\r\n\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n  let access_token = localStorage.getItem(\"access_token\");\r\n  let refresh_token = localStorage.getItem(\"refresh_token\");\r\n  useEffect(() => {\r\n    if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n      let access_token_decode: any = jwt_decode(access_token)\r\n      let refresh_token_decode: any = jwt_decode(refresh_token)\r\n      let exp_access_token_decode = access_token_decode.exp;\r\n      let exp_refresh_token_decode = refresh_token_decode.exp;\r\n      let now_time = Date.now() / 1000;\r\n      console.log(exp_access_token_decode)\r\n      console.log(now_time)\r\n      if (exp_access_token_decode < now_time) {\r\n        if (exp_refresh_token_decode < now_time) {\r\n          localStorage.removeItem('access_token') // Authorization\r\n          localStorage.removeItem('refresh_token')\r\n          localStorage.removeItem('username')\r\n          localStorage.removeItem('role_privilege')\r\n          localStorage.removeItem('id')\r\n          localStorage.removeItem('contest_id')\r\n          localStorage.removeItem('schedule_id')\r\n          dispatch(logout())\r\n        }\r\n        else {\r\n          trackPromise(getUserRegisterJoinSemester(dispatch))\r\n          trackPromise(getTurnOverReport(dispatch))\r\n          trackPromise(getReportUser(dispatch))\r\n          trackPromise(getCourseReport(dispatch))\r\n        }\r\n      }\r\n      else {\r\n          trackPromise(getUserRegisterJoinSemester(dispatch))\r\n          trackPromise(getTurnOverReport(dispatch))\r\n          trackPromise(getReportUser(dispatch))\r\n          trackPromise(getCourseReport(dispatch))\r\n      }\r\n    }\r\n  }, [dispatch, access_token, refresh_token])\r\n\r\n  const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'Septempber', 'October', 'November', 'December'];\r\n\r\n  let now_data: number[] = [];\r\n  let last_data: number[] = [];\r\n  if (turnovers.turnover_now.length > 0 && turnovers.turnover_last.length > 0){\r\n    turnovers.turnover_now.map(ele => {\r\n      return now_data.push(ele.turnover)\r\n    })\r\n\r\n    turnovers.turnover_last.map(ele => {\r\n      return last_data.push(ele.turnover)\r\n    })\r\n  }\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  console.log(turnovers)\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: `Năm ${currentYear-1}`,\r\n        data: last_data,\r\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n      },\r\n      {\r\n        label: `Năm ${currentYear}`,\r\n        data: now_data,\r\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n      },\r\n    ],\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n      <h1 className=\"h3 mb-2 text-gray-800\">Phân tích</h1>\r\n      {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n      <div className=\"row\">\r\n        <TopCard title=\"DOANH THU\" text={`$${totalPrice}`} icon=\"dollar-sign\" class=\"success\" />\r\n        <TopCard title=\"KHÓA HỌC\" text={`${totalCourse}`} icon=\"warehouse\" class=\"success\" />\r\n        <TopCard title=\"NGƯỜI DÙNG MỚI\" text={`${totalUserNew}`} icon=\"user\" class=\"success\" />\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n          <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n            if (checked1 === false) {\r\n              setChecked1(true)\r\n              setChecked2(false)\r\n              setChecked3(false)\r\n            }\r\n          }} style={{\r\n            color: checked1 ? \"#F24E1E\" : \"#2F4F4F\"\r\n          }}>Doanh thu</h6>\r\n\r\n          <div style={{\r\n            height: \"5px\",\r\n            textAlign: \"center\",\r\n            margin: \"auto\",\r\n            width: \"30%\",\r\n            backgroundColor: checked1 ? \"#F24E1E\" : \"#ffffff\"\r\n          }}></div>\r\n        </div>\r\n        <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n          <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n            if (checked2 === false) {\r\n              setChecked2(true)\r\n              setChecked1(false)\r\n              setChecked3(false)\r\n            }\r\n          }}\r\n            style={{\r\n              color: checked2 ? \"#F24E1E\" : \"#2F4F4F\"\r\n            }}>Khóa học</h6>\r\n          <div style={{\r\n            height: \"5px\",\r\n            textAlign: \"center\",\r\n            margin: \"auto\",\r\n            width: \"30%\",\r\n            backgroundColor: checked2 ? \"#F24E1E\" : \"#ffffff\"\r\n          }}></div>\r\n        </div>\r\n\r\n        <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n          <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n            if (checked3 === false) {\r\n              setChecked3(true)\r\n              setChecked1(false)\r\n              setChecked2(false)\r\n            }\r\n          }}\r\n            style={{\r\n              color: checked3 ? \"#F24E1E\" : \"#2F4F4F\"\r\n            }}>Người dùng</h6>\r\n          <div style={{\r\n            height: \"5px\",\r\n            textAlign: \"center\",\r\n            margin: \"auto\",\r\n            width: \"30%\",\r\n            backgroundColor: checked3 ? \"#F24E1E\" : \"#ffffff\"\r\n          }}></div>\r\n        </div>\r\n      </div>\r\n\r\n      {\r\n        function () {\r\n          if (checked1 === true) {\r\n            return (\r\n              <Fragment>\r\n                <div className=\"row\">\r\n                  <div className=\"col-xl-12 col-lg-12\">\r\n                    <ChartBar data={data} />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n\r\n                  <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                      <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\">Danh sách giao dịch</h6>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <TurnoverList />\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n              </Fragment>\r\n            )\r\n          }\r\n          else if (checked2 === true) {\r\n            return (\r\n              <Fragment>\r\n                <div className=\"row\">\r\n\r\n                  <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                      <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\">Phân tích khóa học</h6>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <CourseAnalytis />\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n              </Fragment>\r\n            )\r\n          }\r\n          else {\r\n            return (\r\n              <Fragment>\r\n                <div className=\"row\">\r\n\r\n                  <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                      <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\">Phân tích giáo viên</h6>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <UserAnalytis />\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n              </Fragment>\r\n            )\r\n          }\r\n        }()\r\n      }\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Turnover;\r\n","import { ITeacherLeave } from \"../models/teacher_leave.interface\";\r\n\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport const REMOVE_REMOVE_LEAVE_ALL: string = \"REMOVE_REMOVE_LEAVE_ALL\";\r\nexport const INITIAL_REMOVE_LEAVE: string = \"INITIAL_REMOVE_LEAVE\";\r\nexport const ADD_REMOVE_LEAVE: string = \"ADD_REMOVE_LEAVE\";\r\nexport const REMOVE_REMOVE_LEAVE: string = \"REMOVE_REMOVE_LEAVE\";\r\nexport const EDIT_REMOVE_LEAVE: string = \"EDIT_REMOVE_LEAVE\";\r\n\r\n\r\nexport const REMOVE_LEAVES_ALL: string = \"REMOVE_LEAVES_ALL\";\r\nexport const INITIAL_LEAVES: string = \"INITIAL_LEAVES\";\r\nexport const ADD_LEAVES: string = \"ADD_LEAVES\";\r\nexport const EDIT_LEAVES: string = \"EDIT_LEAVES\";\r\nexport const REMOVE_LEAVES: string = \"REMOVE_LEAVES\";\r\n\r\nexport const REMOVE_ACCEPT_LEAVE_ALL: string = \"REMOVE_ACCEPT_LEAVE_ALL\";\r\nexport const INITIAL_ACCEPT_LEAVE: string = \"INITIAL_ACCEPT_LEAVE\";\r\nexport const ADD_ACCEPT_LEAVE: string = \"ADD_ACCEPT_LEAVE\";\r\nexport const EDIT_ACCEPT_LEAVE: string = \"EDIT_ACCEPT_LEAVE\";\r\nexport const REMOVE_ACCEPT_LEAVE: string = \"REMOVE_ACCEPT_LEAVE\";\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const CHANGE_USER_PENDING_EDIT: string = \"CHANGE_USER_PENDING_EDIT\";\r\nexport const CLEAR_USER_PENDING_EDIT: string = \"CLEAR_USER_PENDING_EDIT\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(teacherLeave: ITeacherLeave) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        teacherLeave\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialRemoveTeacherLeave(teacher_leave: ITeacherLeave): IInitialRemoveTeacherLeaveActionType {\r\n    return { type: INITIAL_REMOVE_LEAVE, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function removeRemoveTeacherLeaveAll(): IRemoveRemoveTeacherLeaveAllActionType {\r\n    return { type: REMOVE_REMOVE_LEAVE_ALL };\r\n}\r\n\r\nexport function addRemoveTeacherLeave(teacher_leave: ITeacherLeave): IAddRemoveTeacherLeaveActionType {\r\n    return { type: ADD_REMOVE_LEAVE, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function editRemoveTeacherLeave(teacher_leave: ITeacherLeave): IEditRemoveTeacherLeaveActionType {\r\n    return { type: EDIT_REMOVE_LEAVE, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function removeRemoveTeacherLeave(id: string): IRemoveRemoveTeacherLeaveActionType {\r\n    return { type: REMOVE_REMOVE_LEAVE, id: id };\r\n}\r\n\r\n\r\nexport function initialAcceptTeacherLeave(teacher_leave: ITeacherLeave): IInitialAcceptTeacherLeaveActionType {\r\n    return { type: INITIAL_ACCEPT_LEAVE, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function removeAcceptTeacherLeaveAll(): IRemoveAcceptTeacherLeaveAllActionType {\r\n    return { type: REMOVE_ACCEPT_LEAVE_ALL };\r\n}\r\n\r\nexport function addAcceptTeacherLeave(teacher_leave: ITeacherLeave): IAddAcceptTeacherLeaveActionType {\r\n    return { type: ADD_ACCEPT_LEAVE, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function editAcceptTeacherLeave(teacher_leave: ITeacherLeave): IEditAcceptTeacherLeaveActionType {\r\n    return { type: EDIT_ACCEPT_LEAVE, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function removeAcceptTeacherLeave(id: string): IRemoveAcceptTeacherLeaveActionType {\r\n    return { type: REMOVE_ACCEPT_LEAVE, id: id };\r\n}\r\n\r\n\r\nexport function initialLeaves(teacher_leave: ITeacherLeave): IInitialLeavesActionType {\r\n    return { type: INITIAL_LEAVES, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function removeLeavesAll(): IRemoveLeavesAllActionType {\r\n    return { type: REMOVE_LEAVES_ALL };\r\n}\r\n\r\nexport function addLeaves(teacher_leave: ITeacherLeave): IAddLeavesActionType {\r\n    return { type: ADD_LEAVES, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function editLeaves(teacher_leave: ITeacherLeave): IEditLeavesActionType {\r\n    return { type: EDIT_LEAVES, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function removeLeaves(id: string): IRemoveLeavesActionType {\r\n    return { type: REMOVE_LEAVES, id: id };\r\n}\r\n\r\ninterface IInitialLeavesActionType {type: string, teacher_leave: ITeacherLeave};\r\ninterface IRemoveLeavesAllActionType { type: string };\r\ninterface IAddLeavesActionType { type: string, teacher_leave: ITeacherLeave };\r\ninterface IEditLeavesActionType { type: string, teacher_leave: ITeacherLeave };\r\ninterface IRemoveLeavesActionType { type: string, id: string };\r\n\r\ninterface IInitialAcceptTeacherLeaveActionType {type: string, teacher_leave: ITeacherLeave};\r\ninterface IRemoveAcceptTeacherLeaveAllActionType { type: string };\r\ninterface IAddAcceptTeacherLeaveActionType { type: string, teacher_leave: ITeacherLeave };\r\ninterface IEditAcceptTeacherLeaveActionType { type: string, teacher_leave: ITeacherLeave };\r\ninterface IRemoveAcceptTeacherLeaveActionType { type: string, id: string };\r\n\r\ninterface IInitialRemoveTeacherLeaveActionType {type: string, teacher_leave: ITeacherLeave};\r\ninterface IRemoveRemoveTeacherLeaveAllActionType { type: string };\r\ninterface IAddRemoveTeacherLeaveActionType { type: string, teacher_leave: ITeacherLeave };\r\ninterface IEditRemoveTeacherLeaveActionType { type: string, teacher_leave: ITeacherLeave };\r\ninterface IRemoveRemoveTeacherLeaveActionType { type: string, id: string };","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/art_age.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postUserReadNotification } from \"../UserReadNotification/PostUserReadNotification\";\r\n\r\nexport function postNotifyDb(data: any, user_id: string) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/notification-database`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Authorization': bearer,\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                'Access-Control-Allow-Credentials': 'true'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }\r\n        )\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postNotifyDb(data, user_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then(xx => {\r\n                console.log(xx)\r\n                dispatch(postUserReadNotification({\r\n                    notification_id: xx.id,\r\n                    user_id: user_id,\r\n                    is_read: false\r\n                }))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester.actions\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getUserReadNotification } from \"./GetUserReadNotificationByUser\";\r\n\r\nexport function postUserReadNotification(data: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-read-notification`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postUserReadNotification(data))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (xx => {\r\n                console.log(xx)\r\n                dispatch(getUserReadNotification(data.user_id))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/teacher_leave.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postNotifyDb } from \"../NotifyDb/PostNotifyDb\";\r\n\r\nexport function putTeacherLeaveStatus(id: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/teacher-leave/admin/${id}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putTeacherLeaveStatus(id, data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                if (data.status === \"Approved\"){\r\n                    dispatch(postNotifyDb({\r\n                        name: `Xác nhận yêu cầu nghỉ dạy buổi học ${val.section_number} lớp ${val.class_name}!`,\r\n                        description: `Quản trị viên đã chấp nhận yêu cầu nghỉ dạy của bạn buổi ${val.section_number} lớp ${val.class_name}!`\r\n                    }, data.teacher_id))\r\n                }\r\n                else {\r\n                    dispatch(postNotifyDb({\r\n                        name: `Không xác nhận yêu cầu nghỉ dạy buổi học ${val.section_number} lớp ${val.class_name}!`,\r\n                        description: `Quản trị viên đã không chấp nhận yêu cầu nghỉ dạy của bạn buổi ${val.section_number} lớp ${val.class_name}!`\r\n                    }, data.teacher_id))\r\n                }\r\n                \r\n                toast.update(idx, { render: \"Yêu cầu thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            });\r\n    };\r\n}","import React, { Dispatch } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { putTeacherLeaveStatus } from \"../../common/service/TeacherLeave/PutTeacherLeave\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IStateType, ITeacherLeaveState } from \"../../store/models/root.interface\";\r\nimport { ITeacherLeave } from \"../../store/models/teacher_leave.interface\";\r\n\r\nexport type teacher_leaveListProps = {\r\n  onSelect?: (teacher_leave: ITeacherLeave) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction TeacherRequestList(props: teacher_leaveListProps): JSX.Element  {\r\n  const teacher_leaves: ITeacherLeaveState = useSelector((state: IStateType) => state.teacher_leaves);\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  dispatch(updateCurrentPath(\"Yêu cầu nghỉ dạy\", \"\"));\r\n  const history = useHistory();\r\n  const routeChange1 = (teacher_leave: ITeacherLeave) => {\r\n    localStorage.removeItem('resson_off_teacher')\r\n    localStorage.setItem('resson_off_teacher', teacher_leave.description)\r\n    let path = '/teacher-request/detail';\r\n    history.push({\r\n        pathname: path,\r\n    });\r\n  }\r\n\r\n  const handleTeacherLeave = (teacher_leave: ITeacherLeave, status: string) => {\r\n    const id = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n      position: toast.POSITION.TOP_CENTER\r\n    });\r\n    dispatch(putTeacherLeaveStatus(teacher_leave.id, {\r\n      status: status\r\n    }, id))\r\n  }\r\n  const teacher_leaveElements: (JSX.Element | null)[] = teacher_leaves.leaves.map((teacher_leave, index) => {\r\n    if (!teacher_leave) { return null; }\r\n    return (<tr className={`table-row ${(teacher_leaves.selectedTeacherLeave && teacher_leaves.selectedTeacherLeave.id === teacher_leave.id) ? \"selected\" : \"\"}`}\r\n      key={`teacher_leave_${teacher_leave.id}`}>\r\n      <th scope=\"row\" onClick={() => {routeChange1(teacher_leave)}}>{index}</th>\r\n      <td onClick={() => {routeChange1(teacher_leave)}}>{teacher_leave.teacher_name}</td>\r\n      <td onClick={() => {routeChange1(teacher_leave)}}>{teacher_leave.class_name}</td>\r\n      <td onClick={() => {routeChange1(teacher_leave)}}>{teacher_leave.section_name}</td>\r\n      <td onClick={() => {routeChange1(teacher_leave)}}>{teacher_leave.create_time}</td>\r\n      <td onClick={() => {routeChange1(teacher_leave)}}>{teacher_leave.substitute_teacher_name}</td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => {handleTeacherLeave(teacher_leave, \"Approved\")}}>Chấp nhận</button>\r\n      </td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() => {handleTeacherLeave(teacher_leave, \"Not approved\")}}>Xóa</button>\r\n      </td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"table-responsive portlet\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Giáo viên</th>\r\n            <th scope=\"col\">Lớp</th>\r\n            <th scope=\"col\">Buổi</th>\r\n            <th scope=\"col\">Thời gian</th>\r\n            <th scope=\"col\">Giáo viên dạy thay</th>\r\n            <th scope=\"col\">Hành động</th>\r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {teacher_leaveElements}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default TeacherRequestList;\r\n","import { fetchDataSuccess, fetchDataError, removeAcceptTeacherLeaveAll, addAcceptTeacherLeave, removeRemoveTeacherLeaveAll, addRemoveTeacherLeave, addLeaves, removeLeavesAll } from \"../../../store/actions/teacher_leave.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface TeacherLeave {\r\n    id: string;\r\n    section_id: string;\r\n    section_name: string;\r\n    class_id: string;\r\n    class_name: string;\r\n    teacher_id: string;\r\n    teacher_name: string;\r\n    section_number: number;\r\n    reviewer_id: string;\r\n    substitute_teacher_id: string;\r\n    substitute_teacher_name: string;\r\n    description: string;\r\n    status: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getTeacherLeave(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/teacher-leave`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTeacherLeave(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeAcceptTeacherLeaveAll())\r\n                dispatch(removeRemoveTeacherLeaveAll())\r\n                dispatch(removeLeavesAll())\r\n                //console.log(data.body.teacher_leaves)\r\n                data.body.teacher_leave.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var teacher_leave: TeacherLeave = {\r\n                        id: ele.id,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        class_id: ele.class_id,\r\n                        class_name: ele.class_name,\r\n                        section_number: ele.section_number,\r\n                        teacher_id: ele.teacher_id,\r\n                        reviewer_id: ele.reviewer_id,\r\n                        substitute_teacher_id: ele.substitute_teacher_id,\r\n                        substitute_teacher_name: ele.substitute_teacher_name,\r\n                        status: ele.status,\r\n                        teacher_name: ele.teacher_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1.substring(0, 5),\r\n                        update_time: strDate_2.substring(0, 5)\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (teacher_leave.status === \"Approved\"){\r\n                        return dispatch(addAcceptTeacherLeave(teacher_leave));\r\n                    }\r\n                    else if (teacher_leave.status === \"Not Approved\") {\r\n                        return dispatch(addRemoveTeacherLeave(teacher_leave));\r\n                    }\r\n                    else {\r\n                        return dispatch(addLeaves(teacher_leave));\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport { ITeacherLeaveState, IStateType } from \"../../store/models/root.interface\";\r\nimport TeacherRequestList from \"./TeacherRequestList\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { getTeacherLeave } from \"../../common/service/TeacherLeave/GetTeacherLeave\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst TeacherRequest: React.FC = () => {\r\n  const teachers: ITeacherLeaveState = useSelector((state: IStateType) => state.teacher_leaves);\r\n  const numberItemsCount: number = teachers.leaves.length;\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  dispatch(updateCurrentPath(\"Yêu cầu nghỉ dạy\", \"\"));\r\n\r\n  let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                  trackPromise(getTeacherLeave(dispatch))\r\n                }\r\n            }\r\n            else {\r\n              trackPromise(getTeacherLeave(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token]);\r\n\r\n  return (\r\n    promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n      <ToastContainer />\r\n      <h1 className=\"h3 mb-2 text-gray-800\">Yêu cầu nghỉ dạy</h1>\r\n      {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n      <div className=\"row\">\r\n        <TopCard title=\"SỐ YÊU CẦU\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-green\">Danh sách yêu cầu</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <TeacherRequestList />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TeacherRequest;","import { fetchDataSuccess, fetchDataError, \r\n    removeTeacherRegisterQuatificationApprovedAll, initialTeacherRegisterQuatificationApproved, addTeacherRegisterQuatificationApproved,\r\n    removeTeacherRegisterQuatificationNotApprovedAll, initialTeacherRegisterQuatificationNotApproved, addTeacherRegisterQuatificationNotApproved,\r\n    removeTeacherRegisterQuatificationNotApprovedNowAll, initialTeacherRegisterQuatificationNotApprovedNow, addTeacherRegisterQuatificationNotApprovedNow\r\n} from \"../../../store/actions/teacher_register_quantification.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface TeacherRegisterQuantification {\r\n    id: string;\r\n    teacher_id: string;\r\n    teacher_name: string;\r\n    reviewer_id: string;\r\n    course_id: string;\r\n    course_name: string;\r\n    art_age_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    degree_photo_url: string;\r\n    status: string;\r\n}\r\nexport function getTeacherRegisterQuantificationByTeacherId(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/teacher-register-level/teacher/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                console.log(response)\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTeacherRegisterQuantificationByTeacherId(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeTeacherRegisterQuatificationApprovedAll())\r\n                console.log(data.body.approved)\r\n                console.log(data.body.not_approved)\r\n                console.log(data.body.not_approved_now)\r\n                data.body.approved.map((ele: any, index: any) => {\r\n                    var TeacherRegisterQuantification: TeacherRegisterQuantification = {\r\n                        id: ele.id,\r\n                        teacher_id: ele.teacher_id,\r\n                        reviewer_id: ele.reviewer_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        course_id: ele.course_id,\r\n                        course_name:ele.course_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        degree_photo_url: ele.degree_photo_url,\r\n                        status: ele.status\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialTeacherRegisterQuatificationApproved(TeacherRegisterQuantification));\r\n                    }\r\n                    else{\r\n                        return dispatch(addTeacherRegisterQuatificationApproved(TeacherRegisterQuantification))\r\n                    }\r\n                })\r\n\r\n                dispatch(removeTeacherRegisterQuatificationNotApprovedAll())\r\n                \r\n                data.body.not_approved.map((ele: any, index: any) => {\r\n                    var TeacherRegisterQuantification: TeacherRegisterQuantification = {\r\n                        id: ele.id,\r\n                        teacher_id: ele.teacher_id,\r\n                        reviewer_id: ele.reviewer_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        course_id: ele.course_id,\r\n                        course_name:ele.course_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        degree_photo_url: ele.degree_photo_url,\r\n                        status: ele.status\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialTeacherRegisterQuatificationNotApproved(TeacherRegisterQuantification));\r\n                    }\r\n                    else{\r\n                        return dispatch(addTeacherRegisterQuatificationNotApproved(TeacherRegisterQuantification))\r\n                    }\r\n                })\r\n\r\n                dispatch(removeTeacherRegisterQuatificationNotApprovedNowAll())\r\n                data.body.not_approved_now.map((ele: any, index: any) => {\r\n                    var TeacherRegisterQuantification: TeacherRegisterQuantification = {\r\n                        id: ele.id,\r\n                        teacher_id: ele.teacher_id,\r\n                        reviewer_id: ele.reviewer_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        course_id: ele.course_id,\r\n                        course_name:ele.course_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        degree_photo_url: ele.degree_photo_url,\r\n                        status: ele.status\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialTeacherRegisterQuatificationNotApprovedNow(TeacherRegisterQuantification));\r\n                    }\r\n                    else{\r\n                        return dispatch(addTeacherRegisterQuatificationNotApprovedNow(TeacherRegisterQuantification))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess } from \"../../../store/actions/teacher_register_quantification.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getTeacherRegisterQuantificationByTeacherId } from \"./GetTeacherRegisterQuantificationByTeacherId\";\r\n\r\nexport function putTeacherRegisterLevelAdmin(id: any, teacher_id: any, teacher_level: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/teacher-register-level/admin/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(teacher_level)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putTeacherRegisterLevelAdmin(teacher_level,teacher_id, id, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                toast.update(idx, { render: \"Bạn đã xác nhận trình độ cho giáo viên thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataSuccess(teacher_level))\r\n                getTeacherRegisterQuantificationByTeacherId(dispatch, teacher_id)\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Bạn đã xác nhận trình độ cho giáo viên không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Dispatch } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, ITeacherRegisterQuantificationState, ICourseState, IUserState } from \"../../store/models/root.interface\";\r\nimport { IProduct } from \"../../store/models/product.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ITeacherRegisterQuantification } from \"../../store/models/teacher_register_quantification.interface\";\r\nimport { putTeacherRegisterLevelAdmin } from \"../../common/service/TeacherRegisterQuantification/PutTeacherRegisterLevelAdmin\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { toast } from \"react-toastify\";\r\nexport type productListProps = {\r\n  onSelect?: (product: IProduct) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\n\r\nfunction RequestConfirmLevelList(props: productListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const teacher_register_quantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n  const courses: ICourseState = useSelector((state: IStateType) => state.courses);\r\n  const teachers: IUserState = useSelector((state: IStateType) => state.users);\r\n  const history = useHistory();\r\n  const routeChange = (degree_photo: string) => {\r\n    let path = '/teachers/request-level/degree-photo';\r\n    history.push({\r\n      pathname: path,\r\n      state: { degree_photo: degree_photo }\r\n    });\r\n  }\r\n\r\n  function approvedTeacherLevel(ele: ITeacherRegisterQuantification) {\r\n    const id = toast.info(\"Chấp nhận trình độ cho giáo viên\", {\r\n      position: toast.POSITION.TOP_CENTER,\r\n      autoClose: 2000\r\n    });\r\n    dispatch(putTeacherRegisterLevelAdmin(ele.id, ele.teacher_id, {\r\n      status: \"Approved\"\r\n    }, id))\r\n  }\r\n\r\n  function notApprovedTeacherLevel(ele: ITeacherRegisterQuantification) {\r\n    const id = toast.info(\"Không chấp nhận trình độ cho giáo viên\", {\r\n      position: toast.POSITION.TOP_CENTER,\r\n      autoClose: 2000\r\n    });\r\n    dispatch(putTeacherRegisterLevelAdmin(ele.id, ele.teacher_id, {\r\n      status: \"Not approved\"\r\n    }, id))\r\n    dispatch(addNotification(\"Trình độ \", `${ele.course_name} - Đã được chấp nhận bởi bạn`));\r\n  }\r\n\r\n  const productElements: (JSX.Element | null)[] = teacher_register_quantifications.not_approved_now.map((product, index) => {\r\n    \r\n    if (!product) { return null; }\r\n    let course_name = \"\";\r\n    courses.courses.map(ele => {\r\n      if (ele.id === product.course_id) {\r\n        course_name = ele.name\r\n      }\r\n      return ele\r\n    })\r\n\r\n    let teacher_name = \"\";\r\n    teachers.teachers.map(ele => {\r\n      if (ele.id === product.teacher_id) {\r\n        teacher_name = ele.username\r\n      }\r\n      return ele\r\n    })\r\n    return (<tr className={`table-row ${(teacher_register_quantifications.selectedTeacherRegisterQuantification && teacher_register_quantifications.selectedTeacherRegisterQuantification.id === product.id) ? \"selected\" : \"\"}`}\r\n      key={`product_${index}`}>\r\n      <th scope=\"row\" onClick={() => { routeChange(product.degree_photo_url) }}>{index + 1}</th>\r\n      <td onClick={() => { routeChange(product.degree_photo_url) }}>{teacher_name}</td>\r\n      <td onClick={() => { routeChange(product.degree_photo_url) }}>{course_name}</td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n          approvedTeacherLevel(product)\r\n        }}>Chấp nhận</button>\r\n      </td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() => {\r\n          notApprovedTeacherLevel(product)\r\n        }}>Xóa</button>\r\n      </td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"table-responsive portlet\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Giáo viên</th>\r\n            <th scope=\"col\">Trình độ</th>\r\n            <th scope=\"col\">Hành động</th>\r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {productElements}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default RequestConfirmLevelList;\r\n","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport { IStateType, ITeacherRegisterQuantificationState } from \"../../store/models/root.interface\";\r\nimport RequestConfirmLevelList from \"./RequestConfirmLevelList\";\r\nimport { getTeacherRegisterQuantificationByTeacherId } from \"../../common/service/TeacherRegisterQuantification/GetTeacherRegisterQuantificationByTeacherId\";\r\nimport { getTeacher } from \"../../common/service/Teacher/GetTeacher\";\r\nimport { getCourse } from \"../../common/service/Course/GetCourse\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst RequestConfirmLevel: React.FC = () => {\r\n  const teacher_register_quantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n  const numberItemsCount: number = teacher_register_quantifications.not_approved_now.length;\r\n\r\n  var id_x = localStorage.getItem('teacher_id');\r\n  let teacher_id: string = \"\";\r\n  if (id_x !== null){\r\n    teacher_id = id_x\r\n  }\r\n\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  dispatch(updateCurrentPath(\"Yêu cầu xác nhận trình độ\", \"\"));\r\n\r\n  let access_token = localStorage.getItem(\"access_token\");\r\n  let refresh_token = localStorage.getItem(\"refresh_token\");\r\n  useEffect(() => {\r\n    if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n      let access_token_decode: any = jwt_decode(access_token)\r\n      let refresh_token_decode: any = jwt_decode(refresh_token)\r\n      let exp_access_token_decode = access_token_decode.exp;\r\n      let exp_refresh_token_decode = refresh_token_decode.exp;\r\n      let now_time = Date.now() / 1000;\r\n      console.log(exp_access_token_decode)\r\n      console.log(now_time)\r\n      if (exp_access_token_decode < now_time) {\r\n        if (exp_refresh_token_decode < now_time) {\r\n          localStorage.removeItem('access_token') // Authorization\r\n          localStorage.removeItem('refresh_token')\r\n          localStorage.removeItem('username')\r\n          localStorage.removeItem('role_privilege')\r\n          localStorage.removeItem('id')\r\n          localStorage.removeItem('contest_id')\r\n          localStorage.removeItem('schedule_id')\r\n          dispatch(logout())\r\n        }\r\n        else {\r\n          trackPromise(getTeacherRegisterQuantificationByTeacherId(dispatch, teacher_id))\r\n          trackPromise(getTeacher(dispatch))\r\n          trackPromise(getCourse(dispatch))\r\n        }\r\n      }\r\n      else {\r\n        trackPromise(getTeacherRegisterQuantificationByTeacherId(dispatch, teacher_id))\r\n        trackPromise(getTeacher(dispatch))\r\n        trackPromise(getCourse(dispatch))\r\n      }\r\n    }\r\n  }, [dispatch, teacher_id, access_token, refresh_token])\r\n\r\n  return (\r\n    promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n      <h1 className=\"h3 mb-2 text-gray-800\">Yêu cầu xác nhận trình độ</h1>\r\n      {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n      <ToastContainer />\r\n      <div className=\"row\">\r\n        <TopCard title=\"SỐ YÊU CẦU\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-green\">Danh sách yêu cầu</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <RequestConfirmLevelList />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RequestConfirmLevel;\r\n","import React from \"react\";\r\nimport { Quill } from \"react-quill\";\r\n\r\n\r\n// Custom Undo button icon component for Quill editor. You can import it directly\r\n// from 'quill/assets/icons/undo.svg' but I found that a number of loaders do not\r\n// handle them correctly\r\nconst CustomUndo = () => (\r\n  <svg viewBox=\"0 0 18 18\">\r\n    <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\r\n    <path\r\n      className=\"ql-stroke\"\r\n      d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\r\n    />\r\n  </svg>\r\n);\r\n\r\n// Redo button icon component for Quill editor\r\nconst CustomRedo = () => (\r\n  <svg viewBox=\"0 0 18 18\">\r\n    <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\r\n    <path\r\n      className=\"ql-stroke\"\r\n      d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\r\n    />\r\n  </svg>\r\n);\r\n\r\n// Undo and redo functions for Custom Toolbar\r\nfunction undoChange() {\r\n  this.quill.history.undo();\r\n}\r\nfunction redoChange() {\r\n  this.quill.history.redo();\r\n}\r\n\r\n// Add sizes to whitelist and register them\r\nconst Size = Quill.import(\"formats/size\");\r\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\r\nQuill.register(Size, true);\r\n\r\n// Add fonts to whitelist and register them\r\nconst Font = Quill.import(\"formats/font\");\r\nFont.whitelist = [\r\n  \"arial\",\r\n  \"comic-sans\",\r\n  \"courier-new\",\r\n  \"georgia\",\r\n  \"helvetica\",\r\n  \"lucida\"\r\n];\r\nQuill.register(Font, true);\r\n\r\n// Modules object for setting up the Quill editor\r\nexport const modules = {\r\n  imageResize: {\r\n    parchment: Quill.import('parchment'),\r\n    modules: ['Resize', 'DisplaySize']\r\n  },\r\n  toolbar: {\r\n    container: \"#toolbar\",\r\n    handlers: {\r\n      undo: undoChange,\r\n      redo: redoChange\r\n    }\r\n  },\r\n  history: {\r\n    delay: 500,\r\n    maxStack: 100,\r\n    userOnly: true\r\n  }\r\n};\r\n\r\n// Formats objects for setting up the Quill editor\r\nexport const formats = [\r\n  \"header\",\r\n  \"font\",\r\n  \"size\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"align\",\r\n  \"strike\",\r\n  \"script\",\r\n  \"blockquote\",\r\n  \"background\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n  \"video\",\r\n  \"color\",\r\n  \"code-block\"\r\n];\r\n\r\n// Quill Toolbar component\r\nexport const QuillToolbar = () => (\r\n  <div id=\"toolbar\">\r\n    <span className=\"ql-formats\">\r\n      <select className=\"ql-font\" defaultValue=\"arial\">\r\n        <option value=\"arial\">Arial</option>\r\n        <option value=\"comic-sans\">Comic Sans</option>\r\n        <option value=\"courier-new\">Courier New</option>\r\n        <option value=\"georgia\">Georgia</option>\r\n        <option value=\"helvetica\">Helvetica</option>\r\n        <option value=\"lucida\">Lucida</option>\r\n      </select>\r\n      <select className=\"ql-size\" defaultValue=\"medium\">\r\n        <option value=\"extra-small\">Size 1</option>\r\n        <option value=\"small\">Size 2</option>\r\n        <option value=\"medium\">Size 3</option>\r\n        <option value=\"large\">Size 4</option>\r\n      </select>\r\n      <select className=\"ql-header\" defaultValue=\"3\">\r\n        <option value=\"1\">Heading</option>\r\n        <option value=\"2\">Subheading</option>\r\n        <option value=\"3\">Normal</option>\r\n      </select>\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-bold\" />\r\n      <button className=\"ql-italic\" />\r\n      <button className=\"ql-underline\" />\r\n      <button className=\"ql-strike\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-list\" value=\"ordered\" />\r\n      <button className=\"ql-list\" value=\"bullet\" />\r\n      <button className=\"ql-indent\" value=\"-1\" />\r\n      <button className=\"ql-indent\" value=\"+1\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-script\" value=\"super\" />\r\n      <button className=\"ql-script\" value=\"sub\" />\r\n      <button className=\"ql-blockquote\" />\r\n      <button className=\"ql-direction\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <select className=\"ql-align\" />\r\n      <select className=\"ql-color\" />\r\n      <select className=\"ql-background\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-link\" />\r\n      <button className=\"ql-image\" />\r\n      <button className=\"ql-video\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-formula\" />\r\n      <button className=\"ql-code-block\" />\r\n      <button className=\"ql-clean\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-undo\">\r\n        <CustomUndo />\r\n      </button>\r\n      <button className=\"ql-redo\">\r\n        <CustomRedo />\r\n      </button>\r\n    </span>\r\n  </div>\r\n);\r\n\r\nexport default QuillToolbar;\r\n","import React, {useRef} from \"react\";\r\nimport ReactQuill, { Quill } from 'react-quill';\r\nimport EditorToolbar, { modules, formats } from \"./EditorToolbar\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"./Style.css\";\r\nimport ImageResize from 'quill-image-resize-module-react';\r\n\r\nQuill.register('modules/imageResize', ImageResize);\r\n\r\nexport const Editor = (props) => {\r\n  console.log(`Input: ${props.setValue}`)\r\n  const reactQuillRef = useRef(null);\r\n  React.useEffect(() => {\r\n    if (reactQuillRef.current.getEditor() && props.isCreate !== \"\" && props.setValue === null){\r\n      reactQuillRef.current.getEditor().clipboard.dangerouslyPasteHTML(props.setValue)\r\n    }\r\n    if (props.isCreate === \"\"){\r\n      setState({value: null})\r\n    }\r\n  }, [reactQuillRef, props.setValue, props.isCreate]);\r\n  //console.log(reactQuillRef)\r\n  \r\n  //const quill = reactQuillRef.current.editor;\r\n  //console.log(quill)\r\n  //quill.clipboard.dangerouslyPasteHTML(props.setValue);\r\n  \r\n  const [state, setState] = React.useState({ value: null });\r\n  const handleChange = value => {\r\n    setState({ value });\r\n    props.getValue(value)\r\n    //console.log(value)\r\n  };\r\n\r\n  console.log(`State: ${state.value}`)\r\n  return (\r\n    <div className=\"text-editor\">\r\n      <EditorToolbar />\r\n      <ReactQuill\r\n        ref={reactQuillRef}\r\n        theme=\"snow\"\r\n        value={state.value}\r\n        onChange={handleChange}\r\n        placeholder={\"Write something awesome...\"}\r\n        modules={modules}\r\n        formats={formats}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import { ITutorialTemplatePage, TutorialTemplatePageModificationStatus } from \"../models/tutorial_template_page.interface\";\r\nexport const ADD_TUTORIAL_TEMPLATE_PAGE: string = \"ADD_TUTORIAL_TEMPLATE_PAGE\";\r\nexport const EDIT_TUTORIAL_TEMPLATE_PAGE: string = \"EDIT_TUTORIAL_TEMPLATE_PAGE\";\r\nexport const REMOVE_TUTORIAL_TEMPLATE_PAGE: string = \"REMOVE_TUTORIAL_TEMPLATE_PAGE\";\r\nexport const CHANGE_TUTORIAL_TEMPLATE_PAGE_AMOUNT: string = \"CHANGE_TUTORIAL_TEMPLATE_PAGE_AMOUNT\";\r\nexport const CHANGE_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT: string = \"CHANGE_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT\";\r\nexport const CLEAR_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT: string = \"CLEAR_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_TUTORIAL_TEMPLATE_PAGE_ALL: string = \"REMOVE_TUTORIAL_TEMPLATE_PAGE_ALL\";\r\nexport const INITIAL_TUTORIAL_TEMPLATE_PAGE: string = \"INITIAL_TUTORIAL_TEMPLATE_PAGE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(tutorial_template_page: ITutorialTemplatePage) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        tutorial_template_page\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialTutorialTemplatePage(tutorial_template_page: ITutorialTemplatePage): IInitialTutorialTemplatePageActionType {\r\n    return { type: INITIAL_TUTORIAL_TEMPLATE_PAGE, tutorial_template_page: tutorial_template_page };\r\n}\r\n\r\nexport function removeTutorialTemplatePageAll(): IRemoveTutorialTemplatePageAllActionType {\r\n    return { type: REMOVE_TUTORIAL_TEMPLATE_PAGE_ALL };\r\n}\r\n\r\nexport function addTutorialTemplatePage(tutorial_template_page: ITutorialTemplatePage): IAddTutorialTemplatePageActionType {\r\n    return { type: ADD_TUTORIAL_TEMPLATE_PAGE, tutorial_template_page: tutorial_template_page };\r\n}\r\n\r\nexport function editTutorialTemplatePage(tutorial_template_page: ITutorialTemplatePage): IEditTutorialTemplatePageActionType {\r\n    return { type: EDIT_TUTORIAL_TEMPLATE_PAGE, tutorial_template_page: tutorial_template_page };\r\n}\r\n\r\nexport function removeTutorialTemplatePage(id: string): IRemoveTutorialTemplatePageActionType {\r\n    return { type: REMOVE_TUTORIAL_TEMPLATE_PAGE, id: id };\r\n}\r\n\r\nexport function changeSelectedTutorialTemplatePage(tutorial_template_page: ITutorialTemplatePage): IChangeSelectedTutorialTemplatePageActionType {\r\n    return { type: CHANGE_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT, tutorial_template_page: tutorial_template_page };\r\n}\r\n\r\nexport function clearSelectedTutorialTemplatePage(): IClearSelectedTutorialTemplatePageActionType {\r\n    return { type: CLEAR_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateTutorialTemplatePage(value: TutorialTemplatePageModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddTutorialTemplatePageActionType { type: string, tutorial_template_page: ITutorialTemplatePage };\r\ninterface IEditTutorialTemplatePageActionType { type: string, tutorial_template_page: ITutorialTemplatePage };\r\ninterface IRemoveTutorialTemplatePageActionType { type: string, id: string };\r\ninterface IChangeSelectedTutorialTemplatePageActionType { type: string, tutorial_template_page: ITutorialTemplatePage };\r\ninterface IClearSelectedTutorialTemplatePageActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  TutorialTemplatePageModificationStatus};\r\ninterface IRemoveTutorialTemplatePageAllActionType { type: string }\r\ninterface IInitialTutorialTemplatePageActionType {type: string, tutorial_template_page: ITutorialTemplatePage}","import { fetchDataRequest, fetchDataSuccess, fetchDataError, removeTutorialTemplatePageAll, initialTutorialTemplatePage, addTutorialTemplatePage } from \"../../../store/actions/tutorial_template_page.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface TutorialTemplatePage {\r\n    id: string;\r\n    tutorial_template_id: string;\r\n    name: string;\r\n    description: string;\r\n    number: number;\r\n}\r\nexport function getTutorialTemplatePageByTutorialTemplateId(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/tutorial-template-page/tutorial-template/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTutorialTemplatePageByTutorialTemplateId(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeTutorialTemplatePageAll())\r\n                //console.log(data.body.lessons)\r\n                data.body.TutorialTemplatePage.map((ele: any, index: any) => {\r\n                    var tutorial_template_page: TutorialTemplatePage = {\r\n                        id: ele.id,\r\n                        tutorial_template_id: ele.tutorial_template_id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        number: ele.number\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialTutorialTemplatePage(tutorial_template_page));\r\n                    }\r\n                    else{\r\n                        return dispatch(addTutorialTemplatePage(tutorial_template_page))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getTutorialTemplatePageByTutorialTemplateId } from \"./GetTutorialTemplatePageByTutorialTemplateId\";\r\n\r\nexport function postTutorialTemplatePage1(tutorialtemplatepage: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/tutorial-template-page`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(tutorialtemplatepage)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postTutorialTemplatePage1(tutorialtemplatepage, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(getTutorialTemplatePageByTutorialTemplateId(tutorialtemplatepage.tutorial_template_id))\r\n                toast.update(idx, { render: \"Thêm bước cho giáo án thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Thêm bước cho giáo án không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, Dispatch, Fragment, useEffect, ChangeEvent } from \"react\";\r\nimport { IStateType, IRootPageStateType, ICourseState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport Editor from \"../../common/components/Quill/EditorSectionTemplate\";\r\nimport { ICourse } from \"../../store/models/course.interface\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NumberInput from \"../../common/components/NumberInput\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport { postTutorialTemplatePage1 } from \"../../common/service/TutorialTemplatePage/PostTutorialTemplatePage1\";\r\ntype Options = {\r\n  name: string;\r\n  value: any;\r\n}\r\n\r\ntype PageContent = {\r\n  page: number;\r\n  content: string;\r\n}\r\n\r\ntype TutorialSectionTemplate = {\r\n  number: number;\r\n  name: string;\r\n  teaching_form: boolean;\r\n  tutorial: PageContent[];\r\n}\r\n\r\nconst LessonPlan: React.FC = () => {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n  const courses: ICourseState = useSelector((state: IStateType) => state.courses);\r\n  let course: ICourse | null = courses.selectedCourse;\r\n\r\n  var id_x = localStorage.getItem('number_of_sum');\r\n  let number_of_sum: number = 0;\r\n  if (id_x !== null) {\r\n    number_of_sum = parseInt(id_x)\r\n  }\r\n\r\n\r\n  if (!course) {\r\n    course = { id: \"\", name: \"\", description: \"\", max_participant: 0, num_of_section: 0, price: 0, image_url: \"\", is_enabled: false, creator_id: \"\", art_age_id: \"\", art_level_id: \"\", art_type_id: \"\", create_time: \"\", update_time: \"\", art_age_name: \"\", art_level_name: \"\", art_type_name: \"\", checked_tutoral: false };\r\n  }\r\n\r\n  var course_id = localStorage.getItem('course_id');\r\n\r\n  var id_t = localStorage.getItem('tutorial_template_id');\r\n  let tutorial_template_id: string = \"\";\r\n  if (id_t !== null) {\r\n      tutorial_template_id = id_t\r\n  }\r\n\r\n  var id_y = localStorage.getItem('num_of_section');\r\n  let num_of_section: number = 0;\r\n  if (id_y !== null) {\r\n    num_of_section = parseInt(id_y)\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(updateCurrentPath(\"Khóa học chung\", \"Soạn giáo án\"));\r\n  }, [path.area, dispatch, course_id]);\r\n\r\n\r\n\r\n\r\n  const [contentTutorialSection, setContentTutorialSection] = useState<TutorialSectionTemplate[]>([])\r\n  const [contentTutorialPage, setContentTutorialPage] = useState<PageContent[]>([])\r\n  const [currentPage, setCurrentPage] = useState<number>(0)\r\n  const [numberSection, setNumberSection] = useState<number>(1)\r\n\r\n  const [value, setValue] = useState(0);\r\n  const [text, setText] = useState(\"\");\r\n\r\n  console.log(value)\r\n  console.log(currentPage)\r\n\r\n  const [formState, setFormState] = useState({\r\n    total_page: { error: \"\", value: 0 },\r\n  })\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    setValue(model.value);\r\n  }\r\n\r\n\r\n  console.log(numberSection)\r\n  const history = useHistory();\r\n\r\n  function routeHome() {\r\n    let path = `/courses`;\r\n    history.push(path);\r\n  }\r\n\r\n  function handleSaveStep () {\r\n    const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n      position: toast.POSITION.TOP_CENTER\r\n    });\r\n\r\n    if (numberSection === num_of_section) {\r\n      dispatch(postTutorialTemplatePage1({\r\n        description: value,\r\n        name: value1,\r\n        tutorial_template_id: tutorial_template_id,\r\n        number: currentPage\r\n      }, idx))\r\n\r\n      setTimeout(() =>\r\n        routeHome()\r\n      , 2000)\r\n    }\r\n    else {\r\n      dispatch(postTutorialTemplatePage1({\r\n        description: value,\r\n        name: value1,\r\n        tutorial_template_id: tutorial_template_id,\r\n        number: currentPage\r\n      }, idx))\r\n    }\r\n  }\r\n\r\n  const [textHtml, setTextHtml] = useState<string>(\"\")\r\n  function getValue(value: string) {\r\n    setTextHtml(value);\r\n  }\r\n\r\n\r\n\r\n  const listTeachingForm: Options[] = [\r\n    {\r\n      \"name\": \"Dạy thông qua Jitsi\",\r\n      \"value\": \"true\"\r\n    },\r\n    {\r\n      \"name\": \"Tự đọc giáo trình\",\r\n      \"value\": \"false\"\r\n    }\r\n  ]\r\n\r\n  function handleNextPage() {\r\n    let contentPage: PageContent = {\r\n      page: currentPage,\r\n      content: textHtml\r\n    }\r\n    setContentTutorialPage([...contentTutorialPage, contentPage])\r\n    let x = currentPage + 1\r\n    setCurrentPage(x)\r\n    setTextHtml(\"\")\r\n    setText(\"\")\r\n  }\r\n\r\n\r\n  function handleNextSection() {\r\n    if (value !== 0) {\r\n      let contentPage: PageContent = {\r\n        page: currentPage,\r\n        content: textHtml\r\n      }\r\n      let contentSection: TutorialSectionTemplate = {\r\n        number: numberSection,\r\n        name: value1,\r\n        teaching_form: value2 === \"true\" ? true : false,\r\n        tutorial: [...contentTutorialPage, contentPage]\r\n      }\r\n      setContentTutorialSection([...contentTutorialSection, contentSection])\r\n  \r\n      let y = numberSection + 1;\r\n      setNumberSection(y)\r\n  \r\n      setTextHtml(\"\")\r\n      setValue(0)\r\n      setHtmlClass1(\"\")\r\n      setHtmlClass2(\"\")\r\n      setValue1(\"\")\r\n      setValue2(\"\")\r\n      setCurrentPage(0)\r\n      setContentTutorialPage([])\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const [error1, setError1] = useState(\"\");\r\n  const [htmlClass1, setHtmlClass1] = useState(\"\");\r\n  const [value1, setValue1] = useState(\"\");\r\n\r\n\r\n  function onValueChanged1(event: ChangeEvent<HTMLInputElement>): void {\r\n    let [error1, validClass1, elementValue1] = [\"\", \"\", event.target.value];\r\n\r\n    [error1, validClass1] = (!elementValue1) ?\r\n      [\"Value cannot be empty\", \"is-invalid\"] : [\"\", \"is-valid\"];\r\n\r\n    setError1(error1);\r\n    setHtmlClass1(validClass1);\r\n    setValue1(elementValue1);\r\n  }\r\n\r\n\r\n  const [error2, setError2] = useState(\"\");\r\n  const [htmlClass2, setHtmlClass2] = useState(\"\");\r\n  const [value2, setValue2] = useState(\"\");\r\n\r\n\r\n  function onValueChanged2(event: ChangeEvent<HTMLSelectElement>): void {\r\n    let [error2, validClass2, elementValue2] = [\"\", \"\", event.target.value];\r\n\r\n    [error2, validClass2] = (!elementValue2) ?\r\n      [\"Value has to be selected\", \"is-invalid\"] : [\"\", \"is-valid\"];\r\n\r\n    setError2(error2);\r\n    setHtmlClass2(validClass2);\r\n    setValue2(elementValue2);\r\n  }\r\n\r\n\r\n  const getOptions2: (JSX.Element | null)[] = listTeachingForm.map((option: any, index: number) => {\r\n    return (\r\n      <option key={index} value={option.value}>{option.name}</option>\r\n    )\r\n  });\r\n\r\n  function handleBackPage() {\r\n\r\n  }\r\n\r\n  function handleRemove() {\r\n\r\n  }\r\n\r\n  function handleNewPage() {\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <ToastContainer />\r\n      <div className=\"col-xl-12 col-lg-12\">\r\n        <div className=\"card shadow mb-4\">\r\n          <div className=\"card-header py-3\">\r\n            <h6 className=\"m-0 font-weight-bold text-green\">Buổi {numberSection}</h6>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <div>\r\n                    <label htmlFor=\"input_name\">Tiêu đề buổi học</label>\r\n                    <input\r\n                      value={value1}\r\n                      type=\"text\"\r\n                      onChange={onValueChanged1}\r\n                      className={`form-control ${htmlClass1}`}\r\n                      id={`id_Tiêu đề buổi học`}\r\n                      placeholder=\"\" />\r\n                    {error1 ?\r\n                      <div className=\"invalid-feedback\">\r\n                        {error1}\r\n                      </div> : null\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <label htmlFor={`input_teaching_form`}>Hình thức dạy</label>\r\n                  <select\r\n                    value={value2}\r\n                    id={`input_teaching_form`}\r\n                    className={`form-control  ${htmlClass2}`}\r\n                    onChange={onValueChanged2}>\r\n                    <option value={0}>Choose...</option>\r\n                    {getOptions2}\r\n                  </select>\r\n\r\n                  {error2 ?\r\n                    <div className=\"invalid-feedback\">\r\n                      {error2}\r\n                    </div> : null\r\n                  }\r\n                </div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                    <NumberInput id=\"input_price\"\r\n                        value={formState.total_page.value}\r\n                        field=\"total_page\"\r\n                        onChange={hasFormValueChanged}\r\n                        max={10000000}\r\n                        min={0}\r\n                        label=\"Số bước\"\r\n                    />\r\n                </div>\r\n              </div>\r\n              {\r\n                function () {\r\n                  if (value > 1 && value - 1 > currentPage) {\r\n                    return (\r\n                      <>\r\n                        <div className=\"form-group\">\r\n                          <label>Nội dung bước {currentPage + 1} / {value}</label>\r\n                          <Editor getValue={getValue} isCreate={textHtml} setValue={text} />\r\n                        </div>\r\n                        <div className=\"row mt-2\">\r\n                            <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                                <button type=\"button\" className=\"btn btn-info right-margin\" onClick={handleBackPage}>Trở về</button>\r\n                                <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleSaveStep}>Lưu tạm</button>\r\n                                <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleNextPage}>Bước tiếp theo</button>\r\n                            </div>\r\n                            <div className=\"col-xl-8 col-md-8 col-xs-8\">\r\n                                <button type=\"button\" className=\"btn btn-error right-margin add-step btn-remove ml-2\" onClick={handleRemove}>Xóa bước</button>\r\n                                <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNewPage}>Thêm bước</button>\r\n                            </div>\r\n                        </div>\r\n                      </>\r\n                    )\r\n                  }\r\n\r\n                  else if (value - 1 === currentPage || value === 1) {\r\n                    return (\r\n                      <>\r\n                      <div className=\"form-group\">\r\n                        <label>Nội dung trang {currentPage + 1}</label>\r\n                        <Editor getValue={getValue} isCreate={textHtml} setValue={text} />\r\n                      </div>\r\n                      <div className=\"row mt-2\">\r\n                      <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                                <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleSaveStep}>Lưu tạm</button>\r\n                                <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleNextPage}>Bước tiếp theo</button>\r\n                            </div>\r\n                            <div className=\"col-xl-8 col-md-8 col-xs-8\">\r\n                                <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNewPage}>Thêm bước</button>\r\n                            </div>\r\n                              \r\n                      </div>\r\n                    </>\r\n                    )\r\n                  }\r\n                }()\r\n              }\r\n\r\n              {\r\n                function () {\r\n                  if (course && numberSection === 1){\r\n                    return (\r\n                      <div className=\"row mt-2\">\r\n                            <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                            <button type=\"button\" className=\"btn left-margin step-continue\" onClick={handleSaveStep}>Lưu buổi</button>\r\n                                <button type=\"button\" className=\"btn btn-info right-margin ml-2\" onClick={handleBackPage}>Trở về</button>\r\n                            </div>\r\n                            <div className=\"col-xl-8 col-md-8 col-xs-8\">\r\n                                <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNextSection}>Buổi tiếp theo</button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                  }\r\n                  else if (course && (numberSection <= number_of_sum)) {\r\n                    return (\r\n                      <div className=\"row mt-2\">\r\n                            <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                            <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleSaveStep}>Lưu buổi</button>\r\n                                <button type=\"button\" className=\"btn btn-info right-margin ml-2\" onClick={handleBackPage}>Trở về</button>\r\n                            </div>\r\n                            <div className=\"col-xl-8 col-md-8 col-xs-8\">\r\n                                <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNextSection}>Buổi tiếp theo</button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                  }\r\n                }()\r\n              }\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LessonPlan;\r\n","export interface IContest {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    total_contest_submission: number;\r\n    total_contest_submission_graded: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    creator_id: string;\r\n    art_type_id: string;\r\n    art_age_id: string;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ContestModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","export function padTo2Digits(num) {\r\n    return num.toString().padStart(2, '0');\r\n  }\r\n  \r\nexport function formatDate(date) {\r\n    return (\r\n      [\r\n        date.getFullYear(),\r\n        padTo2Digits(date.getMonth() + 1),\r\n        padTo2Digits(date.getDate()),\r\n      ].join('-') +\r\n      ' ' +\r\n      [\r\n        padTo2Digits(date.getHours()),\r\n        padTo2Digits(date.getMinutes()),\r\n        padTo2Digits(date.getSeconds()),\r\n      ].join(':')\r\n    );\r\n  }","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IContestState } from \"../../store/models/root.interface\";\r\nimport { IContest } from \"../../store/models/contest.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { formatDate } from \"../../common/components/ConverDate\";\r\n\r\nexport type contestListProps = {\r\n    onSelect?: (contest: IContest) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\ntype Options = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\nfunction ContestIsOnList(props: contestListProps): JSX.Element {\r\n    const contests: IContestState = useSelector((state: IStateType) => state.contests);\r\n    const history = useHistory();\r\n\r\n    const routeChange = () => {\r\n        let path = '/contests/detail';\r\n        history.push(path);\r\n    }\r\n    const date_0 = new Date();\r\n    const date = date_0.toUTCString()\r\n    //console.log(date)\r\n    const date_now = formatDate(new Date(date)).substring(0,10) + \"Z\"+ formatDate(new Date(date)).substring(11,16);\r\n    console.log( formatDate(new Date(date)).substring(0,10) + \"Z\"+ formatDate(new Date(date)).substring(11,16))\r\n    \r\n    const contestElements: (JSX.Element | null)[] = contests.contests.map((contest, index) => {\r\n        var strDate1 = contest.start_time;\r\n        var strDate2 = contest.end_time;\r\n        if (!contest || strDate1 > date_now || date_now > strDate2) { return null; }\r\n        return (<tr className={`table-row ${(contests.selectedContest && contests.selectedContest.id === contest.id) ? \"selected\" : \"\"}`}\r\n            key={`contest_${contest.id}`}>\r\n            <th scope=\"row\">{index + 1}</th>\r\n            <td onClick={routeChange}>{contest.name}</td>\r\n            <td>{contest.art_type_name}</td>\r\n            <td>{contest.art_age_name}</td>\r\n            <td>{strDate1.substring(0, 10) + \" \" + strDate1.substring(11,19)}</td>\r\n            <td>{strDate2.substring(0, 10) + \" \" + strDate2.substring(11,19)}</td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"table-responsive portlet\">\r\n            <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Tên</th>\r\n                        <th scope=\"col\">Thể loại</th>\r\n                        <th scope=\"col\">Độ tuổi</th>\r\n                        <th scope=\"col\">Thời gian bắt đầu</th>\r\n                        <th scope=\"col\">Thời gian kết thúc</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {contestElements}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ContestIsOnList;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IContestState } from \"../../store/models/root.interface\";\r\nimport { IContest } from \"../../store/models/contest.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { formatDate } from \"../../common/components/ConverDate\";\r\n\r\nexport type contestListProps = {\r\n    onSelect?: (contest: IContest) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\ntype Options = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\n\r\nfunction ContestEndList(props: contestListProps): JSX.Element {\r\n    const contests: IContestState = useSelector((state: IStateType) => state.contests);\r\n    const history = useHistory();\r\n\r\n    const routeChange = (contest_id: string) => {\r\n        localStorage.removeItem('contest_id');\r\n        localStorage.setItem('contest_id', contest_id.toString())\r\n        let path = '/contests/result';\r\n        history.push(path);\r\n    }\r\n\r\n    const date_0 = new Date();\r\n    const date = date_0.toUTCString()\r\n    console.log(date)\r\n    const date_now = formatDate(new Date(date)).substring(0,10) + \"Z\"+ formatDate(new Date(date)).substring(11,16);\r\n    console.log( formatDate(new Date(date)).substring(0,10) + \"Z\"+ formatDate(new Date(date)).substring(11,16))\r\n\r\n    const contestElements: (JSX.Element | null)[] = contests.contests.map((contest, index) => {\r\n        var strDate1 = contest.start_time;\r\n        var strDate2 = contest.end_time;\r\n        var is_check = (strDate2 > date_now) ? true: false;\r\n        console.log(strDate2)\r\n        console.log(is_check)\r\n        if (!contest || strDate2 > date_now) { return null; }\r\n        return (<tr className={`table-row ${(contests.selectedContest && contests.selectedContest.id === contest.id) ? \"selected\" : \"\"}`}\r\n            key={`contest_${contest.id}`}>\r\n            <th scope=\"row\">{index + 1}</th>\r\n            <td onClick={() => routeChange(contest.id)}>{contest.name}</td>\r\n            <td>{contest.art_type_name}</td>\r\n            <td>{contest.art_age_name}</td>\r\n            <td>{strDate1.substring(0, 10) + \" \" + strDate1.substring(11,19)}</td>\r\n            <td>{strDate2.substring(0, 10) + \" \" + strDate2.substring(11,19)}</td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"table-responsive portlet\">\r\n            <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Tên</th>\r\n                        <th scope=\"col\">Thể loại</th>\r\n                        <th scope=\"col\">Độ tuổi</th>\r\n                        <th scope=\"col\">Thời gian bắt đầu</th>\r\n                        <th scope=\"col\">Thời gian kết thúc</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {contestElements}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ContestEndList;\r\n","import React, { Dispatch } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IContestState } from \"../../store/models/root.interface\";\r\nimport { ContestModificationStatus, IContest } from \"../../store/models/contest.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setModificationState } from \"../../store/actions/contest.action\";\r\nimport { formatDate } from \"../../common/components/ConverDate\";\r\n\r\nexport type contestListProps = {\r\n    onSelect?: (contest: IContest) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\ntype Options = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\nfunction ContestNotOnYetList(props: contestListProps): JSX.Element {\r\n    const contests: IContestState = useSelector((state: IStateType) => state.contests);\r\n    const history = useHistory();\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n\r\n    const routeChange = () => {\r\n        let path = '/contests/detail';\r\n        history.push(path);\r\n    }\r\n\r\n    const routeEdit = (contest: IContest) => {\r\n        dispatch(setModificationState(ContestModificationStatus.None));\r\n        let path = `/contests/create-contest`;\r\n        localStorage.removeItem('contest_id');\r\n        localStorage.setItem('contest_id', contest.id.toString());\r\n        history.push(\r\n            {\r\n                pathname: path\r\n            }\r\n        );\r\n    }\r\n    const date_0 = new Date();\r\n    const date = date_0.toUTCString()\r\n    console.log(date)\r\n    const date_now = formatDate(new Date(date)).substring(0,10) + \"Z\"+ formatDate(new Date(date)).substring(11,16);\r\n    console.log( formatDate(new Date(date)).substring(0,10) + \"Z\"+ formatDate(new Date(date)).substring(11,16))\r\n\r\n    const contestElements: (JSX.Element | null)[] = contests.contests.map((contest, index) => {\r\n        var strDate1 = contest.start_time;\r\n        console.log(strDate1)\r\n        var strDate2 = contest.end_time;\r\n        if (!contest || strDate1 < date_now) { return null; }\r\n        return (<tr className={`table-row ${(contests.selectedContest && contests.selectedContest.id === contest.id) ? \"selected\" : \"\"}`}\r\n            key={`contest_${contest.id}`}>\r\n            <th scope=\"row\">{index + 1}</th>\r\n            <td onClick={routeChange}>{contest.name}</td>\r\n            <td>{contest.art_type_name}</td>\r\n            <td>{contest.art_age_name}</td>\r\n            <td>{strDate1.substring(0, 10) + \" \" + strDate1.substring(11,19)}</td>\r\n            <td>{strDate2.substring(0, 10) + \" \" + strDate2.substring(11,19)}</td>\r\n            <td>\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n                    if (props.onSelect) props.onSelect(contest);\r\n                    dispatch(setModificationState(ContestModificationStatus.Edit))\r\n                    routeEdit(contest)\r\n                }}>Chỉnh sửa thông tin</button>\r\n            </td>\r\n            <td>\r\n                <button type=\"button\" className=\"btn btn-danger\" onClick={() => {\r\n                    if (props.onSelect) props.onSelect(contest);\r\n                    dispatch(setModificationState(ContestModificationStatus.Remove))\r\n                }}>Xóa</button>\r\n            </td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"table-responsive portlet\">\r\n            <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Tên</th>\r\n                        <th scope=\"col\">Thể loại</th>\r\n                        <th scope=\"col\">Độ tuổi</th>\r\n                        <th scope=\"col\">Thời gian bắt đầu</th>\r\n                        <th scope=\"col\">Thời gian kết thúc</th>\r\n                        <th scope=\"col\">Hành động</th>\r\n                        <th scope=\"col\"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {contestElements}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ContestNotOnYetList;\r\n","import { fetchDataSuccess, fetchDataError, removeContestAll, initialContest, addContest } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface Contest {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    registration_time: string;\r\n    total_register_contest: number;\r\n    total_contest_submission: number;\r\n    total_contest_submission_graded: number;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    creator_id: string;\r\n    art_type_id: string;\r\n    art_age_id: string;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getContest(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest?page=0&size=5`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getContest(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeContestAll())\r\n                console.log(data.body.art_age)\r\n                data.body.art_age.map((ele: any, index: any) => {\r\n                    var strDate1 = ele.start_time;\r\n                    var strDate2 = ele.end_time;\r\n                    var strDate3 = ele.registration_time;\r\n                    var contest: Contest = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: strDate3.substring(0,16),\r\n                        image_url: ele.image_url,\r\n                        start_time: strDate1.substring(0,16),\r\n                        end_time: strDate2.substring(0,16),\r\n                        is_enabled: ele.is_enabled,\r\n                        creator_id: ele.creator_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContest(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContest(contest))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./Contest.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IContestState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport Popup from \"reactjs-popup\";\r\nimport {\r\n    removeContest, clearSelectedContest, setModificationState,\r\n    changeSelectedContest\r\n} from \"../../store/actions/contest.action\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { ContestModificationStatus, IContest } from \"../../store/models/contest.interface\";\r\nimport ContestIsOnList from \"./ContestIsOnList\";\r\nimport ContestEndList from \"./ContestEndList\";\r\nimport ContestNotOnYetList from \"./ContestNotOnYetList\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { deleteContest } from \"../../common/service/Contest/DeleteContest\";\r\nimport { getContest } from \"../../common/service/Contest/GetContest\";\r\nimport { formatDate } from \"../../common/components/ConverDate\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\n\r\nconst Contest: React.FC = () => {\r\n    const [checked1, setChecked1] = useState(true);\r\n    const [checked2, setChecked2] = useState(false);\r\n    const [checked3, setChecked3] = useState(false);\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const contests: IContestState = useSelector((state: IStateType) => state.contests);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const [popup1, setPopup1] = useState(false);\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    const date_0 = new Date();\r\n    const date = date_0.toUTCString()\r\n    console.log(date)\r\n    const date_now = formatDate(new Date(date)).substring(0, 10) + \"Z\" + formatDate(new Date(date)).substring(11, 16);\r\n    let numberContestEndCount: number = contests.contests.filter((contest) => {\r\n        var strDate2 = contest.end_time;\r\n        if (!(!contest || strDate2 > date_now)) {\r\n            return contest\r\n        }\r\n        return null\r\n    }).length\r\n\r\n    let numberContestOnCount: number = contests.contests.filter((contest) => {\r\n        var strDate1 = contest.start_time;\r\n        var strDate2 = contest.end_time;\r\n        if (!(!contest || strDate1 > date_now || date_now > strDate2)) {\r\n            return contest\r\n        }\r\n        return null\r\n    }).length\r\n\r\n    let numberContestNotStartCount: number = contests.contests.filter((contest) => {\r\n        var strDate1 = contest.start_time;\r\n        if (!(!contest || strDate1 < date_now)) {\r\n            return contest\r\n        }\r\n        return null\r\n    }).length\r\n    useEffect(() => {\r\n        dispatch(clearSelectedContest());\r\n        dispatch(updateCurrentPath(\"Cuộc thi\", \"danh sách\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getContest(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getContest(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token])\r\n\r\n    function onContestSelectNotOnYetList(contest: IContest): void {\r\n        dispatch(changeSelectedContest(contest));\r\n        onContestRemove1()\r\n        dispatch(setModificationState(ContestModificationStatus.None));\r\n    }\r\n\r\n    function onContestSelectOnList(contest: IContest): void {\r\n        dispatch(changeSelectedContest(contest));\r\n        dispatch(setModificationState(ContestModificationStatus.None));\r\n    }\r\n\r\n    function onContestSelectEndList(contest: IContest): void {\r\n        dispatch(changeSelectedContest(contest));\r\n        dispatch(setModificationState(ContestModificationStatus.None));\r\n    }\r\n\r\n    function onContestRemove1() {\r\n        setPopup1(true);\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    const routeChange = () => {\r\n        let path = `/contests/edit-contest`;\r\n        history.push(\r\n            {\r\n                pathname: path,\r\n                state: { contest_value: null } // your data array of objects\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <ToastContainer />\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Cuộc thi</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"ĐANG DIỄN RA\" text={`${numberContestOnCount}`} icon=\"box\" class=\"primary\" />\r\n                <TopCard title=\"ĐÃ KẾT THÚC\" text={`${numberContestEndCount}`} icon=\"box\" class=\"primary\" />\r\n                <TopCard title=\"CHƯA DIỄN RA\" text={`${numberContestNotStartCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked1 === false) {\r\n                            setChecked1(true)\r\n                            setChecked2(false)\r\n                            setChecked3(false)\r\n                        }\r\n                    }} style={{\r\n                        color: checked1 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Cuộc thi chưa diễn ra</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"50%\",\r\n                        backgroundColor: checked1 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked2 === false) {\r\n                            setChecked2(true)\r\n                            setChecked1(false)\r\n                            setChecked3(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked2 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Cuộc thi đang diễn ra</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"50%\",\r\n                        backgroundColor: checked2 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked3 === false) {\r\n                            setChecked3(true)\r\n                            setChecked1(false)\r\n                            setChecked2(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked3 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Cuộc thi đã kết thúc</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"50%\",\r\n                        backgroundColor: checked3 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                function () {\r\n                    if (checked2 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\">Danh sách cuộc thi đang diễn ra</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ContestIsOnList\r\n                                                    onSelect={onContestSelectOnList}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else if (checked1 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\">Danh sách cuộc thi chưa diễn ra</h6>\r\n                                                <div className=\"header-buttons\">\r\n                                                    <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                                        dispatch(setModificationState(ContestModificationStatus.Create))\r\n                                                        routeChange()\r\n                                                    }}>\r\n                                                        <i className=\"fas fa fa-plus\"></i>\r\n                                                        Thêm cuộc thi\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ContestNotOnYetList\r\n                                                    onSelect={onContestSelectNotOnYetList}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {\r\n                                    function () {\r\n                                        if ((contests.selectedContest) && (contests.modificationState === ContestModificationStatus.Remove)) {\r\n                                            return (\r\n                                                <Popup\r\n                                                    open={popup1}\r\n                                                    onClose={() => setPopup1(false)}\r\n                                                    closeOnDocumentClick\r\n                                                >\r\n                                                    <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                                        <div className=\"popup-title\">\r\n                                                            Are you sure?\r\n                                                        </div>\r\n                                                        <div className=\"popup-content\">\r\n                                                            <button type=\"button\"\r\n                                                                className=\"btn btn-danger\"\r\n                                                                onClick={() => {\r\n                                                                    if (!contests.selectedContest) {\r\n                                                                        return;\r\n                                                                    }\r\n                                                                    dispatch(deleteContest(contests.selectedContest.id))\r\n                                                                    dispatch(addNotification(\"Khóa học \", `${contests.selectedContest.id} đã được xóa`));\r\n                                                                    dispatch(removeContest(contests.selectedContest.id));\r\n                                                                    dispatch(clearSelectedContest());\r\n                                                                    setPopup1(false);\r\n                                                                }}>Remove\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Popup>\r\n                                            )\r\n                                        }\r\n                                    }()\r\n                                }\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n\r\n                    else if (checked3 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\">Danh sách cuộc thi đã kết thúc</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ContestEndList\r\n                                                    onSelect={onContestSelectEndList}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Contest;\r\n","import { fetchDataRequest, fetchDataError, removeContest } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteContest(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/contest/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteContest(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(removeContest(id))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Fragment, Dispatch } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\n\r\nconst DegreePhoto: React.FC = () => {\r\n\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  dispatch(updateCurrentPath(\"Bằng cấp\", \"\"));\r\n\r\n  const { state } = useLocation<any>();\r\n  let x = \"\";\r\n  if (typeof state !== undefined){\r\n    x= state.degree_photo\r\n  }\r\n  console.log(x)\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"h3 mb-2 text-gray-800\">Bằng cấp</h1>\r\n      {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n      <div className=\"row\">\r\n\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-green\">Hình ảnh</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n            <img src={x} alt=\"\"/>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DegreePhoto;\r\n","import React, { useState, ChangeEvent } from \"react\";\nimport { CheckboxProps } from \"../types/Checkbox.types\";\n\nfunction Checkbox(props: CheckboxProps): JSX.Element {\n    const [touched, setTouch] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [htmlClass, setHtmlClass] = useState(\"\");\n    const [, setValue] = useState(false);\n\n\n    function onValueChanged(event: ChangeEvent<HTMLInputElement>): void {\n        let [error, validClass, elementValue] = [\"\", \"\", event.target.checked];\n\n        [error, validClass] = (!elementValue && props.required) ?\n            [\"Value has to be checked\", \"is-invalid\"] : [\"\", \"is-valid\"];\n\n\n        props.onChange({ value: elementValue, error: error, touched: touched, field: props.field });\n\n        setTouch(true);\n        setError(error);\n        setHtmlClass(validClass);\n        setValue(elementValue);\n    }\n\n    return (\n        <div className=\"form-check\">\n            <input\n                className={`form-check-input ${props.inputClass ? props.inputClass : \"\"} ${htmlClass}`}\n                type=\"checkbox\"\n                id={`id_${props.label}`}\n                checked={props.value}\n                onChange={onValueChanged} />\n            <label className=\"form-check-label\" htmlFor={props.id.toString()}>\n                {props.label}\n            </label>\n\n            {error ?\n                <div className=\"invalid-feedback\">\n                    {error}\n                </div> : null\n            }\n        </div>\n    );\n}\n\nexport default Checkbox;","import React, {useRef} from \"react\";\r\nimport ReactQuill, { Quill } from 'react-quill';\r\nimport EditorToolbar, { modules, formats } from \"./EditorToolbar\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"./Style.css\";\r\nimport ImageResize from 'quill-image-resize-module-react';\r\n\r\nQuill.register('modules/imageResize', ImageResize);\r\n\r\nexport const Editor = (props) => {\r\n  console.log('editor')\r\n  const reactQuillRef = useRef(null);\r\n  React.useEffect(() => {\r\n    if (reactQuillRef.current.getEditor() && !props.isCreate){\r\n        reactQuillRef.current.getEditor().clipboard.dangerouslyPasteHTML(props.setValue)\r\n    }\r\n  }, [reactQuillRef, props.isCreate, props.setValue]);\r\n  //console.log(reactQuillRef)\r\n  \r\n  //const quill = reactQuillRef.current.editor;\r\n  //console.log(quill)\r\n  //quill.clipboard.dangerouslyPasteHTML(props.setValue);\r\n  const [state, setState] = React.useState({ value: null });\r\n  const handleChange = value => {\r\n    setState({ value });\r\n    props.getValue(value)\r\n    //console.log(value)\r\n  };\r\n\r\n  console.log(state.value)\r\n  return (\r\n    <div className=\"text-editor\">\r\n      <EditorToolbar />\r\n      <ReactQuill\r\n        ref={reactQuillRef}\r\n        theme=\"snow\"\r\n        value={state.value}\r\n        onChange={handleChange}\r\n        placeholder={\"Write something awesome...\"}\r\n        modules={modules}\r\n        formats={formats}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/course.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getCourse } from \"./GetCourse\";\r\n\r\nexport function postCourse(course: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/course`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(course)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postCourse(course, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Thêm khóa học thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                getCourse(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Thêm khóa học không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/course.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getCourse } from \"./GetCourse\";\r\n\r\nexport function putCourse(id: any,data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/course/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putCourse(id, data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                console.log(id)\r\n                toast.update(idx, { render: \"Chỉnh khóa học thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                getCourse(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Chỉnh khóa học không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch, Fragment, useEffect } from \"react\";\r\nimport { IStateType, IRootPageStateType, IArtLevelState, IArtTypeState, IArtAgeState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ICourse, CourseModificationStatus } from \"../../store/models/course.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editCourse, clearSelectedCourse, setModificationState, addCourse } from \"../../store/actions/course.action\";\r\nimport NumberInput from \"../../common/components/NumberInput\";\r\nimport Checkbox from \"../../common/components/Checkbox\";\r\nimport { OnChangeModel, ICourseNomalFormState } from \"../../common/types/Form.types\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport Editor from \"../../common/components/Quill/Editor\";\r\nimport { IArtLevel } from \"../../store/models/art_level.interface\";\r\nimport { IArtType } from \"../../store/models/art_type.interface\";\r\nimport { IArtAge } from \"../../store/models/art_age.interface\";\r\nimport SelectKeyValue from \"../../common/components/SelectKeyValue\";\r\nimport { getArtType } from \"../../common/service/ArtType/GetArtType\";\r\nimport { getArtLevel } from \"../../common/service/ArtLevel/GetArtLevel\";\r\nimport { getArtAge } from \"../../common/service/ArtAge/GetArtAge\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { postCourse } from \"../../common/service/Course/PostCourse\";\r\nimport { putCourse } from \"../../common/service/Course/PutCourse\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\ntype Options = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\n\r\nconst CourseNomalForm: React.FC = () => {\r\n    //console.log(id)\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n    //console.log(courses)\r\n    const { state } = useLocation()\r\n    console.log(state)\r\n    let course: ICourse | null = null;\r\n    if (typeof state != \"undefined\"){\r\n        course = state.course_value;\r\n    }\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    //console.log(course)\r\n    const isCreate: boolean = true;\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khóa học\", \"\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    useEffect(() => {\r\n        trackPromise(getArtType(dispatch))\r\n        trackPromise(getArtLevel(dispatch))\r\n        trackPromise(getArtAge(dispatch))\r\n\r\n    }, [dispatch])\r\n\r\n    if (!course || isCreate) {\r\n        course = { id: \"\", name: \"\", description: \"\", max_participant: 0, num_of_section: 0, price: 0, image_url: \"\", is_enabled: false, creator_id: \"\", art_age_id: \"\", art_level_id: \"\", art_type_id: \"\", create_time: \"\", update_time: \"\", art_age_name: \"\", art_level_name: \"\", art_type_name: \"\", checked_tutoral: false };\r\n    }\r\n\r\n    const levels: IArtLevelState = useSelector((state: IStateType) => state.art_levels);\r\n    const listLevel: IArtLevel[] = levels.artLevels\r\n    //console.log(listLevel)\r\n    const listLevels: Options[] = [];\r\n    listLevel.map((ele) => {\r\n        let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n        return listLevels.push(item)\r\n    })\r\n\r\n    const mytypes: IArtTypeState = useSelector((state: IStateType) => state.art_types);\r\n    const listMytype: IArtType[] = mytypes.artTypes\r\n    const listMytypes: Options[] = [];\r\n    listMytype.map((ele) => {\r\n        let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n        return listMytypes.push(item)\r\n    })\r\n\r\n    const art_ages: IArtAgeState = useSelector((state: IStateType) => state.art_ages);\r\n    const listArtAge: IArtAge[] = art_ages.artAges\r\n    const listArtAges: Options[] = [];\r\n    listArtAge.map((ele) => {\r\n        let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n        return listArtAges.push(item)\r\n    })\r\n\r\n    const history = useHistory();\r\n\r\n    function routeHome() {\r\n        dispatch(setModificationState(CourseModificationStatus.None));\r\n        let path = `/courses`;\r\n        history.push(path);\r\n    }\r\n\r\n    const src = \"https://thumbs.dreamstime.com/b/default-avatar-profile-vector-user-profile-default-avatar-profile-vector-user-profile-profile-179376714.jpg\"\r\n\r\n    const [preview, setPreview] = useState(src)\r\n\r\n    const [formState, setFormState] = useState({\r\n        name: { error: \"\", value: course.name },\r\n        description: { error: \"\", value: course.description },\r\n        art_type_id: { error: \"\", value: course.art_type_id },\r\n        art_level_id: { error: \"\", value: course.art_level_id },\r\n        art_age_id: { error: \"\", value: course.art_age_id },\r\n        num_of_section: { error: \"\", value: course.num_of_section },\r\n        price: { error: \"\", value: course.price },\r\n        image_url: { error: \"\", value: course.image_url },\r\n        is_enabled: { error: \"\", value: course.is_enabled },\r\n        creator_id: { error: \"\", value: course.creator_id },\r\n        create_time: { error: \"\", value: course.create_time },\r\n        update_time: { error: \"\", value: course.update_time }\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    async function saveUser(e: FormEvent<HTMLFormElement>){\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n\r\n        const id = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n\r\n        var url = await setImageAction();\r\n\r\n        let saveUserFn: Function = (isCreate) ? addCourse : editCourse;\r\n        saveForm(formState, saveUserFn, url, id);\r\n    }\r\n\r\n    function saveForm(formState: ICourseNomalFormState, saveFn: Function, url: string, idx: any): void {\r\n        if (course) {\r\n            if (saveFn === addCourse) {\r\n                dispatch(postCourse({\r\n                    name: formState.name.value,\r\n                    description: textHtml,\r\n                    num_of_section: formState.num_of_section.value,\r\n                    price: formState.price.value,\r\n                    image_url: url,\r\n                    is_enabled: formState.is_enabled.value,\r\n                    art_type_id: formState.art_type_id.value,\r\n                    art_age_id: formState.art_age_id.value,\r\n                    art_level_id: formState.art_level_id.value,\r\n                    creator_id: localStorage.getItem('id')\r\n                }, idx))\r\n            }\r\n\r\n            else if (saveFn === editCourse) {\r\n                dispatch(putCourse(course.id, {\r\n                    name: formState.name.value,\r\n                    description: textHtml,\r\n                    num_of_section: formState.num_of_section.value,\r\n                    price: formState.price.value,\r\n                    image_url: url,\r\n                    is_enabled: formState.is_enabled.value,\r\n                    art_type_id: formState.art_type_id.value,\r\n                    art_age_id: formState.art_age_id.value,\r\n                    art_level_id: formState.art_level_id.value,\r\n                    creator_id: localStorage.getItem('id')\r\n                }, idx))\r\n            }\r\n\r\n            dispatch(clearSelectedCourse());\r\n            dispatch(setModificationState(CourseModificationStatus.None));\r\n            setTimeout(function () {\r\n                routeHome();\r\n            }, 2000); \r\n        }\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        dispatch(setModificationState(CourseModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.description.error\r\n            || formState.name.error || formState.num_of_section.error || formState.price.error\r\n            || preview === \"https://thumbs.dreamstime.com/b/default-avatar-profile-vector-user-profile-default-avatar-profile-vector-user-profile-profile-179376714.jpg\" || !formState.name.value || !formState.num_of_section.value ) as boolean;\r\n    }\r\n\r\n    const [textHtml, setTextHtml] = useState<string>(\"\")\r\n    function getValue(value: string) {\r\n        setTextHtml(value);\r\n    }\r\n\r\n    const [image, setImage] = useState<any>();\r\n\r\n    const uploadPicture = (e: any) => {\r\n        setImage({\r\n            /* contains the preview, if you want to show the picture to the user\r\n                you can access it with this.state.currentPicture\r\n           */\r\n            picturePreview : URL.createObjectURL(e.target.files[0]),\r\n            /* this contains the file we want to send */\r\n            pictureAsFile : e.target.files[0]\r\n        })\r\n        setPreview(URL.createObjectURL(e.target.files[0]))\r\n    };\r\n\r\n    console.log(image)\r\n\r\n    async function setImageAction(){\r\n        const formData = new FormData();\r\n        formData.append(\r\n            \"gifFile\",\r\n            image.pictureAsFile\r\n        );\r\n        // do your post request\r\n        const res = await fetch(\r\n            `${process.env.REACT_APP_API_URL}/cloudinary/gifs`, {\r\n                method: \"POST\",\r\n                body: formData\r\n            }\r\n        )\r\n        const data = await res.json()\r\n        return data.url_image\r\n\r\n    };\r\n\r\n    //console.log('Input',textHtml)\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"col-xl-12 col-lg-12\">\r\n                <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} khóa học chung</h6>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={saveUser}>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label htmlFor=\"profile_image\">Chọn ảnh:</label>\r\n                                    <input type=\"file\" id=\"profile_image\" name=\"profile_image\" onChange={uploadPicture}/>\r\n                                </div>\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <img src={preview} alt=\"Preview\" id=\"avatar\"/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <TextInput id=\"input_name\"\r\n                                        field=\"name\"\r\n                                        value={formState.name.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        maxLength={100}\r\n                                        label=\"Tên khóa học\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <NumberInput id=\"input_price\"\r\n                                        value={formState.price.value}\r\n                                        field=\"price\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        max={10000000}\r\n                                        min={0}\r\n                                        label=\"Giá\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                <SelectKeyValue id=\"input_art_type_id\"\r\n                                    field = \"art_type_id\"\r\n                                    value={formState.art_type_id.value}\r\n                                    onChange={hasFormValueChanged}\r\n                                    required={true}\r\n                                    label=\"Thể loại\"\r\n                                    options={listMytypes}\r\n                                />\r\n                                </div>\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <SelectKeyValue\r\n                                        id=\"input_art_level_id\"\r\n                                        field=\"art_level_id\"\r\n                                        label=\"Mức độ\"\r\n                                        options={listLevels}\r\n                                        required={true}\r\n                                        onChange={hasFormValueChanged}\r\n                                        value={formState.art_level_id.value}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <SelectKeyValue\r\n                                        id=\"input_art_age_id\"\r\n                                        field=\"art_age_id\"\r\n                                        label=\"Mức độ\"\r\n                                        options={listArtAges}\r\n                                        required={true}\r\n                                        onChange={hasFormValueChanged}\r\n                                        value={formState.art_age_id.value}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <Checkbox\r\n                                        id=\"input_is_enabled\"\r\n                                        field=\"is_enabled\"\r\n                                        value={formState.is_enabled.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        label=\"Mở\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <NumberInput id=\"input_num_of_section\"\r\n                                        value={formState.num_of_section.value}\r\n                                        field=\"num_of_section\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        max={1000}\r\n                                        min={0}\r\n                                        label=\"Số buổi học\" \r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Miêu tả</label>\r\n                                <Editor getValue={getValue} isCreate={isCreate} setValue={formState.description.value}/>\r\n                            </div>\r\n\r\n                            <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                            <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default CourseNomalForm;\r\n","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester.actions\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postUserGradeContest(data: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-grade-contest`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postUserGradeContest(data))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { deleteUserGradeContestByContest } from \"../UserGradeContest/DeleteUserGradeContestByContest\";\r\nimport { postUserGradeContest } from \"../UserGradeContest/PostUserGradeContest\";\r\nimport { getContest } from \"./GetContest\";\r\n\r\nexport function putContest(id: any,data: any, valueTeacher: any[], idx: any, routeHome: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putContest(id,data, valueTeacher, idx, routeHome))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                console.log(id)\r\n                dispatch(deleteUserGradeContestByContest(id));\r\n                valueTeacher.map((value, index) =>  {\r\n                    return dispatch(postUserGradeContest({\r\n                        contest_id: id,\r\n                        teacher_id: value.value\r\n                    }))\r\n                })\r\n                toast.update(idx, { render: \"Chỉnh cuộc thi thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                setTimeout(function () {\r\n                    routeHome(true);\r\n                }, 2000);\r\n                getContest(dispatch) \r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Chỉnh cuộc thi không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteUserGradeContestByContest(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/user-grade-contest/contest/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteUserGradeContestByContest(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState } from 'react';\r\nimport Select from 'react-select';\r\n\r\nexport default function ReactSelect(props) {\r\n    const [selectedOption, setSelectedOption] = useState(props.value);\r\n    const handleChange = (selectedOption) => {\r\n        setSelectedOption(selectedOption);\r\n        props.changeValue(selectedOption)\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Select\r\n                isMulti={true}\r\n                defaultValue={selectedOption}\r\n                onChange={handleChange}\r\n                options={props.setValue}\r\n            />\r\n        </div>\r\n    );\r\n}","import { IUserGradeContest, UserGradeContestModificationStatus } from \"../models/user_grade_contest.interface\";\r\nexport const ADD_TUTORIAL_TEMPLATE: string = \"ADD_TUTORIAL_TEMPLATE\";\r\nexport const EDIT_TUTORIAL_TEMPLATE: string = \"EDIT_TUTORIAL_TEMPLATE\";\r\nexport const REMOVE_TUTORIAL_TEMPLATE: string = \"REMOVE_TUTORIAL_TEMPLATE\";\r\nexport const CHANGE_TUTORIAL_TEMPLATE_AMOUNT: string = \"CHANGE_TUTORIAL_TEMPLATE_AMOUNT\";\r\nexport const CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT: string = \"CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT\";\r\nexport const CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT: string = \"CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_TUTORIAL_TEMPLATE_ALL: string = \"REMOVE_TUTORIAL_TEMPLATE_ALL\";\r\nexport const INITIAL_TUTORIAL_TEMPLATE: string = \"INITIAL_TUTORIAL_TEMPLATE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(user_grade_contest: IUserGradeContest) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        user_grade_contest\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialUserGradeContest(user_grade_contest: IUserGradeContest): IInitialUserGradeContestActionType {\r\n    return { type: INITIAL_TUTORIAL_TEMPLATE, user_grade_contest: user_grade_contest };\r\n}\r\n\r\nexport function removeUserGradeContestAll(): IRemoveUserGradeContestAllActionType {\r\n    return { type: REMOVE_TUTORIAL_TEMPLATE_ALL };\r\n}\r\n\r\nexport function addUserGradeContest(user_grade_contest: IUserGradeContest): IAddUserGradeContestActionType {\r\n    return { type: ADD_TUTORIAL_TEMPLATE, user_grade_contest: user_grade_contest };\r\n}\r\n\r\nexport function editUserGradeContest(user_grade_contest: IUserGradeContest): IEditUserGradeContestActionType {\r\n    return { type: EDIT_TUTORIAL_TEMPLATE, user_grade_contest: user_grade_contest };\r\n}\r\n\r\nexport function removeUserGradeContest(id: string): IRemoveUserGradeContestActionType {\r\n    return { type: REMOVE_TUTORIAL_TEMPLATE, id: id };\r\n}\r\n\r\nexport function changeSelectedUserGradeContest(user_grade_contest: IUserGradeContest): IChangeSelectedUserGradeContestActionType {\r\n    return { type: CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT, user_grade_contest: user_grade_contest };\r\n}\r\n\r\nexport function clearSelectedUserGradeContest(): IClearSelectedUserGradeContestActionType {\r\n    return { type: CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateUserGradeContest(value: UserGradeContestModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddUserGradeContestActionType { type: string, user_grade_contest: IUserGradeContest };\r\ninterface IEditUserGradeContestActionType { type: string, user_grade_contest: IUserGradeContest };\r\ninterface IRemoveUserGradeContestActionType { type: string, id: string };\r\ninterface IChangeSelectedUserGradeContestActionType { type: string, user_grade_contest: IUserGradeContest };\r\ninterface IClearSelectedUserGradeContestActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  UserGradeContestModificationStatus};\r\ninterface IRemoveUserGradeContestAllActionType { type: string }\r\ninterface IInitialUserGradeContestActionType {type: string, user_grade_contest: IUserGradeContest}","import { fetchDataSuccess, fetchDataError, initialUserGradeContest, addUserGradeContest, removeUserGradeContestAll} from \"../../../store/actions/user_grade_contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user_grade_contest {\r\n    id: string;\r\n    contest_id: string;\r\n    teacher_id: string;\r\n    teacher_name: string;\r\n    contest_name: string;\r\n}\r\nexport function getUserGradeContestByContestId(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-grade-contest/contest/${id}?page=0&size=100`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserGradeContestByContestId(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeUserGradeContestAll())\r\n                console.log(data.body.teacher_grade_contest)\r\n                data.body.teacher_grade_contest.map((ele: any, index: any) => {\r\n                    var user_grade_contest: user_grade_contest = {\r\n                        id: ele.id,\r\n                        contest_id: ele.contest_id,\r\n                        teacher_id: ele.teacher_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        contest_name: ele.contest_name\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialUserGradeContest(user_grade_contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addUserGradeContest(user_grade_contest))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, FormEvent, Dispatch, Fragment, useEffect } from \"react\";\r\nimport { IStateType, IContestState, IArtTypeState, IArtAgeState, IUserState, IUserGradeContestState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ContestModificationStatus, IContest } from \"../../store/models/contest.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editContest, clearSelectedContest, setModificationState, addContest } from \"../../store/actions/contest.action\";\r\nimport NumberInput from \"../../common/components/NumberInput\";\r\nimport Checkbox from \"../../common/components/Checkbox\";\r\nimport { OnChangeModel, IContestFormState } from \"../../common/types/Form.types\";\r\nimport { postContest } from \"../../common/service/Contest/PostContest\";\r\nimport { putContest } from \"../../common/service/Contest/PutContest\";\r\nimport SelectKeyValue from \"../../common/components/SelectKeyValue\";\r\nimport { getArtType } from \"../../common/service/ArtType/GetArtType\";\r\nimport { getArtAge } from \"../../common/service/ArtAge/GetArtAge\";\r\nimport { IArtType } from \"../../store/models/art_type.interface\";\r\nimport { IArtAge } from \"../../store/models/art_age.interface\";\r\nimport Editor from \"../../common/components/Quill/Editor\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactSelect from \"../../common/components/ReactSelect\";\r\nimport { IUser } from \"../../store/models/user.interface\";\r\nimport { getUserGradeContestByContestId } from \"../../common/service/UserGradeContest/GetUserGradeContestByContestId\";\r\nimport { getTeacher } from \"../../common/service/Teacher/GetTeacher\";\r\nimport { IUserGradeContest } from \"../../store/models/user_grade_contest.interface\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\ntype Options = {\r\n  name: string;\r\n  value: any;\r\n}\r\n\r\ntype Option1 = {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\nconst ContestForm: React.FC = () => {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const contests: IContestState | null = useSelector((state: IStateType) => state.contests);\r\n  var contest: IContest | null = contests.selectedContest;\r\n  var id_x = localStorage.getItem('contest_id');\r\n  let contest_id: string = \"\";\r\n  if (id_x !== null) {\r\n    contest_id = id_x\r\n  }\r\n\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n  const isCreate: boolean = (contests.modificationState === ContestModificationStatus.Create);\r\n\r\n  if (isCreate || contest === null){\r\n      contest = { id: \"\", name: \"\", total_contest_submission: 0, total_contest_submission_graded: 0, total_register_contest: 0,  description: \"\", max_participant: 0, creator_id: \"\", is_enabled: false, registration_time: \"\", start_time: \"\", end_time: \"\", create_time: \"\", update_time: \"\", image_url: \"https://thumbs.dreamstime.com/b/default-avatar-profile-vector-user-profile-default-avatar-profile-vector-user-profile-profile-179376714.jpg\", art_age_id: \"\", art_type_id: \"\", art_age_name: \"\", art_type_name: \"\" };\r\n  }\r\n  useEffect(() => {\r\n    trackPromise(getArtType(dispatch))\r\n    trackPromise(getArtAge(dispatch))\r\n    trackPromise(getTeacher(dispatch))\r\n    trackPromise(getUserGradeContestByContestId(dispatch, contest_id))\r\n  }, [dispatch, contest_id])\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getArtAge(dispatch))\r\n                    trackPromise(getArtType(dispatch))\r\n                    trackPromise(getTeacher(dispatch))\r\n                    trackPromise(getUserGradeContestByContestId(dispatch, contest_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getArtAge(dispatch))\r\n                trackPromise(getArtType(dispatch))\r\n                trackPromise(getTeacher(dispatch))\r\n                trackPromise(getUserGradeContestByContestId(dispatch, contest_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, contest_id])\r\n  \r\n\r\n  const mytypes: IArtTypeState = useSelector((state: IStateType) => state.art_types);\r\n  const listMytype: IArtType[] = mytypes.artTypes\r\n  const listMytypes: Options[] = [];\r\n  listMytype.map((ele) => {\r\n    let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n    return listMytypes.push(item)\r\n  })\r\n\r\n  const users: IUserState = useSelector((state: IStateType) => state.users);\r\n  const listTeacher: IUser[] = users.teachers\r\n  const listTeachers: Option1[] = [];\r\n  listTeacher.map((ele) => {\r\n    let item: Option1 = { \"label\": ele.username, \"value\": ele.id }\r\n    return listTeachers.push(item)\r\n  })\r\n\r\n  const user_grade_contests: IUserGradeContestState = useSelector((state: IStateType) => state.user_grade_contests);\r\n  const listTeacherGradeContest: IUserGradeContest[] = user_grade_contests.userGradeContests;\r\n  const listTeacherGradeContests: Option1[] = [];\r\n  listTeacherGradeContest.map((ele) => {\r\n    let item: Option1 = { \"label\": ele.teacher_name, \"value\": ele.teacher_id }\r\n    return listTeacherGradeContests.push(item)\r\n  })\r\n\r\n  console.log(listTeacherGradeContests)\r\n  const art_ages: IArtAgeState = useSelector((state: IStateType) => state.art_ages);\r\n  const listArtAge: IArtAge[] = art_ages.artAges\r\n  const listArtAges: Options[] = [];\r\n  listArtAge.map((ele) => {\r\n    let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n    return listArtAges.push(item)\r\n  })\r\n\r\n  const src = contest.image_url;\r\n\r\n  const [preview, setPreview] = useState(src)\r\n\r\n  const [formState, setFormState] = useState({\r\n    name: { error: \"\", value: contest.name },\r\n    description: { error: \"\", value: contest.description },\r\n    max_participant: { error: \"\", value: contest.max_participant },\r\n    registration_time: { error: \"\", value: contest.registration_time },\r\n    is_enabled: { error: \"\", value: contest.is_enabled },\r\n    image_url: { error: \"\", value: contest.image_url },\r\n    start_time: { error: \"\", value: contest.start_time },\r\n    end_time: { error: \"\", value: contest.end_time },\r\n    creator_id: { error: \"\", value: contest.creator_id },\r\n    create_time: { error: \"\", value: contest.create_time },\r\n    update_time: { error: \"\", value: contest.update_time },\r\n    art_age_id: { error: \"\", value: contest.art_age_id },\r\n    art_type_id: { error: \"\", value: contest.art_type_id },\r\n  });\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n  }\r\n\r\n  async function saveUser(e: FormEvent<HTMLFormElement>) {\r\n    e.preventDefault();\r\n    if (isFormInvalid()) {\r\n      return;\r\n    }\r\n\r\n    const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n      position: toast.POSITION.TOP_CENTER\r\n    });\r\n\r\n    var url = await setImageAction();\r\n\r\n    let saveUserFn: Function = (isCreate) ? addContest : editContest;\r\n    saveForm(formState, saveUserFn, url, idx);\r\n  }\r\n\r\n  const history = useHistory();\r\n\r\n  function routeHome() {\r\n      let path = `/contests`;\r\n      history.push(path);\r\n  }\r\n\r\n  function saveForm(formState: IContestFormState, saveFn: Function, url: string, idx: any):void {\r\n    if (contest) {\r\n      if (saveFn === addContest) {\r\n        dispatch(postContest(valueTeacher,{\r\n          name: formState.name.value,\r\n          description: textHtml,\r\n          registration_time: formState.registration_time.value,\r\n          image_url: url,\r\n          is_enabled: formState.is_enabled.value,\r\n          creator_id: localStorage.getItem('id'),\r\n          max_participant: formState.max_participant.value,\r\n          start_time: formState.start_time.value,\r\n          end_time: formState.end_time.value,\r\n          art_age_id: formState.art_age_id.value,\r\n          art_type_id: formState.art_type_id.value\r\n        }, idx, routeHome))\r\n      }\r\n\r\n      else if (saveFn === editContest) {\r\n        dispatch(putContest(contest.id, {\r\n          name: formState.name.value,\r\n          description: textHtml,\r\n          registration_time: formState.registration_time.value,\r\n          image_url: url,\r\n          is_enabled: formState.is_enabled.value,\r\n          creator_id: localStorage.getItem('id'),\r\n          max_participant: formState.max_participant.value,\r\n          start_time: formState.start_time.value,\r\n          end_time: formState.end_time.value,\r\n          art_age_id: formState.art_age_id.value,\r\n          art_type_id: formState.art_type_id.value\r\n        },valueTeacher,  idx, routeHome))\r\n      }\r\n\r\n      dispatch(clearSelectedContest());\r\n      dispatch(setModificationState(ContestModificationStatus.None)); \r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    dispatch(setModificationState(ContestModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid();\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  function isFormInvalid(): boolean {\r\n    return (formState.max_participant.error || formState.description.error\r\n      || formState.name.error || formState.registration_time.error || formState.start_time.error\r\n      || formState.end_time.error || !formState.art_age_id.value || !formState.art_type_id.value\r\n      || !formState.name.value || !formState.registration_time.value || !formState.start_time.value\r\n      || !formState.end_time.value) as boolean;\r\n  }\r\n\r\n  const [textHtml, setTextHtml] = useState<string>(\"\")\r\n  function getValue(value: string) {\r\n    setTextHtml(value);\r\n  }\r\n\r\n\r\n  const [image, setImage] = useState<any>();\r\n\r\n  const uploadPicture = (e: any) => {\r\n    setImage({\r\n      /* contains the preview, if you want to show the picture to the user\r\n          you can access it with this.state.currentPicture\r\n     */\r\n      picturePreview: URL.createObjectURL(e.target.files[0]),\r\n      /* this contains the file we want to send */\r\n      pictureAsFile: e.target.files[0]\r\n    })\r\n    setPreview(URL.createObjectURL(e.target.files[0]))\r\n  };\r\n\r\n  async function setImageAction() {\r\n    const formData = new FormData();\r\n    formData.append(\r\n      \"gifFile\",\r\n      image.pictureAsFile\r\n    );\r\n    // do your post request\r\n    const res = await fetch(\r\n      `${process.env.REACT_APP_API_URL}/cloudinary/gifs`, {\r\n      method: \"POST\",\r\n      body: formData\r\n    }\r\n    )\r\n    const data = await res.json()\r\n    return data.url_image\r\n\r\n  };\r\n\r\n  const [valueTeacher, setValueTeacher] = useState<any[]>([])\r\n\r\n  function changeValueTeacher(value: any){\r\n    setValueTeacher(value)\r\n  }\r\n\r\n  return (\r\n    promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n      <ToastContainer />\r\n      <div className=\"col-xl-12 col-lg-12\">\r\n        <div className=\"card shadow mb-4\">\r\n          <div className=\"card-header py-3\">\r\n            <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} cuộc thi</h6>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={saveUser}>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <label htmlFor=\"profile_image\">Chọn ảnh:</label>\r\n                  <input type=\"file\" id=\"profile_image\" name=\"profile_image\" onChange={uploadPicture} />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <img src={preview} alt=\"Preview\" id=\"avatar\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                  <TextInput id=\"input_name\"\r\n                    field=\"name\"\r\n                    value={formState.name.value}\r\n                    onChange={hasFormValueChanged}\r\n                    required={false}\r\n                    maxLength={100}\r\n                    label=\"Tên khóa học\"\r\n                    placeholder=\"\" />\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <SelectKeyValue id=\"input_art_type_id\"\r\n                    field=\"art_type_id\"\r\n                    value={formState.art_type_id.value}\r\n                    onChange={hasFormValueChanged}\r\n                    required={true}\r\n                    label=\"Thể loại\"\r\n                    options={listMytypes}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <SelectKeyValue\r\n                    id=\"input_art_age_id\"\r\n                    field=\"art_age_id\"\r\n                    label=\"Mức độ\"\r\n                    options={listArtAges}\r\n                    required={true}\r\n                    onChange={hasFormValueChanged}\r\n                    value={formState.art_age_id.value}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <Checkbox\r\n                    id=\"input_is_enabled\"\r\n                    field=\"is_enabled\"\r\n                    value={formState.is_enabled.value}\r\n                    onChange={hasFormValueChanged}\r\n                    required={false}\r\n                    label=\"Mở\"\r\n                  />\r\n                </div>\r\n                  <div className=\"form-group col-md-6\">\r\n                    <label>Giáo viên chấm</label>\r\n                    <ReactSelect setValue={listTeachers} value={listTeacherGradeContests} changeValue={changeValueTeacher}/>\r\n                  </div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <NumberInput id=\"input_max_participant\"\r\n                    value={formState.max_participant.value}\r\n                    field=\"max_participant\"\r\n                    onChange={hasFormValueChanged}\r\n                    max={1000}\r\n                    min={0}\r\n                    label=\"Số người đăng kí tối đa\" />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <TextInput id=\"input_registration_time\"\r\n                    field=\"registration_time\"\r\n                    value={formState.registration_time.value}\r\n                    onChange={hasFormValueChanged}\r\n                    type=\"datetime-local\"\r\n                    required={false}\r\n                    maxLength={100}\r\n                    label=\"Thời gian bắt đầu đăng kí\"\r\n                    placeholder=\"\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <TextInput id=\"input_start_time\"\r\n                    field=\"start_time\"\r\n                    value={formState.start_time.value}\r\n                    onChange={hasFormValueChanged}\r\n                    type=\"datetime-local\"\r\n                    required={false}\r\n                    maxLength={100}\r\n                    label=\"Thời gian bắt đầu cuộc thi\"\r\n                    placeholder=\"\" />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <TextInput id=\"input_end_time\"\r\n                    field=\"end_time\"\r\n                    value={formState.end_time.value}\r\n                    onChange={hasFormValueChanged}\r\n                    type=\"datetime-local\"\r\n                    required={false}\r\n                    maxLength={100}\r\n                    label=\"Thời gian kết thúc cuộc thi\"\r\n                    placeholder=\"\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Miêu tả</label>\r\n                <Editor getValue={getValue} isCreate={isCreate} setValue={formState.description.value} />\r\n              </div>\r\n\r\n              <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n              <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ContestForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postUserGradeContest } from \"../UserGradeContest/PostUserGradeContest\";\r\nimport { getContest } from \"./GetContest\";\r\n\r\nexport function postContest(lst: any[], contest: any, idx: any, routeHome: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(contest)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postContest(lst,contest,idx, routeHome))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                getContest(dispatch)\r\n                lst.map((value, index) =>  {\r\n                    return dispatch(postUserGradeContest({\r\n                        contest_id: data.id,\r\n                        teacher_id: value.value\r\n                    }))\r\n                })\r\n                toast.update(idx, { render: \"Thêm cuộc thi thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                setTimeout(function () {\r\n                    routeHome(true);\r\n                }, 2000); \r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Thêm cuộc thi không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch, Fragment, useEffect } from \"react\";\r\nimport { IStateType, IRootPageStateType, IArtLevelState, IArtTypeState, IArtAgeState, ICourseState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ICourse, CourseModificationStatus } from \"../../store/models/course.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editCourse, clearSelectedCourse, setModificationState, addCourse } from \"../../store/actions/course.action\";\r\nimport NumberInput from \"../../common/components/NumberInput\";\r\nimport Checkbox from \"../../common/components/Checkbox\";\r\nimport { OnChangeModel, ICourseNomalFormState } from \"../../common/types/Form.types\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport Editor from \"../../common/components/Quill/Editor\";\r\nimport { IArtLevel } from \"../../store/models/art_level.interface\";\r\nimport { IArtType } from \"../../store/models/art_type.interface\";\r\nimport { IArtAge } from \"../../store/models/art_age.interface\";\r\nimport SelectKeyValue from \"../../common/components/SelectKeyValue\";\r\nimport { getArtType } from \"../../common/service/ArtType/GetArtType\";\r\nimport { getArtLevel } from \"../../common/service/ArtLevel/GetArtLevel\";\r\nimport { getArtAge } from \"../../common/service/ArtAge/GetArtAge\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getCourse } from \"../../common/service/Course/GetCourse\";\r\n\r\nimport { postCourse } from \"../../common/service/Course/PostCourse\";\r\nimport { putCourse } from \"../../common/service/Course/PutCourse\";\r\nimport { toast } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\ntype Options = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\n\r\nconst CourseNomalFormEdit: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const courses: ICourseState = useSelector((state: IStateType) => state.courses);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n    //console.log(course)\r\n    const isCreate: boolean = false;\r\n    let course: ICourse | null = courses.selectedCourse;\r\n    console.log(course)\r\n    if (!course || isCreate) {\r\n        course = { id: \"\", name: \"\", description: \"\", max_participant: 0, num_of_section: 0, price: 0, image_url: \"\", is_enabled: false, creator_id: \"\", art_age_id: \"\", art_level_id: \"\", art_type_id: \"\", create_time: \"\", update_time: \"\", art_age_name: \"\", art_level_name:\"\", art_type_name: \"\", checked_tutoral: false };\r\n    }\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khóa học\", \"\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    useEffect(() => {\r\n        trackPromise(getCourse(dispatch))\r\n        trackPromise(getArtType(dispatch))\r\n        trackPromise(getArtLevel(dispatch))\r\n        trackPromise(getArtAge(dispatch))\r\n\r\n    }, [dispatch])\r\n\r\n    const levels: IArtLevelState = useSelector((state: IStateType) => state.art_levels);\r\n    const listLevel: IArtLevel[] = levels.artLevels\r\n    //console.log(listLevel)\r\n    const listLevels: Options[] = [];\r\n    listLevel.map((ele) => {\r\n        let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n        return listLevels.push(item)\r\n    })\r\n\r\n    const mytypes: IArtTypeState = useSelector((state: IStateType) => state.art_types);\r\n    const listMytype: IArtType[] = mytypes.artTypes\r\n    const listMytypes: Options[] = [];\r\n    listMytype.map((ele) => {\r\n        let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n        return listMytypes.push(item)\r\n    })\r\n\r\n    const art_ages: IArtAgeState = useSelector((state: IStateType) => state.art_ages);\r\n    const listArtAge: IArtAge[] = art_ages.artAges\r\n    const listArtAges: Options[] = [];\r\n    listArtAge.map((ele) => {\r\n        let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n        return listArtAges.push(item)\r\n    })\r\n\r\n    const src = course.image_url;\r\n\r\n    const [formState, setFormState] = useState({\r\n        name: { error: \"\", value: course.name },\r\n        description: { error: \"\", value: course.description },\r\n        art_type_id: { error: \"\", value: course.art_type_id },\r\n        art_level_id: { error: \"\", value: course.art_level_id },\r\n        art_age_id: { error: \"\", value: course.art_age_id },\r\n        num_of_section: { error: \"\", value: course.num_of_section },\r\n        price: { error: \"\", value: course.price },\r\n        image_url: { error: \"\", value: course.image_url },\r\n        is_enabled: { error: \"\", value: course.is_enabled },\r\n        creator_id: { error: \"\", value: course.creator_id },\r\n        create_time: { error: \"\", value: course.create_time },\r\n        update_time: { error: \"\", value: course.update_time }\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    function routeHome() {\r\n        dispatch(setModificationState(CourseModificationStatus.None));\r\n        let path = `/courses`;\r\n        history.push(path);\r\n    }\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    async function saveUser(e: FormEvent<HTMLFormElement>){\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        var url = await setImageAction();\r\n\r\n        let saveUserFn: Function = (isCreate) ? addCourse : editCourse;\r\n        saveForm(formState, saveUserFn, url);\r\n    }\r\n\r\n    function saveForm(formState: ICourseNomalFormState, saveFn: Function, url: string): void {\r\n        if (course) {\r\n            const id = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n\r\n            if (saveFn === addCourse) {\r\n                dispatch(postCourse({\r\n                    name: formState.name.value,\r\n                    description: textHtml,\r\n                    num_of_section: formState.num_of_section.value,\r\n                    price: formState.price.value,\r\n                    image_url: url,\r\n                    is_enabled: formState.is_enabled.value,\r\n                    art_type_id: formState.art_type_id.value,\r\n                    art_age_id: formState.art_age_id.value,\r\n                    art_level_id: formState.art_level_id.value,\r\n                    creator_id: localStorage.getItem('id')\r\n                }, id))\r\n            }\r\n\r\n            else if (saveFn === editCourse) {\r\n                dispatch(putCourse(course.id, {\r\n                    name: formState.name.value,\r\n                    description: textHtml,\r\n                    num_of_section: formState.num_of_section.value,\r\n                    price: formState.price.value,\r\n                    image_url: url,\r\n                    is_enabled: formState.is_enabled.value,\r\n                    art_type_id: formState.art_type_id.value,\r\n                    art_age_id: formState.art_age_id.value,\r\n                    art_level_id: formState.art_level_id.value,\r\n                    creator_id: localStorage.getItem('id')\r\n                }, id))\r\n            }\r\n\r\n            dispatch(clearSelectedCourse());\r\n            dispatch(setModificationState(CourseModificationStatus.None));\r\n            setTimeout(function () {\r\n                routeHome();\r\n            }, 2000); \r\n        }\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        dispatch(setModificationState(CourseModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.description.error\r\n            || formState.name.error || formState.num_of_section.error || formState.price.error\r\n            || formState.image_url.error || !formState.name.value || !formState.num_of_section.value) as boolean;\r\n    }\r\n\r\n    const [textHtml, setTextHtml] = useState<string>(\"\")\r\n    function getValue(value: string) {\r\n        setTextHtml(value);\r\n    }\r\n\r\n    const [image, setImage] = useState<any>(null);\r\n\r\n    const uploadPicture = (e: any) => {\r\n        setImage({\r\n            /* contains the preview, if you want to show the picture to the user\r\n                you can access it with this.state.currentPicture\r\n           */\r\n            picturePreview : URL.createObjectURL(e.target.files[0]),\r\n            /* this contains the file we want to send */\r\n            pictureAsFile : e.target.files[0]\r\n        })\r\n    };\r\n\r\n    async function setImageAction(){\r\n        if (image === null && course){\r\n            return course.image_url\r\n        }\r\n        else {\r\n            const formData = new FormData();\r\n            formData.append(\r\n                \"gifFile\",\r\n                image.pictureAsFile\r\n            );\r\n            // do your post request\r\n            const res = await fetch(\r\n                `${process.env.REACT_APP_API_URL}/cloudinary/gifs`, {\r\n                    method: \"POST\",\r\n                    body: formData\r\n                }\r\n            )\r\n            const data = await res.json()\r\n            return data.url_image\r\n        }\r\n    };\r\n\r\n    //console.log('Input',textHtml)\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n\r\n            <div className=\"col-xl-12 col-lg-12\">\r\n                <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} khóa học chung</h6>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={saveUser}>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label htmlFor=\"profile_image\">Chọn ảnh:</label>\r\n                                    <input type=\"file\" id=\"profile_image\" name=\"profile_image\" onChange={uploadPicture}/>\r\n                                </div>\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <img src={src} alt=\"Preview\" id=\"avatar\"/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <TextInput id=\"input_name\"\r\n                                        field=\"name\"\r\n                                        value={formState.name.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        maxLength={100}\r\n                                        label=\"Tên khóa học\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <NumberInput id=\"input_price\"\r\n                                        value={formState.price.value}\r\n                                        field=\"price\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        max={10000000}\r\n                                        min={0}\r\n                                        label=\"Giá\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                <SelectKeyValue id=\"input_art_type_id\"\r\n                                    field = \"art_type_id\"\r\n                                    value={formState.art_type_id.value}\r\n                                    onChange={hasFormValueChanged}\r\n                                    required={true}\r\n                                    label=\"Thể loại\"\r\n                                    options={listMytypes}\r\n                                />\r\n                                </div>\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <SelectKeyValue\r\n                                        id=\"input_art_level_id\"\r\n                                        field=\"art_level_id\"\r\n                                        label=\"Mức độ\"\r\n                                        options={listLevels}\r\n                                        required={true}\r\n                                        onChange={hasFormValueChanged}\r\n                                        value={formState.art_level_id.value}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <SelectKeyValue\r\n                                        id=\"input_art_age_id\"\r\n                                        field=\"art_age_id\"\r\n                                        label=\"Mức độ\"\r\n                                        options={listArtAges}\r\n                                        required={true}\r\n                                        onChange={hasFormValueChanged}\r\n                                        value={formState.art_age_id.value}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <Checkbox\r\n                                        id=\"input_is_enabled\"\r\n                                        field=\"is_enabled\"\r\n                                        value={formState.is_enabled.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        label=\"Mở\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <NumberInput id=\"input_num_of_section\"\r\n                                        value={formState.num_of_section.value}\r\n                                        field=\"num_of_section\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        max={1000}\r\n                                        min={0}\r\n                                        label=\"Số buổi học\" \r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Miêu tả</label>\r\n                                <Editor getValue={getValue} isCreate={isCreate} setValue={formState.description.value}/>\r\n                            </div>\r\n\r\n                            <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                            <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default CourseNomalFormEdit;\r\n","import React, { useState, FormEvent, Dispatch, Fragment, useEffect } from \"react\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editTeacher, clearSelectedUser, setModificationState, addTeacher } from \"../../store/actions/users.action\";\r\nimport { OnChangeModel, IUser1FormState } from \"../../common/types/Form.types\";\r\nimport { postTeacher } from \"../../common/service/Teacher/PostTeacher\";\r\nimport { putTeacher } from \"../../common/service/Teacher/PutTeacher\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport SelectInput from \"../../common/components/Select\";\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nexport type teacherListProps = {\r\n    isCheck: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nconst Account: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const id = localStorage.getItem('id')\r\n    const { promiseInProgress } = usePromiseTracker();\r\n    useEffect(() => {\r\n        trackPromise(getUserById(dispatch, id))\r\n    }, [dispatch, id])\r\n    var role_privilege = localStorage.getItem('role_privilege')\r\n    let rolePrivilege: any = []\r\n    let userRole: any = \"\"\r\n    if (role_privilege !== null) {\r\n        rolePrivilege = (role_privilege.split(','))\r\n        userRole = (rolePrivilege[0])\r\n    }\r\n    let users: IUserState = useSelector((state: IStateType) => state.users);\r\n    console.log(users.teachers)\r\n\r\n    let user =  users.teachers.length > 0 ? users.teachers[0] : { id: \"\", username: \"\", email: \"\", status: true, firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: \"\" }\r\n\r\n    console.log(user)\r\n    let [formState, setFormState] = useState({\r\n        username: { error: \"\", value: user.username },\r\n        email: { error: \"\", value: user.email },\r\n        password: { error: \"\", value: \"\" },\r\n        firstName: { error: \"\", value: user.firstName },\r\n        lastName: { error: \"\", value: user.lastName },\r\n        dateOfBirth: { error: \"\", value: user.dateOfBirth },\r\n        profile_image_url: { error: \"\", value: user.profile_image_url },\r\n        sex: { error: \"\", value: user.sex },\r\n        phone: { error: \"\", value: user.phone },\r\n        address: { error: \"\", value: user.address }\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    async function saveUser(e: FormEvent<HTMLFormElement>) {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        const id = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n        var url = await setImageAction();\r\n        let saveUserFn: Function =editTeacher;\r\n        saveForm(formState, saveUserFn, url, id);\r\n    }\r\n\r\n    function saveForm(formState: IUser1FormState, saveFn: Function, url: string, id: any): void {\r\n        if (user) {\r\n            \r\n            let username = formState.username.value === \"\" ? user.username : formState.username.value;\r\n            let email = formState.email.value === \"\" ? user.email : formState.email.value;\r\n            let firstName = formState.firstName.value === \"\" ? user.firstName : formState.firstName.value;\r\n            let lastName = formState.lastName.value === \"\" ? user.lastName : formState.lastName.value;\r\n            let dateOfBirth = formState.dateOfBirth.value === \"\" ? user.dateOfBirth : formState.dateOfBirth.value;\r\n            let sex = formState.sex.value === \"\" ? user.sex : formState.sex.value;\r\n            let phone = formState.phone.value === \"\" ? user.phone : formState.phone.value;\r\n            let address = formState.address.value === \"\" ? user.address : formState.address.value\r\n            let url_x = url === \"\" ? user.profile_image_url : url;\r\n\r\n            if (saveFn === addTeacher) {\r\n                dispatch(postTeacher({\r\n                    username: username,\r\n                    email: email,\r\n                    password: \"\",\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    dateOfBirth: dateOfBirth,\r\n                    profile_image_url: url_x,\r\n                    sex: sex,\r\n                    phone: phone,\r\n                    address: address,\r\n                    parent_ids: user.parents,\r\n                    roleNames: [userRole]\r\n                }, id));\r\n            }\r\n\r\n            else if (saveFn === editTeacher) {\r\n                dispatch(putTeacher(user.id, {\r\n                    username: username,\r\n                    email: email,\r\n                    password: \"\",\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    dateOfBirth: dateOfBirth,\r\n                    profile_image_url: url_x,\r\n                    sex: sex,\r\n                    phone: phone,\r\n                    address: address,\r\n                    parent_ids: user.parents,\r\n                    roleNames: [userRole]\r\n                }, id));\r\n            }\r\n\r\n            dispatch(clearSelectedUser());\r\n            dispatch(setModificationState(UserModificationStatus.None));\r\n        }\r\n    }\r\n\r\n    console.log(formState)\r\n\r\n    function cancelForm(): void {\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return ((!formState.email.value && user.email === \"\") || (!formState.username.value && user.username === \"\")\r\n             ) as boolean;\r\n    }\r\n\r\n    let src = user.profile_image_url;\r\n\r\n    const [preview, setPreview] = useState(src)\r\n    const [image, setImage] = useState<any>();\r\n\r\n    const uploadPicture = (e: any) => {\r\n        setImage({\r\n            /* contains the preview, if you want to show the picture to the user\r\n                you can access it with this.state.currentPicture\r\n           */\r\n            picturePreview : URL.createObjectURL(e.target.files[0]),\r\n            /* this contains the file we want to send */\r\n            pictureAsFile : e.target.files[0]\r\n        })\r\n        setPreview(URL.createObjectURL(e.target.files[0]))\r\n    };\r\n\r\n    async function setImageAction(){\r\n        const formData = new FormData();\r\n        if (image === undefined){\r\n            return \"\"\r\n        }\r\n        else {\r\n            formData.append(\r\n                \"gifFile\",\r\n                image.pictureAsFile\r\n            );\r\n            // do your post request\r\n            const res = await fetch(\r\n                `${process.env.REACT_APP_API_URL}/cloudinary/gifs`, {\r\n                    method: \"POST\",\r\n                    body: formData\r\n                }\r\n            )\r\n            const data = await res.json()\r\n            return data.url_image\r\n        }\r\n    };\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Chỉnh thông tin cá nhân</h6>\r\n                        </div>\r\n                        <ToastContainer />\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <label htmlFor=\"profile_image\">Chọn ảnh:</label>\r\n                                        <input type=\"file\" id=\"profile_image\" name=\"profile_image\" onChange={uploadPicture} />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <img src={preview === \"\" ? user.profile_image_url : preview} alt=\"Preview\" id=\"avatar\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_username\"\r\n                                            field=\"username\"\r\n                                            value={formState.username.value === \"\" ? user.username : formState.username.value}\r\n                                            onChange={hasFormValueChanged}\r\n                                            required={true}\r\n                                            maxLength={100}\r\n                                            label=\"Tên đăng nhập\"\r\n                                            placeholder=\"\" />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_email\"\r\n                                            field=\"email\"\r\n                                            value={formState.email.value === \"\" ? user.email : formState.email.value}\r\n                                            onChange={hasFormValueChanged}\r\n                                            required={true}\r\n                                            maxLength={200}\r\n                                            label=\"Email\"\r\n                                            placeholder=\"\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_firstName\"\r\n                                            field=\"firstName\"\r\n                                            value={formState.firstName.value === \"\" ? user.firstName : formState.firstName.value}\r\n                                            onChange={hasFormValueChanged}\r\n                                            required={false}\r\n                                            maxLength={100}\r\n                                            label=\"Họ\"\r\n                                            placeholder=\"\" />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_lastName\"\r\n                                            field=\"lastName\"\r\n                                            value={formState.lastName.value === \"\" ? user.lastName : formState.lastName.value}\r\n                                            onChange={hasFormValueChanged}\r\n                                            required={false}\r\n                                            maxLength={200}\r\n                                            label=\"Tên\"\r\n                                            placeholder=\"\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                    <SelectInput\r\n                                        id=\"input_sex\"\r\n                                        field=\"sex\"\r\n                                        label=\"Giới tính\"\r\n                                        options={[\"Nam\", \"Nữ\"]}\r\n                                        required={true}\r\n                                        onChange={hasFormValueChanged}\r\n                                        value={formState.sex.value === \"\" ? user.sex : formState.sex.value}\r\n                                    />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_phone\"\r\n                                            field=\"phone\"\r\n                                            value={formState.phone.value === \"\" ? user.phone : formState.phone.value}\r\n                                            onChange={hasFormValueChanged}\r\n                                            required={false}\r\n                                            maxLength={200}\r\n                                            label=\"Số điện thoại\"\r\n                                            placeholder=\"\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_address\"\r\n                                        field=\"address\"\r\n                                        value={formState.address.value === \"\" ? user.address : formState.address.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        maxLength={200}\r\n                                        label=\"Địa chỉ\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_dateOfBirth\"\r\n                                            field=\"dateOfBirth\"\r\n                                            value={formState.dateOfBirth.value === \"\" ? user.dateOfBirth : formState.dateOfBirth.value}\r\n                                            onChange={hasFormValueChanged}\r\n                                            type=\"date\"\r\n                                            required={false}\r\n                                            maxLength={200}\r\n                                            label=\"Ngày sinh\"\r\n                                            placeholder=\"\" />\r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useState, FormEvent, Dispatch, Fragment, useEffect } from \"react\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editTeacher, clearSelectedUser, setModificationState, addTeacher } from \"../../store/actions/users.action\";\r\nimport { OnChangeModel, IUser1FormState } from \"../../common/types/Form.types\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\nimport { putPassword } from \"../../common/service/User/UpdatePassword\";\r\n\r\nexport type teacherListProps = {\r\n    isCheck: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction ChangePassword(): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    \r\n    const id = localStorage.getItem('id')\r\n    let user_id: string = \"\";\r\n    if (id !== null) {\r\n        user_id = id\r\n    }\r\n    useEffect(() => {\r\n        getUserById(dispatch, user_id)\r\n    }, [dispatch, user_id])\r\n    let user: IUser = users.teachers[0];\r\n    const isCreate: boolean = (users.modificationState === UserModificationStatus.Create);\r\n\r\n    if (!user || isCreate) {\r\n        user = { id: \"\", username: \"\", email: \"\", password: \"\", status: \"\", firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: \"\" };\r\n    }\r\n\r\n    const [formState, setFormState] = useState({\r\n        username: { error: \"\", value: user.username },\r\n        email: { error: \"\", value: user.email },\r\n        password: { error: \"\", value: \"\" },\r\n        firstName: { error: \"\", value: user.firstName },\r\n        lastName: { error: \"\", value: user.lastName },\r\n        dateOfBirth: { error: \"\", value: user.dateOfBirth },\r\n        profile_image_url: { error: \"\", value: user.profile_image_url },\r\n        sex: { error: \"\", value: user.sex },\r\n        phone: { error: \"\", value: user.phone },\r\n        address: { error: \"\", value: user.address }\r\n    });\r\n\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        let saveUserFn: Function = (isCreate) ? addTeacher : editTeacher;\r\n        saveForm(formState, saveUserFn);\r\n    }\r\n\r\n    function saveForm(formState: IUser1FormState, saveFn: Function): void {\r\n        if (user) {\r\n            const idx = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n\r\n            dispatch(putPassword(user.id, {\r\n                    pre_password: formState.username.value,\r\n                    new_password: formState.phone.value\r\n            }, idx));\r\n            \r\n            dispatch(clearSelectedUser());\r\n            dispatch(setModificationState(UserModificationStatus.None));\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function cancelForm(): void {\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.username.error || formState.phone.error\r\n            || !formState.username.value || !formState.phone.value ) as boolean;\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Thay đổi mật khẩu</h6>\r\n                        </div>\r\n                        <ToastContainer />\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <TextInput id=\"input_username\"\r\n                                        field=\"username\"\r\n                                        value={formState.username.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={100}\r\n                                        label=\"Mật khẩu cũ\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_phone\"\r\n                                            field=\"phone\"\r\n                                            value={formState.phone.value}\r\n                                            onChange={hasFormValueChanged}\r\n                                            required={true}\r\n                                            maxLength={200}\r\n                                            label=\"Mật khẩu mới\"\r\n                                            placeholder=\"\" />\r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess, fetchDataError } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function putPassword(id: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/change-password/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putPassword(id,data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                console.log(id)\r\n                toast.update(idx, { render: \"Thay đổi mật khẩu thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataSuccess(data))\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Thay đổi mật khẩu không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IUserGradeContestSubmissionState } from \"../../store/models/root.interface\";\r\nimport { IUserRegisterJoinSemester } from \"../../store/models/user_register_join_semester.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport type user_register_semesterListProps = {\r\n    onSelect?: (user_register_semester: IUserRegisterJoinSemester) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\n\r\nfunction TopStudent(props: user_register_semesterListProps): JSX.Element {\r\n    const user_gradee_contest_submissions: IUserGradeContestSubmissionState = useSelector((state: IStateType) => state.user_grade_contest_submissions);\r\n    const history = useHistory();\r\n\r\n    const routeChange = () => {\r\n        let path = '/semester-class/detail';\r\n        history.push(path);\r\n    }\r\n\r\n\r\n    const user_register_semesterElements: (JSX.Element | null)[] = user_gradee_contest_submissions.userGradeContestSubmissions.map((user_register_semester, index) => {\r\n        if (!user_register_semester) { return null; }\r\n        return (<tr className={`table-row`}\r\n            key={`user_register_semester_${index}`}>\r\n            <th scope=\"row\">{index + 1}</th>\r\n            <td onClick={routeChange}>{user_register_semester.student_name}</td>\r\n            <td onClick={routeChange}>{user_register_semester.score}</td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"table-responsive portlet\">\r\n            <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Tên</th>\r\n                        <th scope=\"col\">Điểm</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {user_register_semesterElements}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default TopStudent;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IContestSubmissionState, IStateType, IUserGradeContestState } from \"../../store/models/root.interface\";\r\nimport { IUserRegisterJoinSemester } from \"../../store/models/user_register_join_semester.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport type user_grade_contestListProps = {\r\n    onSelect?: (user_grade_contest: IUserRegisterJoinSemester) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction TopTeacher(props: user_grade_contestListProps): JSX.Element {\r\n    const user_grade_contests: IUserGradeContestState = useSelector((state: IStateType) => state.user_grade_contests);\r\n    const contest_submissions: IContestSubmissionState = useSelector((state: IStateType) => state.contest_submissions);\r\n    \r\n    const history = useHistory();\r\n\r\n    const routeChange = () => {\r\n        let path = '/semester-class/detail';\r\n        history.push(path);\r\n    }\r\n\r\n\r\n    let total = Math.round((contest_submissions.contest_gradeds.length+ contest_submissions.contest_not_gradeds.length) / user_grade_contests.userGradeContests.length);\r\n    const user_grade_contestElements: (JSX.Element | null)[] = user_grade_contests.userGradeContests.map((user_grade_contest, index) => {\r\n        if (!user_grade_contest) { return null; }\r\n        if (index === user_grade_contests.userGradeContests.length - 1){\r\n            return (<tr className={`table-row `}\r\n                key={`user_grade_contest_${index}`}>\r\n                <th scope=\"row\">{index + 1}</th>\r\n                <td onClick={routeChange}>{user_grade_contest.teacher_name}</td>\r\n                <th scope=\"row\">{(contest_submissions.contest_gradeds.length+ contest_submissions.contest_not_gradeds.length) - total*index}</th>\r\n                <th scope=\"row\"></th>\r\n            </tr>);\r\n        }\r\n        return (<tr className={`table-row }`}\r\n            key={`user_grade_contest_${index}`}>\r\n            <th scope=\"row\">{index + 1}</th>\r\n            <td onClick={routeChange}>{user_grade_contest.teacher_name}</td>\r\n            <th scope=\"row\">{total}</th>\r\n            <th scope=\"row\"></th>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"table-responsive portlet\">\r\n            <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Tên</th>\r\n                        <th scope=\"col\">Số bài được giao</th>\r\n                        <th scope=\"col\">Đã chấm</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {user_grade_contestElements}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default TopTeacher;\r\n","import { IUserGradeContestSubmission, UserGradeContestSubmissionModificationStatus } from \"../models/user_grade_contest_submission.interface\";\r\nexport const ADD_USER_GRADE_CONTEST_SUBMISSION: string = \"ADD_USER_GRADE_CONTEST_SUBMISSION\";\r\nexport const EDIT_USER_GRADE_CONTEST_SUBMISSION: string = \"EDIT_USER_GRADE_CONTEST_SUBMISSION\";\r\nexport const REMOVE_USER_GRADE_CONTEST_SUBMISSION: string = \"REMOVE_USER_GRADE_CONTEST_SUBMISSION\";\r\nexport const CHANGE_USER_GRADE_CONTEST_SUBMISSION_AMOUNT: string = \"CHANGE_USER_GRADE_CONTEST_SUBMISSION_AMOUNT\";\r\nexport const CHANGE_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT: string = \"CHANGE_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT\";\r\nexport const CLEAR_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT: string = \"CLEAR_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_USER_GRADE_CONTEST_SUBMISSION_ALL: string = \"REMOVE_USER_GRADE_CONTEST_SUBMISSION_ALL\";\r\nexport const INITIAL_USER_GRADE_CONTEST_SUBMISSION: string = \"INITIAL_USER_GRADE_CONTEST_SUBMISSION\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(user_grade_contest_submission: IUserGradeContestSubmission) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        user_grade_contest_submission\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialUserGradeContestSubmission(user_grade_contest_submission: IUserGradeContestSubmission): IInitialUserGradeContestSubmissionActionType {\r\n    return { type: INITIAL_USER_GRADE_CONTEST_SUBMISSION, user_grade_contest_submission: user_grade_contest_submission };\r\n}\r\n\r\nexport function removeUserGradeContestSubmissionAll(): IRemoveUserGradeContestSubmissionAllActionType {\r\n    return { type: REMOVE_USER_GRADE_CONTEST_SUBMISSION_ALL };\r\n}\r\n\r\nexport function addUserGradeContestSubmission(user_grade_contest_submission: IUserGradeContestSubmission): IAddUserGradeContestSubmissionActionType {\r\n    return { type: ADD_USER_GRADE_CONTEST_SUBMISSION, user_grade_contest_submission: user_grade_contest_submission };\r\n}\r\n\r\nexport function editUserGradeContestSubmission(user_grade_contest_submission: IUserGradeContestSubmission): IEditUserGradeContestSubmissionActionType {\r\n    return { type: EDIT_USER_GRADE_CONTEST_SUBMISSION, user_grade_contest_submission: user_grade_contest_submission };\r\n}\r\n\r\nexport function removeUserGradeContestSubmission(id: string): IRemoveUserGradeContestSubmissionActionType {\r\n    return { type: REMOVE_USER_GRADE_CONTEST_SUBMISSION, id: id };\r\n}\r\n\r\nexport function changeSelectedUserGradeContestSubmission(user_grade_contest_submission: IUserGradeContestSubmission): IChangeSelectedUserGradeContestSubmissionActionType {\r\n    return { type: CHANGE_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT, user_grade_contest_submission: user_grade_contest_submission };\r\n}\r\n\r\nexport function clearSelectedUserGradeContestSubmission(): IClearSelectedUserGradeContestSubmissionActionType {\r\n    return { type: CLEAR_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateUserGradeContestSubmission(value: UserGradeContestSubmissionModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddUserGradeContestSubmissionActionType { type: string, user_grade_contest_submission: IUserGradeContestSubmission };\r\ninterface IEditUserGradeContestSubmissionActionType { type: string, user_grade_contest_submission: IUserGradeContestSubmission };\r\ninterface IRemoveUserGradeContestSubmissionActionType { type: string, id: string };\r\ninterface IChangeSelectedUserGradeContestSubmissionActionType { type: string, user_grade_contest_submission: IUserGradeContestSubmission };\r\ninterface IClearSelectedUserGradeContestSubmissionActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  UserGradeContestSubmissionModificationStatus};\r\ninterface IRemoveUserGradeContestSubmissionAllActionType { type: string }\r\ninterface IInitialUserGradeContestSubmissionActionType {type: string, user_grade_contest_submission: IUserGradeContestSubmission}","import { fetchDataSuccess, fetchDataError, removeUserGradeContestSubmissionAll, addUserGradeContestSubmission} from \"../../../store/actions/user_grade_contest_submission.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user_grade_contest {\r\n    student_id: string;\r\n    teacher_name: string;\r\n    teacher_id: string;\r\n    student_name: string;\r\n    contest_id: string;\r\n    contest_name: string;\r\n    contest_submission_id: string;\r\n    feedback: string;\r\n    score: number;\r\n    time: string;\r\n}\r\nexport function getUserGradeContestSubmissionByContestId(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-grade-contest-submission/contest/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserGradeContestSubmissionByContestId(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeUserGradeContestSubmissionAll())\r\n                console.log(data.body.UserGradeContestSubmission)\r\n                data.body.UserGradeContestSubmission.map((ele: any, index: any) => {\r\n                    var user_grade_contest: user_grade_contest = {\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        teacher_id: ele.teacher_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        contest_id: ele.contest_id,\r\n                        contest_name: ele.contest_name,\r\n                        contest_submission_id: ele.contest_submission_id,\r\n                        feedback: ele.feedback,\r\n                        score: ele.score,\r\n                        time: ele.time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addUserGradeContestSubmission(user_grade_contest))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { IContestSubmission, ContestSubmissionModificationStatus } from \"../models/contest_submission.interface\";\r\n\r\n// register_successfull_contest_submissions\r\nexport const ADD_EXERCISE_SUBMISSION_NOT_GRADED: string = \"ADD_EXERCISE_SUBMISSION_NOT_GRADED\";\r\nexport const EDIT_EXERCISE_SUBMISSION_NOT_GRADED: string = \"EDIT_EXERCISE_SUBMISSION_NOT_GRADED\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_NOT_GRADED: string = \"REMOVE_EXERCISE_SUBMISSION_NOT_GRADED\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_AMOUNT: string = \"CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: string = \"CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: string = \"CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL: string = \"REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL\";\r\nexport const INITIAL_EXERCISE_SUBMISSION_NOT_GRADED: string = \"INITIAL_EXERCISE_SUBMISSION_NOT_GRADED\";\r\n\r\n// not_register_contest_submissions\r\nexport const ADD_EXERCISE_SUBMISSION_GRADED: string = \"ADD_EXERCISE_SUBMISSION_GRADED\";\r\nexport const EDIT_EXERCISE_SUBMISSION_GRADED: string = \"EDIT_EXERCISE_SUBMISSION_GRADED\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_GRADED: string = \"REMOVE_EXERCISE_SUBMISSION_GRADED\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_GRADED_AMOUNT: string = \"CHANGE_EXERCISE_SUBMISSION_GRADED_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: string = \"CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: string = \"CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_GRADED_ALL: string = \"REMOVE_EXERCISE_SUBMISSION_GRADED_ALL\";\r\nexport const INITIAL_EXERCISE_SUBMISSION_GRADED: string = \"INITIAL_EXERCISE_SUBMISSION_GRADED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(contest_submission: IContestSubmission) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        contest_submission\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialContestNotGraded(contest_submission: IContestSubmission): IInitialContestNotGradedActionType {\r\n    return { type: INITIAL_EXERCISE_SUBMISSION_NOT_GRADED, contest_submission: contest_submission };\r\n}\r\n\r\nexport function removeContestNotGradedAll(): IRemoveContestNotGradedAllActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL };\r\n}\r\n\r\nexport function addContestNotGraded(contest_submission: IContestSubmission): IAddContestNotGradedActionType {\r\n    return { type: ADD_EXERCISE_SUBMISSION_NOT_GRADED, contest_submission: contest_submission };\r\n}\r\n\r\nexport function editContestNotGraded(contest_submission: IContestSubmission): IEditContestNotGradedActionType {\r\n    return { type: EDIT_EXERCISE_SUBMISSION_NOT_GRADED, contest_submission: contest_submission };\r\n}\r\n\r\nexport function removeContestNotGraded(id: string): IRemoveContestNotGradedActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_NOT_GRADED, id: id };\r\n}\r\n\r\nexport function changeSelectedContestNotGraded(contest_submission: IContestSubmission): IChangeSelectedContestNotGradedActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT, contest_submission: contest_submission };\r\n}\r\n\r\nexport function clearSelectedContestNotGraded(): IClearSelectedContestNotGradedActionType {\r\n    return { type: CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialContestGraded(contest_submission: IContestSubmission): IInitialContestGradedActionType {\r\n    return { type: INITIAL_EXERCISE_SUBMISSION_GRADED, contest_submission: contest_submission };\r\n}\r\n\r\nexport function removeContestGradedAll(): IRemoveContestGradedAllActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_GRADED_ALL };\r\n}\r\n\r\nexport function addContestGraded(contest_submission: IContestSubmission): IAddContestGradedActionType {\r\n    return { type: ADD_EXERCISE_SUBMISSION_GRADED, contest_submission: contest_submission };\r\n}\r\n\r\nexport function editContestGraded(contest_submission: IContestSubmission): IEditContestGradedActionType {\r\n    return { type: EDIT_EXERCISE_SUBMISSION_GRADED, contest_submission: contest_submission };\r\n}\r\n\r\nexport function removeContestGraded(id: string): IRemoveContestGradedActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_GRADED, id: id };\r\n}\r\n\r\nexport function changeSelectedContestGraded(contest_submission: IContestSubmission): IChangeSelectedContestGradedActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT, contest_submission: contest_submission };\r\n}\r\n\r\nexport function clearSelectedContestGraded(): IClearSelectedContestGradedActionType {\r\n    return { type: CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ContestSubmissionModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_contest_submissions\r\ninterface IAddContestNotGradedActionType { type: string, contest_submission: IContestSubmission };\r\ninterface IEditContestNotGradedActionType { type: string, contest_submission: IContestSubmission };\r\ninterface IRemoveContestNotGradedActionType { type: string, id: string };\r\ninterface IChangeSelectedContestNotGradedActionType { type: string, contest_submission: IContestSubmission };\r\ninterface IClearSelectedContestNotGradedActionType { type: string };\r\ninterface IRemoveContestNotGradedAllActionType { type: string }\r\ninterface IInitialContestNotGradedActionType {type: string, contest_submission: IContestSubmission}\r\n\r\n// not_register_contest_submissions\r\ninterface IAddContestGradedActionType { type: string, contest_submission: IContestSubmission };\r\ninterface IEditContestGradedActionType { type: string, contest_submission: IContestSubmission };\r\ninterface IRemoveContestGradedActionType { type: string, id: string };\r\ninterface IChangeSelectedContestGradedActionType { type: string, contest_submission: IContestSubmission };\r\ninterface IClearSelectedContestGradedActionType { type: string };\r\ninterface IRemoveContestGradedAllActionType { type: string }\r\ninterface IInitialContestGradedActionType {type: string, contest_submission: IContestSubmission}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ContestSubmissionModificationStatus};","import { fetchDataSuccess, fetchDataError, removeContestGradedAll, removeContestNotGradedAll, addContestGraded, addContestNotGraded } from \"../../../store/actions/contest_submission.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ContestSubmission {\r\n    id: string;\r\n    student_id: string;\r\n    contest_id: string;\r\n    student_name: string;\r\n    contest_name: string;\r\n    image_url: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getContestSubmissionByContest(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest-submission/contest/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getContestSubmissionByContest(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeContestGradedAll())\r\n                dispatch(removeContestNotGradedAll())\r\n                console.log(data.body.contest_not_graded)\r\n                data.body.contest_not_graded.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var contest_submission: ContestSubmission = {\r\n                        id: ele.id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        contest_id: ele.contest_id,\r\n                        contest_name: ele.contest_name,\r\n                        image_url: ele.image_url,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    return dispatch(addContestNotGraded(contest_submission));\r\n                })\r\n\r\n                data.body.contest_graded.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var contest_submission: ContestSubmission = {\r\n                        id: ele.id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        contest_id: ele.contest_id,\r\n                        contest_name: ele.contest_name,\r\n                        image_url: ele.image_url,\r\n                        create_time: strDate_1.substring(0, 5),\r\n                        update_time: strDate_2.substring(0, 5)\r\n                    }\r\n                    return dispatch(addContestGraded(contest_submission));\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./Contest.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IStateType, IRootPageStateType, IUserGradeContestSubmissionState, IContestSubmissionState, IUserGradeContestState } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedContest\r\n} from \"../../store/actions/contest.action\";\r\nimport { getArtType } from \"../../common/service/ArtType/GetArtType\";\r\nimport { getArtLevel } from \"../../common/service/ArtLevel/GetArtLevel\";\r\nimport { getArtAge } from \"../../common/service/ArtAge/GetArtAge\";\r\nimport { getContest } from \"../../common/service/Contest/GetContest\";\r\nimport { getTeacher } from \"../../common/service/Teacher/GetTeacher\";\r\nimport TopStudent from \"./TopStudent\";\r\nimport TopTeacher from \"./TopTeacher\";\r\nimport { getUserGradeContestSubmissionByContestId } from \"../../common/service/UserGradeContestSubmission/GetUserGradeContestSubmissionByContest\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { getContestSubmissionByContest } from \"../../common/service/ContestSubmission/GetContestSubmissionByContest\";\r\nimport { ChartLine } from \"../../common/components/CharLine\";\r\nimport { getUserGradeContestByContestId } from \"../../common/service/UserGradeContest/GetUserGradeContestByContestId\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\n\r\nconst ResultContest: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const user_gradee_contest_submissions: IUserGradeContestSubmissionState = useSelector((state: IStateType) => state.user_grade_contest_submissions);\r\n    const user_grade_contests: IUserGradeContestState = useSelector((state: IStateType) => state.user_grade_contests);\r\n    const contest_submissions: IContestSubmissionState = useSelector((state: IStateType) => state.contest_submissions);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    \r\n\r\n    var id_x = localStorage.getItem('contest_id');\r\n    let contest_id: string = \"\";\r\n    if (id_x !== null){\r\n        contest_id = id_x\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getUserGradeContestSubmissionByContestId(dispatch, contest_id))\r\n                    trackPromise(getContestSubmissionByContest(dispatch, contest_id))\r\n                    trackPromise(getUserGradeContestByContestId(dispatch, contest_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getUserGradeContestSubmissionByContestId(dispatch, contest_id))\r\n                trackPromise(getContestSubmissionByContest(dispatch, contest_id))\r\n                trackPromise(getUserGradeContestByContestId(dispatch, contest_id))\r\n            }\r\n        }\r\n    }, [dispatch, contest_id, access_token, refresh_token])\r\n\r\n    \r\n    useEffect(() => {\r\n        dispatch(clearSelectedContest());\r\n        dispatch(updateCurrentPath(\"Cuộc thi\", \"danh sách\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    useEffect(() => {\r\n        trackPromise(getTeacher(dispatch))\r\n        trackPromise(getContest(dispatch))\r\n        trackPromise(getArtType(dispatch))\r\n        trackPromise(getArtLevel(dispatch))\r\n        trackPromise(getArtAge(dispatch))\r\n    }, [dispatch])\r\n\r\n    let student: string[] = []\r\n    let scores: number[] = []\r\n    if (user_gradee_contest_submissions.userGradeContestSubmissions.length > 0){\r\n        user_gradee_contest_submissions.userGradeContestSubmissions.map(ele => {\r\n            student.push(ele.student_name)\r\n            scores.push(ele.score)\r\n            return ele\r\n        })\r\n    }\r\n\r\n    const labels = student;\r\n    let data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Điêm',\r\n                data: scores,\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            }\r\n        ],\r\n    };\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Cuộc thi</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ BÀI NỘP\" text={`${contest_submissions.contest_gradeds.length + contest_submissions.contest_not_gradeds.length}`} icon=\"box\" class=\"primary\" />\r\n                <TopCard title=\"GIÁO VIÊN CHẤM\" text={`${user_grade_contests.userGradeContests.length}`} icon=\"box\" class=\"primary\" />\r\n                <TopCard title=\"ĐÃ CHẤM\" text={`${user_gradee_contest_submissions.userGradeContestSubmissions.length}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n\r\n            {/* <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n        <div className=\"row\">\r\n\r\n        <div className=\"col-xl-6 col-lg-6\">\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-green\">Danh sách điểm thi</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <TopStudent />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"col-xl-6 col-lg-6\">\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-green\">Danh sách giáo viên</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n            <TopTeacher />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n            <div className=\"row justify-content-center\">\r\n                <ChartLine data={data} />\r\n            </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default ResultContest;\r\n","export interface ISectionTemplate {\r\n    id: string;\r\n    creator_id: string;\r\n    course_id: string;\r\n    name: string;\r\n    number: number;\r\n    teaching_form: boolean;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum SectionTemplateModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ISectionTemplate, SectionTemplateModificationStatus } from \"../models/section_template.interface\";\r\nexport const ADD_SECTION_TEMPLATE: string = \"ADD_SECTION_TEMPLATE\";\r\nexport const EDIT_SECTION_TEMPLATE: string = \"EDIT_SECTION_TEMPLATE\";\r\nexport const REMOVE_SECTION_TEMPLATE: string = \"REMOVE_SECTION_TEMPLATE\";\r\nexport const CHANGE_SECTION_TEMPLATE_AMOUNT: string = \"CHANGE_SECTION_TEMPLATE_AMOUNT\";\r\nexport const CHANGE_SECTION_TEMPLATE_PENDING_EDIT: string = \"CHANGE_SECTION_TEMPLATE_PENDING_EDIT\";\r\nexport const CLEAR_SECTION_TEMPLATE_PENDING_EDIT: string = \"CLEAR_SECTION_TEMPLATE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SECTION_TEMPLATE_ALL: string = \"REMOVE_SECTION_TEMPLATE_ALL\";\r\nexport const INITIAL_SECTION_TEMPLATE: string = \"INITIAL_SECTION_TEMPLATE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(section_template: ISectionTemplate) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        section_template\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSectionTemplate(section_template: ISectionTemplate): IInitialSectionTemplateActionType {\r\n    return { type: INITIAL_SECTION_TEMPLATE, section_template: section_template };\r\n}\r\n\r\nexport function removeSectionTemplateAll(): IRemoveSectionTemplateAllActionType {\r\n    return { type: REMOVE_SECTION_TEMPLATE_ALL };\r\n}\r\n\r\nexport function addSectionTemplate(section_template: ISectionTemplate): IAddSectionTemplateActionType {\r\n    return { type: ADD_SECTION_TEMPLATE, section_template: section_template };\r\n}\r\n\r\nexport function editSectionTemplate(section_template: ISectionTemplate): IEditSectionTemplateActionType {\r\n    return { type: EDIT_SECTION_TEMPLATE, section_template: section_template };\r\n}\r\n\r\nexport function removeSectionTemplate(id: string): IRemoveSectionTemplateActionType {\r\n    return { type: REMOVE_SECTION_TEMPLATE, id: id };\r\n}\r\n\r\nexport function changeSelectedSectionTemplate(section_template: ISectionTemplate): IChangeSelectedSectionTemplateActionType {\r\n    return { type: CHANGE_SECTION_TEMPLATE_PENDING_EDIT, section_template: section_template };\r\n}\r\n\r\nexport function clearSelectedSectionTemplate(): IClearSelectedSectionTemplateActionType {\r\n    return { type: CLEAR_SECTION_TEMPLATE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateSectionTemplate(value: SectionTemplateModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddSectionTemplateActionType { type: string, section_template: ISectionTemplate };\r\ninterface IEditSectionTemplateActionType { type: string, section_template: ISectionTemplate };\r\ninterface IRemoveSectionTemplateActionType { type: string, id: string };\r\ninterface IChangeSelectedSectionTemplateActionType { type: string, section_template: ISectionTemplate };\r\ninterface IClearSelectedSectionTemplateActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  SectionTemplateModificationStatus};\r\ninterface IRemoveSectionTemplateAllActionType { type: string }\r\ninterface IInitialSectionTemplateActionType {type: string, section_template: ISectionTemplate}","import React, { Dispatch, Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, ISectionTemplateState, ITutorialTemplateState, ITutorialTemplatePageState } from \"../../store/models/root.interface\";\r\nimport { ISectionTemplate, SectionTemplateModificationStatus } from \"../../store/models/section_template.interface\";\r\nimport { setModificationStateSectionTemplate } from \"../../store/actions/section_template.action\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport type section_templateListProps = {\r\n  onSelect?: (section_template: ISectionTemplate) => void;\r\n  value?: string;\r\n  children?: React.ReactNode;\r\n};\r\n\r\n\r\nfunction SectionTemplateList(props: section_templateListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const section_templates: ISectionTemplateState = useSelector((state: IStateType) => state.section_templates);\r\n  const tutorial_templates: ITutorialTemplateState = useSelector((state: IStateType) => state.tutorial_templates);\r\n  const tutorial_template_pages: ITutorialTemplatePageState = useSelector((state: IStateType) => state.tutorial_template_pages);\r\n  console.log(tutorial_template_pages)\r\n  console.log(tutorial_templates)\r\n\r\n  const history = useHistory();\r\n  const routeChange = (section_template: ISectionTemplate) => {\r\n    let path = '/section-template/edit';\r\n    localStorage.removeItem('section_template_id')\r\n    localStorage.setItem('section_template_id', section_template.id.toString())\r\n    localStorage.removeItem('section_number')\r\n    localStorage.setItem('section_number', section_template.number.toString())\r\n    localStorage.removeItem('teaching_form')\r\n    localStorage.setItem('teaching_form', section_template.teaching_form.toString())\r\n    let tutorial_template_page_list: any[] = []\r\n    tutorial_templates.tutorialTemplates.map(ele => {\r\n      if (ele.section_template_id === section_template.id){\r\n        localStorage.removeItem('tutorial_template_id')\r\n        localStorage.setItem('tutorial_template_id', ele.id.toString())\r\n        tutorial_template_pages.tutorialTemplatePages.map(element => {\r\n          if (element.tutorial_template_id === ele.id){\r\n            tutorial_template_page_list.push({\r\n              description: element.description,\r\n              id: element.id,\r\n              name: element.name,\r\n              tutorial_template_id: element.tutorial_template_id,\r\n              number: element.number\r\n            })\r\n          }\r\n          return null\r\n        })\r\n      }\r\n      return null\r\n    })\r\n    console.log(tutorial_template_page_list)\r\n    localStorage.removeItem('description_tutorial_template_page_list')\r\n    localStorage.setItem('description_tutorial_template_page_list', JSON.stringify(tutorial_template_page_list.sort((a, b) => a.number - b.number)))\r\n    history.push({\r\n      pathname: path\r\n    });\r\n\r\n    localStorage.removeItem(\"tutorial_name\");\r\n    localStorage.setItem('tutorial_name', section_template.name)\r\n  }\r\n\r\n  var id_x = localStorage.getItem('course_name');\r\n  let course_name: string = \"\";\r\n  if (id_x !== null) {\r\n    course_name = id_x;\r\n  }\r\n\r\n\r\n  const section_templateElements: (JSX.Element | null)[] = section_templates.sectionTemplates.filter((val) => {\r\n    if (props.value === \"\") {\r\n      return val;\r\n    }\r\n    else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))) {\r\n      return val;\r\n    }\r\n    return null\r\n  }).sort((a, b) => a.number - b.number).map((section_template, index) => {\r\n    //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n    if (!section_template) { return null; }\r\n    return (<tr className={`table-row ${(section_templates.selectedSectionTemplate && section_templates.selectedSectionTemplate.id === section_template.id) ? \"selected\" : \"\"}`}\r\n      key={`section_template_${section_template.id}`}>\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td>{section_template.name}</td>\r\n      <td>{course_name}</td>\r\n      <td>{section_template.teaching_form === true ? \"Dạy thông qua jisti\" : \"Tự đọc giáo trình\"}</td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n          if (props.onSelect) props.onSelect(section_template);\r\n          dispatch(setModificationStateSectionTemplate(SectionTemplateModificationStatus.Edit))\r\n          routeChange(section_template)\r\n        }}>Chỉnh sửa</button>\r\n      </td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"table-responsive portlet\">\r\n        <table className=\"table\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Tên</th>\r\n              <th scope=\"col\">Khóa học</th>\r\n              <th scope=\"col\">Hình thức</th>\r\n              <th scope=\"col\">Hành động</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {section_templateElements}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default SectionTemplateList;\r\n","import { fetchDataSuccess, fetchDataError, removeSectionTemplateAll, initialSectionTemplate, addSectionTemplate } from \"../../../store/actions/section_template.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface SectionTemplate {\r\n    id: string;\r\n    creator_id: string;\r\n    course_id: string;\r\n    name: string;\r\n    description: string;\r\n    number: number;\r\n    teaching_form: boolean;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getSectionTemplateByCourseId(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/section-template/course/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSectionTemplateByCourseId(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeSectionTemplateAll())\r\n                console.log(data.body.SectionTemplate)\r\n                data.body.SectionTemplate.map((ele: any, index: any) => {\r\n                    var section_template: SectionTemplate = {\r\n                        id: ele.id,\r\n                        creator_id: ele.creator_id,\r\n                        course_id: ele.course_id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        number: ele.number,\r\n                        teaching_form: ele.teaching_form,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialSectionTemplate(section_template));\r\n                    }\r\n                    else{\r\n                        return dispatch(addSectionTemplate(section_template))\r\n                    }\r\n                })\r\n                \r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { ITutorialTemplate, TutorialTemplateModificationStatus } from \"../models/tutorial_template.interface\";\r\nexport const ADD_TUTORIAL_TEMPLATE: string = \"ADD_TUTORIAL_TEMPLATE\";\r\nexport const EDIT_TUTORIAL_TEMPLATE: string = \"EDIT_TUTORIAL_TEMPLATE\";\r\nexport const REMOVE_TUTORIAL_TEMPLATE: string = \"REMOVE_TUTORIAL_TEMPLATE\";\r\nexport const CHANGE_TUTORIAL_TEMPLATE_AMOUNT: string = \"CHANGE_TUTORIAL_TEMPLATE_AMOUNT\";\r\nexport const CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT: string = \"CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT\";\r\nexport const CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT: string = \"CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_TUTORIAL_TEMPLATE_ALL: string = \"REMOVE_TUTORIAL_TEMPLATE_ALL\";\r\nexport const INITIAL_TUTORIAL_TEMPLATE: string = \"INITIAL_TUTORIAL_TEMPLATE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(tutorial_template: ITutorialTemplate) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        tutorial_template\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialTutorialTemplate(tutorial_template: ITutorialTemplate): IInitialTutorialTemplateActionType {\r\n    return { type: INITIAL_TUTORIAL_TEMPLATE, tutorial_template: tutorial_template };\r\n}\r\n\r\nexport function removeTutorialTemplateAll(): IRemoveTutorialTemplateAllActionType {\r\n    return { type: REMOVE_TUTORIAL_TEMPLATE_ALL };\r\n}\r\n\r\nexport function addTutorialTemplate(tutorial_template: ITutorialTemplate): IAddTutorialTemplateActionType {\r\n    return { type: ADD_TUTORIAL_TEMPLATE, tutorial_template: tutorial_template };\r\n}\r\n\r\nexport function editTutorialTemplate(tutorial_template: ITutorialTemplate): IEditTutorialTemplateActionType {\r\n    return { type: EDIT_TUTORIAL_TEMPLATE, tutorial_template: tutorial_template };\r\n}\r\n\r\nexport function removeTutorialTemplate(id: string): IRemoveTutorialTemplateActionType {\r\n    return { type: REMOVE_TUTORIAL_TEMPLATE, id: id };\r\n}\r\n\r\nexport function changeSelectedTutorialTemplate(tutorial_template: ITutorialTemplate): IChangeSelectedTutorialTemplateActionType {\r\n    return { type: CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT, tutorial_template: tutorial_template };\r\n}\r\n\r\nexport function clearSelectedTutorialTemplate(): IClearSelectedTutorialTemplateActionType {\r\n    return { type: CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateTutorialTemplate(value: TutorialTemplateModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddTutorialTemplateActionType { type: string, tutorial_template: ITutorialTemplate };\r\ninterface IEditTutorialTemplateActionType { type: string, tutorial_template: ITutorialTemplate };\r\ninterface IRemoveTutorialTemplateActionType { type: string, id: string };\r\ninterface IChangeSelectedTutorialTemplateActionType { type: string, tutorial_template: ITutorialTemplate };\r\ninterface IClearSelectedTutorialTemplateActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  TutorialTemplateModificationStatus};\r\ninterface IRemoveTutorialTemplateAllActionType { type: string }\r\ninterface IInitialTutorialTemplateActionType {type: string, tutorial_template: ITutorialTemplate}","import { fetchDataSuccess, fetchDataError, removeTutorialTemplateAll, initialTutorialTemplate, addTutorialTemplate } from \"../../../store/actions/tutorial_template.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface TutorialTemplate {\r\n    id: string;\r\n    section_template_id: string;\r\n    name: string;\r\n    description: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getTutorialTemplate(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/tutorial-template`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTutorialTemplate(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeTutorialTemplateAll())\r\n                //console.log(data.body.lessons)\r\n                data.body.TutorialTemplate.map((ele: any, index: any) => {\r\n                    var tutorial_template: TutorialTemplate = {\r\n                        id: ele.id,\r\n                        section_template_id: ele.section_template_id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialTutorialTemplate(tutorial_template));\r\n                    }\r\n                    else{\r\n                        return dispatch(addTutorialTemplate(tutorial_template))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { fetchDataSuccess, fetchDataError, removeTutorialTemplatePageAll, initialTutorialTemplatePage } from \"../../../store/actions/tutorial_template_page.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface TutorialTemplatePage {\r\n    id: string;\r\n    tutorial_template_id: string;\r\n    name: string;\r\n    description: string;\r\n    number: number;\r\n}\r\nexport function getTutorialTemplatePage(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/tutorial-template-page`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTutorialTemplatePage(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeTutorialTemplatePageAll())\r\n                console.log(data.body.TutorialTemplatePage)\r\n                data.body.TutorialTemplatePage.map((ele: any, index: any) => {\r\n                    var tutorial_template_page: TutorialTemplatePage = {\r\n                        id: ele.id,\r\n                        tutorial_template_id: ele.tutorial_template_id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        number: ele.number\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(initialTutorialTemplatePage(tutorial_template_page));\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport SectionTemplateList from \"./SectionTemplateList\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./SectionTemplate.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { ISectionTemplateState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedSectionTemplate, setModificationStateSectionTemplate,\r\n    changeSelectedSectionTemplate\r\n} from \"../../store/actions/section_template.action\";\r\nimport { SectionTemplateModificationStatus, ISectionTemplate } from \"../../store/models/section_template.interface\";\r\nimport { getSectionTemplateByCourseId } from \"../../common/service/SectionTemplate/GetSectionTemplateByCourseId\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { getTutorialTemplate } from \"../../common/service/TutorialTemplate/GetTutorialTemplate\";\r\nimport { getTutorialTemplatePage } from \"../../common/service/TutorialTemplatePage/GetTutorialTemplatePage\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst SectionTemplate: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const SectionTemplates: ISectionTemplateState = useSelector((state: IStateType) => state.section_templates);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = SectionTemplates.sectionTemplates.length;\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    \r\n    var id_x = localStorage.getItem('course_id');\r\n    let course_id: string = \"\";\r\n    if (id_x != null){\r\n        course_id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getSectionTemplateByCourseId(dispatch, course_id)) \r\n                    trackPromise(getTutorialTemplatePage(dispatch))\r\n                    trackPromise(getTutorialTemplate(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getSectionTemplateByCourseId(dispatch, course_id)) \r\n                trackPromise(getTutorialTemplate(dispatch))\r\n                trackPromise(getTutorialTemplatePage(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, course_id])\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedSectionTemplate());\r\n        dispatch(updateCurrentPath(\"Buổi học\", \"Danh sách\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    function onSectionTemplateSelect(SectionTemplate: ISectionTemplate): void {\r\n        dispatch(changeSelectedSectionTemplate(SectionTemplate));\r\n        dispatch(setModificationStateSectionTemplate(SectionTemplateModificationStatus.None));\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <ToastContainer />\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Buổi học</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ Buổi học\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"text\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                                setSearchTerm(event.target.value)\r\n                                console.log(searchTerm)\r\n                            }}/>\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Danh sách buổi học</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <SectionTemplateList\r\n                                onSelect={onSectionTemplateSelect} value={searchTerm}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default SectionTemplate;\r\n","import React, {useRef} from \"react\";\r\nimport ReactQuill, { Quill } from 'react-quill';\r\nimport EditorToolbar, { modules, formats } from \"./EditorToolbar\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"./Style.css\";\r\nimport ImageResize from 'quill-image-resize-module-react';\r\n\r\nQuill.register('modules/imageResize', ImageResize);\r\n\r\nexport const Editor = (props) => {\r\n  console.log(`Input: ${props.setValue}`)\r\n  const reactQuillRef = useRef(null);\r\n  React.useEffect(() => {\r\n    if (reactQuillRef.current.getEditor() && props.isCreate === false){\r\n        reactQuillRef.current.getEditor().clipboard.dangerouslyPasteHTML(props.setValue)\r\n    }\r\n  }, [reactQuillRef, props.setValue, props.isCreate]);\r\n  //console.log(reactQuillRef)\r\n  \r\n  //const quill = reactQuillRef.current.editor;\r\n  //console.log(quill)\r\n  //quill.clipboard.dangerouslyPasteHTML(props.setValue);\r\n  \r\n  const [state, setState] = React.useState({ value: null });\r\n  const handleChange = value => {\r\n    setState({ value });\r\n    props.getValue(value)\r\n    //console.log(value)\r\n  };\r\n\r\n  console.log(`State: ${state.value}`)\r\n  return (\r\n    <div className=\"text-editor\">\r\n      <EditorToolbar />\r\n      <ReactQuill\r\n        ref={reactQuillRef}\r\n        theme=\"snow\"\r\n        value={state.value}\r\n        onChange={handleChange}\r\n        placeholder={\"Write something awesome...\"}\r\n        modules={modules}\r\n        formats={formats}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getTutorialTemplatePageByTutorialTemplateId } from \"./GetTutorialTemplatePageByTutorialTemplateId\";\r\n\r\nexport function putTutorialTemplatePage(id: any, tutorialtemplatepage: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/tutorial-template-page/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(tutorialtemplatepage)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putTutorialTemplatePage(id, tutorialtemplatepage, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(getTutorialTemplatePageByTutorialTemplateId(tutorialtemplatepage.tutorial_template_id))\r\n                toast.update(idx, { render: \"Điều chỉnh thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Điều chỉnh không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/tutorial_template.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteTutorialTemplatePage(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/tutorial-template-page/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteTutorialTemplatePage(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getTutorialTemplatePageByTutorialTemplateId } from \"./GetTutorialTemplatePageByTutorialTemplateId\";\r\n\r\nexport function putTutorialTemplatePage1(id: any, tutorialtemplatepage: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/tutorial-template-page/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(tutorialtemplatepage)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putTutorialTemplatePage1(id, tutorialtemplatepage))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(getTutorialTemplatePageByTutorialTemplateId(tutorialtemplatepage.tutorial_template_id))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/section_template.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getSectionTemplate } from \"./GetSectionTemplate\";\r\n\r\nexport function putSectionTemplate(id: any, data: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/section-template/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putSectionTemplate(id,data))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                console.log(id)\r\n                getSectionTemplate(dispatch)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataSuccess, fetchDataError, removeSectionTemplateAll, initialSectionTemplate, addSectionTemplate } from \"../../../store/actions/section_template.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface SectionTemplate {\r\n    id: string;\r\n    creator_id: string;\r\n    course_id: string;\r\n    name: string;\r\n    description: string;\r\n    number: number;\r\n    teaching_form: boolean;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getSectionTemplate(dispatch:  any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/section-template?page=0&size=5`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSectionTemplate(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeSectionTemplateAll())\r\n                console.log(data.body.SectionTemplate)\r\n                data.body.SectionTemplate.map((ele: any, index: any) => {\r\n                    var section_template: SectionTemplate = {\r\n                        id: ele.id,\r\n                        creator_id: ele.creator_id,\r\n                        course_id: ele.course_id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        number: ele.number,\r\n                        teaching_form: ele.teaching_form,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialSectionTemplate(section_template));\r\n                    }\r\n                    else{\r\n                        return dispatch(addSectionTemplate(section_template))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, FormEvent, Dispatch, Fragment, useEffect, ChangeEvent } from \"react\";\r\nimport { IStateType, ISectionTemplateState, ITutorialTemplatePageState, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ISectionTemplate } from \"../../store/models/section_template.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport Editor from \"../../common/components/Quill/EditorEditSection\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { putTutorialTemplatePage } from \"../../common/service/TutorialTemplatePage/PutTutorialTemplatePage\";\r\nimport { postTutorialTemplatePage } from \"../../common/service/TutorialTemplatePage/PostTutorialTemplatePage\";\r\n\r\n\r\nimport { deleteTutorialTemplatePage } from \"../../common/service/TutorialTemplatePage/DeleteTutorialTemplatePage\";\r\nimport \"./SectionTemplate.css\"\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { getTutorialTemplatePageByTutorialTemplateId } from \"../../common/service/TutorialTemplatePage/GetTutorialTemplatePageByTutorialTemplateId\";\r\nimport { postTutorialTemplatePage1 } from \"../../common/service/TutorialTemplatePage/PostTutorialTemplatePage1\";\r\nimport { putTutorialTemplatePage1 } from \"../../common/service/TutorialTemplatePage/PutTutorialTemplatePage1\";\r\nimport { postSectionTemplate } from \"../../common/service/SectionTemplate/PostSectionTemplate\";\r\nimport { putSectionTemplate } from \"../../common/service/SectionTemplate/PutSectionTemplate\";\r\nimport { getSectionTemplate } from \"../../common/service/SectionTemplate/GetSectionTemplate\";\r\n\r\n\r\nexport type SectionTemplateListProps = {\r\n    children?: React.ReactNode;\r\n};\r\n\r\ntype Options = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\ntype PageContent = {\r\n    page: number;\r\n    content: string;\r\n}\r\n\r\ntype TutorialPageTemplate = {\r\n    id: string;\r\n    tutorial_template_id: string;\r\n    name: string;\r\n    number: number;\r\n    description: string;\r\n}\r\n\r\nfunction SectionTemplateForm(props: SectionTemplateListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const section_templates: ISectionTemplateState | null = useSelector((state: IStateType) => state.section_templates);\r\n    const tutorial_template_pages: ITutorialTemplatePageState | null = useSelector((state: IStateType) => state.tutorial_template_pages);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    console.log(tutorial_template_pages.tutorialTemplatePages)\r\n    let section_template: ISectionTemplate | null = section_templates.selectedSectionTemplate;\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    var id_x = localStorage.getItem('section_template_id');\r\n    let section_template_id: string = \"\";\r\n    if (id_x !== null) {\r\n        section_template_id = id_x\r\n    }\r\n\r\n    var id_y = localStorage.getItem('section_number');\r\n    let section_number: number = 0;\r\n    if (id_y !== null) {\r\n        section_number = parseInt(id_y)\r\n    }\r\n\r\n    var id_z = localStorage.getItem('description_tutorial_template_page_list');\r\n    let list_description: TutorialPageTemplate[] = []\r\n    let initial_text = \"\"\r\n    if (id_z !== null) {\r\n        list_description = JSON.parse(id_z);\r\n        initial_text = list_description.length !== 0 ? list_description[0].description : \"\";\r\n    }\r\n\r\n\r\n    var id_t = localStorage.getItem('tutorial_template_id');\r\n    let tutorial_template_id: string = \"\";\r\n    if (id_t !== null) {\r\n        tutorial_template_id = id_t\r\n    }\r\n\r\n    var id_h = localStorage.getItem('tutorial_name');\r\n    let tutorial_name: string = \"\";\r\n    if (id_h !== null) {\r\n        tutorial_name = id_h\r\n    }\r\n\r\n    var id_k = localStorage.getItem('teaching_form');\r\n    let teaching_form: string = \"\";\r\n    if (id_k !== null) {\r\n        teaching_form = id_k\r\n    }\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    dispatch(getTutorialTemplatePageByTutorialTemplateId(tutorial_template_id))\r\n                }\r\n            }\r\n            else {\r\n                dispatch(getTutorialTemplatePageByTutorialTemplateId(tutorial_template_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, tutorial_template_id])\r\n\r\n    let [textHtml, setTextHtml] = useState(initial_text);\r\n\r\n    if (!section_template) {\r\n        section_template = { id: \"\", name: \"\", creator_id: \"\", course_id: \"\", number: 0, teaching_form: false, create_time: \"\", update_time: \"\" };\r\n    }\r\n\r\n    console.log(tutorial_template_pages.tutorialTemplatePages)\r\n    if (tutorial_template_pages.tutorialTemplatePages.length === 0) {\r\n        section_template = { id: \"\", name: \"\", creator_id: \"\", course_id: \"\", number: 0, teaching_form: false, create_time: \"\", update_time: \"\" };\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khóa học chung\", \"Soạn giáo án\"));\r\n    }, [path.area, dispatch]);\r\n\r\n\r\n    const [formState, setFormState] = useState({\r\n        name: { error: \"\", value: section_template.name },\r\n        number: { error: \"\", value: section_template.number },\r\n        teaching_form: { error: \"\", value: section_template.teaching_form },\r\n        course_id: { error: \"\", value: section_template.course_id },\r\n        creator_id: { error: \"\", value: section_template.creator_id },\r\n        create_time: { error: \"\", value: section_template.create_time },\r\n        update_time: { error: \"\", value: section_template.update_time }\r\n    });\r\n    const [totalPage, setTotalPage] = useState(list_description.length);\r\n    const [currentPage, setCurrentPage] = useState<number>(1)\r\n    const [value, setValue] = useState(\"\")\r\n\r\n    const [checkCreateNew, setCheckCreateNew] = useState(false);\r\n    const [checkAfterCreate, setCheckAfterCreate] = useState(false);\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    //console.log(totalPage)\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n\r\n        handleSave()\r\n    }\r\n\r\n    function handleRemove() {\r\n        if (tutorial_template_pages !== null) {\r\n            if (checkCreateNew === true  && currentPage === totalPage && checkAfterCreate === false) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n            else if (checkCreateNew === true  && currentPage !== totalPage) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n            else {\r\n                const k = currentPage;\r\n                let x = totalPage - 1;\r\n                setTotalPage(x)\r\n\r\n                const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                    position: toast.POSITION.TOP_CENTER\r\n                });\r\n                if (k === tutorial_template_pages.tutorialTemplatePages.length) {\r\n                    let y = k - 1;\r\n                    setCurrentPage(y)\r\n                    dispatch(deleteTutorialTemplatePage(tutorial_template_pages.tutorialTemplatePages[k - 1].id))\r\n                    handleBackPage()\r\n                }\r\n                else {\r\n                    tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number).map((ele, idx) => {\r\n                        if (k - 1 === ele.number) {\r\n                            dispatch(deleteTutorialTemplatePage(ele.id));\r\n                        }\r\n                        else if (ele.number > k - 1) {\r\n                            dispatch(putTutorialTemplatePage1(ele.id, {\r\n                                description: ele.description,\r\n                                name: ele.name,\r\n                                tutorial_template_id: tutorial_template_id,\r\n                                number: ele.number - 1\r\n                            }))\r\n                        }\r\n                        return 2\r\n                    })\r\n                    handleBackPage()\r\n                }\r\n                toast.update(idx, { render: \"Xóa bước thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleSave() {\r\n        if (tutorial_template_pages !== null) {\r\n            const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            const k = currentPage;\r\n\r\n            dispatch(putSectionTemplate(section_template_id, {\r\n                name: formState.name.value,\r\n                teaching_form: value2 === \"true\" ? true : false,\r\n                number: section_number,\r\n                creator_id: localStorage.getItem('id'),\r\n                course_id: localStorage.getItem('course_id')\r\n            }))\r\n\r\n            if (checkCreateNew === true) {\r\n                if (k - 1 === tutorial_template_pages.tutorialTemplatePages.length) {\r\n                    dispatch(postTutorialTemplatePage1({\r\n                        description: value,\r\n                        name: formState.name.value,\r\n                        tutorial_template_id: tutorial_template_id,\r\n                        number: tutorial_template_pages.tutorialTemplatePages.length\r\n                    }, idx))\r\n                }\r\n                else {\r\n                    tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number).map((ele, idx) => {\r\n                        if (ele.number === k - 1) {\r\n                            console.log('1')\r\n                            dispatch(putTutorialTemplatePage1(ele.id, {\r\n                                description: ele.description,\r\n                                name: ele.name,\r\n                                tutorial_template_id: tutorial_template_id,\r\n                                number: ele.number + 1\r\n                            }))\r\n                            dispatch(postTutorialTemplatePage1({\r\n                                description: value,\r\n                                name: formState.name.value,\r\n                                tutorial_template_id: tutorial_template_id,\r\n                                number: ele.number\r\n                            }, idx))\r\n                        }\r\n                        else if (ele.number > k - 1) {\r\n                            if (ele.number < tutorial_template_pages.tutorialTemplatePages.length - 1) {\r\n                                console.log('2')\r\n                                dispatch(putTutorialTemplatePage1(ele.id, {\r\n                                    description: ele.description,\r\n                                    name: ele.name,\r\n                                    tutorial_template_id: tutorial_template_id,\r\n                                    number: ele.number + 1\r\n                                }))\r\n                            }\r\n                            else {\r\n                                dispatch(putTutorialTemplatePage(ele.id, {\r\n                                    description: ele.description,\r\n                                    name: ele.name,\r\n                                    tutorial_template_id: tutorial_template_id,\r\n                                    number: ele.number + 1\r\n                                }, idx))\r\n                            }\r\n                        }\r\n                        return 1\r\n                    })\r\n\r\n                    /* dispatch(postTutorialTemplatePage({\r\n                        description: value,\r\n                        name: formState.name.value,\r\n                        tutorial_template_id: tutorial_template_id,\r\n                        number: k - 1\r\n                    })) */\r\n                }\r\n                setCheckCreateNew(false)\r\n            }\r\n            else {\r\n                if (k < tutorial_template_pages.tutorialTemplatePages.length + 1) {\r\n                    dispatch(putTutorialTemplatePage(tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number)[k - 1].id, {\r\n                        description: value,\r\n                        name: tutorial_name,\r\n                        tutorial_template_id: tutorial_template_id,\r\n                        number: k - 1\r\n                    }, idx))\r\n                    console.log({\r\n                        description: value,\r\n                        name: tutorial_name,\r\n                        tutorial_template_id: tutorial_template_id,\r\n                        number: k - 1\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch(postTutorialTemplatePage1({\r\n                        description: value,\r\n                        name: formState.name.value,\r\n                        tutorial_template_id: tutorial_template_id,\r\n                        number: tutorial_template_pages.tutorialTemplatePages.length\r\n                    }, idx))\r\n\r\n                    console.log({\r\n                        description: value,\r\n                        name: tutorial_name,\r\n                        tutorial_template_id: tutorial_template_id,\r\n                        number: tutorial_template_pages.tutorialTemplatePages.length\r\n                    })\r\n                }\r\n            }\r\n            setCheckAfterCreate(true)\r\n\r\n            toast.update(idx, { render: \"Điều chỉnh thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n        }\r\n    }\r\n\r\n\r\n    function handleNextPage() {\r\n        if (tutorial_template_pages !== null) {\r\n            if (checkCreateNew === true || (currentPage === totalPage && checkAfterCreate === false)) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n            else {\r\n                if (checkAfterCreate === true) {\r\n                    let x = currentPage + 1;\r\n                    setCurrentPage(x)\r\n                    console.log(tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number))\r\n                    setTextHtml(tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number)[x - 1] !== undefined ? tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number)[x - 1].description : \"\")\r\n                    setChecked(false)\r\n                    setValue(\"\")\r\n                    setCheckAfterCreate(false);\r\n                }\r\n                else {\r\n                    let x = currentPage + 1;\r\n                    setCurrentPage(x)\r\n                    console.log(tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number))\r\n                    setTextHtml(tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number)[x - 1] !== undefined ? tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number)[x - 1].description : \"\")\r\n                    setChecked(false)\r\n                    setValue(\"\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function getValue(value: any) {\r\n        setValue(value);\r\n        setChecked(true)\r\n    }\r\n\r\n    console.log(checkCreateNew)\r\n    console.log(checkAfterCreate)\r\n    function handleBackPage() {\r\n        if (tutorial_template_pages !== null) {\r\n            if (checkCreateNew === true  && currentPage === totalPage && checkAfterCreate === false) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n            else if (checkCreateNew === true  && currentPage !== totalPage) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n            else {\r\n                let x = currentPage - 1;\r\n                setCurrentPage(x)\r\n                console.log(tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number))\r\n                setTextHtml(tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number)[x - 1].description)\r\n                setChecked(false)\r\n                setValue(\"\")\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function handleNewPage() {\r\n        if (checkCreateNew === true  && currentPage === totalPage && checkAfterCreate === false) {\r\n            toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 2000,\r\n            });\r\n        }\r\n        else if (checkCreateNew === true  && currentPage !== totalPage) {\r\n            toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 2000,\r\n            });\r\n        }\r\n        else {\r\n            let x = currentPage + 1;\r\n            setCurrentPage(x)\r\n            setCheckCreateNew(true)\r\n            let y = totalPage + 1;\r\n            setTotalPage(y)\r\n            console.log(currentPage - 1)\r\n            setChecked(false)\r\n            setTextHtml(\"\")\r\n            setValue(\"\")\r\n        }\r\n    }\r\n    const listTeachingForm: Options[] = [\r\n        {\r\n            \"name\": \"Dạy thông qua Jitsi\",\r\n            \"value\": \"true\"\r\n        },\r\n        {\r\n            \"name\": \"Tự đọc giáo trình\",\r\n            \"value\": \"false\"\r\n        }\r\n    ]\r\n\r\n    const [error2, setError2] = useState(\"\");\r\n    const [htmlClass2, setHtmlClass2] = useState(\"\");\r\n    const [value2, setValue2] = useState(teaching_form);\r\n\r\n\r\n    function onValueChanged2(event: ChangeEvent<HTMLSelectElement>): void {\r\n        let [error2, validClass2, elementValue2] = [\"\", \"\", event.target.value];\r\n\r\n        [error2, validClass2] = (!elementValue2) ?\r\n            [\"Value has to be selected\", \"is-invalid\"] : [\"\", \"is-valid\"];\r\n\r\n        setError2(error2);\r\n        setHtmlClass2(validClass2);\r\n        setValue2(elementValue2);\r\n    }\r\n\r\n\r\n    const getOptions2: (JSX.Element | null)[] = listTeachingForm.map((option: any, index: number) => {\r\n        return (\r\n            <option key={index} value={option.value}>{option.name}</option>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"col-xl-12 col-lg-12\">\r\n                <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\">Buổi {section_number}</h6>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={saveUser}>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <TextInput id=\"input_name\"\r\n                                        value={formState.name.value}\r\n                                        field=\"name\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={2000}\r\n                                        label=\"Tên giáo trình\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label htmlFor={`input_teaching_form`}>Hình thức dạy</label>\r\n                                    <select\r\n                                        value={value2}\r\n                                        id={`input_teaching_form`}\r\n                                        className={`form-control  ${htmlClass2}`}\r\n                                        onChange={onValueChanged2}>\r\n                                        <option value={0}>Choose...</option>\r\n                                        {getOptions2}\r\n                                    </select>\r\n\r\n                                    {error2 ?\r\n                                        <div className=\"invalid-feedback\">\r\n                                            {error2}\r\n                                        </div> : null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Nội dung bước {currentPage} / {totalPage}</label>\r\n                                <Editor getValue={getValue} isCreate={checked} setValue={textHtml} />\r\n                            </div>\r\n                            {\r\n                                function () {\r\n                                    if (currentPage < totalPage) {\r\n                                        if (currentPage === 1) {\r\n                                            return (\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                                                        <button type=\"button\" className=\"btn btn-info right-margin\" onClick={handleSave}>Lưu</button>\r\n                                                        <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleNextPage}>Bước tiếp theo</button>\r\n                                                    </div>\r\n                                                    <div className=\"col-xl-8 col-md-8 col-xs-8\">\r\n                                                        <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNewPage}>Thêm bước</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        else {\r\n                                            return (\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                                                        <button type=\"button\" className=\"btn btn-info right-margin\" onClick={handleBackPage}>Trở về</button>\r\n                                                        <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleSave}>Lưu</button>\r\n                                                        <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleNextPage}>Bước tiếp theo</button>\r\n                                                    </div>\r\n                                                    <div className=\"col-xl-8 col-md-8 col-xs-8\">\r\n                                                        <button type=\"button\" className=\"btn btn-error right-margin add-step btn-remove ml-2\" onClick={handleRemove}>Xóa bước</button>\r\n                                                        <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNewPage}>Thêm bước</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    }\r\n                                }()\r\n                            }\r\n                            {\r\n                                function () {\r\n                                    if (currentPage === totalPage) {\r\n                                        if (totalPage === 1) {\r\n                                            return (\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-xl-6 col-md-6 col-xs-6\">\r\n                                                        <button type=\"submit\" className={`btn btn-primary left-margin ml-2`}>Hoàn thành</button>\r\n                                                    </div>\r\n                                                    <div className=\"col-xl-6 col-md-6 col-xs-6\">\r\n                                                        <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNewPage}>Thêm bước</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        else {\r\n\r\n                                        }\r\n                                        return (\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-xl-6 col-md-6 col-xs-6\">\r\n                                                    <button type=\"button\" className=\"btn btn-info right-margin\" onClick={handleBackPage}>Trở về</button>\r\n                                                    <button type=\"submit\" className={`btn btn-primary left-margin ml-2`}>Hoàn thành</button>\r\n                                                </div>\r\n                                                <div className=\"col-xl-6 col-md-6 col-xs-6\">\r\n                                                    <button type=\"button\" className=\"btn btn-error right-margin add-step btn-remove ml-2\" onClick={handleRemove}>Xóa bước</button>\r\n                                                    <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNewPage}>Thêm bước</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                }()\r\n                            }\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default SectionTemplateForm;","import React, { PropsWithChildren, ReactElement } from \"react\";\r\nimport { ICardProperties } from \"../types/TopCard.types\";\r\n\r\nfunction TopCard(props: PropsWithChildren<ICardProperties>): ReactElement {\r\n    return (\r\n        <div className=\"col-xl-3 col-md-6 mb-4\">\r\n            <div className={`card border-left-${props.class} shadow h-100 py-2`} id=\"topcard-teacher\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row no-gutters align-items-center\">\r\n                        <div className=\"col mr-2\">\r\n                            <div className=\"text-xs font-weight-bold text-green text-uppercase mb-1\">{props.title}</div>\r\n                            <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{props.text}</div>\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                            <i className={`fas fa-${props.icon} fa-2x text-gray-300`} id=\"icon-teacher\"></i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default TopCard;\r\n","export interface ITeacherRegisterQuantification {\r\n    id: string;\r\n    teacher_id: string;\r\n    teacher_name: string;\r\n    reviewer_id: string;\r\n    course_id: string;\r\n    course_name: string;\r\n    art_age_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    degree_photo_url: string;\r\n    status: string;\r\n}\r\n\r\nexport enum TeacherRegisterQuantificationModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import React, { Dispatch, PropsWithChildren, ReactElement } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { changeSelectedTeacherRegisterQuatificationApproved, setModificationState } from \"../../store/actions/teacher_register_quantification.action\";\r\nimport { TeacherRegisterQuantificationModificationStatus } from \"../../store/models/teacher_register_quantification.interface\";\r\nimport { ICardProperties } from \"../types/TopCardLevel.types\";\r\n\r\nfunction TopCardLevel(props: PropsWithChildren<ICardProperties>): ReactElement {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const history = useHistory();\r\n    const routeChange = (course_name: string, art_age_name: string, art_level_name: string, art_type_name: string, degree_photo_url: string) =>{ \r\n        let path = '/teacher-level/detail'; \r\n        history.push({\r\n            pathname: path,\r\n            state: { course_name: course_name, art_age_name: art_age_name, art_level_name: art_level_name, art_type_name: art_type_name, degree_photo_url: degree_photo_url}\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-xl-12 col-md-12 mb-4\" onClick={() => {\r\n            routeChange(props.course_name, props.art_age_name, props.art_level_name, props.art_type_name,\r\n                props.degree_photo_url)}}\r\n        >\r\n            <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row no-gutters align-items-center\">\r\n                        <div className=\"col mr-2\">\r\n                            <div className=\"text-xs font-weight-bold text-green text-uppercase mb-1\">{props.course_name}</div>\r\n                        </div>\r\n                        <div className=\"col-auto\" onClick={(e: any) => {\r\n                            e.stopPropagation()\r\n                            console.log(\"hello\")\r\n                            dispatch(changeSelectedTeacherRegisterQuatificationApproved(props.teacher_level));\r\n                            dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Edit))\r\n                        }}>\r\n                            <i className={`fas fa-${props.icon} fa-2x text-gray-300`} id=\"icon-user\"></i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default TopCardLevel;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TopCardLevel from \"../../common/components/TopCardLevel\";\r\nimport { IStateType, ITeacherRegisterQuantificationState } from \"../../store/models/root.interface\";\r\nimport { ITeacherRegisterQuantification } from \"../../store/models/teacher_register_quantification.interface\";\r\n\r\nexport type teacherRegisterQuantificationListProps = {\r\n    onSelect?: (teacherRegisterQuantification: ITeacherRegisterQuantification) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction TeacherRegisterQuantificationList(props: teacherRegisterQuantificationListProps): JSX.Element {\r\n    const teacherRegisterQuantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n\r\n    const teacherRegisterQuantificationElements: (JSX.Element | null)[] = teacherRegisterQuantifications.approveds.map((ele, index) => {\r\n        if (!ele) { return null; }\r\n        return (\r\n            <TopCardLevel \r\n                course_name={ele.course_name} \r\n                icon=\"book\" class=\"primary\" \r\n                art_age_name={ele.art_age_name}\r\n                art_level_name={ele.art_level_name}\r\n                art_type_name={ele.art_type_name}\r\n                degree_photo_url={ele.degree_photo_url} \r\n                teacher_level={ele}\r\n            />\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            {teacherRegisterQuantificationElements}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TeacherRegisterQuantificationList;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getTeacherRegisterQuantificationByTeacherId } from \"../../common/service/TeacherRegisterQuantification/GetTeacherRegisterQuantificationByTeacherId\";\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { changeSelectedTeacherRegisterQuatificationApproved, setModificationState } from \"../../store/actions/teacher_register_quantification.action\";\r\nimport { IStateType, ITeacherRegisterQuantificationState, IUserState } from \"../../store/models/root.interface\";\r\nimport { ITeacherRegisterQuantification, TeacherRegisterQuantificationModificationStatus } from \"../../store/models/teacher_register_quantification.interface\";\r\nimport \"./TeacherHome.css\"\r\nimport TeacherRegisterQuantificationList from \"./TeacherLevelList\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst TeacherHome: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const teacherRegisterQuantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const numberApprovedCount: number = teacherRegisterQuantifications.approveds.length;\r\n    const numberNotApprovedNowCount: number = teacherRegisterQuantifications.not_approved_now.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getTeacherRegisterQuantificationByTeacherId(dispatch, id))\r\n                    trackPromise(getUserById(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getTeacherRegisterQuantificationByTeacherId(dispatch, id))\r\n                trackPromise(getUserById(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, id]);\r\n\r\n    function onTeacherRegisterQuantificationSelect(teacherRegisterQuantification: ITeacherRegisterQuantification): void {\r\n        dispatch(changeSelectedTeacherRegisterQuatificationApproved(teacherRegisterQuantification));\r\n        dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.None));\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`${numberApprovedCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`${numberNotApprovedNowCount}`} icon=\"book\" class=\"danger\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <h3 className=\" mb-2\" id=\"level-teacher\">Trình độ đã duyệt</h3>\r\n                    <TeacherRegisterQuantificationList\r\n                        onSelect={onTeacherRegisterQuantificationSelect}\r\n                    />\r\n                    {/* <TopCardLevel title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`2`} icon=\"book\" class=\"primary\" />\r\n                    <TopCardLevel title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`1`} icon=\"book\" class=\"danger\" /> */}\r\n                </div>\r\n\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <h3 className=\" mb-2\" id=\"level-teacher\">Thông tin cá nhân</h3>\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                        <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row text-center text-center justify-content-center\">\r\n                                    <i className={`fas fa-user fa-10x`} id=\"icon-user\"></i>\r\n                                </div>\r\n                                <div className=\"row no-gutters justify-content-center\">\r\n                                    <h4 id=\"full-name\">{users.teachers.length === 0 ? \"\" : (users.teachers[0].firstName + \" \"+ users.teachers[0].lastName)}</h4>\r\n                                </div>\r\n                                <div className=\"row no-gutters justify-content-center\">\r\n                                    <p id=\"username-teacher\">{users.teachers.length === 0 ? \"\" : users.teachers[0].username}</p>\r\n                                </div>\r\n                                <div className=\"row no-gutters\">\r\n                                    <i className={`fas fa-phone fa-2x`} id=\"icon-phone\"></i>\r\n                                    <p id=\"phone\">{users.teachers.length === 0 ? \"\" : users.teachers[0].phone}</p>\r\n                                </div>\r\n\r\n                                <div className=\"row no-gutters\">\r\n                                    <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                    <p id=\"phone\">{users.teachers.length === 0 ? \"\" : users.teachers[0].email}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default TeacherHome;\r\n","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IStateType, IRootPageStateType, ITimeScheduleState } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedProduct\r\n} from \"../../store/actions/products.action\";\r\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, ViewsDirective, ViewDirective } from \"@syncfusion/ej2-react-schedule\";\r\n\r\nimport \"@syncfusion/ej2-base/styles/material.css\";\r\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\r\nimport { getInfoMyClass } from \"../../common/service/MyClass/GetInfoMyClass\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst ScheduleClass: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const time_schedules: ITimeScheduleState = useSelector((state: IStateType) => state.time_schedules);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let data: object[] = []\r\n\r\n    time_schedules.timeSchedules.map((ele: any, index: any) => {\r\n        return data.push({\r\n            Id: index,\r\n            Subject: `Buổi học ${index + 1}`,\r\n            StartTime: new Date(ele.start_time),\r\n            EndTime: new Date(ele.end_time),\r\n            IsAllDay: false\r\n        })\r\n    })\r\n\r\n    var id_x = localStorage.getItem('class_id')\r\n    let class_id: string = \"\";\r\n    if (id_x !== null){\r\n        class_id = id_x\r\n    }\r\n\r\n\r\n    var id_y = localStorage.getItem('class_name')\r\n    let class_name: string = \"\";\r\n    if (id_y !== null){\r\n        class_name = id_y\r\n    }\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getInfoMyClass(dispatch, class_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getInfoMyClass(dispatch, class_id))\r\n            }\r\n        }\r\n    }, [dispatch, class_id, access_token, refresh_token]);\r\n\r\n    console.log(new Date(2018, 1, 15, 12, 30))\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedProduct());\r\n        dispatch(updateCurrentPath(\"Lớp\",\"\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> :<Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">{class_name}</h1>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Lịch học chi tiết</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <ScheduleComponent height='550px' selectedDate={new Date()} eventSettings={{\r\n                                dataSource: data, fields: {\r\n                                    id: 'Id',\r\n                                    subject: { name: 'Subject' },\r\n                                    isAllDay: { name: 'IsAllDay' },\r\n                                    startTime: { name: 'StartTime' },\r\n                                    endTime: { name: 'EndTime' }\r\n                                }\r\n                            }}>\r\n\r\n                                <ViewsDirective>\r\n                                    <ViewDirective option='WorkWeek' startHour='07:00' endHour='22:00' />\r\n                                    <ViewDirective option='Week' startHour='07:00' endHour='22:00' />\r\n                                    <ViewDirective option='Month' showWeekend={false} />\r\n                                </ViewsDirective>\r\n                                <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\r\n                            </ScheduleComponent>;\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default ScheduleClass;\r\n","import React, { PropsWithChildren, ReactElement } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ICardProperties } from \"../types/TopCardCourseTeacherNew.types\";\r\n\r\nfunction TopCardCourseTeacherNew(props: PropsWithChildren<ICardProperties>): ReactElement {\r\n    const history = useHistory();\r\n    const routeChange = (course: PropsWithChildren<ICardProperties>) =>{ \r\n        localStorage.removeItem('course_id');\r\n        localStorage.setItem('course_id', course.id.toString())\r\n        let path = '/courses/semester-classes'; \r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-xl-4 col-md-4 mb-2\" onClick={() => {routeChange(props)}}>\r\n            <div className={`card shadow h-100 py-0`} id=\"topcard-user\" >\r\n                <img className=\"card-img-top\" src={props.image_url} alt=\"\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{props.name}</h5>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Thể loại:</span> <span className=\"header-card-course-value-teacher\">{props.art_type_name}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Trình độ:</span> <span className=\"header-card-course-value-teacher\">{props.art_level_name}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Độ tuổi:</span> <span className=\"header-card-course-value-teacher\">{props.art_age_name}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Số buổi:</span> <span className=\"header-card-course-value-teacher\">{props.num_of_section}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Số lớp mở:</span> <span className=\"header-card-course-value-teacher\">{props.total}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Giá:</span> <span className=\"header-card-course-value-teacher\">{props.price} VNĐ</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-12 col-md-12 col-xs-12\" ><span className=\"header-card-course-teacher\">Đã đăng kí:</span> <span className=\"header-card-course-value-teacher\">{props.total_register}</span></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default TopCardCourseTeacherNew;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TopCardCourseTeacherNew from \"../../common/components/TopCardCourseTeacher\";\r\nimport { ICourseTeacherNewState, IStateType } from \"../../store/models/root.interface\";\r\nimport { ITeacherRegisterQuantification } from \"../../store/models/teacher_register_quantification.interface\";\r\n\r\nexport type teacherRegisterQuantificationListProps = {\r\n    onSelect?: (teacherRegisterQuantification: ITeacherRegisterQuantification) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction CourseTeacherNotRegisterList(props: teacherRegisterQuantificationListProps): JSX.Element {\r\n  const course_teachers: ICourseTeacherNewState = useSelector((state: IStateType) => state.course_teacher_new);\r\n\r\n\r\n\r\n    const teacherRegisterQuantificationElements: (JSX.Element | null)[] = course_teachers.courses.map((ele, index) => {\r\n        if (!ele) { return null; }\r\n        return (\r\n            <TopCardCourseTeacherNew \r\n              name={ele.name} \r\n              id={ele.id}\r\n              image_url={ele.image_url}\r\n              art_age_name={ele.art_age_name}\r\n              art_level_name={ele.art_level_name}\r\n              art_type_name={ele.art_type_name}\r\n              max_participant={ele.max_participant}\r\n              num_of_section={ele.num_of_section}\r\n              description={ele.description}\r\n              price={ele.price}\r\n              is_enabled={ele.is_enabled}\r\n              art_age_id={ele.art_age_id}\r\n              art_level_id={ele.art_level_id}\r\n              art_type_id={ele.art_type_id}\r\n              total={ele.total}\r\n              total_register={ele.total_registed}\r\n              create_time={ele.create_time}\r\n              update_time={ele.update_time}\r\n            />\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n          {teacherRegisterQuantificationElements}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default CourseTeacherNotRegisterList;\r\n","import { ICourseTeacherNew, CourseTeacherNewModificationStatus } from \"../models/course_teacher_new.interface\";\r\nexport const ADD_COURSE_TEACHER_NEW: string = \"ADD_COURSE_TEACHER_NEW\";\r\nexport const EDIT_COURSE_TEACHER_NEW: string = \"EDIT_COURSE_TEACHER_NEW\";\r\nexport const REMOVE_COURSE_TEACHER_NEW: string = \"REMOVE_COURSE_TEACHER_NEW\";\r\nexport const CHANGE_COURSE_TEACHER_NEW_AMOUNT: string = \"CHANGE_COURSE_TEACHER_NEW_AMOUNT\";\r\nexport const CHANGE_COURSE_TEACHER_NEW_PENDING_EDIT: string = \"CHANGE_COURSE_TEACHER_NEW_PENDING_EDIT\";\r\nexport const CLEAR_COURSE_TEACHER_NEW_PENDING_EDIT: string = \"CLEAR_COURSE_TEACHER_NEW_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_COURSE_TEACHER_NEW_ALL: string = \"REMOVE_COURSE_TEACHER_NEW_ALL\";\r\nexport const INITIAL_COURSE_TEACHER_NEW: string = \"INITIAL_COURSE_TEACHER_NEW\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course_teacher_new: ICourseTeacherNew) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course_teacher_new\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCourseTeacherNew(course_teacher_new: ICourseTeacherNew): IInitialCourseTeacherNewActionType {\r\n    return { type: INITIAL_COURSE_TEACHER_NEW, course_teacher_new: course_teacher_new };\r\n}\r\n\r\nexport function removeCourseTeacherNewAll(): IRemoveCourseTeacherNewAllActionType {\r\n    return { type: REMOVE_COURSE_TEACHER_NEW_ALL };\r\n}\r\n\r\nexport function addCourseTeacherNew(course_teacher_new: ICourseTeacherNew): IAddCourseTeacherNewActionType {\r\n    return { type: ADD_COURSE_TEACHER_NEW, course_teacher_new: course_teacher_new };\r\n}\r\n\r\nexport function editCourseTeacherNew(course_teacher_new: ICourseTeacherNew): IEditCourseTeacherNewActionType {\r\n    return { type: EDIT_COURSE_TEACHER_NEW, course_teacher_new: course_teacher_new };\r\n}\r\n\r\nexport function removeCourseTeacherNew(id: string): IRemoveCourseTeacherNewActionType {\r\n    return { type: REMOVE_COURSE_TEACHER_NEW, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseTeacherNew(course_teacher_new: ICourseTeacherNew): IChangeSelectedCourseTeacherNewActionType {\r\n    return { type: CHANGE_COURSE_TEACHER_NEW_PENDING_EDIT, course_teacher_new: course_teacher_new };\r\n}\r\n\r\nexport function clearSelectedCourseTeacherNew(): IClearSelectedCourseTeacherNewActionType {\r\n    return { type: CLEAR_COURSE_TEACHER_NEW_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseTeacherNewModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddCourseTeacherNewActionType { type: string, course_teacher_new: ICourseTeacherNew };\r\ninterface IEditCourseTeacherNewActionType { type: string, course_teacher_new: ICourseTeacherNew };\r\ninterface IRemoveCourseTeacherNewActionType { type: string, id: string };\r\ninterface IChangeSelectedCourseTeacherNewActionType { type: string, course_teacher_new: ICourseTeacherNew };\r\ninterface IClearSelectedCourseTeacherNewActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  CourseTeacherNewModificationStatus};\r\ninterface IRemoveCourseTeacherNewAllActionType { type: string }\r\ninterface IInitialCourseTeacherNewActionType {type: string, course_teacher_new: ICourseTeacherNew}","import { logout } from \"../../../store/actions/account.actions\";\r\nimport { fetchDataSuccess, fetchDataError, removeCourseTeacherNewAll, initialCourseTeacherNew, addCourseTeacherNew } from \"../../../store/actions/course_teacher_new.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface CourseTeacherNew {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    art_type_id: string;\r\n    art_level_id: string;\r\n    art_age_id: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    total: number;\r\n    total_registed: number;\r\n    student_registered_name: string[];\r\n    student_registered_id: string[];\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getCourseTeacherNew(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/course/teacher/new/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getCourseTeacherNew(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeCourseTeacherNewAll())\r\n                console.log(data.body.courses)\r\n                data.body.courses.map((ele: any, index: any) => {\r\n                    var course: CourseTeacherNew = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        is_enabled: ele.is_enabled,\r\n                        art_type_id: ele.art_type_id,\r\n                        art_level_id: ele.art_level_id,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        total: ele.total,\r\n                        total_registed: ele.total_registed,\r\n                        student_registered_id: ele.student_registered_id,\r\n                        student_registered_name: ele.student_registered_name,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n\r\n                    }\r\n                    console.log(course)\r\n                    if (index === 0){\r\n                        return dispatch(initialCourseTeacherNew(course));\r\n                    }\r\n                    else{\r\n                        return dispatch(addCourseTeacherNew(course))\r\n                    }\r\n                })\r\n                dispatch(logout())\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeSelectedTeacherRegisterQuatificationApproved, setModificationState } from \"../../store/actions/teacher_register_quantification.action\";\r\nimport { IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport { ITeacherRegisterQuantification, TeacherRegisterQuantificationModificationStatus } from \"../../store/models/teacher_register_quantification.interface\";\r\nimport \"./CourseTeacher.css\"\r\nimport CourseTeacherNotRegisterList from \"./CourseTeacherNotRegisterList\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getCourseTeacherNew } from \"../../common/service/CourseTeacherNew/GetCourseTeacherNew\";\r\n\r\nconst CourseTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getCourseTeacherNew(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getCourseTeacherNew(dispatch, id))\r\n            }\r\n        }      \r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp theo kì\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n    function onTeacherRegisterQuantificationSelect(teacherRegisterQuantification: ITeacherRegisterQuantification): void {\r\n        dispatch(changeSelectedTeacherRegisterQuatificationApproved(teacherRegisterQuantification));\r\n        dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.None));\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <CourseTeacherNotRegisterList\r\n                    onSelect={onTeacherRegisterQuantificationSelect}\r\n                />\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default CourseTeacher;\r\n","import { ITimeScheduleTeacher, TimeScheduleTeacherModificationStatus } from \"../models/time_schedule_teacher.interface\";\r\nexport const ADD_TIME_SCHEDULE_TEACHER: string = \"ADD_TIME_SCHEDULE_TEACHER\";\r\nexport const EDIT_TIME_SCHEDULE_TEACHER: string = \"EDIT_TIME_SCHEDULE_TEACHER\";\r\nexport const REMOVE_TIME_SCHEDULE_TEACHER: string = \"REMOVE_TIME_SCHEDULE_TEACHER\";\r\nexport const CHANGE_TIME_SCHEDULE_TEACHER_AMOUNT: string = \"CHANGE_TIME_SCHEDULE_TEACHER_AMOUNT\";\r\nexport const CHANGE_TIME_SCHEDULE_TEACHER_PENDING_EDIT: string = \"CHANGE_TIME_SCHEDULE_TEACHER_PENDING_EDIT\";\r\nexport const CLEAR_TIME_SCHEDULE_TEACHER_PENDING_EDIT: string = \"CLEAR_TIME_SCHEDULE_TEACHER_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_TIME_SCHEDULE_TEACHER_ALL: string = \"REMOVE_TIME_SCHEDULE_TEACHER_ALL\";\r\nexport const INITIAL_TIME_SCHEDULE_TEACHER: string = \"INITIAL_TIME_SCHEDULE_TEACHER\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(time_schedule_teacher: ITimeScheduleTeacher) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        time_schedule_teacher\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialTimeScheduleTeacher(time_schedule_teacher: ITimeScheduleTeacher): IInitialTimeScheduleActionType {\r\n    return { type: INITIAL_TIME_SCHEDULE_TEACHER, time_schedule_teacher: time_schedule_teacher };\r\n}\r\n\r\nexport function removeTimeScheduleTeacherAll(): IRemoveTimeScheduleAllActionType {\r\n    return { type: REMOVE_TIME_SCHEDULE_TEACHER_ALL };\r\n}\r\n\r\nexport function addTimeScheduleTeacher(time_schedule_teacher: ITimeScheduleTeacher): IAddTimeScheduleActionType {\r\n    return { type: ADD_TIME_SCHEDULE_TEACHER, time_schedule_teacher: time_schedule_teacher };\r\n}\r\n\r\nexport function editTimeScheduleTeacher(time_schedule_teacher: ITimeScheduleTeacher): IEditTimeScheduleActionType {\r\n    return { type: EDIT_TIME_SCHEDULE_TEACHER, time_schedule_teacher: time_schedule_teacher };\r\n}\r\n\r\nexport function removeTimeScheduleTeacher(id: string): IRemoveTimeScheduleActionType {\r\n    return { type: REMOVE_TIME_SCHEDULE_TEACHER, id: id };\r\n}\r\n\r\nexport function changeSelectedTimeScheduleTeacher(time_schedule_teacher: ITimeScheduleTeacher): IChangeSelectedTimeScheduleActionType {\r\n    return { type: CHANGE_TIME_SCHEDULE_TEACHER_PENDING_EDIT, time_schedule_teacher: time_schedule_teacher };\r\n}\r\n\r\nexport function clearSelectedTimeScheduleTeacher(): IClearSelectedTimeScheduleActionType {\r\n    return { type: CLEAR_TIME_SCHEDULE_TEACHER_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: TimeScheduleTeacherModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddTimeScheduleActionType { type: string, time_schedule_teacher: ITimeScheduleTeacher };\r\ninterface IEditTimeScheduleActionType { type: string, time_schedule_teacher: ITimeScheduleTeacher };\r\ninterface IRemoveTimeScheduleActionType { type: string, id: string };\r\ninterface IChangeSelectedTimeScheduleActionType { type: string, time_schedule_teacher: ITimeScheduleTeacher };\r\ninterface IClearSelectedTimeScheduleActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  TimeScheduleTeacherModificationStatus};\r\ninterface IRemoveTimeScheduleAllActionType { type: string }\r\ninterface IInitialTimeScheduleActionType {type: string, time_schedule_teacher: ITimeScheduleTeacher}","import { fetchDataSuccess, fetchDataError, addTimeScheduleTeacher, removeTimeScheduleTeacherAll } from \"../../../store/actions/time_schedule_teacher.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\ninterface TimeScheduleTeacher {\r\n    class_name: string;\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\nexport function getScheduleTeacher(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/classes/teacher/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getScheduleTeacher(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeTimeScheduleTeacherAll())\r\n                //console.log(data.body.schedule_time)\r\n                data.body.schedule_time.map((ele: any, index: any) => {\r\n                    let x = Object.values(ele)\r\n                    let y = Object.keys(ele)\r\n                    return x.map((ele_1: any, idx: any) => {\r\n                        //console.log(ele_1)\r\n                        return Object.values(ele_1).map((ele_2: any) => {\r\n                            //console.log(ele_2)\r\n                            let x_1 = Object.values(ele_2)\r\n                            return x_1.map((ele_3: any) => {\r\n                                return ele_3.map((ele_4: any) => {\r\n                                    console.log(ele_4)\r\n                                    if (ele_4.length !== 0){\r\n                                        let time: TimeScheduleTeacher = {\r\n                                            class_name: y[idx],\r\n                                            start_time: ele_4[0],\r\n                                            end_time: ele_4[1]\r\n                                        }\r\n                                        dispatch(addTimeScheduleTeacher(time))\r\n                                    }\r\n                                    return ele_4\r\n                                })\r\n                            })\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IRootPageStateType, ITimeScheduleTeacherState } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedProduct\r\n} from \"../../store/actions/products.action\";\r\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, ViewsDirective, ViewDirective } from \"@syncfusion/ej2-react-schedule\";\r\n\r\nimport \"@syncfusion/ej2-base/styles/material.css\";\r\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\r\n\r\nimport { getScheduleTeacher } from \"../../common/service/ScheduleTeacher/GetScheduleTeacher\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst ScheduleTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const time_schedule_teacherss: ITimeScheduleTeacherState = useSelector((state: IStateType) => state.time_schedule_teachers);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getScheduleTeacher(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getScheduleTeacher(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, id])\r\n    let data: object[] = []\r\n\r\n    //console.log(time_schedules.timeSchedules)\r\n\r\n    time_schedule_teacherss.timeScheduleTeachers.map((ele: any, index: any) => {\r\n        //console.log(ele)\r\n        if (ele !== undefined && ele !== null) {\r\n            return data.push({\r\n                Id: index,\r\n                Subject: `Lớp ${ele.class_name}:  Buổi học ${index + 1}`,\r\n                StartTime: new Date(ele.start_time),\r\n                EndTime: new Date(ele.end_time),\r\n                IsAllDay: false\r\n            })\r\n        }\r\n        return 1\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedProduct());\r\n        dispatch(updateCurrentPath(\"Thời khóa biểu\", \"\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-body\">\r\n                            <ScheduleComponent height='550px' selectedDate={new Date()} eventSettings={{\r\n                                dataSource: data, fields: {\r\n                                    id: 'Id',\r\n                                    subject: { name: 'Subject' },\r\n                                    isAllDay: { name: 'IsAllDay' },\r\n                                    startTime: { name: 'StartTime' },\r\n                                    endTime: { name: 'EndTime' }\r\n                                }\r\n                            }}>\r\n\r\n                                <ViewsDirective>\r\n                                    <ViewDirective option='WorkWeek' startHour='07:00' endHour='22:00' />\r\n                                    <ViewDirective option='Week' startHour='07:00' endHour='22:00' />\r\n                                    <ViewDirective option='Month' showWeekend={false} />\r\n                                </ViewsDirective>\r\n                                <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\r\n                            </ScheduleComponent>;\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default ScheduleTeacher;\r\n","import { ICourseTeacher, CourseTeacherModificationStatus } from \"../models/course_teacher.interface\";\r\n\r\n// register_successfull_courses\r\nexport const ADD_REGISTER_SUCCESSFULL_COURSE: string = \"ADD_REGISTER_SUCCESSFULL_COURSE\";\r\nexport const EDIT_REGISTER_SUCCESSFULL_COURSE: string = \"EDIT_REGISTER_SUCCESSFULL_COURSE\";\r\nexport const REMOVE_REGISTER_SUCCESSFULL_COURSE: string = \"REMOVE_REGISTER_SUCCESSFULL_COURSE\";\r\nexport const CHANGE_REGISTER_SUCCESSFULL_COURSE_AMOUNT: string = \"CHANGE_REGISTER_SUCCESSFULL_COURSE_AMOUNT\";\r\nexport const CHANGE_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT: string = \"CHANGE_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT\";\r\nexport const CLEAR_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT: string = \"CLEAR_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT\";\r\nexport const REMOVE_REGISTER_SUCCESSFULL_COURSE_ALL: string = \"REMOVE_REGISTER_SUCCESSFULL_COURSE_ALL\";\r\nexport const INITIAL_REGISTER_SUCCESSFULL_COURSE: string = \"INITIAL_REGISTER_SUCCESSFULL_COURSE\";\r\n\r\n// not_register_courses\r\nexport const ADD_NOT_REGISTER_COURSE: string = \"ADD_NOT_REGISTER_COURSE\";\r\nexport const EDIT_NOT_REGISTER_COURSE: string = \"EDIT_NOT_REGISTER_COURSE\";\r\nexport const REMOVE_NOT_REGISTER_COURSE: string = \"REMOVE_NOT_REGISTER_COURSE\";\r\nexport const CHANGE_NOT_REGISTER_COURSE_AMOUNT: string = \"CHANGE_NOT_REGISTER_COURSE_AMOUNT\";\r\nexport const CHANGE_NOT_REGISTER_COURSE_PENDING_EDIT: string = \"CHANGE_NOT_REGISTER_COURSE_PENDING_EDIT\";\r\nexport const CLEAR_NOT_REGISTER_COURSE_PENDING_EDIT: string = \"CLEAR_NOT_REGISTER_COURSE_PENDING_EDIT\";\r\nexport const REMOVE_NOT_REGISTER_COURSE_ALL: string = \"REMOVE_NOT_REGISTER_COURSE_ALL\";\r\nexport const INITIAL_NOT_REGISTER_COURSE: string = \"INITIAL_NOT_REGISTER_COURSE\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course: ICourseTeacher) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialRegisterSuccessfullCourse(course: ICourseTeacher): IInitialRegisterSuccessfullCourseActionType {\r\n    return { type: INITIAL_REGISTER_SUCCESSFULL_COURSE, course: course };\r\n}\r\n\r\nexport function removeRegisterSuccessfullCourseAll(): IRemoveRegisterSuccessfullCourseAllActionType {\r\n    return { type: REMOVE_REGISTER_SUCCESSFULL_COURSE_ALL };\r\n}\r\n\r\nexport function addRegisterSuccessfullCourse(course: ICourseTeacher): IAddRegisterSuccessfullCourseActionType {\r\n    return { type: ADD_REGISTER_SUCCESSFULL_COURSE, course: course };\r\n}\r\n\r\nexport function editRegisterSuccessfullCourse(course: ICourseTeacher): IEditRegisterSuccessfullCourseActionType {\r\n    return { type: EDIT_REGISTER_SUCCESSFULL_COURSE, course: course };\r\n}\r\n\r\nexport function removeRegisterSuccessfullCourse(id: string): IRemoveRegisterSuccessfullCourseActionType {\r\n    return { type: REMOVE_REGISTER_SUCCESSFULL_COURSE, id: id };\r\n}\r\n\r\nexport function changeSelectedRegisterSuccessfullCourse(course: ICourseTeacher): IChangeSelectedRegisterSuccessfullCourseActionType {\r\n    return { type: CHANGE_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT, course: course };\r\n}\r\n\r\nexport function clearSelectedRegisterSuccessfullCourse(): IClearSelectedRegisterSuccessfullCourseActionType {\r\n    return { type: CLEAR_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialNotRegisterCourse(course: ICourseTeacher): IInitialNotRegisterCourseActionType {\r\n    return { type: INITIAL_NOT_REGISTER_COURSE, course: course };\r\n}\r\n\r\nexport function removeNotRegisterCourseAll(): IRemoveNotRegisterCourseAllActionType {\r\n    return { type: REMOVE_NOT_REGISTER_COURSE_ALL };\r\n}\r\n\r\nexport function addNotRegisterCourse(course: ICourseTeacher): IAddNotRegisterCourseActionType {\r\n    return { type: ADD_NOT_REGISTER_COURSE, course: course };\r\n}\r\n\r\nexport function editNotRegisterCourse(course: ICourseTeacher): IEditNotRegisterCourseActionType {\r\n    return { type: EDIT_NOT_REGISTER_COURSE, course: course };\r\n}\r\n\r\nexport function removeNotRegisterCourse(id: string): IRemoveNotRegisterCourseActionType {\r\n    return { type: REMOVE_NOT_REGISTER_COURSE, id: id };\r\n}\r\n\r\nexport function changeSelectedCourse(course: ICourseTeacher): IChangeSelectedNotRegisterCourseActionType {\r\n    return { type: CHANGE_NOT_REGISTER_COURSE_PENDING_EDIT, course: course };\r\n}\r\n\r\nexport function clearSelectedNotRegisterCourse(): IClearSelectedNotRegisterCourseActionType {\r\n    return { type: CLEAR_NOT_REGISTER_COURSE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseTeacherModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_courses\r\ninterface IAddRegisterSuccessfullCourseActionType { type: string, course: ICourseTeacher };\r\ninterface IEditRegisterSuccessfullCourseActionType { type: string, course: ICourseTeacher };\r\ninterface IRemoveRegisterSuccessfullCourseActionType { type: string, id: string };\r\ninterface IChangeSelectedRegisterSuccessfullCourseActionType { type: string, course: ICourseTeacher };\r\ninterface IClearSelectedRegisterSuccessfullCourseActionType { type: string };\r\ninterface IRemoveRegisterSuccessfullCourseAllActionType { type: string }\r\ninterface IInitialRegisterSuccessfullCourseActionType {type: string, course: ICourseTeacher}\r\n\r\n// not_register_courses\r\ninterface IAddNotRegisterCourseActionType { type: string, course: ICourseTeacher };\r\ninterface IEditNotRegisterCourseActionType { type: string, course: ICourseTeacher };\r\ninterface IRemoveNotRegisterCourseActionType { type: string, id: string };\r\ninterface IChangeSelectedNotRegisterCourseActionType { type: string, course: ICourseTeacher };\r\ninterface IClearSelectedNotRegisterCourseActionType { type: string };\r\ninterface IRemoveNotRegisterCourseAllActionType { type: string }\r\ninterface IInitialNotRegisterCourseActionType {type: string, course: ICourseTeacher}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  CourseTeacherModificationStatus};","import { fetchDataSuccess, fetchDataError, removeNotRegisterCourseAll, removeRegisterSuccessfullCourseAll, initialNotRegisterCourse, initialRegisterSuccessfullCourse, addNotRegisterCourse, addRegisterSuccessfullCourse } from \"../../../store/actions/course_teacher.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface CourseTeacher {\r\n    id: string;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: string;\r\n    semester_class_id: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    semester_name: string;\r\n    image_url: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n    registration_deadline: string;\r\n}\r\nexport function getCourseTeacher(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/course/teacher/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getCourseTeacher(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeNotRegisterCourseAll())\r\n                dispatch(removeRegisterSuccessfullCourseAll())\r\n                console.log(data.body.register_successfull_courses.length)\r\n                data.body.register_successfull_courses.map((ele: any, index: any) => {\r\n                    var course: CourseTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        course_name: ele.course_name,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semster_class_id,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        schedule: ele.schedule,\r\n                        registration_deadline: ele.registration_deadline\r\n\r\n                    }\r\n                    console.log(course)\r\n                    if (index === 0){\r\n                        return dispatch(initialRegisterSuccessfullCourse(course));\r\n                    }\r\n                    else{\r\n                        return dispatch(addRegisterSuccessfullCourse(course))\r\n                    }\r\n                })\r\n\r\n                console.log(data.body.not_register_courses.length)\r\n                data.body.not_register_courses.map((ele: any, index: any) => {\r\n                    var course: CourseTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        course_name: ele.course_name,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semster_class_id,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        schedule: ele.schedule,\r\n                        registration_deadline: ele.registration_deadline\r\n\r\n                    }\r\n                    console.log(course)\r\n                    if (index === 0){\r\n                        return dispatch(initialNotRegisterCourse(course));\r\n                    }\r\n                    else{\r\n                        return dispatch(addNotRegisterCourse(course))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./CourseTeacherDetail.css\"\r\nimport { postRegisterTeachSemester } from \"../../common/service/UserTeachSemester/PostRegisterTeachSemester\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { GrLinkDown } from \"react-icons/gr\";\r\n\r\nconst CourseTeacherDetail: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khóa học\", \"\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    function handleClick() {\r\n        setChecked(!checked)\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    var id_a = localStorage.getItem('description_course');\r\n    var description_course: string = '';\r\n    if (id_a !== null) {\r\n        description_course = id_a;\r\n    }\r\n\r\n    var id_c = localStorage.getItem('course_name');\r\n    var course_name: string = '';\r\n    if (id_c !== null) {\r\n        course_name = id_c;\r\n    }\r\n\r\n    var id_d = localStorage.getItem('art_age_name');\r\n    var art_age_name: string = '';\r\n    if (id_d !== null) {\r\n        art_age_name = id_d;\r\n    }\r\n\r\n    var id_e = localStorage.getItem('art_type_name');\r\n    var art_type_name: string = '';\r\n    if (id_e !== null) {\r\n        art_type_name = id_e;\r\n    }\r\n\r\n    var id_f = localStorage.getItem('num_of_section');\r\n    var num_of_section: string = '';\r\n    if (id_f !== null) {\r\n        num_of_section = id_f;\r\n    }\r\n\r\n    var id_h = localStorage.getItem('schedule');\r\n    var schedule: string = '';\r\n    if (id_h !== null) {\r\n        schedule = id_h;\r\n    }\r\n\r\n    var id_k = localStorage.getItem('art_level_name');\r\n    var art_level_name: string = '';\r\n    if (id_k !== null) {\r\n        art_level_name = id_k;\r\n    }\r\n\r\n    var id_l = localStorage.getItem('semester_class_name');\r\n    var semester_class_name: string = '';\r\n    if (id_l !== null) {\r\n        semester_class_name = id_l;\r\n    }\r\n\r\n    var id_n = localStorage.getItem('semester_class_id');\r\n    var semester_class_id: string = '';\r\n    if (id_n !== null) {\r\n        semester_class_id = id_n;\r\n    }\r\n\r\n    function handleRegister() {\r\n            dispatch(postRegisterTeachSemester({\r\n                teacher_id: id,\r\n                semester_classes_id: semester_class_id\r\n            }))\r\n            console.log({\r\n                teacher_id: id,\r\n                semester_classes_id: semester_class_id\r\n            })\r\n            toast.success(\"Đăng kí lớp thành công!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 2000\r\n            });\r\n            let path = '/courses'; \r\n            setTimeout(function () {\r\n                history.push({\r\n                    pathname: path\r\n                });\r\n            }, 2000); \r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"col-xl-12 col-lg-12\">\r\n            <div className=\"card shadow mb-4 shadow-1\">\r\n                        <div className=\"row no-gutters align-items-center\">\r\n                            <div className=\"text-xs font-weight-bold text-green text-uppercase \">\r\n                                <p className=\"fullname ml-2 mt-4\">{semester_class_name}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-6 col-md-6\">\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs \">\r\n                                        <p className=\"birthday ml-2\">Khóa học: {course_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday ml-2\">Thể loại: {art_type_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday ml-2\">Độ tuổi: {art_age_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday ml-2\">Trình độ: {art_level_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-xl-6 col-md-6\">\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs mr-2\">\r\n                                        <p className=\"birthday\">Lịch học: {schedule}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday\">Số buổi học: {num_of_section}</p>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    <div className=\"row text-center justify-content-center\" id=\"btn-register-course\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course\" onClick={() => handleRegister()}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí ngay\r\n                    </button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"btn-register-course\">\r\n                <div className=\"col-lg-12 col-md-12 col-xs-12 text-center justify-content-center\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course4\" onClick={() => handleClick()}>\r\n                    <GrLinkDown id=\"btn-payment\" color=\"#ffffff\" />\r\n                    Xem miêu tả\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <div className=\"col-xl-12 col-lg-12\">\r\n                                <div className=\"card-header py-3\">\r\n                                    <h6 className=\"m-0 font-weight-bold text-green\">Chi tiết</h6>\r\n                                </div>\r\n                                <div className=\"card shadow mb-4\">\r\n                                    <div className=\"card-body\" dangerouslySetInnerHTML={{ __html: description_course }}>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default CourseTeacherDetail;\r\n","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester.actions\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getCourseTeacher } from \"../CourseTeacher/GetCourseTeacherByTeacher\";\r\n\r\nexport function postRegisterTeachSemester(data: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/teacher-teach-semester`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postRegisterTeachSemester(data))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (x => {\r\n                console.log(x)\r\n                dispatch(getCourseTeacher(dispatch, data.teacher_id))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch, Fragment, useEffect } from \"react\";\r\nimport { ICourseState, IStateType, ITeacherRegisterQuantificationState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ITeacherRegisterQuantification, TeacherRegisterQuantificationModificationStatus } from \"../../store/models/teacher_register_quantification.interface\";\r\nimport { editTeacherRegisterQuatificationNotApproved, clearSelectedTeacherRegisterNotQuatificationNow, setModificationState, addTeacherRegisterQuatificationNotApprovedNow } from \"../../store/actions/teacher_register_quantification.action\";\r\nimport { OnChangeModel, ITeacherRegisterLevelFormState } from \"../../common/types/Form.types\";\r\nimport { postTeaherLevel } from \"../../common/service/TeacherRegisterQuantification/PostTeacherLevel\";\r\nimport { ICourse } from \"../../store/models/course.interface\";\r\nimport SelectKeyValue from \"../../common/components/SelectKeyValue\";\r\nimport { putTeacherRegisterLevel } from \"../../common/service/TeacherRegisterQuantification/PutTeacherRegisterLevel\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type lessonListProps = {\r\n  isCheck: (value: boolean) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\ntype Options = {\r\n    name: string;\r\n    value: any;\r\n  }\r\n\r\nfunction TeacherLevelForm(props: lessonListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const teacher_register_not_approved_nows: ITeacherRegisterQuantificationState | null = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n  let teacher_register_not_approved: ITeacherRegisterQuantification | null = teacher_register_not_approved_nows.selectedTeacherRegisterQuantification;\r\n  const isCreate: boolean = (teacher_register_not_approved_nows.modificationState === TeacherRegisterQuantificationModificationStatus.Create);\r\n  const courses: ICourseState = useSelector((state: IStateType) => state.courses);\r\n  const listCourse: ICourse[] = courses.courses\r\n  //console.log(listLevel)\r\n  const listCourses: Options[] = [];\r\n  listCourse.map((ele) => {\r\n      let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n      return listCourses.push(item)\r\n  })\r\n  console.log(listCourses)\r\n  if (!teacher_register_not_approved || isCreate) {\r\n    teacher_register_not_approved = { id: \"\", teacher_id: \"\",teacher_name: \"\", reviewer_id: \"\", course_id: \"\", course_name: \"\", art_age_name: \"\", art_level_name: \"\", art_type_name: \"\", degree_photo_url: \"\", status: \"Not approved now\"};\r\n  }\r\n\r\n  const [formState, setFormState] = useState({\r\n    teacher_id: { error: \"\", value: teacher_register_not_approved.teacher_id },\r\n    course_id: { error: \"\", value: teacher_register_not_approved.course_id },\r\n    degree_photo_url: { error: \"\", value: teacher_register_not_approved.degree_photo_url },\r\n    status: { error: \"\", value: teacher_register_not_approved.status }\r\n  });\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    //console.log(formState)\r\n    console.log(formState.course_id)\r\n  }\r\n\r\n  async function saveUser(e: FormEvent<HTMLFormElement>){\r\n    e.preventDefault();\r\n    if (isFormInvalid()) {\r\n      return;\r\n    }\r\n    const id = toast.loading(\"Yêu cầu đang được gửi. Vui lòng đợi giây lát...\", {\r\n      position: toast.POSITION.TOP_CENTER\r\n    });\r\n\r\n    props.isCheck(false);\r\n\r\n    var url = await setImageAction();\r\n\r\n    let saveUserFn: Function = (isCreate) ? addTeacherRegisterQuatificationNotApprovedNow : editTeacherRegisterQuatificationNotApproved;\r\n    saveForm(formState, saveUserFn, url, id);\r\n  }\r\n\r\n  function saveForm(formState: ITeacherRegisterLevelFormState, saveFn: Function, url: string, idx: any): void {\r\n    if (teacher_register_not_approved) {\r\n      \r\n      if (saveFn === addTeacherRegisterQuatificationNotApprovedNow) {\r\n        dispatch(postTeaherLevel({\r\n            teacher_id: localStorage.getItem('id'),\r\n            course_id: formState.course_id.value,\r\n            degree_photo_url: url,\r\n            status: \"Not approved now\"\r\n        }, idx));\r\n      }\r\n      else {\r\n        dispatch(putTeacherRegisterLevel(teacher_register_not_approved.id, {\r\n            teacher_id: localStorage.getItem('id'),\r\n            course_id: formState.course_id.value,\r\n            degree_photo_url: url,\r\n            status: \"Not approved now\"\r\n        }, idx));\r\n      }\r\n\r\n      console.log(saveFn)\r\n\r\n      dispatch(clearSelectedTeacherRegisterNotQuatificationNow());\r\n      dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.None));\r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    props.isCheck(false);\r\n    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid();\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  function isFormInvalid(): boolean {\r\n    return (formState.course_id.error \r\n      || !formState.course_id.value) as boolean;\r\n  }\r\n\r\n  const [image, setImage] = useState<any>();\r\n\r\n    const uploadPicture = (e: any) => {\r\n        setImage({\r\n            /* contains the preview, if you want to show the picture to the user\r\n                you can access it with this.state.currentPicture\r\n           */\r\n            picturePreview : URL.createObjectURL(e.target.files[0]),\r\n            /* this contains the file we want to send */\r\n            pictureAsFile : e.target.files[0]\r\n        })\r\n        setPreview(URL.createObjectURL(e.target.files[0]))\r\n    };\r\n\r\n    console.log(image)\r\n\r\n    async function setImageAction(){\r\n        const formData = new FormData();\r\n        formData.append(\r\n            \"gifFile\",\r\n            image.pictureAsFile\r\n        );\r\n        // do your post request\r\n        const res = await fetch(\r\n            `${process.env.REACT_APP_API_URL}/cloudinary/gifs`, {\r\n                method: \"POST\",\r\n                body: formData\r\n            }\r\n        )\r\n        const data = await res.json()\r\n        return data.url_image\r\n\r\n    };\r\n\r\n    const src = \"https://phutungnhapkhauchinhhang.com/wp-content/uploads/2020/06/default-thumbnail.jpg\"\r\n\r\n    const [preview, setPreview] = useState(src)\r\n    useEffect(() => {\r\n      if (isCreate === false && teacher_register_not_approved !== null) {\r\n        setPreview(teacher_register_not_approved.degree_photo_url)\r\n      }\r\n    }, [isCreate, teacher_register_not_approved])\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row text-left\">\r\n      <div className=\"col-xl-12 col-lg-12\">\r\n        <div className=\"card shadow mb-4\">\r\n          <div className=\"card-header py-3\">\r\n            <h6 className=\"m-0 font-weight-bold text-green\" id=\"header-form-teacher-level\">{(isCreate ? \"Đăng kí\" : \"Chỉnh\")} trình độ</h6>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={saveUser}>\r\n              <div className=\"form-group\">\r\n                    <SelectKeyValue id=\"input_course_id\"\r\n                      field = \"course_id\"\r\n                      value={formState.course_id.value}\r\n                      onChange={hasFormValueChanged}\r\n                      required={true}\r\n                      label=\"Khóa học\"\r\n                      options={listCourses}\r\n                  />\r\n                </div>\r\n                <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label htmlFor=\"profile_image\">Băng cấp (Chấp nhận: jpg, svg, png):</label>\r\n                                    <input type=\"file\" id=\"profile_image\" name=\"profile_image\" onChange={uploadPicture}/>\r\n                                </div>\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <img src={preview} alt=\"Preview\" id=\"avatar\"/>\r\n                                </div>\r\n                            </div>\r\n              <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n              <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TeacherLevelForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess } from \"../../../store/actions/teacher_register_quantification.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postNotifyDb } from \"../NotifyDb/PostNotifyDb\";\r\nimport { getTeacherRegisterQuantificationByTeacherId } from \"./GetTeacherRegisterQuantificationByTeacherId\";\r\n\r\nexport function postTeaherLevel(teacher_level: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    console.log(teacher_level)\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/teacher-register-level`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(teacher_level)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postTeaherLevel(teacher_level, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(postNotifyDb({\r\n                    name: `Gửi yêu cầu đăng kí trình độ!`,\r\n                    description: `Giáo viên gửi yêu cầu đăng kí trình độ!`\r\n                }, \"admin\"))\r\n                toast.update(idx, { render: \"Gửi yêu cầu thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });           \r\n                dispatch(fetchDataSuccess(teacher_level))\r\n                getTeacherRegisterQuantificationByTeacherId(dispatch, teacher_level.teacher_id)\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Gửi yêu cầu không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess } from \"../../../store/actions/teacher_register_quantification.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getTeacherRegisterQuantificationByTeacherId } from \"./GetTeacherRegisterQuantificationByTeacherId\";\r\n\r\nexport function putTeacherRegisterLevel(id: any, teacher_level: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/teacher-register-level/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(teacher_level)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putTeacherRegisterLevel(id, teacher_level, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                toast.update(idx, { render: \"Gửi yêu cầu thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataSuccess(teacher_level))\r\n                getTeacherRegisterQuantificationByTeacherId(dispatch, teacher_level.teacher_id)\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Gửi yêu cầu không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TopCardLevel from \"../../common/components/TopCardLevel\";\r\nimport { IStateType, ITeacherRegisterQuantificationState } from \"../../store/models/root.interface\";\r\nimport { ITeacherRegisterQuantification } from \"../../store/models/teacher_register_quantification.interface\";\r\n\r\nexport type teacherRegisterQuantificationListProps = {\r\n    onSelect?: (teacherRegisterQuantification: ITeacherRegisterQuantification) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction TeacherLevelList(props: teacherRegisterQuantificationListProps): JSX.Element {\r\n    const teacherRegisterQuantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n\r\n    const teacherRegisterQuantificationElements: (JSX.Element | null)[] = teacherRegisterQuantifications.approveds.map((ele, index) => {\r\n        if (!ele) { return null; }\r\n        return (\r\n            <tr className={`table-row`} key={`semester_class_${index}`}>\r\n            <TopCardLevel \r\n                course_name={ele.course_name} \r\n                icon=\"edit\" class=\"warning\" \r\n                art_age_name={ele.art_age_name}\r\n                art_level_name={ele.art_level_name}\r\n                art_type_name={ele.art_type_name}\r\n                degree_photo_url={ele.degree_photo_url}\r\n                teacher_level={ele}\r\n            />\r\n            </tr>\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n         <div className=\"table-responsive portlet\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {teacherRegisterQuantificationElements}\r\n        </tbody>\r\n        </table>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default TeacherLevelList;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TopCardLevel from \"../../common/components/TopCardLevel\";\r\nimport { IStateType, ITeacherRegisterQuantificationState } from \"../../store/models/root.interface\";\r\nimport { ITeacherRegisterQuantification } from \"../../store/models/teacher_register_quantification.interface\";\r\n\r\nexport type teacherRegisterQuantificationListProps = {\r\n    onSelect?: (teacherRegisterQuantification: ITeacherRegisterQuantification) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction TeacherLevelNotApprovedNowList(props: teacherRegisterQuantificationListProps): JSX.Element {\r\n    const teacherRegisterQuantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n\r\n    const teacherRegisterQuantificationElements: (JSX.Element | null)[] = teacherRegisterQuantifications.not_approved_now.map((ele, index) => {\r\n        if (!ele) { return null; }\r\n        return (\r\n            <TopCardLevel \r\n                course_name={ele.course_name} \r\n                icon=\"edit\" class=\"warning\" \r\n                art_age_name={ele.art_age_name}\r\n                art_level_name={ele.art_level_name}\r\n                art_type_name={ele.art_type_name}\r\n                degree_photo_url={ele.degree_photo_url}\r\n                teacher_level={ele}\r\n             />\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                function () {\r\n                    if (teacherRegisterQuantificationElements.length === 0) {\r\n                        return (\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <p id=\"not-data-not-register-now\">Không có dữ liệu!</p>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return teacherRegisterQuantificationElements\r\n                    } \r\n                }()\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TeacherLevelNotApprovedNowList;\r\n","import { logout } from \"../../../store/actions/account.actions\";\r\nimport { fetchDataSuccess, fetchDataError, removeCourseAll, initialCourse, addCourse } from \"../../../store/actions/course.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface Course {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    creator_id: string;\r\n    art_type_id: string;\r\n    art_level_id: string;\r\n    art_age_id: string;\r\n    art_age_name: string;\r\n    checked_tutoral: boolean;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getCourseNewForTeacher(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/course/teacher-new/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getCourseNewForTeacher(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeCourseAll())\r\n                console.log(data.body.courses)\r\n                data.body.courses.map((ele: any, index: any) => {\r\n                    var course: Course = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        is_enabled: ele.is_enabled,\r\n                        creator_id: ele.creator_id,\r\n                        art_type_id: \"\",\r\n                        art_level_id: \"\",\r\n                        art_age_id: \"\",\r\n                        art_age_name: \"\", \r\n                        art_level_name: \"\",\r\n                        art_type_name: \"\",\r\n                        checked_tutoral: false,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n\r\n                    }\r\n                    console.log(course)\r\n                    if (index === 0){\r\n                        return dispatch(initialCourse(course));\r\n                    }\r\n                    else{\r\n                        return dispatch(addCourse(course))\r\n                    }\r\n                })\r\n                dispatch(logout())\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Popup from \"reactjs-popup\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getTeacherRegisterQuantificationByTeacherId } from \"../../common/service/TeacherRegisterQuantification/GetTeacherRegisterQuantificationByTeacherId\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { changeSelectedTeacherRegisterQuatificationApproved, setModificationState } from \"../../store/actions/teacher_register_quantification.action\";\r\nimport { IStateType, ITeacherRegisterQuantificationState } from \"../../store/models/root.interface\";\r\nimport { ITeacherRegisterQuantification, TeacherRegisterQuantificationModificationStatus } from \"../../store/models/teacher_register_quantification.interface\";\r\nimport \"./TeacherLevel.css\"\r\nimport TeacherLevelForm from \"./TeacherLevelForm\";\r\nimport TeacherLevelList from \"./TeacherLevelList\";\r\nimport TeacherLevelNotApprovedNowList from \"./TeacherLevelNotApprovedNowList\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getCourseNewForTeacher } from \"../../common/service/Course/GetNewCourseForTeacher\";\r\n\r\nconst TeacherLevel: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const teacherRegisterQuantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n    const numberApprovedCount: number = teacherRegisterQuantifications.approveds.length;\r\n    const numberNotApprovedNowCount: number = teacherRegisterQuantifications.not_approved_now.length;\r\n    const numberNotApprovedCount: number = teacherRegisterQuantifications.not_approves.length;\r\n    const [popup, setPopup] = useState(false);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getTeacherRegisterQuantificationByTeacherId(dispatch, id))\r\n                    trackPromise(getCourseNewForTeacher(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getTeacherRegisterQuantificationByTeacherId(dispatch, id))\r\n                trackPromise(getCourseNewForTeacher(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    function onTeacherRegisterQuantificationSelect(teacherRegisterQuantification: ITeacherRegisterQuantification): void {\r\n        dispatch(changeSelectedTeacherRegisterQuatificationApproved(teacherRegisterQuantification));\r\n        dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.None));\r\n    }\r\n\r\n    function onRemovePopup(value: boolean) {\r\n        setPopup(false);\r\n    }\r\n\r\n    function onTeacherLevelRemove() {\r\n        setPopup(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (teacherRegisterQuantifications.modificationState === TeacherRegisterQuantificationModificationStatus.Edit){\r\n            setPopup(true)\r\n        }\r\n    }, [teacherRegisterQuantifications.modificationState, popup])\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n            <div className=\"row\">\r\n                <TopCard title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`${numberApprovedCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`${numberNotApprovedNowCount}`} icon=\"book\" class=\"danger\" />\r\n                <TopCard title=\"TRÌNH ĐỘ KHÔNG ĐƯỢC DUYỆT\" text={`${numberNotApprovedCount}`} icon=\"book\" class=\"danger\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n            <ToastContainer />\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12 mb-4\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() => \r\n                        {\r\n                            dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))\r\n                            onTeacherLevelRemove()\r\n                        }}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <h3 className=\" mb-2\" id=\"level-teacher\">Trình độ đã duyệt</h3>\r\n                    <TeacherLevelList\r\n                        onSelect={onTeacherRegisterQuantificationSelect}\r\n                    />\r\n                    {/* <TopCardLevel title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`2`} icon=\"book\" class=\"primary\" />\r\n                    <TopCardLevel title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`1`} icon=\"book\" class=\"danger\" /> */}\r\n                </div>\r\n\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <h3 className=\" mb-2\" id=\"level-teacher\">Trình độ chưa được duyệt</h3>\r\n                    <TeacherLevelNotApprovedNowList\r\n                        onSelect={onTeacherRegisterQuantificationSelect}\r\n                    />\r\n                    {/* <TopCardLevel title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`2`} icon=\"book\" class=\"primary\" />\r\n                    <TopCardLevel title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`1`} icon=\"book\" class=\"danger\" /> */}\r\n                </div>\r\n            </div>\r\n\r\n            <Popup\r\n                open={popup}\r\n                onClose={() => {\r\n                    setPopup(false)\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.None))\r\n                }}\r\n                closeOnDocumentClick\r\n            >\r\n                <>\r\n                    {\r\n                        function () {\r\n                            if ((teacherRegisterQuantifications.modificationState === TeacherRegisterQuantificationModificationStatus.Create) || ( teacherRegisterQuantifications.modificationState === TeacherRegisterQuantificationModificationStatus.Edit)) {\r\n                                return <TeacherLevelForm isCheck={onRemovePopup}/>\r\n                            }\r\n                        }()\r\n                    }\r\n                </>\r\n            </Popup>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default TeacherLevel;\r\n","export interface IClassTeacher {\r\n    id: string;\r\n    name: string;\r\n    course_id: string;\r\n    link_url: string;\r\n    semester_class_id: string;\r\n    user_register_teach_semester: number;\r\n    security_code: string;\r\n    total_student: number;\r\n    num_of_section: number;\r\n    course_name: string;\r\n    semester_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n}\r\n\r\nexport enum ClassTeacherModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { clearSelectedTeacherRegisterNotQuatificationNow } from \"../../store/actions/teacher_register_quantification.action\";\r\n\r\ninterface DetailTeacherLevel {\r\n    art_age_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    course_name: string;\r\n    degree_photo_url: string;\r\n}\r\n\r\nconst TeacherLevelDetail: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n\r\n    const { state } = useLocation<any>();\r\n    let data: DetailTeacherLevel = {\r\n        art_age_name: \"\",\r\n        art_level_name: \"\",\r\n        art_type_name: \"\",\r\n        course_name: \"\",\r\n        degree_photo_url: \"\"\r\n    }\r\n    if (state !== undefined && state !== null) {\r\n        data = state\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedTeacherRegisterNotQuatificationNow());\r\n        dispatch(updateCurrentPath(\"Đăng kí trình độ\", \"Chi tiết\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"col-xl-12 col-lg-12\">\r\n                <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row no-gutters justify-content-center\">\r\n                            <h4 id=\"full-name\">{data.course_name}</h4>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <p className=\"col-4\" id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">Thể loại:</span> <span className=\"header-card-course-value-teacher\">{data.art_type_name}</span></p>\r\n                            <p className=\"col-4\" id=\"level-name-teacher\"><span className=\"header-card-course-teacher\">Trình độ:</span> <span className=\"header-card-course-value-teacher\">{data.art_level_name}</span></p>\r\n                            <p className=\"col-4\" id=\"age-name-teacher\"><span className=\"header-card-course-teacher\">Độ tuổi:</span> <span className=\"header-card-course-value-teacher\">{data.art_age_name}</span></p>\r\n                        </div>  \r\n                        <div className=\"row justify-content-center\">\r\n                            <img src={data.degree_photo_url} alt=\"Preview\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default TeacherLevelDetail;\r\n","import { IClassTeacher, ClassTeacherModificationStatus } from \"../models/class_teacher.interface\";\r\n\r\n// register_successfull_class_teachers\r\nexport const ADD_DOING_CLASS: string = \"ADD_DOING_CLASS\";\r\nexport const EDIT_DOING_CLASS: string = \"EDIT_DOING_CLASS\";\r\nexport const REMOVE_DOING_CLASS: string = \"REMOVE_DOING_CLASS\";\r\nexport const CHANGE_DOING_CLASS_AMOUNT: string = \"CHANGE_DOING_CLASS_AMOUNT\";\r\nexport const CHANGE_DOING_CLASS_PENDING_EDIT: string = \"CHANGE_DOING_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_DOING_CLASS_PENDING_EDIT: string = \"CLEAR_DOING_CLASS_PENDING_EDIT\";\r\nexport const REMOVE_DOING_CLASS_ALL: string = \"REMOVE_DOING_CLASS_ALL\";\r\nexport const INITIAL_DOING_CLASS: string = \"INITIAL_DOING_CLASS\";\r\n\r\n// not_register_class_teachers\r\nexport const ADD_DONE_CLASS: string = \"ADD_DONE_CLASS\";\r\nexport const EDIT_DONE_CLASS: string = \"EDIT_DONE_CLASS\";\r\nexport const REMOVE_DONE_CLASS: string = \"REMOVE_DONE_CLASS\";\r\nexport const CHANGE_DONE_CLASS_AMOUNT: string = \"CHANGE_DONE_CLASS_AMOUNT\";\r\nexport const CHANGE_DONE_CLASS_PENDING_EDIT: string = \"CHANGE_DONE_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_DONE_CLASS_PENDING_EDIT: string = \"CLEAR_DONE_CLASS_PENDING_EDIT\";\r\nexport const REMOVE_DONE_CLASS_ALL: string = \"REMOVE_DONE_CLASS_ALL\";\r\nexport const INITIAL_DONE_CLASS: string = \"INITIAL_DONE_CLASS\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(class_teacher: IClassTeacher) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        class_teacher\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialDoinglClass(class_teacher: IClassTeacher): IInitialDoinglClassActionType {\r\n    return { type: INITIAL_DOING_CLASS, class_teacher: class_teacher };\r\n}\r\n\r\nexport function removeDoinglClassAll(): IRemoveDoinglClassAllActionType {\r\n    return { type: REMOVE_DOING_CLASS_ALL };\r\n}\r\n\r\nexport function addDoinglClass(class_teacher: IClassTeacher): IAddDoinglClassActionType {\r\n    return { type: ADD_DOING_CLASS, class_teacher: class_teacher };\r\n}\r\n\r\nexport function editDoinglClass(class_teacher: IClassTeacher): IEditDoinglClassActionType {\r\n    return { type: EDIT_DOING_CLASS, class_teacher: class_teacher };\r\n}\r\n\r\nexport function removeDoinglClass(id: string): IRemoveDoinglClassActionType {\r\n    return { type: REMOVE_DOING_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedDoinglClass(class_teacher: IClassTeacher): IChangeSelectedDoinglClassActionType {\r\n    return { type: CHANGE_DOING_CLASS_PENDING_EDIT, class_teacher: class_teacher };\r\n}\r\n\r\nexport function clearSelectedDoinglClass(): IClearSelectedDoinglClassActionType {\r\n    return { type: CLEAR_DOING_CLASS_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialDoneClass(class_teacher: IClassTeacher): IInitialDoneClassActionType {\r\n    return { type: INITIAL_DONE_CLASS, class_teacher: class_teacher };\r\n}\r\n\r\nexport function removeDoneClassAll(): IRemoveDoneClassAllActionType {\r\n    return { type: REMOVE_DONE_CLASS_ALL };\r\n}\r\n\r\nexport function addDoneClass(class_teacher: IClassTeacher): IAddDoneClassActionType {\r\n    return { type: ADD_DONE_CLASS, class_teacher: class_teacher };\r\n}\r\n\r\nexport function editDoneClass(class_teacher: IClassTeacher): IEditDoneClassActionType {\r\n    return { type: EDIT_DONE_CLASS, class_teacher: class_teacher };\r\n}\r\n\r\nexport function removeDoneClass(id: string): IRemoveDoneClassActionType {\r\n    return { type: REMOVE_DONE_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedDoneClass(class_teacher: IClassTeacher): IChangeSelectedDoneClassActionType {\r\n    return { type: CHANGE_DONE_CLASS_PENDING_EDIT, class_teacher: class_teacher };\r\n}\r\n\r\nexport function clearSelectedDoneClass(): IClearSelectedDoneClassActionType {\r\n    return { type: CLEAR_DONE_CLASS_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ClassTeacherModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_class_teachers\r\ninterface IAddDoinglClassActionType { type: string, class_teacher: IClassTeacher };\r\ninterface IEditDoinglClassActionType { type: string, class_teacher: IClassTeacher };\r\ninterface IRemoveDoinglClassActionType { type: string, id: string };\r\ninterface IChangeSelectedDoinglClassActionType { type: string, class_teacher: IClassTeacher };\r\ninterface IClearSelectedDoinglClassActionType { type: string };\r\ninterface IRemoveDoinglClassAllActionType { type: string }\r\ninterface IInitialDoinglClassActionType {type: string, class_teacher: IClassTeacher}\r\n\r\n// not_register_class_teachers\r\ninterface IAddDoneClassActionType { type: string, class_teacher: IClassTeacher };\r\ninterface IEditDoneClassActionType { type: string, class_teacher: IClassTeacher };\r\ninterface IRemoveDoneClassActionType { type: string, id: string };\r\ninterface IChangeSelectedDoneClassActionType { type: string, class_teacher: IClassTeacher };\r\ninterface IClearSelectedDoneClassActionType { type: string };\r\ninterface IRemoveDoneClassAllActionType { type: string }\r\ninterface IInitialDoneClassActionType {type: string, class_teacher: IClassTeacher}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ClassTeacherModificationStatus};","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IClassTeacher } from \"../../store/models/class_teacher.interface\";\r\nimport { IClassTeacherState, IStateType } from \"../../store/models/root.interface\";\r\n\r\nexport type classTeacherListProps = {\r\n  onSelect?: (classTeacher: IClassTeacher) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction ClassDoingList(props: classTeacherListProps): JSX.Element {\r\n  const class_teachers: IClassTeacherState = useSelector((state: IStateType) => state.class_teachers);\r\n\r\n\r\n  const history = useHistory();\r\n  const routeChange = (class_teacher: IClassTeacher) => {\r\n    let path = '/classes/detail';\r\n    localStorage.removeItem(\"class_id\");\r\n    localStorage.setItem(\"class_id\", class_teacher.id.toString())\r\n    history.push({\r\n      pathname: path,\r\n      state: { class_id: class_teacher.id }\r\n    });\r\n  }\r\n\r\n  const lessonElements: (JSX.Element | null)[] = class_teachers.class_doing.map((contest, index) => {\r\n    //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n    if (!contest) { return null; }\r\n    return (<tr className={`table-row `}\r\n      key={`lesson_${contest.id}`} onClick={() => { routeChange(contest) }}>\r\n      <th scope=\"row\" className=\"data-table\">{index + 1}</th>\r\n      <td className=\"data-table\">{contest.name}</td>\r\n      <td className=\"data-table\">{contest.course_name}</td>\r\n      <td className=\"data-table\">{contest.semester_name}</td>\r\n      <td className=\"data-table\">{contest.total_student}</td>\r\n      <td className=\"data-table\">{contest.schedule}</td>\r\n      <td className=\"data-table\">{contest.num_of_section}</td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"table-responsive portlet\">\r\n        <table className=\"table\">\r\n          <thead id=\"table-thread-contest-section\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"name-row-table\">#</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Tên lớp</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Khóa học</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Học kì</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Số học viên</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Lịch học</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Số buổi học</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {lessonElements}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ClassDoingList;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IClassTeacher } from \"../../store/models/class_teacher.interface\";\r\nimport { IClassTeacherState, IStateType } from \"../../store/models/root.interface\";\r\n\r\nexport type classTeacherListProps = {\r\n  onSelect?: (classTeacher: IClassTeacher) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction ClassDoneList(props: classTeacherListProps): JSX.Element {\r\n  const class_teachers: IClassTeacherState = useSelector((state: IStateType) => state.class_teachers);\r\n\r\n  const history = useHistory();\r\n  const routeChange = (class_teacher: IClassTeacher) => {\r\n    let path = '/classes/detail';\r\n    localStorage.removeItem(\"class_id\");\r\n    localStorage.setItem(\"class_id\", class_teacher.id.toString())\r\n    history.push({\r\n      pathname: path,\r\n      state: { class_id: class_teacher.id }\r\n    });\r\n  }\r\n\r\n  const lessonElements: (JSX.Element | null)[] = class_teachers.class_done.map((contest, index) => {\r\n    //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n    if (!contest) { return null; }\r\n    return (<tr className={`table-row `}\r\n      key={`lesson_${contest.id}`} onClick={() => { routeChange(contest) }}>\r\n      <th scope=\"row\" className=\"data-table\">{index + 1}</th>\r\n      <td className=\"data-table\">{contest.name}</td>\r\n      <td className=\"data-table\">{contest.course_name}</td>\r\n      <td className=\"data-table\">{contest.semester_name}</td>\r\n      <td className=\"data-table\">{contest.total_student}</td>\r\n      <td className=\"data-table\">{contest.schedule}</td>\r\n      <td className=\"data-table\">{contest.num_of_section}</td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"table-responsive portlet\">\r\n        <table className=\"table\">\r\n          <thead id=\"table-thread-contest-section\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"name-row-table\">#</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Tên lớp</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Khóa học</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Học kì</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Số học viên</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Lịch học</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Số buổi học</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {lessonElements}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ClassDoneList;\r\n","import { fetchDataSuccess, fetchDataError, removeDoinglClassAll, removeDoneClassAll, initialDoinglClass, initialDoneClass,  addDoinglClass, addDoneClass } from \"../../../store/actions/class_teacher.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ClassTeacher {\r\n    id: string;\r\n    name: string;\r\n    course_id: string;\r\n    link_url: string;\r\n    semester_class_id: string;\r\n    user_register_teach_semester: number;\r\n    security_code: string;\r\n    total_student: number;\r\n    num_of_section: number;\r\n    course_name: string;\r\n    semester_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n}\r\nexport function getClassTeacher(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/classes/teacher/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getClassTeacher(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeDoinglClassAll())\r\n                dispatch(removeDoneClassAll())\r\n                console.log(data.body.classes_done)\r\n                console.log(data.body.classes_doing)\r\n                data.body.classes_done.map((ele: any, index: any) => {\r\n                    var class_teacher: ClassTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semester_class_id,\r\n                        link_url: ele.link_url,\r\n                        user_register_teach_semester: ele.user_register_teach_semester,\r\n                        security_code: ele.security_code,\r\n                        total_student: ele.total_student,\r\n                        num_of_section: ele.num_of_section,\r\n                        schedule: ele.schedule,\r\n                        course_name: ele.course_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name\r\n                    }\r\n                    console.log(class_teacher)\r\n                    if (index === 0){\r\n                        return dispatch(initialDoneClass(class_teacher));\r\n                    }\r\n                    else{\r\n                        return dispatch(addDoneClass(class_teacher))\r\n                    }\r\n                })\r\n\r\n                data.body.classes_doing.map((ele: any, index: any) => {\r\n                    var class_teacher: ClassTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        link_url: ele.link_url,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semester_class_id,\r\n                        user_register_teach_semester: ele.user_register_teach_semester,\r\n                        security_code: ele.security_code,\r\n                        total_student: ele.total_student,\r\n                        num_of_section: ele.num_of_section,\r\n                        schedule: ele.schedule,\r\n                        course_name: ele.course_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name\r\n                    }\r\n                    console.log(class_teacher)\r\n                    if (index === 0){\r\n                        return dispatch(initialDoinglClass(class_teacher));\r\n                    }\r\n                    else{\r\n                        return dispatch(addDoinglClass(class_teacher))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\nimport { changeSelectedDoinglClass, setModificationState } from \"../../store/actions/class_teacher.action\";\r\nimport { IClassTeacherState, IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport { IClassTeacher, ClassTeacherModificationStatus } from \"../../store/models/class_teacher.interface\";\r\nimport \"./ClassTeacher.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport ClassDoingList from \"./ClassTeachingTeacherList\";\r\nimport ClassDoneList from \"./ClassDoneTeacherList\";\r\nimport { getClassTeacher } from \"../../common/service/ClassTeacher/GetClassTeacher\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { getCourse } from \"../../common/service/Course/GetCourse\";\r\nimport { getSemester } from \"../../common/service/semester/GetSemester\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst ClassTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const class_teachers: IClassTeacherState = useSelector((state: IStateType) => state.class_teachers);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberClassDoingCount: number = class_teachers.class_doing.length;\r\n    const numberClassDoneCount: number = class_teachers.class_done.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getUserById(dispatch, id))\r\n                    trackPromise(getClassTeacher(dispatch, id))\r\n                    trackPromise(getCourse(dispatch))\r\n                    trackPromise(getSemester(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getUserById(dispatch, id))\r\n                trackPromise(getClassTeacher(dispatch,id))\r\n                trackPromise(getCourse(dispatch))\r\n                trackPromise(getSemester(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khóa học\", \"\"));\r\n    }, [dispatch, path.area])\r\n\r\n    function onClassTeacherSelect(class_teacher: IClassTeacher): void {\r\n        dispatch(changeSelectedDoinglClass(class_teacher));\r\n        dispatch(setModificationState(ClassTeacherModificationStatus.None));\r\n    }\r\n\r\n    const [checked, setChecked] = useState(true);\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ LỚP ĐANG DẠY\" text={`${numberClassDoingCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"SỐ LỚP ĐÃ DẠY\" text={`${numberClassDoneCount}`} icon=\"book\" class=\"primary\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(ClassTeacherModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked === false) {\r\n                            setChecked(true)\r\n                        }\r\n                    }} style={{\r\n                        color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Đang dạy</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked === true) {\r\n                            setChecked(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                        }}>Đã dạy</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#ffffff\" : \"#F24E1E\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách lớp</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ClassDoingList\r\n                                                    onSelect={onClassTeacherSelect}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách lớp</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ClassDoneList\r\n                                                    onSelect={onClassTeacherSelect}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ClassTeacher;\r\n","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IAnonymousNotificationState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IAnonymousNotification, AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editAnonymousNotification, clearSelectedAnonymousNotification, setModificationStateAnonymousNotification, addAnonymousNotification } from \"../../store/actions/anonymous_notification.action\";\r\nimport { OnChangeModel, IAnonymousNotificationFormState } from \"../../common/types/Form.types\";\r\nimport { postNotificationByClass } from \"../../common/service/Notification/PostNotificationByClass\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type artAgeListProps = {\r\n    isCheck: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n    data?: any;\r\n};\r\n\r\n\r\nfunction NotificationClassTeacher(props: artAgeListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const notifications: IAnonymousNotificationState | null = useSelector((state: IStateType) => state.anonymous_notifications);\r\n    let notification: IAnonymousNotification | null = notifications.selectedAnonymousNotification;\r\n    const isCreate: boolean = (notifications.modificationState === AnonymousNotificationModificationStatus.Create);\r\n\r\n    if (!notification || isCreate) {\r\n        notification = { id: \"\", name: \"\", description: \"\", time: \"\" };\r\n    }\r\n\r\n    const [formState, setFormState] = useState({\r\n        name: { error: \"\", value: notification.name },\r\n        description: { error: \"\", value: notification.description },\r\n        type_send: { error: \"\", value: \"Chon gửi tới\" },\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        props.isCheck(false);\r\n        let saveUserFn: Function = (isCreate) ? addAnonymousNotification : editAnonymousNotification;\r\n        saveForm(formState, saveUserFn);\r\n    }\r\n\r\n    function saveForm(formState: IAnonymousNotificationFormState, saveFn: Function): void {\r\n        if (notification) {\r\n            const id = toast.loading(\"Đang gửi thông báo. Vui lòng đợi trong giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            if (saveFn === addAnonymousNotification) {\r\n                if (props.data === undefined || props.data === null) {\r\n                    return \r\n                }\r\n                else {\r\n                    dispatch(postNotificationByClass(props.data.class_id,{\r\n                        name: formState.name.value,\r\n                        description: formState.description.value\r\n                    }, id))\r\n\r\n                    console.log({\r\n                        name: formState.name.value,\r\n                        description: formState.description.value,\r\n                        type_send: props.data.class_id\r\n                    })\r\n                }\r\n            }\r\n\r\n            dispatch(clearSelectedAnonymousNotification());\r\n            dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.None));\r\n        }\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        props.isCheck(false);\r\n        dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.name.error || !formState.name.value) as boolean;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} độ tuổi</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_email\"\r\n                                        value={formState.name.value}\r\n                                        field=\"name\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={20}\r\n                                        label=\"Tên\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_description\"\r\n                                        field=\"description\"\r\n                                        value={formState.description.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        maxLength={100}\r\n                                        label=\"Miêu tả\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default NotificationClassTeacher;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/art_age.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postNotificationByClass(id: any,data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/sendEmail/class/${id}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Authorization': bearer,\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                'Access-Control-Allow-Credentials': 'true'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }\r\n        )\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postNotificationByClass(id,data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then(data => {\r\n                toast.update(idx, { render: \"Thông báo gửi thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Thông báo gửi không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction StudentList(): JSX.Element {\r\n\r\n    const students: IUserState = useSelector((state: IStateType) => state.users);\r\n    const history = useHistory();\r\n\r\n\r\n    const routeChange = (student_id: string, parent_id: string) => {\r\n        localStorage.removeItem('student_id');\r\n        localStorage.setItem('student_id', student_id.toString());\r\n        localStorage.removeItem('parent_id');\r\n        localStorage.setItem('parent_id', parent_id.toString());\r\n        let path = '/manage-student';\r\n        history.push(path);\r\n    }\r\n\r\n\r\n    const studentElements: (JSX.Element | null)[] = students.students.map((student, idx) => {\r\n        if (!student) { return null; }\r\n        return (<tr className={`table-row ${(students.selectedUser && students.selectedUser.id === student.id) ? \"selected\" : \"\"}`}\r\n            key={`student_${idx}`} onClick={() => {routeChange(student.id, student.parents)}}>\r\n            <div className=\"col-xl-12 col-md-12 mb-4\" >\r\n            <div className={`card shadow h-100 py-0 content-student-teacher`} id=\"topcard-user\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 col-xs-12\">\r\n                            <div className=\"row\">\r\n                                <p className=\"col-4\"><span className=\"header-card-course-teacher\" id=\"index-infor-student-teacher\">{idx + 1}</span></p>\r\n                                <i className={`col-4 fas fa-user-circle fa-2x`} id=\"icon-user\"></i>\r\n                                <p className=\"col-4\"id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.username}</span></p>\r\n                            </div>  \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"table-responsive portlet\">\r\n            <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {studentElements}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default StudentList;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Popup from \"reactjs-popup\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getInfoMyClass } from \"../../common/service/MyClass/GetInfoMyClass\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { setModificationStateAnonymousNotification } from \"../../store/actions/anonymous_notification.action\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { clearSelectedTeacherRegisterQuatification } from \"../../store/actions/teacher_register_quantification.action\";\r\nimport { AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\r\nimport { IAnonymousNotificationState, IRootPageStateType, IStateType, ITeacherRegisterQuantificationState, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ClassTeacherDetail.css\"\r\nimport NotificationClassTeacher from \"./NotificationClassTeacher\";\r\nimport StudentList from \"./StudentForTeacherList\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst ClassTeacherDetail: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const teacherRegisterQuantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n    const anonymous_notifications: IAnonymousNotificationState | null = useSelector((state: IStateType) => state.anonymous_notifications);\r\n    console.log(teacherRegisterQuantifications)\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const students: IUserState = useSelector((state: IStateType) => state.users);\r\n    const numberStudentsCount: number = students.students.length;\r\n    var id_x = localStorage.getItem('class_id');\r\n    let class_id: string = \"\";\r\n    if (id_x !== null) {\r\n        class_id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    dispatch(clearSelectedTeacherRegisterQuatification());       \r\n                    trackPromise(getInfoMyClass(dispatch, class_id))\r\n                }\r\n            }\r\n            else {\r\n                dispatch(clearSelectedTeacherRegisterQuatification());       \r\n                trackPromise(getInfoMyClass(dispatch, class_id))\r\n            }\r\n        }\r\n    }, [dispatch, class_id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp\", \"Chi tiết\"));\r\n    }, [dispatch, path.area])\r\n\r\n\r\n    const [popup1, setPopup1] = useState(false);\r\n\r\n    function onAnonymousNotificationRemove() {\r\n        setPopup1(true);\r\n    }\r\n\r\n\r\n    function onRemovePopup1(value: boolean) {\r\n        setPopup1(false);\r\n    }\r\n\r\n    const history = useHistory();\r\n    const onRouteChange = () =>{ \r\n        let path = '/classes/detail-student'; \r\n        history.push({\r\n            pathname: path,\r\n            state: {class_id: class_id}\r\n        });\r\n    }\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n            <ToastContainer />\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ BUỔI ĐÃ DẠY\" text={`${numberStudentsCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"SỐ HỌC SINH\" text={`${numberStudentsCount}`} icon=\"book\" class=\"danger\" />\r\n                <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button \r\n                        className=\"btn btn-success btn-green\" \r\n                        id=\"btn-create-teacher-level\" \r\n                        onClick={() => {\r\n                            dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.Create))\r\n                            onAnonymousNotificationRemove()\r\n                        }}\r\n                    >\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Gửi thông báo\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <Popup\r\n                open={popup1}\r\n                onClose={() => setPopup1(false)}\r\n                closeOnDocumentClick\r\n            >\r\n                <>\r\n                    {\r\n                        function () {\r\n                            if ((anonymous_notifications.modificationState === AnonymousNotificationModificationStatus.Create)) {\r\n                                return <NotificationClassTeacher isCheck={onRemovePopup1} data={class_id}/>\r\n                            }\r\n                        }()\r\n                    }\r\n                </>\r\n            </Popup>\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-xl-8 col-md-8 mb-4\">\r\n                    <h3 className=\" mb-2\" id=\"level-teacher\">Danh sách học sinh</h3>\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                        <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                            <div className=\"card-body\">\r\n                                <StudentList />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-xl-4 col-md-4 mb-4\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <button className=\"btn btn-success btn-green\" id=\"btn-into-class\" onClick={() =>{\r\n                        onRouteChange()}}>\r\n                            Vào lớp\r\n                            <i className=\"fas fa fa-arrow-right\"></i>\r\n                    </button>\r\n                    </div>\r\n                    {/* <TopCardLevel title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`2`} icon=\"book\" class=\"primary\" />\r\n                    <TopCardLevel title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`1`} icon=\"book\" class=\"danger\" /> */}\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ClassTeacherDetail;\r\n","import { IContestTeacher, ContestTeacherModificationStatus } from \"../models/contest_teacher.interface\";\r\n\r\n// contest_opening\r\nexport const ADD_CONTEST_TEACHER_OPENING: string = \"ADD_CONTEST_TEACHER_OPENING\";\r\nexport const EDIT_CONTEST_TEACHER_OPENING: string = \"EDIT_CONTEST_TEACHER_OPENING\";\r\nexport const REMOVE_CONTEST_TEACHER_OPENING: string = \"REMOVE_CONTEST_TEACHER_OPENING\";\r\nexport const CHANGE_CONTEST_TEACHER_OPENING_AMOUNT: string = \"CHANGE_CONTEST_TEACHER_OPENING_AMOUNT\";\r\nexport const CHANGE_CONTEST_TEACHER_OPENING_PENDING_EDIT: string = \"CHANGE_CONTEST_TEACHER_OPENING_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_TEACHER_OPENING_PENDING_EDIT: string = \"CLEAR_CONTEST_TEACHER_OPENING_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_TEACHER_OPENING_ALL: string = \"REMOVE_CONTEST_TEACHER_OPENING_ALL\";\r\nexport const INITIAL_CONTEST_TEACHER_OPENING: string = \"INITIAL_CONTEST_TEACHER_OPENING\";\r\n\r\n// contest_not_open_now_not_teacher\r\nexport const ADD_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: string = \"ADD_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER\";\r\nexport const EDIT_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: string = \"EDIT_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER\";\r\nexport const REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: string = \"REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER\";\r\nexport const CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_AMOUNT: string = \"CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_AMOUNT\";\r\nexport const CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT: string = \"CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT: string = \"CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_ALL: string = \"REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_ALL\";\r\nexport const INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: string = \"INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER\";\r\n\r\n// contest_end\r\nexport const ADD_CONTEST_TEACHER_END: string = \"ADD_CONTEST_TEACHER_END\";\r\nexport const EDIT_CONTEST_TEACHER_END: string = \"EDIT_CONTEST_TEACHER_END\";\r\nexport const REMOVE_CONTEST_TEACHER_END: string = \"REMOVE_CONTEST_TEACHER_END\";\r\nexport const CHANGE_CONTEST_TEACHER_END_AMOUNT: string = \"CHANGE_CONTEST_TEACHER_END_AMOUNT\";\r\nexport const CHANGE_CONTEST_TEACHER_END_PENDING_EDIT: string = \"CHANGE_CONTEST_TEACHER_END_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_TEACHER_END_PENDING_EDIT: string = \"CLEAR_CONTEST_TEACHER_END_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_TEACHER_END_ALL: string = \"REMOVE_CONTEST_TEACHER_END_ALL\";\r\nexport const INITIAL_CONTEST_TEACHER_END: string = \"INITIAL_CONTEST_TEACHER_END\";\r\n\r\n//contest_not_open_now\r\nexport const ADD_CONTEST_TEACHER_NOT_OPEN_NOW: string = \"ADD_CONTEST_TEACHER_NOT_OPEN_NOW\";\r\nexport const EDIT_CONTEST_TEACHER_NOT_OPEN_NOW: string = \"EDIT_CONTEST_TEACHER_NOT_OPEN_NOW\";\r\nexport const REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW: string = \"REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW\";\r\nexport const CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_AMOUNT: string = \"CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_AMOUNT\";\r\nexport const CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT: string = \"CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT: string = \"CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_ALL: string = \"REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_ALL\";\r\nexport const INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW: string = \"INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW\";\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(contest: IContestTeacher) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        contest\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\n// Opening\r\nexport function initialContestTeacherOpening(contest: IContestTeacher): IInitialContestTeacherOpeningActionType {\r\n    return { type: INITIAL_CONTEST_TEACHER_OPENING, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherOpeningAll(): IRemoveContestTeacherOpeningAllActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_OPENING_ALL };\r\n}\r\n\r\nexport function addContestTeacherOpening(contest: IContestTeacher): IAddContestTeacherOpeningActionType {\r\n    return { type: ADD_CONTEST_TEACHER_OPENING, contest: contest };\r\n}\r\n\r\nexport function editContestTeacherOpening(contest: IContestTeacher): IEditContestTeacherOpeningActionType {\r\n    return { type: EDIT_CONTEST_TEACHER_OPENING, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherOpening(id: string): IRemoveContestTeacherOpeningActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_OPENING, id: id };\r\n}\r\n\r\nexport function changeSelectedContestTeacherOpening(contest: IContestTeacher): IChangeSelectedContestTeacherOpeningActionType {\r\n    return { type: CHANGE_CONTEST_TEACHER_OPENING_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestTeacherOpening(): IClearSelectedContestTeacherOpeningActionType {\r\n    return { type: CLEAR_CONTEST_TEACHER_OPENING_PENDING_EDIT };\r\n}\r\n\r\n// Not open not teacher\r\nexport function initialContestTeacherNotOpenNowNotTeacher(contest: IContestTeacher): IInitialContestTeacherNotOpenNowNotTeacherActionType {\r\n    return { type: INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherNotOpenNowNotTeacherAll(): IRemoveContestTeacherNotOpenNowNotTeacherAllActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_ALL };\r\n}\r\n\r\nexport function addContestTeacherNotOpenNowNotTeacher(contest: IContestTeacher): IAddContestTeacherNotOpenNowNotTeacherActionType {\r\n    return { type: ADD_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, contest: contest };\r\n}\r\n\r\nexport function editContestTeacherNotOpenNowNotTeacher(contest: IContestTeacher): IEditContestTeacherNotOpenNowNotTeacherActionType {\r\n    return { type: EDIT_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherNotOpenNowNotTeacher(id: string): IRemoveContestTeacherNotOpenNowNotTeacherActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, id: id };\r\n}\r\n\r\nexport function changeSelectedContestNotOpenNowNotTeacher(contest: IContestTeacher): IChangeSelectedContestTeacherNotOpenNowNotTeacherActionType {\r\n    return { type: CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestTeacherNotOpenNowNotTeacher(): IClearSelectedContestTeacherNotOpenNowNotTeacherActionType {\r\n    return { type: CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT };\r\n}\r\n\r\n// End\r\nexport function initialContestTeacherEnd(contest: IContestTeacher): IInitialContestTeacherEndActionType {\r\n    return { type: INITIAL_CONTEST_TEACHER_END, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherEndAll(): IRemoveContestTeacherEndAllActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_END_ALL };\r\n}\r\n\r\nexport function addContestTeacherEnd(contest: IContestTeacher): IAddContestTeacherEndActionType {\r\n    return { type: ADD_CONTEST_TEACHER_END, contest: contest };\r\n}\r\n\r\nexport function editContestTeacherEnd(contest: IContestTeacher): IEditContestTeacherEndActionType {\r\n    return { type: EDIT_CONTEST_TEACHER_END, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherEnd(id: string): IRemoveContestTeacherEndActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_END, id: id };\r\n}\r\n\r\nexport function changeSelectedContestTeacherEnd(contest: IContestTeacher): IChangeSelectedContestTeacherEndActionType {\r\n    return { type: CHANGE_CONTEST_TEACHER_END_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestTeacherEnd(): IClearSelectedContestTeacherEndActionType {\r\n    return { type: CLEAR_CONTEST_TEACHER_END_PENDING_EDIT };\r\n}\r\n\r\n// Not open now\r\nexport function initialContestTeacherNotOpenNow(contest: IContestTeacher): IInitialContestTeacherNotOpenNowActionType {\r\n    return { type: INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherNotOpenNowAll(): IRemoveContestTeacherNotOpenNowAllActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_ALL };\r\n}\r\n\r\nexport function addContestTeacherNotOpenNow(contest: IContestTeacher): IAddContestTeacherNotOpenNowActionType {\r\n    return { type: ADD_CONTEST_TEACHER_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function editContestTeacherNotOpenNow(contest: IContestTeacher): IEditContestTeacherNotOpenNowActionType {\r\n    return { type: EDIT_CONTEST_TEACHER_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherNotOpenNow(id: string): IRemoveContestTeacherNotOpenNowActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedContestTeacherNotOpenNow(contest: IContestTeacher): IChangeSelectedContestTeacherNotOpenNowActionType {\r\n    return { type: CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestTeacherNotOpenNow(): IClearSelectedContestTeacherNotOpenNowActionType {\r\n    return { type: CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function setModificationState(value: ContestTeacherModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_contests\r\ninterface IAddContestTeacherOpeningActionType { type: string, contest: IContestTeacher };\r\ninterface IEditContestTeacherOpeningActionType { type: string, contest: IContestTeacher };\r\ninterface IRemoveContestTeacherOpeningActionType { type: string, id: string };\r\ninterface IChangeSelectedContestTeacherOpeningActionType { type: string, contest: IContestTeacher };\r\ninterface IClearSelectedContestTeacherOpeningActionType { type: string };\r\ninterface IRemoveContestTeacherOpeningAllActionType { type: string }\r\ninterface IInitialContestTeacherOpeningActionType {type: string, contest: IContestTeacher}\r\n\r\n// not_register_contests\r\ninterface IAddContestTeacherNotOpenNowNotTeacherActionType { type: string, contest: IContestTeacher };\r\ninterface IEditContestTeacherNotOpenNowNotTeacherActionType { type: string, contest: IContestTeacher };\r\ninterface IRemoveContestTeacherNotOpenNowNotTeacherActionType { type: string, id: string };\r\ninterface IChangeSelectedContestTeacherNotOpenNowNotTeacherActionType { type: string, contest: IContestTeacher };\r\ninterface IClearSelectedContestTeacherNotOpenNowNotTeacherActionType { type: string };\r\ninterface IRemoveContestTeacherNotOpenNowNotTeacherAllActionType { type: string }\r\ninterface IInitialContestTeacherNotOpenNowNotTeacherActionType {type: string, contest: IContestTeacher}\r\n\r\n// not_register_contests\r\ninterface IAddContestTeacherEndActionType { type: string, contest: IContestTeacher };\r\ninterface IEditContestTeacherEndActionType { type: string, contest: IContestTeacher };\r\ninterface IRemoveContestTeacherEndActionType { type: string, id: string };\r\ninterface IChangeSelectedContestTeacherEndActionType { type: string, contest: IContestTeacher };\r\ninterface IClearSelectedContestTeacherEndActionType { type: string };\r\ninterface IRemoveContestTeacherEndAllActionType { type: string }\r\ninterface IInitialContestTeacherEndActionType {type: string, contest: IContestTeacher}\r\n\r\n// not_register_contests\r\ninterface IAddContestTeacherNotOpenNowActionType { type: string, contest: IContestTeacher };\r\ninterface IEditContestTeacherNotOpenNowActionType { type: string, contest: IContestTeacher };\r\ninterface IRemoveContestTeacherNotOpenNowActionType { type: string, id: string };\r\ninterface IChangeSelectedContestTeacherNotOpenNowActionType { type: string, contest: IContestTeacher };\r\ninterface IClearSelectedContestTeacherNotOpenNowActionType { type: string };\r\ninterface IRemoveContestTeacherNotOpenNowAllActionType { type: string }\r\ninterface IInitialContestTeacherNotOpenNowActionType {type: string, contest: IContestTeacher}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ContestTeacherModificationStatus};","import { fetchDataSuccess, fetchDataError, \r\n    removeContestTeacherEndAll, removeContestTeacherNotOpenNowAll, \r\n    removeContestTeacherNotOpenNowNotTeacherAll, removeContestTeacherOpeningAll,\r\n    initialContestTeacherEnd, initialContestTeacherNotOpenNow,\r\n    initialContestTeacherNotOpenNowNotTeacher, initialContestTeacherOpening, \r\n    addContestTeacherEnd, addContestTeacherNotOpenNow,\r\n    addContestTeacherNotOpenNowNotTeacher, addContestTeacherOpening } from \"../../../store/actions/contest_teacher.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ContestTeacher {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    total_contest_submission: number;\r\n    total_contest_submission_graded: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n}\r\nexport function getContestTeacher(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest/teacher/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getContestTeacher(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeContestTeacherEndAll())\r\n                dispatch(removeContestTeacherNotOpenNowAll())\r\n                dispatch(removeContestTeacherNotOpenNowNotTeacherAll())\r\n                dispatch(removeContestTeacherOpeningAll())\r\n                console.log(data)\r\n                data.body.contest_opening.map((ele: any, index: any) => {\r\n                    var contest: ContestTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestTeacherOpening(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestTeacherOpening(contest))\r\n                    }\r\n                })\r\n\r\n                data.body.contest_not_open_now_not_teacher.map((ele: any, index: any) => {\r\n                    var contest: ContestTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestTeacherNotOpenNowNotTeacher(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestTeacherNotOpenNowNotTeacher(contest))\r\n                    }\r\n                })\r\n\r\n\r\n                data.body.contest_end.map((ele: any, index: any) => {\r\n                    var contest: ContestTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestTeacherEnd(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestTeacherEnd(contest))\r\n                    }\r\n                })\r\n\r\n\r\n                data.body.contest_not_open_now.map((ele: any, index: any) => {\r\n                    var contest: ContestTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestTeacherNotOpenNow(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestTeacherNotOpenNow(contest))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IContestTeacherState } from \"../../store/models/root.interface\";\r\nimport { ILesson } from \"../../store/models/lesson.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IContestTeacher } from \"../../store/models/contest_teacher.interface\";\r\n\r\nexport type lessonListProps = {\r\n    onSelect?: (lesson: ILesson) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction ContestTeacherNotDoingList(props: lessonListProps): JSX.Element {\r\n    const contest_teachers: IContestTeacherState = useSelector((state: IStateType) => state.contest_teachers);\r\n\r\n    const history = useHistory();\r\n    const onChangeRoute = (contest_teacher: IContestTeacher) =>{ \r\n        localStorage.removeItem(\"contest_id\")\r\n        localStorage.setItem('contest_id', contest_teacher.id.toString())\r\n        localStorage.removeItem(\"contest_name\")\r\n        localStorage.setItem('contest_name', contest_teacher.name)\r\n        localStorage.removeItem(\"contest_description\")\r\n        localStorage.setItem('contest_description', contest_teacher.description)\r\n        localStorage.removeItem(\"max_participant\")\r\n        localStorage.setItem('max_participant', contest_teacher.max_participant.toString())\r\n        localStorage.removeItem(\"art_type_contest\")\r\n        localStorage.setItem('art_type_contest', contest_teacher.art_type_name)\r\n        localStorage.removeItem(\"art_age_contest\")\r\n        localStorage.setItem('art_age_contest', contest_teacher.art_age_name)\r\n        localStorage.removeItem(\"registration_time\")\r\n        localStorage.setItem('registration_time', contest_teacher.registration_time)\r\n        localStorage.removeItem(\"start_time\")\r\n        localStorage.setItem('start_time', contest_teacher.start_time)\r\n        localStorage.removeItem(\"end_time\")\r\n        localStorage.setItem('end_time', contest_teacher.end_time)\r\n        let path = '/contests/detail-contest'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n    \r\n    const lessonElements: (JSX.Element | null)[] = contest_teachers.contest_not_open_now.map((contest, index) => {\r\n        //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n        if (!contest) { return null; }\r\n        return (<tr className={`table-row `}\r\n            key={`lesson_${contest.id}`} onClick={() => {onChangeRoute(contest)}}>\r\n            <th scope=\"row\" className=\"data-table\">{index + 1}</th>\r\n            <td className=\"data-table\">{contest.name}</td>\r\n            <td className=\"data-table\">{contest.art_age_name}</td>\r\n            <td className=\"data-table\">{contest.art_type_name}</td>\r\n            <td className=\"data-table\">{contest.max_participant}</td>\r\n            <td className=\"data-table\">{contest.registration_time}</td>\r\n            <td className=\"data-table\">{contest.end_time}</td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"table-responsive portlet\">\r\n                <table className=\"table\">\r\n                    <thead id=\"table-thread-contest-section\">\r\n                        <tr>\r\n                            <th scope=\"col\" className=\"name-row-table\">#</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Tên cuộc thi</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thể loại</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Độ tuổi</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Số người tham gia tối đa</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời gian bắt đầu</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời gian kết thúc</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {lessonElements}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ContestTeacherNotDoingList;\r\n","import React, { Fragment } from \"react\";\r\nimport {  useSelector } from \"react-redux\";\r\nimport { IStateType, IContestTeacherState } from \"../../store/models/root.interface\";\r\nimport { ILesson } from \"../../store/models/lesson.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IContestTeacher } from \"../../store/models/contest_teacher.interface\";\r\n\r\nexport type lessonListProps = {\r\n    onSelect?: (lesson: ILesson) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction ContestTeacherDoingList(props: lessonListProps): JSX.Element {\r\n    const contest_teachers: IContestTeacherState = useSelector((state: IStateType) => state.contest_teachers);\r\n\r\n    const history = useHistory();\r\n    const onChangeRoute = (contest_teacher: IContestTeacher) =>{ \r\n        localStorage.removeItem(\"contest_id\")\r\n        localStorage.setItem('contest_id', contest_teacher.id.toString())\r\n        localStorage.removeItem(\"contest_name\")\r\n        localStorage.setItem('contest_name', contest_teacher.name)\r\n        localStorage.removeItem(\"contest_description\")\r\n        localStorage.setItem('contest_description', contest_teacher.description)\r\n        localStorage.removeItem(\"max_participant\")\r\n        localStorage.setItem('max_participant', contest_teacher.max_participant.toString())\r\n        localStorage.removeItem(\"art_type_contest\")\r\n        localStorage.setItem('art_type_contest', contest_teacher.art_type_name)\r\n        localStorage.removeItem(\"art_age_contest\")\r\n        localStorage.setItem('art_age_contest', contest_teacher.art_age_name)\r\n        localStorage.removeItem(\"registration_time\")\r\n        localStorage.setItem('registration_time', contest_teacher.registration_time)\r\n        localStorage.removeItem(\"start_time\")\r\n        localStorage.setItem('start_time', contest_teacher.start_time)\r\n        localStorage.removeItem(\"end_time\")\r\n        localStorage.setItem('end_time', contest_teacher.end_time)\r\n        let path = '/contests/detail-contest'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n    \r\n    const lessonElements: (JSX.Element | null)[] = contest_teachers.contest_opening.map((contest, index) => {\r\n        //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n        if (!contest) { return null; }\r\n        return (<tr className={`table-row `}\r\n            key={`lesson_${contest.id}`} onClick={() => {onChangeRoute(contest)}}>\r\n            <th scope=\"row\" className=\"data-table\">{index + 1}</th>\r\n            <td className=\"data-table\">{contest.name}</td>\r\n            <td className=\"data-table\">{contest.art_age_name}</td>\r\n            <td className=\"data-table\">{contest.art_type_name}</td>\r\n            <td className=\"data-table\">{contest.total_register_contest}</td>\r\n            <td className=\"data-table\">{contest.registration_time}</td>\r\n            <td className=\"data-table\">{contest.end_time}</td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"table-responsive portlet\">\r\n                <table className=\"table\">\r\n                    <thead id=\"table-thread-contest-section\">\r\n                        <tr>\r\n                            <th scope=\"col\" className=\"name-row-table\">#</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Tên cuộc thi</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thể loại</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Độ tuổi</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Số người tham gia</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời gian bắt đầu</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời gian kết thúc</th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {lessonElements}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ContestTeacherDoingList;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IContestTeacherState } from \"../../store/models/root.interface\";\r\nimport { ILesson } from \"../../store/models/lesson.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IContestTeacher } from \"../../store/models/contest_teacher.interface\";\r\n\r\nexport type lessonListProps = {\r\n    onSelect?: (lesson: ILesson) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction ContestTeacherEndList(props: lessonListProps): JSX.Element {\r\n    const contest_teachers: IContestTeacherState = useSelector((state: IStateType) => state.contest_teachers);\r\n\r\n\r\n    const history = useHistory();\r\n    const onChangeRoute = (contest_teacher: IContestTeacher) =>{ \r\n        localStorage.removeItem(\"contest_id\")\r\n        localStorage.setItem('contest_id', contest_teacher.id.toString())\r\n        localStorage.removeItem(\"contest_name\")\r\n        localStorage.setItem('contest_name', contest_teacher.name)\r\n        localStorage.removeItem(\"contest_description\")\r\n        localStorage.setItem('contest_description', contest_teacher.description)\r\n        localStorage.removeItem(\"max_participant\")\r\n        localStorage.setItem('max_participant', contest_teacher.max_participant.toString())\r\n        localStorage.removeItem(\"art_type_contest\")\r\n        localStorage.setItem('art_type_contest', contest_teacher.art_type_name)\r\n        localStorage.removeItem(\"art_age_contest\")\r\n        localStorage.setItem('art_age_contest', contest_teacher.art_age_name)\r\n        localStorage.removeItem(\"registration_time\")\r\n        localStorage.setItem('registration_time', contest_teacher.registration_time)\r\n        localStorage.removeItem(\"start_time\")\r\n        localStorage.setItem('start_time', contest_teacher.start_time)\r\n        localStorage.removeItem(\"end_time\")\r\n        localStorage.setItem('end_time', contest_teacher.end_time)\r\n        let path = '/contests/detail'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    \r\n    const lessonElements: (JSX.Element | null)[] = contest_teachers.contest_end.map((contest, index) => {\r\n        //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n        if (!contest) { return null; }\r\n        return (<tr className={`table-row `}\r\n            key={`lesson_${contest.id}`} >\r\n            <th scope=\"row\" className=\"data-table\">{index + 1}</th>\r\n            <td className=\"data-table\">{contest.name}</td>\r\n            <td className=\"data-table\">{contest.art_age_name}</td>\r\n            <td className=\"data-table\">{contest.art_type_name}</td>\r\n            <td className=\"data-table\">{contest.total_contest_submission - contest.total_contest_submission_graded}</td>\r\n            <td className=\"data-table\">{contest.total_contest_submission - contest.total_contest_submission_graded > 0 ? \"Chưa xong\": \"Da xong\"}</td>\r\n            <td className=\"data-table\">{contest.registration_time}</td>\r\n            <td className=\"data-table\">{contest.end_time}</td>\r\n            {\r\n                function () {\r\n                    if (contest.total_contest_submission - contest.total_contest_submission_graded > 0){\r\n                        return (\r\n                            <td>\r\n                                <button \r\n                                    type=\"button\" \r\n                                    className=\"btn btn-primary\" \r\n                                    onClick={() => {\r\n                                        onChangeRoute(contest)\r\n                                    }}\r\n                                >\r\n                                    Chấm bài\r\n                                </button>\r\n                            </td>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"table-responsive portlet\">\r\n                <table className=\"table\">\r\n                    <thead id=\"table-thread-contest-section\">\r\n                        <tr>\r\n                            <th scope=\"col\" className=\"name-row-table\">#</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Tên cuộc thi</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thể loại</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Độ tuổi</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Số bài nộp cần chấm</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Trạng thái chấm</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời gian bắt đầu</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời gian kết thúc</th>\r\n                            <th scope=\"col\"></th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {lessonElements}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ContestTeacherEndList;\r\n","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getTeacherRegisterQuantificationByTeacherId } from \"../../common/service/TeacherRegisterQuantification/GetTeacherRegisterQuantificationByTeacherId\";\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\nimport { IContestTeacherState, IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./ContestTeacher.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { getContestTeacher } from \"../../common/service/ContestTeacher/GetContestTeacher\";\r\nimport ContestNotDoingList from \"./ContestNotDoingTeacherList\";\r\nimport ContestDoingList from \"./ContestDoingTeacherList\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport ContestEndTeacherList from \"./ContestEndTeacherList\";\r\n\r\nconst ContestTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const contest_teachers: IContestTeacherState = useSelector((state: IStateType) => state.contest_teachers);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberContestOpeningCount: number = contest_teachers.contest_opening.length;\r\n    const numberContestEndCount: number = contest_teachers.contest_end.length;\r\n    const numberContestNotOpenNowCount: number = contest_teachers.contest_not_open_now.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n    const { promiseInProgress } = usePromiseTracker();\r\n    console.log(contest_teachers)\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getTeacherRegisterQuantificationByTeacherId(dispatch, id))\r\n                    trackPromise(getUserById(dispatch, id))\r\n                    trackPromise(getContestTeacher(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getTeacherRegisterQuantificationByTeacherId(dispatch, id))\r\n                trackPromise(getUserById(dispatch, id))\r\n                trackPromise(getContestTeacher(dispatch, id))\r\n            }\r\n        }\r\n        \r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Cuộc thi\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n\r\n    const [checked1, setChecked1] = useState(true);\r\n    const [checked2, setChecked2] = useState(false);\r\n    const [checked3, setChecked3] = useState(false);\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"CHƯA DIỄN RA\" text={`${numberContestNotOpenNowCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"ĐANG DIỄN RA\" text={`${numberContestOpeningCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"ĐÃ KẾT THÚC\" text={`${numberContestEndCount}`} icon=\"book\" class=\"primary\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked1 === false) {\r\n                            setChecked1(true)\r\n                            setChecked2(false)\r\n                            setChecked3(false)\r\n                        }\r\n                    }} style={{\r\n                        color: checked1 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Chưa diễn ra</h6>\r\n\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked1 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked2 === false) {\r\n                            setChecked2(true)\r\n                            setChecked1(false)\r\n                            setChecked3(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked2 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Đang diễn ra</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked2 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked3 === false) {\r\n                            setChecked3(true)\r\n                            setChecked1(false)\r\n                            setChecked2(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked3 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Đã kết thúc</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked3 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {\r\n                function () {\r\n                    if (checked1 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách cuộc thi</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ContestNotDoingList />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else if ( checked2 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách cuộc thi</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ContestDoingList />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n\r\n                    else if ( checked3 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách cuộc thi</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ContestEndTeacherList />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ContestTeacher;\r\n","import { IExerciseStudent, ExerciseStudentModificationStatus } from \"../models/exercise_student.interface\";\r\n\r\n// register_successfull_exercise_students\r\nexport const ADD_EXERCISE_NOT_SUBMIT: string = \"ADD_EXERCISE_NOT_SUBMIT\";\r\nexport const EDIT_EXERCISE_NOT_SUBMIT: string = \"EDIT_EXERCISE_NOT_SUBMIT\";\r\nexport const REMOVE_EXERCISE_NOT_SUBMIT: string = \"REMOVE_EXERCISE_NOT_SUBMIT\";\r\nexport const CHANGE_EXERCISE_NOT_SUBMIT_AMOUNT: string = \"CHANGE_EXERCISE_NOT_SUBMIT_AMOUNT\";\r\nexport const CHANGE_EXERCISE_NOT_SUBMIT_PENDING_EDIT: string = \"CHANGE_EXERCISE_NOT_SUBMIT_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_NOT_SUBMIT_PENDING_EDIT: string = \"CLEAR_EXERCISE_NOT_SUBMIT_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_NOT_SUBMIT_ALL: string = \"REMOVE_EXERCISE_NOT_SUBMIT_ALL\";\r\nexport const INITIAL_EXERCISE_NOT_SUBMIT: string = \"INITIAL_EXERCISE_NOT_SUBMIT\";\r\n\r\n// not_register_exercise_students\r\nexport const ADD_EXERCISE_SUBMITED_NOT_GRADE: string = \"ADD_EXERCISE_SUBMITED_NOT_GRADE\";\r\nexport const EDIT_EXERCISE_SUBMITED_NOT_GRADE: string = \"EDIT_EXERCISE_SUBMITED_NOT_GRADE\";\r\nexport const REMOVE_EXERCISE_SUBMITED_NOT_GRADE: string = \"REMOVE_EXERCISE_SUBMITED_NOT_GRADE\";\r\nexport const CHANGE_EXERCISE_SUBMITED_NOT_GRADE_AMOUNT: string = \"CHANGE_EXERCISE_SUBMITED_NOT_GRADE_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT: string = \"CHANGE_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT: string = \"CLEAR_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL: string = \"REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL\";\r\nexport const INITIAL_EXERCISE_SUBMITED_NOT_GRADE: string = \"INITIAL_EXERCISE_SUBMITED_NOT_GRADE\";\r\n\r\n\r\n// not_register_exercise_students\r\nexport const ADD_EXERCISE_SUBMITED_GRADED: string = \"ADD_EXERCISE_SUBMITED_GRADED\";\r\nexport const EDIT_EXERCISE_SUBMITED_GRADED: string = \"EDIT_EXERCISE_SUBMITED_GRADED\";\r\nexport const REMOVE_EXERCISE_SUBMITED_GRADED: string = \"REMOVE_EXERCISE_SUBMITED_GRADED\";\r\nexport const CHANGE_EXERCISE_SUBMITED_GRADED_AMOUNT: string = \"CHANGE_EXERCISE_SUBMITED_GRADED_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SUBMITED_GRADED_PENDING_EDIT: string = \"CHANGE_EXERCISE_SUBMITED_GRADED_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SUBMITED_GRADED_PENDING_EDIT: string = \"CLEAR_EXERCISE_SUBMITED_GRADED_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SUBMITED_GRADED_ALL: string = \"REMOVE_EXERCISE_SUBMITED_GRADED_ALL\";\r\nexport const INITIAL_EXERCISE_SUBMITED_GRADED: string = \"INITIAL_EXERCISE_SUBMITED_GRADED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(exercise_student: IExerciseStudent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        exercise_student\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialExerciseNotSubmit(exercise_student: IExerciseStudent): IInitialExerciseNotSubmitActionType {\r\n    return { type: INITIAL_EXERCISE_NOT_SUBMIT, exercise_student: exercise_student };\r\n}\r\n\r\nexport function removeExerciseNotSubmitAll(): IRemoveExerciseNotSubmitAllActionType {\r\n    return { type: REMOVE_EXERCISE_NOT_SUBMIT_ALL };\r\n}\r\n\r\nexport function addExerciseNotSubmit(exercise_student: IExerciseStudent): IAddExerciseNotSubmitActionType {\r\n    return { type: ADD_EXERCISE_NOT_SUBMIT, exercise_student: exercise_student };\r\n}\r\n\r\nexport function editExerciseNotSubmit(exercise_student: IExerciseStudent): IEditExerciseNotSubmitActionType {\r\n    return { type: EDIT_EXERCISE_NOT_SUBMIT, exercise_student: exercise_student };\r\n}\r\n\r\nexport function removeExerciseNotSubmit(id: string): IRemoveExerciseNotSubmitActionType {\r\n    return { type: REMOVE_EXERCISE_NOT_SUBMIT, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseNotSubmit(exercise_student: IExerciseStudent): IChangeSelectedExerciseNotSubmitActionType {\r\n    return { type: CHANGE_EXERCISE_NOT_SUBMIT_PENDING_EDIT, exercise_student: exercise_student };\r\n}\r\n\r\nexport function clearSelectedExerciseNotSubmit(): IClearSelectedExerciseNotSubmitActionType {\r\n    return { type: CLEAR_EXERCISE_NOT_SUBMIT_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialExerciseSubmitNotGrade(exercise_student: IExerciseStudent): IInitialExerciseSubmitNotGradeActionType {\r\n    return { type: INITIAL_EXERCISE_SUBMITED_NOT_GRADE, exercise_student: exercise_student };\r\n}\r\n\r\nexport function removeExerciseSubmitNotGradeAll(): IRemoveExerciseSubmitNotGradeAllActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL };\r\n}\r\n\r\nexport function addExerciseSubmitNotGrade(exercise_student: IExerciseStudent): IAddExerciseSubmitNotGradeActionType {\r\n    return { type: ADD_EXERCISE_SUBMITED_NOT_GRADE, exercise_student: exercise_student };\r\n}\r\n\r\nexport function editExerciseSubmitNotGrade(exercise_student: IExerciseStudent): IEditExerciseSubmitNotGradeActionType {\r\n    return { type: EDIT_EXERCISE_SUBMITED_NOT_GRADE, exercise_student: exercise_student };\r\n}\r\n\r\nexport function removeExerciseSubmitNotGrade(id: string): IRemoveExerciseSubmitNotGradeActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMITED_NOT_GRADE, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseSubmitNotGrade(exercise_student: IExerciseStudent): IChangeSelectedExerciseSubmitNotGradeActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT, exercise_student: exercise_student };\r\n}\r\n\r\nexport function clearSelectedExerciseSubmitNotGrade(): IClearSelectedExerciseSubmitNotGradeActionType {\r\n    return { type: CLEAR_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ExerciseStudentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n\r\nexport function initialExerciseSubmitGraded(exercise_student: IExerciseStudent): IInitialExerciseSubmitGradedActionType {\r\n    return { type: INITIAL_EXERCISE_SUBMITED_GRADED, exercise_student: exercise_student };\r\n}\r\n\r\nexport function removeExerciseSubmitGradedAll(): IRemoveExerciseSubmitGradedAllActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMITED_GRADED_ALL };\r\n}\r\n\r\nexport function addExerciseSubmitGraded(exercise_student: IExerciseStudent): IAddExerciseSubmitGradedActionType {\r\n    return { type: ADD_EXERCISE_SUBMITED_GRADED, exercise_student: exercise_student };\r\n}\r\n\r\nexport function editExerciseSubmitGraded(exercise_student: IExerciseStudent): IEditExerciseSubmitGradedActionType {\r\n    return { type: EDIT_EXERCISE_SUBMITED_GRADED, exercise_student: exercise_student };\r\n}\r\n\r\nexport function removeExerciseSubmitGraded(id: string): IRemoveExerciseSubmitGradedActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMITED_GRADED, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseSubmitGraded(exercise_student: IExerciseStudent): IChangeSelectedExerciseSubmitGradedActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMITED_GRADED_AMOUNT, exercise_student: exercise_student };\r\n}\r\n\r\nexport function clearSelectedExerciseSubmitGraded(): IClearSelectedExerciseSubmitGradedActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMITED_GRADED_PENDING_EDIT };\r\n}\r\n\r\n// register_successfull_exercise_students\r\ninterface IAddExerciseNotSubmitActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IEditExerciseNotSubmitActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IRemoveExerciseNotSubmitActionType { type: string, id: string };\r\ninterface IChangeSelectedExerciseNotSubmitActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IClearSelectedExerciseNotSubmitActionType { type: string };\r\ninterface IRemoveExerciseNotSubmitAllActionType { type: string }\r\ninterface IInitialExerciseNotSubmitActionType {type: string, exercise_student: IExerciseStudent}\r\n\r\n// not_register_exercise_students\r\ninterface IAddExerciseSubmitNotGradeActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IEditExerciseSubmitNotGradeActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IRemoveExerciseSubmitNotGradeActionType { type: string, id: string };\r\ninterface IChangeSelectedExerciseSubmitNotGradeActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IClearSelectedExerciseSubmitNotGradeActionType { type: string };\r\ninterface IRemoveExerciseSubmitNotGradeAllActionType { type: string }\r\ninterface IInitialExerciseSubmitNotGradeActionType {type: string, exercise_student: IExerciseStudent}\r\n\r\n\r\n// register_successfull_exercise_students\r\ninterface IAddExerciseSubmitGradedActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IEditExerciseSubmitGradedActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IRemoveExerciseSubmitGradedActionType { type: string, id: string };\r\ninterface IChangeSelectedExerciseSubmitGradedActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IClearSelectedExerciseSubmitGradedActionType { type: string };\r\ninterface IRemoveExerciseSubmitGradedAllActionType { type: string }\r\ninterface IInitialExerciseSubmitGradedActionType {type: string, exercise_student: IExerciseStudent}\r\n\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ExerciseStudentModificationStatus};","import { fetchDataSuccess, fetchDataError, removeExerciseNotSubmitAll, addExerciseNotSubmit, removeExerciseSubmitNotGradeAll, addExerciseSubmitNotGrade } from \"../../../store/actions/exercise_student.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface exercise {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    section_id: string;\r\n    teacher_name: string;\r\n    exercise_submission_id: string;\r\n    time_submit: string;\r\n    deadline: string;\r\n    level_id: string;\r\n    level_name: string;\r\n    section_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getExerciseForClassStudent(dispatch: any, class_id: any, student_id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/exercises/class-student/${class_id}/${student_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getExerciseForClassStudent(dispatch, class_id, student_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeExerciseNotSubmitAll())\r\n                dispatch(removeExerciseSubmitNotGradeAll())\r\n                console.log(data.body.exercise_not_submit)\r\n                data.body.exercise_not_submit.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var exercise: exercise = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        level_id: ele.level_id,\r\n                        exercise_submission_id: ele.exercise_submission_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        time_submit: ele.time_submit,\r\n                        deadline: ele.deadline,\r\n                        level_name: ele.level_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1.substring(0, 5),\r\n                        update_time: strDate_2.substring(0, 5)\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addExerciseNotSubmit(exercise))\r\n                })\r\n\r\n                data.body.exercise_submitted.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var exercise: exercise = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        level_id: ele.level_id,\r\n                        exercise_submission_id: ele.exercise_submission_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        time_submit: ele.time_submit,\r\n                        deadline: ele.deadline,\r\n                        level_name: ele.level_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1.substring(0, 5),\r\n                        update_time: strDate_2.substring(0, 5)\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addExerciseSubmitNotGrade(exercise))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { fetchDataSuccess, fetchDataError, removeParentAll, initialParent } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user {\r\n    id: string,\r\n    username: string,\r\n    email: string,\r\n    password: string,\r\n    status: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    dateOfBirth: string,\r\n    profile_image_url: string,\r\n    sex: string,\r\n    phone: string,\r\n    address: string,\r\n    parents: string,\r\n    createTime: string\r\n}\r\nexport function getParentById(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getParentById(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeParentAll())\r\n                var user: user = {\r\n                    id: data.id,\r\n                    username: data.username,\r\n                    email: data.email,\r\n                    password: \"\",\r\n                    status: data.status,\r\n                    firstName: data.firstName,\r\n                    lastName: data.lastName,\r\n                    dateOfBirth: data.dateOfBirth,\r\n                    profile_image_url: data.profile_image_url,\r\n                    sex: data.sex,\r\n                    phone: data.phone,\r\n                    address: data.address,\r\n                    parents: data.parents,\r\n                    createTime: data.createTime\r\n                }\r\n                return dispatch(initialParent(user));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { IStudentLeave, StudentLeaveModificationStatus } from \"../models/student_leave.interface\";\r\n\r\n// register_successfull_student_leaves\r\nexport const ADD_STUDENT_LEAVE_NOT_APPROVED_NOW: string = \"ADD_STUDENT_LEAVE_NOT_APPROVED_NOW\";\r\nexport const EDIT_STUDENT_LEAVE_NOT_APPROVED_NOW: string = \"EDIT_STUDENT_LEAVE_NOT_APPROVED_NOW\";\r\nexport const REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW: string = \"REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW\";\r\nexport const CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_AMOUNT: string = \"CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_AMOUNT\";\r\nexport const CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT: string = \"CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT\";\r\nexport const CLEAR_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT: string = \"CLEAR_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT\";\r\nexport const REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW_ALL: string = \"REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW_ALL\";\r\nexport const INITIAL_STUDENT_LEAVE_NOT_APPROVED_NOW: string = \"INITIAL_STUDENT_LEAVE_NOT_APPROVED_NOW\";\r\n\r\n// not_register_student_leaves\r\nexport const ADD_STUDENT_LEAVE_APPROVED: string = \"ADD_STUDENT_LEAVE_APPROVED\";\r\nexport const EDIT_STUDENT_LEAVE_APPROVED: string = \"EDIT_STUDENT_LEAVE_APPROVED\";\r\nexport const REMOVE_STUDENT_LEAVE_APPROVED: string = \"REMOVE_STUDENT_LEAVE_APPROVED\";\r\nexport const CHANGE_STUDENT_LEAVE_APPROVED_AMOUNT: string = \"CHANGE_STUDENT_LEAVE_APPROVED_AMOUNT\";\r\nexport const CHANGE_STUDENT_LEAVE_APPROVED_PENDING_EDIT: string = \"CHANGE_STUDENT_LEAVE_APPROVED_PENDING_EDIT\";\r\nexport const CLEAR_STUDENT_LEAVE_APPROVED_PENDING_EDIT: string = \"CLEAR_STUDENT_LEAVE_APPROVED_PENDING_EDIT\";\r\nexport const REMOVE_STUDENT_LEAVE_APPROVED_ALL: string = \"REMOVE_STUDENT_LEAVE_APPROVED_ALL\";\r\nexport const INITIAL_STUDENT_LEAVE_APPROVED: string = \"INITIAL_STUDENT_LEAVE_APPROVED\";\r\n\r\n\r\n// not_register_student_leaves\r\nexport const ADD_STUDENT_LEAVE_NOT_APPROVED: string = \"ADD_STUDENT_LEAVE_NOT_APPROVED\";\r\nexport const EDIT_STUDENT_LEAVE_NOT_APPROVED: string = \"EDIT_STUDENT_LEAVE_NOT_APPROVED\";\r\nexport const REMOVE_STUDENT_LEAVE_NOT_APPROVED: string = \"REMOVE_STUDENT_LEAVE_NOT_APPROVED\";\r\nexport const CHANGE_STUDENT_LEAVE_NOT_APPROVED_AMOUNT: string = \"CHANGE_STUDENT_LEAVE_NOT_APPROVED_AMOUNT\";\r\nexport const CHANGE_STUDENT_LEAVE_NOT_APPROVED_PENDING_EDIT: string = \"CHANGE_STUDENT_LEAVE_NOT_APPROVED_PENDING_EDIT\";\r\nexport const CLEAR_STUDENT_LEAVE_NOT_APPROVED_PENDING_EDIT: string = \"CLEAR_STUDENT_LEAVE_NOT_APPROVED_PENDING_EDIT\";\r\nexport const REMOVE_STUDENT_LEAVE_NOT_APPROVED_ALL: string = \"REMOVE_STUDENT_LEAVE_NOT_APPROVED_ALL\";\r\nexport const INITIAL_STUDENT_LEAVE_NOT_APPROVED: string = \"INITIAL_STUDENT_LEAVE_NOT_APPROVED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(student_leave: IStudentLeave) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        student_leave\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialStudentLeaveNotApprovedNow(student_leave: IStudentLeave): IInitialStudentLeaveNotApprovedNowActionType {\r\n    return { type: INITIAL_STUDENT_LEAVE_NOT_APPROVED_NOW, student_leave: student_leave };\r\n}\r\n\r\nexport function removeStudentLeaveNotApprovedNowAll(): IRemoveStudentLeaveNotApprovedNowAllActionType {\r\n    return { type: REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW_ALL };\r\n}\r\n\r\nexport function addStudentLeaveNotApprovedNow(student_leave: IStudentLeave): IAddStudentLeaveNotApprovedNowActionType {\r\n    return { type: ADD_STUDENT_LEAVE_NOT_APPROVED_NOW, student_leave: student_leave };\r\n}\r\n\r\nexport function editStudentLeaveNotApprovedNow(student_leave: IStudentLeave): IEditStudentLeaveNotApprovedNowActionType {\r\n    return { type: EDIT_STUDENT_LEAVE_NOT_APPROVED_NOW, student_leave: student_leave };\r\n}\r\n\r\nexport function removeStudentLeaveNotApprovedNow(id: string): IRemoveStudentLeaveNotApprovedNowActionType {\r\n    return { type: REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedStudentLeaveNotApprovedNow(student_leave: IStudentLeave): IChangeSelectedStudentLeaveNotApprovedNowActionType {\r\n    return { type: CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT, student_leave: student_leave };\r\n}\r\n\r\nexport function clearSelectedStudentLeaveNotApprovedNow(): IClearSelectedStudentLeaveNotApprovedNowActionType {\r\n    return { type: CLEAR_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialStudentLeaveApproved(student_leave: IStudentLeave): IInitialStudentLeaveApprovedActionType {\r\n    return { type: INITIAL_STUDENT_LEAVE_APPROVED, student_leave: student_leave };\r\n}\r\n\r\nexport function removeStudentLeaveApprovedAll(): IRemoveStudentLeaveApprovedAllActionType {\r\n    return { type: REMOVE_STUDENT_LEAVE_APPROVED_ALL };\r\n}\r\n\r\nexport function addStudentLeaveApproved(student_leave: IStudentLeave): IAddStudentLeaveApprovedActionType {\r\n    return { type: ADD_STUDENT_LEAVE_APPROVED, student_leave: student_leave };\r\n}\r\n\r\nexport function editStudentLeaveApproved(student_leave: IStudentLeave): IEditStudentLeaveApprovedActionType {\r\n    return { type: EDIT_STUDENT_LEAVE_APPROVED, student_leave: student_leave };\r\n}\r\n\r\nexport function removeStudentLeaveApproved(id: string): IRemoveStudentLeaveApprovedActionType {\r\n    return { type: REMOVE_STUDENT_LEAVE_APPROVED, id: id };\r\n}\r\n\r\nexport function changeSelectedStudentLeaveApproved(student_leave: IStudentLeave): IChangeSelectedStudentLeaveApprovedActionType {\r\n    return { type: CHANGE_STUDENT_LEAVE_APPROVED_PENDING_EDIT, student_leave: student_leave };\r\n}\r\n\r\nexport function clearSelectedStudentLeaveApproved(): IClearSelectedStudentLeaveApprovedActionType {\r\n    return { type: CLEAR_STUDENT_LEAVE_APPROVED_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: StudentLeaveModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n\r\nexport function initialStudentLeaveNotApproved(student_leave: IStudentLeave): IInitialStudentLeaveNotApprovedActionType {\r\n    return { type: INITIAL_STUDENT_LEAVE_NOT_APPROVED, student_leave: student_leave };\r\n}\r\n\r\nexport function removeStudentLeaveNotApprovedAll(): IRemoveStudentLeaveNotApprovedAllActionType {\r\n    return { type: REMOVE_STUDENT_LEAVE_NOT_APPROVED_ALL };\r\n}\r\n\r\nexport function addStudentLeaveNotApproved(student_leave: IStudentLeave): IAddStudentLeaveNotApprovedActionType {\r\n    return { type: ADD_STUDENT_LEAVE_NOT_APPROVED, student_leave: student_leave };\r\n}\r\n\r\nexport function editStudentLeaveNotApproved(student_leave: IStudentLeave): IEditStudentLeaveNotApprovedActionType {\r\n    return { type: EDIT_STUDENT_LEAVE_NOT_APPROVED, student_leave: student_leave };\r\n}\r\n\r\nexport function removeStudentLeaveNotApproved(id: string): IRemoveStudentLeaveNotApprovedActionType {\r\n    return { type: REMOVE_STUDENT_LEAVE_NOT_APPROVED, id: id };\r\n}\r\n\r\nexport function changeSelectedStudentLeaveNotApproved(student_leave: IStudentLeave): IChangeSelectedStudentLeaveNotApprovedActionType {\r\n    return { type: CHANGE_STUDENT_LEAVE_NOT_APPROVED_AMOUNT, student_leave: student_leave };\r\n}\r\n\r\nexport function clearSelectedStudentLeaveNotApproved(): IClearSelectedStudentLeaveNotApprovedActionType {\r\n    return { type: CHANGE_STUDENT_LEAVE_NOT_APPROVED_PENDING_EDIT };\r\n}\r\n\r\n// register_successfull_student_leaves\r\ninterface IAddStudentLeaveNotApprovedNowActionType { type: string, student_leave: IStudentLeave };\r\ninterface IEditStudentLeaveNotApprovedNowActionType { type: string, student_leave: IStudentLeave };\r\ninterface IRemoveStudentLeaveNotApprovedNowActionType { type: string, id: string };\r\ninterface IChangeSelectedStudentLeaveNotApprovedNowActionType { type: string, student_leave: IStudentLeave };\r\ninterface IClearSelectedStudentLeaveNotApprovedNowActionType { type: string };\r\ninterface IRemoveStudentLeaveNotApprovedNowAllActionType { type: string }\r\ninterface IInitialStudentLeaveNotApprovedNowActionType {type: string, student_leave: IStudentLeave}\r\n\r\n// not_register_student_leaves\r\ninterface IAddStudentLeaveApprovedActionType { type: string, student_leave: IStudentLeave };\r\ninterface IEditStudentLeaveApprovedActionType { type: string, student_leave: IStudentLeave };\r\ninterface IRemoveStudentLeaveApprovedActionType { type: string, id: string };\r\ninterface IChangeSelectedStudentLeaveApprovedActionType { type: string, student_leave: IStudentLeave };\r\ninterface IClearSelectedStudentLeaveApprovedActionType { type: string };\r\ninterface IRemoveStudentLeaveApprovedAllActionType { type: string }\r\ninterface IInitialStudentLeaveApprovedActionType {type: string, student_leave: IStudentLeave}\r\n\r\n\r\n// register_successfull_student_leaves\r\ninterface IAddStudentLeaveNotApprovedActionType { type: string, student_leave: IStudentLeave };\r\ninterface IEditStudentLeaveNotApprovedActionType { type: string, student_leave: IStudentLeave };\r\ninterface IRemoveStudentLeaveNotApprovedActionType { type: string, id: string };\r\ninterface IChangeSelectedStudentLeaveNotApprovedActionType { type: string, student_leave: IStudentLeave };\r\ninterface IClearSelectedStudentLeaveNotApprovedActionType { type: string };\r\ninterface IRemoveStudentLeaveNotApprovedAllActionType { type: string }\r\ninterface IInitialStudentLeaveNotApprovedActionType {type: string, student_leave: IStudentLeave}\r\n\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  StudentLeaveModificationStatus};","import { fetchDataSuccess, fetchDataError, removeStudentLeaveApprovedAll, removeStudentLeaveNotApprovedAll, removeStudentLeaveNotApprovedNowAll, addStudentLeaveApproved, addStudentLeaveNotApproved, addStudentLeaveNotApprovedNow } from \"../../../store/actions/student_leave.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface StudentLeave {\r\n    id: string;\r\n    section_id: string;\r\n    section_name: string;\r\n    class_id: string;\r\n    class_name: string;\r\n    student_id: string;\r\n    section_number: number;\r\n    student_name: string;\r\n    reviewer_id: string;\r\n    description: string;\r\n    status: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getStudentLeaveByClassAndStudent(dispatch: any, class_id: any, student_id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/student-leave/class-student/${class_id}/${student_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getStudentLeaveByClassAndStudent(dispatch, class_id, student_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeStudentLeaveApprovedAll())\r\n                dispatch(removeStudentLeaveNotApprovedNowAll())\r\n                dispatch(removeStudentLeaveNotApprovedAll())\r\n                console.log(data.body.student_leave)\r\n                data.body.student_leave.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var student_leave: StudentLeave = {\r\n                        id: ele.id,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        class_id: ele.class_id,\r\n                        class_name: ele.class_name,\r\n                        student_id: ele.student_id,\r\n                        reviewer_id: ele.reviewer_id,\r\n                        status: ele.status,\r\n                        section_number: ele.section_number,\r\n                        student_name: ele.student_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (student_leave.status === \"Approved\"){\r\n                        return dispatch(addStudentLeaveApproved(student_leave));\r\n                    }\r\n                    else if (student_leave.status === \"Not Approved\"){\r\n                        return dispatch(addStudentLeaveNotApproved(student_leave));\r\n                    }\r\n                    else {\r\n                        return dispatch(addStudentLeaveNotApprovedNow(student_leave));\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { IUserGradeExerciseSubmission, UserGradeExerciseSubmissionModificationStatus } from \"../models/user_grade_exercise_submission.interface\";\r\nexport const ADD_USER_GRADE_EXERCISE_SUBMISSION: string = \"ADD_USER_GRADE_EXERCISE_SUBMISSION\";\r\nexport const EDIT_USER_GRADE_EXERCISE_SUBMISSION: string = \"EDIT_USER_GRADE_EXERCISE_SUBMISSION\";\r\nexport const REMOVE_USER_GRADE_EXERCISE_SUBMISSION: string = \"REMOVE_USER_GRADE_EXERCISE_SUBMISSION\";\r\nexport const CHANGE_USER_GRADE_EXERCISE_SUBMISSION_AMOUNT: string = \"CHANGE_USER_GRADE_EXERCISE_SUBMISSION_AMOUNT\";\r\nexport const CHANGE_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT: string = \"CHANGE_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT\";\r\nexport const CLEAR_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT: string = \"CLEAR_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_USER_GRADE_EXERCISE_SUBMISSION_ALL: string = \"REMOVE_USER_GRADE_EXERCISE_SUBMISSION_ALL\";\r\nexport const INITIAL_USER_GRADE_EXERCISE_SUBMISSION: string = \"INITIAL_USER_GRADE_EXERCISE_SUBMISSION\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(user_grade_exercise_submission: IUserGradeExerciseSubmission) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        user_grade_exercise_submission\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialUserGradeExerciseSubmission(user_grade_exercise_submission: IUserGradeExerciseSubmission): IInitialUserGradeExerciseSubmissionActionType {\r\n    return { type: INITIAL_USER_GRADE_EXERCISE_SUBMISSION, user_grade_exercise_submission: user_grade_exercise_submission };\r\n}\r\n\r\nexport function removeUserGradeExerciseSubmissionAll(): IRemoveUserGradeExerciseSubmissionAllActionType {\r\n    return { type: REMOVE_USER_GRADE_EXERCISE_SUBMISSION_ALL };\r\n}\r\n\r\nexport function addUserGradeExerciseSubmission(user_grade_exercise_submission: IUserGradeExerciseSubmission): IAddUserGradeExerciseSubmissionActionType {\r\n    return { type: ADD_USER_GRADE_EXERCISE_SUBMISSION, user_grade_exercise_submission: user_grade_exercise_submission };\r\n}\r\n\r\nexport function editUserGradeExerciseSubmission(user_grade_exercise_submission: IUserGradeExerciseSubmission): IEditUserGradeExerciseSubmissionActionType {\r\n    return { type: EDIT_USER_GRADE_EXERCISE_SUBMISSION, user_grade_exercise_submission: user_grade_exercise_submission };\r\n}\r\n\r\nexport function removeUserGradeExerciseSubmission(id: string): IRemoveUserGradeExerciseSubmissionActionType {\r\n    return { type: REMOVE_USER_GRADE_EXERCISE_SUBMISSION, id: id };\r\n}\r\n\r\nexport function changeSelectedUserGradeExerciseSubmission(user_grade_exercise_submission: IUserGradeExerciseSubmission): IChangeSelectedUserGradeExerciseSubmissionActionType {\r\n    return { type: CHANGE_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT, user_grade_exercise_submission: user_grade_exercise_submission };\r\n}\r\n\r\nexport function clearSelectedUserGradeExerciseSubmission(): IClearSelectedUserGradeExerciseSubmissionActionType {\r\n    return { type: CLEAR_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: UserGradeExerciseSubmissionModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddUserGradeExerciseSubmissionActionType { type: string, user_grade_exercise_submission: IUserGradeExerciseSubmission };\r\ninterface IEditUserGradeExerciseSubmissionActionType { type: string, user_grade_exercise_submission: IUserGradeExerciseSubmission };\r\ninterface IRemoveUserGradeExerciseSubmissionActionType { type: string, id: string };\r\ninterface IChangeSelectedUserGradeExerciseSubmissionActionType { type: string, user_grade_exercise_submission: IUserGradeExerciseSubmission };\r\ninterface IClearSelectedUserGradeExerciseSubmissionActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  UserGradeExerciseSubmissionModificationStatus};\r\ninterface IRemoveUserGradeExerciseSubmissionAllActionType { type: string }\r\ninterface IInitialUserGradeExerciseSubmissionActionType {type: string, user_grade_exercise_submission: IUserGradeExerciseSubmission}","import { fetchDataError, addUserGradeExerciseSubmission, removeUserGradeExerciseSubmissionAll} from \"../../../store/actions/user_grade_exercise_submission.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user_grade_contest {\r\n    student_id: string;\r\n    student_name: string;\r\n    exercise_name: string;\r\n    time_submit: string;\r\n    image_url: string;\r\n    deadline: string;\r\n    description: string;\r\n    exercise_submission_id: string;\r\n    feedback: string;\r\n    score: number;\r\n    time: string;\r\n}\r\nexport function getUserGradeExerciseByStudentAndClass(dispatch: any, class_id: any, student_id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-grade-exercise-submission/class-student/${class_id}/${student_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserGradeExerciseByStudentAndClass(dispatch, class_id, student_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(removeUserGradeExerciseSubmissionAll())\r\n                console.log(data.body.UserGradeExerciseSubmission)\r\n                data.body.UserGradeExerciseSubmission.map((ele: any, index: any) => {\r\n                    var user_grade_contest: user_grade_contest = {\r\n                        student_id: ele.student_id,\r\n                        exercise_name: ele.exercise_name,\r\n                        time_submit: ele.time_submit,\r\n                        description: ele.description,\r\n                        deadline: ele.deadline,\r\n                        image_url: ele.image_url,\r\n                        exercise_submission_id: ele.exercise_submission_id,\r\n                        student_name: ele.student_name,\r\n                        feedback: ele.feedback,\r\n                        score: ele.score,\r\n                        time: ele.time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addUserGradeExerciseSubmission(user_grade_contest))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChartLine } from \"../../common/components/CharLine\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getExerciseForClassStudent } from \"../../common/service/ExerciseStudent/GetExerciseForClassStudent\";\r\nimport { getParentById } from \"../../common/service/Parent/GetParentById\";\r\nimport { getStudentLeaveByClassAndStudent } from \"../../common/service/StudentLeave/GetStudentLeaveByClassStudent\";\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\nimport { getUserGradeExerciseByStudentAndClass } from \"../../common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByClassStudent\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IExerciseStudentState, IStateType, IStudentLeaveState, IUserGradeExerciseSubmissionState, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ManageStudent.css\"\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst ManageStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const exercise_students: IExerciseStudentState = useSelector((state: IStateType) => state.exercise_students);\r\n    const student_leave: IStudentLeaveState = useSelector((state: IStateType) => state.student_leaves);\r\n    const user_grade_exercise_submission: IUserGradeExerciseSubmissionState = useSelector((state: IStateType) => state.user_grade_exercise_submissions);\r\n    const numberSubmittedCount: number = exercise_students.exercise_submitted_not_grade.length + exercise_students.exercise_submitted_graded.length;\r\n    const numberNotSubmitNowCount: number = exercise_students.exercise_not_submit.length;\r\n    const numberStudentLeaveCount: number = student_leave.acceptLeaves.length;\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    \r\n    var id_z = localStorage.getItem('parent_id');\r\n    var parent_id: string = \"\";\r\n    if (id_z !== null) {\r\n        parent_id = id_z;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('student_id');\r\n    var student_id: string= \"\";\r\n    if (id_y !== null) {\r\n        student_id = id_y;\r\n    }\r\n\r\n    var id_t = localStorage.getItem('class_id');\r\n    var class_id: string = \"\";\r\n    if (id_t !== null) {\r\n        class_id = id_t;\r\n    }\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getUserById(dispatch, student_id))\r\n                    trackPromise(getParentById(dispatch, parent_id))\r\n                    trackPromise(getExerciseForClassStudent(dispatch, class_id, student_id))\r\n                    trackPromise(getStudentLeaveByClassAndStudent(dispatch, class_id, student_id))\r\n                    trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id,student_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getUserById(dispatch, student_id))\r\n                trackPromise(getParentById(dispatch, parent_id))\r\n                trackPromise(getExerciseForClassStudent(dispatch, class_id, student_id))\r\n                trackPromise(getStudentLeaveByClassAndStudent(dispatch, class_id, student_id))\r\n                trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id,student_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, student_id, parent_id, class_id]);\r\n\r\n    let list_score_user_grade_exercise : number[] = [];\r\n    let list_name_user_grade_exercise : string[] = [];\r\n    user_grade_exercise_submission.user_grade_exercise_submissions.map((ele, idx) => {\r\n        list_score_user_grade_exercise.push(ele.score)\r\n        list_name_user_grade_exercise.push(ele.exercise_name)\r\n        return ele\r\n    })\r\n\r\n\r\n    const labels = list_name_user_grade_exercise;\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Điểm kiểm tra',\r\n                data: list_score_user_grade_exercise,\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            }\r\n        ],\r\n    };\r\n\r\n    const history = useHistory();\r\n    const routeChange = () =>{ \r\n        let path = '/class/exercise-student'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n    \r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"BÀI TẬP ĐÃ NỘP\" text={`${numberSubmittedCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"BÀI TẬP CHƯA NỘP\" text={`${numberNotSubmitNowCount}`} icon=\"book\" class=\"danger\" />\r\n                <TopCard title=\"SỐ BUỔI NGHỈ\" text={`${numberStudentLeaveCount}`} icon=\"book\" class=\"danger\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <h3 className=\" mb-2\" id=\"level-teacher\">Thông tin học sinh</h3>\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <h4 id=\"full-name\">Tên : {users.teachers.length > 0 ? users.teachers[0].username : \"\"}</h4>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <p id=\"username-teacher\">Giới tính: {users.teachers.length > 0 ? users.teachers[0].sex : \"\"}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-phone fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Số điện thoại: {users.teachers.length > 0 ? users.teachers[0].phone : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Ngày sinh: {users.teachers.length > 0 ? users.teachers[0].dateOfBirth : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Email: {users.teachers.length > 0 ? users.teachers[0].email : \"\"}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <h3 className=\" mb-2\" id=\"level-teacher\">Thông tin phụ huynh</h3>\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <h4 id=\"full-name\">Tên : {users.parents.length > 0 ? users.parents[0].username : \"\"}</h4>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <p id=\"username-teacher\">Giới tính: {users.parents.length > 0 ? users.parents[0].sex : \"\"}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-phone fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Số điện thoại: {users.parents.length > 0 ? users.parents[0].phone : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-calendar fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Ngày sinh: {users.parents.length > 0 ? users.parents[0].dateOfBirth : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Email: {users.parents.length > 0 ? users.parents[0].email : \"\"}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <TopCardLevel title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`2`} icon=\"book\" class=\"primary\" />\r\n                    <TopCardLevel title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`1`} icon=\"book\" class=\"danger\" /> */}\r\n                </div>\r\n\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <h3 className=\" mb-2\" id=\"level-teacher\">Thống kê điểm</h3>\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                        <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row no-gutters\">\r\n                                    <ChartLine data={data} />\r\n                                </div>\r\n                                <div className=\"row justify-content-center\">\r\n                                    <button \r\n                                        className=\"btn btn-success btn-green\" \r\n                                        id=\"btn-into-class-student\"\r\n                                        onClick={() => {routeChange()}}\r\n                                    >\r\n                                        Xem chi tiết\r\n                                        <i className={`fas fa-arrow-right fa-1x`} id=\"icon-arrow-right\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ManageStudent;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IUserGradeExerciseSubmissionState } from \"../../store/models/root.interface\";\r\nimport { ILesson } from \"../../store/models/lesson.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IUserGradeExerciseSubmission } from \"../../store/models/user_grade_exercise_submission.interface\";\r\n\r\nexport type lessonListProps = {\r\n    onSelect?: (lesson: ILesson) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\n\r\nfunction ExerciseSectionList(props: lessonListProps): JSX.Element {\r\n    const user_grade_exercise_submission: IUserGradeExerciseSubmissionState = useSelector((state: IStateType) => state.user_grade_exercise_submissions);\r\n\r\n    const history = useHistory();\r\n    const onChangeRoute = (exercise: IUserGradeExerciseSubmission) =>{ \r\n        localStorage.removeItem('image_url_exercise')\r\n        localStorage.setItem('image_url_exercise', exercise.image_url)\r\n        localStorage.removeItem('score')\r\n        localStorage.setItem('score', exercise.score.toString())\r\n        localStorage.removeItem('description')\r\n        localStorage.setItem('description', exercise.description)\r\n        localStorage.removeItem('time_submit')\r\n        localStorage.setItem('time_submit', exercise.time_submit)\r\n        localStorage.removeItem('feedback')\r\n        localStorage.setItem('feedback', exercise.feedback)\r\n        let path = '/exercise/detail'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n    \r\n    const lessonElements: (JSX.Element | null)[] = user_grade_exercise_submission.user_grade_exercise_submissions.map((exercise, index) => {\r\n        //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n        if (!exercise) { return null; }\r\n        return (<tr className={`table-row`}\r\n            key={`lesson_${index}`} >\r\n            <th scope=\"row\" className=\"data-table\">{index + 1}</th>\r\n            <td className=\"data-table\">{exercise.exercise_name}</td>\r\n            <td className=\"data-table\">{exercise.deadline}</td>\r\n            <td className=\"data-table\">{exercise.time_submit}</td>\r\n            <td className=\"data-table\">{exercise.score}</td>\r\n            <td>\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-primary\" \r\n                    onClick={() => {\r\n                        onChangeRoute(exercise)\r\n                    }}\r\n                >\r\n                    Chi tiết\r\n                </button>\r\n            </td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"table-responsive portlet\">\r\n                <table className=\"table\">\r\n                    <thead id=\"table-thread-exercise-section\">\r\n                        <tr>\r\n                            <th scope=\"col\" className=\"name-row-table\">#</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Tên</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời hạn nộp</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời gian nộp</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Điểm</th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {lessonElements}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ExerciseSectionList;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getUserGradeExerciseByStudentAndClass } from \"../../common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByClassStudent\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IExerciseStudentState, IStateType, IStudentLeaveState } from \"../../store/models/root.interface\";\r\nimport ExerciseSectionList from \"./ExerciseSectionList\";\r\nimport \"./ManageStudent.css\"\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst ExerciseStudentList: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const exercise_students: IExerciseStudentState = useSelector((state: IStateType) => state.exercise_students);\r\n    const student_leave: IStudentLeaveState = useSelector((state: IStateType) => state.student_leaves);\r\n    const numberSubmittedCount: number = exercise_students.exercise_submitted_graded.length + exercise_students.exercise_submitted_not_grade.length;\r\n    const numberNotSubmitNowCount: number = exercise_students.exercise_not_submit.length;\r\n    const numberStudentLeaveCount: number = student_leave.acceptLeaves.length;\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    var id_y = localStorage.getItem('student_id');\r\n    var student_id: string= \"\";\r\n    if (id_y !== null) {\r\n        student_id = id_y;\r\n    }\r\n\r\n    var id_z = localStorage.getItem('class_id');\r\n    var class_id: string= \"\";\r\n    if (id_z !== null) {\r\n        class_id = id_z;\r\n    }\r\n    \r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    dispatch(logout())\r\n                    trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id,student_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id,student_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, student_id, class_id]);\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"BÀI TẬP ĐÃ NỘP\" text={`${numberSubmittedCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"BÀI TẬP CHƯA NỘP\" text={`${numberNotSubmitNowCount}`} icon=\"book\" class=\"danger\" />\r\n                <TopCard title=\"SỐ BUỔI NGHỈ\" text={`${numberStudentLeaveCount}`} icon=\"book\" class=\"danger\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                        </div>\r\n                    </div>\r\n                    <div> \r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Bài kiểm tra buổi 1</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <ExerciseSectionList />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ExerciseStudentList;\r\n","import React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IRootPageStateType, IStateType, ITeacherRegisterQuantificationState, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ManageStudent.css\"\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nconst DetailExerciseStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const teacherRegisterQuantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    console.log(users.teachers)\r\n    console.log(teacherRegisterQuantifications)\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n\r\n    var id_y = localStorage.getItem('image_url_exercise');\r\n    var image_url_exercise: string = \"\";\r\n    if (id_y !== null) {\r\n        image_url_exercise = id_y;\r\n    }\r\n\r\n    var id_z = localStorage.getItem('score');\r\n    var score: number = 0;\r\n    if (id_z !== null) {\r\n        score = parseInt(id_z);\r\n    }\r\n\r\n    var id_t = localStorage.getItem('description');\r\n    var description: string = \"\";\r\n    if (id_t !== null) {\r\n        description = id_t;\r\n    }\r\n\r\n    var id_h = localStorage.getItem('time_submit');\r\n    var time_submit: string = \"\";\r\n    if (id_h !== null) {\r\n        time_submit = id_h;\r\n    }\r\n\r\n    var id_k = localStorage.getItem('feedback');\r\n    var feedback: string = \"\";\r\n    if (id_k !== null) {\r\n        feedback = id_k;\r\n    }\r\n\r\n    let percentage = score * 10;\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Bài tập\", \"Chi tiết\"));\r\n    }, [path.area, dispatch]);\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Đề tài</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <p dangerouslySetInnerHTML={{ __html: description}}>\r\n                            </p>\r\n\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Thời gian nộp: <span> {time_submit}</span></h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-8 col-lg-8\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Bài làm của bé</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <img className=\"card-img-top\" src={image_url_exercise} alt=\"\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-xl-4 col-lg-4\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Điểm của bé</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <CircularProgressbar value={percentage} text={`${percentage}`} />;\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Nhận xét</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            {feedback}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default DetailExerciseStudent;\r\n","import { IExerciseSubmission, ExerciseSubmissionModificationStatus } from \"../models/exercise_submission.interface\";\r\n\r\n// register_successfull_exercise_submissions\r\nexport const ADD_EXERCISE_SUBMISSION_NOT_GRADED: string = \"ADD_EXERCISE_SUBMISSION_NOT_GRADED\";\r\nexport const EDIT_EXERCISE_SUBMISSION_NOT_GRADED: string = \"EDIT_EXERCISE_SUBMISSION_NOT_GRADED\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_NOT_GRADED: string = \"REMOVE_EXERCISE_SUBMISSION_NOT_GRADED\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_AMOUNT: string = \"CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: string = \"CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: string = \"CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL: string = \"REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL\";\r\nexport const INITIAL_EXERCISE_SUBMISSION_NOT_GRADED: string = \"INITIAL_EXERCISE_SUBMISSION_NOT_GRADED\";\r\n\r\n// not_register_exercise_submissions\r\nexport const ADD_EXERCISE_SUBMISSION_GRADED: string = \"ADD_EXERCISE_SUBMISSION_GRADED\";\r\nexport const EDIT_EXERCISE_SUBMISSION_GRADED: string = \"EDIT_EXERCISE_SUBMISSION_GRADED\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_GRADED: string = \"REMOVE_EXERCISE_SUBMISSION_GRADED\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_GRADED_AMOUNT: string = \"CHANGE_EXERCISE_SUBMISSION_GRADED_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: string = \"CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: string = \"CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_GRADED_ALL: string = \"REMOVE_EXERCISE_SUBMISSION_GRADED_ALL\";\r\nexport const INITIAL_EXERCISE_SUBMISSION_GRADED: string = \"INITIAL_EXERCISE_SUBMISSION_GRADED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(exercise_submission: IExerciseSubmission) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        exercise_submission\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialExerciseNotGraded(exercise_submission: IExerciseSubmission): IInitialExerciseNotGradedActionType {\r\n    return { type: INITIAL_EXERCISE_SUBMISSION_NOT_GRADED, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function removeExerciseNotGradedAll(): IRemoveExerciseNotGradedAllActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL };\r\n}\r\n\r\nexport function addExerciseNotGraded(exercise_submission: IExerciseSubmission): IAddExerciseNotGradedActionType {\r\n    return { type: ADD_EXERCISE_SUBMISSION_NOT_GRADED, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function editExerciseNotGraded(exercise_submission: IExerciseSubmission): IEditExerciseNotGradedActionType {\r\n    return { type: EDIT_EXERCISE_SUBMISSION_NOT_GRADED, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function removeExerciseNotGraded(id: string): IRemoveExerciseNotGradedActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_NOT_GRADED, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseNotGraded(exercise_submission: IExerciseSubmission): IChangeSelectedExerciseNotGradedActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function clearSelectedExerciseNotGraded(): IClearSelectedExerciseNotGradedActionType {\r\n    return { type: CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialExerciseGraded(exercise_submission: IExerciseSubmission): IInitialExerciseGradedActionType {\r\n    return { type: INITIAL_EXERCISE_SUBMISSION_GRADED, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function removeExerciseGradedAll(): IRemoveExerciseGradedAllActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_GRADED_ALL };\r\n}\r\n\r\nexport function addExerciseGraded(exercise_submission: IExerciseSubmission): IAddExerciseGradedActionType {\r\n    return { type: ADD_EXERCISE_SUBMISSION_GRADED, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function editExerciseGraded(exercise_submission: IExerciseSubmission): IEditExerciseGradedActionType {\r\n    return { type: EDIT_EXERCISE_SUBMISSION_GRADED, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function removeExerciseGraded(id: string): IRemoveExerciseGradedActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_GRADED, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseGraded(exercise_submission: IExerciseSubmission): IChangeSelectedExerciseGradedActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function clearSelectedExerciseGraded(): IClearSelectedExerciseGradedActionType {\r\n    return { type: CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ExerciseSubmissionModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_exercise_submissions\r\ninterface IAddExerciseNotGradedActionType { type: string, exercise_submission: IExerciseSubmission };\r\ninterface IEditExerciseNotGradedActionType { type: string, exercise_submission: IExerciseSubmission };\r\ninterface IRemoveExerciseNotGradedActionType { type: string, id: string };\r\ninterface IChangeSelectedExerciseNotGradedActionType { type: string, exercise_submission: IExerciseSubmission };\r\ninterface IClearSelectedExerciseNotGradedActionType { type: string };\r\ninterface IRemoveExerciseNotGradedAllActionType { type: string }\r\ninterface IInitialExerciseNotGradedActionType {type: string, exercise_submission: IExerciseSubmission}\r\n\r\n// not_register_exercise_submissions\r\ninterface IAddExerciseGradedActionType { type: string, exercise_submission: IExerciseSubmission };\r\ninterface IEditExerciseGradedActionType { type: string, exercise_submission: IExerciseSubmission };\r\ninterface IRemoveExerciseGradedActionType { type: string, id: string };\r\ninterface IChangeSelectedExerciseGradedActionType { type: string, exercise_submission: IExerciseSubmission };\r\ninterface IClearSelectedExerciseGradedActionType { type: string };\r\ninterface IRemoveExerciseGradedAllActionType { type: string }\r\ninterface IInitialExerciseGradedActionType {type: string, exercise_submission: IExerciseSubmission}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ExerciseSubmissionModificationStatus};","import { fetchDataSuccess, fetchDataError, removeExerciseGradedAll, removeExerciseNotGradedAll, addExerciseGraded, addExerciseNotGraded } from \"../../../store/actions/exercise_submission.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ExerciseSubmission {\r\n    id: string;\r\n    student_id: string;\r\n    exercise_id: string;\r\n    student_name: string;\r\n    exercise_name: string;\r\n    image_url: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getExerciseSubmissionByClass(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/exercise-submission/class/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getExerciseSubmissionByClass(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeExerciseGradedAll())\r\n                dispatch(removeExerciseNotGradedAll())\r\n                console.log(data.body.exercise_not_graded)\r\n                data.body.exercise_not_graded.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var exercise_submission: ExerciseSubmission = {\r\n                        id: ele.id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        exercise_id: ele.exercise_id,\r\n                        exercise_name: ele.exercise_name,\r\n                        image_url: ele.image_url,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    return dispatch(addExerciseNotGraded(exercise_submission));\r\n                })\r\n\r\n                data.body.exercise_graded.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var exercise_submission: ExerciseSubmission = {\r\n                        id: ele.id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        exercise_id: ele.exercise_id,\r\n                        exercise_name: ele.exercise_name,\r\n                        image_url: ele.image_url,\r\n                        create_time: strDate_1.substring(0, 5),\r\n                        update_time: strDate_2.substring(0, 5)\r\n                    }\r\n                    return dispatch(addExerciseGraded(exercise_submission));\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { ISection, SectionModificationStatus } from \"../models/section.interface\";\r\nexport const ADD_SECTION: string = \"ADD_SECTION\";\r\nexport const EDIT_SECTION: string = \"EDIT_SECTION\";\r\nexport const REMOVE_SECTION: string = \"REMOVE_SECTION\";\r\nexport const CHANGE_SECTION_AMOUNT: string = \"CHANGE_SECTION_AMOUNT\";\r\nexport const CHANGE_SECTION_PENDING_EDIT: string = \"CHANGE_SECTION_PENDING_EDIT\";\r\nexport const CLEAR_SECTION_PENDING_EDIT: string = \"CLEAR_SECTION_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SECTION_ALL: string = \"REMOVE_SECTION_ALL\";\r\nexport const INITIAL_SECTION: string = \"INITIAL_SECTION\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(section: ISection) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        section\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSection(section: ISection): IInitialSectionActionType {\r\n    return { type: INITIAL_SECTION, section: section };\r\n}\r\n\r\nexport function removeSectionAll(): IRemoveSectionAllActionType {\r\n    return { type: REMOVE_SECTION_ALL };\r\n}\r\n\r\nexport function addSection(section: ISection): IAddSectionActionType {\r\n    return { type: ADD_SECTION, section: section };\r\n}\r\n\r\nexport function editSection(section: ISection): IEditSectionActionType {\r\n    return { type: EDIT_SECTION, section: section };\r\n}\r\n\r\nexport function removeSection(id: string): IRemoveSectionActionType {\r\n    return { type: REMOVE_SECTION, id: id };\r\n}\r\n\r\nexport function changeSelectedSection(section: ISection): IChangeSelectedSectionActionType {\r\n    return { type: CHANGE_SECTION_PENDING_EDIT, section: section };\r\n}\r\n\r\nexport function clearSelectedSection(): IClearSelectedSectionActionType {\r\n    return { type: CLEAR_SECTION_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateSection(value: SectionModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddSectionActionType { type: string, section: ISection };\r\ninterface IEditSectionActionType { type: string, section: ISection };\r\ninterface IRemoveSectionActionType { type: string, id: string };\r\ninterface IChangeSelectedSectionActionType { type: string, section: ISection };\r\ninterface IClearSelectedSectionActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  SectionModificationStatus};\r\ninterface IRemoveSectionAllActionType { type: string }\r\ninterface IInitialSectionActionType {type: string, section: ISection}","import { fetchDataSuccess, fetchDataError, removeSectionAll, initialSection, addSection } from \"../../../store/actions/section.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface Section {\r\n    id: string;\r\n    class_id: string;\r\n    name: string;\r\n    description: string;\r\n    number: number;\r\n    teacher_name: string;\r\n    teach_form: boolean;\r\n    recording: string;\r\n    message: string;\r\n}\r\nexport function getSectionByClass(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/section/class/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSectionByClass(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeSectionAll())\r\n                console.log(data.body.Section)\r\n                data.body.Section.map((ele: any, index: any) => {\r\n                    var section: Section = {\r\n                        id: ele.id,\r\n                        class_id: ele.class_id,\r\n                        name: ele.name,\r\n                        teacher_name: ele.teacher_name,\r\n                        description: ele.description,\r\n                        number: ele.number,\r\n                        teach_form: ele.teach_form,\r\n                        recording: ele.recording,\r\n                        message: ele.message\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialSection(section));\r\n                    }\r\n                    else{\r\n                        return dispatch(addSection(section))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { fetchDataSuccess, fetchDataError, removeAcceptTeacherLeaveAll, removeLeavesAll,  addAcceptTeacherLeave, removeRemoveTeacherLeaveAll, addRemoveTeacherLeave, addLeaves } from \"../../../store/actions/teacher_leave.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface TeacherLeave {\r\n    id: string;\r\n    section_id: string;\r\n    section_name: string;\r\n    class_id: string;\r\n    class_name: string;\r\n    teacher_id: string;\r\n    teacher_name: string;\r\n    section_number: number;\r\n    reviewer_id: string;\r\n    substitute_teacher_id: string;\r\n    substitute_teacher_name: string;\r\n    description: string;\r\n    status: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getTeacherLeaveByTeacher(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/teacher-leave/teacher/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTeacherLeaveByTeacher(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeAcceptTeacherLeaveAll())\r\n                dispatch(removeRemoveTeacherLeaveAll())\r\n                dispatch(removeLeavesAll())\r\n                //console.log(data.body.teacher_leaves)\r\n                data.body.teacher_leave.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var teacher_leave: TeacherLeave = {\r\n                        id: ele.id,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        class_id: ele.class_id,\r\n                        class_name: ele.class_name,\r\n                        section_number: ele.section_number,\r\n                        teacher_id: ele.teacher_id,\r\n                        reviewer_id: ele.reviewer_id,\r\n                        substitute_teacher_id: ele.substitute_teacher_id,\r\n                        substitute_teacher_name: ele.substitute_teacher_name,\r\n                        status: ele.status,\r\n                        teacher_name: ele.teacher_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1.substring(0, 5),\r\n                        update_time: strDate_2.substring(0, 5)\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (teacher_leave.status === \"Approved\"){\r\n                        return dispatch(addAcceptTeacherLeave(teacher_leave));\r\n                    }\r\n                    else if (teacher_leave.status === \"Not Approved\") {\r\n                        return dispatch(addRemoveTeacherLeave(teacher_leave));\r\n                    }\r\n                    else {\r\n                        return dispatch(addLeaves(teacher_leave));\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","export interface ITeacherLeave {\r\n    id: string;\r\n    section_id: string;\r\n    section_name: string;\r\n    class_id: string;\r\n    class_name: string;\r\n    teacher_id: string;\r\n    teacher_name: string;\r\n    section_number: number;\r\n    reviewer_id: string;\r\n    substitute_teacher_id: string;\r\n    substitute_teacher_name: string;\r\n    description: string;\r\n    status: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum TeacherLeaveModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, ITeacherLeaveState, IUserState, ISectionState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { addLeaves } from \"../../store/actions/teacher_leave.action\";\r\nimport { OnChangeModel, ITeacherLeaveFormState } from \"../../common/types/Form.types\";\r\nimport SelectKeyValue from \"../../common/components/SelectKeyValue\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { IUser } from \"../../store/models/user.interface\";\r\nimport { ITeacherLeave, TeacherLeaveModificationStatus } from \"../../store/models/teacher_leave.interface\";\r\nimport { postTeacherLeave } from \"../../common/service/TeacherLeave/PostTeacherLeave\";\r\n\r\nexport type artAgeListProps = {\r\n    isCheck: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n    data?: any;\r\n};\r\n\r\ntype Option1 = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\n\r\nfunction RequestOffSectionForm(props: artAgeListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const teacherleaves: ITeacherLeaveState | null = useSelector((state: IStateType) => state.teacher_leaves);\r\n    let teacher_leave: ITeacherLeave | null = teacherleaves.selectedTeacherLeave;\r\n    const isCreate: boolean = (teacherleaves.modificationState === TeacherLeaveModificationStatus.Create);\r\n    \r\n    if (!teacher_leave || isCreate){\r\n        teacher_leave = { id: \"\", section_id: \"\", class_id: \"\", section_number: 0, teacher_id: \"\", substitute_teacher_id: \"\", description: \"\", section_name: \"\", class_name: \"\", teacher_name: \"\", reviewer_id: \"\", status: \"\", substitute_teacher_name: \"\", create_time: \"\", update_time: \"\" }\r\n    }\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const listTeacher: IUser[] = users.teachers\r\n    const listTeachers: Option1[] = [];\r\n    const sections: ISectionState | null = useSelector((state: IStateType) => state.sections);\r\n\r\n    listTeacher.map((ele) => {\r\n        let item: Option1 = { \"name\": ele.username, \"value\": ele.id }\r\n        return listTeachers.push(item)\r\n    })\r\n\r\n    const listSections: Option1[] = [];\r\n    sections.sections.map((ele) => {\r\n        let item: Option1 = { \"name\": ele.name, \"value\": ele.id }\r\n        return listSections.push(item)\r\n    })\r\n\r\n    var id_y = localStorage.getItem('class_id');\r\n    let class_id = 0;\r\n    if (id_y !== null) {\r\n        class_id = parseInt(id_y);\r\n    }\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    var teacher_id: string = \"\";\r\n    if (id_x !== null) {\r\n        teacher_id = id_x;\r\n    }\r\n\r\n\r\n    const [formState, setFormState] = useState({\r\n        section_id: { error: \"\", value: teacher_leave.section_id },\r\n        substitute_teacher_id: { error: \"\", value: teacher_leave.substitute_teacher_id },\r\n        description: { error: \"\", value: teacher_leave.description },\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        props.isCheck(false);\r\n        let saveUserFn: Function = addLeaves;\r\n        saveForm(formState, saveUserFn);\r\n    }\r\n\r\n    function saveForm(formState: ITeacherLeaveFormState, saveFn: Function): void {\r\n        if (teacher_leave) {\r\n            const id = toast.loading(\"Đang gửi yêu cầu. Vui lòng đợi trong giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 2000\r\n            });\r\n\r\n            dispatch(postTeacherLeave({\r\n                section_id: formState.section_id.value,\r\n                substitute_teacher_id: formState.substitute_teacher_id.value,\r\n                teacher_id: teacher_id,\r\n                classes_id: class_id,\r\n                description: formState.description.value\r\n            }, id))\r\n\r\n            console.log({\r\n                section_id: formState.section_id.value,\r\n                substitute_teacher_id: formState.substitute_teacher_id.value,\r\n                teacher_id: teacher_id,\r\n                classes_id: class_id,\r\n                description: formState.description.value\r\n            })\r\n        }\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        props.isCheck(false);\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.description.error || !formState.description.value) as boolean;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Gửi yêu cầu nghỉ dạy</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-group\">\r\n                                    <SelectKeyValue\r\n                                        id=\"input_section_id\"\r\n                                        field=\"section_id\"\r\n                                        label=\"Buổi học\"\r\n                                        options={listSections}\r\n                                        required={true}\r\n                                        onChange={hasFormValueChanged}\r\n                                        value={formState.section_id.value}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <SelectKeyValue\r\n                                            id=\"input_substitute_teacher_id\"\r\n                                            field=\"substitute_teacher_id\"\r\n                                            label=\"Giáo viên dạy thay\"\r\n                                            options={listTeachers}\r\n                                            required={true}\r\n                                            onChange={hasFormValueChanged}\r\n                                            value={formState.substitute_teacher_id.value}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_description\"\r\n                                        field=\"description\"\r\n                                        value={formState.description.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        maxLength={100}\r\n                                        label=\"Lý do\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default RequestOffSectionForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/teacher_leave.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postNotifyDb } from \"../NotifyDb/PostNotifyDb\";\r\nimport { getTeacherLeaveByTeacher } from \"./GetTeacherLeaveByTeacher\";\r\n\r\nexport function postTeacherLeave(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/teacher-leave`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postTeacherLeave(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                dispatch(postNotifyDb({\r\n                    name: `Gửi yêu cầu nghỉ dạy buổi học ${val.section_number} lớp ${val.class_name}!`,\r\n                    description: `Bạn đã gửi yêu cầu nghỉ dạy buổi học ${val.section_number} lớp ${val.class_name}!`\r\n                }, \"\"))\r\n                getTeacherLeaveByTeacher(dispatch, data.teacher_id)\r\n                toast.update(idx, { render: \"Yêu cầu nghỉ dạy đã được gửi thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Yêu cầu nghỉ dạy đã được gửi không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            });\r\n    };\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Popup from \"reactjs-popup\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getExerciseSubmissionByClass } from \"../../common/service/ExerciseSubmission/GetExerciseSubmissionByClass\";\r\nimport { getSectionByClass } from \"../../common/service/Section/GetSectionByClass\";\r\nimport { getTeacherLeaveByTeacher } from \"../../common/service/TeacherLeave/GetTeacherLeaveByTeacher\";\r\nimport { getTeacher } from \"../../common/service/Teacher/GetTeacher\";\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { setModificationStateAnonymousNotification } from \"../../store/actions/anonymous_notification.action\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\r\nimport { IAnonymousNotificationState, IExerciseSubmissionState, IRootPageStateType, ISectionState, IStateType, ITeacherLeaveState, ITimeScheduleState, ITutorialPageState, ITutorialState } from \"../../store/models/root.interface\";\r\nimport \"./DetailClassTeacher.css\"\r\nimport RequestOffSectionForm from \"./RequestOffSectionForm\";\r\nimport { ISection } from \"../../store/models/section.interface\";\r\nimport { getTutorial } from \"../../common/service/Tutorial/GetTutorial\";\r\nimport { getTutorialPage } from \"../../common/service/TutorialPage/GetTutorialPage\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getInfoMyClass } from \"../../common/service/MyClass/GetInfoMyClass\";\r\n\r\n\r\nconst DetailClassTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const sections: ISectionState = useSelector((state: IStateType) => state.sections);\r\n    const tutorials: ITutorialState = useSelector((state: IStateType) => state.tutorials);\r\n    const time_schedules: ITimeScheduleState = useSelector((state: IStateType) => state.time_schedules);\r\n    const tutorial_pages: ITutorialPageState = useSelector((state: IStateType) => state.tutorial_pages);\r\n    const anonymous_notifications: IAnonymousNotificationState | null = useSelector((state: IStateType) => state.anonymous_notifications);\r\n    const teacher_leaves: ITeacherLeaveState = useSelector((state: IStateType) => state.teacher_leaves);\r\n    const exercise_submissions: IExerciseSubmissionState = useSelector((state: IStateType) => state.exercise_submissions);\r\n    console.log(tutorial_pages)\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberApprovedCount: number = sections.sections.length;\r\n    const numberNotApprovedNowCount: number = exercise_submissions.exercise_not_gradeds.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('class_id');\r\n\r\n    let class_id: string = \"\";\r\n\r\n    if (id_y !== null) {\r\n        class_id = id_y;\r\n    }\r\n\r\n    const [checked1, setChecked1] = useState(true);\r\n    const [checked2, setChecked2] = useState(false);\r\n    const [checked3, setChecked3] = useState(false);\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getInfoMyClass(dispatch, class_id))\r\n                    trackPromise(getSectionByClass(dispatch, class_id))\r\n                    trackPromise(getTeacher(dispatch))\r\n                    trackPromise(getExerciseSubmissionByClass(dispatch, class_id))\r\n                    trackPromise(getTeacherLeaveByTeacher(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getInfoMyClass(dispatch, class_id))\r\n                trackPromise(getSectionByClass(dispatch, class_id))\r\n                trackPromise(getTeacher(dispatch))\r\n                trackPromise(getExerciseSubmissionByClass(dispatch, class_id))\r\n                trackPromise(getTeacherLeaveByTeacher(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, class_id, id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp học\", \"Buổi học\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    const [popup1, setPopup1] = useState(false);\r\n\r\n    function onAnonymousNotificationRemove() {\r\n        setPopup1(true);\r\n    }\r\n\r\n    function onRemovePopup1(value: boolean) {\r\n        setPopup1(false);\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    const routeChange1 = () => {\r\n        let path = '/exercise';\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    const onChangeRoute = (section: ISection) => {\r\n        let path = \"/classes/section\";\r\n        localStorage.removeItem('section_id')\r\n        localStorage.setItem('section_id', section.id.toString())\r\n        localStorage.removeItem('section_number')\r\n        localStorage.setItem('section_number', section.number.toString())\r\n        /* let tutorial_page_list: any[] = []\r\n        localStorage.removeItem('tutorial_name')\r\n        localStorage.removeItem('tutorial_id')\r\n        tutorials.tutorials.map(ele => {\r\n            if (ele.section_id === section.id) {\r\n                localStorage.setItem('tutorial_id', ele.id.toString())\r\n                localStorage.setItem('tutorial_name', ele.name.toString())\r\n                tutorial_pages.tutorialPages.map(element => {\r\n                    if (element.tutorial_id === ele.id) {\r\n                        tutorial_page_list.push({\r\n                            description: element.description,\r\n                            id: element.id,\r\n                            name: element.name,\r\n                            tutorial_id: element.tutorial_id,\r\n                            number: element.number\r\n                        })\r\n                    }\r\n                    return null\r\n                })\r\n            }\r\n            return null\r\n        })\r\n        console.log(tutorial_page_list)\r\n        localStorage.removeItem('description_tutorial_page_list')\r\n        localStorage.setItem('description_tutorial_page_list', JSON.stringify(tutorial_page_list.sort((a, b) => a.number - b.number))) */\r\n        history.push({\r\n            pathname: path\r\n        })\r\n    }\r\n\r\n    function isDateBeforeToday(date: any) {\r\n        return new Date(date.toDateString()) < new Date(new Date().toDateString());\r\n    }\r\n\r\n    let count = 0;\r\n    let data: string[] = []\r\n    let total_time = \"\";\r\n    if (time_schedules.timeSchedules.length > 1 && promiseInProgress === false) {\r\n            if (time_schedules.timeSchedules[0] !== undefined && time_schedules.timeSchedules[0] !== null){\r\n                var start_time_0 = time_schedules.timeSchedules[0].start_time.split(\"T\");\r\n                var end_time_0 = time_schedules.timeSchedules[0].end_time.split(\"T\");\r\n                var hour_start = parseInt(start_time_0[1].substring(0, 2));\r\n                var minus_tart = parseInt(start_time_0[1].substring(3, 5));\r\n                var sercon_start = parseInt(start_time_0[1].substring(6, 8));\r\n                var hour_end = parseInt(end_time_0[1].substring(0, 2));\r\n                var minus_end = parseInt(end_time_0[1].substring(3, 5));\r\n                var sercon_end = parseInt(end_time_0[1].substring(6, 8));\r\n    \r\n                total_time = (hour_end - hour_start).toString() + \" giờ \" + (minus_end - minus_tart).toString() + \" phút \" + (sercon_end - sercon_start).toString() + \" giây\";\r\n                time_schedules.timeSchedules.map((ele, index) => {\r\n                    if (isDateBeforeToday(new Date(Date.parse(ele.end_time)))) {\r\n                        count++;\r\n                    }\r\n                    var start_time = ele.start_time.split(\"T\");\r\n                    var end_time = ele.end_time.split(\"T\");\r\n                    return data.push(\"Từ \" + start_time[0] + \" \" + start_time[1] + \" -> \" + end_time[0] + \" \" + end_time[1])\r\n                })\r\n            }\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                <div className=\"row\">\r\n                    <TopCard title=\"SỐ BUỔI ĐÃ DẠY\" text={`${numberApprovedCount}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"SỐ BÀI KIỂM TRA CHƯA CHẤM\" text={`${numberNotApprovedNowCount}`} icon=\"book\" class=\"danger\" />\r\n                    <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                        <button\r\n                            className=\"btn btn-success btn-green\"\r\n                            id=\"btn-create-teacher-level\"\r\n                            onClick={() => {\r\n                                dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.Create))\r\n                                onAnonymousNotificationRemove()\r\n                            }}\r\n                        >\r\n                            <i className=\"fas fa fa-plus\"></i>\r\n                            Đăng kí nghỉ dạy\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                            if (checked1 === false) {\r\n                                setChecked1(true)\r\n                                setChecked2(false)\r\n                                setChecked3(false)\r\n                            }\r\n                        }} style={{\r\n                            color: checked1 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Buổi học</h6>\r\n\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"30%\",\r\n                            backgroundColor: checked1 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                            if (checked2 === false) {\r\n                                setChecked2(true)\r\n                                setChecked1(false)\r\n                                setChecked3(false)\r\n                            }\r\n                        }}\r\n                            style={{\r\n                                color: checked2 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                            }}>Bài tập chưa chấm</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"30%\",\r\n                            backgroundColor: checked2 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                            if (checked3 === false) {\r\n                                setChecked3(true)\r\n                                setChecked1(false)\r\n                                setChecked2(false)\r\n                            }\r\n                        }}\r\n                            style={{\r\n                                color: checked3 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                            }}>Nghỉ dạy</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"30%\",\r\n                            backgroundColor: checked3 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Popup\r\n                    open={popup1}\r\n                    onClose={() => setPopup1(false)}\r\n                    closeOnDocumentClick\r\n                >\r\n                    <>\r\n                        {\r\n                            function () {\r\n                                if ((anonymous_notifications.modificationState === AnonymousNotificationModificationStatus.Create)) {\r\n                                    return <RequestOffSectionForm isCheck={onRemovePopup1} />\r\n                                }\r\n                            }()\r\n                        }\r\n                    </>\r\n                </Popup>\r\n\r\n                {\r\n                    function () {\r\n                        if (checked1 === true) {\r\n                            return (\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                        <h3 className=\" mb-2\" id=\"level-teacher\">Buổi học</h3>\r\n                                        <div className=\"table-responsive portlet table-section\">\r\n                                            <table className=\"table\">\r\n                                                <thead className=\"thead-light\">\r\n                                                    <tr>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        sections.sections.sort((a, b) => a.number - b.number).map((ele, index) => {\r\n                                                            return (\r\n                                                                <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                    <div className=\"row row-section mb-4 ml-2 mr-2\" onClick={() => { onChangeRoute(ele) }}>\r\n                                                                        <div className=\"col-xl-3 col-md-3\">\r\n                                                                            <img className=\"card-img image-section-1\" src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1661088297/teacher_hfstak.png\" alt=\"\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"col-xl-9 col-md-9\">\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mt-2 section_number\">Buổi {ele.number}: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mt-2 section_number\"><span className=\"section_name\"> {ele.name}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Lịch học: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{data[index]}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Thời gian buổi học: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{total_time}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Hình thức học: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{ele.teach_form === true ? \"Dạy bằng jisti\" : \"Đọc hiểu giáo trình\"}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Giáo viên: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{ele.teacher_name}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        else if (checked2 === true) {\r\n                            return (\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                        <h3 className=\" mb-2\" id=\"level-teacher\">Bài kiểm tra cần chấm</h3>\r\n                                        <div className=\"table-responsive portlet table-section\">\r\n                                            <table className=\"table\">\r\n                                                <thead className=\"thead-light\">\r\n                                                    <tr>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        exercise_submissions.exercise_not_gradeds.map((ele, index) => {\r\n                                                            return (\r\n                                                                <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                    <div className=\"row row-section mb-4 ml-2 mr-2\" onClick={() => { routeChange1() }}>\r\n                                                                        <div className=\"col-xl-4 col-md-4 mb-4\">\r\n                                                                            <img className=\"card-img image-section\" src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1661088297/teacher_hfstak.png\" alt=\"\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"col-xl-8 col-md-8 mb-4\">\r\n                                                                            <h3 className=\" mb-2\" id=\"level-teacher\">{ele.exercise_name}</h3>\r\n                                                                            <h3 className=\" mb-2\" id=\"level-teacher\">Học sinh: {ele.student_name}</h3>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        else if (checked3 === true) {\r\n                            return (\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                        <h3 className=\" mb-2\" id=\"level-teacher\">Yêu cầu nghỉ dạy</h3>\r\n                                        <div className=\"table-responsive portlet table-section\">\r\n                                            <table className=\"table\">\r\n                                                <thead className=\"thead-light \">\r\n                                                    <tr>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        teacher_leaves.leaves.map((ele, index) => {\r\n                                                            return (\r\n                                                                <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                    <div className=\"row row-section mb-4 ml-2 mr-2\" onClick={() => { routeChange1() }}>\r\n                                                                        <div className=\"col-xl-4 col-md-4 mb-4\">\r\n                                                                            <img className=\"card-img image-section\" src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1661088297/teacher_hfstak.png\" alt=\"\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"col-xl-8 col-md-8 mb-4\">\r\n                                                                            <h3 className=\" mb-2\" id=\"level-teacher\">{ele.section_name}</h3>\r\n                                                                            <h4 className=\" mb-2\" id=\"level-teacher\">Chưa duyệt</h4>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }()\r\n                }\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default DetailClassTeacher;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/semester.actions\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postUserGradeExercise(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-grade-exercise-submission`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postUserGradeExercise(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Chấm điểm bài tập thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Chấm điểm bài tập không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataSuccess, fetchDataError, removeExerciseGradedAll, removeExerciseNotGradedAll, addExerciseGraded, addExerciseNotGraded } from \"../../../store/actions/exercise_submission.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ExerciseSubmission {\r\n    id: string;\r\n    student_id: string;\r\n    exercise_id: string;\r\n    student_name: string;\r\n    exercise_name: string;\r\n    image_url: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getExerciseSubmissionByExercise(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/exercise-submission/exercise/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getExerciseSubmissionByExercise(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeExerciseGradedAll())\r\n                dispatch(removeExerciseNotGradedAll())\r\n                console.log(data.body.exercise_not_graded)\r\n                data.body.exercise_not_graded.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var exercise_submission: ExerciseSubmission = {\r\n                        id: ele.id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        exercise_id: ele.exercise_id,\r\n                        exercise_name: ele.exercise_name,\r\n                        image_url: ele.image_url,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    return dispatch(addExerciseNotGraded(exercise_submission));\r\n                })\r\n\r\n                data.body.exercise_graded.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var exercise_submission: ExerciseSubmission = {\r\n                        id: ele.id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        exercise_id: ele.exercise_id,\r\n                        exercise_name: ele.exercise_name,\r\n                        image_url: ele.image_url,\r\n                        create_time: strDate_1.substring(0, 5),\r\n                        update_time: strDate_2.substring(0, 5)\r\n                    }\r\n                    return dispatch(addExerciseGraded(exercise_submission));\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IExerciseSubmissionState, IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./GradeExamTeacher.css\"\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport NumberInput from \"../../common/components/NumberInput\";\r\nimport { postUserGradeExercise } from \"../../common/service/UserGradeExercise/PostUserGradeExercise\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { getExerciseSubmissionByExercise } from \"../../common/service/ExerciseSubmission/GetExerciseSubmissionByExeercise\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst GradeExamTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const exercise_submissions: IExerciseSubmissionState = useSelector((state: IStateType) => state.exercise_submissions);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    let user_grade_exercise_submission = {\r\n        feedback: \"\",\r\n        score: 0\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    const [formState, setFormState] = useState({\r\n        feedback: { error: \"\", value: user_grade_exercise_submission.feedback },\r\n        score: { error: \"\", value: user_grade_exercise_submission.score },\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    function saveForm(){\r\n        const id = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n        \r\n        if (student_id === \"\" && exercise_submission_id === \"\"){\r\n            let x = exercise_submissions.exercise_not_gradeds[0].student_id;\r\n            let y = exercise_submissions.exercise_not_gradeds[0].id;\r\n            console.log({\r\n                student_id: x,\r\n                exercise_submission_id: y,\r\n                score: formState.score.value,\r\n                feedback: formState.feedback.value\r\n            })\r\n\r\n            dispatch(postUserGradeExercise({\r\n                student_id: x,\r\n                exercise_submission_id: y,\r\n                score: formState.score.value,\r\n                feedback: formState.feedback.value\r\n            }, id))\r\n        }\r\n        else {\r\n            dispatch(postUserGradeExercise({\r\n                student_id: student_id,\r\n                exercise_submission_id: exercise_submission_id,\r\n                score: formState.score.value,\r\n                feedback: formState.feedback.value\r\n            }, id))\r\n        }\r\n    }\r\n    \r\n    var id_y = localStorage.getItem('exercise_id');\r\n    let exercise_id = \"\";\r\n\r\n    if (id_y !== null) {\r\n        exercise_id = id_y;\r\n    }\r\n    \r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getExerciseSubmissionByExercise(dispatch, exercise_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getExerciseSubmissionByExercise(dispatch, exercise_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, exercise_id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Bài tập\", \"Chi tiết\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    const history = useHistory();\r\n    const routeChange = () => {\r\n        let x = count + 1;\r\n        setCount(x);\r\n        if (x < exercise_submissions.exercise_not_gradeds.length){\r\n            let image_url_ = exercise_submissions.exercise_not_gradeds[x].image_url;\r\n            let student_name_ = exercise_submissions.exercise_not_gradeds[x].student_name;\r\n            let time_submit_ = exercise_submissions.exercise_not_gradeds[x].update_time;\r\n            let student_id_ = exercise_submissions.exercise_not_gradeds[x].student_id;\r\n            let exercise_submission_id_ = exercise_submissions.exercise_not_gradeds[x].id;\r\n            setImageUrl(image_url_);\r\n            setStudentName(student_name_);\r\n            setTimeSubmit(time_submit_);\r\n            setStudentId(student_id_);\r\n            setExerciseSubmissionId(exercise_submission_id_);\r\n        }\r\n    }\r\n\r\n    const routeChange1 = () => {\r\n        let path = '/exercise/result-grade';\r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    const [count, setCount] = useState(0);\r\n    const [image_url, setImageUrl] = useState(\"\");\r\n    const [student_name, setStudentName] = useState(\"\");\r\n    const [student_id, setStudentId] = useState(\"\");\r\n    const [exercise_submission_id, setExerciseSubmissionId] = useState(\"\");\r\n    const [time_submit, setTimeSubmit] = useState(\"\");\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> :  <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6\">\r\n                    <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Bài làm của bé</h6>\r\n                    </div>\r\n                    {\r\n                        function () {\r\n                            if (count > 0)\r\n                                return (\r\n                                    <img className=\"card-img-top\" src={image_url} alt=\"\" />\r\n                                )\r\n                            else {\r\n                                if (exercise_submissions.exercise_not_gradeds.length > 0) {\r\n                                    return (\r\n                                        <img className=\"card-img-top\" src={exercise_submissions.exercise_not_gradeds[0].image_url} alt=\"\" />\r\n                                    )\r\n                                }\r\n                            }\r\n                        }()\r\n                    }\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6\">\r\n                    <div className=\"row\">\r\n                        <div className={`card shadow h-100 py-2 ml-4 mr-4`} id=\"topcard-user\">\r\n                            {\r\n                                function () {\r\n                                    if (count > 0)\r\n                                        return (\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"row no-gutters justify-content-left\">\r\n                                                    <h4 id=\"full-name\">Thông tin bài nộp</h4>\r\n                                                </div>\r\n                                                <div className=\"row no-gutters justify-content-left\">\r\n                                                    <p id=\"username-teacher\">Tên học sinh: {student_name}</p>\r\n                                                </div>\r\n                                                <div className=\"row no-gutters justify-content-left\">\r\n                                                    <p id=\"username-teacher\">Thời gian nộp: {time_submit}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    else {\r\n                                        if (exercise_submissions.exercise_not_gradeds.length > 0) {\r\n                                            return (\r\n                                                <div className=\"card-body\">\r\n                                                    <div className=\"row no-gutters justify-content-left\">\r\n                                                        <h4 id=\"full-name\">Thông tin bài nộp</h4>\r\n                                                    </div>\r\n                                                    <div className=\"row no-gutters justify-content-left\">\r\n                                                        <p id=\"username-teacher\">Tên học sinh: {exercise_submissions.exercise_not_gradeds[0].student_name}</p>\r\n                                                    </div>\r\n                                                    <div className=\"row no-gutters justify-content-left\">\r\n                                                        <p id=\"username-teacher\">Thời gian nộp: {exercise_submissions.exercise_not_gradeds[0].update_time}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    }\r\n                                }()\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-4 ml-4\">\r\n                        <NumberInput \r\n                            id=\"input_score\"\r\n                            value={formState.score.value}\r\n                            field=\"score\"\r\n                            onChange={hasFormValueChanged}\r\n                            max={10}\r\n                            min={0}\r\n                            label=\"Nhập điểm\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Nhận xét</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                                <TextInput id=\"input_feedback\"\r\n                                    field=\"feedback\"\r\n                                    value={formState.feedback.value}\r\n                                    onChange={hasFormValueChanged}\r\n                                    required={false}\r\n                                    maxLength={100}\r\n                                    label=\"\"\r\n                                    placeholder=\"\"\r\n                                />\r\n                            </div>\r\n                            <button className=\"btn btn-warning\" onClick={() => {saveForm()}}>Lưu</button>\r\n                            {\r\n                                function () {\r\n                                    if (count === exercise_submissions.exercise_not_gradeds.length - 1) {\r\n                                        return (\r\n                                            <button className={`btn btn-success left-margin`} onClick={() => { routeChange1() }}>Hoàn thành</button>\r\n                                        )\r\n                                    }\r\n                                    else {\r\n                                        return (\r\n                                            <button className={`btn btn-success left-margin`} onClick={() => { routeChange() }}>Bài tiếp</button>\r\n                                        )\r\n                                    }\r\n                                }()\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default GradeExamTeacher;\r\n","import { fetchDataRequest, fetchDataSuccess, fetchDataError, addUserGradeExerciseSubmission, removeUserGradeExerciseSubmissionAll} from \"../../../store/actions/user_grade_exercise_submission.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user_grade_contest {\r\n    student_id: string;\r\n    student_name: string;\r\n    exercise_name: string;\r\n    time_submit: string;\r\n    image_url: string;\r\n    description: string;\r\n    deadline: string;\r\n    exercise_submission_id: string;\r\n    feedback: string;\r\n    score: number;\r\n    time: string;\r\n}\r\nexport function getUserGradeExerciseByExerciseAndClass(exercise_id: any, class_id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-grade-exercise-submission/exercise-class/${exercise_id}/${class_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserGradeExerciseByExerciseAndClass(exercise_id, class_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeUserGradeExerciseSubmissionAll())\r\n                console.log(data.body.UserGradeExerciseSubmission)\r\n                data.body.UserGradeExerciseSubmission.map((ele: any, index: any) => {\r\n                    var user_grade_contest: user_grade_contest = {\r\n                        student_id: ele.student_id,\r\n                        exercise_name: ele.exercise_name,\r\n                        time_submit: ele.time_submit,\r\n                        deadline: ele.deadline,\r\n                        description: ele.description,\r\n                        image_url: ele.image_url,\r\n                        exercise_submission_id: ele.exercise_submission_id,\r\n                        student_name: ele.student_name,\r\n                        feedback: ele.feedback,\r\n                        score: ele.score,\r\n                        time: ele.time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addUserGradeExerciseSubmission(user_grade_contest))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IUserGradeExerciseSubmissionState } from \"../../store/models/root.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction ScoreExamList(): JSX.Element {\r\n\r\n    const user_grade_exercise_submissions: IUserGradeExerciseSubmissionState  = useSelector((state: IStateType) => state.user_grade_exercise_submissions);\r\n    const history = useHistory();\r\n\r\n\r\n    const routeChange = () => {\r\n        let path = '/manage-student';\r\n        history.push(path);\r\n    }\r\n\r\n    console.log(user_grade_exercise_submissions.user_grade_exercise_submissions)\r\n\r\n\r\n    const studentElements: (JSX.Element | null)[] = user_grade_exercise_submissions.user_grade_exercise_submissions.map((student, idx) => {\r\n        if (!student) { return null; }\r\n        return (<tr className={`table-row`}\r\n            key={`student_${idx}`} onClick={routeChange}>\r\n            <div className=\"col-xl-12 col-md-12 mb-4\" >\r\n            <div className={`card shadow h-100 py-0 content-student-teacher`} id=\"topcard-user\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 col-xs-12\">\r\n                            <div className=\"row\">\r\n                                <p className=\"col-xl-2 col-md-2 col-xs-2\"><span className=\"header-card-course-teacher\" id=\"index-infor-student-teacher\">{idx + 1}</span></p>\r\n                                <i className={`col-xl-2 col-md-2 col-xs-2 fas fa-user-circle fa-2x`} id=\"icon-user\"></i>\r\n                                <p className=\"col-xl-6 col-md-6 col-xs-6\"id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.student_name}</span></p>\r\n                                <p className=\"col-xl-2 col-md-2 col-xs-2\"id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.score}</span></p>\r\n                            </div>  \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"table-responsive portlet\">\r\n            <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {studentElements}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ScoreExamList;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getUserGradeExerciseByExerciseAndClass } from \"../../common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByExeerciseAndClass\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IRootPageStateType, IStateType, IUserGradeExerciseSubmissionState } from \"../../store/models/root.interface\";\r\nimport ScoreExamList from \"./ScoreExamList\";\r\n\r\nconst ResultGradeExamTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const user_grade_exercise_submissions: IUserGradeExerciseSubmissionState  = useSelector((state: IStateType) => state.user_grade_exercise_submissions);\r\n    const max = user_grade_exercise_submissions.user_grade_exercise_submissions.reduce((a, b) => Math.max(a, b.score), -Infinity);\r\n    const min = user_grade_exercise_submissions.user_grade_exercise_submissions.reduce((a, b) => Math.min(a, b.score), 0);\r\n    var class_id = localStorage.getItem('class_id');\r\n    var class_id_: string = \"\";\r\n    if (class_id !== null) {\r\n        class_id_ = class_id;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('exercise_id');\r\n    let exercise_id = \"\";\r\n\r\n    if (id_y !== null) {\r\n        exercise_id = id_y;\r\n    }\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {    \r\n                    dispatch(getUserGradeExerciseByExerciseAndClass(exercise_id, class_id_))\r\n                }\r\n            }\r\n            else {     \r\n                dispatch(getUserGradeExerciseByExerciseAndClass(exercise_id, class_id_))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, class_id_, exercise_id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp\", \"Chi tiết\"));\r\n    }, [dispatch, path.area])\r\n\r\n\r\n    const history = useHistory();\r\n    const onRouteChange = () =>{ \r\n        let path = '/exercise/result-analytis'; \r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n    return (\r\n        <Fragment>\r\n            \r\n            <div className=\"row\">\r\n                <TopCard title=\"ĐIỂM CAO NHẤT\" text={`${max}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"ĐIỂM THẤP NHẤT\" text={`${min}`} icon=\"book\" class=\"danger\" />\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-xl-8 col-md-8 mb-4\">\r\n                    <h3 className=\" mb-2\" id=\"level-teacher\">Danh sách học sinh</h3>\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                        <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                            <div className=\"card-body\">\r\n                                <ScoreExamList />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-xl-4 col-md-4 mb-4\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <button className=\"btn btn-success btn-green\" id=\"btn-into-class\" onClick={() =>{\r\n                        onRouteChange()}}>\r\n                            Xem review\r\n                            <i className=\"fas fa fa-arrow-right\"></i>\r\n                    </button>\r\n                    </div>\r\n                    {/* <TopCardLevel title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`2`} icon=\"book\" class=\"primary\" />\r\n                    <TopCardLevel title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`1`} icon=\"book\" class=\"danger\" /> */}\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ResultGradeExamTeacher;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ChartLine } from \"../../common/components/CharLine\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getUserGradeExerciseByExerciseAndClass } from \"../../common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByExeerciseAndClass\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IRootPageStateType, IStateType, IUserGradeExerciseSubmissionState } from \"../../store/models/root.interface\";\r\nimport ScoreExamList from \"./ScoreExamList\";\r\n\r\n\r\n\r\nconst AnalytisResultGradeExamTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const user_grade_exercise_submissions: IUserGradeExerciseSubmissionState  = useSelector((state: IStateType) => state.user_grade_exercise_submissions);\r\n    const max = user_grade_exercise_submissions.user_grade_exercise_submissions.reduce((a, b) => Math.max(a, b.score), -Infinity);\r\n    const min = user_grade_exercise_submissions.user_grade_exercise_submissions.reduce((a, b) => Math.min(a, b.score), 0);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n\r\n    let student: string[] = []\r\n    let scores: number[] = []\r\n    if (user_grade_exercise_submissions.user_grade_exercise_submissions.length > 0){\r\n        user_grade_exercise_submissions.user_grade_exercise_submissions.map(ele => {\r\n            student.push(ele.student_name)\r\n            scores.push(ele.score)\r\n            return ele\r\n        })\r\n    }\r\n\r\n    var id_x = localStorage.getItem('class_id');\r\n    var class_id: string = \"\";\r\n    if (id_x !== null) {\r\n        class_id = id_x;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('exercise_id');\r\n    let exercise_id = \"\";\r\n\r\n    if (id_y !== null) {\r\n        exercise_id = id_y;\r\n    }\r\n\r\n    const labels = student;\r\n    let data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Điêm',\r\n                data: scores,\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            }\r\n        ],\r\n    };\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    dispatch(getUserGradeExerciseByExerciseAndClass(exercise_id, class_id))\r\n                }\r\n            }\r\n            else {   \r\n                dispatch(getUserGradeExerciseByExerciseAndClass(exercise_id, class_id)) \r\n            }\r\n        }\r\n        \r\n    }, [dispatch, exercise_id, class_id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp\", \"Chi tiết\"));\r\n    }, [path.area, dispatch])\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"ĐIỂM CAO NHẤT\" text={`${max}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"ĐIỂM THẤP NHẤT\" text={`${min}`} icon=\"book\" class=\"danger\" />\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <h3 className=\" mb-2\" id=\"level-teacher\">Danh sách học sinh</h3>\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                        <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                            <div className=\"card-body\">\r\n                                <ScoreExamList />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <ChartLine data={data} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default AnalytisResultGradeExamTeacher;\r\n\r\n","import { IExercise, ExerciseModificationStatus } from \"../models/exercise.interface\";\r\nexport const ADD_EXERCISE: string = \"ADD_EXERCISE\";\r\nexport const EDIT_EXERCISE: string = \"EDIT_EXERCISE\";\r\nexport const REMOVE_EXERCISE: string = \"REMOVE_EXERCISE\";\r\nexport const CHANGE_EXERCISE_AMOUNT: string = \"CHANGE_EXERCISE_AMOUNT\";\r\nexport const CHANGE_EXERCISE_PENDING_EDIT: string = \"CHANGE_EXERCISE_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_PENDING_EDIT: string = \"CLEAR_EXERCISE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_EXERCISE_ALL: string = \"REMOVE_EXERCISE_ALL\";\r\nexport const INITIAL_EXERCISE: string = \"INITIAL_EXERCISE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(exercise: IExercise) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        exercise\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialExercise(exercise: IExercise): IInitialExerciseActionType {\r\n    return { type: INITIAL_EXERCISE, exercise: exercise };\r\n}\r\n\r\nexport function removeExerciseAll(): IRemoveExerciseAllActionType {\r\n    return { type: REMOVE_EXERCISE_ALL };\r\n}\r\n\r\nexport function addExercise(exercise: IExercise): IAddExerciseActionType {\r\n    return { type: ADD_EXERCISE, exercise: exercise };\r\n}\r\n\r\nexport function editExercise(exercise: IExercise): IEditExerciseActionType {\r\n    return { type: EDIT_EXERCISE, exercise: exercise };\r\n}\r\n\r\nexport function removeExercise(id: string): IRemoveExerciseActionType {\r\n    return { type: REMOVE_EXERCISE, id: id };\r\n}\r\n\r\nexport function changeSelectedExercise(exercise: IExercise): IChangeSelectedExerciseActionType {\r\n    return { type: CHANGE_EXERCISE_PENDING_EDIT, exercise: exercise };\r\n}\r\n\r\nexport function clearSelectedExercise(): IClearSelectedExerciseActionType {\r\n    return { type: CLEAR_EXERCISE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ExerciseModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddExerciseActionType { type: string, exercise: IExercise };\r\ninterface IEditExerciseActionType { type: string, exercise: IExercise };\r\ninterface IRemoveExerciseActionType { type: string, id: string };\r\ninterface IChangeSelectedExerciseActionType { type: string, exercise: IExercise };\r\ninterface IClearSelectedExerciseActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ExerciseModificationStatus};\r\ninterface IRemoveExerciseAllActionType { type: string }\r\ninterface IInitialExerciseActionType {type: string, exercise: IExercise}","import { fetchDataSuccess, fetchDataError, removeExerciseAll, initialExercise, addExercise } from \"../../../store/actions/exercise.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface exercise {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    section_id: string;\r\n    deadline: string;\r\n    level_id: string;\r\n    level_name: string;\r\n    section_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getExerciseBySection(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/exercises/section/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getExerciseBySection(dispatch,id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeExerciseAll())\r\n                //console.log(data.body.exercises)\r\n                data.body.Exercise.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var exercise: exercise = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        level_id: ele.level_id,\r\n                        deadline: ele.deadline,\r\n                        level_name: ele.level_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1.substring(0, 5),\r\n                        update_time: strDate_2.substring(0, 5)\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialExercise(exercise));\r\n                    }\r\n                    else{\r\n                        return dispatch(addExercise(exercise))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { IExerciseLevel, ExerciseLevelModificationStatus } from \"../models/exercise_level.interface\";\r\nexport const ADD_EXERCISE_LEVEL: string = \"ADD_EXERCISE_LEVEL\";\r\nexport const EDIT_EXERCISE_LEVEL: string = \"EDIT_EXERCISE_LEVEL\";\r\nexport const REMOVE_EXERCISE_LEVEL: string = \"REMOVE_EXERCISE_LEVEL\";\r\nexport const CHANGE_EXERCISE_LEVEL_AMOUNT: string = \"CHANGE_EXERCISE_LEVEL_AMOUNT\";\r\nexport const CHANGE_EXERCISE_LEVEL_PENDING_EDIT: string = \"CHANGE_EXERCISE_LEVEL_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_LEVEL_PENDING_EDIT: string = \"CLEAR_EXERCISE_LEVEL_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_EXERCISE_LEVEL_ALL: string = \"REMOVE_EXERCISE_LEVEL_ALL\";\r\nexport const INITIAL_EXERCISE_LEVEL: string = \"INITIAL_EXERCISE_LEVEL\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(exercise_level: IExerciseLevel) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        exercise_level\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialExerciseLevel(exercise_level: IExerciseLevel): IInitialExerciseLevelActionType {\r\n    return { type: INITIAL_EXERCISE_LEVEL, exercise_level: exercise_level };\r\n}\r\n\r\nexport function removeExerciseLevelAll(): IRemoveExerciseLevelAllActionType {\r\n    return { type: REMOVE_EXERCISE_LEVEL_ALL };\r\n}\r\n\r\nexport function addExerciseLevel(exercise_level: IExerciseLevel): IAddExerciseLevelActionType {\r\n    return { type: ADD_EXERCISE_LEVEL, exercise_level: exercise_level };\r\n}\r\n\r\nexport function editExerciseLevel(exercise_level: IExerciseLevel): IEditExerciseLevelActionType {\r\n    return { type: EDIT_EXERCISE_LEVEL, exercise_level: exercise_level };\r\n}\r\n\r\nexport function removeExerciseLevel(id: string): IRemoveExerciseLevelActionType {\r\n    return { type: REMOVE_EXERCISE_LEVEL, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseLevel(exercise_level: IExerciseLevel): IChangeSelectedExerciseLevelActionType {\r\n    return { type: CHANGE_EXERCISE_LEVEL_PENDING_EDIT, exercise_level: exercise_level };\r\n}\r\n\r\nexport function clearSelectedExerciseLevel(): IClearSelectedExerciseLevelActionType {\r\n    return { type: CLEAR_EXERCISE_LEVEL_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ExerciseLevelModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddExerciseLevelActionType { type: string, exercise_level: IExerciseLevel };\r\ninterface IEditExerciseLevelActionType { type: string, exercise_level: IExerciseLevel };\r\ninterface IRemoveExerciseLevelActionType { type: string, id: string };\r\ninterface IChangeSelectedExerciseLevelActionType { type: string, exercise_level: IExerciseLevel };\r\ninterface IClearSelectedExerciseLevelActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ExerciseLevelModificationStatus};\r\ninterface IRemoveExerciseLevelAllActionType { type: string }\r\ninterface IInitialExerciseLevelActionType {type: string, exercise_level: IExerciseLevel}","export interface IExercise {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    deadline: string;\r\n    section_id: string;\r\n    level_id: string;\r\n    level_name: string;\r\n    section_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ExerciseModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { fetchDataSuccess, fetchDataError, removeExerciseLevelAll, addExerciseLevel } from \"../../../store/actions/exercise_level.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ExerciseLevel {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    weight: number;\r\n}\r\nexport function getExerciseLevel(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/exercise-level`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getExerciseLevel(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeExerciseLevelAll())\r\n                //console.log(data.body.exercise_levels)\r\n                data.body.ExerciseLevel.map((ele: any, index: any) => {\r\n                    var exercise_level: ExerciseLevel = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        weight: ele.weight\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addExerciseLevel(exercise_level))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { fetchDataSuccess, fetchDataError, removeSectionAll, addSection } from \"../../../store/actions/section.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface Section {\r\n    id: string;\r\n    class_id: string;\r\n    name: string;\r\n    description: string;\r\n    number: number;\r\n    teacher_name: string;\r\n    teach_form: boolean;\r\n    recording: string;\r\n    message: string;\r\n}\r\nexport function getSectionById(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/section/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSectionById(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeSectionAll())\r\n                var section: Section = {\r\n                    id: data.id,\r\n                    class_id: data.class_id,\r\n                    name: data.name,\r\n                    teacher_name: data.teacher_name,\r\n                    description: data.description,\r\n                    number: data.number,\r\n                    teach_form: data.teach_form,\r\n                    recording: data.recording,\r\n                    message: data.message\r\n                }\r\n                return dispatch(addSection(section))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IExerciseState, IExerciseLevelState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IExercise, ExerciseModificationStatus } from \"../../store/models/exercise.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editExercise, clearSelectedExercise, setModificationState, addExercise } from \"../../store/actions/exercise.action\";\r\nimport { OnChangeModel, IExerciseFormState } from \"../../common/types/Form.types\";\r\nimport { IExerciseLevel } from \"../../store/models/exercise_level.interface\";\r\nimport SelectKeyValue from \"../../common/components/SelectKeyValue\";\r\nimport { postExercise } from \"../../common/service/Exercise/PostExercise\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type exerciseListProps = {\r\n    isCheck: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n    data?: any;\r\n};\r\n\r\ntype Options = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\n\r\nfunction ExerciseForm(props: exerciseListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const exercises: IExerciseState | null = useSelector((state: IStateType) => state.exercises);\r\n    const exercise_levels: IExerciseLevelState | null = useSelector((state: IStateType) => state.exercise_levels);\r\n    let exercise: IExercise | null = exercises.selectedExercise;\r\n    const isCreate: boolean = (exercises.modificationState === ExerciseModificationStatus.Create);\r\n\r\n    if (!exercise || isCreate) {\r\n        exercise = { id: \"\", name: \"\", deadline: \"\", description: \"\", section_id: \"\", section_name: \"\", level_id: \"\", level_name: \"\", create_time: \"\", update_time: \"\" };\r\n    }\r\n\r\n    var id_y = localStorage.getItem('section_id');\r\n    \r\n    let section_id = \"\";\r\n\r\n    if (id_y !== null) {\r\n        section_id = id_y;\r\n    }\r\n\r\n    const listExerciseLevel: IExerciseLevel[] = exercise_levels.exercise_levels\r\n    const listExerciseLevels: Options[] = [];\r\n    listExerciseLevel.map((ele) => {\r\n        let item: Options = { \"name\": ele.weight.toString() + \"%\", \"value\": ele.id }\r\n        return listExerciseLevels.push(item)\r\n    })\r\n\r\n    const [formState, setFormState] = useState({\r\n        section_id: { error: \"\", value: exercise.section_id },\r\n        level_id: { error: \"\", value: exercise.level_id },\r\n        name: { error: \"\", value: exercise.name },\r\n        description: { error: \"\", value: exercise.description },\r\n        deadline: { error: \"\", value: exercise.deadline },\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        props.isCheck(false);\r\n        let saveUserFn: Function = (isCreate) ? addExercise : editExercise;\r\n        saveForm(formState, saveUserFn);\r\n    }\r\n\r\n    function saveForm(formState: IExerciseFormState, saveFn: Function): void {\r\n        if (exercise) {\r\n            const id = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            if (saveFn === addExercise) {\r\n                dispatch(postExercise({\r\n                    section_id: section_id,\r\n                    level_id: formState.level_id.value ,\r\n                    name: formState.name.value,\r\n                    description: formState.description.value ,\r\n                    deadline: formState.deadline.value\r\n                }, id))\r\n            }\r\n\r\n            dispatch(clearSelectedExercise());\r\n            dispatch(setModificationState(ExerciseModificationStatus.None));\r\n        }\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        props.isCheck(false);\r\n        dispatch(setModificationState(ExerciseModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.name.error || !formState.name.value) as boolean;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} độ tuổi</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_email\"\r\n                                        value={formState.name.value}\r\n                                        field=\"name\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={20}\r\n                                        label=\"Tên\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_description\"\r\n                                        field=\"description\"\r\n                                        value={formState.description.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        maxLength={100}\r\n                                        label=\"Miêu tả\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <SelectKeyValue\r\n                                        id=\"input_level_id\"\r\n                                        field=\"level_id\"\r\n                                        label=\"Mức độ\"\r\n                                        options={listExerciseLevels}\r\n                                        required={true}\r\n                                        onChange={hasFormValueChanged}\r\n                                        value={formState.level_id.value}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_deadline\"\r\n                                        field=\"deadline\"\r\n                                        value={formState.deadline.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        maxLength={100}\r\n                                        type=\"datetime-local\"\r\n                                        label=\"Hạn nộp\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ExerciseForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess } from \"../../../store/actions/exercise.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getExerciseBySection } from \"./GetExerciseBySection\";\r\n\r\n\r\nexport function postExercise(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    var id_x = localStorage.getItem('section_id');\r\n    let section_id: string = \"\";\r\n    if(id_x !== null){\r\n        section_id = id_x\r\n    }\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/exercises`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postExercise(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                dispatch(fetchDataSuccess(data))\r\n                toast.update(idx, { render: \"Thêm bài tập thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER , autoClose: 2000});\r\n                dispatch(getExerciseBySection(dispatch, section_id));\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Thêm bài tập không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { ITutorialPage, TutorialPageModificationStatus } from \"../models/tutorial_page.interface\";\r\nexport const ADD_TUTORIAL_PAGE: string = \"ADD_TUTORIAL_PAGE\";\r\nexport const EDIT_TUTORIAL_PAGE: string = \"EDIT_TUTORIAL_PAGE\";\r\nexport const REMOVE_TUTORIAL_PAGE: string = \"REMOVE_TUTORIAL_PAGE\";\r\nexport const REMOVE_TUTORIAL_PAGE_BY_NUMBER: string = \"REMOVE_TUTORIAL_PAGE_BY_NUMBER\";\r\nexport const CHANGE_TUTORIAL_PAGE_AMOUNT: string = \"CHANGE_TUTORIAL_PAGE_AMOUNT\";\r\nexport const CHANGE_TUTORIAL_PAGE_PENDING_EDIT: string = \"CHANGE_TUTORIAL_PAGE_PENDING_EDIT\";\r\nexport const CLEAR_TUTORIAL_PAGE_PENDING_EDIT: string = \"CLEAR_TUTORIAL_PAGE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_TUTORIAL_PAGE_ALL: string = \"REMOVE_TUTORIAL_PAGE_ALL\";\r\nexport const INITIAL_TUTORIAL_PAGE: string = \"INITIAL_TUTORIAL_PAGE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(tutorial_page: ITutorialPage) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        tutorial_page\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialTutorialPage(tutorial_page: ITutorialPage): IInitialTutorialPageActionType {\r\n    return { type: INITIAL_TUTORIAL_PAGE, tutorial_page: tutorial_page };\r\n}\r\n\r\nexport function removeTutorialPageAll(): IRemoveTutorialPageAllActionType {\r\n    return { type: REMOVE_TUTORIAL_PAGE_ALL };\r\n}\r\n\r\nexport function addTutorialPage(tutorial_page: ITutorialPage): IAddTutorialPageActionType {\r\n    return { type: ADD_TUTORIAL_PAGE, tutorial_page: tutorial_page };\r\n}\r\n\r\nexport function editTutorialPage(tutorial_page: ITutorialPage): IEditTutorialPageActionType {\r\n    return { type: EDIT_TUTORIAL_PAGE, tutorial_page: tutorial_page };\r\n}\r\n\r\nexport function removeTutorialPage(id: string): IRemoveTutorialPageActionType {\r\n    return { type: REMOVE_TUTORIAL_PAGE, id: id };\r\n}\r\n\r\nexport function removeTutorialPageByNumber(number: number): IRemoveTutorialPageByNumberActionType {\r\n    return { type: REMOVE_TUTORIAL_PAGE_BY_NUMBER, number: number };\r\n}\r\n\r\nexport function changeSelectedTutorialPage(tutorial_page: ITutorialPage): IChangeSelectedTutorialPageActionType {\r\n    return { type: CHANGE_TUTORIAL_PAGE_PENDING_EDIT, tutorial_page: tutorial_page };\r\n}\r\n\r\nexport function clearSelectedTutorialPage(): IClearSelectedTutorialPageActionType {\r\n    return { type: CLEAR_TUTORIAL_PAGE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateTutorialPage(value: TutorialPageModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddTutorialPageActionType { type: string, tutorial_page: ITutorialPage };\r\ninterface IEditTutorialPageActionType { type: string, tutorial_page: ITutorialPage };\r\ninterface IRemoveTutorialPageActionType { type: string, id: string };\r\ninterface IChangeSelectedTutorialPageActionType { type: string, tutorial_page: ITutorialPage };\r\ninterface IClearSelectedTutorialPageActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  TutorialPageModificationStatus};\r\ninterface IRemoveTutorialPageAllActionType { type: string }\r\ninterface IRemoveTutorialPageByNumberActionType { type: string, number: number }\r\ninterface IInitialTutorialPageActionType {type: string, tutorial_page: ITutorialPage}","import { fetchDataSuccess, fetchDataError, removeTutorialPageAll, initialTutorialPage, addTutorialPage } from \"../../../store/actions/tutorial_page.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface TutorialPage {\r\n    id: string;\r\n    tutorial_id: string;\r\n    name: string;\r\n    description: string;\r\n    number: number;\r\n}\r\nexport function getTutorialPageBySection(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/tutorial-page/section/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTutorialPageBySection(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeTutorialPageAll())\r\n                console.log(data.body.TutorialPage)\r\n                data.body.TutorialPage.map((ele: any, index: any) => {\r\n                    var tutorial_page: TutorialPage = {\r\n                        id: ele.id,\r\n                        tutorial_id: ele.tutorial_id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        number: ele.number\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialTutorialPage(tutorial_page));\r\n                    }\r\n                    else{\r\n                        return dispatch(addTutorialPage(tutorial_page))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { ITutorial, TutorialModificationStatus } from \"../models/tutorial.interface\";\r\n\r\n// register_successfull_tutorials\r\nexport const ADD_TUTORIAL: string = \"ADD_TUTORIAL\";\r\nexport const EDIT_TUTORIAL: string = \"EDIT_TUTORIAL\";\r\nexport const REMOVE_TUTORIAL: string = \"REMOVE_TUTORIAL\";\r\nexport const CHANGE_TUTORIAL_AMOUNT: string = \"CHANGE_TUTORIAL_AMOUNT\";\r\nexport const CHANGE_TUTORIAL_PENDING_EDIT: string = \"CHANGE_TUTORIAL_PENDING_EDIT\";\r\nexport const CLEAR_TUTORIAL_PENDING_EDIT: string = \"CLEAR_TUTORIAL_PENDING_EDIT\";\r\nexport const REMOVE_TUTORIAL_ALL: string = \"REMOVE_TUTORIAL_ALL\";\r\nexport const INITIAL_TUTORIAL: string = \"INITIAL_TUTORIAL\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(tutorial: ITutorial) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        tutorial\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialTutorial(tutorial: ITutorial): IInitialTutorialActionType {\r\n    return { type: INITIAL_TUTORIAL, tutorial: tutorial };\r\n}\r\n\r\nexport function removeTutorialAll(): IRemoveTutorialAllActionType {\r\n    return { type: REMOVE_TUTORIAL_ALL };\r\n}\r\n\r\nexport function addTutorial(tutorial: ITutorial): IAddTutorialActionType {\r\n    return { type: ADD_TUTORIAL, tutorial: tutorial };\r\n}\r\n\r\nexport function editTutorial(tutorial: ITutorial): IEditTutorialActionType {\r\n    return { type: EDIT_TUTORIAL, tutorial: tutorial };\r\n}\r\n\r\nexport function removeTutorial(id: string): IRemoveTutorialActionType {\r\n    return { type: REMOVE_TUTORIAL, id: id };\r\n}\r\n\r\nexport function changeSelectedTutorial(tutorial: ITutorial): IChangeSelectedTutorialActionType {\r\n    return { type: CHANGE_TUTORIAL_PENDING_EDIT, tutorial: tutorial };\r\n}\r\n\r\nexport function clearSelectedTutorial(): IClearSelectedTutorialActionType {\r\n    return { type: CLEAR_TUTORIAL_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function setModificationState(value: TutorialModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n// register_successfull_tutorials\r\ninterface IAddTutorialActionType { type: string, tutorial: ITutorial };\r\ninterface IEditTutorialActionType { type: string, tutorial: ITutorial };\r\ninterface IRemoveTutorialActionType { type: string, id: string };\r\ninterface IChangeSelectedTutorialActionType { type: string, tutorial: ITutorial };\r\ninterface IClearSelectedTutorialActionType { type: string };\r\ninterface IRemoveTutorialAllActionType { type: string }\r\ninterface IInitialTutorialActionType {type: string, tutorial: ITutorial}\r\ninterface ISetModificationStateActionType { type: string, value:  TutorialModificationStatus};","import { fetchDataSuccess, fetchDataError, removeTutorialAll, addTutorial } from \"../../../store/actions/tutorial.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface Tutorial {\r\n    id: string;\r\n    section_id: string;\r\n    creator_id: string;\r\n    creator_name: string;\r\n    class_name: string;\r\n    class_id: string;\r\n    section_number: number;\r\n    name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getTutorialBySection(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/tutorial/section/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTutorialBySection(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (ele => {\r\n                dispatch(fetchDataSuccess(ele))\r\n                dispatch(removeTutorialAll())\r\n                //console.log(data.body.lessons)\r\n                var tutorial: Tutorial = {\r\n                    id: ele.id,\r\n                    section_id: ele.section_id,\r\n                    name: ele.name,\r\n                    creator_id: ele.creator_id,\r\n                    creator_name: ele.creator_name,\r\n                    class_id: ele.class_id,\r\n                    class_name: ele.class_name,\r\n                    section_number: ele.section_number,\r\n                    create_time: ele.create_time,\r\n                    update_time: ele.update_time\r\n                }\r\n                return dispatch(addTutorial(tutorial))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { getExerciseBySection } from \"../../common/service/Exercise/GetExerciseBySection\";\r\nimport { getExerciseLevel } from \"../../common/service/ExerciseLevel/GetExerciseLevel\";\r\nimport { getSectionById } from \"../../common/service/Section/GetSectionById\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { setModificationState } from \"../../store/actions/exercise.action\";\r\nimport { ExerciseModificationStatus } from \"../../store/models/exercise.interface\";\r\nimport { IClassTeacherState, IExerciseState, ISectionState, IStateType, ITutorialPageState, ITutorialState, IUserState } from \"../../store/models/root.interface\";\r\nimport ExerciseForm from \"../Exercise/ExerciseForm\";\r\nimport \"./SectionTeacher.css\"\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getClassTeacher } from \"../../common/service/ClassTeacher/GetClassTeacher\";\r\nimport { getTutorialPageBySection } from \"../../common/service/TutorialPage/GetTutorialPageBySection\";\r\nimport { getTutorialBySection } from \"../../common/service/Tutorial/GetTutorialBySection\";\r\n\r\nconst SectionTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const sections: ISectionState = useSelector((state: IStateType) => state.sections);\r\n    const exercises: IExerciseState = useSelector((state: IStateType) => state.exercises);\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const tutorial_pages: ITutorialPageState | null = useSelector((state: IStateType) => state.tutorial_pages);\r\n    const tutorials: ITutorialState | null = useSelector((state: IStateType) => state.tutorials);\r\n    const class_teachers: IClassTeacherState = useSelector((state: IStateType) => state.class_teachers);\r\n    console.log(users.teachers)\r\n\r\n    const [popup, setPopup] = useState(false);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    function onExerciseRemove() {\r\n        setPopup(true);\r\n    }\r\n\r\n    function onRemovePopup(value: boolean) {\r\n        setPopup(false);\r\n    }\r\n\r\n    var id_y = localStorage.getItem('section_id');\r\n\r\n    let section_id = \"\";\r\n\r\n    if (id_y !== null) {\r\n        section_id = id_y;\r\n    }\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n\r\n    var id_z = localStorage.getItem('class_id');\r\n    var class_id: string= \"\";\r\n    if (id_z !== null) {\r\n        class_id = id_z;\r\n    }\r\n\r\n    let link_jisti = \"\";\r\n    if (class_teachers.class_doing.length > 0) {\r\n        class_teachers.class_doing.map((ele, idx) => {\r\n            if (ele.id === class_id) {\r\n                link_jisti = ele.link_url;\r\n            }\r\n            return ele\r\n        })\r\n    }\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getClassTeacher(dispatch, id))\r\n                    trackPromise(getSectionById(dispatch, section_id))\r\n                    trackPromise(getExerciseBySection(dispatch, section_id))\r\n                    trackPromise(getExerciseLevel(dispatch))\r\n                    trackPromise(getTutorialPageBySection(dispatch, section_id))\r\n                    trackPromise(getTutorialBySection(dispatch, section_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getClassTeacher(dispatch, id))\r\n                trackPromise(getSectionById(dispatch, section_id))\r\n                trackPromise(getExerciseBySection(dispatch, section_id))\r\n                trackPromise(getExerciseLevel(dispatch))\r\n                trackPromise(getTutorialPageBySection(dispatch, section_id))\r\n                trackPromise(getTutorialBySection(dispatch, section_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, section_id, id]);\r\n\r\n    const history = useHistory();\r\n    const routeChange2 = () => {\r\n        let path = \"/section/view\";\r\n        history.push({\r\n            pathname: path,\r\n            state: { section_id: section_id }\r\n        });\r\n    }\r\n\r\n    const routeChange4 = () => {\r\n        if (link_jisti !== null) {\r\n            window.open(link_jisti, '_blank');\r\n        }\r\n    }\r\n\r\n    const routeChange5 = () => {\r\n        let path = \"/attendance\";\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    const onChangeRoute1 = () => {\r\n        localStorage.removeItem('description_tutorial_page_list')\r\n        localStorage.setItem('description_tutorial_page_list', JSON.stringify(tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number)))\r\n        let path = \"/section/edit\";\r\n        if (tutorials !== null && tutorials.tutorials.length > 0) {\r\n            localStorage.setItem('tutorial_name', tutorials.tutorials[0].name);\r\n            localStorage.setItem('tutorial_id', tutorials.tutorials[0].id.toString())\r\n        }\r\n        history.push({\r\n            pathname: path,\r\n            state: { section_id: section_id }\r\n        })\r\n    }\r\n\r\n    const routeChange3 = (description: string, name: string, level_name: string, id: string) => {\r\n        let path = '/exercise';\r\n        localStorage.removeItem('exercise_description');\r\n        localStorage.removeItem('exercise_name');\r\n        localStorage.removeItem('exercise_level_name');\r\n        localStorage.removeItem('exercise_id');\r\n        localStorage.setItem('exercise_description', description);\r\n        localStorage.setItem('exercise_name', name);\r\n        localStorage.setItem('exercise_level_name', level_name);\r\n        localStorage.setItem('exercise_id', id.toString());\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                <ToastContainer />\r\n                <div className=\"row mb-2\">\r\n                    <div className=\"col-xl-6 col-md-6 col-xs-6 md-4 \">\r\n                        <button\r\n                            className=\"btn btn-success ml-3\"\r\n                            id=\"btn-edit-tutorial\"\r\n                            onClick={onChangeRoute1}\r\n                        >\r\n                            <i className=\"fas fa-edit\"></i>\r\n                            Chỉnh giáo án\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"col-xl-6 col-md-6 col-xs-6 md-4\">\r\n                        <button\r\n                            className=\"btn btn-success ml-3\"\r\n                            id=\"btn-add-exercise\"\r\n                            onClick={() => {\r\n                                dispatch(setModificationState(ExerciseModificationStatus.Create))\r\n                                onExerciseRemove()\r\n                            }}\r\n                        >\r\n                            <i className=\"fas fa fa-plus\"></i>\r\n                            Thêm bài tập\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <Popup\r\n                    open={popup}\r\n                    onClose={() => setPopup(false)}\r\n                    closeOnDocumentClick\r\n                >\r\n                    <>\r\n                        {\r\n                            function () {\r\n                                if ((exercises.modificationState === ExerciseModificationStatus.Create) || (exercises.modificationState === ExerciseModificationStatus.Edit)) {\r\n                                    return <ExerciseForm isCheck={onRemovePopup} />\r\n                                }\r\n                            }()\r\n                        }\r\n                    </>\r\n                </Popup>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                    <div className={`card shadow h-100 py-2`} id=\"normal-tutorial\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"row no-gutters justify-content-left\">\r\n                                                <h4 id=\"full-name\">Giáo án chung</h4>\r\n                                            </div>\r\n                                            <div className=\"row no-gutters\">\r\n                                                <p id=\"phone\">Tên: {\r\n                                                    function () {\r\n                                                        if (sections.sections.length <= 0) {\r\n                                                            return \"\"\r\n                                                        }\r\n                                                        else {\r\n                                                            return sections.sections[0].name;\r\n                                                        }\r\n                                                    }()\r\n                                                }</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"row no-gutters\">\r\n                                                <p id=\"phone\">Nội dung: </p>\r\n                                            </div>\r\n\r\n                                            <div className=\"row  justify-content-center\">\r\n                                                <button\r\n                                                    className=\"btn btn-success ml-2\"\r\n                                                    id=\"btn-view-tutorial\"\r\n                                                    onClick={routeChange2}\r\n                                                >\r\n                                                    Xem nội dung\r\n                                                </button>\r\n                                            </div>\r\n\r\n                                            <div className=\"row no-gutters\">\r\n                                                <p id=\"phone\">Hình thức:\r\n                                                    {\r\n                                                        function () {\r\n                                                            if (sections.sections.length <= 0) {\r\n                                                                return \"\"\r\n                                                            }\r\n                                                            else {\r\n                                                                if (sections.sections[0].teach_form === true) {\r\n                                                                    return \"Dạy bằng jitsi\";\r\n                                                                }\r\n                                                                else {\r\n                                                                    return \"Dạy bằng giáo trình\";\r\n                                                                }\r\n                                                            }\r\n                                                        }()\r\n                                                    }\r\n                                                </p>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-xl-6 col-md-6 col-xs-6\">\r\n                                                    {\r\n                                                        function () {\r\n                                                            if (sections.sections.length <= 0) {\r\n                                                                return \"\"\r\n                                                            }\r\n                                                            else {\r\n                                                                if (sections.sections[0].teach_form === true) {\r\n                                                                    return (\r\n                                                                        <button\r\n                                                                            className=\"btn btn-success ml-2\"\r\n                                                                            id=\"btn-into-room\"\r\n                                                                            onClick={routeChange4}\r\n                                                                        >\r\n                                                                            Vào metting room\r\n                                                                        </button>\r\n                                                                    )\r\n                                                                }\r\n                                                            }\r\n                                                        }()\r\n                                                    }\r\n                                                </div>\r\n                                                <div className=\"col-xl-6 col-md-6 col-xs-6\">\r\n                                                    {\r\n                                                        function () {\r\n                                                            if (sections.sections.length <= 0) {\r\n                                                                return \"\"\r\n                                                            }\r\n                                                            else {\r\n                                                                if (sections.sections[0].teach_form === true) {\r\n                                                                    return (\r\n                                                                        <button\r\n                                                                            className=\"btn btn-success ml-2\"\r\n                                                                            id=\"btn-into-attendance\"\r\n                                                                            onClick={routeChange5}\r\n                                                                        >\r\n                                                                            Điểm danh\r\n                                                                        </button>\r\n                                                                    )\r\n                                                                }\r\n                                                            }\r\n                                                        }()\r\n                                                    }\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                    <div className={`card shadow h-100 py-2`} >\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"row no-gutters justify-content-left\">\r\n                                                <h4 id=\"full-name\">Bài tập</h4>\r\n                                                <div className=\"table-responsive portlet\">\r\n                                                    <table className=\"table\">\r\n                                                        <thead className=\"thead-light\">\r\n                                                            <tr>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {\r\n                                                                exercises.exercises.map((ele, index) => {\r\n                                                                    return (\r\n                                                                        <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                            <div className=\"row row-section mb-4 ml-2 mr-2\" onClick={() => { routeChange3(ele.description, ele.name, ele.level_name, ele.id) }}>\r\n                                                                                <div className=\"col-xl-4 col-md-4 mb-4\">\r\n                                                                                    <img className=\"card-img\" src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1661088297/teacher_hfstak.png\" alt=\"\" />\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-8 col-md-8 mb-4\">\r\n                                                                                    <h3 className=\" mb-2\" id=\"level-teacher\">{ele.name}</h3>\r\n                                                                                    <h4 className=\" mb-2\" id=\"level-teacher\">Phần trăm đánh giá: {ele.level_name}</h4>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </tr>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default SectionTeacher;\r\n","import { fetchDataRequest, fetchDataSuccess, fetchDataError, removeTutorialPageAll, initialTutorialPage, addTutorialPage } from \"../../../store/actions/tutorial_page.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface TutorialPage {\r\n    id: string;\r\n    tutorial_id: string;\r\n    name: string;\r\n    description: string;\r\n    number: number;\r\n}\r\nexport function getTutorialPageByTutorialId(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/tutorial-page/tutorial/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTutorialPageByTutorialId(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeTutorialPageAll())\r\n                //console.log(data.body.lessons)\r\n                data.body.TutorialPage.map((ele: any, index: any) => {\r\n                    var tutorial_page: TutorialPage = {\r\n                        id: ele.id,\r\n                        tutorial_id: ele.tutorial_id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        number: ele.number\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialTutorialPage(tutorial_page));\r\n                    }\r\n                    else{\r\n                        return dispatch(addTutorialPage(tutorial_page))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/tutorial.action\";\r\nimport { ITutorialPage } from \"../../../store/models/tutorial_page.interface\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postUserRegisterTutorialPage } from \"../UserRegisterTutorialPage/PostUserRegisterTutorialPage\";\r\nimport { postUserRegisterTutorialPageToast } from \"../UserRegisterTutorialPage/PostUserRegisterTutorialPageToast\";\r\n\r\n\r\nexport function postUserRegisterTutorial(tutorial: ITutorialPage[], data: any, idx: any, routeHome: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-tutorial`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postUserRegisterTutorial(tutorial, data, idx, routeHome))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                var total = tutorial.length;\r\n                console.log(total)\r\n                tutorial.map((value, index) => {\r\n                    if (index === total - 1){\r\n                        routeHome()\r\n                        return dispatch(postUserRegisterTutorialPageToast({\r\n                            user_register_tutorial_id: data.id,\r\n                            name: data.name,\r\n                            description: value.description,\r\n                            number: value.number\r\n                        }, idx))\r\n                    }\r\n                    return dispatch(postUserRegisterTutorialPage({\r\n                        user_register_tutorial_id: data.id,\r\n                        name: data.name,\r\n                        description: value.description,\r\n                        number: value.number\r\n                    }))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Yêu cầu chỉnh giáo án được gửi không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postUserRegisterTutorialPageToast(tutorialtemplatepage: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-tutorial-page`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(tutorialtemplatepage)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postUserRegisterTutorialPageToast(tutorialtemplatepage, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Yêu cầu chỉnh giáo án được gửi không thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postUserRegisterTutorialPage(tutorialtemplatepage: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-tutorial-page`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(tutorialtemplatepage)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        return dispatch(postUserRegisterTutorialPage(tutorialtemplatepage))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch, Fragment, useEffect } from \"react\";\r\nimport { IStateType, ISectionState, ITutorialPageState, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ISection } from \"../../store/models/section.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport Editor from \"../../common/components/Quill/EditorEditSection\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { getTutorialPageByTutorialId } from \"../../common/service/TutorialPage/GetTutorialPageByTutorialId\";\r\nimport { postUserRegisterTutorial } from \"../../common/service/UserRegisterTutorial/PostUserRegisterTutorial\";\r\nimport { addTutorialPage, editTutorialPage, removeTutorialPage } from \"../../store/actions/tutorial_page.action\";\r\n\r\n\r\nexport type SectionListProps = {\r\n    children?: React.ReactNode;\r\n};\r\n\r\ntype Options = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\ntype PageContent = {\r\n    page: number;\r\n    content: string;\r\n}\r\n\r\ntype TutorialPage = {\r\n    id: string;\r\n    tutorial_id: string;\r\n    name: string;\r\n    number: number;\r\n    description: string;\r\n}\r\n\r\nfunction EditSectionTeacher(props: SectionListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const sections: ISectionState | null = useSelector((state: IStateType) => state.sections);\r\n    const tutorial_pages: ITutorialPageState | null = useSelector((state: IStateType) => state.tutorial_pages);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    console.log(tutorial_pages.tutorialPages)\r\n    let section: ISection | null = sections.selectedSection;\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    var id_x = localStorage.getItem('section_id');\r\n    let section_id: string = \"\";\r\n    if (id_x !== null) {\r\n        section_id = id_x\r\n    }\r\n\r\n    var id_y = localStorage.getItem('section_number');\r\n    let section_number: number = 0;\r\n    if (id_y !== null) {\r\n        section_number = parseInt(id_y)\r\n    }\r\n\r\n    var id_z = localStorage.getItem('description_tutorial_page_list');\r\n    let list_description: TutorialPage[] = []\r\n    let initial_text = \"\"\r\n    if (id_z !== null) {\r\n        list_description = JSON.parse(id_z);\r\n        initial_text = list_description.length !== 0 ? list_description[0].description: \"\";\r\n    }\r\n\r\n\r\n    var id_t = localStorage.getItem('tutorial_id');\r\n    let tutorial_id: string = \"\";\r\n    if (id_t !== null) {\r\n        tutorial_id = id_t\r\n    }\r\n\r\n    var id_h = localStorage.getItem('tutorial_name');\r\n    let tutorial_name: string = \"\";\r\n    if (id_h !== null) {\r\n        tutorial_name = id_h\r\n    }\r\n\r\n    var id_k = localStorage.getItem('id');\r\n    let id: string = \"\";\r\n    if (id_k !== null) {\r\n        id = id_k\r\n    }\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    dispatch(getTutorialPageByTutorialId(tutorial_id))      \r\n                }\r\n            }\r\n            else {\r\n                dispatch(getTutorialPageByTutorialId(tutorial_id)) \r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, tutorial_id])\r\n\r\n    const history = useHistory();\r\n    function routeHome() {\r\n        let path = `/classes/section`;\r\n        history.push(path);\r\n    }\r\n\r\n    let [textHtml, setTextHtml] = useState(initial_text);\r\n\r\n    if (!section) {\r\n        section = { id: \"\", name: \"\", number: 0,  class_id: \"\", teach_form: false, recording: \"\", message: \"\", teacher_name: \"\" };\r\n    }\r\n\r\n    console.log(tutorial_pages.tutorialPages)\r\n    if (tutorial_pages.tutorialPages.length === 0) {\r\n        section = { id: \"\", name: \"\", number: 0,  class_id: \"\", teach_form: false, recording: \"\", message: \"\", teacher_name: \"\" };\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khóa học chung\", \"Soạn giáo án\"));\r\n    }, [path.area, dispatch]);\r\n\r\n\r\n    const [formState, setFormState] = useState({\r\n        name: { error: \"\", value: tutorial_name},\r\n        number: { error: \"\", value: section.number },\r\n        teach_form: { error: \"\", value: section.teach_form },\r\n        class_id: { error: \"\", value: section.class_id },\r\n        recording: { error: \"\", value: section.recording },\r\n        message: { error: \"\", value: section.message }\r\n    });\r\n\r\n    const [totalPage, setTotalPage] = useState(list_description.length);\r\n    const [currentPage, setCurrentPage] = useState<number>(1)\r\n    const [currentPageOld, setCurrentPageOld] = useState<number>(1)\r\n\r\n    const [checkCreateNew, setCheckCreateNew] = useState(false);\r\n    const [checkAfterCreate, setCheckAfterCreate] = useState(false);\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    //console.log(totalPage)\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();     \r\n    }\r\n\r\n    function saveForm(): void {\r\n        if (section) {\r\n            if (checkCreateNew === true || (currentPage === totalPage && checkAfterCreate === false)) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n\r\n            else {\r\n                const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                    position: toast.POSITION.TOP_CENTER\r\n                });\r\n                /* let contentPage: PageContent = {\r\n                    page: currentPage,\r\n                    content: value\r\n                }*/\r\n    \r\n                if (tutorial_pages !== null) {\r\n                    if (tutorial_pages.tutorialPages.length > 0) {\r\n                        dispatch(postUserRegisterTutorial(tutorial_pages.tutorialPages, {\r\n                            section_id: section_id,\r\n                            creator_id: id,\r\n                            name: formState.name.value,\r\n                            status: \"Not approved now\"\r\n                        }, idx, routeHome)) \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function handleNextPage() {  \r\n        if (tutorial_pages !== null) {\r\n            if (checkCreateNew === true || (currentPage === totalPage && checkAfterCreate === false)) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n            else {\r\n                if (checkAfterCreate === true) {\r\n                    let x = currentPage + 1;\r\n                    setCurrentPageOld(x-1)\r\n                    setCurrentPage(x)\r\n                    console.log(tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number))\r\n                    setTextHtml(tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number)[x-1] !== undefined ? tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number)[x-1].description : \"\")\r\n                    setChecked(false)\r\n                    setValue(\"\")\r\n                    setCheckAfterCreate(false);\r\n                }\r\n                else {\r\n                    let x = currentPage + 1;\r\n                    setCurrentPage(x)\r\n                    console.log(tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number))\r\n                    setTextHtml(tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number)[x-1] !== undefined ? tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number)[x-1].description : \"\")\r\n                    setChecked(false)\r\n                    setValue(\"\")\r\n                }\r\n            }\r\n        }     \r\n    }\r\n\r\n    function handleBackPage () {\r\n        if (tutorial_pages !== null) {\r\n            if (checkCreateNew === true  && currentPage === totalPage && checkAfterCreate === false) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n            else if (checkCreateNew === true  && currentPage !== totalPage) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n            else {\r\n                let x = currentPage - 1;\r\n                setCurrentPageOld(x-1)\r\n                setCurrentPage(x)\r\n                console.log(tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number))\r\n                setTextHtml(tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number)[x-1].description)\r\n                setChecked(false)\r\n                setValue(\"\")\r\n            }\r\n        }     \r\n    }\r\n\r\n\r\n    function handleRemove() {\r\n        if (tutorial_pages !== null){\r\n            if (checkCreateNew === true  && currentPage === totalPage && checkAfterCreate === false) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n            else if (checkCreateNew === true  && currentPage !== totalPage) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n            else {\r\n                const k = currentPage;\r\n                let x = totalPage - 1;\r\n                setTotalPage(x)\r\n\r\n                setCurrentPageOld(k-2)\r\n    \r\n                const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                    position: toast.POSITION.TOP_CENTER\r\n                });\r\n                if (k === tutorial_pages.tutorialPages.length) {\r\n                    let y = k - 1;\r\n                    setCurrentPage(y)\r\n                    dispatch(removeTutorialPage(tutorial_pages.tutorialPages[k-1].id))\r\n                    handleBackPage()\r\n                }\r\n                else {\r\n                    tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number).map((ele, idx) => {\r\n                        if (k -1 === ele.number) {\r\n                            dispatch(removeTutorialPage(ele.id));\r\n                        }\r\n                        else if (ele.number > k - 1 ) {\r\n                            dispatch(editTutorialPage({\r\n                                id: ele.id,\r\n                                description: ele.description,\r\n                                name: ele.name,\r\n                                tutorial_id: tutorial_id,\r\n                                number: ele.number - 1\r\n                            }))\r\n                        }\r\n                        return 2\r\n                    })\r\n                    handleBackPage()\r\n                }\r\n                toast.update(idx, { render: \"Xóa bước thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            }\r\n        }\r\n    }\r\n\r\n    console.log('CurrentPage', currentPage);\r\n    console.log('OldPage', currentPageOld)\r\n\r\n\r\n\r\n    function handleNewPage() {\r\n        if (checkCreateNew === true  && currentPage === totalPage && checkAfterCreate === false) {\r\n            toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 2000,\r\n            });\r\n        }\r\n        else if (checkCreateNew === true  && currentPage !== totalPage) {\r\n            toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 2000,\r\n            });\r\n        }\r\n        else {\r\n            let x = currentPage + 1;\r\n            setCurrentPageOld(x-1)\r\n            setCurrentPage(x)\r\n            setCheckCreateNew(true)\r\n            let y = totalPage + 1;\r\n            setTotalPage(y)\r\n            console.log(currentPage - 1)\r\n            setChecked(false)\r\n            setTextHtml(\"\")\r\n            setValue(\"\")\r\n        }\r\n    }\r\n\r\n    const [value, setValue] = useState(\"\")\r\n    console.log('value', value)\r\n\r\n    function getValue(value: any){\r\n        setValue(value);\r\n        setChecked(true)\r\n    }\r\n\r\n    function handleSave(){\r\n        if (tutorial_pages !== null){\r\n            const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            const k = currentPage;\r\n\r\n            if (checkCreateNew === true) {\r\n                if (k - 1 === tutorial_pages.tutorialPages.length) {\r\n                    console.log('yyy')\r\n                    dispatch(addTutorialPage({\r\n                        description: value,\r\n                        name: formState.name.value,\r\n                        tutorial_id: tutorial_id,\r\n                        number: tutorial_pages.tutorialPages.length,\r\n                        id: (tutorial_pages.tutorialPages.length + 1).toString()\r\n                    }))\r\n                }\r\n                else {\r\n                    console.log('xxx')\r\n                    tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number).map((ele, idx) => {\r\n                        if (ele.number === k -1) {\r\n                            console.log('1')\r\n                            dispatch(editTutorialPage({\r\n                                description: ele.description,\r\n                                name: ele.name,\r\n                                tutorial_id: tutorial_id,\r\n                                number: ele.number + 1,\r\n                                id: ele.id\r\n                            }))\r\n                            dispatch(addTutorialPage({\r\n                                description: value,\r\n                                name: formState.name.value,\r\n                                tutorial_id: tutorial_id,\r\n                                number: ele.number,\r\n                                id: (tutorial_pages.tutorialPages.length + 1).toString()\r\n                            }))\r\n                        }\r\n                        else if (ele.number > k - 1) {\r\n                            console.log('2')\r\n                            if (ele.number < tutorial_pages.tutorialPages.length - 1) {\r\n                                dispatch(editTutorialPage({\r\n                                    description: ele.description,\r\n                                    name: ele.name,\r\n                                    tutorial_id: tutorial_id,\r\n                                    number: ele.number + 1,\r\n                                    id: ele.id\r\n                                }))\r\n                            }\r\n                            else {\r\n                                dispatch(editTutorialPage({\r\n                                    description: ele.description,\r\n                                    name: ele.name,\r\n                                    tutorial_id: tutorial_id,\r\n                                    number: ele.number + 1,\r\n                                    id: ele.id\r\n                                }))\r\n                            }\r\n                        }\r\n                        return 1\r\n                    })\r\n\r\n                    /* dispatch(addTutorialPage({\r\n                        description: value,\r\n                        name: formState.name.value,\r\n                        tutorial_id: tutorial_id,\r\n                        number: k - 1,\r\n                        id: (tutorial_pages.tutorialPages.length + 1).toString()\r\n                    })) */\r\n                }\r\n                setCheckCreateNew(false)\r\n            }\r\n            else {\r\n                if (k < tutorial_pages.tutorialPages.length + 1) {\r\n                    dispatch(editTutorialPage({\r\n                        description: value,\r\n                        name: tutorial_name,\r\n                        tutorial_id: tutorial_id,\r\n                        number: k-1,\r\n                        id: tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number)[k-1].id\r\n                    }))\r\n                   console.log({\r\n                        description: value,\r\n                        name: tutorial_name,\r\n                        tutorial_id: tutorial_id,\r\n                        number: k-1\r\n                   })\r\n                }\r\n                else {\r\n                    dispatch(addTutorialPage({\r\n                        description: value,\r\n                        name: formState.name.value,\r\n                        tutorial_id: tutorial_id,\r\n                        number: tutorial_pages.tutorialPages.length,\r\n                        id: (tutorial_pages.tutorialPages.length + 1).toString()\r\n                    }))\r\n    \r\n                    console.log({\r\n                        description: value,\r\n                        name: tutorial_name,\r\n                        tutorial_id: tutorial_id,\r\n                        number: tutorial_pages.tutorialPages.length\r\n                   })\r\n                }\r\n            }\r\n            console.log(tutorial_pages.tutorialPages)\r\n            setCheckAfterCreate(true)\r\n\r\n            toast.update(idx, { render: \"Điều chỉnh thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"col-xl-12 col-lg-12\">\r\n                <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\">Buổi {section_number}</h6>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={saveUser}>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <TextInput id=\"input_name\"\r\n                                        value={formState.name.value}\r\n                                        field=\"name\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={2000}\r\n                                        label=\"Tên giáo trình\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Nội dung bước {currentPage} / {totalPage}</label>\r\n                                <Editor getValue={getValue} isCreate={checked} setValue={textHtml} />\r\n                            </div>\r\n                            {\r\n                                function () {\r\n                                    if (currentPage < totalPage) {\r\n                                        if (currentPage === 1) {\r\n                                            return (\r\n                                                <div className=\"row\">\r\n                                                <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                                                    <button type=\"button\" className=\"btn btn-info right-margin\" onClick={handleSave}>Lưu tạm</button>\r\n                                                    <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleNextPage}>Bước tiếp theo</button>\r\n                                                </div>\r\n                                                <div className=\"col-xl-8 col-md-8 col-xs-8\">\r\n                                                    <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNewPage}>Thêm bước</button>\r\n                                                </div>\r\n                                            </div>\r\n                                            )\r\n                                        }\r\n                                        else {\r\n                                            return (\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                                                        <button type=\"button\" className=\"btn btn-info right-margin\" onClick={handleBackPage}>Trở về</button>\r\n                                                        <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleSave}>Lưu tạm</button>\r\n                                                        <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleNextPage}>Bước tiếp theo</button>\r\n                                                    </div>\r\n                                                    <div className=\"col-xl-8 col-md-8 col-xs-8\">\r\n                                                        <button type=\"button\" className=\"btn btn-error right-margin add-step btn-remove ml-2\" onClick={handleRemove}>Xóa bước</button>\r\n                                                        <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNewPage}>Thêm bước</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    }\r\n                                }()\r\n                            }\r\n                            {\r\n                                function () {\r\n                                    if (currentPage === totalPage) {\r\n                                        return (\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-xl-6 col-md-6 col-xs-6\">\r\n                                                    <button type=\"button\" className=\"btn btn-info right-margin\" onClick={handleSave}>Lưu tạm</button>\r\n                                                    <button type=\"button\" className={`btn btn-primary left-margin ml-2 step-continue`} onClick={saveForm}>Hoàn thành</button>\r\n                                                </div>\r\n                                                <div className=\"col-xl-6 col-md-6 col-xs-6\">\r\n                                                    <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNewPage}>Thêm bước</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                }()\r\n                            }\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default EditSectionTeacher;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getTutorialPageBySection } from \"../../common/service/TutorialPage/GetTutorialPageBySection\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IStateType, ITutorialPageState } from \"../../store/models/root.interface\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst ViewSectionTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const TutorialPages: ITutorialPageState = useSelector((state: IStateType) => state.tutorial_pages);\r\n\r\n    var id_y = localStorage.getItem('section_id');\r\n    \r\n    let section_id = \"\";\r\n\r\n    if (id_y !== null) {\r\n        section_id = id_y;\r\n    }\r\n\r\n    const [count, setCount] = useState(1);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    function setChangeCount() {\r\n        let x = count;\r\n        let y = x + 1;\r\n        if (x < TutorialPages.tutorialPages.length){\r\n            console.log(\"Count\")\r\n            setCount(y);\r\n        }\r\n        console.log(count)\r\n    }\r\n\r\n    function setChangeCountBack() {\r\n        let x = count;\r\n        let y = x - 1;\r\n        if (x > 1){\r\n            setCount(y);\r\n        }\r\n    }\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getTutorialPageBySection(dispatch, section_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getTutorialPageBySection(dispatch, section_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, section_id]);\r\n    \r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> :  <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`}>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters justify-content-left\">\r\n                                            <h4 id=\"full-name\">{TutorialPages.tutorialPages.length !== 0 ? TutorialPages.tutorialPages[0].name : \"\"}</h4>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            {\r\n                                                function () {\r\n                                                    if (TutorialPages.tutorialPages.length < 1) {\r\n                                                        return \"\"\r\n                                                    }\r\n                                                    else {\r\n                                                        return <div className=\"card-body\" dangerouslySetInnerHTML={{ __html: TutorialPages.tutorialPages.sort((a, b) => a.number - b.number)[count-1].description }}>\r\n                                                        </div>\r\n                                                    }\r\n                                                }()\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"row no-gutters justify-content-right\">\r\n                                            {\r\n                                                function () {\r\n                                                    if (count < TutorialPages.tutorialPages.length) {\r\n                                                        if (count === 1){\r\n                                                            return (\r\n                                                                <button className={`btn btn-success left-margin`} onClick={() => {setChangeCount()}}>Trang tiếp</button>\r\n                                                            )\r\n                                                        }\r\n                                                        else if (count > 1){\r\n                                                            return (\r\n                                                                <> \r\n                                                                    <button className={`btn btn-warning left-margin`} onClick={() => {setChangeCountBack()}}>Trở về</button>\r\n                                                                    <button className={`btn btn-success left-margin`} onClick={() => {setChangeCount()}}>Trang tiếp</button>\r\n                                                                </>\r\n                                                            )\r\n                                                        }\r\n                                                        \r\n                                                    }\r\n                                                    else {\r\n                                                        return (\r\n                                                            <button className={`btn btn-warning left-margin`} onClick={() => {setChangeCountBack()}}>Trở về</button>\r\n                                                        )\r\n                                                    }\r\n                                                }()\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewSectionTeacher;\r\n","import React, { Dispatch, Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IStudentLeaveState } from \"../../store/models/root.interface\";\r\nimport { ILesson } from \"../../store/models/lesson.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IStudentLeave } from \"../../store/models/student_leave.interface\";\r\nimport { toast } from \"react-toastify\";\r\nimport { putStudentLeaveStatus } from \"../../common/service/StudentLeave/PutStudentLeave\";\r\n\r\nexport type lessonListProps = {\r\n    onSelect?: (lesson: ILesson) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction StudentLeaveList(props: lessonListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const student_leaves: IStudentLeaveState = useSelector((state: IStateType) => state.student_leaves);\r\n\r\n\r\n    const history = useHistory();\r\n    const onChangeRoute = (student_leave: IStudentLeave) =>{ \r\n        localStorage.removeItem(\"detail_resson\")\r\n        localStorage.setItem('detail_resson', student_leave.description)\r\n        let path = '/student-leave/detail'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    const handleStudentLeave = (student_leave: IStudentLeave, status: string) => {\r\n        const id = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n        dispatch(putStudentLeaveStatus(student_leave.id, {\r\n            status: status\r\n        }, id))\r\n    }\r\n    \r\n    const lessonElements: (JSX.Element | null)[] = student_leaves.leaves.map((exercise, index) => {\r\n        //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n        if (!exercise) { return null; }\r\n        return (<tr className={`table-row `}\r\n            key={`lesson_${exercise.id}`} >\r\n            <th scope=\"row\" className=\"data-table\">{index + 1}</th>\r\n            <td className=\"data-table\">{exercise.class_name}</td>\r\n            <td className=\"data-table\">{exercise.section_name}</td>\r\n            <td className=\"data-table\">{exercise.student_name}</td>\r\n            <td className=\"data-table\">{exercise.section_number}</td>\r\n            <td>\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-primary\" \r\n                    onClick={() => {\r\n                        onChangeRoute(exercise)\r\n                    }}\r\n                >\r\n                    Chi tiết\r\n                </button>\r\n            </td>\r\n            <td>\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-success\" \r\n                    onClick={() => {\r\n                        handleStudentLeave(exercise, \"Approved\")\r\n                    }}\r\n                >\r\n                    Chấp nhận\r\n                </button>\r\n            </td>\r\n\r\n            <td>\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-danger\" \r\n                    onClick={() => {\r\n                        handleStudentLeave(exercise, \"Not approved\")\r\n                    }}\r\n                >\r\n                    Xóa\r\n                </button>\r\n            </td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"table-responsive portlet\">\r\n                <table className=\"table\">\r\n                    <thead id=\"table-thread-exercise-section\">\r\n                        <tr>\r\n                            <th scope=\"col\" className=\"name-row-table\">#</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Tên lớp</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Buổi</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Học sinh</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời gian nghỉ</th>\r\n                            <th scope=\"col\"></th>\r\n                            <th scope=\"col\"></th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {lessonElements}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default StudentLeaveList;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/student_leave.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nexport function putStudentLeaveStatus(id: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/student-leave/admin/${id}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putStudentLeaveStatus(id, data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                toast.update(idx, { render: \"Yêu cầu thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            });\r\n    };\r\n}","import React, { Dispatch, Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, ITeacherLeaveState } from \"../../store/models/root.interface\";\r\nimport { ILesson } from \"../../store/models/lesson.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ITeacherLeave } from \"../../store/models/teacher_leave.interface\";\r\nimport { putTeacherLeaveStatus } from \"../../common/service/TeacherLeave/PutTeacherLeave\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type lessonListProps = {\r\n    onSelect?: (lesson: ILesson) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\n\r\nfunction TeacherLeaveList(props: lessonListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const teacher_leaves: ITeacherLeaveState = useSelector((state: IStateType) => state.teacher_leaves);\r\n\r\n    const history = useHistory();\r\n    const onChangeRoute = (student_leave: ITeacherLeave) =>{ \r\n        localStorage.removeItem(\"detail_resson\")\r\n        localStorage.setItem('detail_resson', student_leave.description)\r\n        let path = '/student-leave/detail'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const updateStatusTeacherLeave = (status: string) => {\r\n        const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n\r\n        dispatch(putTeacherLeaveStatus(id, {\r\n            status: status\r\n        }, idx))\r\n    }\r\n    \r\n    const lessonElements: (JSX.Element | null)[] = teacher_leaves.leaves.map((exercise, index) => {\r\n        //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n        if (!exercise) { return null; }\r\n        return (<tr className={`table-row`}\r\n            key={`lesson_${exercise.id}`} >\r\n            <th scope=\"row\" className=\"data-table\">{index + 1}</th>\r\n            <td className=\"data-table\">{exercise.class_name}</td>\r\n            <td className=\"data-table\">{exercise.section_name}</td>\r\n            <td className=\"data-table\">{exercise.teacher_name}</td>\r\n            <td className=\"data-table\">{exercise.section_number}</td>\r\n            <td>\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-primary\" \r\n                    onClick={() => {\r\n                        onChangeRoute(exercise)\r\n                    }}\r\n                >\r\n                    Chi tiết\r\n                </button>\r\n            </td>\r\n\r\n            <td>\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-success\" \r\n                    onClick={() => {\r\n                        updateStatusTeacherLeave(\"Approved\")\r\n                    }}\r\n                >\r\n                    Chấp nhận\r\n                </button>\r\n            </td>\r\n\r\n            <td>\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-danger\" \r\n                    onClick={() => {\r\n                        updateStatusTeacherLeave(\"Not approved\")\r\n                    }}\r\n                >\r\n                    Hủy\r\n                </button>\r\n            </td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"table-responsive portlet\">\r\n                <table className=\"table\">\r\n                    <thead id=\"table-thread-exercise-section\">\r\n                        <tr>\r\n                            <th scope=\"col\" className=\"name-row-table\">#</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Tên lớp</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Buổi</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Giáo viên</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời gian dạy</th>\r\n                            <th scope=\"col\"></th>\r\n                            <th scope=\"col\"></th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {lessonElements}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default TeacherLeaveList;\r\n","import { fetchDataSuccess, fetchDataError, removeStudentLeaveApprovedAll, removeStudentLeaveNotApprovedAll, removeStudentLeaveNotApprovedNowAll, addStudentLeaveApproved, addStudentLeaveNotApproved, addStudentLeaveNotApprovedNow } from \"../../../store/actions/student_leave.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface StudentLeave {\r\n    id: string;\r\n    section_id: string;\r\n    section_name: string;\r\n    class_id: string;\r\n    class_name: string;\r\n    student_id: string;\r\n    student_name: string;\r\n    reviewer_id: string;\r\n    section_number: number;\r\n    description: string;\r\n    status: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getStudentLeaveByTeacher(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/student-leave/teacher/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getStudentLeaveByTeacher(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeStudentLeaveApprovedAll())\r\n                dispatch(removeStudentLeaveNotApprovedAll())\r\n                dispatch(removeStudentLeaveNotApprovedNowAll())\r\n                //console.log(data.body.student_leaves)\r\n                data.body.student_leave.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var student_leave: StudentLeave = {\r\n                        id: ele.id,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        class_id: ele.class_id,\r\n                        section_number: ele.section_number,\r\n                        class_name: ele.class_name,\r\n                        student_id: ele.student_id,\r\n                        reviewer_id: ele.reviewer_id,\r\n                        status: ele.status,\r\n                        student_name: ele.student_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (student_leave.status === \"Approved\"){\r\n                        return dispatch(addStudentLeaveApproved(student_leave));\r\n                    }\r\n                    else if (student_leave.status === \"Not approved\"){\r\n                        return dispatch(addStudentLeaveNotApproved(student_leave));\r\n                    }\r\n                    else {\r\n                        return dispatch(addStudentLeaveNotApprovedNow(student_leave));\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { IRootPageStateType, IStateType, IStudentLeaveState, ITeacherLeaveState } from \"../../store/models/root.interface\";\r\nimport \"./RequestTeacher.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport StudentLeaveList from \"./StudentLeaveList\";\r\nimport TeacherLeaveList from \"./TeacherLeaveList\";\r\nimport { getStudentLeaveByTeacher } from \"../../common/service/StudentLeave/GetStudentLeaveByTeacher\";\r\nimport { getTeacherLeaveByTeacher } from \"../../common/service/TeacherLeave/GetTeacherLeaveByTeacher\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst RequestTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const student_leaves: IStudentLeaveState = useSelector((state: IStateType) => state.student_leaves);\r\n    const teacher_leaves: ITeacherLeaveState = useSelector((state: IStateType) => state.teacher_leaves);\r\n    console.log(student_leaves)\r\n    console.log(teacher_leaves)\r\n    const { promiseInProgress } = usePromiseTracker();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberTeacherRegisterSuccessfullCount: number = student_leaves.leaves.length;\r\n    const numberTeacherNotRegisterCount: number = teacher_leaves.leaves.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getStudentLeaveByTeacher(dispatch, id))\r\n                    trackPromise(getTeacherLeaveByTeacher(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getStudentLeaveByTeacher(dispatch, id))\r\n                trackPromise(getTeacherLeaveByTeacher(dispatch, id))\r\n            }\r\n        }\r\n        \r\n    }, [dispatch, access_token, refresh_token, id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp theo kì\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n    \r\n    const [checked, setChecked] = useState(true);\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n            <ToastContainer />\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ YÊU CẦU NGHỈ HỌC\" text={`${numberTeacherRegisterSuccessfullCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"SỐ YÊU CẦU DẠY THAY\" text={`${numberTeacherNotRegisterCount}`} icon=\"book\" class=\"primary\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked === false) {\r\n                            setChecked(true)\r\n                        }\r\n                    }} style={{\r\n                        color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Học sinh yêu cầu nghỉ học</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked === true) {\r\n                            setChecked(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                        }}>Giáo viên yêu cầu dạy thay</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#ffffff\" : \"#F24E1E\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12\">\r\n                                    <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                        <div className=\"card-header py-3\">\r\n                                            <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách yêu cầu nghỉ học</h6>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <StudentLeaveList />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12\">\r\n                                    <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                        <div className=\"card-header py-3\">\r\n                                            <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách yêu cầu dạy thay</h6>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <TeacherLeaveList />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default RequestTeacher;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getExerciseSubmissionByExercise } from \"../../common/service/ExerciseSubmission/GetExerciseSubmissionByExeercise\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IExerciseSubmissionState, IStateType } from \"../../store/models/root.interface\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst ExamTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const exercise_submissions: IExerciseSubmissionState = useSelector((state: IStateType) => state.exercise_submissions);\r\n    const numberApprovedCount: number = exercise_submissions.exercise_not_gradeds.length;\r\n    const numberNotApprovedNowCount: number = exercise_submissions.exercise_gradeds.length;\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    var exercise_description = localStorage.getItem('exercise_description');\r\n    var exercise_description_: string = \"\";\r\n    if (exercise_description !== null) {\r\n        exercise_description_ = exercise_description;\r\n    }\r\n\r\n    var exercise_name = localStorage.getItem('exercise_name');\r\n    var exercise_name_: string = \"\";\r\n    if (exercise_name !== null) {\r\n        exercise_name_ = exercise_name;\r\n    }\r\n\r\n    var exercise_level_name = localStorage.getItem('exercise_level_name');\r\n    var exercise_level_name_: string = \"\";\r\n    if (exercise_level_name !== null) {\r\n        exercise_level_name_ = exercise_level_name;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('exercise_id');\r\n    let exercise_id = \"\";\r\n\r\n    if (id_y !== null) {\r\n        exercise_id = id_y;\r\n    }\r\n\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getExerciseSubmissionByExercise(dispatch, exercise_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getExerciseSubmissionByExercise(dispatch, exercise_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, exercise_id]);\r\n\r\n    \r\n\r\n    const history = useHistory();\r\n    const routeChange = () =>{ \r\n        let path = '/exercise/grade'; \r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    const routeChange1 = () => {\r\n        let path = '/exercise/result-grade';\r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n    \r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ BÀI ĐÃ CHẤM\" text={`${numberApprovedCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"CHƯA CHẤM\" text={`${numberNotApprovedNowCount}`} icon=\"book\" class=\"danger\" />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters justify-content-left\">\r\n                                            <h4 id=\"full-name\">Đề bài</h4>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <p id=\"phone\">{exercise_name_}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\" dangerouslySetInnerHTML={{ __html: exercise_description_ }}></div>\r\n                                        <div className=\"row\">\r\n                                            <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Phần trăm đánh giá:</span> <span className=\"header-card-course-value-teacher\">{exercise_level_name_}%</span></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>              \r\n            </div>\r\n\r\n            {\r\n                function () {\r\n                    if (numberNotApprovedNowCount === 0){\r\n                        return (\r\n                            <div className=\"row justify-content-center mb-4\">\r\n                                <button \r\n                                    className=\"btn btn-success btn-green\" \r\n                                    id=\"btn-into-class-student\"\r\n                                    onClick={() => {routeChange1()}}\r\n                                >\r\n                                    Xem điểm\r\n                                    <i className={`fas fa-arrow-right fa-1x`} id=\"icon-arrow-right\"></i>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div className=\"row justify-content-center mb-4\">\r\n                                <button \r\n                                    className=\"btn btn-success btn-green\" \r\n                                    id=\"btn-into-class-student\"\r\n                                    onClick={() => {routeChange()}}\r\n                                >\r\n                                    Chấm bài\r\n                                    <i className={`fas fa-arrow-right fa-1x`} id=\"icon-arrow-right\"></i>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ExamTeacher;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nconst StudentLeaveDetail: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    var id_y = localStorage.getItem('detail_resson');\r\n    var detail_resson: string = \"\";\r\n    if (id_y !== null) {\r\n        detail_resson = id_y;\r\n    }\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    \r\n                }\r\n            }\r\n            else {\r\n                \r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token]);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Yêu cầu nghỉ học\", \"Chi tiết\"));\r\n    }, [path.area, dispatch]);\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Lý do</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <p>\r\n                                {detail_resson}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default StudentLeaveDetail;\r\n","import React, { Fragment, Dispatch } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\n\r\nconst DetailTeacherRequest: React.FC = () => {\r\n\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    dispatch(updateCurrentPath(\"Bằng cấp\", \"\"));\r\n    var id_x = localStorage.getItem('resson_off_teacher')\r\n    let description = \"\";\r\n    if (id_x !== null) {\r\n        description = id_x\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Lý do xin nghỉ</h1>\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Nội dung</h6>\r\n                        </div>\r\n                        <div className=\"card-body\" dangerouslySetInnerHTML={{ __html: description }}>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default DetailTeacherRequest;\r\n","import { IUserRegisterTutorial, UserRegisterTutorialModificationStatus } from \"../models/user_register_tutorial.interface\";\r\n\r\n// register_successfull_user_register_tutorials\r\nexport const ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: string = \"ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW\";\r\nexport const EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: string = \"EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: string = \"REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_AMOUNT: string = \"CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_AMOUNT\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT: string = \"CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT\";\r\nexport const CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT: string = \"CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_ALL: string = \"REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_ALL\";\r\nexport const INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: string = \"INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW\";\r\n\r\n// not_register_user_register_tutorials\r\nexport const ADD_USER_REGISTER_TUTORIAL_APPROVED: string = \"ADD_USER_REGISTER_TUTORIAL_APPROVED\";\r\nexport const EDIT_USER_REGISTER_TUTORIAL_APPROVED: string = \"EDIT_USER_REGISTER_TUTORIAL_APPROVED\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_APPROVED: string = \"REMOVE_USER_REGISTER_TUTORIAL_APPROVED\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_APPROVED_AMOUNT: string = \"CHANGE_USER_REGISTER_TUTORIAL_APPROVED_AMOUNT\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_APPROVED_PENDING_EDIT: string = \"CHANGE_USER_REGISTER_TUTORIAL_APPROVED_PENDING_EDIT\";\r\nexport const CLEAR_USER_REGISTER_TUTORIAL_APPROVED_PENDING_EDIT: string = \"CLEAR_USER_REGISTER_TUTORIAL_APPROVED_PENDING_EDIT\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_APPROVED_ALL: string = \"REMOVE_USER_REGISTER_TUTORIAL_APPROVED_ALL\";\r\nexport const INITIAL_USER_REGISTER_TUTORIAL_APPROVED: string = \"INITIAL_USER_REGISTER_TUTORIAL_APPROVED\";\r\n\r\n\r\n// Approved to tutorial template\r\nexport const ADD_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: string = \"ADD_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE\";\r\nexport const EDIT_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: string = \"EDIT_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: string = \"REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_AMOUNT: string = \"CHANGE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_AMOUNT\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_PENDING_EDIT: string = \"CHANGE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_PENDING_EDIT\";\r\nexport const CLEAR_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_PENDING_EDIT: string = \"CLEAR_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_PENDING_EDIT\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_ALL: string = \"REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_ALL\";\r\nexport const INITIAL_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: string = \"INITIAL_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE\";\r\n\r\n\r\n// not_register_user_register_tutorials\r\nexport const ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED: string = \"ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED\";\r\nexport const EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED: string = \"EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED: string = \"REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_AMOUNT: string = \"CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_AMOUNT\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_PENDING_EDIT: string = \"CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_PENDING_EDIT\";\r\nexport const CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_PENDING_EDIT: string = \"CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_PENDING_EDIT\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_ALL: string = \"REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_ALL\";\r\nexport const INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED: string = \"INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(user_register_tutorial: IUserRegisterTutorial) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        user_register_tutorial\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialUserRegisterTutorialNotApprovedNow(user_register_tutorial: IUserRegisterTutorial): IInitialUserRegisterTutorialNotApprovedNowActionType {\r\n    return { type: INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialNotApprovedNowAll(): IRemoveUserRegisterTutorialNotApprovedNowAllActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_ALL };\r\n}\r\n\r\nexport function addUserRegisterTutorialNotApprovedNow(user_register_tutorial: IUserRegisterTutorial): IAddUserRegisterTutorialNotApprovedNowActionType {\r\n    return { type: ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function editUserRegisterTutorialNotApprovedNow(user_register_tutorial: IUserRegisterTutorial): IEditUserRegisterTutorialNotApprovedNowActionType {\r\n    return { type: EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialNotApprovedNow(id: string): IRemoveUserRegisterTutorialNotApprovedNowActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedUserRegisterTutorialNotApprovedNow(user_register_tutorial: IUserRegisterTutorial): IChangeSelectedUserRegisterTutorialNotApprovedNowActionType {\r\n    return { type: CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function clearSelectedUserRegisterTutorialNotApprovedNow(): IClearSelectedUserRegisterTutorialNotApprovedNowActionType {\r\n    return { type: CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialUserRegisterTutorialApproved(user_register_tutorial: IUserRegisterTutorial): IInitialUserRegisterTutorialApprovedActionType {\r\n    return { type: INITIAL_USER_REGISTER_TUTORIAL_APPROVED, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialApprovedAll(): IRemoveUserRegisterTutorialApprovedAllActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_APPROVED_ALL };\r\n}\r\n\r\nexport function addUserRegisterTutorialApproved(user_register_tutorial: IUserRegisterTutorial): IAddUserRegisterTutorialApprovedActionType {\r\n    return { type: ADD_USER_REGISTER_TUTORIAL_APPROVED, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function editUserRegisterTutorialApproved(user_register_tutorial: IUserRegisterTutorial): IEditUserRegisterTutorialApprovedActionType {\r\n    return { type: EDIT_USER_REGISTER_TUTORIAL_APPROVED, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialApproved(id: string): IRemoveUserRegisterTutorialApprovedActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_APPROVED, id: id };\r\n}\r\n\r\nexport function changeSelectedUserRegisterTutorialApproved(user_register_tutorial: IUserRegisterTutorial): IChangeSelectedUserRegisterTutorialApprovedActionType {\r\n    return { type: CHANGE_USER_REGISTER_TUTORIAL_APPROVED_PENDING_EDIT, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function clearSelectedUserRegisterTutorialApproved(): IClearSelectedUserRegisterTutorialApprovedActionType {\r\n    return { type: CLEAR_USER_REGISTER_TUTORIAL_APPROVED_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: UserRegisterTutorialModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n\r\n\r\nexport function initialUserRegisterTutorialApprovedToTutorialTemplate(user_register_tutorial: IUserRegisterTutorial): IInitialUserRegisterTutorialApprovedToTutorialTemplateActionType {\r\n    return { type: INITIAL_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialApprovedToTutorialTemplateAll(): IRemoveUserRegisterTutorialApprovedToTutorialTemplateAllActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_ALL };\r\n}\r\n\r\nexport function addUserRegisterTutorialApprovedToTutorialTemplate(user_register_tutorial: IUserRegisterTutorial): IAddUserRegisterTutorialApprovedToTutorialTemplateActionType {\r\n    return { type: ADD_USER_REGISTER_TUTORIAL_APPROVED, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function editUserRegisterTutorialApprovedToTutorialTemplate(user_register_tutorial: IUserRegisterTutorial): IEditUserRegisterTutorialApprovedToTutorialTemplateActionType {\r\n    return { type: EDIT_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialApprovedToTutorialTemplate(id: string): IRemoveUserRegisterTutorialApprovedToTutorialTemplateActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE, id: id };\r\n}\r\n\r\nexport function changeSelectedUserRegisterTutorialApprovedToTutorialTemplate(user_register_tutorial: IUserRegisterTutorial): IChangeSelectedUserRegisterTutorialApprovedToTutorialTemplateActionType {\r\n    return { type: CHANGE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_PENDING_EDIT, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function clearSelectedUserRegisterTutorialApprovedToTutorialTemplate(): IClearSelectedUserRegisterTutorialApprovedToTutorialTemplateActionType {\r\n    return { type: CLEAR_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_PENDING_EDIT };\r\n}\r\n\r\n\r\n\r\nexport function initialUserRegisterTutorialNotApproved(user_register_tutorial: IUserRegisterTutorial): IInitialUserRegisterTutorialNotApprovedActionType {\r\n    return { type: INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialNotApprovedAll(): IRemoveUserRegisterTutorialNotApprovedAllActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_ALL };\r\n}\r\n\r\nexport function addUserRegisterTutorialNotApproved(user_register_tutorial: IUserRegisterTutorial): IAddUserRegisterTutorialNotApprovedActionType {\r\n    return { type: ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function editUserRegisterTutorialNotApproved(user_register_tutorial: IUserRegisterTutorial): IEditUserRegisterTutorialNotApprovedActionType {\r\n    return { type: EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialNotApproved(id: string): IRemoveUserRegisterTutorialNotApprovedActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED, id: id };\r\n}\r\n\r\nexport function changeSelectedUserRegisterTutorialNotApproved(user_register_tutorial: IUserRegisterTutorial): IChangeSelectedUserRegisterTutorialNotApprovedActionType {\r\n    return { type: CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_AMOUNT, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function clearSelectedUserRegisterTutorialNotApproved(): IClearSelectedUserRegisterTutorialNotApprovedActionType {\r\n    return { type: CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_PENDING_EDIT };\r\n}\r\n\r\n// register_successfull_user_register_tutorials\r\ninterface IAddUserRegisterTutorialNotApprovedNowActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IEditUserRegisterTutorialNotApprovedNowActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IRemoveUserRegisterTutorialNotApprovedNowActionType { type: string, id: string };\r\ninterface IChangeSelectedUserRegisterTutorialNotApprovedNowActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IClearSelectedUserRegisterTutorialNotApprovedNowActionType { type: string };\r\ninterface IRemoveUserRegisterTutorialNotApprovedNowAllActionType { type: string }\r\ninterface IInitialUserRegisterTutorialNotApprovedNowActionType {type: string, user_register_tutorial: IUserRegisterTutorial}\r\n\r\n// not_register_user_register_tutorials\r\ninterface IAddUserRegisterTutorialApprovedActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IEditUserRegisterTutorialApprovedActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IRemoveUserRegisterTutorialApprovedActionType { type: string, id: string };\r\ninterface IChangeSelectedUserRegisterTutorialApprovedActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IClearSelectedUserRegisterTutorialApprovedActionType { type: string };\r\ninterface IRemoveUserRegisterTutorialApprovedAllActionType { type: string }\r\ninterface IInitialUserRegisterTutorialApprovedActionType {type: string, user_register_tutorial: IUserRegisterTutorial}\r\n\r\n\r\n// not_register_user_register_tutorials\r\ninterface IAddUserRegisterTutorialApprovedToTutorialTemplateActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IEditUserRegisterTutorialApprovedToTutorialTemplateActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IRemoveUserRegisterTutorialApprovedToTutorialTemplateActionType { type: string, id: string };\r\ninterface IChangeSelectedUserRegisterTutorialApprovedToTutorialTemplateActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IClearSelectedUserRegisterTutorialApprovedToTutorialTemplateActionType { type: string };\r\ninterface IRemoveUserRegisterTutorialApprovedToTutorialTemplateAllActionType { type: string }\r\ninterface IInitialUserRegisterTutorialApprovedToTutorialTemplateActionType {type: string, user_register_tutorial: IUserRegisterTutorial}\r\n\r\n\r\n// register_successfull_user_register_tutorials\r\ninterface IAddUserRegisterTutorialNotApprovedActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IEditUserRegisterTutorialNotApprovedActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IRemoveUserRegisterTutorialNotApprovedActionType { type: string, id: string };\r\ninterface IChangeSelectedUserRegisterTutorialNotApprovedActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IClearSelectedUserRegisterTutorialNotApprovedActionType { type: string };\r\ninterface IRemoveUserRegisterTutorialNotApprovedAllActionType { type: string }\r\ninterface IInitialUserRegisterTutorialNotApprovedActionType {type: string, user_register_tutorial: IUserRegisterTutorial}\r\n\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  UserRegisterTutorialModificationStatus};","import { fetchDataSuccess, fetchDataError, removeUserRegisterTutorialApprovedAll, initialUserRegisterTutorialApproved, addUserRegisterTutorialApproved, removeUserRegisterTutorialNotApprovedNowAll, removeUserRegisterTutorialNotApprovedAll, initialUserRegisterTutorialNotApproved, addUserRegisterTutorialNotApproved, initialUserRegisterTutorialNotApprovedNow, addUserRegisterTutorialNotApprovedNow, initialUserRegisterTutorialApprovedToTutorialTemplate, addUserRegisterTutorialApprovedToTutorialTemplate } from \"../../../store/actions/user_register_tutorial.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface UserRegisterTutorial {\r\n    id: string;\r\n    section_id: string;\r\n    creator_id: string;\r\n    creator_name: string;\r\n    section_name: string;\r\n    section_number: number;\r\n    class_id: string;\r\n    class_name: string;\r\n    name: string;\r\n    status: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getUserRegisterTutorial(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-tutorial`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserRegisterTutorial(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeUserRegisterTutorialApprovedAll())\r\n                dispatch(removeUserRegisterTutorialNotApprovedNowAll())\r\n                dispatch(removeUserRegisterTutorialNotApprovedAll())\r\n                console.log(data.body.user_register_tutorial)\r\n                data.body.user_register_tutorial.map((ele: any, index: any) => {\r\n                    var UserRegisterTutorial: UserRegisterTutorial = {\r\n                        id: ele.id,\r\n                        section_id: ele.section_id,\r\n                        section_name: ele.section_name,\r\n                        creator_name: ele.creator_name,\r\n                        creator_id: ele.creator_id,\r\n                        class_id: ele.class_id,\r\n                        class_name: ele.class_name,\r\n                        section_number:ele.section_number,\r\n                        name: ele.name,\r\n                        status: ele.status,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (ele.status === \"Approved\"){\r\n                        if (index === 0){\r\n                            return dispatch(initialUserRegisterTutorialApproved(UserRegisterTutorial));\r\n                        }\r\n                        else{\r\n                            return dispatch(addUserRegisterTutorialApproved(UserRegisterTutorial))\r\n                        }\r\n                    }\r\n                    else if (ele.status === \"Not approved now\"){\r\n                        if (index === 0){\r\n                            return dispatch(initialUserRegisterTutorialNotApprovedNow(UserRegisterTutorial));\r\n                        }\r\n                        else{\r\n                            return dispatch(addUserRegisterTutorialNotApprovedNow(UserRegisterTutorial))\r\n                        }\r\n                    }\r\n                    else if (ele.status === \"Approved to tutorial template\"){\r\n                        if (index === 0){\r\n                            return dispatch(initialUserRegisterTutorialApprovedToTutorialTemplate(UserRegisterTutorial));\r\n                        }\r\n                        else{\r\n                            return dispatch(addUserRegisterTutorialApprovedToTutorialTemplate(UserRegisterTutorial))\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (index === 0){\r\n                            return dispatch(initialUserRegisterTutorialNotApproved(UserRegisterTutorial));\r\n                        }\r\n                        else{\r\n                            return dispatch(addUserRegisterTutorialNotApproved(UserRegisterTutorial))\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess } from \"../../../store/actions/user_register_tutorial.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postNotifyDb } from \"../NotifyDb/PostNotifyDb\";\r\nimport { getUserRegisterTutorial } from \"./GetUserRegisterTutorial\";\r\n\r\nexport function putUserRegisterTutorial(id: any, tutorial: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-tutorial/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(tutorial)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putUserRegisterTutorial(id, tutorial, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(postNotifyDb({\r\n                    name: 'Chấp nhận giáo án giáo viên!',\r\n                    description: `Quản trị viên đã chấp nhận yêu cầu chỉnh giáo án ${tutorial.name} của giáo viên!`\r\n                }, tutorial.creator_id))\r\n                toast.update(idx, { render: \"Bạn đã xác nhận trình độ cho giáo viên thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataSuccess(tutorial))\r\n                getUserRegisterTutorial(dispatch)\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Bạn đã xác nhận trình độ cho giáo viên không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Dispatch } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { putUserRegisterTutorial } from \"../../common/service/UserRegisterTutorial/PutUserRegisterTutorial\";\r\nimport { IStateType, IUserRegisterTutorialState } from \"../../store/models/root.interface\";\r\nimport { ITutorial } from \"../../store/models/tutorial.interface\";\r\nimport { IUserRegisterTutorial } from \"../../store/models/user_register_tutorial.interface\";\r\n\r\nexport type studentListProps = {\r\n  onSelect?: (student: ITutorial) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction TutorialEditRequestList(props: studentListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n\r\n  const user_register_tutorials: IUserRegisterTutorialState = useSelector((state: IStateType) => state.user_register_tutorials);\r\n\r\n  function approvedTutorial(ele: IUserRegisterTutorial) {\r\n    const id = toast.info(\"Chấp nhận giáo án giáo viên!\", {\r\n      position: toast.POSITION.TOP_CENTER,\r\n      autoClose: 2000\r\n    });\r\n    dispatch(putUserRegisterTutorial(ele.id, {\r\n      status: \"Approved\",\r\n      section_id: ele.section_id,\r\n      name: ele.name,\r\n      creator_id: ele.creator_id\r\n    }, id))\r\n  }\r\n\r\n  function notApprovedTutorial(ele: IUserRegisterTutorial) {\r\n    const id = toast.info(\"Chấp nhận giáo án giáo viên!\", {\r\n      position: toast.POSITION.TOP_CENTER,\r\n      autoClose: 2000\r\n    });\r\n    dispatch(putUserRegisterTutorial(ele.id, {\r\n      status: \"Not approved\",\r\n      section_id: ele.section_id,\r\n      name: ele.name,\r\n      creator_id: ele.creator_id\r\n    }, id))\r\n  }\r\n\r\n  const studentElements: (JSX.Element | null)[] = user_register_tutorials.user_register_tutorial_not_approved_nows.map((student, index) => {\r\n    if (!student) { return null; }\r\n    return (<tr className={`table-row ${(user_register_tutorials.selectedUserRegisterTutorial && user_register_tutorials.selectedUserRegisterTutorial.id === student.id) ? \"selected\" : \"\"}`}\r\n      key={`student_${student.id}`}>\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td>{student.name}</td>\r\n      <td>{student.class_name}</td>\r\n      <td>{student.section_number}</td>\r\n      <td>{student.creator_name}</td>\r\n      <td>{student.create_time}</td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n          approvedTutorial(student)\r\n        }}>Chấp nhận</button>\r\n      </td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() => {\r\n          notApprovedTutorial(student)\r\n        }}>Xóa</button>\r\n      </td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"table-responsive portlet\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Tên giáo án</th>\r\n            <th scope=\"col\">Lớp</th>\r\n            <th scope=\"col\">Buổi</th>\r\n            <th scope=\"col\">Giáo viên</th>\r\n            <th scope=\"col\">Thời gian</th>\r\n            <th scope=\"col\">Hành động</th>\r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {studentElements}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default TutorialEditRequestList;\r\n","import React, { Dispatch } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { putUserRegisterTutorial } from \"../../common/service/UserRegisterTutorial/PutUserRegisterTutorial\";\r\nimport { IStateType, IUserRegisterTutorialState } from \"../../store/models/root.interface\";\r\nimport { IUserRegisterTutorial } from \"../../store/models/user_register_tutorial.interface\";\r\n\r\nexport type studentListProps = {\r\n  onSelect?: (student: IUserRegisterTutorial) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction UserRegisterTutorialEditRequestList(props: studentListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n\r\n  const user_register_tutorials: IUserRegisterTutorialState = useSelector((state: IStateType) => state.user_register_tutorials);\r\n\r\n  function approvedTutorial(ele: IUserRegisterTutorial) {\r\n    const id = toast.info(\"Chấp nhận giáo án giáo viên cho giáo án chung!\", {\r\n      position: toast.POSITION.TOP_CENTER,\r\n      autoClose: 2000\r\n    });\r\n    dispatch(putUserRegisterTutorial(ele.id, {\r\n      status: \"Approved to tutorial template\",\r\n      section_id: ele.section_id,\r\n      name: ele.name,\r\n      creator_id: ele.creator_id\r\n    }, id))\r\n  }\r\n\r\n  const studentElements: (JSX.Element | null)[] = user_register_tutorials.user_register_tutorial_approveds.map((student, index) => {\r\n    if (!student) { return null; }\r\n    return (<tr className={`table-row ${(user_register_tutorials.selectedUserRegisterTutorial && user_register_tutorials.selectedUserRegisterTutorial.id === student.id) ? \"selected\" : \"\"}`}\r\n      key={`student_${student.id}`}>\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td>{student.name}</td>\r\n      <td>{student.section_number}</td>\r\n      <td>{student.creator_name}</td>\r\n      <td>{student.create_time}</td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n          approvedTutorial(student)\r\n        }}>Chấp nhận</button>\r\n      </td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"table-responsive portlet\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Tên giáo án</th>\r\n            <th scope=\"col\">Buổi</th>\r\n            <th scope=\"col\">Giáo viên</th>\r\n            <th scope=\"col\">Thời gian</th>\r\n            <th scope=\"col\">Hành động</th>\r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {studentElements}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default UserRegisterTutorialEditRequestList;\r\n","import React, { Fragment, Dispatch, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport { IStateType, IUserRegisterTutorialState } from \"../../store/models/root.interface\";\r\nimport TutorialEditRequestList from \"./TutorialEditRequestList\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { getUserRegisterTutorial } from \"../../common/service/UserRegisterTutorial/GetUserRegisterTutorial\";\r\nimport UserRegisterTutorialEditRequestList from \"./UserRegisterTutorialEditRequestList\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst TutorialEditRequest: React.FC = () => {\r\n  const user_register_tutorials: IUserRegisterTutorialState = useSelector((state: IStateType) => state.user_register_tutorials);\r\n  const numberItemsCount: number = user_register_tutorials.user_register_tutorial_not_approved_nows.length;\r\n  const numberItemsApprovedCount: number = user_register_tutorials.user_register_tutorial_approveds.length;\r\n\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  dispatch(updateCurrentPath(\"Yêu cầu chỉnh giáo án\", \"\"));\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n  let access_token = localStorage.getItem(\"access_token\");\r\n  let refresh_token = localStorage.getItem(\"refresh_token\");\r\n  useEffect(() => {\r\n    if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n      let access_token_decode: any = jwt_decode(access_token)\r\n      let refresh_token_decode: any = jwt_decode(refresh_token)\r\n      let exp_access_token_decode = access_token_decode.exp;\r\n      let exp_refresh_token_decode = refresh_token_decode.exp;\r\n      let now_time = Date.now() / 1000;\r\n      console.log(exp_access_token_decode)\r\n      console.log(now_time)\r\n      if (exp_access_token_decode < now_time) {\r\n        if (exp_refresh_token_decode < now_time) {\r\n          localStorage.removeItem('access_token') // Authorization\r\n          localStorage.removeItem('refresh_token')\r\n          localStorage.removeItem('username')\r\n          localStorage.removeItem('role_privilege')\r\n          localStorage.removeItem('id')\r\n          localStorage.removeItem('contest_id')\r\n          localStorage.removeItem('schedule_id')\r\n          dispatch(logout())\r\n        }\r\n        else {\r\n          trackPromise(getUserRegisterTutorial(dispatch))\r\n        }\r\n      }\r\n      else {\r\n        trackPromise(getUserRegisterTutorial(dispatch))\r\n      }\r\n    }\r\n  }, [dispatch, access_token, refresh_token]);\r\n\r\n  const [checked, setChecked] = useState(true);\r\n\r\n  return (\r\n    promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n      <ToastContainer />\r\n      <h1 className=\"h3 mb-2 text-gray-800\">Yêu cầu chỉnh giáo án</h1>\r\n      {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n      <div className=\"row\">\r\n        <TopCard title=\"SỐ YÊU CẦU CHƯA DUYỆT\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n        <TopCard title=\"SỐ YÊU CẦU ĐÃ DUYỆT\" text={`${numberItemsApprovedCount}`} icon=\"box\" class=\"primary\" />\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n          <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n            if (checked === false) {\r\n              setChecked(true)\r\n            }\r\n          }} style={{\r\n            color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n          }}>Chưa duyệt</h6>\r\n          <div style={{\r\n            height: \"5px\",\r\n            textAlign: \"center\",\r\n            margin: \"auto\",\r\n            width: \"30%\",\r\n            backgroundColor: checked ? \"#F24E1E\" : \"#ffffff\"\r\n          }}></div>\r\n        </div>\r\n        <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n          <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n            if (checked === true) {\r\n              setChecked(false)\r\n            }\r\n          }}\r\n            style={{\r\n              color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n            }}>Đã duyệt</h6>\r\n          <div style={{\r\n            height: \"5px\",\r\n            textAlign: \"center\",\r\n            margin: \"auto\",\r\n            width: \"30%\",\r\n            backgroundColor: checked ? \"#ffffff\" : \"#F24E1E\"\r\n          }}></div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {\r\n        function () {\r\n          if (checked === true) {\r\n            return (\r\n              <div className=\"row\">\r\n\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                  <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-header py-3\">\r\n                      <h6 className=\"m-0 font-weight-bold text-green\">Danh sách yêu cầu</h6>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <TutorialEditRequestList />\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            )\r\n          }\r\n          else {\r\n            return (\r\n              <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                  <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-header py-3\">\r\n                      <h6 className=\"m-0 font-weight-bold text-green\">Danh sách yêu cầu</h6>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <UserRegisterTutorialEditRequestList />\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            )\r\n          }\r\n        }()\r\n      }\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TutorialEditRequest;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getContestSubmissionByContest } from \"../../common/service/ContestSubmission/GetContestSubmissionByContest\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IContestSubmissionState, IStateType } from \"../../store/models/root.interface\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst ContestDetailTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const contest_submissions: IContestSubmissionState = useSelector((state: IStateType) => state.contest_submissions);\r\n    const numberNotGradedCount: number = contest_submissions.contest_not_gradeds.length;\r\n    const numberGradedCount: number = contest_submissions.contest_gradeds.length;\r\n\r\n\r\n    var contest_description = localStorage.getItem('contest_description');\r\n    var contest_description_: string = \"\";\r\n    if (contest_description !== null) {\r\n        contest_description_ = contest_description;\r\n    }\r\n\r\n    var contest_name = localStorage.getItem('contest_name');\r\n    var contest_name_: string = \"\";\r\n    if (contest_name !== null) {\r\n        contest_name_ = contest_name;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('contest_id');\r\n    let contest_id = \"\";\r\n\r\n    if (id_y !== null) {\r\n        contest_id = id_y;\r\n    }\r\n\r\n    var id_z = localStorage.getItem('max_participant');\r\n    let max_participant = 0;\r\n\r\n    if (id_z !== null) {\r\n        max_participant = parseInt(id_z);\r\n    }\r\n\r\n    var id_t = localStorage.getItem('art_type_contest');\r\n    let art_type_contest: string = \"\";\r\n\r\n    if (id_t !== null) {\r\n        art_type_contest = id_t;\r\n    }\r\n\r\n    var id_h = localStorage.getItem('art_age_contest');\r\n    let art_age_contest: string = \"\";\r\n\r\n    if (id_h !== null) {\r\n        art_age_contest = id_h;\r\n    }\r\n\r\n    var id_k = localStorage.getItem('registration_time');\r\n    let registration_time: string = \"\";\r\n\r\n    if (id_k !== null) {\r\n        registration_time = id_k;\r\n    }\r\n\r\n    var id_l = localStorage.getItem('start_time');\r\n    let start_time: string = \"\";\r\n\r\n    if (id_l !== null) {\r\n        start_time = id_l;\r\n    }\r\n\r\n    var id_m = localStorage.getItem('end_time');\r\n    let end_time: string = \"\";\r\n\r\n    if (id_m !== null) {\r\n        end_time = id_m;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getContestSubmissionByContest(dispatch, contest_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getContestSubmissionByContest(dispatch, contest_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, contest_id]);\r\n\r\n    \r\n\r\n    const history = useHistory();\r\n    const routeChange = () =>{ \r\n        let path = '/contest/grade'; \r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    const routeChange1 = () => {\r\n        let path = '/contest/result-grade';\r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n    \r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ BÀI ĐÃ CHẤM\" text={`${numberGradedCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"CHƯA CHẤM\" text={`${numberNotGradedCount}`} icon=\"book\" class=\"danger\" />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters justify-content-left\">\r\n                                            <h4 id=\"full-name\">Đề bài</h4>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <p id=\"phone\">{contest_name_}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <p>Thể loại: {art_type_contest}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <p>Độ tuổi: {art_age_contest}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <p>Số người tham gia tối đa: {max_participant}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <p>Thời gian đăng kí: {registration_time}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <p>Thời gian bắt đầu: {start_time}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <p>Thời gian kết thúc: {end_time}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\" dangerouslySetInnerHTML={{ __html: contest_description_ }}></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>              \r\n            </div>\r\n\r\n            {\r\n                function () {\r\n                    if (numberNotGradedCount === 0){\r\n                        return (\r\n                            <div className=\"row justify-content-center mb-4\">\r\n                                <button \r\n                                    className=\"btn btn-success btn-green\" \r\n                                    id=\"btn-into-class-student\"\r\n                                    onClick={() => {routeChange1()}}\r\n                                >\r\n                                    Xem điểm\r\n                                    <i className={`fas fa-arrow-right fa-1x`} id=\"icon-arrow-right\"></i>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div className=\"row justify-content-center mb-4\">\r\n                                <button \r\n                                    className=\"btn btn-success btn-green\" \r\n                                    id=\"btn-into-class-student\"\r\n                                    onClick={() => {routeChange()}}\r\n                                >\r\n                                    Chấm bài\r\n                                    <i className={`fas fa-arrow-right fa-1x`} id=\"icon-arrow-right\"></i>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ContestDetailTeacher;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/semester.actions\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postUserGradeContestSubmission(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-grade-contest-submission`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postUserGradeContestSubmission(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Chấm điểm bài tập thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Chấm điểm bài tập không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IContestSubmissionState, IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./GradeContestTeacher.css\"\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport NumberInput from \"../../common/components/NumberInput\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { getContestSubmissionByContest } from \"../../common/service/ContestSubmission/GetContestSubmissionByContest\";\r\nimport { postUserGradeContestSubmission } from \"../../common/service/UserGradeContestSubmission/PostUserGradeContestSubmission\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\n\r\nconst GradeContestTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const contest_submissions: IContestSubmissionState = useSelector((state: IStateType) => state.contest_submissions);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const { promiseInProgress } = usePromiseTracker();\r\n    let user_grade_contest_submission = {\r\n        feedback: \"\",\r\n        score: 0\r\n    }\r\n\r\n    const [formState, setFormState] = useState({\r\n        feedback: { error: \"\", value: user_grade_contest_submission.feedback },\r\n        score: { error: \"\", value: user_grade_contest_submission.score },\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    let id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x\r\n    }\r\n\r\n    function saveForm(){\r\n        const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n        \r\n        if (contest_submission_id === \"\"){\r\n            let y = contest_submissions.contest_not_gradeds[0].id;\r\n            console.log({\r\n                teacher_id: id,\r\n                contest_submission_id: y,\r\n                score: formState.score.value,\r\n                feedback: formState.feedback.value\r\n            })\r\n\r\n            dispatch(postUserGradeContestSubmission({\r\n                teacher_id: id,\r\n                contest_submission_id: y,\r\n                score: formState.score.value,\r\n                feedback: formState.feedback.value\r\n            }, idx))\r\n        }\r\n        else {\r\n            dispatch(postUserGradeContestSubmission({\r\n                teacher_id: id,\r\n                contest_submission_id: contest_submission_id,\r\n                score: formState.score.value,\r\n                feedback: formState.feedback.value\r\n            }, idx))\r\n        }\r\n    }\r\n    \r\n    var id_y = localStorage.getItem('contest_id');\r\n    let contest_id = 0;\r\n\r\n    if (id_y !== null) {\r\n        contest_id = parseInt(id_y);\r\n    }\r\n    \r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getContestSubmissionByContest(dispatch, contest_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getContestSubmissionByContest(dispatch, contest_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, contest_id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Bài tập\", \"Chi tiết\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    const history = useHistory();\r\n    const routeChange = () => {\r\n        let x = count + 1;\r\n        setCount(x);\r\n        if (x < contest_submissions.contest_not_gradeds.length){\r\n            let image_url_ = contest_submissions.contest_not_gradeds[x].image_url;\r\n            let student_name_ = contest_submissions.contest_not_gradeds[x].student_name;\r\n            let time_submit_ = contest_submissions.contest_not_gradeds[x].update_time;\r\n            let contest_submission_id_ = contest_submissions.contest_not_gradeds[x].id;\r\n            setImageUrl(image_url_);\r\n            setStudentName(student_name_);\r\n            setTimeSubmit(time_submit_);\r\n            setContestSubmissionId(contest_submission_id_);\r\n        }\r\n    }\r\n\r\n    const routeChange1 = () => {\r\n        let path = '/contest/result-grade';\r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    const [count, setCount] = useState(0);\r\n    const [image_url, setImageUrl] = useState(\"\");\r\n    const [student_name, setStudentName] = useState(\"\");\r\n    const [contest_submission_id, setContestSubmissionId] = useState(\"\");\r\n    const [time_submit, setTimeSubmit] = useState(\"\");\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6\">\r\n                    <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Bài làm của bé</h6>\r\n                    </div>\r\n                    {\r\n                        function () {\r\n                            if (count > 0)\r\n                                return (\r\n                                    <img className=\"card-img-top\" src={image_url} alt=\"\" />\r\n                                )\r\n                            else {\r\n                                if (contest_submissions.contest_not_gradeds.length > 0) {\r\n                                    return (\r\n                                        <img className=\"card-img-top\" src={contest_submissions.contest_not_gradeds[0].image_url} alt=\"\" />\r\n                                    )\r\n                                }\r\n                            }\r\n                        }()\r\n                    }\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6\">\r\n                    <div className=\"row\">\r\n                        <div className={`card shadow h-100 py-2 ml-4 mr-4`} id=\"topcard-user\">\r\n                            {\r\n                                function () {\r\n                                    if (count > 0)\r\n                                        return (\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"row no-gutters justify-content-left\">\r\n                                                    <h4 id=\"full-name\">Thông tin bài nộp</h4>\r\n                                                </div>\r\n                                                <div className=\"row no-gutters justify-content-left\">\r\n                                                    <p id=\"username-teacher\">Tên học sinh: {student_name}</p>\r\n                                                </div>\r\n                                                <div className=\"row no-gutters justify-content-left\">\r\n                                                    <p id=\"username-teacher\">Thời gian nộp: {time_submit}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    else {\r\n                                        if (contest_submissions.contest_not_gradeds.length > 0) {\r\n                                            return (\r\n                                                <div className=\"card-body\">\r\n                                                    <div className=\"row no-gutters justify-content-left\">\r\n                                                        <h4 id=\"full-name\">Thông tin bài nộp</h4>\r\n                                                    </div>\r\n                                                    <div className=\"row no-gutters justify-content-left\">\r\n                                                        <p id=\"username-teacher\">Tên học sinh: {contest_submissions.contest_not_gradeds[0].student_name}</p>\r\n                                                    </div>\r\n                                                    <div className=\"row no-gutters justify-content-left\">\r\n                                                        <p id=\"username-teacher\">Thời gian nộp: {contest_submissions.contest_not_gradeds[0].update_time}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    }\r\n                                }()\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-4 ml-4\">\r\n                        <NumberInput \r\n                            id=\"input_score\"\r\n                            value={formState.score.value}\r\n                            field=\"score\"\r\n                            onChange={hasFormValueChanged}\r\n                            max={10}\r\n                            min={0}\r\n                            label=\"Nhập điểm\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Nhận xét</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                                <TextInput id=\"input_feedback\"\r\n                                    field=\"feedback\"\r\n                                    value={formState.feedback.value}\r\n                                    onChange={hasFormValueChanged}\r\n                                    required={false}\r\n                                    maxLength={100}\r\n                                    label=\"\"\r\n                                    placeholder=\"\"\r\n                                />\r\n                            </div>\r\n                            <button className=\"btn btn-warning\" onClick={() => {saveForm()}}>Lưu</button>\r\n                            {\r\n                                function () {\r\n                                    if (count === contest_submissions.contest_not_gradeds.length - 1) {\r\n                                        return (\r\n                                            <button className={`btn btn-success left-margin`} onClick={() => { routeChange1() }}>Hoàn thành</button>\r\n                                        )\r\n                                    }\r\n                                    else {\r\n                                        return (\r\n                                            <button className={`btn btn-success left-margin`} onClick={() => { routeChange() }}>Bài tiếp</button>\r\n                                        )\r\n                                    }\r\n                                }()\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default GradeContestTeacher;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IUserGradeContestSubmissionState, IUserState } from \"../../store/models/root.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IUserGradeContestSubmission } from \"../../store/models/user_grade_contest_submission.interface\";\r\n\r\nfunction ScoreContestList(): JSX.Element {\r\n\r\n    const user_grade_contest_submissions: IUserGradeContestSubmissionState = useSelector((state: IStateType) => state.user_grade_contest_submissions);\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    let childs: IUserGradeContestSubmission[] = [];\r\n    users.students.map((ele, idx) => {\r\n        return user_grade_contest_submissions.userGradeContestSubmissions.map((element, idx) => {\r\n            if (ele.id === element.student_id) {\r\n                childs.push(element)\r\n            }\r\n            return element\r\n        })\r\n    })\r\n    const history = useHistory();\r\n\r\n\r\n    const routeChange = (child_id: string) => {\r\n        localStorage.removeItem(\"child_id\");\r\n        localStorage.setItem(\"child_id\", child_id.toString())\r\n        let path = '/contest/detail';\r\n        history.push(path);\r\n    }\r\n\r\n    const routeChange1 = () => {\r\n        let path = '/contest/detail';\r\n        history.push(path);\r\n    }\r\n\r\n    console.log(user_grade_contest_submissions.userGradeContestSubmissions)\r\n\r\n\r\n    const studentElements: (JSX.Element | null)[] = user_grade_contest_submissions.userGradeContestSubmissions.map((student, idx) => {\r\n        if (!student) { return null; }\r\n        else if (childs.includes(student)) {\r\n            return (\r\n                <tr className=\"table-row\"\r\n                    key={`student_${idx}`} onClick={() => {routeChange(student.student_id)}}>\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\" >\r\n                        <div className={`card shadow h-100 py-0 child-row`} id=\"topcard-user\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-md-12 col-xs-12\">\r\n                                        <div className=\"row\">\r\n                                            <p className=\"col-xl-2 col-md-2 col-xs-2\"><span className=\"header-card-course-teacher\" id=\"index-infor-student-teacher\">{idx + 1}</span></p>\r\n                                            <i className={`col-xl-2 col-md-2 col-xs-2 fas fa-user-circle fa-2x`} id=\"icon-user\"></i>\r\n                                            <p className=\"col-xl-6 col-md-6 col-xs-6\" id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.student_name}</span></p>\r\n                                            <p className=\"col-xl-2 col-md-2 col-xs-2\" id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.score}</span></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </tr>\r\n            )\r\n        }\r\n        return (<tr className={`table-row`}\r\n            key={`student_${idx}`} onClick={routeChange1}>\r\n            <div className=\"col-xl-12 col-md-12 mb-4\" >\r\n                <div className={`card shadow h-100 py-0 content-student-teacher`} id=\"topcard-user\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-md-12 col-xs-12\">\r\n                                <div className=\"row\">\r\n                                    <p className=\"col-xl-2 col-md-2 col-xs-2\"><span className=\"header-card-course-teacher\" id=\"index-infor-student-teacher\">{idx + 1}</span></p>\r\n                                    <i className={`col-xl-2 col-md-2 col-xs-2 fas fa-user-circle fa-2x`} id=\"icon-user\"></i>\r\n                                    <p className=\"col-xl-6 col-md-6 col-xs-6\" id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.student_name}</span></p>\r\n                                    <p className=\"col-xl-2 col-md-2 col-xs-2\" id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.score}</span></p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"table-responsive portlet\">\r\n            <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {studentElements}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ScoreContestList;\r\n","import { fetchDataSuccess, fetchDataError, removeStudentAll, initialStudent } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user {\r\n    id: string,\r\n    username: string,\r\n    email: string,\r\n    password: string,\r\n    status: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    dateOfBirth: string,\r\n    profile_image_url: string,\r\n    sex: string,\r\n    phone: string,\r\n    address: string,\r\n    parents: string,\r\n    createTime: string\r\n}\r\nexport function getStudentByParent(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/childs/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        postRefreshToken()\r\n                        getStudentByParent(dispatch, id)\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeStudentAll())\r\n                console.log(data.body.childs)\r\n                data.body.childs.map ((ele: any) => {\r\n                    var user: user = {\r\n                        id: ele.id,\r\n                        username: ele.username,\r\n                        email: ele.email,\r\n                        password: \"\",\r\n                        status: ele.status,\r\n                        firstName: ele.firstName,\r\n                        lastName: ele.lastName,\r\n                        dateOfBirth: ele.dateOfBirth,\r\n                        profile_image_url: ele.profile_image_url,\r\n                        sex: ele.sex,\r\n                        phone: ele.phone,\r\n                        address: ele.address,\r\n                        parents: ele.parents,\r\n                        createTime: ele.createTime\r\n                    }\r\n                    return dispatch(initialStudent(user));\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IUserGradeContestSubmissionState } from \"../../store/models/root.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IUserGradeContestSubmission } from \"../../store/models/user_grade_contest_submission.interface\";\r\n\r\nfunction ScoreContestListStudent(): JSX.Element {\r\n\r\n    const user_grade_contest_submissions: IUserGradeContestSubmissionState = useSelector((state: IStateType) => state.user_grade_contest_submissions);\r\n    var id_x = localStorage.getItem('id');\r\n    let id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n    let childs: IUserGradeContestSubmission[] = [];\r\n    user_grade_contest_submissions.userGradeContestSubmissions.map((element, idx) => {\r\n        if (id === element.student_id) {\r\n            childs.push(element)\r\n        }\r\n        return element\r\n    })\r\n    const history = useHistory();\r\n\r\n\r\n    const routeChange = (child_id: string) => {\r\n        localStorage.removeItem(\"child_id\");\r\n        localStorage.setItem(\"child_id\", child_id.toString())\r\n        let path = '/contest/detail';\r\n        history.push(path);\r\n    }\r\n\r\n    const routeChange1 = () => {\r\n        let path = '/contest/detail';\r\n        history.push(path);\r\n    }\r\n\r\n    console.log(user_grade_contest_submissions.userGradeContestSubmissions)\r\n\r\n\r\n    const studentElements: (JSX.Element | null)[] = user_grade_contest_submissions.userGradeContestSubmissions.map((student, idx) => {\r\n        if (!student) { return null; }\r\n        else if (childs.includes(student)) {\r\n            return (\r\n                <tr className=\"table-row\"\r\n                    key={`student_${idx}`} onClick={() => {routeChange(student.student_id)}}>\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\" >\r\n                        <div className={`card shadow h-100 py-0 child-row`} id=\"topcard-user\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-md-12 col-xs-12\">\r\n                                        <div className=\"row\">\r\n                                            <p className=\"col-xl-2 col-md-2 col-xs-2\"><span className=\"header-card-course-teacher\" id=\"index-infor-student-teacher\">{idx + 1}</span></p>\r\n                                            <i className={`col-xl-2 col-md-2 col-xs-2 fas fa-user-circle fa-2x`} id=\"icon-user\"></i>\r\n                                            <p className=\"col-xl-6 col-md-6 col-xs-6\" id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.student_name}</span></p>\r\n                                            <p className=\"col-xl-2 col-md-2 col-xs-2\" id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.score}</span></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </tr>\r\n            )\r\n        }\r\n        return (<tr className={`table-row`}\r\n            key={`student_${idx}`} onClick={routeChange1}>\r\n            <div className=\"col-xl-12 col-md-12 mb-4\" >\r\n                <div className={`card shadow h-100 py-0 content-student-teacher`} id=\"topcard-user\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-md-12 col-xs-12\">\r\n                                <div className=\"row\">\r\n                                    <p className=\"col-xl-2 col-md-2 col-xs-2\"><span className=\"header-card-course-teacher\" id=\"index-infor-student-teacher\">{idx + 1}</span></p>\r\n                                    <i className={`col-xl-2 col-md-2 col-xs-2 fas fa-user-circle fa-2x`} id=\"icon-user\"></i>\r\n                                    <p className=\"col-xl-6 col-md-6 col-xs-6\" id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.student_name}</span></p>\r\n                                    <p className=\"col-xl-2 col-md-2 col-xs-2\" id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.score}</span></p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"table-responsive portlet\">\r\n            <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {studentElements}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ScoreContestListStudent;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getUserGradeContestSubmissionByContestId } from \"../../common/service/UserGradeContestSubmission/GetUserGradeContestSubmissionByContest\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IStateType, IUserGradeContestSubmissionState } from \"../../store/models/root.interface\";\r\nimport ScoreContestList from \"./ScoreContestList\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getStudentByParent } from \"../../common/service/Student/GetStudentByParent\";\r\nimport ScoreContestListStudent from \"./ScoreContestListStudent\";\r\n\r\nconst ResultGradeContestTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const user_grade_contest_submissions: IUserGradeContestSubmissionState = useSelector((state: IStateType) => state.user_grade_contest_submissions);\r\n    const max = user_grade_contest_submissions.userGradeContestSubmissions.reduce((a, b) => Math.max(a, b.score), -Infinity);\r\n    const min = user_grade_contest_submissions.userGradeContestSubmissions.reduce((a, b) => Math.min(a, b.score), 0);\r\n\r\n    var role_privilege = localStorage.getItem('role_privilege')\r\n    var rolePrivilege: string[] = []\r\n    var roleUser: string = \"\"\r\n    if (role_privilege !== null) {\r\n        rolePrivilege = role_privilege.split(',')\r\n        roleUser = rolePrivilege[0]\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    var id_y = localStorage.getItem('contest_id');\r\n    let contest_id = \"\";\r\n\r\n    if (id_y !== null) {\r\n        contest_id = id_y;\r\n    }\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getStudentByParent(dispatch, id))\r\n                    trackPromise(getUserGradeContestSubmissionByContestId(dispatch, contest_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getStudentByParent(dispatch, id))\r\n                trackPromise(getUserGradeContestSubmissionByContestId(dispatch, contest_id))\r\n            }\r\n        }\r\n        dispatch(updateCurrentPath(\"Cuoc thi\", \"Chi tiết\"));\r\n    }, [dispatch, access_token, refresh_token, contest_id, id]);\r\n\r\n\r\n    const history = useHistory();\r\n    const onRouteChange = () => {\r\n        let path = '/contest/result-analytis';\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n\r\n                <div className=\"row\">\r\n                    <TopCard title=\"ĐIỂM CAO NHẤT\" text={`${max}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"ĐIỂM THẤP NHẤT\" text={`${min}`} icon=\"book\" class=\"danger\" />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n\r\n                    {\r\n                        function () {\r\n                            if (roleUser === \"TEACHER_USER\") {\r\n                                return (\r\n                                    <div className=\"col-xl-8 col-md-8 mb-4\">\r\n                                        <h3 className=\" mb-2\" id=\"level-teacher\">Danh sách học sinh</h3>\r\n                                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                            <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                                <div className=\"card-body\">\r\n                                                    <ScoreContestList />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n\r\n                            else if (roleUser === \"PARENT_USER\") {\r\n                                return (\r\n                                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                        <h3 className=\" mb-2\" id=\"level-teacher\">Bảng xếp hạng</h3>\r\n                                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                            <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                                <div className=\"card-body\">\r\n                                                    <ScoreContestList />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n\r\n                            else if (roleUser === \"STUDENT_USER\") {\r\n                                return (\r\n                                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                        <h3 className=\" mb-2\" id=\"level-teacher\">Bảng xếp hạng</h3>\r\n                                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                            <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                                <div className=\"card-body\">\r\n                                                    <ScoreContestListStudent />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n\r\n                        }()\r\n                    }\r\n\r\n                    {\r\n                        function () {\r\n                            if (roleUser === \"TEACHER_USER\") {\r\n                                return (\r\n                                    <div className=\"col-xl-4 col-md-4 mb-4\">\r\n                                        <div className=\"row justify-content-center\">\r\n                                            <button className=\"btn btn-success btn-green\" id=\"btn-into-class\" onClick={() => {\r\n                                                onRouteChange()\r\n                                            }}>\r\n                                                Xem review\r\n                                                <i className=\"fas fa fa-arrow-right\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                        {/* <TopCardLevel title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`2`} icon=\"book\" class=\"primary\" />\r\n                                    <TopCardLevel title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`1`} icon=\"book\" class=\"danger\" /> */}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        }()\r\n                    }\r\n                </div>\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default ResultGradeContestTeacher;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ChartLine } from \"../../common/components/CharLine\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getUserGradeContestByContestId } from \"../../common/service/UserGradeContest/GetUserGradeContestByContestId\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IRootPageStateType, IStateType, IUserGradeContestSubmissionState } from \"../../store/models/root.interface\";\r\nimport ScoreContestList from \"./ScoreContestList\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\n\r\nconst AnalytisResultGradeContestTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const user_grade_contest_submissions: IUserGradeContestSubmissionState  = useSelector((state: IStateType) => state.user_grade_contest_submissions);\r\n    const max = user_grade_contest_submissions.userGradeContestSubmissions.reduce((a, b) => Math.max(a, b.score), -Infinity);\r\n    const min = user_grade_contest_submissions.userGradeContestSubmissions.reduce((a, b) => Math.min(a, b.score), 0);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n\r\n    let student: string[] = []\r\n    let scores: number[] = []\r\n    if (user_grade_contest_submissions.userGradeContestSubmissions.length > 0){\r\n        user_grade_contest_submissions.userGradeContestSubmissions.map(ele => {\r\n            student.push(ele.student_name)\r\n            scores.push(ele.score)\r\n            return ele\r\n        })\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    var id_x = localStorage.getItem('class_id');\r\n    var class_id: string = \"\";\r\n    if (id_x !== null) {\r\n        class_id = id_x;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('contest_id');\r\n    let contest_id = \"\";\r\n\r\n    if (id_y !== null) {\r\n        contest_id = id_y;\r\n    }\r\n\r\n    const labels = student;\r\n    let data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Điêm',\r\n                data: scores,\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            }\r\n        ],\r\n    };\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getUserGradeContestByContestId(dispatch, contest_id))\r\n                }\r\n            }\r\n            else {   \r\n                trackPromise(getUserGradeContestByContestId(dispatch, contest_id))\r\n            }\r\n        }\r\n    }, [dispatch, contest_id, class_id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp\", \"Chi tiết\"));\r\n    }, [path.area, dispatch])\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"ĐIỂM CAO NHẤT\" text={`${max}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"ĐIỂM THẤP NHẤT\" text={`${min}`} icon=\"book\" class=\"danger\" />\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <h3 className=\" mb-2\" id=\"level-teacher\">Danh sách học sinh</h3>\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                        <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                            <div className=\"card-body\">\r\n                                <ScoreContestList />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <ChartLine data={data} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default AnalytisResultGradeContestTeacher;\r\n\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getContestSubmissionByContest } from \"../../common/service/ContestSubmission/GetContestSubmissionByContest\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IContestSubmissionState, IStateType } from \"../../store/models/root.interface\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst DetailContestTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const contest_submissions: IContestSubmissionState = useSelector((state: IStateType) => state.contest_submissions);\r\n    const numberNotGradedCount: number = contest_submissions.contest_not_gradeds.length;\r\n    const numberGradedCount: number = contest_submissions.contest_gradeds.length;\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n\r\n    var contest_description = localStorage.getItem('contest_description');\r\n    var contest_description_: string = \"\";\r\n    if (contest_description !== null) {\r\n        contest_description_ = contest_description;\r\n    }\r\n\r\n    var contest_name = localStorage.getItem('contest_name');\r\n    var contest_name_: string = \"\";\r\n    if (contest_name !== null) {\r\n        contest_name_ = contest_name;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('contest_id');\r\n    let contest_id = \"\";\r\n\r\n    if (id_y !== null) {\r\n        contest_id = id_y;\r\n    }\r\n\r\n\r\n    var id_z = localStorage.getItem('max_participant');\r\n    let max_participant = 0;\r\n\r\n    if (id_z !== null) {\r\n        max_participant = parseInt(id_z);\r\n    }\r\n\r\n    var id_t = localStorage.getItem('art_type_contest');\r\n    let art_type_contest: string = \"\";\r\n\r\n    if (id_t !== null) {\r\n        art_type_contest = id_t;\r\n    }\r\n\r\n    var id_h = localStorage.getItem('art_age_contest');\r\n    let art_age_contest: string = \"\";\r\n\r\n    if (id_h !== null) {\r\n        art_age_contest = id_h;\r\n    }\r\n\r\n    var id_k = localStorage.getItem('registration_time');\r\n    let registration_time: string = \"\";\r\n\r\n    if (id_k !== null) {\r\n        registration_time = id_k;\r\n    }\r\n\r\n    var id_l = localStorage.getItem('start_time');\r\n    let start_time: string = \"\";\r\n\r\n    if (id_l !== null) {\r\n        start_time = id_l;\r\n    }\r\n\r\n    var id_m = localStorage.getItem('end_time');\r\n    let end_time: string = \"\";\r\n\r\n    if (id_m !== null) {\r\n        end_time = id_m;\r\n    }\r\n\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getContestSubmissionByContest(dispatch, contest_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getContestSubmissionByContest(dispatch, contest_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, contest_id]);\r\n\r\n    \r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ BÀI ĐÃ NỘP\" text={`${numberGradedCount + numberNotGradedCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"SỐ BÀI ĐÃ CHẤM\" text={`${numberGradedCount}`} icon=\"book\" class=\"primary\" />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters justify-content-left\">\r\n                                            <h4 id=\"full-name\">Thông tin chung</h4>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <p id=\"phone\">{contest_name_}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <p>Thể loại: {art_type_contest}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <p>Độ tuổi: {art_age_contest}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <p>Số người tham gia tối đa: {max_participant}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <p>Thời gian đăng kí: {registration_time}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <p>Thời gian bắt đầu: {start_time}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <p>Thời gian kết thúc: {end_time}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\" dangerouslySetInnerHTML={{ __html: contest_description_ }}></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>              \r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default DetailContestTeacher;\r\n","import React, { Fragment, Dispatch } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\n\r\nconst NotificationDetail: React.FC = () => {\r\n\r\n\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  dispatch(updateCurrentPath(\"Thông báo\", \"Chi tiết\"));\r\n\r\n  var id_x = localStorage.getItem('notification_name');\r\n  let notification_name = \"\";\r\n  if (id_x !== null){\r\n    notification_name = id_x;\r\n  }\r\n\r\n  var id_y = localStorage.getItem('notification_desciption');\r\n  let notification_desciption = \"\";\r\n  if (id_y !== null){\r\n    notification_desciption = id_y;\r\n  }\r\n\r\n  var id_z = localStorage.getItem('notification_time');\r\n  let notification_time = \"\";\r\n  if (id_z !== null){\r\n    notification_time = id_z;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-green\">{notification_name}</h6>\r\n              <div className=\"header-buttons\">\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <p>{notification_desciption}</p>\r\n                <p>{notification_time}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment >\r\n  );\r\n};\r\n\r\nexport default NotificationDetail;","import { INotifyDb, NotifyDbModificationStatus } from \"../models/notify_db.interface\";\r\nexport const ADD_NOTIFY_DB: string = \"ADD_NOTIFY_DB\";\r\nexport const EDIT_NOTIFY_DB: string = \"EDIT_NOTIFY_DB\";\r\nexport const REMOVE_NOTIFY_DB: string = \"REMOVE_NOTIFY_DB\";\r\nexport const CHANGE_NOTIFY_DB_AMOUNT: string = \"CHANGE_NOTIFY_DB_AMOUNT\";\r\nexport const CHANGE_NOTIFY_DB_PENDING_EDIT: string = \"CHANGE_NOTIFY_DB_PENDING_EDIT\";\r\nexport const CLEAR_NOTIFY_DB_PENDING_EDIT: string = \"CLEAR_NOTIFY_DB_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_NOTIFY_DB_ALL: string = \"REMOVE_NOTIFY_DB_ALL\";\r\nexport const INITIAL_NOTIFY_DB: string = \"INITIAL_NOTIFY_DB\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(notify_db: INotifyDb) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        notify_db\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialNotifyDb(notify_db: INotifyDb): IInitialNotifyDbActionType {\r\n    return { type: INITIAL_NOTIFY_DB, notify_db: notify_db };\r\n}\r\n\r\nexport function removeNotifyDbAll(): IRemoveNotifyDbAllActionType {\r\n    return { type: REMOVE_NOTIFY_DB_ALL };\r\n}\r\n\r\nexport function addNotifyDb(notify_db: INotifyDb): IAddNotifyDbActionType {\r\n    return { type: ADD_NOTIFY_DB, notify_db: notify_db };\r\n}\r\n\r\nexport function editNotifyDb(notify_db: INotifyDb): IEditNotifyDbActionType {\r\n    return { type: EDIT_NOTIFY_DB, notify_db: notify_db };\r\n}\r\n\r\nexport function removeNotifyDb(id: string): IRemoveNotifyDbActionType {\r\n    return { type: REMOVE_NOTIFY_DB, id: id };\r\n}\r\n\r\nexport function changeSelectedNotifyDb(notify_db: INotifyDb): IChangeSelectedNotifyDbActionType {\r\n    return { type: CHANGE_NOTIFY_DB_PENDING_EDIT, notify_db: notify_db };\r\n}\r\n\r\nexport function clearSelectedNotifyDb(): IClearSelectedNotifyDbActionType {\r\n    return { type: CLEAR_NOTIFY_DB_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: NotifyDbModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddNotifyDbActionType { type: string, notify_db: INotifyDb };\r\ninterface IEditNotifyDbActionType { type: string, notify_db: INotifyDb };\r\ninterface IRemoveNotifyDbActionType { type: string, id: string };\r\ninterface IChangeSelectedNotifyDbActionType { type: string, notify_db: INotifyDb };\r\ninterface IClearSelectedNotifyDbActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  NotifyDbModificationStatus};\r\ninterface IRemoveNotifyDbAllActionType { type: string }\r\ninterface IInitialNotifyDbActionType {type: string, notify_db: INotifyDb}","import { fetchDataRequest, fetchDataError, removeNotifyDbAll, initialNotifyDb } from \"../../../store/actions/notify_db.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface NotifyDb {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    time: string;\r\n}\r\nexport function getNotifyDb() {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/notification-database`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getNotifyDb())\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(removeNotifyDbAll())\r\n                console.log(data.body.notifications)\r\n                data.body.notifications.map((ele: any, index: any) => {\r\n                    let notificationDb: NotifyDb = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        time: ele.time\r\n                    }\r\n                    console.log(ele)\r\n                    return dispatch(initialNotifyDb(notificationDb))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getNotifyDb } from \"../../common/service/NotifyDb/GetNotifyDb\";\r\nimport { getUserReadNotification } from \"../../common/service/UserReadNotification/GetUserReadNotificationByUser\";\r\nimport { putUserReadNotification } from \"../../common/service/UserReadNotification/PutUserReadNotification\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { INotifyDbState, IStateType, IUserReadNotificationState } from \"../../store/models/root.interface\";\r\nimport './Notification.css'\r\n\r\ntype Options = {\r\n    notification_id: string;\r\n    user_id: string;\r\n    notification_name: string;\r\n    notification_desciption: string;\r\n    notification_time: string;\r\n    is_read: boolean;\r\n}\r\n\r\nconst Notification: React.FC = () => {\r\n\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    dispatch(updateCurrentPath(\"Thông báo\", \"Danh sách\"));\r\n\r\n    const notificationDbs: INotifyDbState = useSelector((state: IStateType) => state.notify_dbs);\r\n    const user_read_notifications: IUserReadNotificationState = useSelector((state: IStateType) => state.user_read_notifications);\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    let user_id: string = \"\";\r\n    if (id_x !== null) {\r\n        user_id = id_x\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getNotifyDb())\r\n        dispatch(getUserReadNotification(user_id))\r\n    }, [dispatch, user_id])\r\n\r\n    let data_not_read: Options[] = [];\r\n    user_read_notifications.user_not_readed_notifications.map((ele, idx) => {\r\n        let notification = notificationDbs.notify_dbs.find(o => o.id = ele.notification_id);\r\n        if (notification !== undefined) {\r\n            let item: Options = {\r\n                notification_id: ele.notification_id,\r\n                notification_name: notification.name,\r\n                user_id: ele.user_id,\r\n                notification_time: notification.time,\r\n                notification_desciption: notification.description,\r\n                is_read: ele.is_read\r\n            }\r\n            return data_not_read.push(item)\r\n        }\r\n        return idx\r\n    })\r\n\r\n    let data_readed: Options[] = [];\r\n    user_read_notifications.user_readed_notifications.map((ele, idx) => {\r\n        let notification = notificationDbs.notify_dbs.find(o => o.id = ele.notification_id);\r\n        if (notification !== undefined) {\r\n            let item: Options = {\r\n                notification_id: ele.notification_id,\r\n                notification_name: notification.name,\r\n                user_id: ele.user_id,\r\n                notification_time: notification.time,\r\n                notification_desciption: notification.description,\r\n                is_read: ele.is_read\r\n            }\r\n            return data_readed.push(item)\r\n        }\r\n        return idx\r\n    })\r\n\r\n    const history = useHistory();\r\n    const routeChange = (props: Options) => {\r\n        dispatch(putUserReadNotification({\r\n            user_id: user_id,\r\n            notification_id: props.notification_id,\r\n            is_read: true\r\n        }))\r\n        localStorage.removeItem('notification_id');\r\n        localStorage.setItem('notification_id', props.notification_id.toString());\r\n        localStorage.removeItem('user_id');\r\n        localStorage.setItem('user_id', props.user_id.toString());\r\n        localStorage.removeItem('notification_name');\r\n        localStorage.setItem('notification_name', props.notification_name);\r\n        localStorage.removeItem('notification_desciption');\r\n        localStorage.setItem('notification_desciption', props.notification_desciption);\r\n        localStorage.removeItem('notification_time');\r\n        localStorage.setItem('notification_time', props.notification_time);\r\n        let path = '/notification/detail';\r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Danh sách thông báo</h1>\r\n            {\r\n                data_not_read.map((ele, idx) => {\r\n                    return (\r\n                        <div className=\"row\" onClick={() => {\r\n                            routeChange(ele)\r\n                        }}>\r\n                            <div className=\"col-xl-12 col-lg-12\">\r\n                                <div className=\"card shadow mb-4\">\r\n                                    <div className=\"card-header py-3\">\r\n                                        <h6 className=\"m-0 font-weight-bold text-green\">{ele.notification_name}</h6>\r\n                                        <div className=\"header-buttons\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card-body has-view\">\r\n                                        <p>{ele.notification_time}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n\r\n\r\n            {\r\n                data_readed.map((ele, idx) => {\r\n                    return (\r\n                        <div className=\"row\" onClick={() => {\r\n                            routeChange(ele)\r\n                        }}>\r\n                            <div className=\"col-xl-12 col-lg-12\">\r\n                                <div className=\"card shadow mb-4\">\r\n                                    <div className=\"card-header py-3\">\r\n                                        <h6 className=\"m-0 font-weight-bold text-green\">{ele.notification_name}</h6>\r\n                                        <div className=\"header-buttons\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <p>{ele.notification_time}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { PropsWithChildren, ReactElement } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ICardProperties } from \"../types/ICardAccountChild.types\";\r\n\r\nfunction TopCardAccount(props: PropsWithChildren<ICardProperties>): ReactElement {\r\n    const history = useHistory();\r\n    const routeChange = (student_id: string) =>{ \r\n        let path = '/students/detail'; \r\n        localStorage.removeItem('student_id');\r\n        localStorage.setItem('student_id', student_id.toString())\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-xl-12 col-md-12 mb-4\" onClick={() => {\r\n            routeChange(props.student_id)}}\r\n        >\r\n            <div className={`card shadow h-100 py-2`} id=\"topcard-account\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row no-gutters align-items-center\">\r\n                        <div className=\"col-xl-2 col-md-2\">\r\n                            <i className={`far fa-user-circle fa-7x text-gray-300`} id=\"icon-user\"></i>\r\n                        </div> \r\n                        <div className=\"col-xl-10 col-md-10\">\r\n                        <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"text-xs font-weight-bold text-green text-uppercase \">\r\n                                            <p className=\"fullname\">{props.fullname}</p>\r\n                                        </div>\r\n                                    </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-4 col-md 4\">\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"text-xs \">\r\n                                            <p className=\"birthday\">Email: {props.email}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"text-xs\">\r\n                                            <p className=\"birthday\">Ngày sinh: {props.birthday}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"text-xs\">\r\n                                            <p className=\"birthday\">Giới tính: {props.sex}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-xl-4 col-md 4\">\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"text-xs \">\r\n                                            <p className=\"birthday\">Khóa học đang học: </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"text-xs\">\r\n                                            <p className=\"birthday\">Cuộc thi tham gia:</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"text-xs\">\r\n                                            <p className=\"birthday\">Số buổi nghỉ: </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>            \r\n                    </div>                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default TopCardAccount;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TopCardAccount from \"../../common/components/TopCardAccount\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { IUser } from \"../../store/models/user.interface\";\r\n\r\nexport type accountChildListProps = {\r\n    onSelect?: (accountChild: IUser) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction AccountChildList(props: accountChildListProps): JSX.Element {\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n\r\n    const accountChildElements: (JSX.Element | null)[] = users.students.map((ele, index) => {\r\n        if (!ele) { return null; }\r\n        return (\r\n            <TopCardAccount \r\n                email={ele.email}\r\n                sex={ele.sex}\r\n                student_id={ele.id}\r\n                fullname={ele.firstName + ele.lastName} \r\n                icon=\"user\" class=\"primary\" \r\n                birthday={ele.dateOfBirth}\r\n                username={ele.username}\r\n            />\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            {accountChildElements}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AccountChildList;\r\n","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { editStudent, clearSelectedUser, setModificationState, addStudent } from \"../../store/actions/users.action\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { postUser } from \"../../common/service/User/PostUser\";\r\n\r\nexport type lessonListProps = {\r\n    isCheck: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\ntype Options = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\nfunction AccountChildForm(props: lessonListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const users: IUserState | null = useSelector((state: IStateType) => state.users);\r\n    let user: IUser | null = users.selectedUser;\r\n    const isCreate: boolean = (users.modificationState === UserModificationStatus.Create);\r\n\r\n    if (!user || isCreate) {\r\n        user = { id: \"\", username: \"\", email: \"\", status: \"\", password: \"\", firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: \"\" }\r\n    }\r\n\r\n    const [formState, setFormState] = useState({\r\n        username: { error: \"\", value: user.username },\r\n        email: { error: \"\", value: user.email },\r\n        password: { error: \"\", value: user.password },\r\n        birthday: { error: \"\", value: user.dateOfBirth }\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>) {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        props.isCheck(false);\r\n\r\n        let saveUserFn: Function = (isCreate) ? addStudent : editStudent;\r\n        saveForm(formState, saveUserFn);\r\n    }\r\n\r\n    function saveForm(formState: any, saveFn: Function): void {\r\n        if (user) {\r\n\r\n            const idx = toast.loading(\"Yêu cầu đang được gửi. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n\r\n            if (saveFn === addStudent) {\r\n                dispatch(postUser({\r\n                    username: formState.username.value,\r\n                    password: formState.password.value,\r\n                    email: formState.email.value,\r\n                    firstName: null,\r\n                    lastName: null,\r\n                    dateOfBirth: formState.birthday.value,\r\n                    profile_image_url: null,\r\n                    sex: null,\r\n                    phone: null,\r\n                    address: null,\r\n                    parent_id: localStorage.getItem('id'),\r\n                    roleNames: [\"STUDENT_USER\"]\r\n                }, idx))\r\n            }\r\n\r\n            console.log(saveFn)\r\n\r\n            dispatch(clearSelectedUser());\r\n            dispatch(setModificationState(UserModificationStatus.None));\r\n        }\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        props.isCheck(false);\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.username.error || formState.email.error || formState.password.error\r\n            || !formState.username.value || !formState.email.value || !formState.password.value) as boolean;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\" id=\"header-form-teacher-level\">Đăng kí tài khoản con</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-group\">\r\n\r\n                                    <TextInput id=\"input_username\"\r\n                                        field=\"username\"\r\n                                        value={formState.username.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={100}\r\n                                        label=\"Tên đăng nhập\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n\r\n                                    <TextInput id=\"input_email\"\r\n                                        field=\"email\"\r\n                                        value={formState.email.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={100}\r\n                                        label=\"Email\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_password\"\r\n                                        field=\"password\"\r\n                                        value={formState.password.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={100}\r\n                                        type=\"password\"\r\n                                        label=\"Mật khẩu\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n\r\n                                    <TextInput id=\"input_birthday\"\r\n                                        field=\"birthday\"\r\n                                        value={formState.birthday.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        type=\"date\"\r\n                                        required={true}\r\n                                        maxLength={100}\r\n                                        label=\"Ngày sinh\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default AccountChildForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess, fetchDataError } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getStudentByParent } from \"../Student/GetStudentByParent\";\r\n\r\nexport function postUser(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/registration`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postUser(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                getStudentByParent(dispatch, localStorage.getItem('id'))\r\n                toast.update(idx, { render: \"Thêm tài khoản con thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataSuccess(data))\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Thêm tài khoản con không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataSuccess, fetchDataError, addScheduleTimeClass, removeScheduleTimeClassAll } from \"../../../store/actions/schedule_time_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\ninterface ScheduleTimeClass {\r\n    class_name: string;\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\nexport function getScheduleTimeByParent(dispatch: any, parent_id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/classes/schedule-allchild/${parent_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getScheduleTimeByParent(dispatch, parent_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeScheduleTimeClassAll())\r\n                //console.log(data.body.schedule_time)\r\n                data.body.schedules.map((ele: any, index: any) => {\r\n                        let k = Object.values(ele)\r\n                        let xxas = Object.keys(ele)\r\n                        console.log(xxas)\r\n                        return k.map((ele_2: any) => {\r\n                            return Object.values(ele_2).map((ele_3: any) => {\r\n                                //console.log(ele_2)\r\n                                let x_1 = Object.values(ele_3)\r\n                                let y_1 = Object.keys(ele_3)\r\n                                console.log(y_1)\r\n                                return x_1.map((ele_4: any) => {\r\n                                    return ele_4.map((ele_5: any) => {\r\n                                        console.log(ele_5)\r\n                                        let xx = Object.values(ele_5)\r\n                                        return xx.map((ele_6: any) => {\r\n                                            return ele_6.map((ele_7: any) => {\r\n                                                if (ele_7.length > 0){\r\n                                                    let time: ScheduleTimeClass = {\r\n                                                        class_name: y_1[0] + \"( \" + xxas[0] + \" )\",\r\n                                                        start_time: ele_7[0],\r\n                                                        end_time: ele_7[1]\r\n                                                    }\r\n                                                    dispatch(addScheduleTimeClass(time))\r\n                                                }\r\n                                                return ele_7\r\n                                            })\r\n                                        }) \r\n                                        \r\n                                    })\r\n                                })\r\n                            })\r\n                        })\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { changeSelectedUser, setModificationState } from \"../../store/actions/users.action\";\r\nimport { IScheduleTimeClassState, IStateType, IUserRegisterJoinSemesterState, IUserState } from \"../../store/models/root.interface\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getStudentByParent } from \"../../common/service/Student/GetStudentByParent\";\r\nimport AccountChildList from \"./AccountChildList\";\r\nimport \"./ParentHome.css\"\r\nimport Popup from \"reactjs-popup\";\r\nimport AccountChildForm from \"../AccountChild/AccountChildForm\";\r\nimport { getScheduleTimeByParent } from \"../../common/service/ScheduleTimeClass/GetScheduleTimeByParent\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { ScheduleComponent, Day, Inject, ViewsDirective, ViewDirective } from \"@syncfusion/ej2-react-schedule\";\r\n\r\nimport \"@syncfusion/ej2-base/styles/material.css\";\r\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\r\nimport { getUserRegisterJoinSemesterByPayer } from \"../../common/service/UserRegisterJoinSemester/GetUserRegisterJoinSemesterByPayer\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\n\r\nconst ParentHome: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const schedule_time_classes: IScheduleTimeClassState = useSelector((state: IStateType) => state.schedule_time_classes);\r\n    const user_register_join_semesters: IUserRegisterJoinSemesterState = useSelector((state: IStateType) => state.user_register_join_semesters);\r\n    const numberChildCount: number = users.students.length;\r\n    const totalMoney: number = user_register_join_semesters.completed.reduce((prev, next) => prev + ((next.price * 1) || 0), 0);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const [checked, setChecked] = useState(true);\r\n\r\n    console.log(schedule_time_classes.schedule_time_classes)\r\n\r\n    const [popup, setPopup] = useState(false);\r\n\r\n    function onUserSelect(lesson: IUser): void {\r\n        dispatch(changeSelectedUser(lesson));\r\n        onUserRemove();\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n\r\n    function onUserRemove() {\r\n        setPopup(true);\r\n    }\r\n\r\n    function onRemovePopup(value: boolean) {\r\n        setPopup(false);\r\n    }\r\n\r\n    dispatch(updateCurrentPath(\"Trang chủ\", \"\"));\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getStudentByParent(dispatch, id))\r\n                    trackPromise(getScheduleTimeByParent(dispatch, id))\r\n                    trackPromise(getUserRegisterJoinSemesterByPayer(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getStudentByParent(dispatch, id))\r\n                trackPromise(getScheduleTimeByParent(dispatch, id))\r\n                trackPromise(getUserRegisterJoinSemesterByPayer(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, id]);\r\n\r\n    let data: object[] = []\r\n\r\n    schedule_time_classes.schedule_time_classes.map((ele, index) => {\r\n        if (ele !== undefined) {\r\n            return data.push({\r\n                Id: index,\r\n                Subject: ele.class_name !== undefined && ele.class_name !== null ? ele.class_name : \"\",\r\n                StartTime: new Date(ele.start_time),\r\n                EndTime: new Date(ele.end_time),\r\n                IsAllDay: false\r\n            })\r\n        }\r\n        return 1\r\n    })\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n                <ToastContainer />\r\n                <div className=\"row\">\r\n                    <TopCard title=\"TÀI KHOẢN CON\" text={`${numberChildCount}`} icon=\"user\" class=\"primary\" />\r\n                    <TopCard title=\"SỐ TIỀN\" text={`${totalMoney}`} icon=\"donate\" class=\"primary\" />\r\n                    <div className=\"col-xl-6 col-md-6 mb-4\" id=\"content-button-create-teacher-level\">\r\n                        <button className=\"btn btn-success btn-green mr-0\" id=\"btn-create-teacher-level\" onClick={() => {\r\n                            dispatch(setModificationState(UserModificationStatus.Create))\r\n                            onUserRemove()\r\n                        }}>\r\n                            <i className=\"fas fa fa-plus\"></i>\r\n                            Thêm tài khoản con\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\" id=\"search-box\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"input-group\" id=\"search-content\">\r\n                            <div className=\"form-outline\">\r\n                                <input type=\"text\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                                    setSearchTerm(event.target.value)\r\n                                    console.log(searchTerm)\r\n                                }} />\r\n                            </div>\r\n                            <button type=\"button\" className=\"btn btn-primary\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Popup\r\n                    open={popup}\r\n                    onClose={() => setPopup(false)}\r\n                    closeOnDocumentClick\r\n                >\r\n                    <>\r\n                        {\r\n                            function () {\r\n                                if ((users.modificationState === UserModificationStatus.Create) || ((users.selectedUser) && (users.modificationState === UserModificationStatus.Edit))) {\r\n                                    return <AccountChildForm isCheck={onRemovePopup} />\r\n                                }\r\n                            }()\r\n                        }\r\n                    </>\r\n                </Popup>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                            if (checked === false) {\r\n                                setChecked(true)\r\n                            }\r\n                        }} style={{\r\n                            color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Tài khoản con</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"30%\",\r\n                            backgroundColor: checked ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n                    <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                            if (checked === true) {\r\n                                setChecked(false)\r\n                            }\r\n                        }}\r\n                            style={{\r\n                                color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                            }}>Lịch trong ngày</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"30%\",\r\n                            backgroundColor: checked ? \"#ffffff\" : \"#F24E1E\"\r\n                        }}></div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    function () {\r\n                        if (checked === true) {\r\n                            return (\r\n                                <Fragment>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                            <h3 className=\" mb-2\" id=\"level-teacher\">Danh sách tài khoản con</h3>\r\n                                            <AccountChildList\r\n                                                onSelect={onUserSelect}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        else {\r\n                            return (\r\n                                <Fragment>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                            <h3 className=\" mb-2\" id=\"level-teacher\">Lịch trong ngày</h3>\r\n                                            <div className=\"card shadow mb-4\">\r\n                                                <div className=\"card-body\">\r\n                                                    <ScheduleComponent height='550px' selectedDate={new Date()} eventSettings={{\r\n                                                        dataSource: data, fields: {\r\n                                                            id: 'Id',\r\n                                                            subject: { name: 'Subject' },\r\n                                                            isAllDay: { name: 'IsAllDay' },\r\n                                                            startTime: { name: 'StartTime' },\r\n                                                            endTime: { name: 'EndTime' }\r\n                                                        }\r\n                                                    }}>\r\n\r\n                                                        <ViewsDirective>\r\n                                                            <ViewDirective option='Day' startHour='00:00' endHour='23:59' /> \r\n                                                        </ViewsDirective>\r\n                                                        <Inject services={[Day]} />\r\n                                                    </ScheduleComponent>\r\n\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                    }()\r\n                }\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default ParentHome;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ntype Props = {\r\n  correct: Boolean;\r\n  pickedColor: string;\r\n};\r\n\r\nconst ContentHeader = styled.header<Props>`\r\n  display: flex;\r\n  justify-content: center;\r\n  text-align: center;\r\n  letter-spacing: 4px;\r\n  padding-bottom: 24px;\r\n  background: ${(props) =>\r\n    props.correct ? props.pickedColor : \"rgb(68, 120, 197)\"};\r\n  color: white;\r\n  font-family: \"Dosis\", sans-serif;\r\n\r\n  h1 {\r\n    -webkit-text-stroke-width: 0.1px;\r\n    -webkit-text-stroke-color: black;\r\n    font-size: 3em;\r\n  }\r\n`;\r\n\r\n/* const PickedColor = styled.span`\r\n  font-size: 18px;\r\n  text-decoration: underline;\r\n`; */\r\n\r\nconst Header: React.FC<Props> = ({ correct, pickedColor }: Props) => {\r\n  return (\r\n    <ContentHeader correct={correct} pickedColor={pickedColor}>\r\n      <div>\r\n        <h1>Color Guessing Game</h1>\r\n        <p>\r\n          {/* Guess which block below is: <PickedColor>{pickedColor}</PickedColor> */}\r\n          Guess which block below is:\r\n        </p>\r\n      </div>\r\n    </ContentHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\n\r\ntype Props = {\r\n  color: string;\r\n  correct: Boolean;\r\n  pickedColor: string;\r\n  checkColor: Function;\r\n  visible: string;\r\n};\r\n\r\nconst MotionBlock = styled(motion.div)<{ visible: string }>`\r\n  border: 4px solid white;\r\n  width: 175px;\r\n  height: 175px;\r\n  border-radius: 30px;\r\n  margin: 40px;\r\n  background: ${(props) => props.color};\r\n  visibility: ${(props) => props.visible};\r\n\r\n  transition: border 0.5s;\r\n  :hover {\r\n    border: 3px solid black;\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    width: 100px;\r\n    height: 100px;\r\n    margin: 16px;\r\n  }\r\n`;\r\n\r\nconst ColorBlock: React.FC<Props> = ({\r\n  color,\r\n  correct,\r\n  pickedColor,\r\n  checkColor,\r\n}: Props) => {\r\n  const [visible, setVisibility] = useState(\"visible\");\r\n\r\n  useEffect(() => {\r\n    setVisibility(\"visible\");\r\n  }, [color]);\r\n\r\n  return (\r\n    <MotionBlock\r\n      transition={{ duration: 0.2 }}\r\n      whileHover={{ scale: 1.2, rotate: 90, y: -13 }}\r\n      whileTap={{ scale: 0.8, rotate: -90, borderRadius: \"100%\" }}\r\n      color={color}\r\n      visible={visible}\r\n      onClick={() => !correct && setVisibility(checkColor(color, pickedColor))}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ColorBlock;\r\n","import React from \"react\";\r\nimport ColorBlock from \"./components/ColorBlock\";\r\nimport styled from \"styled-components\";\r\n\r\ntype Props = {\r\n  colors: Array<string>;\r\n  correct: Boolean;\r\n  difficulty: number;\r\n  pickedColor: string;\r\n  handleCorrect: Function;\r\n  handleGameColors: Function;\r\n  handleMessage: Function;\r\n  handleButtonMessage: Function;\r\n};\r\n\r\nconst GameSection = styled.section`\r\n  padding: 64px 0px;\r\n  padding-bottom: 120px;\r\n  display: flex;\r\n  justify-content: center;\r\n  background: rgb(22, 20, 68);\r\n  background: linear-gradient(\r\n    90deg,\r\n    rgba(22, 20, 68, 1) 0%,\r\n    rgba(32, 32, 72, 1) 100%\r\n  );\r\n\r\n  @media (max-width: 767px) {\r\n    padding: 32px 0px;\r\n    padding-bottom: 80px;\r\n  }\r\n`;\r\n\r\nconst ColorGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 30% 30% 30%;\r\n`;\r\n\r\nconst Game: React.FC<Props> = ({\r\n  colors,\r\n  correct,\r\n  difficulty,\r\n  pickedColor,\r\n  handleCorrect,\r\n  handleGameColors,\r\n  handleMessage,\r\n  handleButtonMessage,\r\n}: Props) => {\r\n  const changeColors = (color: string) => {\r\n    colors = [];\r\n    for (let i = 0; i < difficulty; i++) {\r\n      colors.push(color);\r\n    }\r\n    handleGameColors(colors);\r\n  };\r\n\r\n  const checkColor = (divColor: string, correctColor: string) => {\r\n    if (divColor === correctColor) {\r\n      changeColors(correctColor);\r\n      handleCorrect(true);\r\n      handleMessage(\"CORRECT!\");\r\n      handleButtonMessage(\"PLAY AGAIN?\");\r\n\r\n      let gamesWonArr: string[] = [];\r\n      var id_x = localStorage.getItem(\"gamesWon\");\r\n\r\n      if (id_x !== null) {\r\n        gamesWonArr = id_x.split(\",\")!;\r\n        gamesWonArr.push(\"1\");\r\n      }\r\n      localStorage.setItem(\"gamesWon\", gamesWonArr.toString());\r\n\r\n      let averageDifficultyArr: string[] = [];\r\n      var id_y = localStorage.getItem(\"averageDifficulty\");\r\n\r\n      if ( id_y !== null) {\r\n        averageDifficultyArr = id_y.split(\",\")!;\r\n        averageDifficultyArr.push(difficulty.toString());\r\n      }\r\n      localStorage.setItem(\r\n        \"averageDifficulty\",\r\n        averageDifficultyArr.toString()\r\n      );\r\n\r\n      return \"visible\";\r\n    } else {\r\n      handleMessage(\"TRY AGAIN\");\r\n      return \"hidden\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GameSection>\r\n      <ColorGrid>\r\n        {colors.map((color: string, index: number) => {\r\n          return (\r\n            <ColorBlock\r\n              key={index}\r\n              color={color}\r\n              correct={correct}\r\n              pickedColor={pickedColor}\r\n              checkColor={checkColor}\r\n              visible={\"visible\"}\r\n            />\r\n          );\r\n        })}\r\n      </ColorGrid>\r\n    </GameSection>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ntype Props = {\r\n  correct: Boolean;\r\n};\r\n\r\nconst PageBase = styled.section`\r\n  display: flex;\r\n  justify-content: center;\r\n  background: rgb(22, 20, 68);\r\n  background: linear-gradient(\r\n    90deg,\r\n    rgba(22, 20, 68, 1) 0%,\r\n    rgba(32, 32, 72, 1) 100%\r\n  );\r\n`;\r\n\r\nconst ScoreboardContainer = styled.div`\r\n  font-family: \"Dosis\", sans-serif;\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  padding-bottom: 50px;\r\n  margin-bottom: 100px;\r\n  width: 60%;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst ScoreboardTitle = styled.h1`\r\n  font-size: 40px;\r\n  letter-spacing: 4px;\r\n  text-align: center;\r\n  margin-top: 0px;\r\n  margin-bottom: 0px;\r\n  padding-top: 12px;\r\n  padding-bottom: 24px;\r\n  background-image: linear-gradient(\r\n    90deg,\r\n    rgba(199, 0, 205, 1) 0%,\r\n    rgba(91, 12, 121, 1) 100%,\r\n    rgba(22, 20, 68, 1) 100%\r\n  );\r\n  background-size: 100%;\r\n  background-repeat: repeat;\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n`;\r\n\r\nconst FlexWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst StatTitle = styled.p`\r\n  width: 70%;\r\n  font-size: 40px;\r\n  letter-spacing: 4px;\r\n  color: rgba(199, 0, 205, 1);\r\n  padding-left: 20px;\r\n  padding-bottom: 12px;\r\n  border-bottom: 4px solid black;\r\n  @media (max-width: 768px) {\r\n    font-weight: 600;\r\n    font-size: 24px;\r\n  }\r\n`;\r\n\r\nconst StatValue = styled.p`\r\n  width: 30%;\r\n  font-size: 40px;\r\n  letter-spacing: 4px;\r\n  color: rgba(199, 0, 205, 1);\r\n  text-align: center;\r\n  border-left: 4px solid black;\r\n  border-bottom: 4px solid black;\r\n  @media (max-width: 768px) {\r\n    font-weight: 600;\r\n    font-size: 24px;\r\n  }\r\n`;\r\n\r\nconst Scoreboard = ({ correct }: Props) => {\r\n  const [gamesWon, setGamesWon] = useState(0);\r\n  const [averageDifficulty, setAverageDifficulty] = useState(\"6\");\r\n\r\n  useEffect(() => {\r\n    if (correct === true) {\r\n      let wins: string[] = [];\r\n      var id_x = localStorage.getItem(\"gamesWon\");\r\n      if (id_x !== null) {\r\n        wins = id_x.split(\",\")!;\r\n      }\r\n      setGamesWon(wins.length - 1);\r\n\r\n      let avgDifficulty: string[] = [];\r\n      var id_y = localStorage.getItem(\"averageDifficulty\");\r\n      if (id_y !== null) {\r\n        avgDifficulty = id_y.split(\",\")!;\r\n        const difficultyMode = mode(avgDifficulty);\r\n        if (difficultyMode) {\r\n          setAverageDifficulty(difficultyMode);\r\n        }\r\n      }\r\n    }\r\n  }, [correct]);\r\n\r\n  const mode = (arr: string[]) => {\r\n    return arr\r\n      .sort(\r\n        (a, b) =>\r\n          arr.filter((v) => v === a).length - arr.filter((v) => v === b).length\r\n      )\r\n      .pop();\r\n  };\r\n\r\n  const init = () => {\r\n    let wins: string[] = [];\r\n    var id_x = localStorage.getItem(\"gamesWon\");\r\n    if ( id_x !== null) {\r\n      wins = id_x.split(\",\")!;\r\n    }\r\n    setGamesWon(wins.length === 0 ? 0 : wins.length - 1);\r\n\r\n    let avgDifficulty: string[] = [];\r\n    var id_y = localStorage.getItem(\"averageDifficulty\");\r\n    if (id_y != null) {\r\n      avgDifficulty = id_y.split(\",\")!;\r\n      const difficultyMode = mode(avgDifficulty);\r\n      if (difficultyMode) {\r\n        setAverageDifficulty(difficultyMode);\r\n      }\r\n    } else {\r\n      setAverageDifficulty(avgDifficulty.length.toString());\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n  });\r\n\r\n  const difficultyMap = useMemo(() => {\r\n    if (averageDifficulty === \"3\") {\r\n      return \"Easy\";\r\n    } else if (averageDifficulty === \"6\") {\r\n      return \"Medium\";\r\n    } else if (averageDifficulty === \"9\") {\r\n      return \"Hard\";\r\n    }\r\n  }, [averageDifficulty]);\r\n\r\n  const scoreBoardStats: object[] = [\r\n    {\r\n      title: \"Games Won\",\r\n      value: gamesWon,\r\n    },\r\n    {\r\n      title: \"Favorite Difficulty\",\r\n      value: difficultyMap ? difficultyMap : \"Medium\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageBase>\r\n      <ScoreboardContainer>\r\n        <ScoreboardTitle>SCOREBOARD</ScoreboardTitle>\r\n        {scoreBoardStats.map((stat: any) => {\r\n          return (\r\n            <FlexWrap>\r\n              <StatTitle>{stat.title}</StatTitle>\r\n              <StatValue>{stat.value}</StatValue>\r\n            </FlexWrap>\r\n          );\r\n        })}\r\n      </ScoreboardContainer>\r\n    </PageBase>\r\n  );\r\n};\r\n\r\nexport default Scoreboard;\r\n","import React, { useCallback, useState, useEffect, Dispatch } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport Header from \"./Header\";\r\nimport Game from \"./Game\";\r\nimport Scoreboard from \"./Scoreboard\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\ntype ButtonTypes = {\r\n  buttonDifficulty: number;\r\n  gameDifficulty: number;\r\n};\r\n\r\nconst MenuBar = styled.section`\r\n  display: flex;\r\n  justify-content: center;\r\n  background: rgb(22, 20, 68);\r\n  background: linear-gradient(\r\n    90deg,\r\n    rgba(22, 20, 68, 1) 0%,\r\n    rgba(32, 32, 72, 1) 100%\r\n  );\r\n  height: 40px;\r\n  font-family: \"Dosis\", sans-serif;\r\n`;\r\n\r\nconst MenuButton = styled(motion.button)`\r\n  font-family: \"Dosis\", sans-serif;\r\n  border: 0px;\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  letter-spacing: 1.5px;\r\n  background: rgba(0, 0, 0, 0);\r\n  color: white;\r\n  outline: none;\r\n  font-weight: 600;\r\n\r\n  transition: background 0.3s, color 0.3s;\r\n  :hover {\r\n    color: rgb(22, 20, 68);\r\n    background: white;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst DifficultyButton = styled(MenuButton)<ButtonTypes>`\r\n  margin: 0px 4px;\r\n\r\n  background: ${(props) =>\r\n    props.buttonDifficulty === props.gameDifficulty && \"white\"};\r\n\r\n  color: ${(props) =>\r\n    props.buttonDifficulty === props.gameDifficulty\r\n      ? \"rgb(22, 20, 68)\"\r\n      : \"white\"};\r\n`;\r\n\r\nconst Message = styled.span`\r\n  width: 30%;\r\n  padding: 8px 0px;\r\n  text-align: center;\r\n  letter-spacing: 1.5px;\r\n  color: white;\r\n`;\r\n\r\nconst GuessColor = () => {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  dispatch(updateCurrentPath(\"Trò chơi\", \"\"));\r\n  const [difficulty, setDifficulty] = useState(6);\r\n  const [gameColors, setGameColors] = useState([\r\n    \"rgb(91, 99, 77)\",\r\n    \"rgb(200, 88, 111)\",\r\n    \"rgb(90, 90, 88)\",\r\n    \"rgb(100, 110, 120)\",\r\n    \"rgb(91, 200, 105)\",\r\n    \"rgb(8, 38, 240)\",\r\n  ]);\r\n  const [pickedColor, setPickedColor] = useState(\"rgb(200, 88, 111)\");\r\n  const [correct, setCorrect] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [playButtonMessage, setPlayButtonMessage] = useState(\"NEW COLORS\");\r\n\r\n  const randomColor = () => {\r\n    const r = Math.floor(Math.random() * 256);\r\n    const g = Math.floor(Math.random() * 256);\r\n    const b = Math.floor(Math.random() * 256);\r\n    return `rgb(${r}, ${g}, ${b})`;\r\n  };\r\n\r\n  const generateRandomColors = useCallback((num: number) => {\r\n    let colors = [];\r\n    for (let i = 0; i < num; i++) {\r\n      colors.push(randomColor());\r\n    }\r\n\r\n    const randomIndex = Math.floor(Math.random() * colors.length);\r\n    setPickedColor(colors[randomIndex]);\r\n\r\n    return colors;\r\n  }, []);\r\n\r\n  const resetGame = useCallback(() => {\r\n    setCorrect(false);\r\n    setGameColors(generateRandomColors(difficulty));\r\n    setPlayButtonMessage(\"NEW COLORS\");\r\n    setMessage(\"\");\r\n  }, [generateRandomColors, difficulty]);\r\n\r\n  const setupLocalStorage = () => {\r\n    let gamesWon: string[] = [];\r\n    var id_x = localStorage.getItem(\"gamesWon\");\r\n    if (id_x !== null) {\r\n      gamesWon = id_x.split(\",\")!;\r\n    }\r\n    localStorage.setItem(\"gamesWon\", gamesWon.toString());\r\n\r\n    let averageDifficulty: string[] = [];\r\n    var id_y = localStorage.getItem(\"averageDifficulty\");\r\n    if ( id_y !== null) {\r\n      averageDifficulty = id_y.split(\",\")!;\r\n    }\r\n    localStorage.setItem(\"averageDifficulty\", averageDifficulty.toString());\r\n  };\r\n\r\n  const init = useCallback(() => {\r\n    setGameColors(generateRandomColors(difficulty));\r\n    setupLocalStorage();\r\n  }, [generateRandomColors, difficulty]);\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, [init]);\r\n\r\n  useEffect(() => {\r\n    resetGame();\r\n  }, [resetGame, difficulty]);\r\n\r\n  const difficultyButtons = [\r\n    {\r\n      difficulty: 3,\r\n      text: \"EASY\",\r\n    },\r\n    {\r\n      difficulty: 6,\r\n      text: \"MEDIUM\",\r\n    },\r\n    {\r\n      difficulty: 9,\r\n      text: \"HARD\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Header pickedColor={pickedColor} correct={correct} />\r\n      <div className=\"row pick-color mb-2 mt-2 mr-2 ml-2 text-center justify-content-md-center justify-content-center\">\r\n        <div className=\"col-xl-2 col-md-12 col-xs-12\" style={{backgroundColor: pickedColor, height: \"160px\", width: '100px', border: 'border: 4px solid white', borderRadius: '30px'}}>\r\n        </div>\r\n      </div>\r\n      \r\n      <MenuBar>\r\n        <MenuButton\r\n          onClick={() => resetGame()}\r\n          whileHover={{ scale: 1.1, transition: { duration: 0.75 } }}\r\n          whileTap={{ scale: 1 }}\r\n        >\r\n          {playButtonMessage}\r\n        </MenuButton>\r\n        <Message>{message}</Message>\r\n        {difficultyButtons.map((button) => {\r\n          return (\r\n            <DifficultyButton\r\n              key={button.difficulty}\r\n              onClick={() => setDifficulty(button.difficulty)}\r\n              buttonDifficulty={button.difficulty}\r\n              gameDifficulty={difficulty}\r\n              whileHover={{ scale: 1.1, transition: { duration: 0.75 } }}\r\n              whileTap={{ scale: 1 }}\r\n            >\r\n              {button.text}\r\n            </DifficultyButton>\r\n          );\r\n        })}\r\n      </MenuBar>\r\n      <Game\r\n        pickedColor={pickedColor}\r\n        colors={gameColors}\r\n        difficulty={difficulty}\r\n        correct={correct}\r\n        handleGameColors={setGameColors}\r\n        handleCorrect={setCorrect}\r\n        handleMessage={setMessage}\r\n        handleButtonMessage={setPlayButtonMessage}\r\n      />\r\n      <Scoreboard correct={correct} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GuessColor;\r\n","import { ICourseParent, CourseParentModificationStatus } from \"../models/course_parent.interface\";\r\n\r\n// register_successfull_course_parents\r\nexport const ADD_DOING_COURSE: string = \"ADD_DOING_COURSE\";\r\nexport const EDIT_DOING_COURSE: string = \"EDIT_DOING_COURSE\";\r\nexport const REMOVE_DOING_COURSE: string = \"REMOVE_DOING_COURSE\";\r\nexport const CHANGE_DOING_COURSE_AMOUNT: string = \"CHANGE_DOING_COURSE_AMOUNT\";\r\nexport const CHANGE_DOING_COURSE_PENDING_EDIT: string = \"CHANGE_DOING_COURSE_PENDING_EDIT\";\r\nexport const CLEAR_DOING_COURSE_PENDING_EDIT: string = \"CLEAR_DOING_COURSE_PENDING_EDIT\";\r\nexport const REMOVE_DOING_COURSE_ALL: string = \"REMOVE_DOING_COURSE_ALL\";\r\nexport const INITIAL_DOING_COURSE: string = \"INITIAL_DOING_COURSE\";\r\n\r\n// not_register_course_parents\r\nexport const ADD_DONE_COURSE: string = \"ADD_DONE_COURSE\";\r\nexport const EDIT_DONE_COURSE: string = \"EDIT_DONE_COURSE\";\r\nexport const REMOVE_DONE_COURSE: string = \"REMOVE_DONE_COURSE\";\r\nexport const CHANGE_DONE_COURSE_AMOUNT: string = \"CHANGE_DONE_COURSE_AMOUNT\";\r\nexport const CHANGE_DONE_COURSE_PENDING_EDIT: string = \"CHANGE_DONE_COURSE_PENDING_EDIT\";\r\nexport const CLEAR_DONE_COURSE_PENDING_EDIT: string = \"CLEAR_DONE_COURSE_PENDING_EDIT\";\r\nexport const REMOVE_DONE_COURSE_ALL: string = \"REMOVE_DONE_COURSE_ALL\";\r\nexport const INITIAL_DONE_COURSE: string = \"INITIAL_DONE_COURSE\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course_parent: ICourseParent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course_parent\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCourseNotRegistedNow(course_parent: ICourseParent): IInitialCourseNotRegistedNowActionType {\r\n    return { type: INITIAL_DOING_COURSE, course_parent: course_parent };\r\n}\r\n\r\nexport function removeCourseNotRegistedNowAll(): IRemoveCourseNotRegistedNowAllActionType {\r\n    return { type: REMOVE_DOING_COURSE_ALL };\r\n}\r\n\r\nexport function addCourseNotRegistedNow(course_parent: ICourseParent): IAddCourseNotRegistedNowActionType {\r\n    return { type: ADD_DOING_COURSE, course_parent: course_parent };\r\n}\r\n\r\nexport function editCourseNotRegistedNow(course_parent: ICourseParent): IEditCourseNotRegistedNowActionType {\r\n    return { type: EDIT_DOING_COURSE, course_parent: course_parent };\r\n}\r\n\r\nexport function removeCourseNotRegistedNow(id: string): IRemoveCourseNotRegistedNowActionType {\r\n    return { type: REMOVE_DOING_COURSE, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseNotRegistedNow(course_parent: ICourseParent): IChangeSelectedCourseNotRegistedNowActionType {\r\n    return { type: CHANGE_DOING_COURSE_PENDING_EDIT, course_parent: course_parent };\r\n}\r\n\r\nexport function clearSelectedCourseNotRegistedNow(): IClearSelectedCourseNotRegistedNowActionType {\r\n    return { type: CLEAR_DOING_COURSE_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialCourseRegisted(course_parent: ICourseParent): IInitialCourseRegistedActionType {\r\n    return { type: INITIAL_DONE_COURSE, course_parent: course_parent };\r\n}\r\n\r\nexport function removeCourseRegistedAll(): IRemoveCourseRegistedAllActionType {\r\n    return { type: REMOVE_DONE_COURSE_ALL };\r\n}\r\n\r\nexport function addCourseRegisted(course_parent: ICourseParent): IAddCourseRegistedActionType {\r\n    return { type: ADD_DONE_COURSE, course_parent: course_parent };\r\n}\r\n\r\nexport function editCourseRegisted(course_parent: ICourseParent): IEditCourseRegistedActionType {\r\n    return { type: EDIT_DONE_COURSE, course_parent: course_parent };\r\n}\r\n\r\nexport function removeCourseRegisted(id: string): IRemoveCourseRegistedActionType {\r\n    return { type: REMOVE_DONE_COURSE, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseRegisted(course_parent: ICourseParent): IChangeSelectedCourseRegistedActionType {\r\n    return { type: CHANGE_DONE_COURSE_PENDING_EDIT, course_parent: course_parent };\r\n}\r\n\r\nexport function clearSelectedCourseRegisted(): IClearSelectedCourseRegistedActionType {\r\n    return { type: CLEAR_DONE_COURSE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseParentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_course_parents\r\ninterface IAddCourseNotRegistedNowActionType { type: string, course_parent: ICourseParent };\r\ninterface IEditCourseNotRegistedNowActionType { type: string, course_parent: ICourseParent };\r\ninterface IRemoveCourseNotRegistedNowActionType { type: string, id: string };\r\ninterface IChangeSelectedCourseNotRegistedNowActionType { type: string, course_parent: ICourseParent };\r\ninterface IClearSelectedCourseNotRegistedNowActionType { type: string };\r\ninterface IRemoveCourseNotRegistedNowAllActionType { type: string }\r\ninterface IInitialCourseNotRegistedNowActionType {type: string, course_parent: ICourseParent}\r\n\r\n// not_register_course_parents\r\ninterface IAddCourseRegistedActionType { type: string, course_parent: ICourseParent };\r\ninterface IEditCourseRegistedActionType { type: string, course_parent: ICourseParent };\r\ninterface IRemoveCourseRegistedActionType { type: string, id: string };\r\ninterface IChangeSelectedCourseRegistedActionType { type: string, course_parent: ICourseParent };\r\ninterface IClearSelectedCourseRegistedActionType { type: string };\r\ninterface IRemoveCourseRegistedAllActionType { type: string }\r\ninterface IInitialCourseRegistedActionType {type: string, course_parent: ICourseParent}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  CourseParentModificationStatus};","import { fetchDataSuccess, fetchDataError, removeCourseRegistedAll, removeCourseNotRegistedNowAll, addCourseNotRegistedNow, addCourseRegisted } from \"../../../store/actions/course_parent.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface CourseParent {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    creator_id: string;\r\n    art_type_id: string;\r\n    art_type_name: string;\r\n    art_level_id: string;\r\n    art_level_name: string;\r\n    art_age_id: string;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getCourseParent(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/course/parent/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getCourseParent(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeCourseNotRegistedNowAll())\r\n                dispatch(removeCourseRegistedAll())\r\n                console.log(data.body.courses_registed)\r\n                console.log(data.body.courses_not_registed_now)\r\n                data.body.courses_registed.map((ele: any, index: any) => {\r\n                    var classes_parent: CourseParent = {\r\n                        id: ele.id,\r\n                        is_enabled: ele.is_enabled,\r\n                        creator_id: ele.creator_id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_level_id: ele.art_level_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    console.log(classes_parent)\r\n                    return dispatch(addCourseRegisted(classes_parent))\r\n                })\r\n\r\n                data.body.courses_not_registed_now.map((ele: any, index: any) => {\r\n                    var classes_parent: CourseParent = {\r\n                        id: ele.id,\r\n                        is_enabled: ele.is_enabled,\r\n                        creator_id: ele.creator_id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_level_id: ele.art_level_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    console.log(classes_parent)\r\n                    return dispatch(addCourseNotRegistedNow(classes_parent))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { ICourseParentState, IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./CourseTeacher.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getCourseParent } from \"../../common/service/CourseParent/GetCourseParent\";\r\n\r\nconst CourseParent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const course_teachers: ICourseParentState = useSelector((state: IStateType) => state.course_parents);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberParentRegisterSuccessfullCount: number = course_teachers.courses_registed.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    console.log(course_teachers)\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getCourseParent(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getCourseParent(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khóa học\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n    const [checked, setChecked] = useState(true);\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"ĐÃ ĐĂNG KÍ\" text={`${numberParentRegisterSuccessfullCount}`} icon=\"book\" class=\"primary\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(ParentRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked === false) {\r\n                            setChecked(true)\r\n                        }\r\n                    }} style={{\r\n                        color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Khám phá</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked === true) {\r\n                            setChecked(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                        }}>Đã đăng kí</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#ffffff\" : \"#F24E1E\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    \r\n\r\n\r\n                                </div>\r\n\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    \r\n                                </div>\r\n\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default CourseParent;\r\n","import { IContestStudent, ContestStudentModificationStatus } from \"../models/contest_student.interface\";\r\n\r\n// contest_opening\r\nexport const ADD_CONTEST_STUDENT_OPENING: string = \"ADD_CONTEST_STUDENT_OPENING\";\r\nexport const EDIT_CONTEST_STUDENT_OPENING: string = \"EDIT_CONTEST_STUDENT_OPENING\";\r\nexport const REMOVE_CONTEST_STUDENT_OPENING: string = \"REMOVE_CONTEST_STUDENT_OPENING\";\r\nexport const CHANGE_CONTEST_STUDENT_OPENING_AMOUNT: string = \"CHANGE_CONTEST_STUDENT_OPENING_AMOUNT\";\r\nexport const CHANGE_CONTEST_STUDENT_OPENING_PENDING_EDIT: string = \"CHANGE_CONTEST_STUDENT_OPENING_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_STUDENT_OPENING_PENDING_EDIT: string = \"CLEAR_CONTEST_STUDENT_OPENING_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_STUDENT_OPENING_ALL: string = \"REMOVE_CONTEST_STUDENT_OPENING_ALL\";\r\nexport const INITIAL_CONTEST_STUDENT_OPENING: string = \"INITIAL_CONTEST_STUDENT_OPENING\";\r\n\r\n// contest_not_open_now_not_student\r\nexport const ADD_CONTEST_STUDENT_NEW: string = \"ADD_CONTEST_STUDENT_NEW\";\r\nexport const EDIT_CONTEST_STUDENT_NEW: string = \"EDIT_CONTEST_STUDENT_NEW\";\r\nexport const REMOVE_CONTEST_STUDENT_NEW: string = \"REMOVE_CONTEST_STUDENT_NEW\";\r\nexport const CHANGE_CONTEST_STUDENT_NEW_AMOUNT: string = \"CHANGE_CONTEST_STUDENT_NEW_AMOUNT\";\r\nexport const CHANGE_CONTEST_STUDENT_NEW_PENDING_EDIT: string = \"CHANGE_CONTEST_STUDENT_NEW_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_STUDENT_NEW_PENDING_EDIT: string = \"CLEAR_CONTEST_STUDENT_NEW_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_STUDENT_NEW_ALL: string = \"REMOVE_CONTEST_STUDENT_NEW_ALL\";\r\nexport const INITIAL_CONTEST_STUDENT_NEW: string = \"INITIAL_CONTEST_STUDENT_NEW\";\r\n\r\n// contest_end\r\nexport const ADD_CONTEST_STUDENT_END: string = \"ADD_CONTEST_STUDENT_END\";\r\nexport const EDIT_CONTEST_STUDENT_END: string = \"EDIT_CONTEST_STUDENT_END\";\r\nexport const REMOVE_CONTEST_STUDENT_END: string = \"REMOVE_CONTEST_STUDENT_END\";\r\nexport const CHANGE_CONTEST_STUDENT_END_AMOUNT: string = \"CHANGE_CONTEST_STUDENT_END_AMOUNT\";\r\nexport const CHANGE_CONTEST_STUDENT_END_PENDING_EDIT: string = \"CHANGE_CONTEST_STUDENT_END_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_STUDENT_END_PENDING_EDIT: string = \"CLEAR_CONTEST_STUDENT_END_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_STUDENT_END_ALL: string = \"REMOVE_CONTEST_STUDENT_END_ALL\";\r\nexport const INITIAL_CONTEST_STUDENT_END: string = \"INITIAL_CONTEST_STUDENT_END\";\r\n\r\n//contest_not_open_now\r\nexport const ADD_CONTEST_STUDENT_NOT_OPEN_NOW: string = \"ADD_CONTEST_STUDENT_NOT_OPEN_NOW\";\r\nexport const EDIT_CONTEST_STUDENT_NOT_OPEN_NOW: string = \"EDIT_CONTEST_STUDENT_NOT_OPEN_NOW\";\r\nexport const REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW: string = \"REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW\";\r\nexport const CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_AMOUNT: string = \"CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_AMOUNT\";\r\nexport const CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT: string = \"CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT: string = \"CLEAR_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW_ALL: string = \"REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW_ALL\";\r\nexport const INITIAL_CONTEST_STUDENT_NOT_OPEN_NOW: string = \"INITIAL_CONTEST_STUDENT_NOT_OPEN_NOW\";\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(contest: IContestStudent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        contest\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\n// Opening\r\nexport function initialContestStudentOpening(contest: IContestStudent): IInitialContestStudentOpeningActionType {\r\n    return { type: INITIAL_CONTEST_STUDENT_OPENING, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentOpeningAll(): IRemoveContestStudentOpeningAllActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_OPENING_ALL };\r\n}\r\n\r\nexport function addContestStudentOpening(contest: IContestStudent): IAddContestStudentOpeningActionType {\r\n    return { type: ADD_CONTEST_STUDENT_OPENING, contest: contest };\r\n}\r\n\r\nexport function editContestStudentOpening(contest: IContestStudent): IEditContestStudentOpeningActionType {\r\n    return { type: EDIT_CONTEST_STUDENT_OPENING, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentOpening(id: string): IRemoveContestStudentOpeningActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_OPENING, id: id };\r\n}\r\n\r\nexport function changeSelectedContestStudentOpening(contest: IContestStudent): IChangeSelectedContestStudentOpeningActionType {\r\n    return { type: CHANGE_CONTEST_STUDENT_OPENING_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestStudentOpening(): IClearSelectedContestStudentOpeningActionType {\r\n    return { type: CLEAR_CONTEST_STUDENT_OPENING_PENDING_EDIT };\r\n}\r\n\r\n// Not open not student\r\nexport function initialContestStudentNew(contest: IContestStudent): IInitialContestStudentNewActionType {\r\n    return { type: INITIAL_CONTEST_STUDENT_NEW, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentNewAll(): IRemoveContestStudentNewAllActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_NEW_ALL };\r\n}\r\n\r\nexport function addContestStudentNew(contest: IContestStudent): IAddContestStudentNewActionType {\r\n    return { type: ADD_CONTEST_STUDENT_NEW, contest: contest };\r\n}\r\n\r\nexport function editContestStudentNew(contest: IContestStudent): IEditContestStudentNewActionType {\r\n    return { type: EDIT_CONTEST_STUDENT_NEW, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentNew(id: string): IRemoveContestStudentNewActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_NEW, id: id };\r\n}\r\n\r\nexport function changeSelectedContestNew(contest: IContestStudent): IChangeSelectedContestStudentNewActionType {\r\n    return { type: CHANGE_CONTEST_STUDENT_NEW_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestStudentNew(): IClearSelectedContestStudentNewActionType {\r\n    return { type: CLEAR_CONTEST_STUDENT_NEW_PENDING_EDIT };\r\n}\r\n\r\n// End\r\nexport function initialContestStudentEnd(contest: IContestStudent): IInitialContestStudentEndActionType {\r\n    return { type: INITIAL_CONTEST_STUDENT_END, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentEndAll(): IRemoveContestStudentEndAllActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_END_ALL };\r\n}\r\n\r\nexport function addContestStudentEnd(contest: IContestStudent): IAddContestStudentEndActionType {\r\n    return { type: ADD_CONTEST_STUDENT_END, contest: contest };\r\n}\r\n\r\nexport function editContestStudentEnd(contest: IContestStudent): IEditContestStudentEndActionType {\r\n    return { type: EDIT_CONTEST_STUDENT_END, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentEnd(id: string): IRemoveContestStudentEndActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_END, id: id };\r\n}\r\n\r\nexport function changeSelectedContestStudentEnd(contest: IContestStudent): IChangeSelectedContestStudentEndActionType {\r\n    return { type: CHANGE_CONTEST_STUDENT_END_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestStudentEnd(): IClearSelectedContestStudentEndActionType {\r\n    return { type: CLEAR_CONTEST_STUDENT_END_PENDING_EDIT };\r\n}\r\n\r\n// Not open now\r\nexport function initialContestStudentNotOpenNow(contest: IContestStudent): IInitialContestStudentNotOpenNowActionType {\r\n    return { type: INITIAL_CONTEST_STUDENT_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentNotOpenNowAll(): IRemoveContestStudentNotOpenNowAllActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW_ALL };\r\n}\r\n\r\nexport function addContestStudentNotOpenNow(contest: IContestStudent): IAddContestStudentNotOpenNowActionType {\r\n    return { type: ADD_CONTEST_STUDENT_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function editContestStudentNotOpenNow(contest: IContestStudent): IEditContestStudentNotOpenNowActionType {\r\n    return { type: EDIT_CONTEST_STUDENT_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentNotOpenNow(id: string): IRemoveContestStudentNotOpenNowActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedContestStudentNotOpenNow(contest: IContestStudent): IChangeSelectedContestStudentNotOpenNowActionType {\r\n    return { type: CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestStudentNotOpenNow(): IClearSelectedContestStudentNotOpenNowActionType {\r\n    return { type: CLEAR_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function setModificationState(value: ContestStudentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_contests\r\ninterface IAddContestStudentOpeningActionType { type: string, contest: IContestStudent };\r\ninterface IEditContestStudentOpeningActionType { type: string, contest: IContestStudent };\r\ninterface IRemoveContestStudentOpeningActionType { type: string, id: string };\r\ninterface IChangeSelectedContestStudentOpeningActionType { type: string, contest: IContestStudent };\r\ninterface IClearSelectedContestStudentOpeningActionType { type: string };\r\ninterface IRemoveContestStudentOpeningAllActionType { type: string }\r\ninterface IInitialContestStudentOpeningActionType {type: string, contest: IContestStudent}\r\n\r\n// not_register_contests\r\ninterface IAddContestStudentNewActionType { type: string, contest: IContestStudent };\r\ninterface IEditContestStudentNewActionType { type: string, contest: IContestStudent };\r\ninterface IRemoveContestStudentNewActionType { type: string, id: string };\r\ninterface IChangeSelectedContestStudentNewActionType { type: string, contest: IContestStudent };\r\ninterface IClearSelectedContestStudentNewActionType { type: string };\r\ninterface IRemoveContestStudentNewAllActionType { type: string }\r\ninterface IInitialContestStudentNewActionType {type: string, contest: IContestStudent}\r\n\r\n// not_register_contests\r\ninterface IAddContestStudentEndActionType { type: string, contest: IContestStudent };\r\ninterface IEditContestStudentEndActionType { type: string, contest: IContestStudent };\r\ninterface IRemoveContestStudentEndActionType { type: string, id: string };\r\ninterface IChangeSelectedContestStudentEndActionType { type: string, contest: IContestStudent };\r\ninterface IClearSelectedContestStudentEndActionType { type: string };\r\ninterface IRemoveContestStudentEndAllActionType { type: string }\r\ninterface IInitialContestStudentEndActionType {type: string, contest: IContestStudent}\r\n\r\n// not_register_contests\r\ninterface IAddContestStudentNotOpenNowActionType { type: string, contest: IContestStudent };\r\ninterface IEditContestStudentNotOpenNowActionType { type: string, contest: IContestStudent };\r\ninterface IRemoveContestStudentNotOpenNowActionType { type: string, id: string };\r\ninterface IChangeSelectedContestStudentNotOpenNowActionType { type: string, contest: IContestStudent };\r\ninterface IClearSelectedContestStudentNotOpenNowActionType { type: string };\r\ninterface IRemoveContestStudentNotOpenNowAllActionType { type: string }\r\ninterface IInitialContestStudentNotOpenNowActionType {type: string, contest: IContestStudent}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ContestStudentModificationStatus};","import { fetchDataSuccess, fetchDataError, \r\n    removeContestStudentEndAll, removeContestStudentNotOpenNowAll, \r\n    removeContestStudentNewAll, removeContestStudentOpeningAll,\r\n    initialContestStudentEnd, initialContestStudentNotOpenNow,\r\n    initialContestStudentNew, initialContestStudentOpening, \r\n    addContestStudentEnd, addContestStudentNotOpenNow,\r\n    addContestStudentNew, addContestStudentOpening } from \"../../../store/actions/contest_student.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ContestStudent {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    total_contest_submission: number;\r\n    total_contest_submission_graded: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n    art_type_id: string;\r\n    art_age_id: string;\r\n    student_id: string;\r\n    student_name: string;\r\n    creator_id: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getContestStudentByParent(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest/parent/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getContestStudentByParent(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeContestStudentEndAll())\r\n                dispatch(removeContestStudentNotOpenNowAll())\r\n                dispatch(removeContestStudentNewAll())\r\n                dispatch(removeContestStudentOpeningAll())\r\n                console.log(data)\r\n                data.body.contest_opening.map((ele: any, index: any) => {\r\n                    var contest: ContestStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        creator_id: ele.creator_id,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestStudentOpening(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestStudentOpening(contest))\r\n                    }\r\n                })\r\n\r\n                data.body.contest_new.map((ele: any, index: any) => {\r\n                    var contest: ContestStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        creator_id: ele.creator_id,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestStudentNew(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestStudentNew(contest))\r\n                    }\r\n                })\r\n\r\n\r\n                data.body.contest_end.map((ele: any, index: any) => {\r\n                    var contest: ContestStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        creator_id: ele.creator_id,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestStudentEnd(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestStudentEnd(contest))\r\n                    }\r\n                })\r\n\r\n\r\n                data.body.contest_not_open_now.map((ele: any, index: any) => {\r\n                    var contest: ContestStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        creator_id: ele.creator_id,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestStudentNotOpenNow(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestStudentNotOpenNow(contest))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment } from \"react\";\r\nimport {  useSelector } from \"react-redux\";\r\nimport { IStateType, IContestStudentState } from \"../../store/models/root.interface\";\r\nimport { ILesson } from \"../../store/models/lesson.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IContestStudent } from \"../../store/models/contest_student.interface\";\r\n\r\nexport type lessonListProps = {\r\n    onSelect?: (lesson: ILesson) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction ContestStudentNotOpenNowList(props: lessonListProps): JSX.Element {\r\n    const contest_students: IContestStudentState = useSelector((state: IStateType) => state.contest_students);\r\n\r\n    const history = useHistory();\r\n    const onChangeRoute = (contest_student: IContestStudent) =>{ \r\n        localStorage.removeItem(\"contest_id\")\r\n        localStorage.setItem('contest_id', contest_student.id.toString())\r\n        localStorage.removeItem(\"contest_name\")\r\n        localStorage.setItem('contest_name', contest_student.name)\r\n        localStorage.removeItem(\"contest_description\")\r\n        localStorage.setItem('contest_description', contest_student.description)\r\n        localStorage.removeItem(\"max_participant\")\r\n        localStorage.setItem('max_participant', contest_student.max_participant.toString())\r\n        localStorage.removeItem(\"art_type_contest\")\r\n        localStorage.setItem('art_type_contest', contest_student.art_type_name)\r\n        localStorage.removeItem(\"art_age_contest\")\r\n        localStorage.setItem('art_age_contest', contest_student.art_age_name)\r\n        localStorage.removeItem(\"registration_time\")\r\n        localStorage.setItem('registration_time', contest_student.registration_time)\r\n        localStorage.removeItem(\"start_time\")\r\n        localStorage.setItem('start_time', contest_student.start_time)\r\n        localStorage.removeItem(\"end_time\")\r\n        localStorage.setItem('end_time', contest_student.end_time)\r\n        let path = '/contests/detail-contest'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n    \r\n    const lessonElements: (JSX.Element | null)[] = contest_students.contest_not_open_now.map((contest, index) => {\r\n        //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n        if (!contest) { return null; }\r\n        return (<tr className={`table-row `}\r\n            key={`lesson_${contest.id}`} onClick={() => {onChangeRoute(contest)}}>\r\n            <th scope=\"row\" className=\"data-table\">{index + 1}</th>\r\n            <td className=\"data-table\">{contest.name}</td>\r\n            <td className=\"data-table\">{contest.art_age_name}</td>\r\n            <td className=\"data-table\">{contest.art_type_name}</td>\r\n            <td className=\"data-table\">{contest.student_name}</td>\r\n            <td className=\"data-table\">{contest.total_register_contest}</td>\r\n            <td className=\"data-table\">{contest.max_participant}</td>\r\n            <td className=\"data-table\">{contest.registration_time}</td>\r\n            <td className=\"data-table\">{contest.end_time}</td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"table-responsive portlet\">\r\n                <table className=\"table\">\r\n                    <thead id=\"table-thread-contest-section\">\r\n                        <tr>\r\n                            <th scope=\"col\" className=\"name-row-table\">#</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Tên cuộc thi</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thể loại</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Độ tuổi</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Bé tham gia</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Số bé tham gia tối đa</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời gian đăng kí</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời gian bắt đầu</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời gian kết thúc</th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {lessonElements}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ContestStudentNotOpenNowList;\r\n","import React, { Fragment } from \"react\";\r\nimport {  useSelector } from \"react-redux\";\r\nimport { IStateType, IContestStudentState } from \"../../store/models/root.interface\";\r\nimport { ILesson } from \"../../store/models/lesson.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IContestStudent } from \"../../store/models/contest_student.interface\";\r\n\r\nexport type lessonListProps = {\r\n    onSelect?: (lesson: ILesson) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction ContestStudentDoingList(props: lessonListProps): JSX.Element {\r\n    const contest_students: IContestStudentState = useSelector((state: IStateType) => state.contest_students);\r\n\r\n    const history = useHistory();\r\n    const onChangeRoute = (contest_student: IContestStudent) =>{ \r\n        localStorage.removeItem(\"contest_id\")\r\n        localStorage.setItem('contest_id', contest_student.id.toString())\r\n        localStorage.removeItem(\"contest_name\")\r\n        localStorage.setItem('contest_name', contest_student.name)\r\n        localStorage.removeItem(\"contest_description\")\r\n        localStorage.setItem('contest_description', contest_student.description)\r\n        localStorage.removeItem(\"max_participant\")\r\n        localStorage.setItem('max_participant', contest_student.max_participant.toString())\r\n        localStorage.removeItem(\"art_type_contest\")\r\n        localStorage.setItem('art_type_contest', contest_student.art_type_name)\r\n        localStorage.removeItem(\"art_age_contest\")\r\n        localStorage.setItem('art_age_contest', contest_student.art_age_name)\r\n        localStorage.removeItem(\"registration_time\")\r\n        localStorage.setItem('registration_time', contest_student.registration_time)\r\n        localStorage.removeItem(\"start_time\")\r\n        localStorage.setItem('start_time', contest_student.start_time)\r\n        localStorage.removeItem(\"end_time\")\r\n        localStorage.setItem('end_time', contest_student.end_time)\r\n        let path = '/contests/detail-contest'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n    \r\n    const lessonElements: (JSX.Element | null)[] = contest_students.contest_opening.map((contest, index) => {\r\n        //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n        if (!contest) { return null; }\r\n        return (<tr className={`table-row `}\r\n            key={`lesson_${contest.id}`} onClick={() => {onChangeRoute(contest)}}>\r\n            <th scope=\"row\" className=\"data-table\">{index + 1}</th>\r\n            <td className=\"data-table\">{contest.name}</td>\r\n            <td className=\"data-table\">{contest.art_age_name}</td>\r\n            <td className=\"data-table\">{contest.art_type_name}</td>\r\n            <td className=\"data-table\">{contest.student_name}</td>\r\n            <td className=\"data-table\">{contest.total_register_contest}</td>\r\n            <td className=\"data-table\">{contest.registration_time}</td>\r\n            <td className=\"data-table\">{contest.end_time}</td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"table-responsive portlet\">\r\n                <table className=\"table\">\r\n                    <thead id=\"table-thread-contest-section\">\r\n                        <tr>\r\n                            <th scope=\"col\" className=\"name-row-table\">#</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Tên cuộc thi</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thể loại</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Độ tuổi</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Bé tham gia</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Số bé tham gia</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời gian bắt đầu</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời gian kết thúc</th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {lessonElements}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ContestStudentDoingList;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IContestStudentState } from \"../../store/models/root.interface\";\r\nimport { ILesson } from \"../../store/models/lesson.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IContestStudent } from \"../../store/models/contest_student.interface\";\r\n\r\nexport type lessonListProps = {\r\n    onSelect?: (lesson: ILesson) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction ContestStudentEndList(props: lessonListProps): JSX.Element {\r\n    const contest_students: IContestStudentState = useSelector((state: IStateType) => state.contest_students);\r\n    \r\n    const history = useHistory();\r\n\r\n    const routeChange = (contest: IContestStudent) => {\r\n        let path = '/contest/result-grade';\r\n        localStorage.removeItem('contest_id');\r\n        localStorage.setItem('contest_id', contest.id.toString())\r\n        localStorage.removeItem('contest_name')\r\n        localStorage.setItem('contest_name', contest.name)\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    const lessonElements: (JSX.Element | null)[] = contest_students.contest_end.map((contest, index) => {\r\n        //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n        if (!contest) { return null; }\r\n        return (<tr className={`table-row `}\r\n            key={`lesson_${contest.id}`} onClick={() => {routeChange(contest)}}>\r\n            <th scope=\"row\" className=\"data-table\">{index + 1}</th>\r\n            <td className=\"data-table\">{contest.name}</td>\r\n            <td className=\"data-table\">{contest.art_age_name}</td>\r\n            <td className=\"data-table\">{contest.art_type_name}</td>\r\n            <td className=\"data-table\">{contest.student_name}</td>\r\n            <td className=\"data-table\">{contest.total_register_contest}</td>\r\n            <td className=\"data-table\">{contest.total_contest_submission - contest.total_contest_submission_graded > 0 ? \"Chưa xong\": \"Da xong\"}</td>\r\n            <td className=\"data-table\">{contest.registration_time}</td>\r\n            <td className=\"data-table\">{contest.end_time}</td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"table-responsive portlet\">\r\n                <table className=\"table\">\r\n                    <thead id=\"table-thread-contest-section\">\r\n                        <tr>\r\n                            <th scope=\"col\" className=\"name-row-table\">#</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Tên cuộc thi</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thể loại</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Độ tuổi</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Bé tham gia</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Số bé tham gia</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Trạng thái</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời gian bắt đầu</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời gian kết thúc</th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {lessonElements}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ContestStudentEndList;\r\n","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { IContestStudentState, IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getContestStudentByParent } from \"../../common/service/ContestStudent/GetContestStudentByParent\";\r\nimport ContestStudentNotOpenNowList from \"./ContestStudentNotOpenNowListList\";\r\nimport ContestStudentDoingList from \"./ContestDoingStudentList\";\r\nimport ContestStudentEndList from \"./ContestEndStudentList\";\r\n\r\nconst ContestParent: React.FC = () => {\r\n    const [checked1, setChecked1] = useState(true);\r\n    const [checked2, setChecked2] = useState(false);\r\n    const [checked3, setChecked3] = useState(false);\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const contest_student: IContestStudentState = useSelector((state: IStateType) => state.contest_students);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberNotOpenNowCount: number = contest_student.contest_not_open_now.length;\r\n    const numberContestEndCount: number = contest_student.contest_end.length;\r\n    const numberContestOpeningCount: number = contest_student.contest_opening.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getContestStudentByParent(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getContestStudentByParent(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Cuộc thi của bé\", \"\"));\r\n    }, [path.area, dispatch])\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                <div className=\"row\">\r\n                    <TopCard title=\"CHƯA DIỄN RA\" text={`${numberNotOpenNowCount}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"ĐANG DIỄN RA\" text={`${numberContestOpeningCount}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"ĐÃ KẾT THÚC\" text={`${numberContestEndCount}`} icon=\"book\" class=\"primary\" />\r\n                    {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(StudentRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n                </div>\r\n\r\n                <div className=\"row\" id=\"search-box\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"input-group\" id=\"search-content\">\r\n                            <div className=\"form-outline\">\r\n                                <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                            </div>\r\n                            <button type=\"button\" className=\"btn btn-primary\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                            if (checked1 === false) {\r\n                                setChecked1(true)\r\n                                setChecked2(false)\r\n                                setChecked3(false)\r\n                            }\r\n                        }} style={{\r\n                            color: checked1 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Cuộc thi chưa diễn ra</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"50%\",\r\n                            backgroundColor: checked1 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                            if (checked2 === false) {\r\n                                setChecked2(true)\r\n                                setChecked1(false)\r\n                                setChecked3(false)\r\n                            }\r\n                        }}\r\n                            style={{\r\n                                color: checked2 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                            }}>Cuộc thi đang diễn ra</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"50%\",\r\n                            backgroundColor: checked2 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                            if (checked3 === false) {\r\n                                setChecked3(true)\r\n                                setChecked1(false)\r\n                                setChecked2(false)\r\n                            }\r\n                        }}\r\n                            style={{\r\n                                color: checked3 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                            }}>Cuộc thi đã kết thúc</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"50%\",\r\n                            backgroundColor: checked3 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    function () {\r\n                        if (checked2 === true) {\r\n                            return (\r\n                                <Fragment>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                                <div className=\"card-header py-3\">\r\n                                                    <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách cuộc thi</h6>\r\n                                                </div>\r\n                                                <div className=\"card-body\">\r\n                                                    <ContestStudentDoingList />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        else if (checked1 === true) {\r\n                            return (\r\n                                <Fragment>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                                <div className=\"card-header py-3\">\r\n                                                    <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách cuộc thi</h6>\r\n                                                </div>\r\n                                                <div className=\"card-body\">\r\n                                                    <ContestStudentNotOpenNowList />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n\r\n                        else if (checked3 === true) {\r\n                            return (\r\n                                <Fragment>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                                <div className=\"card-header py-3\">\r\n                                                    <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách cuộc thi</h6>\r\n                                                </div>\r\n                                                <div className=\"card-body\">\r\n                                                    <ContestStudentEndList />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                    }()\r\n                }\r\n\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default ContestParent;\r\n","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IRootPageStateType, IScheduleTimeClassState } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedProduct\r\n} from \"../../store/actions/products.action\";\r\n\r\n\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, ViewsDirective, ViewDirective } from \"@syncfusion/ej2-react-schedule\";\r\n\r\nimport \"@syncfusion/ej2-base/styles/material.css\";\r\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\r\nimport { getScheduleTimeByParent } from \"../../common/service/ScheduleTimeClass/GetScheduleTimeByParent\";\r\n\r\n\r\nconst ScheduleParent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const schedule_time_classes: IScheduleTimeClassState = useSelector((state: IStateType) => state.schedule_time_classes);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getScheduleTimeByParent(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getScheduleTimeByParent(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, id])\r\n\r\n    let data: object[] = []\r\n\r\n  schedule_time_classes.schedule_time_classes.map((ele, index) => {\r\n    if (ele !== undefined && ele !== null) {\r\n      return data.push({\r\n        Id: index,\r\n        Subject: ele.class_name !== undefined && ele.class_name !== null ? ele.class_name : \"\",\r\n        StartTime: new Date(ele.start_time),\r\n        EndTime: new Date(ele.end_time),\r\n        IsAllDay: false\r\n      })\r\n    }\r\n    return 1\r\n  })\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedProduct());\r\n        dispatch(updateCurrentPath(\"Thời khóa biểu\", \"\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-body\">\r\n                        <ScheduleComponent height='550px' selectedDate={new Date()} eventSettings={{\r\n                  dataSource: data, fields: {\r\n                    id: 'Id',\r\n                    subject: { name: 'Subject' },\r\n                    isAllDay: { name: 'IsAllDay' },\r\n                    startTime: { name: 'StartTime' },\r\n                    endTime: { name: 'EndTime' }\r\n                  }\r\n                }}>\r\n\r\n                  <ViewsDirective>\r\n                    <ViewDirective option='WorkWeek' startHour='07:00' endHour='22:00' />\r\n                    <ViewDirective option='Week' startHour='07:00' endHour='22:00' />\r\n                    <ViewDirective option='Month' showWeekend={false} />\r\n                  </ViewsDirective>\r\n                  <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\r\n                </ScheduleComponent>;\r\n                                \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default ScheduleParent;\r\n","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { ICourseParentState, IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./CourseTeacher.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getCourseParent } from \"../../common/service/CourseParent/GetCourseParent\";\r\n\r\nconst CourseParent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const course_teachers: ICourseParentState = useSelector((state: IStateType) => state.course_parents);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberParentRegisterSuccessfullCount: number = course_teachers.courses_registed.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    console.log(course_teachers)\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getCourseParent(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getCourseParent(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khóa học\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n    const [checked, setChecked] = useState(true);\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"ĐÃ ĐĂNG KÍ\" text={`${numberParentRegisterSuccessfullCount}`} icon=\"book\" class=\"primary\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(ParentRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked === false) {\r\n                            setChecked(true)\r\n                        }\r\n                    }} style={{\r\n                        color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Khám phá</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked === true) {\r\n                            setChecked(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                        }}>Đã đăng kí</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#ffffff\" : \"#F24E1E\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    \r\n\r\n\r\n                                </div>\r\n\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    \r\n                                </div>\r\n\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default CourseParent;\r\n","import { fetchDataSuccess, fetchDataError, addScheduleTimeClass, removeScheduleTimeClassAll } from \"../../../store/actions/schedule_time_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\ninterface ScheduleTimeClass {\r\n    class_name: string;\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\nexport function getScheduleTimeByChild(dispatch: any, child_id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/classes/schedule-child/${child_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getScheduleTimeByChild(dispatch, child_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeScheduleTimeClassAll())\r\n                //console.log(data.body.schedule_time)\r\n                data.body.schedules.map((ele: any, index: any) => {\r\n                        let k = Object.values(ele)\r\n                        let xxas = Object.keys(ele)\r\n                        console.log(xxas)\r\n                        return k.map((ele_2: any) => {\r\n                            return Object.values(ele_2).map((ele_3: any) => {\r\n                                //console.log(ele_2)\r\n                                let x_1 = Object.values(ele_3)\r\n                                let y_1 = Object.keys(ele_3)\r\n                                console.log(y_1)\r\n                                console.log(x_1)\r\n                                return x_1.map((ele_4: any) => {\r\n                                    return ele_4.map((ele_5: any) => {\r\n                                        console.log(ele_5)\r\n                                                if (ele_5.length > 0){\r\n                                                    let time: ScheduleTimeClass = {\r\n                                                        class_name: xxas[0],\r\n                                                        start_time: ele_5[0],\r\n                                                        end_time: ele_5[1]\r\n                                                    }\r\n                                                    dispatch(addScheduleTimeClass(time))\r\n                                                }\r\n                                                return ele_5\r\n                                        \r\n                                    })\r\n                                })\r\n                            })\r\n                        })\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IRootPageStateType, IScheduleTimeClassState } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedProduct\r\n} from \"../../store/actions/products.action\";\r\n\r\n\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, ViewsDirective, ViewDirective } from \"@syncfusion/ej2-react-schedule\";\r\n\r\nimport \"@syncfusion/ej2-base/styles/material.css\";\r\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\r\n\r\nimport { getScheduleTimeByChild } from \"../../common/service/ScheduleTimeClass/GetScheduleTimeByStudent\";\r\n\r\n\r\nconst ScheduleStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const schedule_time_classes: IScheduleTimeClassState = useSelector((state: IStateType) => state.schedule_time_classes);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    console.log(schedule_time_classes.schedule_time_classes)\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getScheduleTimeByChild(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getScheduleTimeByChild(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, id])\r\n\r\n    let data: object[] = []\r\n\r\n    if (schedule_time_classes.schedule_time_classes.length > 1 && promiseInProgress === false) {\r\n        schedule_time_classes.schedule_time_classes.map((ele, index) => {\r\n            if (ele !== undefined && ele !== null) {\r\n                return data.push({\r\n                    Id: index,\r\n                    Subject: (ele.class_name !== undefined && ele.class_name !== null) ? ele.class_name : \"\",\r\n                    StartTime: new Date(ele.start_time),\r\n                    EndTime: new Date(ele.end_time),\r\n                    IsAllDay: false\r\n                })\r\n            }\r\n            return 1\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedProduct());\r\n        dispatch(updateCurrentPath(\"Thời khóa biểu\", \"\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"card shadow mb-4\">\r\n                            <div className=\"card-body\">\r\n                                <ScheduleComponent height='550px' selectedDate={new Date()} eventSettings={{\r\n                                    dataSource: data, fields: {\r\n                                        id: 'Id',\r\n                                        subject: { name: 'Subject' },\r\n                                        isAllDay: { name: 'IsAllDay' },\r\n                                        startTime: { name: 'StartTime' },\r\n                                        endTime: { name: 'EndTime' }\r\n                                    }\r\n                                }}>\r\n\r\n                                    <ViewsDirective>\r\n                                        <ViewDirective option='WorkWeek' startHour='07:00' endHour='22:00' />\r\n                                        <ViewDirective option='Week' startHour='07:00' endHour='22:00' />\r\n                                        <ViewDirective option='Month' showWeekend={false} />\r\n                                    </ViewsDirective>\r\n                                    <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\r\n                                </ScheduleComponent>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment >\r\n    );\r\n};\r\n\r\nexport default ScheduleStudent;\r\n","import { fetchDataSuccess, fetchDataError, \r\n    removeContestStudentEndAll, removeContestStudentNotOpenNowAll, \r\n    removeContestStudentNewAll, removeContestStudentOpeningAll,\r\n    initialContestStudentEnd, initialContestStudentNotOpenNow,\r\n    initialContestStudentNew, initialContestStudentOpening, \r\n    addContestStudentEnd, addContestStudentNotOpenNow,\r\n    addContestStudentNew, addContestStudentOpening } from \"../../../store/actions/contest_student.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ContestStudent {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    total_contest_submission: number;\r\n    total_contest_submission_graded: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n    art_type_id: string;\r\n    art_age_id: string;\r\n    student_id: string;\r\n    student_name: string;\r\n    creator_id: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getContestStudentByStudent(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest/student/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getContestStudentByStudent(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeContestStudentEndAll())\r\n                dispatch(removeContestStudentNotOpenNowAll())\r\n                dispatch(removeContestStudentNewAll())\r\n                dispatch(removeContestStudentOpeningAll())\r\n                console.log(data)\r\n                data.body.contest_opening.map((ele: any, index: any) => {\r\n                    var contest: ContestStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        creator_id: ele.creator_id,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestStudentOpening(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestStudentOpening(contest))\r\n                    }\r\n                })\r\n\r\n                data.body.contest_new.map((ele: any, index: any) => {\r\n                    var contest: ContestStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        creator_id: ele.creator_id,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestStudentNew(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestStudentNew(contest))\r\n                    }\r\n                })\r\n\r\n\r\n                data.body.contest_end.map((ele: any, index: any) => {\r\n                    var contest: ContestStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        creator_id: ele.creator_id,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestStudentEnd(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestStudentEnd(contest))\r\n                    }\r\n                })\r\n\r\n\r\n                data.body.contest_not_open_now.map((ele: any, index: any) => {\r\n                    var contest: ContestStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        creator_id: ele.creator_id,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestStudentNotOpenNow(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestStudentNotOpenNow(contest))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment } from \"react\";\r\nimport {  useSelector } from \"react-redux\";\r\nimport { IStateType, IContestStudentState } from \"../../store/models/root.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IContestStudent } from \"../../store/models/contest_student.interface\";\r\n\r\n\r\nfunction ContestStudentDoingList1(): JSX.Element {\r\n    const contest_students: IContestStudentState = useSelector((state: IStateType) => state.contest_students);\r\n\r\n    const history = useHistory();\r\n    const onChangeRoute = (contest_student: IContestStudent) =>{ \r\n        localStorage.removeItem(\"contest_id\")\r\n        localStorage.setItem('contest_id', contest_student.id.toString())\r\n        localStorage.removeItem(\"contest_name\")\r\n        localStorage.setItem('contest_name', contest_student.name)\r\n        localStorage.removeItem(\"contest_description\")\r\n        localStorage.setItem('contest_description', contest_student.description)\r\n        localStorage.removeItem(\"max_participant\")\r\n        localStorage.setItem('max_participant', contest_student.max_participant.toString())\r\n        localStorage.removeItem(\"art_type_contest\")\r\n        localStorage.setItem('art_type_contest', contest_student.art_type_name)\r\n        localStorage.removeItem(\"art_age_contest\")\r\n        localStorage.setItem('art_age_contest', contest_student.art_age_name)\r\n        localStorage.removeItem(\"registration_time\")\r\n        localStorage.setItem('registration_time', contest_student.registration_time)\r\n        localStorage.removeItem(\"start_time\")\r\n        localStorage.setItem('start_time', contest_student.start_time)\r\n        localStorage.removeItem(\"end_time\")\r\n        localStorage.setItem('end_time', contest_student.end_time)\r\n        let path = '/contests/detail-contest'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    function handle_submit_contest(contest_student: IContestStudent) {\r\n        localStorage.removeItem(\"contest_id\")\r\n        localStorage.setItem('contest_id', contest_student.id.toString())\r\n        localStorage.removeItem(\"contest_name\")\r\n        localStorage.setItem('contest_name', contest_student.name)\r\n        localStorage.removeItem(\"contest_description\")\r\n        localStorage.setItem('contest_description', contest_student.description)\r\n        localStorage.removeItem(\"max_participant\")\r\n        localStorage.setItem('max_participant', contest_student.max_participant.toString())\r\n        localStorage.removeItem(\"art_type_contest\")\r\n        localStorage.setItem('art_type_contest', contest_student.art_type_name)\r\n        localStorage.removeItem(\"art_age_contest\")\r\n        localStorage.setItem('art_age_contest', contest_student.art_age_name)\r\n        localStorage.removeItem(\"registration_time\")\r\n        localStorage.setItem('registration_time', contest_student.registration_time)\r\n        localStorage.removeItem(\"start_time\")\r\n        localStorage.setItem('start_time', contest_student.start_time)\r\n        localStorage.removeItem(\"end_time\")\r\n        localStorage.setItem('end_time', contest_student.end_time)\r\n        let path = '/contests/submit'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n    \r\n    const lessonElements: (JSX.Element | null)[] = contest_students.contest_opening.map((contest, index) => {\r\n        //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n        if (!contest) { return null; }\r\n        return (<tr className={`table-row `}\r\n            key={`lesson_${contest.id}`}>\r\n            <th scope=\"row\" className=\"data-table\">{index + 1}</th>\r\n            <td className=\"data-table\" onClick={() => {onChangeRoute(contest)}}>{contest.name}</td>\r\n            <td className=\"data-table\">{contest.art_age_name}</td>\r\n            <td className=\"data-table\">{contest.art_type_name}</td>\r\n            <td className=\"data-table\">{contest.student_name}</td>\r\n            <td className=\"data-table\">{contest.total_register_contest}</td>\r\n            <td className=\"data-table\">{contest.registration_time}</td>\r\n            <td className=\"data-table\">{contest.end_time}</td>\r\n            <td className=\"data-table\">\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-primary\" \r\n                    onClick={() => {handle_submit_contest(contest)}}\r\n                >\r\n                    Nộp bài\r\n                </button>\r\n            </td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"table-responsive portlet\">\r\n                <table className=\"table\">\r\n                    <thead id=\"table-thread-contest-section\">\r\n                        <tr>\r\n                            <th scope=\"col\" className=\"name-row-table\">#</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Tên cuộc thi</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thể loại</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Độ tuổi</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Bé tham gia</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Số bé tham gia</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời gian bắt đầu</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời gian kết thúc</th>\r\n                            <th scope=\"col\"></th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {lessonElements}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ContestStudentDoingList1;\r\n","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { IContestStudentState, IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getContestStudentByStudent } from \"../../common/service/ContestStudent/GetContestStudent\";\r\nimport ContestStudentNotOpenNowList from \"./ContestStudentNotOpenNowListList\";\r\nimport ContestStudentEndList from \"./ContestEndStudentList\";\r\nimport ContestStudentDoingList1 from \"./ContestStudentDoingList1\";\r\n\r\nconst ContestStudent: React.FC = () => {\r\n    const [checked1, setChecked1] = useState(true);\r\n    const [checked2, setChecked2] = useState(false);\r\n    const [checked3, setChecked3] = useState(false);\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const contest_student: IContestStudentState = useSelector((state: IStateType) => state.contest_students);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberNotOpenNowCount: number = contest_student.contest_not_open_now.length;\r\n    const numberContestEndCount: number = contest_student.contest_end.length;\r\n    const numberContestOpeningCount: number = contest_student.contest_opening.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getContestStudentByStudent(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getContestStudentByStudent(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Cuộc thi của bé\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                <div className=\"row\">\r\n                    <TopCard title=\"CHƯA DIỄN RA\" text={`${numberNotOpenNowCount}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"ĐANG DIỄN RA\" text={`${numberContestOpeningCount}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"ĐÃ KẾT THÚC\" text={`${numberContestEndCount}`} icon=\"book\" class=\"primary\" />\r\n                    {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(StudentRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n                </div>\r\n\r\n                <div className=\"row\" id=\"search-box\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"input-group\" id=\"search-content\">\r\n                            <div className=\"form-outline\">\r\n                                <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                            </div>\r\n                            <button type=\"button\" className=\"btn btn-primary\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                            if (checked1 === false) {\r\n                                setChecked1(true)\r\n                                setChecked2(false)\r\n                                setChecked3(false)\r\n                            }\r\n                        }} style={{\r\n                            color: checked1 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Cuộc thi chưa diễn ra</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"50%\",\r\n                            backgroundColor: checked1 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                            if (checked2 === false) {\r\n                                setChecked2(true)\r\n                                setChecked1(false)\r\n                                setChecked3(false)\r\n                            }\r\n                        }}\r\n                            style={{\r\n                                color: checked2 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                            }}>Cuộc thi đang diễn ra</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"50%\",\r\n                            backgroundColor: checked2 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                            if (checked3 === false) {\r\n                                setChecked3(true)\r\n                                setChecked1(false)\r\n                                setChecked2(false)\r\n                            }\r\n                        }}\r\n                            style={{\r\n                                color: checked3 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                            }}>Cuộc thi đã kết thúc</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"50%\",\r\n                            backgroundColor: checked3 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    function () {\r\n                        if (checked2 === true) {\r\n                            return (\r\n                                <Fragment>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                                <div className=\"card-header py-3\">\r\n                                                    <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách cuộc thi</h6>\r\n                                                </div>\r\n                                                <div className=\"card-body\">\r\n                                                    <ContestStudentDoingList1 />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        else if (checked1 === true) {\r\n                            return (\r\n                                <Fragment>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                                <div className=\"card-header py-3\">\r\n                                                    <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách cuộc thi</h6>\r\n                                                </div>\r\n                                                <div className=\"card-body\">\r\n                                                    <ContestStudentNotOpenNowList />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n\r\n                        else if (checked3 === true) {\r\n                            return (\r\n                                <Fragment>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                                <div className=\"card-header py-3\">\r\n                                                    <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách cuộc thi</h6>\r\n                                                </div>\r\n                                                <div className=\"card-body\">\r\n                                                    <ContestStudentEndList />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                    }()\r\n                }\r\n\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default ContestStudent;","import { fetchDataSuccess, fetchDataError } from \"../../../store/actions/course.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalCourseForStudent(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/course/student/total/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalCourseForStudent(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                localStorage.removeItem('total_course_student');\r\n                localStorage.setItem('total_course_student', data.body.course)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { fetchDataSuccess, fetchDataError } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalContestForStudent(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest/student/total/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalContestForStudent(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                localStorage.removeItem('total_contest_student');\r\n                localStorage.setItem('total_contest_student', data.body.contest)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IRootPageStateType, IScheduleTimeClassState, IStateType } from \"../../store/models/root.interface\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport \"./ParentHome.css\"\r\nimport { ScheduleComponent, Day, Inject, ViewsDirective, ViewDirective } from \"@syncfusion/ej2-react-schedule\";\r\n\r\nimport \"@syncfusion/ej2-base/styles/material.css\";\r\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { getTotalCourseForStudent } from \"../../common/service/Course/GetTotalCourseForStudent\";\r\nimport { getTotalContestForStudent } from \"../../common/service/Contest/GetTotalContestForStudent\";\r\n\r\n\r\nconst StudentHome: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const schedule_time_classes: IScheduleTimeClassState = useSelector((state: IStateType) => state.schedule_time_classes);\r\n    let total_contest_student: number = 0;\r\n    let total_course_student: number = 0;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('total_contest_student');\r\n    if (id_y !== null) {\r\n        total_contest_student = parseInt(id_y)\r\n    }\r\n\r\n    var id_z = localStorage.getItem('total_course_student');\r\n    if (id_z !== null) {\r\n        total_course_student = parseInt(id_z)\r\n    }\r\n\r\n    console.log(schedule_time_classes.schedule_time_classes)\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getTotalContestForStudent(dispatch, id))\r\n                    trackPromise(getTotalCourseForStudent(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getTotalContestForStudent(dispatch, id))\r\n                trackPromise(getTotalCourseForStudent(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, id]);\r\n\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    \r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Trang chủ\", \"\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    let data: object[] = []\r\n\r\n    schedule_time_classes.schedule_time_classes.map((ele, index) => {\r\n        if (ele !== undefined) {\r\n            return data.push({\r\n                Id: index,\r\n                Subject: ele.class_name !== undefined && ele.class_name !== null ? ele.class_name : \"\",\r\n                StartTime: new Date(ele.start_time),\r\n                EndTime: new Date(ele.end_time),\r\n                IsAllDay: false\r\n            })\r\n        }\r\n        return 1\r\n    })\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                <div className=\"row\">\r\n                    <TopCard title=\"KHÓA HỌC\" text={`${total_course_student}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"CUỘC THI\" text={`${total_contest_student}`} icon=\"book\" class=\"primary\" />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                        <h3 className=\" mb-2\" id=\"level-teacher\">Lịch trong ngày</h3>\r\n                        <div className=\"card shadow mb-4\">\r\n                            <div className=\"card-body\">\r\n                                <ScheduleComponent height='550px' selectedDate={new Date()} eventSettings={{\r\n                                    dataSource: data, fields: {\r\n                                        id: 'Id',\r\n                                        subject: { name: 'Subject' },\r\n                                        isAllDay: { name: 'IsAllDay' },\r\n                                        startTime: { name: 'StartTime' },\r\n                                        endTime: { name: 'EndTime' }\r\n                                    }\r\n                                }}>\r\n\r\n                                    <ViewsDirective>\r\n                                        <ViewDirective option='Day' startHour='00:00' endHour='23:59' />\r\n                                    </ViewsDirective>\r\n                                    <Inject services={[Day]} />\r\n                                </ScheduleComponent>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default StudentHome;\r\n","import { fetchDataSuccess, fetchDataError, \r\n    removeContestTeacherEndAll, removeContestTeacherNotOpenNowAll, \r\n    removeContestTeacherNotOpenNowNotTeacherAll, removeContestTeacherOpeningAll,\r\n    initialContestTeacherEnd, initialContestTeacherNotOpenNow, initialContestTeacherOpening, \r\n    addContestTeacherEnd, addContestTeacherNotOpenNow, addContestTeacherOpening } from \"../../../store/actions/contest_teacher.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ContestTeacher {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    total_contest_submission: number;\r\n    total_contest_submission_graded: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n}\r\nexport function getContestByStudent(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest/student/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getContestByStudent(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeContestTeacherEndAll())\r\n                dispatch(removeContestTeacherNotOpenNowAll())\r\n                dispatch(removeContestTeacherNotOpenNowNotTeacherAll())\r\n                dispatch(removeContestTeacherOpeningAll())\r\n                console.log(data.body.contest_opening)\r\n                data.body.contest_opening.map((ele: any, index: any) => {\r\n                    var contest: ContestTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestTeacherOpening(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestTeacherOpening(contest))\r\n                    }\r\n                })\r\n\r\n\r\n                data.body.contest_end.map((ele: any, index: any) => {\r\n                    var contest: ContestTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestTeacherEnd(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestTeacherEnd(contest))\r\n                    }\r\n                })\r\n\r\n\r\n                data.body.contest_not_open_now.map((ele: any, index: any) => {\r\n                    var contest: ContestTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestTeacherNotOpenNow(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestTeacherNotOpenNow(contest))\r\n                    }\r\n                })\r\n\r\n                data.body.contest_new.map((ele: any, index: any) => {\r\n                    var contest: ContestTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestTeacherNotOpenNow(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestTeacherNotOpenNow(contest))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { IClassesStudent, ClassesStudentModificationStatus } from \"../models/classes_student.interface\";\r\n\r\n// register_successfull_classes_students\r\nexport const ADD_DOING_CLASS: string = \"ADD_DOING_CLASS\";\r\nexport const EDIT_DOING_CLASS: string = \"EDIT_DOING_CLASS\";\r\nexport const REMOVE_DOING_CLASS: string = \"REMOVE_DOING_CLASS\";\r\nexport const CHANGE_DOING_CLASS_AMOUNT: string = \"CHANGE_DOING_CLASS_AMOUNT\";\r\nexport const CHANGE_DOING_CLASS_PENDING_EDIT: string = \"CHANGE_DOING_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_DOING_CLASS_PENDING_EDIT: string = \"CLEAR_DOING_CLASS_PENDING_EDIT\";\r\nexport const REMOVE_DOING_CLASS_ALL: string = \"REMOVE_DOING_CLASS_ALL\";\r\nexport const INITIAL_DOING_CLASS: string = \"INITIAL_DOING_CLASS\";\r\n\r\n// not_register_classes_students\r\nexport const ADD_DONE_CLASS: string = \"ADD_DONE_CLASS\";\r\nexport const EDIT_DONE_CLASS: string = \"EDIT_DONE_CLASS\";\r\nexport const REMOVE_DONE_CLASS: string = \"REMOVE_DONE_CLASS\";\r\nexport const CHANGE_DONE_CLASS_AMOUNT: string = \"CHANGE_DONE_CLASS_AMOUNT\";\r\nexport const CHANGE_DONE_CLASS_PENDING_EDIT: string = \"CHANGE_DONE_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_DONE_CLASS_PENDING_EDIT: string = \"CLEAR_DONE_CLASS_PENDING_EDIT\";\r\nexport const REMOVE_DONE_CLASS_ALL: string = \"REMOVE_DONE_CLASS_ALL\";\r\nexport const INITIAL_DONE_CLASS: string = \"INITIAL_DONE_CLASS\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(classes_student: IClassesStudent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        classes_student\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialDoinglClass(classes_student: IClassesStudent): IInitialDoinglClassActionType {\r\n    return { type: INITIAL_DOING_CLASS, classes_student: classes_student };\r\n}\r\n\r\nexport function removeDoinglClassAll(): IRemoveDoinglClassAllActionType {\r\n    return { type: REMOVE_DOING_CLASS_ALL };\r\n}\r\n\r\nexport function addDoinglClass(classes_student: IClassesStudent): IAddDoinglClassActionType {\r\n    return { type: ADD_DOING_CLASS, classes_student: classes_student };\r\n}\r\n\r\nexport function editDoinglClass(classes_student: IClassesStudent): IEditDoinglClassActionType {\r\n    return { type: EDIT_DOING_CLASS, classes_student: classes_student };\r\n}\r\n\r\nexport function removeDoinglClass(id: string): IRemoveDoinglClassActionType {\r\n    return { type: REMOVE_DOING_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedDoinglClass(classes_student: IClassesStudent): IChangeSelectedDoinglClassActionType {\r\n    return { type: CHANGE_DOING_CLASS_PENDING_EDIT, classes_student: classes_student };\r\n}\r\n\r\nexport function clearSelectedDoinglClass(): IClearSelectedDoinglClassActionType {\r\n    return { type: CLEAR_DOING_CLASS_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialDoneClass(classes_student: IClassesStudent): IInitialDoneClassActionType {\r\n    return { type: INITIAL_DONE_CLASS, classes_student: classes_student };\r\n}\r\n\r\nexport function removeDoneClassAll(): IRemoveDoneClassAllActionType {\r\n    return { type: REMOVE_DONE_CLASS_ALL };\r\n}\r\n\r\nexport function addDoneClass(classes_student: IClassesStudent): IAddDoneClassActionType {\r\n    return { type: ADD_DONE_CLASS, classes_student: classes_student };\r\n}\r\n\r\nexport function editDoneClass(classes_student: IClassesStudent): IEditDoneClassActionType {\r\n    return { type: EDIT_DONE_CLASS, classes_student: classes_student };\r\n}\r\n\r\nexport function removeDoneClass(id: string): IRemoveDoneClassActionType {\r\n    return { type: REMOVE_DONE_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedDoneClass(classes_student: IClassesStudent): IChangeSelectedDoneClassActionType {\r\n    return { type: CHANGE_DONE_CLASS_PENDING_EDIT, classes_student: classes_student };\r\n}\r\n\r\nexport function clearSelectedDoneClass(): IClearSelectedDoneClassActionType {\r\n    return { type: CLEAR_DONE_CLASS_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ClassesStudentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_classes_students\r\ninterface IAddDoinglClassActionType { type: string, classes_student: IClassesStudent };\r\ninterface IEditDoinglClassActionType { type: string, classes_student: IClassesStudent };\r\ninterface IRemoveDoinglClassActionType { type: string, id: string };\r\ninterface IChangeSelectedDoinglClassActionType { type: string, classes_student: IClassesStudent };\r\ninterface IClearSelectedDoinglClassActionType { type: string };\r\ninterface IRemoveDoinglClassAllActionType { type: string }\r\ninterface IInitialDoinglClassActionType {type: string, classes_student: IClassesStudent}\r\n\r\n// not_register_classes_students\r\ninterface IAddDoneClassActionType { type: string, classes_student: IClassesStudent };\r\ninterface IEditDoneClassActionType { type: string, classes_student: IClassesStudent };\r\ninterface IRemoveDoneClassActionType { type: string, id: string };\r\ninterface IChangeSelectedDoneClassActionType { type: string, classes_student: IClassesStudent };\r\ninterface IClearSelectedDoneClassActionType { type: string };\r\ninterface IRemoveDoneClassAllActionType { type: string }\r\ninterface IInitialDoneClassActionType {type: string, classes_student: IClassesStudent}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ClassesStudentModificationStatus};","import { fetchDataSuccess, fetchDataError, removeDoinglClassAll, removeDoneClassAll, initialDoinglClass, initialDoneClass,  addDoinglClass, addDoneClass } from \"../../../store/actions/classes_student.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ClassesStudent {\r\n    id: string;\r\n    name: string;\r\n    link_url: string;\r\n    student_id: string;\r\n    student_name: string;\r\n    user_register_join_semester_id: string;\r\n    teacher_name: string;\r\n    teacher_id: string;\r\n    course_id: string;\r\n    semester_class_id: string;\r\n    semester_class_name: string;\r\n    user_register_teach_semester: number;\r\n    security_code: string;\r\n    total_student: number;\r\n    total_section: number;\r\n    course_name: string;\r\n    semester_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_type_id: string;\r\n    art_level_id: string;\r\n    art_age_id: string;\r\n    art_age_name: string;\r\n}\r\nexport function getClassesStudent(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/classes/student/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getClassesStudent(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeDoinglClassAll())\r\n                dispatch(removeDoneClassAll())\r\n                console.log(data.body.classes_done)\r\n                console.log(data.body.classes_doing)\r\n                data.body.classes_done.map((ele: any, index: any) => {\r\n                    var classes_student: ClassesStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        semester_class_name: ele.semester_class_name,\r\n                        student_id: ele.student_id,\r\n                        user_register_join_semester_id: ele.user_register_join_semester_id,\r\n                        student_name: ele.student_name,\r\n                        teacher_id: ele.teacher_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semester_class_id,\r\n                        user_register_teach_semester: ele.user_register_teach_semester,\r\n                        security_code: ele.security_code,\r\n                        total_student: ele.total_student,\r\n                        total_section: ele.total_section,\r\n                        link_url: ele.link_url,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_level_id: ele.art_level_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        course_name: ele.course_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name\r\n                    }\r\n                    console.log(classes_student)\r\n                    if (index === 0){\r\n                        return dispatch(initialDoneClass(classes_student));\r\n                    }\r\n                    else{\r\n                        return dispatch(addDoneClass(classes_student))\r\n                    }\r\n                })\r\n\r\n                data.body.classes_doing.map((ele: any, index: any) => {\r\n                    var classes_student: ClassesStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        student_id: ele.student_id,\r\n                        semester_class_name: ele.semester_class_name,\r\n                        student_name: ele.student_name,\r\n                        teacher_id: ele.teacher_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semester_class_id,\r\n                        user_register_teach_semester: ele.user_register_teach_semester,\r\n                        security_code: ele.security_code,\r\n                        user_register_join_semester_id: ele.user_register_join_semester_id,\r\n                        total_student: ele.total_student,\r\n                        total_section: ele.total_section,\r\n                        link_url: ele.link_url,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_level_id: ele.art_level_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        course_name: ele.course_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name\r\n                    }\r\n                    console.log(classes_student)\r\n                    if (index === 0){\r\n                        return dispatch(initialDoinglClass(classes_student));\r\n                    }\r\n                    else{\r\n                        return dispatch(addDoinglClass(classes_student))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IClassesStudentState, IContestTeacherState, IScheduleTimeClassState, IStateType, IUserGradeExerciseSubmissionState, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ManageChild.css\"\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport SelectKeyValueNotField from \"../../common/components/SelectKeyValueNotField\";\r\nimport { OnChangeModelNotFiled } from \"../../common/types/Form.types\";\r\nimport { IoMdAnalytics } from \"react-icons/io\";\r\nimport { FaHistory } from \"react-icons/fa\";\r\nimport { ChartLine } from \"../../common/components/CharLine\";\r\nimport { getUserGradeExerciseByStudentAndClass } from \"../../common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByClassStudent\";\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\nimport { getContestByStudent } from \"../../common/service/Contest/GetContestByStudent\";\r\nimport { getClassesStudent } from \"../../common/service/ClassesStudent/GetClassesStudentByStudent\";\r\nimport { getScheduleTimeByChild } from \"../../common/service/ScheduleTimeClass/GetScheduleTimeByStudent\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport { ScheduleComponent, Day, Inject, ViewsDirective, ViewDirective } from \"@syncfusion/ej2-react-schedule\";\r\n\r\nimport \"@syncfusion/ej2-base/styles/material.css\";\r\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\r\nimport { IClassesStudent } from \"../../store/models/classes_student.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\ntype Options = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\nconst ManageChild: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const [checked, setChecked] = useState(true);\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const schedule_time_classes: IScheduleTimeClassState = useSelector((state: IStateType) => state.schedule_time_classes);\r\n    const user_grade_exercise_submission: IUserGradeExerciseSubmissionState = useSelector((state: IStateType) => state.user_grade_exercise_submissions);\r\n    const classes_students: IClassesStudentState = useSelector((state: IStateType) => state.classes_students);\r\n    const contest_teachers: IContestTeacherState = useSelector((state: IStateType) => state.contest_teachers);\r\n    const numberApprovedCount: number = classes_students.classes_done.length + classes_students.classes_doing.length;\r\n    const numberNotApprovedNowCount: number = contest_teachers.contest_end.length + contest_teachers.contest_not_open_now.length + contest_teachers.contest_opening.length;\r\n    var id_x = localStorage.getItem('student_id');\r\n    var student_id: string = \"\";\r\n    if (id_x !== null) {\r\n        student_id = id_x;\r\n    }\r\n\r\n    console.log(classes_students)\r\n    console.log(contest_teachers)\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getUserById(dispatch, student_id))\r\n                    trackPromise(getScheduleTimeByChild(dispatch, student_id))\r\n                    trackPromise(getContestByStudent(dispatch, student_id))\r\n                    trackPromise(getClassesStudent(dispatch, student_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getUserById(dispatch, student_id))\r\n                trackPromise(getScheduleTimeByChild(dispatch, student_id))\r\n                trackPromise(getContestByStudent(dispatch, student_id))\r\n                trackPromise(getClassesStudent(dispatch, student_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, student_id]);\r\n\r\n    const [value, setValue] = useState<number>(0);\r\n    const [value1, setValue1] = useState<number>(0);\r\n    console.log(checked)\r\n    console.log(value)\r\n    const listOptions: Options[] = [\r\n        {\r\n            name: 'Khóa học',\r\n            value: 1\r\n        },\r\n        {\r\n            name: 'Cuộc thi',\r\n            value: 2\r\n        },\r\n    ];\r\n\r\n    const listClasses: Options[] = [];\r\n    classes_students.classes_doing.map((ele, idx) => {\r\n        let item: Options = {\r\n            name: ele.name,\r\n            value: ele.id\r\n        };\r\n        return listClasses.push(item);\r\n    })\r\n\r\n    function hasFormValueChangedNotFiled(model: OnChangeModelNotFiled): void {\r\n        setValue(model.value);\r\n    }\r\n\r\n    function hasFormValueChangedNotFiled1(model: OnChangeModelNotFiled): void {\r\n        setValue1(model.value);\r\n        console.log(model.value)\r\n        console.log(student_id);\r\n        getUserGradeExerciseByStudentAndClass(dispatch, model.value, student_id)\r\n    }\r\n\r\n    let list_score_user_grade_exercise: number[] = [];\r\n    let list_name_user_grade_exercise: string[] = [];\r\n    user_grade_exercise_submission.user_grade_exercise_submissions.map((ele, idx) => {\r\n        list_score_user_grade_exercise.push(ele.score)\r\n        list_name_user_grade_exercise.push(ele.exercise_name)\r\n        return ele\r\n    })\r\n\r\n    console.log(user_grade_exercise_submission.user_grade_exercise_submissions)\r\n\r\n    const labels = list_name_user_grade_exercise;\r\n    const datax = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Điểm kiểm tra',\r\n                data: list_score_user_grade_exercise,\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            }\r\n        ],\r\n    };\r\n\r\n    let data: object[] = []\r\n\r\n    schedule_time_classes.schedule_time_classes.map((ele, index) => {\r\n        return data.push({\r\n            Id: index,\r\n            Subject: ele.class_name !== undefined && ele.class_name !== null ? ele.class_name : \"\",\r\n            StartTime: new Date(ele.start_time),\r\n            EndTime: new Date(ele.end_time),\r\n            IsAllDay: false\r\n        })\r\n    })\r\n\r\n    const history = useHistory();\r\n    function onChangeRouter1(classes_student: IClassesStudent) {\r\n        let path = '/student/class'; \r\n        localStorage.removeItem('teacher_id');\r\n        localStorage.setItem('teacher_id', value1.toString())\r\n        localStorage.removeItem('class_id');\r\n        localStorage.setItem('class_id', value1.toString());\r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    function onChangeRoute2() {\r\n        let path = '/class/exercise-student'; \r\n        localStorage.removeItem('class_id');\r\n        localStorage.setItem('class_id', value1.toString());\r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                <div className=\"row\">\r\n                    <TopCard title=\"KHÓA HỌC\" text={`${numberApprovedCount}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"CUỘC THI\" text={`${numberNotApprovedNowCount}`} icon=\"book\" class=\"danger\" />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                        <h3 className=\" mb-2\" id=\"level-teacher\">Thông tin của bé</h3>\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <div className={`card shadow h-100 py-2`} id=\"infor-student\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                                            <i className={`far fa-user-circle fa-7x text-gray-300`} id=\"icon-user\"></i>\r\n                                        </div>\r\n                                        <div className=\"col-xl-8 col-md-8 col-xs-8\">\r\n                                            <div className=\"row\">\r\n                                                <h2>{users.teachers.length > 0 ? users.teachers[0].firstName + \" \" + users.teachers[0].lastName : \"\"}</h2>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <p>@{users.teachers.length > 0 ? users.teachers[0].username : \"\"}</p>\r\n                                            </div>\r\n                                            <div className=\"row no-gutters align-items-center\">\r\n                                                <i className={`fa fa-calendar fa-2x text-gray-300`} id=\"icon-calendar\"></i>\r\n                                                <div className=\"text-xs mb-1 ml-2\">\r\n                                                    <p className=\"birthday\">Ngày sinh: {users.teachers.length > 0 ? users.teachers[0].dateOfBirth : \"\"}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row dropdown-content mr-2\">\r\n                                        <SelectKeyValueNotField\r\n                                            value={value}\r\n                                            id=\"input_total_page\"\r\n                                            onChange={hasFormValueChangedNotFiled}\r\n                                            required={true}\r\n                                            label=\"\"\r\n                                            options={listOptions}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"row tabbar-x\" >\r\n                                        <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                                            <IoMdAnalytics style={{\r\n                                                color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                                            }} />\r\n                                            <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                                                if (checked === false) {\r\n                                                    setChecked(true)\r\n                                                }\r\n                                            }} style={{\r\n                                                color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                                            }}>Thống kê</h6>\r\n                                            <div style={{\r\n                                                height: \"5px\",\r\n                                                textAlign: \"center\",\r\n                                                margin: \"auto\",\r\n                                                width: \"30%\",\r\n                                                backgroundColor: checked ? \"#F24E1E\" : \"#ffffff\"\r\n                                            }}></div>\r\n                                        </div>\r\n                                        <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                                            <FaHistory style={{\r\n                                                color: !checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                                            }} />\r\n                                            <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                                                if (checked === true) {\r\n                                                    setChecked(false)\r\n                                                }\r\n                                            }}\r\n                                                style={{\r\n                                                    color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                                                }}>Lịch sử</h6>\r\n                                            <div style={{\r\n                                                height: \"5px\",\r\n                                                textAlign: \"center\",\r\n                                                margin: \"auto\",\r\n                                                width: \"30%\",\r\n                                                backgroundColor: checked ? \"#ffffff\" : \"#F24E1E\"\r\n                                            }}></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        function () {\r\n                                            console.log(checked)\r\n                                            console.log(typeof(value))\r\n                                            if (checked === true && value == 1) {\r\n                                                return (\r\n                                                    <>\r\n                                                        <div className=\"row\">\r\n                                                            <SelectKeyValueNotField\r\n                                                                value={value1}\r\n                                                                id=\"input_classes\"\r\n                                                                onChange={hasFormValueChangedNotFiled1}\r\n                                                                required={true}\r\n                                                                label=\"\"\r\n                                                                options={listClasses}\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-xl-12 col-lg-12\">\r\n                                                                <div className=\"card mb-4\">\r\n                                                                    <div className=\"card-body chart-line\">\r\n                                                                        <ChartLine data={datax} />\r\n                                                                    </div>\r\n                                                                    <div className=\"row justify-content-center chart-line\">\r\n                                                                        <button\r\n                                                                            className=\"btn btn-success btn-green\"\r\n                                                                            id=\"btn-into-class-student\"\r\n                                                                            onClick={() => {onChangeRoute2()}}\r\n                                                                        >\r\n                                                                            Xem chi tiết\r\n                                                                            <i className={`fas fa-arrow-right fa-1x`} id=\"icon-arrow-right\"></i>\r\n                                                                        </button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n\r\n                                            else if (checked === true && value == 2) {\r\n                                                return (\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                                            <div className=\"card mb-4\">\r\n                                                                <div className=\"card-body chart-line\">\r\n                                                                    <ChartLine data={datax} />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n\r\n                                            else if (checked === false && value == 1) {\r\n                                                return classes_students.classes_done.map((ele, idx) => {\r\n                                                    console.log(ele)\r\n                                                    return (\r\n                                                        <div className=\"row\" key={idx} onClick={() => {onChangeRouter1(ele)}}>\r\n                                                            <div className=\"col-xl-12 col-lg-12\">\r\n                                                                <div className=\"card mb-4 card-course\">\r\n                                                                    <div className=\"card-body\">\r\n                                                                        <h5 className=\"card-title\">{ele.name}</h5>\r\n                                                                        <div className=\"row\">\r\n                                                                            <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                                                                                <img className=\"card-img-top\" src={ele.link_url} alt=\"\" />\r\n                                                                            </div>\r\n\r\n                                                                            <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                                                                                <div className=\"row\">\r\n                                                                                    <p><span className=\"header-card-course-teacher\">Thể loại:</span> <span className=\"header-card-course-value-teacher\">{ele.art_type_name}</span></p>\r\n\r\n                                                                                </div>\r\n                                                                                <div className=\"row\">\r\n                                                                                    <p ><span className=\"header-card-course-teacher\">Trình độ:</span> <span className=\"header-card-course-value-teacher\">{ele.art_level_name}</span></p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                                                                                <div className=\"row\">\r\n                                                                                    <p><span className=\"header-card-course-teacher\">Độ tuổi:</span> <span className=\"header-card-course-value-teacher\">{ele.art_age_name}</span></p>\r\n\r\n                                                                                </div>\r\n                                                                                <div className=\"row\">\r\n                                                                                    <p ><span className=\"header-card-course-teacher\">Số buổi:</span> <span className=\"header-card-course-value-teacher\">{ele.total_section}</span></p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n\r\n\r\n                                            if (checked === false && value == 2) {\r\n                                                return contest_teachers.contest_end.map((ele, idx) => {\r\n                                                    return (\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-xl-12 col-lg-12\" key={idx}>\r\n                                                                <div className=\"card mb-4 card-contest-doing\">\r\n                                                                    <div className=\"card-body\">\r\n                                                                        <h5 className=\"card-title\">{ele.name}</h5>\r\n                                                                        <div className=\"row\">\r\n                                                                            <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                                                                                <img className=\"card-img-top\" src={ele.image_url} alt=\"\" />\r\n                                                                            </div>\r\n\r\n                                                                            <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                                                                                <div className=\"row\">\r\n                                                                                    <p><span className=\"header-card-course-teacher\">Thể loại:</span> <span className=\"header-card-course-value-teacher\">{ele.art_type_name}</span></p>\r\n\r\n                                                                                </div>\r\n                                                                                <div className=\"row\">\r\n                                                                                    <p ><span className=\"header-card-course-teacher\">Độ tuổi:</span> <span className=\"header-card-course-value-teacher\">{ele.art_age_name}</span></p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                                                                                <div className=\"row\">\r\n                                                                                    <p><span className=\"header-card-course-teacher\">Thời gian bắt đầu: {ele.registration_time}</span> <span className=\"header-card-course-value-teacher\"></span></p>\r\n\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                })\r\n\r\n                                            }\r\n                                        }()\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-xl-6 col-lg-6 col-md-6 col-xs-6\">\r\n                        <h3 className=\" mb-2\" id=\"level-teacher\">Lịch học của bé</h3>\r\n                        <div className=\"card shadow mb-4\">\r\n                            <div className=\"card-body\">\r\n                            <ScheduleComponent height='550px' selectedDate={new Date()} eventSettings={{\r\n                                    dataSource: data, fields: {\r\n                                        id: 'Id',\r\n                                        subject: { name: 'Subject' },\r\n                                        isAllDay: { name: 'IsAllDay' },\r\n                                        startTime: { name: 'StartTime' },\r\n                                        endTime: { name: 'EndTime' }\r\n                                    }\r\n                                }}>\r\n\r\n                                    <ViewsDirective>\r\n                                        <ViewDirective option='Day' startHour='00:00' endHour='23:59' />\r\n                                    </ViewsDirective>\r\n                                    <Inject services={[Day]} />\r\n                                </ScheduleComponent>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default ManageChild;\r\n","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { clearSelectedAnonymousNotification, setModificationStateAnonymousNotification, addAnonymousNotification } from \"../../store/actions/anonymous_notification.action\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Rating } from \"react-simple-star-rating\";\r\n\r\nexport type artAgeListProps = {\r\n    isCheck: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\n\r\nfunction FormReviewClass(props: artAgeListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n\r\n    const [formState, setFormState] = useState({\r\n        review_start: { error: \"\", value: 0 },\r\n        review: { error: \"\", value: \"\" }\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        props.isCheck(false);\r\n        let saveUserFn: Function =  addAnonymousNotification ;\r\n        saveForm(saveUserFn);\r\n    }\r\n\r\n    function saveForm(saveFn: Function): void {\r\n            const idx = toast.loading(\"Đang xử lý yêu cầu. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            \r\n            if (saveFn === addAnonymousNotification) {\r\n                console.log(idx)\r\n            }\r\n\r\n            dispatch(clearSelectedAnonymousNotification());\r\n            dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.None));\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        props.isCheck(false);\r\n        dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.review_start.error || !formState.review_start.value \r\n            || formState.review.error || !formState.review.value ) as boolean;\r\n    }\r\n\r\n    const [rating, setRating] = useState(0) // initial rating value\r\n\r\n    // Catch Rating value\r\n    const handleRating = (rate: number) => {\r\n      setRating(rate)\r\n      // other logic\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Tạo nhận xét lớp</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-group\">\r\n                                    <label>Đánh giá</label>\r\n                                    <Rating\r\n                                      onClick={handleRating}\r\n                                      ratingValue={rating}\r\n                                      showTooltip\r\n                                      tooltipArray={['Terrible', 'Bad', 'Average', 'Great', 'Prefect']}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_review\"\r\n                                        value={formState.review.value}\r\n                                        field=\"review\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={20000}\r\n                                        label=\"Nhận xét\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default FormReviewClass;\r\n","export interface IClassesParent {\r\n    id: string;\r\n    name: string;\r\n    link_url: string;\r\n    student_id: string;\r\n    student_name: string;\r\n    teacher_name: string;\r\n    teacher_id: string;\r\n    course_id: string;\r\n    semester_class_id: string;\r\n    semester_class_name: string;\r\n    user_register_teach_semester: number;\r\n    security_code: string;\r\n    total_student: number;\r\n    total_section: number;\r\n    course_name: string;\r\n    semester_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_type_id: string;\r\n    art_level_id: string;\r\n    art_age_id: string;\r\n    art_age_name: string;\r\n}\r\n\r\nexport enum ClassesParentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChartLine } from \"../../common/components/CharLine\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getExerciseForClassStudent } from \"../../common/service/ExerciseStudent/GetExerciseForClassStudent\";\r\nimport { getParentById } from \"../../common/service/Parent/GetParentById\";\r\nimport { getStudentLeaveByClassAndStudent } from \"../../common/service/StudentLeave/GetStudentLeaveByClassStudent\";\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\nimport { getUserGradeExerciseByStudentAndClass } from \"../../common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByClassStudent\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IExerciseStudentState, ILessonState, IStateType, IStudentLeaveState, IUserGradeExerciseSubmissionState, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ManageClasses.css\"\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { FcFeedback } from \"react-icons/fc\";\r\nimport { setModificationState } from \"../../store/actions/lesson.action\";\r\nimport { LessonModificationStatus } from \"../../store/models/lesson.interface\";\r\nimport Popup from \"reactjs-popup\";\r\nimport FormReviewClass from \"./FormReviewClass\";\r\n\r\nconst ManageClassesDone: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const exercise_students: IExerciseStudentState = useSelector((state: IStateType) => state.exercise_students);\r\n    const student_leave: IStudentLeaveState = useSelector((state: IStateType) => state.student_leaves);\r\n    const user_grade_exercise_submission: IUserGradeExerciseSubmissionState = useSelector((state: IStateType) => state.user_grade_exercise_submissions);\r\n    const numberSubmittedCount: number = exercise_students.exercise_submitted_graded.length + exercise_students.exercise_submitted_graded.length;\r\n    const numberNotSubmitNowCount: number = exercise_students.exercise_not_submit.length;\r\n    const numberStudentLeaveCount: number = student_leave.acceptLeaves.length;\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    \r\n    var id_z = localStorage.getItem('teacher_id');\r\n    var teacher_id: string = \"\";\r\n    if (id_z !== null) {\r\n        teacher_id = id_z;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('student_id');\r\n    var student_id: string= \"\";\r\n    if (id_y !== null) {\r\n        student_id = id_y;\r\n    }\r\n\r\n    var id_t = localStorage.getItem('class_id');\r\n    var class_id: string = \"\";\r\n    if (id_t !== null) {\r\n        class_id = id_t;\r\n    }\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getUserById(dispatch, student_id))\r\n                    trackPromise(getParentById(dispatch, teacher_id))\r\n                    trackPromise(getExerciseForClassStudent(dispatch, class_id, student_id))\r\n                    trackPromise(getStudentLeaveByClassAndStudent(dispatch, class_id, student_id))\r\n                    trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id,student_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getUserById(dispatch, student_id))\r\n                trackPromise(getParentById(dispatch, teacher_id))\r\n                trackPromise(getExerciseForClassStudent(dispatch, class_id, student_id))\r\n                trackPromise(getStudentLeaveByClassAndStudent(dispatch, class_id, student_id))\r\n                trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id,student_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, student_id, teacher_id, class_id]);\r\n\r\n    let list_score_user_grade_exercise : number[] = [];\r\n    let list_name_user_grade_exercise : string[] = [];\r\n    user_grade_exercise_submission.user_grade_exercise_submissions.map((ele, idx) => {\r\n        list_score_user_grade_exercise.push(ele.score)\r\n        list_name_user_grade_exercise.push(ele.exercise_name)\r\n        return ele\r\n    })\r\n\r\n\r\n    const labels = list_name_user_grade_exercise;\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Điểm kiểm tra',\r\n                data: list_score_user_grade_exercise,\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            }\r\n        ],\r\n    };\r\n\r\n    const lessons: ILessonState = useSelector((state: IStateType) => state.lessons);\r\n\r\n    const history = useHistory();\r\n    const routeChange = () =>{ \r\n        let path = '/class/exercise-student'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    const [popup, setPopup] = useState(false);\r\n\r\n    function onLessonRemove() {\r\n        setPopup(true);\r\n    }\r\n\r\n    function onRemovePopup(value: boolean) {\r\n        setPopup(false);\r\n    }\r\n    \r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"BÀI TẬP ĐÃ NỘP\" text={`${numberSubmittedCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"BÀI TẬP CHƯA NỘP\" text={`${numberNotSubmitNowCount}`} icon=\"book\" class=\"danger\" />\r\n                <TopCard title=\"SỐ BUỔI NGHỈ\" text={`${numberStudentLeaveCount}`} icon=\"book\" class=\"danger\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n            <Popup\r\n            open={popup}\r\n            onClose={() => setPopup(false)}\r\n            closeOnDocumentClick\r\n        >\r\n            <>\r\n                {\r\n                    function () {\r\n                        if ((lessons.modificationState === LessonModificationStatus.Create) || ((lessons.selectedLesson) && (lessons.modificationState === LessonModificationStatus.Edit))) {\r\n                            return <FormReviewClass isCheck={onRemovePopup}/>\r\n                        }\r\n                    }()\r\n                }\r\n            </>\r\n        </Popup>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <h3 className=\" mb-2\" id=\"level-teacher\">Thông tin học sinh</h3>\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <h4 id=\"full-name\">Tên : {users.teachers.length > 0 ? users.teachers[0].username : \"\"}</h4>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <p id=\"username-teacher\">Giới tính: {users.teachers.length > 0 ? users.teachers[0].sex : \"\"}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-phone fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Số điện thoại: {users.teachers.length > 0 ? users.teachers[0].phone : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Ngày sinh: {users.teachers.length > 0 ? users.teachers[0].dateOfBirth : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Email: {users.teachers.length > 0 ? users.teachers[0].email : \"\"}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <h3 className=\" mb-2\" id=\"level-teacher\">Thông tin giáo viên</h3>\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <h4 id=\"full-name\">Tên : {users.parents.length > 0 ? users.parents[0].username : \"\"}</h4>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <p id=\"username-teacher\">Giới tính: {users.parents.length > 0 ? users.parents[0].sex : \"\"}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-phone fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Số điện thoại: {users.parents.length > 0 ? users.parents[0].phone : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-calendar fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Ngày sinh: {users.parents.length > 0 ? users.parents[0].dateOfBirth : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Email: {users.parents.length > 0 ? users.parents[0].email : \"\"}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <TopCardLevel title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`2`} icon=\"book\" class=\"primary\" />\r\n                    <TopCardLevel title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`1`} icon=\"book\" class=\"danger\" /> */}\r\n                </div>\r\n\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <div className=\"row\">\r\n                        <h3 className=\" mb-2\" id=\"level-teacher\">Thống kê điểm</h3>\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row no-gutters\">\r\n                                        <ChartLine data={data} />\r\n                                    </div>\r\n                                    <div className=\"row justify-content-center\">\r\n                                        <button \r\n                                            className=\"btn btn-success btn-green\" \r\n                                            id=\"btn-into-class-student\"\r\n                                            onClick={() => {routeChange()}}\r\n                                        >\r\n                                            Xem chi tiết\r\n                                            <i className={`fas fa-arrow-right fa-1x`} id=\"icon-arrow-right\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <button \r\n                                className=\"btn btn-success btn-green\" \r\n                                id=\"btn-into-class-review\"\r\n                                onClick={() => {\r\n                                    dispatch(setModificationState(LessonModificationStatus.Create))\r\n                                    onLessonRemove()\r\n                                }}\r\n                            >\r\n                                Nhận xét\r\n                                <FcFeedback />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ManageClassesDone;\r\n","import { IClassesParent, ClassesParentModificationStatus } from \"../models/classes_parent.interface\";\r\n\r\n// register_successfull_classes_parents\r\nexport const ADD_DOING_CLASS: string = \"ADD_DOING_CLASS\";\r\nexport const EDIT_DOING_CLASS: string = \"EDIT_DOING_CLASS\";\r\nexport const REMOVE_DOING_CLASS: string = \"REMOVE_DOING_CLASS\";\r\nexport const CHANGE_DOING_CLASS_AMOUNT: string = \"CHANGE_DOING_CLASS_AMOUNT\";\r\nexport const CHANGE_DOING_CLASS_PENDING_EDIT: string = \"CHANGE_DOING_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_DOING_CLASS_PENDING_EDIT: string = \"CLEAR_DOING_CLASS_PENDING_EDIT\";\r\nexport const REMOVE_DOING_CLASS_ALL: string = \"REMOVE_DOING_CLASS_ALL\";\r\nexport const INITIAL_DOING_CLASS: string = \"INITIAL_DOING_CLASS\";\r\n\r\n// not_register_classes_parents\r\nexport const ADD_DONE_CLASS: string = \"ADD_DONE_CLASS\";\r\nexport const EDIT_DONE_CLASS: string = \"EDIT_DONE_CLASS\";\r\nexport const REMOVE_DONE_CLASS: string = \"REMOVE_DONE_CLASS\";\r\nexport const CHANGE_DONE_CLASS_AMOUNT: string = \"CHANGE_DONE_CLASS_AMOUNT\";\r\nexport const CHANGE_DONE_CLASS_PENDING_EDIT: string = \"CHANGE_DONE_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_DONE_CLASS_PENDING_EDIT: string = \"CLEAR_DONE_CLASS_PENDING_EDIT\";\r\nexport const REMOVE_DONE_CLASS_ALL: string = \"REMOVE_DONE_CLASS_ALL\";\r\nexport const INITIAL_DONE_CLASS: string = \"INITIAL_DONE_CLASS\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(classes_parent: IClassesParent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        classes_parent\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialDoinglClass(classes_parent: IClassesParent): IInitialDoinglClassActionType {\r\n    return { type: INITIAL_DOING_CLASS, classes_parent: classes_parent };\r\n}\r\n\r\nexport function removeDoinglClassAll(): IRemoveDoinglClassAllActionType {\r\n    return { type: REMOVE_DOING_CLASS_ALL };\r\n}\r\n\r\nexport function addDoinglClass(classes_parent: IClassesParent): IAddDoinglClassActionType {\r\n    return { type: ADD_DOING_CLASS, classes_parent: classes_parent };\r\n}\r\n\r\nexport function editDoinglClass(classes_parent: IClassesParent): IEditDoinglClassActionType {\r\n    return { type: EDIT_DOING_CLASS, classes_parent: classes_parent };\r\n}\r\n\r\nexport function removeDoinglClass(id: string): IRemoveDoinglClassActionType {\r\n    return { type: REMOVE_DOING_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedDoinglClass(classes_parent: IClassesParent): IChangeSelectedDoinglClassActionType {\r\n    return { type: CHANGE_DOING_CLASS_PENDING_EDIT, classes_parent: classes_parent };\r\n}\r\n\r\nexport function clearSelectedDoinglClass(): IClearSelectedDoinglClassActionType {\r\n    return { type: CLEAR_DOING_CLASS_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialDoneClass(classes_parent: IClassesParent): IInitialDoneClassActionType {\r\n    return { type: INITIAL_DONE_CLASS, classes_parent: classes_parent };\r\n}\r\n\r\nexport function removeDoneClassAll(): IRemoveDoneClassAllActionType {\r\n    return { type: REMOVE_DONE_CLASS_ALL };\r\n}\r\n\r\nexport function addDoneClass(classes_parent: IClassesParent): IAddDoneClassActionType {\r\n    return { type: ADD_DONE_CLASS, classes_parent: classes_parent };\r\n}\r\n\r\nexport function editDoneClass(classes_parent: IClassesParent): IEditDoneClassActionType {\r\n    return { type: EDIT_DONE_CLASS, classes_parent: classes_parent };\r\n}\r\n\r\nexport function removeDoneClass(id: string): IRemoveDoneClassActionType {\r\n    return { type: REMOVE_DONE_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedDoneClass(classes_parent: IClassesParent): IChangeSelectedDoneClassActionType {\r\n    return { type: CHANGE_DONE_CLASS_PENDING_EDIT, classes_parent: classes_parent };\r\n}\r\n\r\nexport function clearSelectedDoneClass(): IClearSelectedDoneClassActionType {\r\n    return { type: CLEAR_DONE_CLASS_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ClassesParentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_classes_parents\r\ninterface IAddDoinglClassActionType { type: string, classes_parent: IClassesParent };\r\ninterface IEditDoinglClassActionType { type: string, classes_parent: IClassesParent };\r\ninterface IRemoveDoinglClassActionType { type: string, id: string };\r\ninterface IChangeSelectedDoinglClassActionType { type: string, classes_parent: IClassesParent };\r\ninterface IClearSelectedDoinglClassActionType { type: string };\r\ninterface IRemoveDoinglClassAllActionType { type: string }\r\ninterface IInitialDoinglClassActionType {type: string, classes_parent: IClassesParent}\r\n\r\n// not_register_classes_parents\r\ninterface IAddDoneClassActionType { type: string, classes_parent: IClassesParent };\r\ninterface IEditDoneClassActionType { type: string, classes_parent: IClassesParent };\r\ninterface IRemoveDoneClassActionType { type: string, id: string };\r\ninterface IChangeSelectedDoneClassActionType { type: string, classes_parent: IClassesParent };\r\ninterface IClearSelectedDoneClassActionType { type: string };\r\ninterface IRemoveDoneClassAllActionType { type: string }\r\ninterface IInitialDoneClassActionType {type: string, classes_parent: IClassesParent}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ClassesParentModificationStatus};","import { fetchDataSuccess, fetchDataError, removeDoinglClassAll, removeDoneClassAll, initialDoinglClass, initialDoneClass,  addDoinglClass, addDoneClass } from \"../../../store/actions/classes_parent.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ClassesParent {\r\n    id: string;\r\n    name: string;\r\n    link_url: string;\r\n    student_id: string;\r\n    student_name: string;\r\n    teacher_name: string;\r\n    teacher_id: string;\r\n    course_id: string;\r\n    semester_class_id: string;\r\n    semester_class_name: string;\r\n    user_register_teach_semester: number;\r\n    security_code: string;\r\n    total_student: number;\r\n    total_section: number;\r\n    course_name: string;\r\n    semester_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_type_id: string;\r\n    art_level_id: string;\r\n    art_age_id: string;\r\n    art_age_name: string;\r\n}\r\nexport function getClassesParent(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/classes/parent/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getClassesParent(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeDoinglClassAll())\r\n                dispatch(removeDoneClassAll())\r\n                console.log(data.body.classes_done)\r\n                console.log(data.body.classes_doing)\r\n                data.body.classes_done.map((ele: any, index: any) => {\r\n                    var classes_parent: ClassesParent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        semester_class_name: ele.semester_class_name,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        teacher_id: ele.teacher_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semester_class_id,\r\n                        user_register_teach_semester: ele.user_register_teach_semester,\r\n                        security_code: ele.security_code,\r\n                        total_student: ele.total_student,\r\n                        total_section: ele.total_section,\r\n                        link_url: ele.link_url,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_level_id: ele.art_level_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        course_name: ele.course_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name\r\n                    }\r\n                    console.log(classes_parent)\r\n                    if (index === 0){\r\n                        return dispatch(initialDoneClass(classes_parent));\r\n                    }\r\n                    else{\r\n                        return dispatch(addDoneClass(classes_parent))\r\n                    }\r\n                })\r\n\r\n                data.body.classes_doing.map((ele: any, index: any) => {\r\n                    var classes_parent: ClassesParent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        student_id: ele.student_id,\r\n                        semester_class_name: ele.semester_class_name,\r\n                        student_name: ele.student_name,\r\n                        teacher_id: ele.teacher_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semester_class_id,\r\n                        user_register_teach_semester: ele.user_register_teach_semester,\r\n                        security_code: ele.security_code,\r\n                        total_student: ele.total_student,\r\n                        total_section: ele.total_section,\r\n                        link_url: ele.link_url,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_level_id: ele.art_level_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        course_name: ele.course_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name\r\n                    }\r\n                    console.log(classes_parent)\r\n                    if (index === 0){\r\n                        return dispatch(initialDoinglClass(classes_parent));\r\n                    }\r\n                    else{\r\n                        return dispatch(addDoinglClass(classes_parent))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IClassesParent } from \"../../store/models/classes_parent.interface\";\r\nimport { IClassesParentState, IStateType } from \"../../store/models/root.interface\";\r\n\r\nexport type classTeacherListProps = {\r\n  onSelect?: (classTeacher: IClassesParent) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction ClassDoingList(props: classTeacherListProps): JSX.Element {\r\n  const classes_parents: IClassesParentState = useSelector((state: IStateType) => state.classes_parents);\r\n\r\n\r\n  const history = useHistory();\r\n  const routeChange = (classes_parent: IClassesParent) => {\r\n    let path = '/student/classes-doing'; \r\n    localStorage.removeItem('teacher_id');\r\n    localStorage.setItem('teacher_id', classes_parent.teacher_id.toString())\r\n    localStorage.removeItem('student_id');\r\n    localStorage.setItem('student_id', classes_parent.student_id.toString())\r\n    localStorage.removeItem('class_id');\r\n    localStorage.setItem('class_id', classes_parent.id.toString());\r\n    history.push({\r\n        pathname: path,\r\n    });\r\n  }\r\n\r\n  const lessonElements: (JSX.Element | null)[] = classes_parents.classes_doing.map((contest, index) => {\r\n    //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n    if (!contest) { return null; }\r\n    return (<tr className={`table-row `}\r\n      key={`lesson_${contest.id}`} onClick={() => { routeChange(contest) }}>\r\n      <th scope=\"row\" className=\"data-table\">{index + 1}</th>\r\n      <td className=\"data-table\">{contest.student_name}</td>\r\n      <td className=\"data-table\">{contest.name}</td>\r\n      <td className=\"data-table\">{contest.course_name}</td>\r\n      <td className=\"data-table\">{contest.semester_name}</td>\r\n      <td className=\"data-table\">{contest.total_student}</td>\r\n      <td className=\"data-table\">{contest.total_section}</td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"table-responsive portlet\">\r\n        <table className=\"table\">\r\n          <thead id=\"table-thread-contest-section\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"name-row-table\">#</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Bé</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Tên lớp</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Khóa học</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Học kì</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Số học viên</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Số buổi học</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {lessonElements}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ClassDoingList;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IClassesParent } from \"../../store/models/classes_parent.interface\";\r\nimport { IClassesParentState, IStateType } from \"../../store/models/root.interface\";\r\n\r\nexport type classTeacherListProps = {\r\n  onSelect?: (classTeacher: IClassesParent) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction ClassDoneList(props: classTeacherListProps): JSX.Element {\r\n  const classes_parents: IClassesParentState = useSelector((state: IStateType) => state.classes_parents);\r\n\r\n  const history = useHistory();\r\n  const routeChange = (classes_parent: IClassesParent) => {\r\n    let path = '/student/class'; \r\n    localStorage.removeItem('teacher_id');\r\n    localStorage.setItem('teacher_id', classes_parent.teacher_id.toString())\r\n    localStorage.removeItem('student_id');\r\n    localStorage.setItem('student_id', classes_parent.student_id.toString())\r\n    localStorage.removeItem('class_id');\r\n    localStorage.setItem('class_id', classes_parent.id.toString());\r\n    history.push({\r\n        pathname: path,\r\n    });\r\n  }\r\n\r\n  const lessonElements: (JSX.Element | null)[] = classes_parents.classes_done.map((contest, index) => {\r\n    //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n    if (!contest) { return null; }\r\n    return (<tr className={`table-row `}\r\n      key={`lesson_${contest.id}`} onClick={() => { routeChange(contest) }}>\r\n      <th scope=\"row\" className=\"data-table\">{index + 1}</th>\r\n      <td className=\"data-table\">{contest.student_name}</td>\r\n      <td className=\"data-table\">{contest.name}</td>\r\n      <td className=\"data-table\">{contest.course_name}</td>\r\n      <td className=\"data-table\">{contest.semester_name}</td>\r\n      <td className=\"data-table\">{contest.total_student}</td>\r\n      <td className=\"data-table\">{contest.total_section}</td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"table-responsive portlet\">\r\n        <table className=\"table\">\r\n          <thead id=\"table-thread-contest-section\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"name-row-table\">#</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Bé</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Tên lớp</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Khóa học</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Học kì</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Số học viên</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Số buổi học</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {lessonElements}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ClassDoneList;\r\n","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { changeSelectedDoinglClass, setModificationState } from \"../../store/actions/classes_parent.action\";\r\nimport { IClassesParentState, IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport { IClassesParent, ClassesParentModificationStatus } from \"../../store/models/classes_parent.interface\";\r\nimport \"./ClassParent.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { getClassesParent } from \"../../common/service/ClassesParent/GetClassesParent\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport ClassDoingList from \"./ClassDoingList\";\r\nimport ClassDoneList from \"./ClassDoneList\";\r\n\r\nconst ClassParent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const classes_parents: IClassesParentState = useSelector((state: IStateType) => state.classes_parents);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberClassDoingCount: number = classes_parents.classes_doing.length;\r\n    const numberClassDoneCount: number = classes_parents.classes_done.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getClassesParent(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getClassesParent(dispatch,id))\r\n            }\r\n        }\r\n    }, [ dispatch, id, access_token, refresh_token]);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khóa học\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n    function onClassesParentSelect(classes_parent: IClassesParent): void {\r\n        dispatch(changeSelectedDoinglClass(classes_parent));\r\n        dispatch(setModificationState(ClassesParentModificationStatus.None));\r\n    }\r\n\r\n    const [checked, setChecked] = useState(true);\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"KHÓA HỌC\" text={`${numberClassDoingCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"KHÓA HỌC ĐÃ HỌC\" text={`${numberClassDoneCount}`} icon=\"book\" class=\"primary\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(ClassesParentModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked === false) {\r\n                            setChecked(true)\r\n                        }\r\n                    }} style={{\r\n                        color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Đang học</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked === true) {\r\n                            setChecked(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                        }}>Đã học</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#ffffff\" : \"#F24E1E\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách lớp</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ClassDoingList\r\n                                                    onSelect={onClassesParentSelect}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách lớp</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ClassDoneList\r\n                                                    onSelect={onClassesParentSelect}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ClassParent;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChartLine } from \"../../common/components/CharLine\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getExerciseForClassStudent } from \"../../common/service/ExerciseStudent/GetExerciseForClassStudent\";\r\nimport { getParentById } from \"../../common/service/Parent/GetParentById\";\r\nimport { getStudentLeaveByClassAndStudent } from \"../../common/service/StudentLeave/GetStudentLeaveByClassStudent\";\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\nimport { getUserGradeExerciseByStudentAndClass } from \"../../common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByClassStudent\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IExerciseStudentState, IStateType, IStudentLeaveState, IUserGradeExerciseSubmissionState, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ManageClasses.css\"\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst ManageClassesDoing: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const exercise_students: IExerciseStudentState = useSelector((state: IStateType) => state.exercise_students);\r\n    const student_leave: IStudentLeaveState = useSelector((state: IStateType) => state.student_leaves);\r\n    const user_grade_exercise_submission: IUserGradeExerciseSubmissionState = useSelector((state: IStateType) => state.user_grade_exercise_submissions);\r\n    const numberSubmittedCount: number = exercise_students.exercise_submitted_graded.length + exercise_students.exercise_submitted_not_grade.length;\r\n    const numberNotSubmitNowCount: number = exercise_students.exercise_not_submit.length;\r\n    const numberStudentLeaveCount: number = student_leave.acceptLeaves.length;\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    \r\n    var id_z = localStorage.getItem('teacher_id');\r\n    var teacher_id: string = \"\";\r\n    if (id_z !== null) {\r\n        teacher_id = id_z;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('student_id');\r\n    var student_id: string= \"\";\r\n    if (id_y !== null) {\r\n        student_id = id_y;\r\n    }\r\n\r\n    var id_t = localStorage.getItem('class_id');\r\n    var class_id: string = \"\";\r\n    if (id_t !== null) {\r\n        class_id = id_t;\r\n    }\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getUserById(dispatch, student_id))\r\n                    trackPromise(getParentById(dispatch, teacher_id))\r\n                    trackPromise(getExerciseForClassStudent(dispatch, class_id, student_id))\r\n                    trackPromise(getStudentLeaveByClassAndStudent(dispatch, class_id, student_id))\r\n                    trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id,student_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getUserById(dispatch, student_id))\r\n                trackPromise(getParentById(dispatch, teacher_id))\r\n                trackPromise(getExerciseForClassStudent(dispatch, class_id, student_id))\r\n                trackPromise(getStudentLeaveByClassAndStudent(dispatch, class_id, student_id))\r\n                trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id,student_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, student_id, teacher_id, class_id]);\r\n\r\n    let list_score_user_grade_exercise : number[] = [];\r\n    let list_name_user_grade_exercise : string[] = [];\r\n    user_grade_exercise_submission.user_grade_exercise_submissions.map((ele, idx) => {\r\n        list_score_user_grade_exercise.push(ele.score)\r\n        list_name_user_grade_exercise.push(ele.exercise_name)\r\n        return ele\r\n    })\r\n\r\n\r\n    const labels = list_name_user_grade_exercise;\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Điểm kiểm tra',\r\n                data: list_score_user_grade_exercise,\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            }\r\n        ],\r\n    };\r\n\r\n    const history = useHistory();\r\n    const routeChange = () =>{ \r\n        let path = '/class/exercise-student'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"BÀI TẬP ĐÃ NỘP\" text={`${numberSubmittedCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"BÀI TẬP CHƯA NỘP\" text={`${numberNotSubmitNowCount}`} icon=\"book\" class=\"danger\" />\r\n                <TopCard title=\"SỐ BUỔI NGHỈ\" text={`${numberStudentLeaveCount}`} icon=\"book\" class=\"danger\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <h3 className=\" mb-2\" id=\"level-teacher\">Thông tin học sinh</h3>\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <h4 id=\"full-name\">Tên : {users.teachers.length > 0 ? users.teachers[0].username : \"\"}</h4>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <p id=\"username-teacher\">Giới tính: {users.teachers.length > 0 ? users.teachers[0].sex : \"\"}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-phone fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Số điện thoại: {users.teachers.length > 0 ? users.teachers[0].phone : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Ngày sinh: {users.teachers.length > 0 ? users.teachers[0].dateOfBirth : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Email: {users.teachers.length > 0 ? users.teachers[0].email : \"\"}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <h3 className=\" mb-2\" id=\"level-teacher\">Thông tin giáo viên</h3>\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <h4 id=\"full-name\">Tên : {users.parents.length > 0 ? users.parents[0].username : \"\"}</h4>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <p id=\"username-teacher\">Giới tính: {users.parents.length > 0 ? users.parents[0].sex : \"\"}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-phone fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Số điện thoại: {users.parents.length > 0 ? users.parents[0].phone : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-calendar fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Ngày sinh: {users.parents.length > 0 ? users.parents[0].dateOfBirth : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Email: {users.parents.length > 0 ? users.parents[0].email : \"\"}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <TopCardLevel title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`2`} icon=\"book\" class=\"primary\" />\r\n                    <TopCardLevel title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`1`} icon=\"book\" class=\"danger\" /> */}\r\n                </div>\r\n\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <div className=\"row\">\r\n                        <h3 className=\" mb-2\" id=\"level-teacher\">Thống kê điểm</h3>\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row no-gutters\">\r\n                                        <ChartLine data={data} />\r\n                                    </div>\r\n                                    <div className=\"row justify-content-center\">\r\n                                        <button \r\n                                            className=\"btn btn-success btn-green\" \r\n                                            id=\"btn-into-class-student\"\r\n                                            onClick={() => {routeChange()}}\r\n                                        >\r\n                                            Xem chi tiết\r\n                                            <i className={`fas fa-arrow-right fa-1x`} id=\"icon-arrow-right\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>              \r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ManageClassesDoing;\r\n","import React, { PropsWithChildren, ReactElement } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ICardProperties } from \"../types/TopCardContestParent.types\";\r\n\r\nfunction TopCardContest(props: PropsWithChildren<ICardProperties>): ReactElement {\r\n    const history = useHistory();\r\n    const routeChange = (contest: PropsWithChildren<ICardProperties>) =>{ \r\n        localStorage.removeItem('description_contest');\r\n        localStorage.setItem('description_contest', contest.description);\r\n        localStorage.removeItem('contest_id');\r\n        localStorage.setItem('contest_id', contest.id.toString())\r\n        localStorage.removeItem('contest_name');\r\n        localStorage.setItem('contest_name', contest.name)\r\n        localStorage.removeItem('art_age_name');\r\n        localStorage.setItem('art_age_name', contest.art_age_name.toString())\r\n        localStorage.removeItem('art_type_name');\r\n        localStorage.setItem('art_type_name', contest.art_type_name.toString())\r\n        localStorage.removeItem('registration_time');\r\n        localStorage.setItem('registration_time', contest.registration_time.toString())\r\n        localStorage.removeItem('start_time');\r\n        localStorage.setItem('start_time', contest.start_time.toString())\r\n        localStorage.removeItem('end_time');\r\n        localStorage.setItem('end_time', contest.end_time.toString())\r\n        localStorage.removeItem('max_participant');\r\n        localStorage.setItem('max_participant', contest.max_participant.toString())\r\n        let path = '/contests/register'; \r\n        history.push({\r\n            pathname: path,\r\n            state: { description: contest.description, id: contest.id}\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-xl-4 col-md-4 mb-2\" onClick={() => {routeChange(props)}}>\r\n            <div className={`card shadow h-100 py-0`} id=\"topcard-user\" >\r\n                <img className=\"card-img-top\" src={props.url_image} alt=\"\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{props.name}</h5>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Thể loại:</span> <span className=\"header-card-course-value-teacher\">{props.art_type_name}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Độ tuổi:</span> <span className=\"header-card-course-value-teacher\">{props.art_age_name}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Thời gian đăng kí:</span> <span className=\"header-card-course-value-teacher\">{props.registration_time}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Thời gian bắt đầu:</span> <span className=\"header-card-course-value-teacher\">{props.start_time}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-12\" ><span className=\"header-card-course-teacher\">Thời gian kết thúc:</span> <span className=\"header-card-course-value-teacher\">{props.end_time}</span></p>\r\n                        <p className=\"col-12\" ><span className=\"header-card-course-teacher\">Số lượng đăng kí:</span> <span className=\"header-card-course-value-teacher\">{props.total_register_contest} / {props.max_participant}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Đã đăng kí:</span> <span className=\"header-card-course-value-teacher\">{props.student_registered_id.length}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Bé đã đăng kí:</span> {props.student_registered_name.map((ele, idx) => {\r\n                            if (idx === props.student_registered_id.length - 1){\r\n                                return (\r\n                                <span className=\"header-card-course-value-teacher\">{ele}</span>\r\n                                )\r\n                            }\r\n                            return (\r\n                                <span className=\"header-card-course-value-teacher\">{ele} ,</span>\r\n                            )\r\n                        })}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default TopCardContest;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TopCardContest from \"../../common/components/TopCardContestParent\";\r\nimport { IContestParentNewState, IStateType } from \"../../store/models/root.interface\";\r\n\r\n\r\nfunction ContestList(): JSX.Element {\r\n    const contest_parent_news: IContestParentNewState = useSelector((state: IStateType) => state.contest_parent_new);\r\n\r\n\r\n    const teacherRegisterQuantificationElements: (JSX.Element | null)[] = contest_parent_news.contests.map((ele, index) => {\r\n        return (\r\n            <TopCardContest \r\n              name={ele.name} \r\n              id={ele.id}\r\n              icon=\"book\" \r\n              class=\"primary\" \r\n              url_image={ele.image_url}\r\n              art_age_name={ele.art_age_name}\r\n              total_register_contest={ele.total_register_contest}\r\n              art_type_name={ele.art_type_name}\r\n              max_participant={ele.max_participant}\r\n              registration_time={ele.registration_time}\r\n              start_time={ele.start_time}\r\n              description={ele.description}\r\n              end_time={ele.end_time}\r\n              student_registered_id={ele.student_registered_id}\r\n              student_registered_name={ele.student_registered_name}\r\n            />\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n          {teacherRegisterQuantificationElements}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ContestList;\r\n","import React, { PropsWithChildren, ReactElement } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ICardProperties } from \"../types/TopCardCourseParentNew.types\";\r\n\r\nfunction TopCardCourseParentNew(props: PropsWithChildren<ICardProperties>): ReactElement {\r\n    const history = useHistory();\r\n    const routeChange = (course: PropsWithChildren<ICardProperties>) =>{ \r\n        localStorage.removeItem('course_id');\r\n        localStorage.setItem('course_id', course.id.toString())\r\n        let path = '/courses/semester-classes'; \r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-xl-4 col-md-4 mb-2\" onClick={() => {routeChange(props)}}>\r\n            <div className={`card shadow h-100 py-0`} id=\"topcard-user\" >\r\n                <img className=\"card-img-top\" src={props.image_url} alt=\"\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{props.name}</h5>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Thể loại:</span> <span className=\"header-card-course-value-teacher\">{props.art_type_name}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Trình độ:</span> <span className=\"header-card-course-value-teacher\">{props.art_level_name}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Độ tuổi:</span> <span className=\"header-card-course-value-teacher\">{props.art_age_name}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Số buổi:</span> <span className=\"header-card-course-value-teacher\">{props.num_of_section}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Số lớp mở:</span> <span className=\"header-card-course-value-teacher\">{props.total}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Giá:</span> <span className=\"header-card-course-value-teacher\">{props.price} VNĐ</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Đã mua:</span> <span className=\"header-card-course-value-teacher\">{props.student_registered_id.length}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Bé đã học:</span> {props.student_registered_name.map((ele, idx) => {\r\n                            if (idx === props.student_registered_id.length - 1){\r\n                                return (\r\n                                <span className=\"header-card-course-value-teacher\">{ele}</span>\r\n                                )\r\n                            }\r\n                            return (\r\n                                <span className=\"header-card-course-value-teacher\">{ele} ,</span>\r\n                            )\r\n                        })}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default TopCardCourseParentNew;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TopCardCourseParentNew from \"../../common/components/TopCardCourseParentNew\";\r\nimport { ICourseParentNewState, IStateType } from \"../../store/models/root.interface\";\r\n\r\n\r\nfunction CourseNewList(): JSX.Element {\r\n  const course_parent_news: ICourseParentNewState = useSelector((state: IStateType) => state.course_parent_news);\r\n\r\n\r\n    const teacherRegisterQuantificationElements: (JSX.Element | null)[] = course_parent_news.courses.map((ele, index) => {\r\n        return (\r\n            <TopCardCourseParentNew \r\n                id={ele.id}\r\n                name= {ele.name}\r\n                description = {ele.description}\r\n                max_participant = {ele.max_participant}\r\n                num_of_section = {ele.num_of_section}\r\n                price = {ele.price}\r\n                image_url = {ele.image_url}\r\n                is_enabled = {ele.is_enabled}\r\n                creator_id = {ele.creator_id}\r\n                art_type_id = {ele.art_type_id}\r\n                art_level_id = {ele.art_level_id}\r\n                art_age_id = {ele.art_age_id}\r\n                art_type_name = {ele.art_type_name}\r\n                art_level_name = {ele.art_level_name}\r\n                art_age_name = {ele.art_age_name}\r\n                total = {ele.total}\r\n                student_registered_id = {ele.student_registered_id}\r\n                student_registered_name = {ele.student_registered_name}\r\n                create_time = {ele.create_time}\r\n                update_time = {ele.update_time}\r\n            />\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n          {teacherRegisterQuantificationElements}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default CourseNewList;\r\n","import { ICourseParentNew, CourseParentNewModificationStatus } from \"../models/course_parent_new.interface\";\r\nexport const ADD_COURSE_PARENT_NEW: string = \"ADD_COURSE_PARENT_NEW\";\r\nexport const EDIT_COURSE_PARENT_NEW: string = \"EDIT_COURSE_PARENT_NEW\";\r\nexport const REMOVE_COURSE_PARENT_NEW: string = \"REMOVE_COURSE_PARENT_NEW\";\r\nexport const CHANGE_COURSE_PARENT_NEW_AMOUNT: string = \"CHANGE_COURSE_PARENT_NEW_AMOUNT\";\r\nexport const CHANGE_COURSE_PARENT_NEW_PENDING_EDIT: string = \"CHANGE_COURSE_PARENT_NEW_PENDING_EDIT\";\r\nexport const CLEAR_COURSE_PARENT_NEW_PENDING_EDIT: string = \"CLEAR_COURSE_PARENT_NEW_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_COURSE_PARENT_NEW_ALL: string = \"REMOVE_COURSE_PARENT_NEW_ALL\";\r\nexport const INITIAL_COURSE_PARENT_NEW: string = \"INITIAL_COURSE_PARENT_NEW\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course_parent_new: ICourseParentNew) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course_parent_new\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCourseParentNew(course_parent_new: ICourseParentNew): IInitialCourseParentNewActionType {\r\n    return { type: INITIAL_COURSE_PARENT_NEW, course_parent_new: course_parent_new };\r\n}\r\n\r\nexport function removeCourseParentNewAll(): IRemoveCourseParentNewAllActionType {\r\n    return { type: REMOVE_COURSE_PARENT_NEW_ALL };\r\n}\r\n\r\nexport function addCourseParentNew(course_parent_new: ICourseParentNew): IAddCourseParentNewActionType {\r\n    return { type: ADD_COURSE_PARENT_NEW, course_parent_new: course_parent_new };\r\n}\r\n\r\nexport function editCourseParentNew(course_parent_new: ICourseParentNew): IEditCourseParentNewActionType {\r\n    return { type: EDIT_COURSE_PARENT_NEW, course_parent_new: course_parent_new };\r\n}\r\n\r\nexport function removeCourseParentNew(id: string): IRemoveCourseParentNewActionType {\r\n    return { type: REMOVE_COURSE_PARENT_NEW, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseParentNew(course_parent_new: ICourseParentNew): IChangeSelectedCourseParentNewActionType {\r\n    return { type: CHANGE_COURSE_PARENT_NEW_PENDING_EDIT, course_parent_new: course_parent_new };\r\n}\r\n\r\nexport function clearSelectedCourseParentNew(): IClearSelectedCourseParentNewActionType {\r\n    return { type: CLEAR_COURSE_PARENT_NEW_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseParentNewModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddCourseParentNewActionType { type: string, course_parent_new: ICourseParentNew };\r\ninterface IEditCourseParentNewActionType { type: string, course_parent_new: ICourseParentNew };\r\ninterface IRemoveCourseParentNewActionType { type: string, id: string };\r\ninterface IChangeSelectedCourseParentNewActionType { type: string, course_parent_new: ICourseParentNew };\r\ninterface IClearSelectedCourseParentNewActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  CourseParentNewModificationStatus};\r\ninterface IRemoveCourseParentNewAllActionType { type: string }\r\ninterface IInitialCourseParentNewActionType {type: string, course_parent_new: ICourseParentNew}","import { logout } from \"../../../store/actions/account.actions\";\r\nimport { fetchDataSuccess, fetchDataError, removeCourseParentNewAll, initialCourseParentNew, addCourseParentNew } from \"../../../store/actions/course_parent_new.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface CourseParentNew {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    creator_id: string;\r\n    art_type_id: string;\r\n    art_level_id: string;\r\n    art_age_id: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    total: number;\r\n    student_registered_name: string[];\r\n    student_registered_id: string[];\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getCourseParentNew(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/course/parent-new/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getCourseParentNew(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeCourseParentNewAll())\r\n                console.log(data.body.courses)\r\n                data.body.courses.map((ele: any, index: any) => {\r\n                    var course: CourseParentNew = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        is_enabled: ele.is_enabled,\r\n                        creator_id: ele.creator_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        art_level_id: ele.art_level_id,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        total: ele.total,\r\n                        student_registered_id: ele.student_registered_id,\r\n                        student_registered_name: ele.student_registered_name,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n\r\n                    }\r\n                    console.log(course)\r\n                    if (index === 0){\r\n                        return dispatch(initialCourseParentNew(course));\r\n                    }\r\n                    else{\r\n                        return dispatch(addCourseParentNew(course))\r\n                    }\r\n                })\r\n                dispatch(logout())\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { IContestParentNew, ContestParentNewModificationStatus } from \"../models/contest_parent_new.interface\";\r\nexport const ADD_CONTEST_PARENT_NEW: string = \"ADD_CONTEST_PARENT_NEW\";\r\nexport const EDIT_CONTEST_PARENT_NEW: string = \"EDIT_CONTEST_PARENT_NEW\";\r\nexport const REMOVE_CONTEST_PARENT_NEW: string = \"REMOVE_CONTEST_PARENT_NEW\";\r\nexport const CHANGE_CONTEST_PARENT_NEW_AMOUNT: string = \"CHANGE_CONTEST_PARENT_NEW_AMOUNT\";\r\nexport const CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT: string = \"CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT: string = \"CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_CONTEST_PARENT_NEW_ALL: string = \"REMOVE_CONTEST_PARENT_NEW_ALL\";\r\nexport const INITIAL_CONTEST_PARENT_NEW: string = \"INITIAL_CONTEST_PARENT_NEW\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(contest_parent_new: IContestParentNew) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        contest_parent_new\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialContestParentNew(contest_parent_new: IContestParentNew): IInitialContestParentNewActionType {\r\n    return { type: INITIAL_CONTEST_PARENT_NEW, contest_parent_new: contest_parent_new };\r\n}\r\n\r\nexport function removeContestParentNewAll(): IRemoveContestParentNewAllActionType {\r\n    return { type: REMOVE_CONTEST_PARENT_NEW_ALL };\r\n}\r\n\r\nexport function addContestParentNew(contest_parent_new: IContestParentNew): IAddContestParentNewActionType {\r\n    return { type: ADD_CONTEST_PARENT_NEW, contest_parent_new: contest_parent_new };\r\n}\r\n\r\nexport function editContestParentNew(contest_parent_new: IContestParentNew): IEditContestParentNewActionType {\r\n    return { type: EDIT_CONTEST_PARENT_NEW, contest_parent_new: contest_parent_new };\r\n}\r\n\r\nexport function removeContestParentNew(id: string): IRemoveContestParentNewActionType {\r\n    return { type: REMOVE_CONTEST_PARENT_NEW, id: id };\r\n}\r\n\r\nexport function changeSelectedContestParentNew(contest_parent_new: IContestParentNew): IChangeSelectedContestParentNewActionType {\r\n    return { type: CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT, contest_parent_new: contest_parent_new };\r\n}\r\n\r\nexport function clearSelectedContestParentNew(): IClearSelectedContestParentNewActionType {\r\n    return { type: CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ContestParentNewModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddContestParentNewActionType { type: string, contest_parent_new: IContestParentNew };\r\ninterface IEditContestParentNewActionType { type: string, contest_parent_new: IContestParentNew };\r\ninterface IRemoveContestParentNewActionType { type: string, id: string };\r\ninterface IChangeSelectedContestParentNewActionType { type: string, contest_parent_new: IContestParentNew };\r\ninterface IClearSelectedContestParentNewActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ContestParentNewModificationStatus};\r\ninterface IRemoveContestParentNewAllActionType { type: string }\r\ninterface IInitialContestParentNewActionType {type: string, contest_parent_new: IContestParentNew}","import { logout } from \"../../../store/actions/account.actions\";\r\nimport { fetchDataSuccess, fetchDataError, removeContestParentNewAll, initialContestParentNew, addContestParentNew } from \"../../../store/actions/contest_parent_new.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ContestParentNew {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    creator_id: string;\r\n    art_type_id: string;\r\n    art_age_id: string;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n    student_registered_name: string[];\r\n    student_registered_id: string[];\r\n}\r\nexport function getContestParentNew(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest/parent-new/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getContestParentNew(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeContestParentNewAll())\r\n                console.log(data.body.contests)\r\n                data.body.contests.map((ele: any, index: any) => {\r\n                    var contest: ContestParentNew = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        image_url: ele.image_url,\r\n                        is_enabled: ele.is_enabled,\r\n                        creator_id: ele.creator_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        student_registered_id: ele.student_registered_id,\r\n                        student_registered_name: ele.student_registered_name,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestParentNew(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestParentNew(contest))\r\n                    }\r\n                })\r\n                dispatch(logout())\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./Discovery.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport ContestList from \"./ContestList\";\r\nimport CourseNewList from \"./CourseNewList\";\r\nimport { getCourseParentNew } from \"../../common/service/CourseParentNew/GetCourseParentNew\";\r\nimport { getContestParentNew } from \"../../common/service/ContestParentNew/GetContestParentNew\";\r\n\r\nconst DiscoveryParent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    //const semester_classs: ISemesterClassState = useSelector((state: IStateType) => state.semester_classes);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getCourseParentNew(dispatch, id))\r\n                    trackPromise(getContestParentNew(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getCourseParentNew(dispatch, id))\r\n                trackPromise(getContestParentNew(dispatch, id))\r\n            }\r\n        }\r\n        \r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khám phá\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n\r\n    const [checked, setChecked] = useState(true);\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            {/* <div className=\"row\">\r\n                <TopCard title=\"ĐÃ ĐĂNG KÍ\" text={`${numberTeacherRegisterSuccessfullCount}`} icon=\"book\" class=\"primary\" />\r\n            </div> */}\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked === false) {\r\n                            setChecked(true)\r\n                        }\r\n                    }} style={{\r\n                        color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Khóa học</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked === true) {\r\n                            setChecked(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                        }}>Cuộc thi</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#ffffff\" : \"#F24E1E\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <CourseNewList />\r\n                                </div>\r\n\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <ContestList />\r\n                                </div>\r\n\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default DiscoveryParent;\r\n","import { fetchDataSuccess, fetchDataError, removeRegisterSuccessfullCourseAll, addRegisterSuccessfullCourse } from \"../../../store/actions/course_teacher.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface CourseTeacher {\r\n    id: string;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: string;\r\n    semester_class_id: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    semester_name: string;\r\n    image_url: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n    registration_deadline: string;\r\n}\r\nexport function getSemesterClassNew(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester-class/new`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSemesterClassNew(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeRegisterSuccessfullCourseAll())\r\n                //console.log(data.body.lessons)\r\n                data.body.semester_classes.map((ele: any, index: any) => {\r\n                    var course: CourseTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        course_name: ele.course_name,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semster_class_id,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        schedule: ele.schedule,\r\n                        registration_deadline: ele.registration_deadline\r\n\r\n                    }\r\n                    console.log(course)\r\n                    return dispatch(addRegisterSuccessfullCourse(course))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { ICart, CartModificationStatus } from \"../models/cart.interface\";\r\nexport const ADD_CART: string = \"ADD_CART\";\r\nexport const EDIT_CART: string = \"EDIT_CART\";\r\nexport const REMOVE_CART: string = \"REMOVE_CART\";\r\nexport const INCREASE_QUANTITY: string = \"INCREASE_QUANTITY\";\r\nexport const DECREASE_QUANTITY: string = \"DECREASE_QUANTITY\";\r\nexport const CHANGE_CART_AMOUNT: string = \"CHANGE_CART_AMOUNT\";\r\nexport const CHANGE_CART_PENDING_EDIT: string = \"CHANGE_CART_PENDING_EDIT\";\r\nexport const CLEAR_CART_PENDING_EDIT: string = \"CLEAR_CART_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_CART_ALL: string = \"REMOVE_CART_ALL\";\r\nexport const INITIAL_CART: string = \"INITIAL_CART\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(cart: ICart) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        cart\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCart(cart: ICart): IInitialCartActionType {\r\n    return { type: INITIAL_CART, cart: cart };\r\n}\r\n\r\nexport function removeCartAll(): IRemoveCartAllActionType {\r\n    return { type: REMOVE_CART_ALL };\r\n}\r\n\r\nexport function addCart(cart: ICart): IAddCartActionType {\r\n    return { type: ADD_CART, cart: cart };\r\n}\r\n\r\nexport function editCart(cart: ICart): IEditCartActionType {\r\n    return { type: EDIT_CART, cart: cart };\r\n}\r\n\r\nexport function removeCart(id: string): IRemoveCartActionType {\r\n    return { type: REMOVE_CART, id: id };\r\n}\r\n\r\nexport function increaseQuantiry(id: string): IIncreaseQuantityCartActionType {\r\n    return { type: INCREASE_QUANTITY, id: id };\r\n}\r\n\r\nexport function decreaseQuantiry(id: string): IDecreaseQuantityCartActionType {\r\n    return { type: DECREASE_QUANTITY, id: id };\r\n}\r\n\r\nexport function changeSelectedCart(cart: ICart): IChangeSelectedCartActionType {\r\n    return { type: CHANGE_CART_PENDING_EDIT, cart: cart };\r\n}\r\n\r\nexport function clearSelectedCart(): IClearSelectedCartActionType {\r\n    return { type: CLEAR_CART_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CartModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddCartActionType { type: string, cart: ICart };\r\ninterface IEditCartActionType { type: string, cart: ICart };\r\ninterface IRemoveCartActionType { type: string, id: string };\r\ninterface IChangeSelectedCartActionType { type: string, cart: ICart };\r\ninterface IIncreaseQuantityCartActionType {type: string, id: string};\r\ninterface IDecreaseQuantityCartActionType {type: string, id: string};\r\ninterface IClearSelectedCartActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  CartModificationStatus};\r\ninterface IRemoveCartAllActionType { type: string }\r\ninterface IInitialCartActionType {type: string, cart: ICart}","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postUserRegisterJoinSemester(data: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-join-semester`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postUserRegisterJoinSemester(data))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Fragment, Dispatch, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IRootPageStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./SemesterClassDetail.css\"\r\nimport { IUser } from \"../../store/models/user.interface\";\r\nimport ReactSelect from \"../../common/components/ReactSelect\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { getSemesterClassNew } from \"../../common/service/SemesterClass/GetSemesterNew\";\r\nimport { getStudentByParent } from \"../../common/service/Student/GetStudentByParent\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { AiOutlineShoppingCart } from \"react-icons/ai\";\r\nimport { GrLinkDown, GrLinkNext } from \"react-icons/gr\";\r\nimport { addCart } from \"../../store/actions/cart.action\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { postUserRegisterJoinSemester } from \"../../common/service/UserRegisterJoinSemester/PostUserRegisterJoinSemester\";\r\n\r\ntype Option1 = {\r\n    label: string;\r\n    value: string;\r\n}\r\n\r\nconst SemesterClassDetail: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const listTeacher: IUser[] = users.students\r\n    const listTeachers: Option1[] = [];\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    function handleClick() {\r\n        setChecked(!checked)\r\n    }\r\n\r\n    listTeacher.map((ele) => {\r\n        let item: Option1 = { \"label\": ele.username, \"value\": ele.id }\r\n        return listTeachers.push(item)\r\n    })\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    var id_a = localStorage.getItem('description_course');\r\n    var description_course: string = '';\r\n    if (id_a !== null) {\r\n        description_course = id_a;\r\n    }\r\n\r\n    var id_b = localStorage.getItem('course_id');\r\n    var course_id: string = '';\r\n    if (id_b !== null) {\r\n        course_id = id_b;\r\n    }\r\n\r\n    var id_c = localStorage.getItem('course_name');\r\n    var course_name: string = '';\r\n    if (id_c !== null) {\r\n        course_name = id_c;\r\n    }\r\n\r\n    var id_d = localStorage.getItem('art_age_name');\r\n    var art_age_name: string = '';\r\n    if (id_d !== null) {\r\n        art_age_name = id_d;\r\n    }\r\n\r\n    var id_e = localStorage.getItem('art_type_name');\r\n    var art_type_name: string = '';\r\n    if (id_e !== null) {\r\n        art_type_name = id_e;\r\n    }\r\n\r\n    var id_f = localStorage.getItem('num_of_section');\r\n    var num_of_section: string = '';\r\n    if (id_f !== null) {\r\n        num_of_section = id_f;\r\n    }\r\n\r\n    var id_h = localStorage.getItem('schedule');\r\n    var schedule: string = '';\r\n    if (id_h !== null) {\r\n        schedule = id_h;\r\n    }\r\n\r\n    var id_k = localStorage.getItem('art_level_name');\r\n    var art_level_name: string = '';\r\n    if (id_k !== null) {\r\n        art_level_name = id_k;\r\n    }\r\n\r\n    var id_l = localStorage.getItem('semester_class_name');\r\n    var semester_class_name: string = '';\r\n    if (id_l !== null) {\r\n        semester_class_name = id_l;\r\n    }\r\n\r\n    var id_m = localStorage.getItem('price');\r\n    var price: string = '';\r\n    if (id_m !== null) {\r\n        price = id_m;\r\n    }\r\n\r\n    var id_n = localStorage.getItem('semester_class_id');\r\n    var semester_class_id: string = '';\r\n    if (id_n !== null) {\r\n        semester_class_id = id_n;\r\n    }\r\n\r\n    var id_nx = localStorage.getItem('url_image');\r\n    var url_image: string = '';\r\n    if (id_nx !== null) {\r\n        url_image = id_nx;\r\n    }\r\n\r\n    console.log(course_id)\r\n    console.log(semester_class_id)\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getSemesterClassNew(dispatch))\r\n                    trackPromise(getStudentByParent(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getSemesterClassNew(dispatch))\r\n                trackPromise(getStudentByParent(dispatch, id))\r\n            }\r\n        }\r\n        \r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n    function handleRegister() {\r\n        valueTeacher.map((ele, idx) => {\r\n            dispatch(postUserRegisterJoinSemester({\r\n                \"student_id\": ele.value,\r\n                \"semester_classes_id\": semester_class_id,\r\n                \"payer_id\": id,\r\n                \"price\": price,\r\n                \"status\": \"Waiting\"\r\n            }))\r\n            return dispatch(addCart({\r\n                id: semester_class_id,\r\n                name: semester_class_name,\r\n                image: url_image,\r\n                student_id: ele.value,\r\n                student_name: ele.label,\r\n                quantity: 1,\r\n                price: parseInt(price)\r\n            }))\r\n        })\r\n\r\n        toast.success(\"Thêm giỏ hàng thành công...\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 2000\r\n        })\r\n    }\r\n\r\n    const history = useHistory();\r\n    function handleRegister1() {\r\n        valueTeacher.map((ele, idx) => {\r\n            dispatch(postUserRegisterJoinSemester({\r\n                \"student_id\": ele.value,\r\n                \"semester_classes_id\": semester_class_id,\r\n                \"payer_id\": id,\r\n                \"price\": price,\r\n                \"status\": \"Waiting\"\r\n            }))\r\n            return dispatch(addCart({\r\n                id: semester_class_id,\r\n                name: semester_class_name,\r\n                image: url_image,\r\n                student_id: ele.value,\r\n                student_name: ele.label,\r\n                quantity: 1,\r\n                price: parseInt(price)\r\n            }))\r\n        })\r\n        let path = '/cart';\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    const [valueTeacher, setValueTeacher] = useState<any[]>([])\r\n\r\n    console.log(valueTeacher)\r\n\r\n    function changeValueTeacher(value: any) {\r\n        setValueTeacher(value)\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                <ToastContainer />\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4 shadow-1\">\r\n                        <div className=\"row no-gutters align-items-center\">\r\n                            <div className=\"text-xs font-weight-bold text-green text-uppercase \">\r\n                                <p className=\"fullname ml-2 mt-4\">{semester_class_name}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-6 col-md-6\">\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs \">\r\n                                        <p className=\"birthday ml-2\">Khóa học: {course_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday ml-2\">Thể loại: {art_type_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday ml-2\">Độ tuổi: {art_age_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday ml-2\">Trình độ: {art_level_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-xl-6 col-md-6\">\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs mr-2\">\r\n                                        <p className=\"birthday\">Lịch học: {schedule}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday\">Số buổi học: {num_of_section}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday\">Giá: {price}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group col-md-6 ml-2\">\r\n                                <label>Bé</label>\r\n                                <ReactSelect setValue={listTeachers} value={[]} changeValue={changeValueTeacher} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\" id=\"btn-register-course\">\r\n                            <div className=\"col-lg-6 col-md-6 col-xs-6 text-center justify-content-center\">\r\n                                <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course1\" onClick={() => handleRegister()}>\r\n                                    <AiOutlineShoppingCart />\r\n                                    Thêm vào giỏ hàng\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"col-lg-6 col-md-6 col-xs-6 text-center justify-content-center\">\r\n                                <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course2\" onClick={() => handleRegister1()}>\r\n                                    <GrLinkNext id=\"btn-payment\" color=\"#ffffff\" />\r\n                                    Thanh toán ngay\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <div className=\"row\" id=\"btn-register-course\">\r\n                <div className=\"col-lg-12 col-md-12 col-xs-12 text-center justify-content-center\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course4\" onClick={() => handleClick()}>\r\n                    <GrLinkDown id=\"btn-payment\" color=\"#ffffff\" />\r\n                    Xem miêu tả\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <div className=\"col-xl-12 col-lg-12\">\r\n                                <div className=\"card-header py-3\">\r\n                                    <h6 className=\"m-0 font-weight-bold text-green\">Chi tiết</h6>\r\n                                </div>\r\n                                <div className=\"card shadow mb-4\">\r\n                                    <div className=\"card-body\" dangerouslySetInnerHTML={{ __html: description_course }}>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n            </Fragment >\r\n    );\r\n};\r\n\r\nexport default SemesterClassDetail;\r\n","import React, { Fragment, Dispatch, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IRootPageStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport \"./ConestDetail.css\"\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IUser } from \"../../store/models/user.interface\";\r\nimport ReactSelect from \"../../common/components/ReactSelect\";\r\nimport { postUserRegisterContest } from \"../../common/service/UserRegisterContest/PostUserRegisterContest\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { getStudentByParent } from \"../../common/service/Student/GetStudentByParent\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { GrLinkDown } from \"react-icons/gr\";\r\ntype Option1 = {\r\n    label: string;\r\n    value: string;\r\n}\r\n\r\nconst ConestDetailStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const listTeacher: IUser[] = users.students\r\n    const listTeachers: Option1[] = [];\r\n    listTeacher.map((ele) => {\r\n        let item: Option1 = { \"label\": ele.username, \"value\": ele.id }\r\n        return listTeachers.push(item)\r\n    })\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    function handleClick() {\r\n        setChecked(!checked)\r\n    }\r\n\r\n    var id_x = localStorage.getItem('contest_id');\r\n    let contest_id: string = \"\";\r\n    if (id_x !== null) {\r\n        contest_id = id_x;\r\n    }\r\n\r\n    console.log(contest_id)\r\n\r\n    var id_y = localStorage.getItem('description_contest');\r\n    let description_contest: string = \"\";\r\n    if (id_y !== null) {\r\n        description_contest = id_y;\r\n    }\r\n\r\n    var id_z = localStorage.getItem('id');\r\n    let id: string = \"\";\r\n    if (id_z !== null) {\r\n        id = id_z;\r\n    }\r\n\r\n    var id_a = localStorage.getItem('art_age_name');\r\n    let art_age_name: string = \"\";\r\n    if (id_a !== null) {\r\n        art_age_name = id_a;\r\n    }\r\n\r\n    var id_b = localStorage.getItem('art_type_name');\r\n    let art_type_name: string = \"\";\r\n    if (id_b !== null) {\r\n        art_type_name = id_b;\r\n    }\r\n\r\n    var id_c = localStorage.getItem('registration_time');\r\n    let registration_time: string = \"\";\r\n    if (id_c !== null) {\r\n        registration_time = id_c;\r\n    }\r\n\r\n    var id_d = localStorage.getItem('start_time');\r\n    let start_time: string = \"\";\r\n    if (id_d !== null) {\r\n        start_time = id_d;\r\n    }\r\n\r\n    var id_e = localStorage.getItem('end_time');\r\n    let end_time: string = \"\";\r\n    if (id_e !== null) {\r\n        end_time = id_e;\r\n    }\r\n\r\n    var id_f = localStorage.getItem('contest_name');\r\n    let contest_name: string = \"\";\r\n    if (id_f !== null) {\r\n        contest_name = id_f;\r\n    }\r\n\r\n    var id_h = localStorage.getItem('max_participant');\r\n    let max_participant: string = \"\";\r\n    if (id_h !== null) {\r\n        max_participant = id_h;\r\n    }\r\n\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getStudentByParent(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getStudentByParent(dispatch, id))\r\n            }\r\n        }\r\n\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Cuộc thi\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n    const history = useHistory();\r\n    function routeHome() {\r\n        let path = `/contests`;\r\n        history.push(path);\r\n    }\r\n\r\n    function handleRegister() {\r\n        const id = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n        valueTeacher.map((ele, idx) => {\r\n            return dispatch(postUserRegisterContest({\r\n                student_id: ele.value,\r\n                contest_id: contest_id\r\n            }))\r\n        })\r\n\r\n        toast.update(id, { render: \"Đăng kí cuộc thi cho bé thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n        setTimeout(function () {\r\n            routeHome();\r\n        }, 2000);\r\n    }\r\n\r\n    const [valueTeacher, setValueTeacher] = useState<any[]>([])\r\n\r\n    console.log(valueTeacher)\r\n\r\n    function changeValueTeacher(value: any) {\r\n        setValueTeacher(value)\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                <ToastContainer />\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"row no-gutters align-items-center\">\r\n                            <div className=\"text-xs font-weight-bold text-green text-uppercase \">\r\n                                <p className=\"fullname ml-2 mt-4\">{contest_name}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-6 col-md-6\">\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs \">\r\n                                        <p className=\"birthday ml-2\">Độ tuổi đăng kí: {art_age_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday ml-2\">Thể loại: {art_type_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday ml-2\">Thời gian đăng kí: {registration_time}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-xl-6 col-md-6\">\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs \">\r\n                                        <p className=\"birthday\">Thời gian bắt đầu: {start_time}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday\">Thời gian kết thúc: {end_time}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday\">Số người tham gia tối đa: {max_participant}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group col-md-6 ml-2\">\r\n                                <label>Bé</label>\r\n                                <ReactSelect setValue={listTeachers} value={[]} changeValue={changeValueTeacher} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row text-center justify-content-center\" id=\"btn-register-course\">\r\n                            <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course\" onClick={() => handleRegister()}>\r\n                                <i className=\"fas fa fa-plus\"></i>\r\n                                Đăng kí ngay\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row\" id=\"btn-register-course\">\r\n                    <div className=\"col-lg-12 col-md-12 col-xs-12 text-center justify-content-center\">\r\n                        <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course4\" onClick={() => handleClick()}>\r\n                            <GrLinkDown id=\"btn-payment\" color=\"#ffffff\" />\r\n                            Xem miêu tả\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    function () {\r\n                        if (checked === true) {\r\n                            return (\r\n                                <div className=\"col-xl-12 col-lg-12\">\r\n                                    <div className=\"card-header py-3\">\r\n                                        <h6 className=\"m-0 font-weight-bold text-green\">Chi tiết</h6>\r\n                                    </div>\r\n                                    <div className=\"card shadow mb-4\">\r\n                                        <div className=\"card-body\" dangerouslySetInnerHTML={{ __html: description_contest }}>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }()\r\n                }\r\n\r\n            </Fragment >\r\n    );\r\n};\r\n\r\nexport default ConestDetailStudent;\r\n","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postUserRegisterContest(data: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-join-contest`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postUserRegisterContest(data))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport \"./SemesterClassDetail.css\"\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { GrLinkNext } from \"react-icons/gr\";\r\nimport { IRootPageStateType, IStateType, IUserRegisterJoinSemesterState } from \"../../store/models/root.interface\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {removeCart } from \"../../store/actions/cart.action\";\r\nimport { postMomo } from \"../../common/service/Payment/PostPayment\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { getUserRegisterJoinSemesterByPayer } from \"../../common/service/UserRegisterJoinSemester/GetUserRegisterJoinSemesterByPayer\";\r\n\r\n\r\nconst CartForm: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const user_register_join_semesters: IUserRegisterJoinSemesterState = useSelector((state: IStateType) => state.user_register_join_semesters);\r\n    var id_x = localStorage.getItem('id');\r\n    let id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getUserRegisterJoinSemesterByPayer(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getUserRegisterJoinSemesterByPayer(dispatch, id))\r\n            }\r\n        }\r\n        \r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Giỏ hàng\", \"\"));\r\n    }, [path.area, dispatch])\r\n    \r\n    function handlePayment() {\r\n        let ids: string[] = []; \r\n        user_register_join_semesters.waiting.map((ele, idx) => {\r\n            return ids.push(ele.id)\r\n        })\r\n        console.log(\"ids\", ids)\r\n        postMomo(user_register_join_semesters.waiting.reduce((prev, next) => prev + ((next.price * 1) || 0), 0), ids);\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>Tên</th>\r\n                        <th>Ảnh</th>\r\n                        <th>Bé</th>\r\n                        <th>Gía</th>\r\n                        <th>Số lượng</th>\r\n                        <th>Tiền</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    user_register_join_semesters.waiting.map((item,key)=>{\r\n                        return(\r\n                            <tr key={key}>   \r\n                            <td><i className=\"badge badge-danger\" onClick={()=>{dispatch(removeCart(item.id))}}>X</i></td>\r\n                            <td>{item.course_name}</td>\r\n                            <td><img src={item.link_url} style={{width:'100px',height:'80px'}} alt=\"\" /></td>\r\n                            <td>{item.student_name}</td>\r\n                            <td>{item.price} VND</td>\r\n                            <td>\r\n                                    <span className=\"btn btn-info\">1</span>\r\n                            </td>\r\n                            <td>{item.price * 1} VND</td>\r\n                        </tr>\r\n                        )\r\n                    })\r\n                         \r\n                }\r\n                <tr>\r\n                    <td colSpan={5}>Tổng tiền</td>\r\n                    <td>{user_register_join_semesters.waiting.reduce((prev, next) => prev + ((next.price * 1) || 0), 0)} $</td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan={5}></td>\r\n                    <td>\r\n                        <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course3\" onClick={() => {handlePayment()}}>\r\n                            <GrLinkNext id=\"btn-payment\" color=\"#ffffff\"/>\r\n                            Thanh toán\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n               \r\n            </table>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default CartForm;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IContestSubmissionState, IRootPageStateType, IStateType, IUserGradeContestSubmissionState, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ManageStudent.css\"\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { getUserGradeContestSubmissionByContestId } from \"../../common/service/UserGradeContestSubmission/GetUserGradeContestSubmissionByContest\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { IUserGradeContestSubmission } from \"../../store/models/user_grade_contest_submission.interface\";\r\nimport { getStudentByParent } from \"../../common/service/Student/GetStudentByParent\";\r\nimport { getContestSubmissionByContest } from \"../../common/service/ContestSubmission/GetContestSubmissionByContest\";\r\nimport { IContestSubmission } from \"../../store/models/contest_submission.interface\";\r\n\r\nconst DetailContestStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const user_grade_contest_submissions: IUserGradeContestSubmissionState = useSelector((state: IStateType) => state.user_grade_contest_submissions);\r\n    const contest_submissions: IContestSubmissionState = useSelector((state: IStateType) => state.contest_submissions);\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    console.log(users.students)\r\n    console.log(contest_submissions.contest_gradeds)\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n\r\n    var id_k = localStorage.getItem('child_id');\r\n    let child_id: string = \"\";\r\n    if (id_k !== null) {\r\n        child_id = id_k;\r\n    }\r\n\r\n    let childs: IUserGradeContestSubmission = {\r\n        student_id: \"\",\r\n        student_name: \"\",\r\n        teacher_id: \"\",\r\n        teacher_name: \"\",\r\n        contest_id: \"\",\r\n        contest_name: '',\r\n        contest_submission_id: \"\",\r\n        feedback: \"\",\r\n        score: 0,\r\n        time: \"\"\r\n    };\r\n    users.students.map((ele, idx) => {\r\n        return user_grade_contest_submissions.userGradeContestSubmissions.map((element, idx) => {\r\n            if (element.student_id === child_id) {\r\n                childs = element\r\n            }\r\n            return element\r\n        })\r\n    })\r\n\r\n    let submistions: IContestSubmission = {\r\n        id: \"\",\r\n        student_id: \"\",\r\n        student_name: '',\r\n        contest_id: \"\",\r\n        contest_name: \"\",\r\n        image_url: '',\r\n        create_time: \"\",\r\n        update_time: \"\"\r\n    };\r\n    contest_submissions.contest_gradeds.map((element, idx) => {\r\n        if (element.student_id === child_id) {\r\n            submistions = element;\r\n        }\r\n        return element\r\n    })\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    var id_y = localStorage.getItem('contest_id');\r\n    let contest_id = \"\";\r\n\r\n    if (id_y !== null) {\r\n        contest_id = id_y;\r\n    }\r\n\r\n    var id_z = localStorage.getItem('contest_name');\r\n    let contest_name = \"\";\r\n\r\n    if (id_z !== null) {\r\n        contest_name = id_z;\r\n    }\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getStudentByParent(dispatch, id))\r\n                    trackPromise(getContestSubmissionByContest(dispatch, contest_id))\r\n                    trackPromise(getUserGradeContestSubmissionByContestId(dispatch, contest_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getStudentByParent(dispatch, id))\r\n                trackPromise(getContestSubmissionByContest(dispatch, contest_id))\r\n                trackPromise(getUserGradeContestSubmissionByContestId(dispatch, contest_id))\r\n            }\r\n        }\r\n        dispatch(updateCurrentPath(\"Cuoc thi\", \"Chi tiết\"));\r\n    }, [dispatch, access_token, refresh_token, contest_id, id]);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Cuộc thi\", \"Chi tiết\"));\r\n    }, [path.area, dispatch]);\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                            <div className=\"card-header py-3\">\r\n                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Cuộc thi</h6>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <p>\r\n                                    {contest_name}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-6 col-lg-6\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Bài làm của bé: {childs.student_name}</h6>\r\n                        </div>\r\n                        <img className=\"card-img-top\" src={submistions.image_url} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"col-xl-6 col-lg-6\">\r\n                        <div className=\"card shadow mb-4\">\r\n                            <div className=\"card-header py-3\">\r\n                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Điểm của bé</h6>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <CircularProgressbar value={childs.score * 10} text={`${childs.score}`} />;\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"card shadow mb-4\">\r\n                            <div className=\"card-header py-3\">\r\n                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Nhận xét</h6>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                {childs.feedback}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default DetailContestStudent;\r\n","import { IAttendance, AttendanceModificationStatus } from \"../models/attendance.interface\";\r\nexport const ADD_ATTENDANCE: string = \"ADD_ATTENDANCE\";\r\nexport const EDIT_ATTENDANCE: string = \"EDIT_ATTENDANCE\";\r\nexport const REMOVE_ATTENDANCE: string = \"REMOVE_ATTENDANCE\";\r\nexport const CHANGE_ATTENDANCE_AMOUNT: string = \"CHANGE_ATTENDANCE_AMOUNT\";\r\nexport const CHANGE_ATTENDANCE_PENDING_EDIT: string = \"CHANGE_ATTENDANCE_PENDING_EDIT\";\r\nexport const CLEAR_ATTENDANCE_PENDING_EDIT: string = \"CLEAR_ATTENDANCE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_ATTENDANCE_ALL: string = \"REMOVE_ATTENDANCE_ALL\";\r\nexport const INITIAL_ATTENDANCE: string = \"INITIAL_ATTENDANCE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(attendance: IAttendance) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        attendance\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialAttendance(attendance: IAttendance): IInitialAttendanceActionType {\r\n    return { type: INITIAL_ATTENDANCE, attendance: attendance };\r\n}\r\n\r\nexport function removeAttendanceAll(): IRemoveAttendanceAllActionType {\r\n    return { type: REMOVE_ATTENDANCE_ALL };\r\n}\r\n\r\nexport function addAttendance(attendance: IAttendance): IAddAttendanceActionType {\r\n    return { type: ADD_ATTENDANCE, attendance: attendance };\r\n}\r\n\r\nexport function editAttendance(attendance: IAttendance): IEditAttendanceActionType {\r\n    return { type: EDIT_ATTENDANCE, attendance: attendance };\r\n}\r\n\r\nexport function removeAttendance(id: string): IRemoveAttendanceActionType {\r\n    return { type: REMOVE_ATTENDANCE, id: id };\r\n}\r\n\r\nexport function changeSelectedAttendance(attendance: IAttendance): IChangeSelectedAttendanceActionType {\r\n    return { type: CHANGE_ATTENDANCE_PENDING_EDIT, attendance: attendance };\r\n}\r\n\r\nexport function clearSelectedAttendance(): IClearSelectedAttendanceActionType {\r\n    return { type: CLEAR_ATTENDANCE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: AttendanceModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddAttendanceActionType { type: string, attendance: IAttendance };\r\ninterface IEditAttendanceActionType { type: string, attendance: IAttendance };\r\ninterface IRemoveAttendanceActionType { type: string, id: string };\r\ninterface IChangeSelectedAttendanceActionType { type: string, attendance: IAttendance };\r\ninterface IClearSelectedAttendanceActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  AttendanceModificationStatus};\r\ninterface IRemoveAttendanceAllActionType { type: string }\r\ninterface IInitialAttendanceActionType {type: string, attendance: IAttendance}","import { fetchDataRequest } from \"../../../store/actions/art_type.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getAttendance } from \"./GetAttendance\";\r\n\r\nexport function putAttendance(data: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-attendance/${id}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putAttendance(data, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (xx => {\r\n                getAttendance(dispatch)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataSuccess, fetchDataError, removeAttendanceAll, initialAttendance, addAttendance } from \"../../../store/actions/attendance.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface Attendance {\r\n    id: string;\r\n    student_id: string;\r\n    section_id: string;\r\n    status: string;\r\n    section_number: number;\r\n    email: string;\r\n    course_name: string;\r\n    course_id: string;\r\n    student_name: string;\r\n    section_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getAttendance(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-attendance`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getAttendance(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeAttendanceAll())\r\n                console.log(data.body.UserAttendance)\r\n                data.body.UserAttendance.map((ele: any, index: any) => {\r\n                    var attendance: Attendance = {\r\n                        id: ele.id,\r\n                        email: ele.email,\r\n                        student_id: ele.student_id,\r\n                        section_number: ele.section_number,\r\n                        course_id: ele.course_id,\r\n                        course_name: ele.course_name,\r\n                        student_name: ele.student_name,\r\n                        section_id: ele.section_id,\r\n                        section_name: ele.section_name,\r\n                        status: ele.status,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialAttendance(attendance));\r\n                    }\r\n                    else{\r\n                        return dispatch(addAttendance(attendance))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { ChangeEvent, Dispatch, Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { putAttendance } from \"../../common/service/Attendance/PutAttendance\";\r\nimport { ILesson } from \"../../store/models/lesson.interface\";\r\nimport { IAttendanceState, IStateType } from \"../../store/models/root.interface\";\r\n\r\nexport type lessonListProps = {\r\n    onSelect?: (lesson: ILesson) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\ntype Options = {\r\n    id: string;\r\n    student_id: string;\r\n    section_id: string;\r\n    status: boolean;\r\n}\r\n\r\n/* let data = [\r\n    {\r\n        id: 1,\r\n        student_name: 'A',\r\n        student_id: 1,\r\n        section_id: 1,\r\n        section_number: 1,\r\n        course_name: '',\r\n        email: ''\r\n    },\r\n    {\r\n        id: 2,\r\n        student_name: 'B',\r\n        student_id: 1,\r\n        section_id: 1,\r\n        section_number: 1,\r\n        course_name: '',\r\n        email: ''\r\n    },\r\n    {\r\n        id: 3,\r\n        student_id: 1,\r\n        section_id: 1,\r\n        student_name: 'C',\r\n        section_number: 1,\r\n        course_name: '',\r\n        email: ''\r\n    }\r\n] */\r\n\r\nfunction AttendanceList(props: lessonListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const attendances: IAttendanceState = useSelector((state: IStateType) => state.attendances);\r\n\r\n    let lst: Options[] = [];\r\n\r\n    if (attendances.attendances.length > 0) {\r\n        attendances.attendances.map((ele, idx) => {\r\n            return lst.push({\r\n                id: ele.id,\r\n                student_id: ele.student_id,\r\n                section_id: ele.section_id,\r\n                status: false\r\n            })\r\n        })\r\n    }\r\n\r\n    function onValueChanged(event: ChangeEvent<HTMLInputElement>, id: string): void {\r\n        lst.map((ele, idx) => {\r\n            if (ele.id === id) {\r\n                ele.status = !ele.status;\r\n            }\r\n            return ele\r\n        })\r\n\r\n        console.log(lst)\r\n    }\r\n\r\n    console.log(lst)\r\n    \r\n    const lessonElements: (JSX.Element | null)[] = attendances.attendances.map((exercise, index) => {\r\n        //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n        if (!exercise) { return null; }\r\n        return (<tr className={`table-row `}\r\n            key={`lesson_${index}`} >\r\n            <th scope=\"row\" className=\"data-table\">{index + 1}</th>\r\n            <td className=\"data-table\">{exercise.student_name}</td>\r\n            <td className=\"data-table\">{exercise.email}</td>\r\n            <td className=\"data-table\">{exercise.course_name}</td>\r\n            <td className=\"data-table\">{exercise.section_number}</td>\r\n            <td>\r\n                <input type=\"checkbox\" onChange={(e) => {onValueChanged(e, exercise.id)}}/>\r\n            </td>\r\n        </tr>);\r\n    });\r\n\r\n    function handlePutAttendance() {\r\n        lst.map((ele, idx) => {\r\n            return dispatch(putAttendance({\r\n                student_id: ele.student_id,\r\n                section_id: ele.section_id,\r\n                status: ele.status\r\n            }, ele.id))\r\n        })\r\n\r\n        toast.success(\"Điểm danh thành công!\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 2000\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"table-responsive portlet\">\r\n                <table className=\"table\">\r\n                    <thead id=\"table-thread-exercise-section\">\r\n                        <tr>\r\n                            <th scope=\"col\" className=\"name-row-table\">#</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Tên học sinh</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Email</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Khóa học</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Buổi</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Điểm danh</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {lessonElements}\r\n                        <tr className={`table-row `}>\r\n                            <button\r\n                                className=\"btn btn-success ml-2\"\r\n                                id=\"btn-into-room\"\r\n                                onClick={() => {handlePutAttendance()}}\r\n                            >\r\n                                Gửi\r\n                            </button>\r\n                            </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default AttendanceList;\r\n","import { fetchDataSuccess, fetchDataError, removeAttendanceAll, initialAttendance, addAttendance } from \"../../../store/actions/attendance.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface Attendance {\r\n    id: string;\r\n    student_id: string;\r\n    section_id: string;\r\n    status: string;\r\n    email: string;\r\n    section_number: number;\r\n    course_name: string;\r\n    course_id: string;\r\n    student_name: string;\r\n    section_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getAttendanceBySection(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-attendance/section/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getAttendanceBySection(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeAttendanceAll())\r\n                console.log(data.body.UserAttendance)\r\n                data.body.UserAttendance.map((ele: any, index: any) => {\r\n                    var attendance: Attendance = {\r\n                        id: ele.id,\r\n                        student_id: ele.student_id,\r\n                        email: ele.email,\r\n                        section_number: ele.section_number,\r\n                        course_id: ele.course_id,\r\n                        course_name: ele.course_name,\r\n                        student_name: ele.student_name,\r\n                        section_id: ele.section_id,\r\n                        section_name: ele.section_name,\r\n                        status: ele.status,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialAttendance(attendance));\r\n                    }\r\n                    else{\r\n                        return dispatch(addAttendance(attendance))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport \"./Attendance.css\"\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport AttendanceList from \"./AttendanceList\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { getAttendanceBySection } from \"../../common/service/Attendance/GetAttendanceBySection\";\r\n\r\nconst Attendance: React.FC = () => {\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n\r\n  var id_x = localStorage.getItem('section_id');\r\n  var section_id: string = \"\";\r\n  if (id_x !== null) {\r\n    section_id = id_x;\r\n  }\r\n\r\n  let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getAttendanceBySection(dispatch, section_id))\r\n                }\r\n            }\r\n            else {\r\n              trackPromise(getAttendanceBySection(dispatch, section_id))\r\n            }\r\n        }\r\n        dispatch(updateCurrentPath(\"Điểm danh\", \"\"));\r\n    }, [dispatch, access_token, refresh_token, section_id]);\r\n\r\n  return (\r\n    promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n        {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n        {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n        <ToastContainer />\r\n        <div className=\"row\">\r\n          <TopCard title=\"HỌC SINH\" text={``} icon=\"book\" class=\"primary\" />\r\n          <TopCard title=\"HỌC SINH THAM GIA\" text={``} icon=\"book\" class=\"primary\" />\r\n          {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n        </div>\r\n\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n              <div className=\"card-header py-3\">\r\n                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách học sinh</h6>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <AttendanceList />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n      </Fragment>\r\n  );\r\n};\r\n\r\nexport default Attendance;\r\n","export interface IClassesStudent {\r\n    id: string;\r\n    name: string;\r\n    link_url: string;\r\n    student_id: string;\r\n    student_name: string;\r\n    teacher_name: string;\r\n    teacher_id: string;\r\n    course_id: string;\r\n    semester_class_id: string;\r\n    semester_class_name: string;\r\n    user_register_teach_semester: number;\r\n    security_code: string;\r\n    total_student: number;\r\n    total_section: number;\r\n    course_name: string;\r\n    semester_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_type_id: string;\r\n    art_level_id: string;\r\n    art_age_id: string;\r\n    art_age_name: string;\r\n    user_register_join_semester_id: string;\r\n}\r\n\r\nexport enum ClassesStudentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IClassesStudent } from \"../../store/models/classes_student.interface\";\r\nimport { IClassesStudentState, IStateType } from \"../../store/models/root.interface\";\r\n\r\nexport type classTeacherListProps = {\r\n  onSelect?: (classTeacher: IClassesStudent) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction ClassDoingList(props: classTeacherListProps): JSX.Element {\r\n  const classes_students: IClassesStudentState = useSelector((state: IStateType) => state.classes_students);\r\n\r\n\r\n  const history = useHistory();\r\n  const routeChange = (classes_student: IClassesStudent) => {\r\n    let path = '/classes/detail-student'; \r\n    localStorage.removeItem('teacher_id');\r\n    localStorage.setItem('teacher_id', classes_student.teacher_id.toString())\r\n    localStorage.removeItem('student_id');\r\n    localStorage.setItem('student_id', classes_student.student_id.toString())\r\n    localStorage.removeItem('class_id');\r\n    localStorage.setItem('class_id', classes_student.id.toString());\r\n    history.push({\r\n        pathname: path,\r\n    });\r\n  }\r\n\r\n  const routeChange1 = (classes_student: IClassesStudent) => {\r\n    let path = '/classes/schedule'; \r\n    localStorage.removeItem('teacher_id');\r\n    localStorage.setItem('teacher_id', classes_student.teacher_id.toString())\r\n    localStorage.removeItem('student_id');\r\n    localStorage.setItem('student_id', classes_student.student_id.toString())\r\n    localStorage.removeItem('class_id');\r\n    localStorage.setItem('class_id', classes_student.id.toString());\r\n    localStorage.removeItem('course_name');\r\n    localStorage.setItem('course_name', classes_student.course_name.toString());\r\n    history.push({\r\n        pathname: path,\r\n    });\r\n  }\r\n\r\n  const lessonElements: (JSX.Element | null)[] = classes_students.classes_doing.map((contest, index) => {\r\n    //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n    if (!contest) { return null; }\r\n    return (<tr className={`table-row `}\r\n      key={`lesson_${contest.id}`}>\r\n      <th scope=\"row\" className=\"data-table\">{index + 1}</th>\r\n      <td className=\"data-table\">{contest.course_name}</td>\r\n      <td className=\"data-table\">{contest.semester_name}</td>\r\n      <td className=\"data-table\">{contest.total_student}</td>\r\n      <td className=\"data-table\">{contest.total_section}</td>\r\n      <td className=\"data-table\">\r\n        <button \r\n            type=\"button\" \r\n            className=\"btn btn-primary\" \r\n            onClick={() => { routeChange1(contest) }}\r\n        >\r\n            Lịch học\r\n        </button>\r\n      </td>\r\n      <td className=\"data-table\">\r\n        <button \r\n            type=\"button\" \r\n            className=\"btn btn-success enter-class\" \r\n            onClick={() => { routeChange(contest) }}\r\n        >\r\n            Vào học\r\n        </button>\r\n      </td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"table-responsive portlet\">\r\n        <table className=\"table\">\r\n          <thead id=\"table-thread-contest-section\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"name-row-table\">#</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Khóa học</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Học kì</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Số học viên</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Số buổi học</th>\r\n              <th scope=\"col\" className=\"name-row-table\"></th>\r\n              <th scope=\"col\" className=\"name-row-table\"></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {lessonElements}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ClassDoingList;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IClassesStudent } from \"../../store/models/classes_student.interface\";\r\nimport { IClassesStudentState, IStateType } from \"../../store/models/root.interface\";\r\n\r\nexport type classTeacherListProps = {\r\n  onSelect?: (classTeacher: IClassesStudent) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction ClassDoneList(props: classTeacherListProps): JSX.Element {\r\n  const classes_students: IClassesStudentState = useSelector((state: IStateType) => state.classes_students);\r\n\r\n  const history = useHistory();\r\n  const routeChange = (classes_student: IClassesStudent) => {\r\n    let path = '/classes/review'; \r\n    localStorage.removeItem('teacher_id');\r\n    localStorage.setItem('teacher_id', classes_student.teacher_id.toString())\r\n    localStorage.removeItem('student_id');\r\n    localStorage.setItem('student_id', classes_student.student_id.toString())\r\n    localStorage.removeItem('class_id');\r\n    localStorage.setItem('class_id', classes_student.id.toString());\r\n    localStorage.removeItem('course_name');\r\n    localStorage.setItem('course_name', classes_student.course_name)\r\n    localStorage.removeItem('user_register_join_semester_id')\r\n    localStorage.setItem('user_register_join_semester_id', classes_student.user_register_join_semester_id.toString())\r\n    history.push({\r\n        pathname: path,\r\n    });\r\n  }\r\n\r\n  const lessonElements: (JSX.Element | null)[] = classes_students.classes_done.map((contest, index) => {\r\n    //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n    if (!contest) { return null; }\r\n    return (<tr className={`table-row `}\r\n      key={`lesson_${contest.id}`}>\r\n      <th scope=\"row\" className=\"data-table\">{index + 1}</th>\r\n      <td className=\"data-table\">{contest.course_name}</td>\r\n      <td className=\"data-table\">{contest.semester_name}</td>\r\n      <td className=\"data-table\">{contest.total_student}</td>\r\n      <td className=\"data-table\">{contest.total_section}</td>\r\n      <td className=\"data-table\">\r\n        <button \r\n            type=\"button\" \r\n            className=\"btn btn-primary\" \r\n            onClick={() => { routeChange(contest)}}\r\n        >\r\n            Xem review\r\n        </button>\r\n      </td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"table-responsive portlet\">\r\n        <table className=\"table\">\r\n          <thead id=\"table-thread-contest-section\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"name-row-table\">#</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Khóa học</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Học kì</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Số học viên</th>\r\n              <th scope=\"col\" className=\"name-row-table\">Số buổi học</th>\r\n              <th scope=\"col\" className=\"name-row-table\"></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {lessonElements}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ClassDoneList;\r\n","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { changeSelectedDoinglClass, setModificationState } from \"../../store/actions/classes_student.action\";\r\nimport { IClassesStudentState, IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport { IClassesStudent, ClassesStudentModificationStatus } from \"../../store/models/classes_student.interface\";\r\nimport \"./ClassStudent.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { getClassesStudent } from \"../../common/service/ClassesStudent/GetClassesStudentByStudent\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport ClassDoingList from \"./ClassDoingList\";\r\nimport ClassDoneList from \"./ClassDoneList\";\r\n\r\nconst ClassStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const classes_students: IClassesStudentState = useSelector((state: IStateType) => state.classes_students);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberClassDoingCount: number = classes_students.classes_doing.length;\r\n    const numberClassDoneCount: number = classes_students.classes_done.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getClassesStudent(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getClassesStudent(dispatch,id))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khóa học\", \"\"));\r\n    }, [path.area, dispatch]) \r\n\r\n    function onClassesStudentSelect(classes_student: IClassesStudent): void {\r\n        dispatch(changeSelectedDoinglClass(classes_student));\r\n        dispatch(setModificationState(ClassesStudentModificationStatus.None));\r\n    }\r\n\r\n    const [checked, setChecked] = useState(true);\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"KHÓA HỌC ĐANG HỌC\" text={`${numberClassDoingCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"KHÓA HỌC ĐÃ HỌC\" text={`${numberClassDoneCount}`} icon=\"book\" class=\"primary\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(ClassesStudentModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked === false) {\r\n                            setChecked(true)\r\n                        }\r\n                    }} style={{\r\n                        color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Đang học</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked === true) {\r\n                            setChecked(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                        }}>Đã học</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#ffffff\" : \"#F24E1E\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                            <div className=\"card-header py-3 card-header-new\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách khóa học</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ClassDoingList\r\n                                                    onSelect={onClassesStudentSelect}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách khóa học</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ClassDoneList\r\n                                                    onSelect={onClassesStudentSelect}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ClassStudent;\r\n","import React, { PropsWithChildren, ReactElement } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ICardProperties } from \"../types/TopCardContest.types\";\r\n\r\nfunction TopCardContest(props: PropsWithChildren<ICardProperties>): ReactElement {\r\n    const history = useHistory();\r\n    const routeChange = (contest: PropsWithChildren<ICardProperties>) =>{ \r\n        localStorage.removeItem('description_contest');\r\n        localStorage.setItem('description_contest', contest.description);\r\n        localStorage.removeItem('contest_id');\r\n        localStorage.setItem('contest_id', contest.id.toString())\r\n        localStorage.removeItem('contest_name');\r\n        localStorage.setItem('contest_name', contest.name)\r\n        localStorage.removeItem('art_age_name');\r\n        localStorage.setItem('art_age_name', contest.art_age_name.toString())\r\n        localStorage.removeItem('art_type_name');\r\n        localStorage.setItem('art_type_name', contest.art_type_name.toString())\r\n        localStorage.removeItem('registration_time');\r\n        localStorage.setItem('registration_time', contest.registration_time.toString())\r\n        localStorage.removeItem('start_time');\r\n        localStorage.setItem('start_time', contest.start_time.toString())\r\n        localStorage.removeItem('end_time');\r\n        localStorage.setItem('end_time', contest.end_time.toString())\r\n        localStorage.removeItem('max_participant');\r\n        localStorage.setItem('max_participant', contest.max_participant.toString())\r\n        let path = '/contests/register'; \r\n        history.push({\r\n            pathname: path,\r\n            state: { description: contest.description, id: contest.id}\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-xl-4 col-md-4 mb-2\" onClick={() => {routeChange(props)}}>\r\n            <div className={`card shadow h-100 py-0`} id=\"topcard-user\" >\r\n                <img className=\"card-img-top\" src={props.url_image} alt=\"\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{props.name}</h5>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Thể loại:</span> <span className=\"header-card-course-value-teacher\">{props.art_type_name}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Độ tuổi:</span> <span className=\"header-card-course-value-teacher\">{props.art_age_name}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Thời gian đăng kí:</span> <span className=\"header-card-course-value-teacher\">{props.registration_time}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Thời gian bắt đầu:</span> <span className=\"header-card-course-value-teacher\">{props.start_time}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-12\" ><span className=\"header-card-course-teacher\">Thời gian kết thúc:</span> <span className=\"header-card-course-value-teacher\">{props.end_time}</span></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default TopCardContest;","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TopCardContest from \"../../common/components/TopCardContest\";\r\nimport { IContestStudentState, IStateType } from \"../../store/models/root.interface\";\r\n\r\n\r\nfunction ContestList(): JSX.Element {\r\n    const contest_student: IContestStudentState = useSelector((state: IStateType) => state.contest_students);\r\n\r\n\r\n    const teacherRegisterQuantificationElements: (JSX.Element | null)[] = contest_student.contest_new.map((ele, index) => {\r\n        return (\r\n            <TopCardContest \r\n              name={ele.name} \r\n              id={ele.id}\r\n              icon=\"book\" \r\n              student_id={ele.student_id}\r\n              student_name={ele.student_name}\r\n              class=\"primary\" \r\n              url_image={ele.image_url}\r\n              art_age_name={ele.art_age_name}\r\n              total_register_contest={ele.total_register_contest}\r\n              art_type_name={ele.art_type_name}\r\n              max_participant={ele.max_participant}\r\n              registration_time={ele.registration_time}\r\n              start_time={ele.start_time}\r\n              description={ele.description}\r\n              end_time={ele.end_time}\r\n            />\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n          {teacherRegisterQuantificationElements}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ContestList;\r\n","import { ICourseNew, CourseNewModificationStatus } from \"../models/course_new.interface\";\r\nexport const ADD_COURSE_NEW: string = \"ADD_COURSE_NEW\";\r\nexport const EDIT_COURSE_NEW: string = \"EDIT_COURSE_NEW\";\r\nexport const REMOVE_COURSE_NEW: string = \"REMOVE_COURSE_NEW\";\r\nexport const CHANGE_COURSE_NEW_AMOUNT: string = \"CHANGE_COURSE_NEW_AMOUNT\";\r\nexport const CHANGE_COURSE_NEW_PENDING_EDIT: string = \"CHANGE_COURSE_NEW_PENDING_EDIT\";\r\nexport const CLEAR_COURSE_NEW_PENDING_EDIT: string = \"CLEAR_COURSE_NEW_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_COURSE_NEW_ALL: string = \"REMOVE_COURSE_NEW_ALL\";\r\nexport const INITIAL_COURSE_NEW: string = \"INITIAL_COURSE_NEW\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course_new: ICourseNew) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course_new\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCourseNew(course_new: ICourseNew): IInitialCourseNewActionType {\r\n    return { type: INITIAL_COURSE_NEW, course_new: course_new };\r\n}\r\n\r\nexport function removeCourseNewAll(): IRemoveCourseNewAllActionType {\r\n    return { type: REMOVE_COURSE_NEW_ALL };\r\n}\r\n\r\nexport function addCourseNew(course_new: ICourseNew): IAddCourseNewActionType {\r\n    return { type: ADD_COURSE_NEW, course_new: course_new };\r\n}\r\n\r\nexport function editCourseNew(course_new: ICourseNew): IEditCourseNewActionType {\r\n    return { type: EDIT_COURSE_NEW, course_new: course_new };\r\n}\r\n\r\nexport function removeCourseNew(id: string): IRemoveCourseNewActionType {\r\n    return { type: REMOVE_COURSE_NEW, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseNew(course_new: ICourseNew): IChangeSelectedCourseNewActionType {\r\n    return { type: CHANGE_COURSE_NEW_PENDING_EDIT, course_new: course_new };\r\n}\r\n\r\nexport function clearSelectedCourseNew(): IClearSelectedCourseNewActionType {\r\n    return { type: CLEAR_COURSE_NEW_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseNewModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddCourseNewActionType { type: string, course_new: ICourseNew };\r\ninterface IEditCourseNewActionType { type: string, course_new: ICourseNew };\r\ninterface IRemoveCourseNewActionType { type: string, id: string };\r\ninterface IChangeSelectedCourseNewActionType { type: string, course_new: ICourseNew };\r\ninterface IClearSelectedCourseNewActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  CourseNewModificationStatus};\r\ninterface IRemoveCourseNewAllActionType { type: string }\r\ninterface IInitialCourseNewActionType {type: string, course_new: ICourseNew}","import { logout } from \"../../../store/actions/account.actions\";\r\nimport { fetchDataSuccess, fetchDataError, removeCourseNewAll, initialCourseNew, addCourseNew } from \"../../../store/actions/course_new.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface CourseNew {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    creator_id: string;\r\n    art_type_id: string;\r\n    art_level_id: string;\r\n    art_age_id: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    total: number;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getCourseNew(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/course/student-new/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getCourseNew(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeCourseNewAll())\r\n                console.log(data.body.courses)\r\n                data.body.courses.map((ele: any, index: any) => {\r\n                    var course: CourseNew = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        is_enabled: ele.is_enabled,\r\n                        creator_id: ele.creator_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        art_level_id: ele.art_level_id,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        total: ele.total,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n\r\n                    }\r\n                    console.log(course)\r\n                    if (index === 0){\r\n                        return dispatch(initialCourseNew(course));\r\n                    }\r\n                    else{\r\n                        return dispatch(addCourseNew(course))\r\n                    }\r\n                })\r\n                dispatch(logout())\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { PropsWithChildren, ReactElement } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ICardProperties } from \"../types/TopCardCourseNew.types\";\r\n\r\nfunction TopCardCourseNew(props: PropsWithChildren<ICardProperties>): ReactElement {\r\n    const history = useHistory();\r\n    const routeChange = (course: PropsWithChildren<ICardProperties>) =>{ \r\n        localStorage.removeItem('course_id');\r\n        localStorage.setItem('course_id', course.id.toString())\r\n        let path = '/courses/semester-classes'; \r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-xl-4 col-md-4 mb-2\" onClick={() => {routeChange(props)}}>\r\n            <div className={`card shadow h-100 py-0`} id=\"topcard-user\" >\r\n                <img className=\"card-img-top\" src={props.image_url} alt=\"\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{props.name}</h5>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Thể loại:</span> <span className=\"header-card-course-value-teacher\">{props.art_type_name}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Trình độ:</span> <span className=\"header-card-course-value-teacher\">{props.art_level_name}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Độ tuổi:</span> <span className=\"header-card-course-value-teacher\">{props.art_age_name}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Số buổi:</span> <span className=\"header-card-course-value-teacher\">{props.num_of_section}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Số lớp mở:</span> <span className=\"header-card-course-value-teacher\">{props.total}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Giá:</span> <span className=\"header-card-course-value-teacher\">{props.price} VNĐ</span></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default TopCardCourseNew;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TopCardCourseNew from \"../../common/components/TopCardCourseNew\";\r\nimport { ICourseNewState, IStateType } from \"../../store/models/root.interface\";\r\n\r\n\r\nfunction CourseNewList(): JSX.Element {\r\n  const course_news: ICourseNewState = useSelector((state: IStateType) => state.course_news);\r\n\r\n\r\n    const teacherRegisterQuantificationElements: (JSX.Element | null)[] = course_news.course_news.map((ele, index) => {\r\n        return (\r\n            <TopCardCourseNew \r\n                id={ele.id}\r\n                name= {ele.name}\r\n                description = {ele.description}\r\n                max_participant = {ele.max_participant}\r\n                num_of_section = {ele.num_of_section}\r\n                price = {ele.price}\r\n                image_url = {ele.image_url}\r\n                is_enabled = {ele.is_enabled}\r\n                creator_id = {ele.creator_id}\r\n                art_type_id = {ele.art_type_id}\r\n                art_level_id = {ele.art_level_id}\r\n                art_age_id = {ele.art_age_id}\r\n                art_type_name = {ele.art_type_name}\r\n                art_level_name = {ele.art_level_name}\r\n                art_age_name = {ele.art_age_name}\r\n                total = {ele.total}\r\n                create_time = {ele.create_time}\r\n                update_time = {ele.update_time}\r\n            />\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n          {teacherRegisterQuantificationElements}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default CourseNewList;\r\n","export interface IStudentLeave {\r\n    id: string;\r\n    section_id: string;\r\n    section_name: string;\r\n    class_id: string;\r\n    class_name: string;\r\n    section_number: number;\r\n    student_id: string;\r\n    student_name: string;\r\n    reviewer_id: string;\r\n    description: string;\r\n    status: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum StudentLeaveModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./Discovery.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport ContestList from \"./ContestList\";\r\nimport { getCourseNew } from \"../../common/service/CourseNew/GetCourseNew\";\r\nimport CourseNewList from \"./CourseNewList\";\r\nimport { getContestStudentByStudent } from \"../../common/service/ContestStudent/GetContestStudent\";\r\n\r\nconst DiscoveryStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    //const semester_classs: ISemesterClassState = useSelector((state: IStateType) => state.semester_classes);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getCourseNew(dispatch, id))\r\n                    trackPromise(getContestStudentByStudent(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getCourseNew(dispatch, id))\r\n                trackPromise(getContestStudentByStudent(dispatch, id))\r\n            }\r\n        }\r\n        \r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khám phá\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n\r\n    const [checked, setChecked] = useState(true);\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            {/* <div className=\"row\">\r\n                <TopCard title=\"ĐÃ ĐĂNG KÍ\" text={`${numberTeacherRegisterSuccessfullCount}`} icon=\"book\" class=\"primary\" />\r\n            </div> */}\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked === false) {\r\n                            setChecked(true)\r\n                        }\r\n                    }} style={{\r\n                        color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Khóa học</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked === true) {\r\n                            setChecked(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                        }}>Cuộc thi</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#ffffff\" : \"#F24E1E\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <CourseNewList />\r\n                                </div>\r\n\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <ContestList />\r\n                                </div>\r\n\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default DiscoveryStudent;\r\n","import React, { Fragment, Dispatch, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IRootPageStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport \"./SemesterClassDetail.css\"\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { getSemesterClassNew } from \"../../common/service/SemesterClass/GetSemesterNew\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { GrLinkDown, GrLinkNext } from \"react-icons/gr\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { postUserRegisterJoinSemester } from \"../../common/service/UserRegisterJoinSemester/PostUserRegisterJoinSemester\";\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\n\r\n\r\nconst SemesterClassDetailStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    var id_a = localStorage.getItem('description_course');\r\n    var description_course: string = '';\r\n    if (id_a !== null) {\r\n        description_course = id_a;\r\n    }\r\n\r\n    var id_b = localStorage.getItem('course_id');\r\n    var course_id: string = '';\r\n    if (id_b !== null) {\r\n        course_id = id_b;\r\n    }\r\n\r\n    var id_c = localStorage.getItem('course_name');\r\n    var course_name: string = '';\r\n    if (id_c !== null) {\r\n        course_name = id_c;\r\n    }\r\n\r\n    var id_d = localStorage.getItem('art_age_name');\r\n    var art_age_name: string = '';\r\n    if (id_d !== null) {\r\n        art_age_name = id_d;\r\n    }\r\n\r\n    var id_e = localStorage.getItem('art_type_name');\r\n    var art_type_name: string = '';\r\n    if (id_e !== null) {\r\n        art_type_name = id_e;\r\n    }\r\n\r\n    var id_f = localStorage.getItem('num_of_section');\r\n    var num_of_section: string = '';\r\n    if (id_f !== null) {\r\n        num_of_section = id_f;\r\n    }\r\n\r\n    var id_h = localStorage.getItem('schedule');\r\n    var schedule: string = '';\r\n    if (id_h !== null) {\r\n        schedule = id_h;\r\n    }\r\n\r\n    var id_k = localStorage.getItem('art_level_name');\r\n    var art_level_name: string = '';\r\n    if (id_k !== null) {\r\n        art_level_name = id_k;\r\n    }\r\n\r\n    var id_l = localStorage.getItem('semester_class_name');\r\n    var semester_class_name: string = '';\r\n    if (id_l !== null) {\r\n        semester_class_name = id_l;\r\n    }\r\n\r\n    var id_m = localStorage.getItem('price');\r\n    var price: string = '';\r\n    if (id_m !== null) {\r\n        price = id_m;\r\n    }\r\n\r\n    var id_n = localStorage.getItem('semester_class_id');\r\n    var semester_class_id: string = '';\r\n    if (id_n !== null) {\r\n        semester_class_id = id_n;\r\n    }\r\n\r\n    function handleClick() {\r\n        setChecked(!checked)\r\n    }\r\n\r\n\r\n    console.log(course_id)\r\n    console.log(semester_class_id)\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getSemesterClassNew(dispatch))\r\n                    trackPromise(getUserById(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getSemesterClassNew(dispatch))\r\n                trackPromise(getUserById(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n    function handleRegister() {\r\n        dispatch(postUserRegisterJoinSemester({\r\n            \"student_id\": id,\r\n            \"semester_classes_id\": semester_class_id,\r\n            \"payer_id\": users.teachers.length > 0 ? users.teachers[0].parents : 0,\r\n            \"price\": price,\r\n            \"status\": \"Waiting\"\r\n        }))\r\n        toast.success(\"Đăng kí thành công! Vui lòng đợi ba mẹ thanh toán...\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 2000\r\n        })\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                <ToastContainer />\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\" id=\"shadow-1\">\r\n                        <div className=\"row no-gutters align-items-center\">\r\n                            <div className=\"text-xs font-weight-bold text-green text-uppercase text-center\">\r\n                                <p className=\"fullname ml-2 mt-4 text-center\">{semester_class_name}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-6 col-md-6\">\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs \">\r\n                                        <p className=\"birthday ml-2\">Khóa học: {course_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday ml-2\">Thể loại: {art_type_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday ml-2\">Độ tuổi: {art_age_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday ml-2\">Trình độ: {art_level_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-xl-6 col-md-6\">\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs mr-2\">\r\n                                        <p className=\"birthday\">Lịch học: {schedule}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday\">Số buổi học: {num_of_section}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday\">Giá: {price}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\" id=\"btn-register-course\">\r\n                            <div className=\"col-lg-12 col-md-12 col-xs-12 text-center justify-content-center\">\r\n                                <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course2\" onClick={() => handleRegister()}>\r\n                                    <GrLinkNext id=\"btn-payment\" color=\"#ffffff\" />\r\n                                    Đăng kí ngay\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" id=\"btn-register-course\">\r\n                    <div className=\"col-lg-12 col-md-12 col-xs-12 text-center justify-content-center\">\r\n                        <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course4\" onClick={() => handleClick()}>\r\n                        <GrLinkDown id=\"btn-payment\" color=\"#ffffff\" />\r\n                        Xem miêu tả\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    function () {\r\n                        if (checked === true) {\r\n                            return (\r\n                                <div className=\"col-xl-12 col-lg-12\">\r\n                                    <div className=\"card-header py-3\">\r\n                                        <h6 className=\"m-0 font-weight-bold text-green\">Chi tiết</h6>\r\n                                    </div>\r\n                                    <div className=\"card shadow mb-4\">\r\n                                        <div className=\"card-body\" dangerouslySetInnerHTML={{ __html: description_course }}>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }()\r\n                }\r\n\r\n            </Fragment >\r\n    );\r\n};\r\n\r\nexport default SemesterClassDetailStudent;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/student_leave.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postNotifyDb } from \"../NotifyDb/PostNotifyDb\";\r\nimport { getStudentLeave } from \"./GetStudentLeave\";\r\n\r\nexport function postStudentLeave(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/student-leave`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postStudentLeave(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                dispatch(postNotifyDb({\r\n                    name: `Gửi yêu cầu nghỉ học buổi học ${val.section_number} lớp ${val.class_name}!`,\r\n                    description: `Bạn đã gửi yêu cầu nghỉ học buổi học ${val.section_number} lớp ${val.class_name}!`\r\n                }, \"\"))\r\n                getStudentLeave()\r\n                toast.update(idx, { render: \"Yêu cầu nghỉ học đã được gửi thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Yêu cầu nghỉ học đã được gửi không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            });\r\n    };\r\n}","import { fetchDataRequest, fetchDataSuccess, fetchDataError, removeStudentLeaveApprovedAll, removeStudentLeaveNotApprovedAll, removeStudentLeaveNotApprovedNowAll, addStudentLeaveApproved, addStudentLeaveNotApproved, addStudentLeaveNotApprovedNow } from \"../../../store/actions/student_leave.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface StudentLeave {\r\n    id: string;\r\n    section_id: string;\r\n    section_name: string;\r\n    class_id: string;\r\n    class_name: string;\r\n    student_id: string;\r\n    student_name: string;\r\n    reviewer_id: string;\r\n    section_number: number;\r\n    description: string;\r\n    status: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getStudentLeave() {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/student-leave`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getStudentLeave())\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeStudentLeaveApprovedAll())\r\n                dispatch(removeStudentLeaveNotApprovedAll())\r\n                dispatch(removeStudentLeaveNotApprovedNowAll())\r\n                //console.log(data.body.student_leaves)\r\n                data.body.student_leave.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var student_leave: StudentLeave = {\r\n                        id: ele.id,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        class_id: ele.class_id,\r\n                        section_number: ele.section_number,\r\n                        class_name: ele.class_name,\r\n                        student_id: ele.student_id,\r\n                        reviewer_id: ele.reviewer_id,\r\n                        status: ele.status,\r\n                        student_name: ele.student_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (student_leave.status === \"Approved\"){\r\n                        return dispatch(addStudentLeaveApproved(student_leave));\r\n                    }\r\n                    else if (student_leave.status === \"Not approved\"){\r\n                        return dispatch(addStudentLeaveNotApproved(student_leave));\r\n                    }\r\n                    else {\r\n                        return dispatch(addStudentLeaveNotApprovedNow(student_leave));\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IStudentLeaveState, IUserState, ISectionState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { addStudentLeaveNotApprovedNow } from \"../../store/actions/student_leave.action\";\r\nimport { OnChangeModel, IStudentLeaveFormState } from \"../../common/types/Form.types\";\r\nimport SelectKeyValue from \"../../common/components/SelectKeyValue\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IUser } from \"../../store/models/user.interface\";\r\nimport { IStudentLeave, StudentLeaveModificationStatus } from \"../../store/models/student_leave.interface\";\r\nimport { postStudentLeave } from \"../../common/service/StudentLeave/PostStudentLeave\";\r\n\r\nexport type artAgeListProps = {\r\n    isCheck: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n    data?: any;\r\n};\r\n\r\ntype Option1 = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\n\r\nfunction RequestOffSectionForm(props: artAgeListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const studentleaves: IStudentLeaveState | null = useSelector((state: IStateType) => state.student_leaves);\r\n    let student_leave: IStudentLeave | null = studentleaves.selectedStudentLeave;\r\n    const isCreate: boolean = (studentleaves.modificationState === StudentLeaveModificationStatus.Create);\r\n    \r\n    if (!student_leave || isCreate){\r\n        student_leave = { id: \"\", section_id: \"\", class_id: \"\", section_number: 0, student_id: \"\", description: \"\", section_name: \"\", class_name: \"\", student_name: \"\", reviewer_id: \"\", status: \"\", create_time: \"\", update_time: \"\" }\r\n    }\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const listStudent: IUser[] = users.students\r\n    const listStudents: Option1[] = [];\r\n    const sections: ISectionState | null = useSelector((state: IStateType) => state.sections);\r\n\r\n    listStudent.map((ele) => {\r\n        let item: Option1 = { \"name\": ele.username, \"value\": ele.id }\r\n        return listStudents.push(item)\r\n    })\r\n\r\n    const listSections: Option1[] = [];\r\n    sections.sections.map((ele) => {\r\n        let item: Option1 = { \"name\": \"Buổi \" + ele.number, \"value\": ele.id }\r\n        return listSections.push(item)\r\n    })\r\n\r\n    var id_y = localStorage.getItem('class_id');\r\n    let class_id = \"\";\r\n    if (id_y !== null) {\r\n        class_id = id_y;\r\n    }\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    var student_id: string = \"\";\r\n    if (id_x !== null) {\r\n        student_id = id_x;\r\n    }\r\n\r\n\r\n    const [formState, setFormState] = useState({\r\n        section_id: { error: \"\", value: student_leave.section_id },\r\n        description: { error: \"\", value: student_leave.description },\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        props.isCheck(false);\r\n        let saveUserFn: Function = addStudentLeaveNotApprovedNow;\r\n        saveForm(formState, saveUserFn);\r\n    }\r\n\r\n    function saveForm(formState: IStudentLeaveFormState, saveFn: Function): void {\r\n        if (student_leave) {\r\n            const id = toast.loading(\"Đang gửi yêu cầu. Vui lòng đợi trong giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 2000\r\n            });\r\n\r\n            dispatch(postStudentLeave({\r\n                section_id: formState.section_id.value,\r\n                student_id: student_id,\r\n                classes_id: class_id,\r\n                description: formState.description.value\r\n            }, id))\r\n\r\n            console.log({\r\n                section_id: formState.section_id.value,\r\n                student_id: student_id,\r\n                classes_id: class_id,\r\n                description: formState.description.value\r\n            })\r\n        }\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        props.isCheck(false);\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.description.error || !formState.description.value) as boolean;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card\" id=\"topcard-user\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Gửi yêu cầu nghỉ học</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-group\">\r\n                                    <SelectKeyValue\r\n                                        id=\"input_section_id\"\r\n                                        field=\"section_id\"\r\n                                        label=\"Buổi học\"\r\n                                        options={listSections}\r\n                                        required={true}\r\n                                        onChange={hasFormValueChanged}\r\n                                        value={formState.section_id.value}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_description\"\r\n                                        field=\"description\"\r\n                                        value={formState.description.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        type=\"textarea\"\r\n                                        maxLength={100}\r\n                                        label=\"Lý do\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default RequestOffSectionForm;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Popup from \"reactjs-popup\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getSectionByClass } from \"../../common/service/Section/GetSectionByClass\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { setModificationStateAnonymousNotification } from \"../../store/actions/anonymous_notification.action\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\r\nimport { IAnonymousNotificationState, IExerciseStudentState, IRootPageStateType, ISectionState, IStateType, IStudentLeaveState, ITimeScheduleState, ITutorialPageState, ITutorialState } from \"../../store/models/root.interface\";\r\nimport \"./DetailClassStudent.css\"\r\nimport RequestOffSectionForm from \"./RequestOffSectionForm\";\r\nimport { ISection } from \"../../store/models/section.interface\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getStudentLeaveByClassAndStudent } from \"../../common/service/StudentLeave/GetStudentLeaveByClassStudent\";\r\nimport { getExerciseForClassStudent } from \"../../common/service/ExerciseStudent/GetExerciseForClassStudent\";\r\nimport { getInfoMyClass } from \"../../common/service/MyClass/GetInfoMyClass\";\r\nimport { IExerciseStudent } from \"../../store/models/exercise_student.interface\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\n\r\nconst DetailClassStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const sections: ISectionState = useSelector((state: IStateType) => state.sections);\r\n    const tutorials: ITutorialState = useSelector((state: IStateType) => state.tutorials);\r\n    const time_schedules: ITimeScheduleState = useSelector((state: IStateType) => state.time_schedules);\r\n    const tutorial_pages: ITutorialPageState = useSelector((state: IStateType) => state.tutorial_pages);\r\n    const anonymous_notifications: IAnonymousNotificationState | null = useSelector((state: IStateType) => state.anonymous_notifications);\r\n    const student_leaves: IStudentLeaveState = useSelector((state: IStateType) => state.student_leaves);\r\n    const exercise_student: IExerciseStudentState = useSelector((state: IStateType) => state.exercise_students);\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    function isDateBeforeToday(date: any) {\r\n        return new Date(date.toDateString()) < new Date(new Date().toDateString());\r\n    }\r\n\r\n\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberSectionCount: number = sections.sections.length;\r\n    const numberNotSubmitNowCount: number = exercise_student.exercise_not_submit.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('class_id');\r\n\r\n    let class_id = \"\";\r\n\r\n    if (id_y !== null) {\r\n        class_id = id_y;\r\n    }\r\n\r\n    const [checked1, setChecked1] = useState(true);\r\n    const [checked2, setChecked2] = useState(false);\r\n    const [checked3, setChecked3] = useState(false);\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getInfoMyClass(dispatch, class_id))\r\n                    trackPromise(getSectionByClass(dispatch, class_id))\r\n                    trackPromise(getStudentLeaveByClassAndStudent(dispatch, class_id, id))\r\n                    trackPromise(getExerciseForClassStudent(dispatch, class_id, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getInfoMyClass(dispatch, class_id))\r\n                trackPromise(getSectionByClass(dispatch, class_id))\r\n                trackPromise(getExerciseForClassStudent(dispatch, class_id, id))\r\n                trackPromise(getStudentLeaveByClassAndStudent(dispatch, class_id, id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, class_id, id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp học\", \"Buổi học\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    const [popup1, setPopup1] = useState(false);\r\n\r\n    function onAnonymousNotificationRemove() {\r\n        setPopup1(true);\r\n    }\r\n\r\n    function onRemovePopup1(value: boolean) {\r\n        setPopup1(false);\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    const routeChange2 = (exercise_student: IExerciseStudent) => {\r\n        let path = '/exercise/detail';\r\n        localStorage.removeItem('exercise_id');\r\n        localStorage.setItem('exercise_id', exercise_student.id.toString())\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    const routeChange1 = (ele: IExerciseStudent) => {\r\n        localStorage.setItem('exercise_id', ele.id)\r\n        let path = '/exercise/submit';\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    function routeChangeVIewExerciseSubmission(exercise_student: IExerciseStudent){\r\n        let path = '/exercise-submission/view';\r\n        localStorage.removeItem('exercise_submission_id');\r\n        localStorage.setItem('exercise_submission_id', exercise_student.exercise_submission_id.toString())\r\n        localStorage.removeItem('time_submit');\r\n        localStorage.setItem('time_submit', exercise_student.time_submit.toString())\r\n        localStorage.removeItem('description');\r\n        localStorage.setItem('description', exercise_student.description.toString())\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    const onChangeRoute = (section: ISection) => {\r\n        let path = \"/classes/section\";\r\n        localStorage.removeItem('section_id')\r\n        localStorage.setItem('section_id', section.id.toString())\r\n        localStorage.removeItem('section_number')\r\n        localStorage.setItem('section_number', section.number.toString())\r\n        let tutorial_page_list: any[] = []\r\n        localStorage.removeItem('tutorial_name')\r\n        localStorage.removeItem('tutorial_id')\r\n        tutorials.tutorials.map(ele => {\r\n            if (ele.section_id === section.id) {\r\n                localStorage.setItem('tutorial_id', ele.id.toString())\r\n                localStorage.setItem('tutorial_name', ele.name.toString())\r\n                tutorial_pages.tutorialPages.map(element => {\r\n                    if (element.tutorial_id === ele.id) {\r\n                        tutorial_page_list.push({\r\n                            description: element.description,\r\n                            id: element.id,\r\n                            name: element.name,\r\n                            tutorial_id: element.tutorial_id,\r\n                            number: element.number\r\n                        })\r\n                    }\r\n                    return null\r\n                })\r\n            }\r\n            return null\r\n        })\r\n        console.log(tutorial_page_list)\r\n        localStorage.removeItem('description_tutorial_page_list')\r\n        localStorage.setItem('description_tutorial_page_list', JSON.stringify(tutorial_page_list.sort((a, b) => a.number - b.number)))\r\n        history.push({\r\n            pathname: path\r\n        })\r\n    }\r\n\r\n\r\n    let count = 0;\r\n    let data: string[] = []\r\n    let total_time = \"\";\r\n    if (time_schedules.timeSchedules.length > 1 && promiseInProgress === false) {\r\n            if (time_schedules.timeSchedules[0] !== undefined && time_schedules.timeSchedules[0] !== null){\r\n                var start_time_0 = time_schedules.timeSchedules[0].start_time.split(\"T\");\r\n                var end_time_0 = time_schedules.timeSchedules[0].end_time.split(\"T\");\r\n                var hour_start = parseInt(start_time_0[1].substring(0, 2));\r\n                var minus_tart = parseInt(start_time_0[1].substring(3, 5));\r\n                var sercon_start = parseInt(start_time_0[1].substring(6, 8));\r\n                var hour_end = parseInt(end_time_0[1].substring(0, 2));\r\n                var minus_end = parseInt(end_time_0[1].substring(3, 5));\r\n                var sercon_end = parseInt(end_time_0[1].substring(6, 8));\r\n    \r\n                total_time = (hour_end - hour_start).toString() + \" giờ \" + (minus_end - minus_tart).toString() + \" phút \" + (sercon_end - sercon_start).toString() + \" giây\";\r\n                time_schedules.timeSchedules.map((ele, index) => {\r\n                    if (isDateBeforeToday(new Date(Date.parse(ele.end_time)))) {\r\n                        count++;\r\n                    }\r\n                    var start_time = ele.start_time.split(\"T\");\r\n                    var end_time = ele.end_time.split(\"T\");\r\n                    return data.push(\"Từ \" + start_time[0] + \" \" + start_time[1] + \" -> \" + end_time[0] + \" \" + end_time[1])\r\n                })\r\n            }\r\n    }\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-student\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n                <ToastContainer />\r\n\r\n                <div className=\"row\">\r\n                    <TopCard title=\"SỐ BUỔI ĐÃ HỌC\" text={`${count}/${numberSectionCount}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"SỐ BÀI KIỂM TRA CHƯA LÀM\" text={`${numberNotSubmitNowCount}`} icon=\"book\" class=\"danger\" />\r\n                    <TopCard title=\"NGHỈ HỌC\" text={`${student_leaves.leaves.length}`} icon=\"book\" class=\"danger\" />\r\n                    <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                        <button\r\n                            className=\"btn btn-success btn-green\"\r\n                            id=\"btn-create-teacher-level\"\r\n                            onClick={() => {\r\n                                dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.Create))\r\n                                onAnonymousNotificationRemove()\r\n                            }}\r\n                        >\r\n                            <i className=\"fas fa fa-plus\"></i>\r\n                            Đăng kí nghỉ học\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                            if (checked1 === false) {\r\n                                setChecked1(true)\r\n                                setChecked2(false)\r\n                                setChecked3(false)\r\n                            }\r\n                        }} style={{\r\n                            color: checked1 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Buổi học</h6>\r\n\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"30%\",\r\n                            backgroundColor: checked1 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                            if (checked2 === false) {\r\n                                setChecked2(true)\r\n                                setChecked1(false)\r\n                                setChecked3(false)\r\n                            }\r\n                        }}\r\n                            style={{\r\n                                color: checked2 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                            }}>Bài tập</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"30%\",\r\n                            backgroundColor: checked2 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                            if (checked3 === false) {\r\n                                setChecked3(true)\r\n                                setChecked1(false)\r\n                                setChecked2(false)\r\n                            }\r\n                        }}\r\n                            style={{\r\n                                color: checked3 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                            }}>Nghỉ học</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"30%\",\r\n                            backgroundColor: checked3 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Popup\r\n                    open={popup1}\r\n                    onClose={() => setPopup1(false)}\r\n                    closeOnDocumentClick\r\n                >\r\n                    <>\r\n                        {\r\n                            function () {\r\n                                if ((anonymous_notifications.modificationState === AnonymousNotificationModificationStatus.Create)) {\r\n                                    return <RequestOffSectionForm isCheck={onRemovePopup1} />\r\n                                }\r\n                            }()\r\n                        }\r\n                    </>\r\n                </Popup>\r\n\r\n                {\r\n                    function () {\r\n                        if (checked1 === true) {\r\n                            return (\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                        <h3 className=\" mb-2\" id=\"level-teacher\">Buổi học</h3>\r\n                                        <div className=\"table-responsive portlet table-section\">\r\n                                            <table className=\"table\">\r\n                                                <thead className=\"thead-light\">\r\n                                                    <tr>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        sections.sections.sort((a, b) => a.number - b.number).map((ele, index) => {\r\n                                                            return (\r\n                                                                <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                    <div className=\"row row-section mb-4 ml-2 mr-2\" onClick={() => { onChangeRoute(ele) }}>\r\n                                                                        <div className=\"col-xl-3 col-md-3\">\r\n                                                                            <img className=\"card-img image-section-1\" src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1661088297/teacher_hfstak.png\" alt=\"\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"col-xl-9 col-md-9\">\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mt-2 section_number\">Buổi {ele.number}: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mt-2 section_number\"><span className=\"section_name\"> {ele.name}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Lịch học: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{data[index]}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Thời gian buổi học: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{total_time}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Hình thức học: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{ele.teach_form === true ? \"Dạy bằng jisti\" : \"Đọc hiểu giáo trình\"}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Giáo viên: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{ele.teacher_name}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        else if (checked2 === true) {\r\n                            return (\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                                        <h3 className=\" mb-2\" id=\"level-teacher\">Bài kiểm tra cần làm</h3>\r\n                                        <div className=\"table-responsive portlet table-section\">\r\n                                            <table className=\"table\">\r\n                                                <thead className=\"thead-light\">\r\n                                                    <tr>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        exercise_student.exercise_not_submit.map((ele, index) => {\r\n                                                            return (\r\n                                                                <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                    <div className=\"row row-section mb-4 ml-2 mr-2\" onClick={() => { routeChange1(ele) }}>\r\n                                                                        <div className=\"col-xl-4 col-md-4\">\r\n                                                                            <img className=\"card-img image-section-1\" src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1661088283/exam1_clcq5z.png\" alt=\"\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"col-xl-8 col-md-8 mb-2\">\r\n                                                                            <p className=\" mb-2 section_number\">Tên: <span className=\"section_name pl-2\"> {ele.name}</span> </p>\r\n                                                                            <p className=\" mb-2 section_number\">Hạn nộp: <span className=\"section_name pl-2\">{ele.deadline}</span> </p>\r\n                                                                            <p className=\" mb-2 section_number\">Phần trăm đánh giá: <span className=\"section_name pl-2\">{ele.level_name}</span> </p>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                                        <h3 className=\" mb-2\" id=\"level-teacher\">Bài kiểm tra đã nộp</h3>\r\n                                        <div className=\"table-responsive portlet table-section\">\r\n                                            <table className=\"table\">\r\n                                                <thead className=\"thead-light\">\r\n                                                    <tr>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        exercise_student.exercise_submitted_graded.map((ele, index) => {\r\n                                                            return (\r\n                                                                <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                    <div className=\"row row-section-1 mb-4 ml-2 mr-2\" onClick={() => { routeChange2(ele) }}>\r\n                                                                        <div className=\"col-xl-4 col-md-4\">\r\n                                                                            <img className=\"card-img image-section-1\" src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1661088283/exam1_clcq5z.png\" alt=\"\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"col-xl-8 col-md-8 mb-2\">\r\n                                                                            <p className=\" mb-2 section_number\">Tên: <span className=\"section_name pl-2\"> {ele.name}</span> </p>\r\n                                                                            <p className=\" mb-2 section_number\">Hạn nộp: <span className=\"section_name pl-2\">{ele.deadline}</span> </p>\r\n                                                                            <p className=\" mb-2 section_number\">Phần trăm đánh giá: <span className=\"section_name pl-2\">{ele.level_name}</span> </p>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n\r\n                                                    {\r\n                                                        exercise_student.exercise_submitted_not_grade.map((ele, index) => {\r\n                                                            return (\r\n                                                                <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                    <div className=\"row row-section mb-4 ml-2 mr-2\" onClick={() => { routeChangeVIewExerciseSubmission(ele) }}>\r\n                                                                        <div className=\"col-xl-4 col-md-4\">\r\n                                                                            <img className=\"card-img image-section-1\" src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1661088283/exam1_clcq5z.png\" alt=\"\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"col-xl-8 col-md-8 mb-2\">\r\n                                                                            <p className=\" mb-2 section_number\">Tên: <span className=\"section_name pl-2\"> {ele.name}</span> </p>\r\n                                                                            <p className=\" mb-2 section_number\">Hạn nộp: <span className=\"section_name pl-2\">{ele.deadline}</span> </p>\r\n                                                                            <p className=\" mb-2 section_number\">Phần trăm đánh giá: <span className=\"section_name pl-2\">{ele.level_name}</span> </p>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        else if (checked3 === true) {\r\n                            return (\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                                        <h3 className=\" mb-2\" id=\"level-teacher\">Chưa duyệt</h3>\r\n                                        <div className=\"table-responsive portlet table-section\">\r\n                                            <table className=\"table\">\r\n                                                <thead className=\"thead-light \">\r\n                                                    <tr>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        student_leaves.leaves.map((ele, index) => {\r\n                                                            return (\r\n                                                                <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                    <div className=\"row row-section mb-4 ml-2 mr-2\" onClick={() => { }}>\r\n                                                                        <div className=\"col-xl-3 col-md-3\">\r\n                                                                            <img className=\"card-img image-section-1\" src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1661088283/timetable_dpbx2a.png\" alt=\"\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"col-xl-9 col-md-9\">\r\n                                                                            <p className=\" mb-2 section_number\">Buổi {ele.section_number}</p>\r\n                                                                            <p className=\" mb-2 section_number\">Thời gian gửi: <span className=\"section_name\">{ele.update_time}</span></p>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                                        <h3 className=\" mb-2\" id=\"level-teacher\">Đã duyệt</h3>\r\n                                        <div className=\"table-responsive portlet table-section\">\r\n                                            <table className=\"table\">\r\n                                                <thead className=\"thead-light \">\r\n                                                    <tr>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        student_leaves.acceptLeaves.map((ele, index) => {\r\n                                                            return (\r\n                                                                <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                    <div className=\"row row-section-1 mb-4 ml-2 mr-2\" onClick={() => {  }}>\r\n                                                                        <div className=\"col-xl-4 col-md-4\">\r\n                                                                            <img className=\"card-img image-section-1\" src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1661088283/timetable_dpbx2a.png\" alt=\"\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"col-xl-8 col-md-8\">\r\n                                                                            <p className=\" mb-2 section_number\">Buổi {ele.section_number}</p>\r\n                                                                            <p className=\" mb-2 section_number\">Thời gian duyệt: <span className=\"section_name pl-2\">{ele.update_time}</span></p>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }()\r\n                }\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default DetailClassStudent;\r\n","import { fetchDataSuccess, fetchDataError, removeExerciseNotSubmitAll, removeExerciseSubmitGradedAll, addExerciseNotSubmit, removeExerciseSubmitNotGradeAll, addExerciseSubmitGraded, addExerciseSubmitNotGrade } from \"../../../store/actions/exercise_student.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface exercise {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    section_id: string;\r\n    exercise_submission_id: string;\r\n    teacher_name: string;\r\n    time_submit: string;\r\n    deadline: string;\r\n    level_id: string;\r\n    level_name: string;\r\n    section_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getExerciseForSectionStudent(dispatch: any, section_id: any, student_id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/exercises/section-student/${section_id}/${student_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getExerciseForSectionStudent(dispatch, section_id, student_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeExerciseNotSubmitAll())\r\n                dispatch(removeExerciseSubmitGradedAll())\r\n                dispatch(removeExerciseSubmitNotGradeAll())\r\n                console.log(data.body.exercise_not_submit)\r\n                console.log(data.body.exercise_submitted_not_grade)\r\n                console.log(data.body.exercise_submitted_graded)\r\n                data.body.exercise_not_submit.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var exercise: exercise = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        teacher_name: ele.teacher_name,\r\n                        time_submit: ele.time_submit,\r\n                        exercise_submission_id: ele.exercise_submission_id,\r\n                        deadline: ele.deadline,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        level_id: ele.level_id,\r\n                        level_name: ele.level_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1.substring(0, 5),\r\n                        update_time: strDate_2.substring(0, 5)\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addExerciseNotSubmit(exercise))\r\n                })\r\n\r\n                data.body.exercise_submitted_not_grade.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var exercise: exercise = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        level_id: ele.level_id,\r\n                        exercise_submission_id: ele.exercise_submission_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        time_submit: ele.time_submit,\r\n                        deadline: ele.deadline,\r\n                        level_name: ele.level_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1.substring(0, 5),\r\n                        update_time: strDate_2.substring(0, 5)\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addExerciseSubmitNotGrade(exercise))\r\n                })\r\n\r\n                data.body.exercise_submitted_graded.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var exercise: exercise = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        level_id: ele.level_id,\r\n                        exercise_submission_id: ele.exercise_submission_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        time_submit: ele.time_submit,\r\n                        deadline: ele.deadline,\r\n                        level_name: ele.level_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1.substring(0, 5),\r\n                        update_time: strDate_2.substring(0, 5)\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addExerciseSubmitGraded(exercise))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { getExerciseLevel } from \"../../common/service/ExerciseLevel/GetExerciseLevel\";\r\nimport { getSectionById } from \"../../common/service/Section/GetSectionById\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IClassesStudentState, IExerciseStudentState, ISectionState, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./SectionStudent.css\"\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getClassesStudent } from \"../../common/service/ClassesStudent/GetClassesStudentByStudent\";\r\nimport { getExerciseForSectionStudent } from \"../../common/service/ExerciseStudent/GetExerciseBySectionStudent\";\r\nimport { IExerciseStudent } from \"../../store/models/exercise_student.interface\";\r\n\r\nconst SectionStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const sections: ISectionState = useSelector((state: IStateType) => state.sections);\r\n    const exercise_student: IExerciseStudentState = useSelector((state: IStateType) => state.exercise_students);\r\n    const class_students: IClassesStudentState = useSelector((state: IStateType) => state.classes_students);\r\n\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n\r\n    var id_y = localStorage.getItem('section_id');\r\n\r\n    let section_id = \"\";\r\n\r\n    if (id_y !== null) {\r\n        section_id = id_y;\r\n    }\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n\r\n    var id_z = localStorage.getItem('class_id');\r\n    var class_id: string= \"\";\r\n    if (id_z !== null) {\r\n        class_id = id_z;\r\n    }\r\n\r\n    let link_jisti = \"\";\r\n    if (class_students.classes_doing.length > 0) {\r\n        class_students.classes_doing.map((ele, idx) => {\r\n            if (ele.id === class_id) {\r\n                link_jisti = ele.link_url;\r\n            }\r\n            return ele\r\n        })\r\n    }\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getClassesStudent(dispatch, id))\r\n                    trackPromise(getSectionById(dispatch, section_id))\r\n                    trackPromise(getExerciseForSectionStudent(dispatch, section_id, id))\r\n                    trackPromise(getExerciseLevel(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getClassesStudent(dispatch, id))\r\n                trackPromise(getSectionById(dispatch, section_id))\r\n                trackPromise(getExerciseForSectionStudent(dispatch, section_id, id))\r\n                trackPromise(getExerciseLevel(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, section_id, id]);\r\n\r\n    const history = useHistory();\r\n    const routeChange2 = () => {\r\n        let path = \"/section/view\";\r\n        history.push({\r\n            pathname: path,\r\n            state: { section_id: section_id }\r\n        });\r\n    }\r\n\r\n    const routeChange4 = () => {\r\n        if (link_jisti !== null) {\r\n            window.open(link_jisti, '_blank');\r\n        }\r\n    }\r\n\r\n\r\n    const routeChange3 = (description: string, name: string, level_name: string, id: string) => {\r\n        let path = '/exercise/detail';\r\n        localStorage.removeItem('exercise_description');\r\n        localStorage.removeItem('exercise_name');\r\n        localStorage.removeItem('exercise_level_name');\r\n        localStorage.removeItem('exercise_id');\r\n        localStorage.setItem('exercise_description', description);\r\n        localStorage.setItem('exercise_name', name);\r\n        localStorage.setItem('exercise_level_name', level_name);\r\n        localStorage.setItem('exercise_id', id.toString());\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n\r\n    function routeChangeVIewExerciseSubmission(exercise_student: IExerciseStudent){\r\n        let path = '/exercise-submission/view';\r\n        localStorage.removeItem('exercise_submission_id');\r\n        localStorage.setItem('exercise_submission_id', exercise_student.exercise_submission_id.toString())\r\n        localStorage.removeItem('time_submit');\r\n        localStorage.setItem('time_submit', exercise_student.time_submit.toString())\r\n        localStorage.removeItem('description');\r\n        localStorage.setItem('description', exercise_student.description.toString())\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    const routeChange5 = (description: string, name: string, level_name: string, id: string) => {\r\n        let path = '/exercise/submit';\r\n        localStorage.removeItem('exercise_description');\r\n        localStorage.removeItem('exercise_name');\r\n        localStorage.removeItem('exercise_level_name');\r\n        localStorage.removeItem('exercise_id');\r\n        localStorage.setItem('exercise_description', description);\r\n        localStorage.setItem('exercise_name', name);\r\n        localStorage.setItem('exercise_level_name', level_name);\r\n        localStorage.setItem('exercise_id', id.toString());\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                <ToastContainer />\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                    <div className={`card shadow h-100 py-2`} id=\"normal-tutorial\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"row no-gutters justify-content-left\">\r\n                                                <h4 id=\"full-name\">Thông tin buổi học</h4>\r\n                                            </div>\r\n                                            <div className=\"row no-gutters\">\r\n                                                <p id=\"phone\">Tên: {\r\n                                                    function () {\r\n                                                        if (sections.sections.length <= 0) {\r\n                                                            return \"\"\r\n                                                        }\r\n                                                        else {\r\n                                                            return sections.sections[0].name;\r\n                                                        }\r\n                                                    }()\r\n                                                }</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"row no-gutters\">\r\n                                                <p id=\"phone\">Hình thức:\r\n                                                    {\r\n                                                        function () {\r\n                                                            if (sections.sections.length <= 0) {\r\n                                                                return \"\"\r\n                                                            }\r\n                                                            else {\r\n                                                                if (sections.sections[0].teach_form === true) {\r\n                                                                    return \"Dạy bằng jitsi\";\r\n                                                                }\r\n                                                                else {\r\n                                                                    return \"Dạy bằng giáo trình\";\r\n                                                                }\r\n                                                            }\r\n                                                        }()\r\n                                                    }\r\n                                                </p>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-xl-6 col-md-6 col-xs-6\">\r\n                                                    {\r\n                                                        function () {\r\n                                                            if (sections.sections.length <= 0) {\r\n                                                                return \"\"\r\n                                                            }\r\n                                                            else {\r\n                                                                if (sections.sections[0].teach_form === true) {\r\n                                                                    return (\r\n                                                                        <button\r\n                                                                            className=\"btn btn-success ml-2\"\r\n                                                                            id=\"btn-into-room\"\r\n                                                                            onClick={routeChange4}\r\n                                                                        >\r\n                                                                            Vào metting room\r\n                                                                        </button>\r\n                                                                    )\r\n                                                                }\r\n                                                                else {\r\n                                                                    return (\r\n                                                                        <button\r\n                                                                            className=\"btn btn-success ml-2\"\r\n                                                                            id=\"btn-view-tutorial\"\r\n                                                                            onClick={routeChange2}\r\n                                                                        >\r\n                                                                            Xem nội dung\r\n                                                                        </button>\r\n                                                                    )\r\n                                                                }\r\n                                                            }\r\n                                                        }()\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                    <div className={`card shadow py-2`} >\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"row no-gutters justify-content-left exercise-list\">\r\n                                                <h4 id=\"full-name\">Bài tập</h4>\r\n                                                <div className=\"table-responsive portlet  exercise-list\">\r\n                                                    <table className=\"table\">\r\n                                                        <thead className=\"thead-light\">\r\n                                                            <tr>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {\r\n                                                                exercise_student.exercise_not_submit.map((ele, index) => {\r\n                                                                    return (\r\n                                                                        <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                            <div className=\"row row-section mb-4 ml-2 mr-2 row-not-submit\" onClick={() => { routeChange5(ele.description, ele.name, ele.level_name, ele.id) }}>\r\n                                                                                <div className=\"col-xl-4 col-md-4 mb-4\">\r\n                                                                                    <img className=\"card-img\" src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1661088297/teacher_hfstak.png\" alt=\"\" />\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-8 col-md-8 mb-4\">\r\n                                                                                    <h3 className=\" mb-2\" id=\"level-student\">{ele.name}</h3>\r\n                                                                                    <h4 className=\" mb-2\" id=\"level-student\">Phần trăm đánh giá: {ele.level_name}</h4>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </tr>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n\r\n                                                            {\r\n                                                                exercise_student.exercise_submitted_graded.map((ele, index) => {\r\n                                                                    return (\r\n                                                                        <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                            <div className=\"row row-section-1 mb-4 ml-2 mr-2\" onClick={() => { routeChange3(ele.description, ele.name, ele.level_name, ele.id) }}>\r\n                                                                                <div className=\"col-xl-4 col-md-4 mb-4\">\r\n                                                                                    <img className=\"card-img\" src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1661088297/teacher_hfstak.png\" alt=\"\" />\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-8 col-md-8 mb-4\">\r\n                                                                                    <h3 className=\" mb-2\" id=\"level-student\">{ele.name}</h3>\r\n                                                                                    <h4 className=\" mb-2\" id=\"level-student\">Phần trăm đánh giá: {ele.level_name}</h4>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </tr>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n\r\n{\r\n                                                                exercise_student.exercise_submitted_not_grade.map((ele, index) => {\r\n                                                                    return (\r\n                                                                        <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                            <div className=\"row row-section mb-4 ml-2 mr-2\" onClick={() => { routeChangeVIewExerciseSubmission(ele) }}>\r\n                                                                                <div className=\"col-xl-4 col-md-4 mb-4\">\r\n                                                                                    <img className=\"card-img\" src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1661088297/teacher_hfstak.png\" alt=\"\" />\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-8 col-md-8 mb-4\">\r\n                                                                                    <h3 className=\" mb-2\" id=\"level-student\">{ele.name}</h3>\r\n                                                                                    <h4 className=\" mb-2\" id=\"level-student\">Phần trăm đánh giá: {ele.level_name}</h4>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </tr>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default SectionStudent;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getTutorialPageBySection } from \"../../common/service/TutorialPage/GetTutorialPageBySection\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IStateType, ITutorialPageState } from \"../../store/models/root.interface\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { putAttendanceByUserAndSection } from \"../../common/service/Attendance/PutAttendanceByUserAndSection\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\nconst ViewSectionStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const TutorialPages: ITutorialPageState = useSelector((state: IStateType) => state.tutorial_pages);\r\n\r\n    var id_y = localStorage.getItem('section_id');\r\n    \r\n    let section_id = \"\";\r\n\r\n    if (id_y !== null) {\r\n        section_id = id_y;\r\n    }\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    \r\n    let id = \"\";\r\n\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const [count, setCount] = useState(1);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    function setChangeCount() {\r\n        let x = count;\r\n        let y = x + 1;\r\n        if (x < TutorialPages.tutorialPages.length){\r\n            console.log(\"Count\")\r\n            setCount(y);\r\n        }\r\n        console.log(count)\r\n    }\r\n\r\n    function setChangeCountBack() {\r\n        let x = count;\r\n        let y = x - 1;\r\n        if (x > 1){\r\n            setCount(y);\r\n        }\r\n    }\r\n\r\n    function handleChecked() {\r\n        const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n          });\r\n        dispatch(putAttendanceByUserAndSection(section_id,id, idx));\r\n    }\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getTutorialPageBySection(dispatch, section_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getTutorialPageBySection(dispatch, section_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, section_id]);\r\n    \r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> :  <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`}>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters justify-content-left\">\r\n                                            <h4 id=\"full-name\">{TutorialPages.tutorialPages.length !== 0 ? TutorialPages.tutorialPages[0].name : \"\"}</h4>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            {\r\n                                                function () {\r\n                                                    if (TutorialPages.tutorialPages.length < 1) {\r\n                                                        return \"\"\r\n                                                    }\r\n                                                    else {\r\n                                                        return <div className=\"card-body\" dangerouslySetInnerHTML={{ __html: TutorialPages.tutorialPages.sort((a, b) => a.number - b.number)[count-1].description }}>\r\n                                                        </div>\r\n                                                    }\r\n                                                }()\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"row no-gutters justify-content-right\">\r\n                                            {\r\n                                                function () {\r\n                                                    if (count < TutorialPages.tutorialPages.length) {\r\n                                                        if (count === 1){\r\n                                                            return (\r\n                                                                <button className={`btn btn-success left-margin`} onClick={() => {setChangeCount()}}>Trang tiếp</button>\r\n                                                            )\r\n                                                        }\r\n                                                        else if (count > 1){\r\n                                                            return (\r\n                                                                <> \r\n                                                                    <button className={`btn btn-warning left-margin`} onClick={() => {setChangeCountBack()}}>Trở về</button>\r\n                                                                    <button className={`btn btn-success left-margin`} onClick={() => {setChangeCount()}}>Trang tiếp</button>\r\n                                                                </>\r\n                                                            )\r\n                                                        }\r\n                                                        \r\n                                                    }\r\n                                                    else {\r\n                                                        return (\r\n                                                            <button className={`btn btn-warning left-margin`} onClick={() => {setChangeCountBack()}}>Trở về</button>\r\n                                                        )\r\n                                                    }\r\n                                                }()\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"row no-gutters justify-content-right\">\r\n                                            {\r\n                                                function() {\r\n                                                    if (count === TutorialPages.tutorialPages.length) {\r\n                                                        return (\r\n                                                            <button className={`btn btn-success left-margin mt-2`} onClick={() => {handleChecked()}}>Điểm danh</button>\r\n                                                        )\r\n                                                    }\r\n                                                }()\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewSectionStudent;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/art_type.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function putAttendanceByUserAndSection( section_id: any, student_id: any,idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-attendance/section-student/${section_id}/${student_id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putAttendanceByUserAndSection(section_id,student_id,  idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (xx => {\r\n                toast.update(idx, { render: \"Điểm danh thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Điểm danh không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataSuccess, fetchDataError, addUserGradeExerciseSubmission, removeUserGradeExerciseSubmissionAll} from \"../../../store/actions/user_grade_exercise_submission.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user_grade_contest {\r\n    student_id: string;\r\n    student_name: string;\r\n    exercise_name: string;\r\n    time_submit: string;\r\n    image_url: string;\r\n    description: string;\r\n    deadline: string;\r\n    exercise_submission_id: string;\r\n    feedback: string;\r\n    score: number;\r\n    time: string;\r\n}\r\nexport function getUserGradeExerciseByExerciseAndStudent(dispatch: any, exercise_id: any, student_id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-grade-exercise-submission/exercise-student/${exercise_id}/${student_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserGradeExerciseByExerciseAndStudent(dispatch, exercise_id, student_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeUserGradeExerciseSubmissionAll())\r\n                console.log(data.body.UserGradeExerciseSubmission)\r\n                data.body.UserGradeExerciseSubmission.map((ele: any, index: any) => {\r\n                    var user_grade_contest: user_grade_contest = {\r\n                        student_id: ele.student_id,\r\n                        exercise_name: ele.exercise_name,\r\n                        time_submit: ele.time_submit,\r\n                        deadline: ele.deadline,\r\n                        description: ele.description,\r\n                        image_url: ele.image_url,\r\n                        exercise_submission_id: ele.exercise_submission_id,\r\n                        student_name: ele.student_name,\r\n                        feedback: ele.feedback,\r\n                        score: ele.score,\r\n                        time: ele.time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addUserGradeExerciseSubmission(user_grade_contest))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IRootPageStateType, IStateType, ITeacherRegisterQuantificationState, IUserGradeExerciseSubmissionState, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ManageStudent.css\"\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getUserGradeExerciseByExerciseAndStudent } from \"../../common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByExerciseStudent\";\r\n\r\nconst DetailExerciseStudent1: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const teacherRegisterQuantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const user_grade_exercise_submissions: IUserGradeExerciseSubmissionState = useSelector((state: IStateType) => state.user_grade_exercise_submissions);\r\n    console.log(users.teachers)\r\n    console.log(teacherRegisterQuantifications)\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    var id_y = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_y !== null) {\r\n        id = id_y;\r\n    }\r\n\r\n    var id_k = localStorage.getItem('exercise_id');\r\n    var exercise_id: string = \"\";\r\n    if (id_k !== null) {\r\n        exercise_id = id_k;\r\n    }\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    let percentage = user_grade_exercise_submissions.user_grade_exercise_submissions.length > 0 ? user_grade_exercise_submissions.user_grade_exercise_submissions[0].score : 0;\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getUserGradeExerciseByExerciseAndStudent(dispatch, exercise_id,id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getUserGradeExerciseByExerciseAndStudent(dispatch, exercise_id,id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, exercise_id, id]);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Bài tập\", \"Chi tiết\"));\r\n    }, [path.area, dispatch]);\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n        <div className=\"row\" id=\"search-box\">\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <div className=\"input-group\" id=\"search-content\">\r\n              <div className=\"form-outline\">\r\n                <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> : <Fragment>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Đề tài</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <p dangerouslySetInnerHTML={{ __html: user_grade_exercise_submissions.user_grade_exercise_submissions.length > 0 ? user_grade_exercise_submissions.user_grade_exercise_submissions[0].description : \"\" }}>\r\n                            </p>\r\n\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Thời gian nộp: <span> {user_grade_exercise_submissions.user_grade_exercise_submissions.length > 0 ? user_grade_exercise_submissions.user_grade_exercise_submissions[0].time_submit : \"\"}</span></h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-8 col-lg-8\">\r\n                    <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Bài làm của bé</h6>\r\n                    </div>\r\n                    <img className=\"card-img-top\" src={user_grade_exercise_submissions.user_grade_exercise_submissions.length > 0 ? user_grade_exercise_submissions.user_grade_exercise_submissions[0].image_url : \"\"} alt=\"\" />\r\n                </div>\r\n                <div className=\"col-xl-4 col-lg-4\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Điểm của bé</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <CircularProgressbar value={percentage} text={`${percentage}`} />;\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Nhận xét</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            {user_grade_exercise_submissions.user_grade_exercise_submissions.length > 0 ? user_grade_exercise_submissions.user_grade_exercise_submissions[0].feedback : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default DetailExerciseStudent1;\r\n","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport { editTeacher, setModificationState } from \"../../store/actions/users.action\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { postExerciseSubmission } from \"../../common/service/ExerciseSubmission/PostExerciseSubmission\";\r\n\r\nfunction FormSubmit(): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n\r\n    let users: IUserState = useSelector((state: IStateType) => state.users);\r\n    let user: IUser | null = users.selectedUser;\r\n\r\n    const isCreate: boolean = (users.modificationState === UserModificationStatus.Create);\r\n\r\n    if (!user || isCreate) {\r\n        user = { id: \"\", username: \"\", email: \"\", status: \"\", password: \"\", firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: \"\" }\r\n    }\r\n\r\n    var id_x = localStorage.getItem(\"exercise_description\");\r\n    let exercise_description: string = \"\";\r\n    if (id_x !== null) {\r\n        exercise_description = id_x;\r\n    }\r\n\r\n    var id_y = localStorage.getItem(\"id\");\r\n    let id: string = \"\";\r\n    if (id_y !== null) {\r\n        id = id_y;\r\n    }\r\n\r\n    var id_z = localStorage.getItem(\"exercise_id\");\r\n    let exercise_id: string = \"\";\r\n    if (id_z !== null) {\r\n        exercise_id = id_z;\r\n    }\r\n\r\n\r\n    async function saveUser(e: FormEvent<HTMLFormElement>): Promise<void> {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n        var url = await setImageAction();\r\n        let saveUserFn: Function = editTeacher;\r\n        saveForm(saveUserFn, url, idx);\r\n    }\r\n\r\n    function saveForm(saveFn: Function, url: string, idx: any): void {\r\n        if (user) {\r\n            dispatch(postExerciseSubmission({\r\n                student_id: id,\r\n                exercise_id: exercise_id,\r\n                image_url: url\r\n            }, idx))\r\n        }\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (image === null) as boolean;\r\n    }\r\n\r\n    const src = user.profile_image_url;\r\n\r\n    const [preview, setPreview] = useState(src)\r\n\r\n    const [image, setImage] = useState<any>();\r\n\r\n    const uploadPicture = (e: any) => {\r\n        setImage({\r\n            /* contains the preview, if you want to show the picture to the user\r\n                you can access it with this.state.currentPicture\r\n           */\r\n            picturePreview: URL.createObjectURL(e.target.files[0]),\r\n            /* this contains the file we want to send */\r\n            pictureAsFile: e.target.files[0]\r\n        })\r\n        setPreview(URL.createObjectURL(e.target.files[0]))\r\n    };\r\n\r\n    async function setImageAction() {\r\n        const formData = new FormData();\r\n        formData.append(\r\n            \"gifFile\",\r\n            image.pictureAsFile\r\n        );\r\n        // do your post request\r\n        const res = await fetch(\r\n            `${process.env.REACT_APP_API_URL}/cloudinary/gifs`, {\r\n            method: \"POST\",\r\n            body: formData\r\n        }\r\n        )\r\n        const data = await res.json()\r\n        return data.url_image\r\n\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Đề bài</h6>\r\n                        </div>\r\n                        <ToastContainer />\r\n                        <div className=\"card-body\">\r\n                            <div className=\"col-xl-12 col-md-12 col-xs-12\" dangerouslySetInnerHTML={{ __html: exercise_description }}>\r\n\r\n                            </div>\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <label htmlFor=\"profile_image\">Chọn ảnh:</label>\r\n                                        <input type=\"file\" id=\"profile_image\" name=\"profile_image\" onChange={uploadPicture} />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <img src={preview} alt=\"Preview\" id=\"avatar\" />\r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default FormSubmit;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess } from \"../../../store/actions/exercise.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\n\r\nexport function postExerciseSubmission(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/exercise-submission`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postExerciseSubmission(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                dispatch(fetchDataSuccess(data))\r\n                toast.update(idx, { render: \"Nộp bài tập thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER , autoClose: 2000});\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Nộp bài tập không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport { editTeacher, setModificationState } from \"../../store/actions/users.action\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { postContestSubmission } from \"../../common/service/ContestSubmission/PostContestSubmission\";\r\n\r\nfunction FormSubmitContestStudent(): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n\r\n    let users: IUserState = useSelector((state: IStateType) => state.users);\r\n    let user: IUser | null = users.selectedUser;\r\n\r\n    const isCreate: boolean = (users.modificationState === UserModificationStatus.Create);\r\n\r\n    if (!user || isCreate) {\r\n        user = { id: \"\", username: \"\", email: \"\", status: \"\", password: \"\", firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: \"\" }\r\n    }\r\n\r\n    var id_x = localStorage.getItem(\"contest_description\");\r\n    let contest_description: string = \"\";\r\n    if (id_x !== null) {\r\n        contest_description = id_x;\r\n    }\r\n\r\n    var id_y = localStorage.getItem(\"contest_id\");\r\n    let contest_id: string = \"\";\r\n    if (id_y !== null) {\r\n        contest_id = id_y;\r\n    }\r\n\r\n    var id_z = localStorage.getItem(\"id\");\r\n    let id: string = \"\";\r\n    if (id_z !== null) {\r\n        id = id_z;\r\n    }\r\n\r\n\r\n    async function saveUser(e: FormEvent<HTMLFormElement>): Promise<void> {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n\r\n        var url = await setImageAction();\r\n        let saveUserFn: Function = editTeacher;\r\n        saveForm(saveUserFn, url, idx);\r\n    }\r\n\r\n    function saveForm(saveFn: Function, url: string, idx: any): void {\r\n        if (user) {\r\n            dispatch(postContestSubmission({\r\n                student_id: id,\r\n                contest_id: contest_id,\r\n                image_url: url\r\n            }, idx))\r\n        }\r\n    }\r\n\r\n\r\n    function cancelForm(): void {\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (image === null) as boolean;\r\n    }\r\n\r\n    const src = user.profile_image_url;\r\n\r\n    const [preview, setPreview] = useState(src)\r\n\r\n    const [image, setImage] = useState<any>();\r\n\r\n    const uploadPicture = (e: any) => {\r\n        setImage({\r\n            /* contains the preview, if you want to show the picture to the user\r\n                you can access it with this.state.currentPicture\r\n           */\r\n            picturePreview: URL.createObjectURL(e.target.files[0]),\r\n            /* this contains the file we want to send */\r\n            pictureAsFile: e.target.files[0]\r\n        })\r\n        setPreview(URL.createObjectURL(e.target.files[0]))\r\n    };\r\n\r\n    async function setImageAction() {\r\n        const formData = new FormData();\r\n        formData.append(\r\n            \"gifFile\",\r\n            image.pictureAsFile\r\n        );\r\n        // do your post request\r\n        const res = await fetch(\r\n            `${process.env.REACT_APP_API_URL}/cloudinary/gifs`, {\r\n            method: \"POST\",\r\n            body: formData\r\n        }\r\n        )\r\n        const data = await res.json()\r\n        return data.url_image\r\n\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Đề bài</h6>\r\n                        </div>\r\n                        <ToastContainer />\r\n                        <div className=\"card-body\">\r\n                            <div className=\"col-xl-12 col-md-12 col-xs-12\" dangerouslySetInnerHTML={{ __html: contest_description }}>\r\n\r\n                            </div>\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <label htmlFor=\"profile_image\">Chọn ảnh:</label>\r\n                                        <input type=\"file\" id=\"profile_image\" name=\"profile_image\" onChange={uploadPicture} />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <img src={preview} alt=\"Preview\" id=\"avatar\" />\r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default FormSubmitContestStudent;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\n\r\nexport function postContestSubmission(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest-submission`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postContestSubmission(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                dispatch(fetchDataSuccess(data))\r\n                toast.update(idx, { render: \"Nộp bài thi thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER , autoClose: 2000});\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Nộp bài thi không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IStateType, IRootPageStateType, ITimeScheduleState } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedProduct\r\n} from \"../../store/actions/products.action\";\r\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, ViewsDirective, ViewDirective } from \"@syncfusion/ej2-react-schedule\";\r\n\r\nimport \"@syncfusion/ej2-base/styles/material.css\";\r\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\r\nimport { getInfoMyClass } from \"../../common/service/MyClass/GetInfoMyClass\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst ScheduleClassStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const time_schedules: ITimeScheduleState = useSelector((state: IStateType) => state.time_schedules);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let data: object[] = []\r\n\r\n    time_schedules.timeSchedules.map((ele: any, index: any) => {\r\n        if (ele !== null && ele !== undefined) {\r\n            data.push({\r\n                Id: index,\r\n                Subject: `Buổi học ${index + 1}`,\r\n                StartTime: new Date(ele.start_time),\r\n                EndTime: new Date(ele.end_time),\r\n                IsAllDay: false\r\n            })\r\n        }\r\n        return 1\r\n    })\r\n\r\n    var id_x = localStorage.getItem('class_id')\r\n    let class_id: string = \"\";\r\n    if (id_x !== null){\r\n        class_id = id_x\r\n    }\r\n\r\n\r\n    var id_y = localStorage.getItem('course_name')\r\n    let course_name: string = \"\";\r\n    if (id_y !== null){\r\n        course_name = id_y\r\n    }\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getInfoMyClass(dispatch, class_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getInfoMyClass(dispatch, class_id))\r\n            }\r\n        }\r\n    }, [dispatch, class_id, access_token, refresh_token]);\r\n\r\n    console.log(new Date(2018, 1, 15, 12, 30))\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedProduct());\r\n        dispatch(updateCurrentPath(\"Lịch học\", course_name));\r\n    }, [path.area, dispatch, course_name]);\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> :<Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\" >\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Lịch học chi tiết</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <ScheduleComponent height='550px' selectedDate={new Date()} eventSettings={{\r\n                                dataSource: data, fields: {\r\n                                    id: 'Id',\r\n                                    subject: { name: 'Subject' },\r\n                                    isAllDay: { name: 'IsAllDay' },\r\n                                    startTime: { name: 'StartTime' },\r\n                                    endTime: { name: 'EndTime' }\r\n                                }\r\n                            }}>\r\n\r\n                                <ViewsDirective>\r\n                                    <ViewDirective option='WorkWeek' startHour='07:00' endHour='22:00' />\r\n                                    <ViewDirective option='Week' startHour='07:00' endHour='22:00' />\r\n                                    <ViewDirective option='Month' showWeekend={false} />\r\n                                </ViewsDirective>\r\n                                <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\r\n                            </ScheduleComponent>;\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default ScheduleClassStudent;\r\n","import { fetchDataSuccess, fetchDataError, removeExerciseGradedAll, removeExerciseNotGradedAll, addExerciseNotGraded } from \"../../../store/actions/exercise_submission.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ExerciseSubmission {\r\n    id: string;\r\n    student_id: string;\r\n    exercise_id: string;\r\n    student_name: string;\r\n    exercise_name: string;\r\n    image_url: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getExerciseSubmissionById(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/exercise-submission/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getExerciseSubmissionById(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeExerciseGradedAll())\r\n                dispatch(removeExerciseNotGradedAll())\r\n                    var strDate_1 = data.create_time;\r\n                    var strDate_2 = data.update_time;\r\n                    var exercise_submission: ExerciseSubmission = {\r\n                        id: data.id,\r\n                        student_id: data.student_id,\r\n                        student_name: data.student_name,\r\n                        exercise_id: data.exercise_id,\r\n                        exercise_name: data.exercise_name,\r\n                        image_url: data.image_url,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    return dispatch(addExerciseNotGraded(exercise_submission));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, FormEvent, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IExerciseSubmissionState, IRootPageStateType, IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ManageStudent.css\"\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getExerciseSubmissionById } from \"../../common/service/ExerciseSubmission/GetExerciseSubmissionById\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport { editTeacher, setModificationState } from \"../../store/actions/users.action\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\nconst ViewExerciseSubmission: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const exercise_submissions: IExerciseSubmissionState = useSelector((state: IStateType) => state.exercise_submissions);\r\n\r\n    var id_y = localStorage.getItem('exercise_submission_id');\r\n    var exercise_submission_id: string = \"\";\r\n    if (id_y !== null) {\r\n        exercise_submission_id = id_y;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getExerciseSubmissionById(dispatch, exercise_submission_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getExerciseSubmissionById(dispatch, exercise_submission_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, exercise_submission_id]);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Bài tập\", \"Chi tiết\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    let users: IUserState = useSelector((state: IStateType) => state.users);\r\n    let user: IUser | null = users.selectedUser;\r\n\r\n    const isCreate: boolean = (users.modificationState === UserModificationStatus.Create);\r\n\r\n    if (!user || isCreate) {\r\n        user = { id: \"\", username: \"\", email: \"\", status: \"\", password: \"\", firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: \"\" }\r\n    }\r\n\r\n    async function saveUser(e: FormEvent<HTMLFormElement>): Promise<void> {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        var url = await setImageAction();\r\n        let saveUserFn: Function = editTeacher;\r\n        saveForm(saveUserFn, url);\r\n    }\r\n\r\n    function saveForm(saveFn: Function, url: string): void {\r\n        if (user) {\r\n            notify()\r\n        }\r\n    }\r\n\r\n    function notify() {\r\n        toast.info(\"Cập nhật thành công!\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 2000\r\n        });\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (image === null) as boolean;\r\n    }\r\n\r\n    const src = user.profile_image_url;\r\n\r\n    const [preview, setPreview] = useState(src)\r\n\r\n    const [image, setImage] = useState<any>();\r\n\r\n    const uploadPicture = (e: any) => {\r\n        setImage({\r\n            /* contains the preview, if you want to show the picture to the user\r\n                you can access it with this.state.currentPicture\r\n           */\r\n            picturePreview: URL.createObjectURL(e.target.files[0]),\r\n            /* this contains the file we want to send */\r\n            pictureAsFile: e.target.files[0]\r\n        })\r\n        setPreview(URL.createObjectURL(e.target.files[0]))\r\n    };\r\n\r\n    async function setImageAction() {\r\n        const formData = new FormData();\r\n        formData.append(\r\n            \"gifFile\",\r\n            image.pictureAsFile\r\n        );\r\n        // do your post request\r\n        const res = await fetch(\r\n            `${process.env.REACT_APP_API_URL}/cloudinary/gifs`, {\r\n            method: \"POST\",\r\n            body: formData\r\n        }\r\n        )\r\n        const data = await res.json()\r\n        return data.url_image\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Nộp bài</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                                <form onSubmit={saveUser}>\r\n                                    <div className=\"form-row\">\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <label htmlFor=\"profile_image\">Chọn ảnh:</label>\r\n                                            <input type=\"file\" id=\"profile_image\" name=\"profile_image\" onChange={uploadPicture} />\r\n                                        </div>\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <img src={preview} alt=\"Preview\" id=\"avatar\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                    <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Bài làm của bé</h6>\r\n                    </div>\r\n                    <img className=\"card-img-top\" src={exercise_submissions.exercise_not_gradeds.length > 0 ? exercise_submissions.exercise_not_gradeds[0].image_url : \"\"} alt=\"\" />\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewExerciseSubmission;\r\n","import { ISemesterClassStudent, SemesterClassStudentModificationStatus } from \"../models/semester_class_student.interface\";\r\n\r\n// register_successfull_semester_class_students\r\nexport const ADD_NOT_PAYED_NOW: string = \"ADD_NOT_PAYED_NOW\";\r\nexport const EDIT_NOT_PAYED_NOW: string = \"EDIT_NOT_PAYED_NOW\";\r\nexport const REMOVE_NOT_PAYED_NOW: string = \"REMOVE_NOT_PAYED_NOW\";\r\nexport const CHANGE_NOT_PAYED_NOW_AMOUNT: string = \"CHANGE_NOT_PAYED_NOW_AMOUNT\";\r\nexport const CHANGE_NOT_PAYED_NOW_PENDING_EDIT: string = \"CHANGE_NOT_PAYED_NOW_PENDING_EDIT\";\r\nexport const CLEAR_NOT_PAYED_NOW_PENDING_EDIT: string = \"CLEAR_NOT_PAYED_NOW_PENDING_EDIT\";\r\nexport const REMOVE_NOT_PAYED_NOW_ALL: string = \"REMOVE_NOT_PAYED_NOW_ALL\";\r\nexport const INITIAL_NOT_PAYED_NOW: string = \"INITIAL_NOT_PAYED_NOW\";\r\n\r\n// not_register_semester_class_students\r\nexport const ADD_PAYED: string = \"ADD_PAYED\";\r\nexport const EDIT_PAYED: string = \"EDIT_PAYED\";\r\nexport const REMOVE_PAYED: string = \"REMOVE_PAYED\";\r\nexport const CHANGE_PAYED_AMOUNT: string = \"CHANGE_PAYED_AMOUNT\";\r\nexport const CHANGE_PAYED_PENDING_EDIT: string = \"CHANGE_PAYED_PENDING_EDIT\";\r\nexport const CLEAR_PAYED_PENDING_EDIT: string = \"CLEAR_PAYED_PENDING_EDIT\";\r\nexport const REMOVE_PAYED_ALL: string = \"REMOVE_PAYED_ALL\";\r\nexport const INITIAL_PAYED: string = \"INITIAL_PAYED\";\r\n\r\n\r\n// not_register_semester_class_students\r\nexport const ADD_NOT_PAYED: string = \"ADD_NOT_PAYED\";\r\nexport const EDIT_NOT_PAYED: string = \"EDIT_NOT_PAYED\";\r\nexport const REMOVE_NOT_PAYED: string = \"REMOVE_NOT_PAYED\";\r\nexport const CHANGE_NOT_PAYED_AMOUNT: string = \"CHANGE_NOT_PAYED_AMOUNT\";\r\nexport const CHANGE_NOT_PAYED_PENDING_EDIT: string = \"CHANGE_NOT_PAYED_PENDING_EDIT\";\r\nexport const CLEAR_NOT_PAYED_PENDING_EDIT: string = \"CLEAR_NOT_PAYED_PENDING_EDIT\";\r\nexport const REMOVE_NOT_PAYED_ALL: string = \"REMOVE_NOT_PAYED_ALL\";\r\nexport const INITIAL_NOT_PAYED: string = \"INITIAL_NOT_PAYED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(semester_class_student: ISemesterClassStudent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        semester_class_student\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSemesterClassStudentNotPayedNow(semester_class_student: ISemesterClassStudent): IInitialSemesterClassStudentNotPayedNowActionType {\r\n    return { type: INITIAL_NOT_PAYED_NOW, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function removeSemesterClassStudentNotPayedNowAll(): IRemoveSemesterClassStudentNotPayedNowAllActionType {\r\n    return { type: REMOVE_NOT_PAYED_NOW_ALL };\r\n}\r\n\r\nexport function addSemesterClassStudentNotPayedNow(semester_class_student: ISemesterClassStudent): IAddSemesterClassStudentNotPayedNowActionType {\r\n    return { type: ADD_NOT_PAYED_NOW, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function editSemesterClassStudentNotPayedNow(semester_class_student: ISemesterClassStudent): IEditSemesterClassStudentNotPayedNowActionType {\r\n    return { type: EDIT_NOT_PAYED_NOW, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function removeSemesterClassStudentNotPayedNow(id: string): IRemoveSemesterClassStudentNotPayedNowActionType {\r\n    return { type: REMOVE_NOT_PAYED_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClassStudentNotPayedNow(semester_class_student: ISemesterClassStudent): IChangeSelectedSemesterClassStudentNotPayedNowActionType {\r\n    return { type: CHANGE_NOT_PAYED_NOW_PENDING_EDIT, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function clearSelectedSemesterClassStudentNotPayedNow(): IClearSelectedSemesterClassStudentNotPayedNowActionType {\r\n    return { type: CLEAR_NOT_PAYED_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialSemesterClassStudentPayed(semester_class_student: ISemesterClassStudent): IInitialSemesterClassStudentPayedActionType {\r\n    return { type: INITIAL_PAYED, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function removeSemesterClassStudentPayedAll(): IRemoveSemesterClassStudentPayedAllActionType {\r\n    return { type: REMOVE_PAYED_ALL };\r\n}\r\n\r\nexport function addSemesterClassStudentPayed(semester_class_student: ISemesterClassStudent): IAddSemesterClassStudentPayedActionType {\r\n    return { type: ADD_PAYED, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function editSemesterClassStudentPayed(semester_class_student: ISemesterClassStudent): IEditSemesterClassStudentPayedActionType {\r\n    return { type: EDIT_PAYED, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function removeSemesterClassStudentPayed(id: string): IRemoveSemesterClassStudentPayedActionType {\r\n    return { type: REMOVE_PAYED, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClassStudentPayed(semester_class_student: ISemesterClassStudent): IChangeSelectedSemesterClassStudentPayedActionType {\r\n    return { type: CHANGE_PAYED_PENDING_EDIT, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function clearSelectedSemesterClassStudentPayed(): IClearSelectedSemesterClassStudentPayedActionType {\r\n    return { type: CLEAR_PAYED_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: SemesterClassStudentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n\r\nexport function initialSemesterClassStudentNotPayed(semester_class_student: ISemesterClassStudent): IInitialSemesterClassStudentNotPayedActionType {\r\n    return { type: INITIAL_NOT_PAYED, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function removeSemesterClassStudentNotPayedAll(): IRemoveSemesterClassStudentNotPayedAllActionType {\r\n    return { type: REMOVE_NOT_PAYED_ALL };\r\n}\r\n\r\nexport function addSemesterClassStudentNotPayed(semester_class_student: ISemesterClassStudent): IAddSemesterClassStudentNotPayedActionType {\r\n    return { type: ADD_NOT_PAYED, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function editSemesterClassStudentNotPayed(semester_class_student: ISemesterClassStudent): IEditSemesterClassStudentNotPayedActionType {\r\n    return { type: EDIT_NOT_PAYED, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function removeSemesterClassStudentNotPayed(id: string): IRemoveSemesterClassStudentNotPayedActionType {\r\n    return { type: REMOVE_NOT_PAYED, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClassStudentNotPayed(semester_class_student: ISemesterClassStudent): IChangeSelectedSemesterClassStudentNotPayedActionType {\r\n    return { type: CHANGE_NOT_PAYED_AMOUNT, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function clearSelectedSemesterClassStudentNotPayed(): IClearSelectedSemesterClassStudentNotPayedActionType {\r\n    return { type: CHANGE_NOT_PAYED_PENDING_EDIT };\r\n}\r\n\r\n// register_successfull_semester_class_students\r\ninterface IAddSemesterClassStudentNotPayedNowActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IEditSemesterClassStudentNotPayedNowActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IRemoveSemesterClassStudentNotPayedNowActionType { type: string, id: string };\r\ninterface IChangeSelectedSemesterClassStudentNotPayedNowActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IClearSelectedSemesterClassStudentNotPayedNowActionType { type: string };\r\ninterface IRemoveSemesterClassStudentNotPayedNowAllActionType { type: string }\r\ninterface IInitialSemesterClassStudentNotPayedNowActionType {type: string, semester_class_student: ISemesterClassStudent}\r\n\r\n// not_register_semester_class_students\r\ninterface IAddSemesterClassStudentPayedActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IEditSemesterClassStudentPayedActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IRemoveSemesterClassStudentPayedActionType { type: string, id: string };\r\ninterface IChangeSelectedSemesterClassStudentPayedActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IClearSelectedSemesterClassStudentPayedActionType { type: string };\r\ninterface IRemoveSemesterClassStudentPayedAllActionType { type: string }\r\ninterface IInitialSemesterClassStudentPayedActionType {type: string, semester_class_student: ISemesterClassStudent}\r\n\r\n\r\n// register_successfull_semester_class_students\r\ninterface IAddSemesterClassStudentNotPayedActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IEditSemesterClassStudentNotPayedActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IRemoveSemesterClassStudentNotPayedActionType { type: string, id: string };\r\ninterface IChangeSelectedSemesterClassStudentNotPayedActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IClearSelectedSemesterClassStudentNotPayedActionType { type: string };\r\ninterface IRemoveSemesterClassStudentNotPayedAllActionType { type: string }\r\ninterface IInitialSemesterClassStudentNotPayedActionType {type: string, semester_class_student: ISemesterClassStudent}\r\n\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  SemesterClassStudentModificationStatus};","import { fetchDataSuccess, fetchDataError, removeSemesterClassStudentNotPayedAll, removeSemesterClassStudentNotPayedNowAll, removeSemesterClassStudentPayedAll, addSemesterClassStudentNotPayed, addSemesterClassStudentNotPayedNow, addSemesterClassStudentPayed } from \"../../../store/actions/semester_class_student.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface SemesterClassStudent {\r\n    id: string;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: string;\r\n    semester_class_id: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    semester_name: string;\r\n    semester_id: string;\r\n    status: string;\r\n    image_url: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n    registration_deadline: string;\r\n}\r\nexport function getSemesterClassStudent(dispatch: any, student_id: any, course_id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester-class/student-course/${student_id}/${course_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSemesterClassStudent(dispatch, student_id, course_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeSemesterClassStudentNotPayedAll())\r\n                dispatch(removeSemesterClassStudentNotPayedNowAll())\r\n                dispatch(removeSemesterClassStudentPayedAll())\r\n                console.log(data.body.semester_classes)\r\n                data.body.semester_classes.map((ele: any, index: any) => {\r\n                    var val: SemesterClassStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        course_name: ele.course_name,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semster_class_id,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        schedule: ele.schedule,\r\n                        semester_id: ele.semester_id,\r\n                        status: ele.status,\r\n                        registration_deadline: ele.registration_deadline\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (ele.status === \"Payed\") {\r\n                        dispatch(addSemesterClassStudentPayed(val))\r\n                    }\r\n                    else if (ele.status === \"Not Payed\") {\r\n                        dispatch(addSemesterClassStudentNotPayed(val))\r\n                    }\r\n                    else {\r\n                        dispatch(addSemesterClassStudentNotPayedNow(val))\r\n                    }\r\n                    return 1\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { PropsWithChildren, ReactElement } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ICardSemesterClassStudentProperties } from \"../types/TopCardSemesterClassStudent.types\";\r\n\r\nfunction TopCardSemesterClassStudent(props: PropsWithChildren<ICardSemesterClassStudentProperties>): ReactElement {\r\n    const history = useHistory();\r\n    const routeChange = (course: PropsWithChildren<ICardSemesterClassStudentProperties>) =>{ \r\n        localStorage.removeItem('description_course');\r\n        localStorage.setItem('description_course', course.description);\r\n        localStorage.removeItem('course_id');\r\n        localStorage.setItem('course_id', course.course_id.toString())\r\n        localStorage.removeItem('course_name');\r\n        localStorage.setItem('course_name', course.course_name)\r\n        localStorage.removeItem('art_age_name');\r\n        localStorage.setItem('art_age_name', course.art_age_name.toString())\r\n        localStorage.removeItem('art_type_name');\r\n        localStorage.setItem('art_type_name', course.art_type_name.toString())\r\n        localStorage.removeItem('num_of_section');\r\n        localStorage.setItem('num_of_section', course.num_of_section.toString())\r\n        localStorage.removeItem('schedule');\r\n        localStorage.setItem('schedule', course.schedule.toString())\r\n        localStorage.removeItem('art_level_name');\r\n        localStorage.setItem('art_level_name', course.art_level_name.toString())\r\n        localStorage.removeItem('semester_class_name');\r\n        localStorage.setItem('semester_class_name', course.name.toString())\r\n        localStorage.removeItem('price');\r\n        localStorage.setItem('price', course.price.toString())\r\n        localStorage.removeItem('semester_class_id');\r\n        localStorage.setItem('semester_class_id', course.id.toString())\r\n        localStorage.removeItem('url_image');\r\n        localStorage.setItem('url_image', course.url_image.toString())\r\n        let path = '/semester-class/detail'; \r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-xl-4 col-md-4 mb-2\" onClick={() => {routeChange(props)}}>\r\n            <div className={`card shadow h-100 py-0`} id=\"topcard-user\" >\r\n                <img className=\"card-img-top\" src={props.url_image} alt=\"\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{props.name}</h5>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Thể loại:</span> <span className=\"header-card-course-value-teacher\">{props.art_type_name}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Trình độ:</span> <span className=\"header-card-course-value-teacher\">{props.art_level_name}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Độ tuổi:</span> <span className=\"header-card-course-value-teacher\">{props.art_age_name}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Số buổi:</span> <span className=\"header-card-course-value-teacher\">{props.num_of_section}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-12\" ><span className=\"header-card-course-teacher\">Lịch học:</span> <span className=\"header-card-course-value-teacher\">{props.schedule}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Giá:</span> <span className=\"header-card-course-value-teacher\">{props.price} VNĐ</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Trạng thái:</span> <span className=\"header-card-course-value-teacher\">{props.status}</span></p>\r\n                    </div>\r\n                        {/* <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <img className=\"image-course-teacher\" src={props.url_image} alt=\"Preview\"/>\r\n                            </div>\r\n                        </div> */}\r\n                       {/*  <div className=\"col-xl-8 col-md-8 col-xs-8\"> */}\r\n                            {/* <div className=\"row justify-content-center\">\r\n                                <h5 id=\"name-course-teacher\">{props.name}</h5>\r\n                            </div> */}\r\n                            \r\n                            \r\n                        {/* </div> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default TopCardSemesterClassStudent;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TopCardSemesterClassStudent from \"../../common/components/TopCardSemesterClassStudent\";\r\nimport { ISemesterClassStudentState, IStateType } from \"../../store/models/root.interface\";\r\n\r\n\r\nfunction SemesterClassList(): JSX.Element {\r\n  const semester_class_student: ISemesterClassStudentState = useSelector((state: IStateType) => state.semester_class_student);\r\n\r\n\r\n  const teacherRegisterQuantificationElements: (JSX.Element | null)[] = semester_class_student.payed.map((ele, index) => {\r\n    return (\r\n      <TopCardSemesterClassStudent\r\n        name={ele.name}\r\n        id={ele.id}\r\n        course_name={ele.course_name}\r\n        icon=\"book\"\r\n        class=\"primary\"\r\n        status={ele.status}\r\n        semester_id={ele.semester_id}\r\n        url_image={ele.image_url}\r\n        art_age_name={ele.art_age_name}\r\n        art_level_name={ele.art_level_name}\r\n        art_type_name={ele.art_type_name}\r\n        max_participant={ele.max_participant}\r\n        num_of_section={ele.num_of_section}\r\n        semester_name={ele.semester_name}\r\n        description={ele.description}\r\n        course_id={ele.course_id}\r\n        schedule={ele.schedule}\r\n        price={ele.price}\r\n        registration_deadline={ele.registration_deadline}\r\n      />\r\n    );\r\n  });\r\n\r\n\r\n  const teacherRegisterQuantificationElements1: (JSX.Element | null)[] = semester_class_student.not_payed.map((ele, index) => {\r\n    return (\r\n      <TopCardSemesterClassStudent\r\n        name={ele.name}\r\n        id={ele.id}\r\n        course_name={ele.course_name}\r\n        icon=\"book\"\r\n        class=\"primary\"\r\n        status={ele.status}\r\n        semester_id={ele.semester_id}\r\n        url_image={ele.image_url}\r\n        art_age_name={ele.art_age_name}\r\n        art_level_name={ele.art_level_name}\r\n        art_type_name={ele.art_type_name}\r\n        max_participant={ele.max_participant}\r\n        num_of_section={ele.num_of_section}\r\n        semester_name={ele.semester_name}\r\n        description={ele.description}\r\n        course_id={ele.course_id}\r\n        schedule={ele.schedule}\r\n        price={ele.price}\r\n        registration_deadline={ele.registration_deadline}\r\n      />\r\n    );\r\n  });\r\n\r\n\r\n  const teacherRegisterQuantificationElements2: (JSX.Element | null)[] = semester_class_student.not_payed_now.map((ele, index) => {\r\n    return (\r\n      <TopCardSemesterClassStudent\r\n        name={ele.name}\r\n        id={ele.id}\r\n        course_name={ele.course_name}\r\n        icon=\"book\"\r\n        class=\"primary\"\r\n        status={ele.status}\r\n        semester_id={ele.semester_id}\r\n        url_image={ele.image_url}\r\n        art_age_name={ele.art_age_name}\r\n        art_level_name={ele.art_level_name}\r\n        art_type_name={ele.art_type_name}\r\n        max_participant={ele.max_participant}\r\n        num_of_section={ele.num_of_section}\r\n        semester_name={ele.semester_name}\r\n        description={ele.description}\r\n        course_id={ele.course_id}\r\n        schedule={ele.schedule}\r\n        price={ele.price}\r\n        registration_deadline={ele.registration_deadline}\r\n      />\r\n    );\r\n  });\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      {teacherRegisterQuantificationElements}\r\n      {teacherRegisterQuantificationElements1}\r\n      {teacherRegisterQuantificationElements2}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default SemesterClassList;\r\n","import React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./Discovery.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getSemesterClassStudent } from \"../../common/service/SemesterClassStudent/GetSemesterClassStudentNew\";\r\nimport SemesterClassList from \"./SemesterClassList\";\r\n\r\nconst SemesterClassStudentNew: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    //const semester_classs: ISemesterClassState = useSelector((state: IStateType) => state.semester_classes);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('course_id');\r\n    var course_id: string = \"\";\r\n    if (id_y !== null) {\r\n        course_id = id_y;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getSemesterClassStudent(dispatch, id, course_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getSemesterClassStudent(dispatch, id, course_id))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token, course_id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp mở\", \"\"));\r\n    }, [dispatch, path.area])\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                {/* <div className=\"row\">\r\n                <TopCard title=\"ĐÃ ĐĂNG KÍ\" text={`${numberTeacherRegisterSuccessfullCount}`} icon=\"book\" class=\"primary\" />\r\n            </div> */}\r\n\r\n                <div className=\"row\" id=\"search-box\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"input-group\" id=\"search-content\">\r\n                            <div className=\"form-outline\">\r\n                                <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                            </div>\r\n                            <button type=\"button\" className=\"btn btn-primary\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <SemesterClassList />\r\n                </div>\r\n\r\n\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default SemesterClassStudentNew;\r\n","import { fetchDataSuccess, fetchDataError, addUserGradeExerciseSubmission, removeUserGradeExerciseSubmissionAll} from \"../../../store/actions/user_grade_exercise_submission.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user_grade_contest {\r\n    student_id: string;\r\n    student_name: string;\r\n    exercise_name: string;\r\n    time_submit: string;\r\n    deadline: string;\r\n    description: string;\r\n    image_url: string;\r\n    exercise_submission_id: string;\r\n    feedback: string;\r\n    score: number;\r\n    time: string;\r\n}\r\nexport function getInfoFinalCourse(dispatch: any, student_id: any, classes_id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/final-course/${student_id}/${classes_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getInfoFinalCourse(dispatch, student_id, classes_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeUserGradeExerciseSubmissionAll())\r\n                console.log(data.body.UserGradeExerciseSubmission)\r\n                localStorage.removeItem(\"final_grade\");\r\n                localStorage.setItem(\"final_grade\", data.body.final_grade)\r\n                data.body.UserGradeExerciseSubmission.map((ele: any, index: any) => {\r\n                    var user_grade_contest: user_grade_contest = {\r\n                        student_id: ele.student_id,\r\n                        exercise_name: ele.exercise_name,\r\n                        time_submit: ele.time_submit,\r\n                        deadline: ele.deadline,\r\n                        description: ele.description,\r\n                        image_url: ele.image_url,\r\n                        exercise_submission_id: ele.exercise_submission_id,\r\n                        student_name: ele.student_name,\r\n                        feedback: ele.feedback,\r\n                        score: ele.score,\r\n                        time: ele.time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addUserGradeExerciseSubmission(user_grade_contest))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { IClassHasRegisterJoinSemester, ClassHasRegisterJoinSemesterModificationStatus } from \"../models/class_has_register_join_semester.interface\";\r\nexport const ADD_CLASS_HAS_REGISTER_JOIN_SEMESTER: string = \"ADD_CLASS_HAS_REGISTER_JOIN_SEMESTER\";\r\nexport const EDIT_CLASS_HAS_REGISTER_JOIN_SEMESTER: string = \"EDIT_CLASS_HAS_REGISTER_JOIN_SEMESTER\";\r\nexport const REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER: string = \"REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER\";\r\nexport const CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_AMOUNT: string = \"CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_AMOUNT\";\r\nexport const CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT: string = \"CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT\";\r\nexport const CLEAR_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT: string = \"CLEAR_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER_ALL: string = \"REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER_ALL\";\r\nexport const INITIAL_CLASS_HAS_REGISTER_JOIN_SEMESTER: string = \"INITIAL_CLASS_HAS_REGISTER_JOIN_SEMESTER\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(class_has_register_join_semester: IClassHasRegisterJoinSemester) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        class_has_register_join_semester\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialClassHasRegisterJoinSemester(class_has_register_join_semester: IClassHasRegisterJoinSemester): IInitialClassHasRegisterJoinSemesterActionType {\r\n    return { type: INITIAL_CLASS_HAS_REGISTER_JOIN_SEMESTER, class_has_register_join_semester: class_has_register_join_semester };\r\n}\r\n\r\nexport function removeClassHasRegisterJoinSemesterAll(): IRemoveClassHasRegisterJoinSemesterAllActionType {\r\n    return { type: REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER_ALL };\r\n}\r\n\r\nexport function addClassHasRegisterJoinSemester(class_has_register_join_semester: IClassHasRegisterJoinSemester): IAddClassHasRegisterJoinSemesterActionType {\r\n    return { type: ADD_CLASS_HAS_REGISTER_JOIN_SEMESTER, class_has_register_join_semester: class_has_register_join_semester };\r\n}\r\n\r\nexport function editClassHasRegisterJoinSemester(class_has_register_join_semester: IClassHasRegisterJoinSemester): IEditClassHasRegisterJoinSemesterActionType {\r\n    return { type: EDIT_CLASS_HAS_REGISTER_JOIN_SEMESTER, class_has_register_join_semester: class_has_register_join_semester };\r\n}\r\n\r\nexport function removeClassHasRegisterJoinSemester(id: string): IRemoveClassHasRegisterJoinSemesterActionType {\r\n    return { type: REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER, id: id };\r\n}\r\n\r\nexport function changeSelectedClassHasRegisterJoinSemester(class_has_register_join_semester: IClassHasRegisterJoinSemester): IChangeSelectedClassHasRegisterJoinSemesterActionType {\r\n    return { type: CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT, class_has_register_join_semester: class_has_register_join_semester };\r\n}\r\n\r\nexport function clearSelectedClassHasRegisterJoinSemester(): IClearSelectedClassHasRegisterJoinSemesterActionType {\r\n    return { type: CLEAR_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ClassHasRegisterJoinSemesterModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddClassHasRegisterJoinSemesterActionType { type: string, class_has_register_join_semester: IClassHasRegisterJoinSemester };\r\ninterface IEditClassHasRegisterJoinSemesterActionType { type: string, class_has_register_join_semester: IClassHasRegisterJoinSemester };\r\ninterface IRemoveClassHasRegisterJoinSemesterActionType { type: string, id: string };\r\ninterface IChangeSelectedClassHasRegisterJoinSemesterActionType { type: string, class_has_register_join_semester: IClassHasRegisterJoinSemester };\r\ninterface IClearSelectedClassHasRegisterJoinSemesterActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ClassHasRegisterJoinSemesterModificationStatus};\r\ninterface IRemoveClassHasRegisterJoinSemesterAllActionType { type: string }\r\ninterface IInitialClassHasRegisterJoinSemesterActionType {type: string, class_has_register_join_semester: IClassHasRegisterJoinSemester}","import { fetchDataError, removeClassHasRegisterJoinSemesterAll, addClassHasRegisterJoinSemester } from \"../../../store/actions/class_has_register_join_semester.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ClassHasRegisterJoinSemester {\r\n    classes_id: string;\r\n    user_register_join_semester_id: string;\r\n    review_star: number;\r\n    student_feedback: string;\r\n    teacher_feedback: string;\r\n}\r\nexport function getInforClassHasRegisterJoinSemester(dispatch: any, classes_id: any, student_id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/class-has-register-join-semester/${classes_id}/${student_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getInforClassHasRegisterJoinSemester(dispatch, classes_id, student_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(removeClassHasRegisterJoinSemesterAll())\r\n                var class_has_register_join_semester: ClassHasRegisterJoinSemester = {\r\n                    classes_id: data.classes_id,\r\n                    student_feedback: data.student_feedback,\r\n                    user_register_join_semester_id: data.user_register_join_semester_id,\r\n                    teacher_feedback: data.teacher_feedback,\r\n                    review_star: data.review_star\r\n                }\r\n                dispatch(addClassHasRegisterJoinSemester(class_has_register_join_semester))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChartLine } from \"../../common/components/CharLine\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IClassHasRegisterJoinSemesterState, IRootPageStateType, IStateType, IUserGradeExerciseSubmissionState } from \"../../store/models/root.interface\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getInfoFinalCourse } from \"../../common/service/FinalCourse/GetInfoFinalCourse\";\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { getInforClassHasRegisterJoinSemester } from \"../../common/service/ClassHasRegisterJoinSemester/GetInfoClassHasRegisterJoinSemester\";\r\n\r\nconst ReivewClassDone: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const user_grade_exercise_submission: IUserGradeExerciseSubmissionState = useSelector((state: IStateType) => state.user_grade_exercise_submissions);\r\n    const class_has_register_join_semester: IClassHasRegisterJoinSemesterState = useSelector((state: IStateType) => state.class_has_register_join_semesters);\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    var id_y = localStorage.getItem('id');\r\n    var student_id: string= \"\";\r\n    if (id_y !== null) {\r\n        student_id = id_y;\r\n    }\r\n\r\n    var id_t = localStorage.getItem('class_id');\r\n    var class_id: string = \"\";\r\n    if (id_t !== null) {\r\n        class_id = id_t;\r\n    }\r\n\r\n    var id_x = localStorage.getItem(\"final_grade\");\r\n    let final_grade = 0;\r\n    if (id_x !== null) {\r\n        final_grade = parseFloat(id_x);\r\n    }\r\n\r\n    var id_k = localStorage.getItem(\"course_name\");\r\n    let course_name = \"\";\r\n    if (id_k !== null) {\r\n        course_name = id_k;\r\n    }\r\n\r\n    let percentage = final_grade*10;\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getInfoFinalCourse(dispatch, student_id, class_id))\r\n                    trackPromise(getInforClassHasRegisterJoinSemester(dispatch, class_id, student_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getInfoFinalCourse(dispatch, student_id, class_id))\r\n                trackPromise(getInforClassHasRegisterJoinSemester(dispatch, class_id, student_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, student_id, class_id]);\r\n\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    \r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(course_name, \"Tổng kết\"));\r\n    }, [path.area, dispatch, course_name]);\r\n\r\n    let list_score_user_grade_exercise: number[] = [];\r\n    let list_name_user_grade_exercise: string[] = [];\r\n    user_grade_exercise_submission.user_grade_exercise_submissions.map((ele, idx) => {\r\n        list_score_user_grade_exercise.push(ele.score)\r\n        list_name_user_grade_exercise.push(ele.exercise_name)\r\n        return ele\r\n    })\r\n\r\n    const routeChangeReivewStart = () => {\r\n        let path = \"/classes/form-review\";\r\n        history.push({\r\n          pathname: path,\r\n      });\r\n      }\r\n\r\n\r\n    const labels = list_name_user_grade_exercise;\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Điểm kiểm tra',\r\n                data: list_score_user_grade_exercise,\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            }\r\n        ],\r\n    };\r\n\r\n    const history = useHistory();\r\n    const routeChange = () => {\r\n        let path = '/classes/exercise-student';\r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-8 col-md-8 mb-4\">\r\n                        <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row no-gutters\">\r\n                                    <ChartLine data={data} />\r\n                                </div>\r\n                                <div className=\"row justify-content-center\">\r\n                                    <button\r\n                                        className=\"btn btn-success btn-green\"\r\n                                        id=\"btn-into-class-student\"\r\n                                        onClick={() => { routeChange() }}\r\n                                    >\r\n                                        Xem chi tiết\r\n                                        <i className={`fas fa-arrow-right fa-1x`} id=\"icon-arrow-right\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 col-md-4 mb-4\"> \r\n                        <div className=\"card shadow mb-4\">\r\n                            <div className=\"card-header py-3\">\r\n                                <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Điểm tổng kết</h6>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <CircularProgressbar value={percentage} text={`${percentage}`} />;\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Nhận xét</h6>\r\n                        </div>\r\n                        <div className=\"card-body\"> \r\n                            {\r\n                                class_has_register_join_semester.class_has_register_join_semesters.map((ele, idx) => {\r\n                                    return (\r\n                                        <p>{ele.teacher_feedback}</p>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                function () {\r\n                    if (class_has_register_join_semester.class_has_register_join_semesters.length > 0) {\r\n                        class_has_register_join_semester.class_has_register_join_semesters.map((ele, idx) => {\r\n                            if (ele !== undefined) {\r\n                                if (ele.review_star !== 0) {\r\n                                    return (\r\n                                        <div className=\"row\">\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"row justify-content-center\"> \r\n                                                    <button \r\n                                                        type=\"button\" \r\n                                                        className=\"btn btn-success\" \r\n                                                        onClick={() => {routeChangeReivewStart()}}\r\n                                                    >\r\n                                                        Nhận xét giáo viên\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            }\r\n                            return (<> </>)\r\n                        })\r\n                    }\r\n                }()\r\n            }\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default ReivewClassDone;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IUserGradeExerciseSubmissionState } from \"../../store/models/root.interface\";\r\nimport { ILesson } from \"../../store/models/lesson.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IUserGradeExerciseSubmission } from \"../../store/models/user_grade_exercise_submission.interface\";\r\n\r\nexport type lessonListProps = {\r\n    onSelect?: (lesson: ILesson) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\n\r\nfunction ExerciseSectionList1(props: lessonListProps): JSX.Element {\r\n    const user_grade_exercise_submission: IUserGradeExerciseSubmissionState = useSelector((state: IStateType) => state.user_grade_exercise_submissions);\r\n\r\n    const history = useHistory();\r\n    const onChangeRoute = (exercise: IUserGradeExerciseSubmission) =>{ \r\n        localStorage.removeItem('image_url_exercise')\r\n        localStorage.setItem('image_url_exercise', exercise.image_url)\r\n        localStorage.removeItem('score')\r\n        localStorage.setItem('score', exercise.score.toString())\r\n        localStorage.removeItem('description')\r\n        localStorage.setItem('description', exercise.description)\r\n        localStorage.removeItem('time_submit')\r\n        localStorage.setItem('time_submit', exercise.time_submit)\r\n        localStorage.removeItem('feedback')\r\n        localStorage.setItem('feedback', exercise.feedback)\r\n        let path = '/exercise/score'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n    \r\n    const lessonElements: (JSX.Element | null)[] = user_grade_exercise_submission.user_grade_exercise_submissions.map((exercise, index) => {\r\n        //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n        if (!exercise) { return null; }\r\n        return (<tr className={`table-row`}\r\n            key={`lesson_${index}`} >\r\n            <th scope=\"row\" className=\"data-table\">{index + 1}</th>\r\n            <td className=\"data-table\">{exercise.exercise_name}</td>\r\n            <td className=\"data-table\">{exercise.deadline}</td>\r\n            <td className=\"data-table\">{exercise.time_submit}</td>\r\n            <td className=\"data-table\">{exercise.score}</td>\r\n            <td>\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-primary\" \r\n                    onClick={() => {\r\n                        onChangeRoute(exercise)\r\n                    }}\r\n                >\r\n                    Chi tiết\r\n                </button>\r\n            </td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"table-responsive portlet\">\r\n                <table className=\"table\">\r\n                    <thead id=\"table-thread-exercise-section\">\r\n                        <tr>\r\n                            <th scope=\"col\" className=\"name-row-table\">#</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Tên</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời hạn nộp</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời gian nộp</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Điểm</th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {lessonElements}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ExerciseSectionList1;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getUserGradeExerciseByStudentAndClass } from \"../../common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByClassStudent\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport ExerciseSectionList1 from \"./ExerciseSectionList1\";\r\nimport \"./ManageStudent.css\"\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst ExerciseStudentList1: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    var id_y = localStorage.getItem('student_id');\r\n    var student_id: string= \"\";\r\n    if (id_y !== null) {\r\n        student_id = id_y;\r\n    }\r\n\r\n    var id_z = localStorage.getItem('class_id');\r\n    var class_id: string= \"\";\r\n    if (id_z !== null) {\r\n        class_id = id_z;\r\n    }\r\n    \r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    dispatch(logout())\r\n                    trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id,student_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id,student_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, student_id, class_id]);\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                        </div>\r\n                    </div>\r\n                    <div> \r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Bài tập</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <ExerciseSectionList1 />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ExerciseStudentList1;\r\n","import React, { useState, FormEvent, Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { clearSelectedAnonymousNotification, setModificationStateAnonymousNotification, addAnonymousNotification } from \"../../store/actions/anonymous_notification.action\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { Rating } from \"react-simple-star-rating\";\r\nimport { IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { putClassHasRegisterJoinSemester } from \"../../common/service/ClassHasRegisterJoinSemester/PutClassHasRegisterJoinSemesterStudent\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction ReviewStart(): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n\r\n    const [formState, setFormState] = useState({\r\n        review: { error: \"\", value: \"\" }\r\n    });\r\n\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    \r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Đánh giá\", \"\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        let saveUserFn: Function =  addAnonymousNotification ;\r\n        saveForm(saveUserFn);\r\n    }\r\n\r\n    function saveForm(saveFn: Function): void {\r\n            const idx = toast.loading(\"Đang xử lý yêu cầu. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            console.log(idx)\r\n            dispatch(putClassHasRegisterJoinSemester({\r\n                classes_id: localStorage.getItem('class_id'),\r\n                user_register_join_semester_id: localStorage.getItem('user_register_join_semester_id'),\r\n                student_feedback: formState.review.value,\r\n                review_star: rating\r\n            }, idx))\r\n\r\n            setTimeout(function () {\r\n                routeHome();\r\n            }, 2000);\r\n\r\n            dispatch(clearSelectedAnonymousNotification());\r\n            dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.None));\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.review.error || !formState.review.value ) as boolean;\r\n    }\r\n\r\n    const [rating, setRating] = useState(0) // initial rating value\r\n\r\n    // Catch Rating value\r\n    const handleRating = (rate: number) => {\r\n      setRating(rate)\r\n      // other logic\r\n    }\r\n\r\n    const history = useHistory();\r\n    function routeHome() {\r\n        let path = `/classes`;\r\n        history.push(path);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Tạo nhận xét lớp</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-group\">\r\n                                    <label>Đánh giá</label>\r\n                                    <Rating\r\n                                      onClick={handleRating}\r\n                                      ratingValue={rating}\r\n                                      showTooltip\r\n                                      tooltipArray={['Terrible', 'Bad', 'Average', 'Great', 'Prefect']}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_review\"\r\n                                        value={formState.review.value}\r\n                                        field=\"review\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={20000}\r\n                                        label=\"Nhận xét\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ReviewStart;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/art_type.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function putClassHasRegisterJoinSemester(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/class-has-register-join-semester/student`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putClassHasRegisterJoinSemester(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (res => {\r\n                toast.update(idx, { render: \"Gửi nhận xét thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Gửi nhận xét không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { PropsWithChildren, ReactElement } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ICardSemesterClassParentProperties } from \"../types/TopCardSemesterClassParent.types\";\r\n\r\nfunction TopCardSemesterClassParent(props: PropsWithChildren<ICardSemesterClassParentProperties>): ReactElement {\r\n    const history = useHistory();\r\n    const routeChange = (course: PropsWithChildren<ICardSemesterClassParentProperties>) =>{ \r\n        localStorage.removeItem('description_course');\r\n        localStorage.setItem('description_course', course.description);\r\n        localStorage.removeItem('course_id');\r\n        localStorage.setItem('course_id', course.course_id.toString())\r\n        localStorage.removeItem('course_name');\r\n        localStorage.setItem('course_name', course.course_name)\r\n        localStorage.removeItem('art_age_name');\r\n        localStorage.setItem('art_age_name', course.art_age_name.toString())\r\n        localStorage.removeItem('art_type_name');\r\n        localStorage.setItem('art_type_name', course.art_type_name.toString())\r\n        localStorage.removeItem('num_of_section');\r\n        localStorage.setItem('num_of_section', course.num_of_section.toString())\r\n        localStorage.removeItem('schedule');\r\n        localStorage.setItem('schedule', course.schedule.toString())\r\n        localStorage.removeItem('art_level_name');\r\n        localStorage.setItem('art_level_name', course.art_level_name.toString())\r\n        localStorage.removeItem('semester_class_name');\r\n        localStorage.setItem('semester_class_name', course.name.toString())\r\n        localStorage.removeItem('price');\r\n        localStorage.setItem('price', course.price.toString())\r\n        localStorage.removeItem('semester_class_id');\r\n        localStorage.setItem('semester_class_id', course.id.toString())\r\n        localStorage.removeItem('url_image');\r\n        localStorage.setItem('url_image', course.url_image.toString())\r\n        let path = '/semester-class/detail'; \r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-xl-4 col-md-4 mb-2\" onClick={() => {routeChange(props)}}>\r\n            <div className={`card shadow h-100 py-0`} id=\"topcard-user\" >\r\n                <img className=\"card-img-top\" src={props.url_image} alt=\"\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{props.name}</h5>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Thể loại:</span> <span className=\"header-card-course-value-teacher\">{props.art_type_name}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Trình độ:</span> <span className=\"header-card-course-value-teacher\">{props.art_level_name}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Độ tuổi:</span> <span className=\"header-card-course-value-teacher\">{props.art_age_name}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Số buổi:</span> <span className=\"header-card-course-value-teacher\">{props.num_of_section}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-12\" ><span className=\"header-card-course-teacher\">Lịch học:</span> <span className=\"header-card-course-value-teacher\">{props.schedule}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Giá:</span> <span className=\"header-card-course-value-teacher\">{props.price} VNĐ</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Trạng thái:</span> <span className=\"header-card-course-value-teacher\">{props.status}</span></p>\r\n                    </div>\r\n                    {\r\n                        function () {\r\n                            if (props.student_registered_id.length > 0) {\r\n                                return (\r\n                                    <div className=\"row\">\r\n                                        <p className=\"col-xl-6 col-md-6 col-xs-6\" >\r\n                                            <span className=\"header-card-course-teacher\">Đã mua:</span> \r\n                                            {\r\n                                                props.student_registered_name.map((ele, idx) => {\r\n                                                    if (idx === props.student_registered_name.length - 1) {\r\n                                                        return (\r\n                                                            <span className=\"header-card-course-value-teacher\">{ele}</span>\r\n                                                        )\r\n                                                    }\r\n                                                    return (\r\n                                                        <span className=\"header-card-course-value-teacher\">{ele}, </span>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </p>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        }()\r\n                    }\r\n                        {/* <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <img className=\"image-course-teacher\" src={props.url_image} alt=\"Preview\"/>\r\n                            </div>\r\n                        </div> */}\r\n                       {/*  <div className=\"col-xl-8 col-md-8 col-xs-8\"> */}\r\n                            {/* <div className=\"row justify-content-center\">\r\n                                <h5 id=\"name-course-teacher\">{props.name}</h5>\r\n                            </div> */}\r\n                            \r\n                            \r\n                        {/* </div> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default TopCardSemesterClassParent;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TopCardSemesterClassParent from \"../../common/components/TopCardSemesterClassParent\";\r\nimport { ISemesterClassParentState, IStateType } from \"../../store/models/root.interface\";\r\n\r\n\r\nfunction SemesterClassList(): JSX.Element {\r\n  const semester_class_parent: ISemesterClassParentState = useSelector((state: IStateType) => state.semester_class_parent);\r\n\r\n\r\n  const teacherRegisterQuantificationElements: (JSX.Element | null)[] = semester_class_parent.payed.map((ele, index) => {\r\n    return (\r\n      <TopCardSemesterClassParent\r\n        id = {ele.id}\r\n        name={ele.name}\r\n        course_name={ele.course_name}\r\n        icon=\"book\"\r\n        class=\"primary\"\r\n        status={ele.status}\r\n        semester_id={ele.semester_id}\r\n        url_image={ele.image_url}\r\n        art_age_name={ele.art_age_name}\r\n        art_level_name={ele.art_level_name}\r\n        art_type_name={ele.art_type_name}\r\n        max_participant={ele.max_participant}\r\n        num_of_section={ele.num_of_section}\r\n        semester_name={ele.semester_name}\r\n        description={ele.description}\r\n        course_id={ele.course_id}\r\n        schedule={ele.schedule}\r\n        price={ele.price}\r\n        registration_deadline={ele.registration_deadline}\r\n        student_registered_name={ele.student_registered_name}\r\n        student_registered_id={ele.student_registered_id}\r\n      />\r\n    );\r\n  });\r\n\r\n\r\n  const teacherRegisterQuantificationElements1: (JSX.Element | null)[] = semester_class_parent.not_payed.map((ele, index) => {\r\n    return (\r\n      <TopCardSemesterClassParent\r\n        id = {ele.id}\r\n        name={ele.name}\r\n        course_name={ele.course_name}\r\n        icon=\"book\"\r\n        class=\"primary\"\r\n        status={ele.status}\r\n        semester_id={ele.semester_id}\r\n        url_image={ele.image_url}\r\n        art_age_name={ele.art_age_name}\r\n        art_level_name={ele.art_level_name}\r\n        art_type_name={ele.art_type_name}\r\n        max_participant={ele.max_participant}\r\n        num_of_section={ele.num_of_section}\r\n        semester_name={ele.semester_name}\r\n        description={ele.description}\r\n        course_id={ele.course_id}\r\n        schedule={ele.schedule}\r\n        price={ele.price}\r\n        registration_deadline={ele.registration_deadline}\r\n        student_registered_name={ele.student_registered_name}\r\n        student_registered_id={ele.student_registered_id}\r\n      />\r\n    );\r\n  });\r\n\r\n\r\n  const teacherRegisterQuantificationElements2: (JSX.Element | null)[] = semester_class_parent.not_payed_now.map((ele, index) => {\r\n    return (\r\n      <TopCardSemesterClassParent\r\n        id = {ele.id}\r\n        name={ele.name}\r\n        course_name={ele.course_name}\r\n        icon=\"book\"\r\n        class=\"primary\"\r\n        status={ele.status}\r\n        semester_id={ele.semester_id}\r\n        url_image={ele.image_url}\r\n        art_age_name={ele.art_age_name}\r\n        art_level_name={ele.art_level_name}\r\n        art_type_name={ele.art_type_name}\r\n        max_participant={ele.max_participant}\r\n        num_of_section={ele.num_of_section}\r\n        semester_name={ele.semester_name}\r\n        description={ele.description}\r\n        course_id={ele.course_id}\r\n        schedule={ele.schedule}\r\n        price={ele.price}\r\n        registration_deadline={ele.registration_deadline}\r\n        student_registered_name={ele.student_registered_name}\r\n        student_registered_id={ele.student_registered_id}\r\n      />\r\n    );\r\n  });\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      {teacherRegisterQuantificationElements}\r\n      {teacherRegisterQuantificationElements1}\r\n      {teacherRegisterQuantificationElements2}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default SemesterClassList;\r\n","import { ISemesterClassParent, SemesterClassParentModificationStatus } from \"../models/semester_class_parent.interface\";\r\n\r\n// register_successfull_semester_class_parents\r\nexport const ADD_NOT_PAYED_NOW: string = \"ADD_NOT_PAYED_NOW\";\r\nexport const EDIT_NOT_PAYED_NOW: string = \"EDIT_NOT_PAYED_NOW\";\r\nexport const REMOVE_NOT_PAYED_NOW: string = \"REMOVE_NOT_PAYED_NOW\";\r\nexport const CHANGE_NOT_PAYED_NOW_AMOUNT: string = \"CHANGE_NOT_PAYED_NOW_AMOUNT\";\r\nexport const CHANGE_NOT_PAYED_NOW_PENDING_EDIT: string = \"CHANGE_NOT_PAYED_NOW_PENDING_EDIT\";\r\nexport const CLEAR_NOT_PAYED_NOW_PENDING_EDIT: string = \"CLEAR_NOT_PAYED_NOW_PENDING_EDIT\";\r\nexport const REMOVE_NOT_PAYED_NOW_ALL: string = \"REMOVE_NOT_PAYED_NOW_ALL\";\r\nexport const INITIAL_NOT_PAYED_NOW: string = \"INITIAL_NOT_PAYED_NOW\";\r\n\r\n// not_register_semester_class_parents\r\nexport const ADD_PAYED: string = \"ADD_PAYED\";\r\nexport const EDIT_PAYED: string = \"EDIT_PAYED\";\r\nexport const REMOVE_PAYED: string = \"REMOVE_PAYED\";\r\nexport const CHANGE_PAYED_AMOUNT: string = \"CHANGE_PAYED_AMOUNT\";\r\nexport const CHANGE_PAYED_PENDING_EDIT: string = \"CHANGE_PAYED_PENDING_EDIT\";\r\nexport const CLEAR_PAYED_PENDING_EDIT: string = \"CLEAR_PAYED_PENDING_EDIT\";\r\nexport const REMOVE_PAYED_ALL: string = \"REMOVE_PAYED_ALL\";\r\nexport const INITIAL_PAYED: string = \"INITIAL_PAYED\";\r\n\r\n\r\n// not_register_semester_class_parents\r\nexport const ADD_NOT_PAYED: string = \"ADD_NOT_PAYED\";\r\nexport const EDIT_NOT_PAYED: string = \"EDIT_NOT_PAYED\";\r\nexport const REMOVE_NOT_PAYED: string = \"REMOVE_NOT_PAYED\";\r\nexport const CHANGE_NOT_PAYED_AMOUNT: string = \"CHANGE_NOT_PAYED_AMOUNT\";\r\nexport const CHANGE_NOT_PAYED_PENDING_EDIT: string = \"CHANGE_NOT_PAYED_PENDING_EDIT\";\r\nexport const CLEAR_NOT_PAYED_PENDING_EDIT: string = \"CLEAR_NOT_PAYED_PENDING_EDIT\";\r\nexport const REMOVE_NOT_PAYED_ALL: string = \"REMOVE_NOT_PAYED_ALL\";\r\nexport const INITIAL_NOT_PAYED: string = \"INITIAL_NOT_PAYED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(semester_class_parent: ISemesterClassParent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        semester_class_parent\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSemesterClassParentNotPayedNow(semester_class_parent: ISemesterClassParent): IInitialSemesterClassParentNotPayedNowActionType {\r\n    return { type: INITIAL_NOT_PAYED_NOW, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function removeSemesterClassParentNotPayedNowAll(): IRemoveSemesterClassParentNotPayedNowAllActionType {\r\n    return { type: REMOVE_NOT_PAYED_NOW_ALL };\r\n}\r\n\r\nexport function addSemesterClassParentNotPayedNow(semester_class_parent: ISemesterClassParent): IAddSemesterClassParentNotPayedNowActionType {\r\n    return { type: ADD_NOT_PAYED_NOW, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function editSemesterClassParentNotPayedNow(semester_class_parent: ISemesterClassParent): IEditSemesterClassParentNotPayedNowActionType {\r\n    return { type: EDIT_NOT_PAYED_NOW, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function removeSemesterClassParentNotPayedNow(id: string): IRemoveSemesterClassParentNotPayedNowActionType {\r\n    return { type: REMOVE_NOT_PAYED_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClassParentNotPayedNow(semester_class_parent: ISemesterClassParent): IChangeSelectedSemesterClassParentNotPayedNowActionType {\r\n    return { type: CHANGE_NOT_PAYED_NOW_PENDING_EDIT, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function clearSelectedSemesterClassParentNotPayedNow(): IClearSelectedSemesterClassParentNotPayedNowActionType {\r\n    return { type: CLEAR_NOT_PAYED_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialSemesterClassParentPayed(semester_class_parent: ISemesterClassParent): IInitialSemesterClassParentPayedActionType {\r\n    return { type: INITIAL_PAYED, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function removeSemesterClassParentPayedAll(): IRemoveSemesterClassParentPayedAllActionType {\r\n    return { type: REMOVE_PAYED_ALL };\r\n}\r\n\r\nexport function addSemesterClassParentPayed(semester_class_parent: ISemesterClassParent): IAddSemesterClassParentPayedActionType {\r\n    return { type: ADD_PAYED, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function editSemesterClassParentPayed(semester_class_parent: ISemesterClassParent): IEditSemesterClassParentPayedActionType {\r\n    return { type: EDIT_PAYED, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function removeSemesterClassParentPayed(id: string): IRemoveSemesterClassParentPayedActionType {\r\n    return { type: REMOVE_PAYED, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClassParentPayed(semester_class_parent: ISemesterClassParent): IChangeSelectedSemesterClassParentPayedActionType {\r\n    return { type: CHANGE_PAYED_PENDING_EDIT, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function clearSelectedSemesterClassParentPayed(): IClearSelectedSemesterClassParentPayedActionType {\r\n    return { type: CLEAR_PAYED_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: SemesterClassParentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n\r\nexport function initialSemesterClassParentNotPayed(semester_class_parent: ISemesterClassParent): IInitialSemesterClassParentNotPayedActionType {\r\n    return { type: INITIAL_NOT_PAYED, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function removeSemesterClassParentNotPayedAll(): IRemoveSemesterClassParentNotPayedAllActionType {\r\n    return { type: REMOVE_NOT_PAYED_ALL };\r\n}\r\n\r\nexport function addSemesterClassParentNotPayed(semester_class_parent: ISemesterClassParent): IAddSemesterClassParentNotPayedActionType {\r\n    return { type: ADD_NOT_PAYED, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function editSemesterClassParentNotPayed(semester_class_parent: ISemesterClassParent): IEditSemesterClassParentNotPayedActionType {\r\n    return { type: EDIT_NOT_PAYED, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function removeSemesterClassParentNotPayed(id: string): IRemoveSemesterClassParentNotPayedActionType {\r\n    return { type: REMOVE_NOT_PAYED, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClassParentNotPayed(semester_class_parent: ISemesterClassParent): IChangeSelectedSemesterClassParentNotPayedActionType {\r\n    return { type: CHANGE_NOT_PAYED_AMOUNT, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function clearSelectedSemesterClassParentNotPayed(): IClearSelectedSemesterClassParentNotPayedActionType {\r\n    return { type: CHANGE_NOT_PAYED_PENDING_EDIT };\r\n}\r\n\r\n// register_successfull_semester_class_parents\r\ninterface IAddSemesterClassParentNotPayedNowActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IEditSemesterClassParentNotPayedNowActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IRemoveSemesterClassParentNotPayedNowActionType { type: string, id: string };\r\ninterface IChangeSelectedSemesterClassParentNotPayedNowActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IClearSelectedSemesterClassParentNotPayedNowActionType { type: string };\r\ninterface IRemoveSemesterClassParentNotPayedNowAllActionType { type: string }\r\ninterface IInitialSemesterClassParentNotPayedNowActionType {type: string, semester_class_parent: ISemesterClassParent}\r\n\r\n// not_register_semester_class_parents\r\ninterface IAddSemesterClassParentPayedActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IEditSemesterClassParentPayedActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IRemoveSemesterClassParentPayedActionType { type: string, id: string };\r\ninterface IChangeSelectedSemesterClassParentPayedActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IClearSelectedSemesterClassParentPayedActionType { type: string };\r\ninterface IRemoveSemesterClassParentPayedAllActionType { type: string }\r\ninterface IInitialSemesterClassParentPayedActionType {type: string, semester_class_parent: ISemesterClassParent}\r\n\r\n\r\n// register_successfull_semester_class_parents\r\ninterface IAddSemesterClassParentNotPayedActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IEditSemesterClassParentNotPayedActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IRemoveSemesterClassParentNotPayedActionType { type: string, id: string };\r\ninterface IChangeSelectedSemesterClassParentNotPayedActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IClearSelectedSemesterClassParentNotPayedActionType { type: string };\r\ninterface IRemoveSemesterClassParentNotPayedAllActionType { type: string }\r\ninterface IInitialSemesterClassParentNotPayedActionType {type: string, semester_class_parent: ISemesterClassParent}\r\n\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  SemesterClassParentModificationStatus};","import { fetchDataSuccess, fetchDataError, removeSemesterClassParentNotPayedAll, removeSemesterClassParentNotPayedNowAll, removeSemesterClassParentPayedAll, addSemesterClassParentNotPayed, addSemesterClassParentNotPayedNow, addSemesterClassParentPayed } from \"../../../store/actions/semester_class_parent.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface SemesterClassParent {\r\n    id: string;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: string;\r\n    semester_class_id: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    semester_name: string;\r\n    semester_id: string;\r\n    status: string;\r\n    image_url: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n    registration_deadline: string;\r\n    student_registered_name: string[];\r\n    student_registered_id: string[];\r\n}\r\nexport function getSemesterClassByParentCourse(dispatch: any, parent_id: any, course_id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester-class/parent-course/${parent_id}/${course_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSemesterClassByParentCourse(dispatch, parent_id, course_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeSemesterClassParentNotPayedAll())\r\n                dispatch(removeSemesterClassParentNotPayedNowAll())\r\n                dispatch(removeSemesterClassParentPayedAll())\r\n                console.log(data.body.semester_classes)\r\n                data.body.semester_classes.map((ele: any, index: any) => {\r\n                    var val: SemesterClassParent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        course_name: ele.course_name,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semster_class_id,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        schedule: ele.schedule,\r\n                        semester_id: ele.semester_id,\r\n                        status: ele.status,\r\n                        registration_deadline: ele.registration_deadline,\r\n                        student_registered_id: ele.student_registered_id,\r\n                        student_registered_name: ele.student_registered_name\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (ele.status === \"Payed\") {\r\n                        dispatch(addSemesterClassParentPayed(val))\r\n                    }\r\n                    else if (ele.status === \"Not Payed\") {\r\n                        dispatch(addSemesterClassParentNotPayed(val))\r\n                    }\r\n                    else {\r\n                        dispatch(addSemesterClassParentNotPayedNow(val))\r\n                    }\r\n                    return 1\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./Discovery.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport SemesterClassList from \"./SemesterClassList\";\r\nimport { getSemesterClassByParentCourse } from \"../../common/service/SemesterClasssParent/GetSemesterClassByParentCourse\";\r\n\r\nconst SemesterClassParentNew: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    //const semester_classs: ISemesterClassState = useSelector((state: IStateType) => state.semester_classes);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('course_id');\r\n    var course_id: string = \"\";\r\n    if (id_y !== null) {\r\n        course_id = id_y;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getSemesterClassByParentCourse(dispatch, id, course_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getSemesterClassByParentCourse(dispatch, id, course_id))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token, course_id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp mở\", \"\"));\r\n    }, [dispatch, path.area])\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                {/* <div className=\"row\">\r\n                <TopCard title=\"ĐÃ ĐĂNG KÍ\" text={`${numberTeacherRegisterSuccessfullCount}`} icon=\"book\" class=\"primary\" />\r\n            </div> */}\r\n\r\n                <div className=\"row\" id=\"search-box\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"input-group\" id=\"search-content\">\r\n                            <div className=\"form-outline\">\r\n                                <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                            </div>\r\n                            <button type=\"button\" className=\"btn btn-primary\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <SemesterClassList />\r\n                </div>\r\n\r\n\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default SemesterClassParentNew;\r\n","import React, { PropsWithChildren, ReactElement } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ICardSemesterClassTeacherProperties } from \"../types/TopCardSemesterClassTeacher.types\";\r\n\r\nfunction TopCardSemesterClassTeacher(props: PropsWithChildren<ICardSemesterClassTeacherProperties>): ReactElement {\r\n    const history = useHistory();\r\n    const routeChange = (course: PropsWithChildren<ICardSemesterClassTeacherProperties>) =>{ \r\n        localStorage.removeItem('description_course');\r\n        localStorage.setItem('description_course', course.description);\r\n        localStorage.removeItem('course_id');\r\n        localStorage.setItem('course_id', course.course_id.toString())\r\n        localStorage.removeItem('course_name');\r\n        localStorage.setItem('course_name', course.course_name)\r\n        localStorage.removeItem('art_age_name');\r\n        localStorage.setItem('art_age_name', course.art_age_name.toString())\r\n        localStorage.removeItem('art_type_name');\r\n        localStorage.setItem('art_type_name', course.art_type_name.toString())\r\n        localStorage.removeItem('num_of_section');\r\n        localStorage.setItem('num_of_section', course.num_of_section.toString())\r\n        localStorage.removeItem('schedule');\r\n        localStorage.setItem('schedule', course.schedule.toString())\r\n        localStorage.removeItem('art_level_name');\r\n        localStorage.setItem('art_level_name', course.art_level_name.toString())\r\n        localStorage.removeItem('semester_class_name');\r\n        localStorage.setItem('semester_class_name', course.name.toString())\r\n        localStorage.removeItem('price');\r\n        localStorage.setItem('price', course.price.toString())\r\n        localStorage.removeItem('semester_class_id');\r\n        localStorage.setItem('semester_class_id', course.id.toString())\r\n        localStorage.removeItem('url_image');\r\n        localStorage.setItem('url_image', course.url_image.toString())\r\n        let path = '/semester-class/detail'; \r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-xl-4 col-md-4 mb-2\" onClick={() => {routeChange(props)}}>\r\n            <div className={`card shadow h-100 py-0`} id=\"topcard-user\" >\r\n                <img className=\"card-img-top\" src={props.url_image} alt=\"\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{props.name}</h5>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Thể loại:</span> <span className=\"header-card-course-value-teacher\">{props.art_type_name}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Trình độ:</span> <span className=\"header-card-course-value-teacher\">{props.art_level_name}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Độ tuổi:</span> <span className=\"header-card-course-value-teacher\">{props.art_age_name}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Số buổi:</span> <span className=\"header-card-course-value-teacher\">{props.num_of_section}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-12\" ><span className=\"header-card-course-teacher\">Lịch học:</span> <span className=\"header-card-course-value-teacher\">{props.schedule}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-12 col-md-12 col-xs-12\" ><span className=\"header-card-course-teacher\">Trạng thái:</span> <span className=\"header-card-course-value-teacher\">{props.status}</span></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default TopCardSemesterClassTeacher;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TopCardSemesterClassTeacher from \"../../common/components/TopCardSemesterClassTeacher\";\r\nimport { ISemesterClassTeacherState, IStateType } from \"../../store/models/root.interface\";\r\n\r\n\r\nfunction SemesterClassList(): JSX.Element {\r\n  const semester_class_teacher: ISemesterClassTeacherState = useSelector((state: IStateType) => state.semester_class_teachers);\r\n\r\n\r\n  const teacherRegisterQuantificationElements: (JSX.Element | null)[] = semester_class_teacher.semester_class_teachers.filter((ele, idx) => ele.status === \"Registed\").map((ele, index) => {\r\n    return (\r\n      <TopCardSemesterClassTeacher\r\n        id = {ele.id}\r\n        name={ele.name}\r\n        course_name={ele.course_name}\r\n        icon=\"book\"\r\n        class=\"primary\"\r\n        status={ele.status}\r\n        semester_id={ele.semester_id}\r\n        url_image={ele.image_url}\r\n        art_age_name={ele.art_age_name}\r\n        art_level_name={ele.art_level_name}\r\n        art_type_name={ele.art_type_name}\r\n        max_participant={ele.max_participant}\r\n        num_of_section={ele.num_of_section}\r\n        semester_name={ele.semester_name}\r\n        description={ele.description}\r\n        course_id={ele.course_id}\r\n        schedule={ele.schedule}\r\n        price={ele.price}\r\n        registration_deadline={ele.registration_deadline}\r\n      />\r\n    );\r\n  });\r\n\r\n\r\n  const teacherRegisterQuantificationElements1: (JSX.Element | null)[] = semester_class_teacher.semester_class_teachers.filter((ele, idx) => ele.status === \"Not register\").map((ele, index) => {\r\n    return (\r\n      <TopCardSemesterClassTeacher\r\n        id = {ele.id}\r\n        name={ele.name}\r\n        course_name={ele.course_name}\r\n        icon=\"book\"\r\n        class=\"primary\"\r\n        status={ele.status}\r\n        semester_id={ele.semester_id}\r\n        url_image={ele.image_url}\r\n        art_age_name={ele.art_age_name}\r\n        art_level_name={ele.art_level_name}\r\n        art_type_name={ele.art_type_name}\r\n        max_participant={ele.max_participant}\r\n        num_of_section={ele.num_of_section}\r\n        semester_name={ele.semester_name}\r\n        description={ele.description}\r\n        course_id={ele.course_id}\r\n        schedule={ele.schedule}\r\n        price={ele.price}\r\n        registration_deadline={ele.registration_deadline}\r\n      />\r\n    );\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      {teacherRegisterQuantificationElements}\r\n      {teacherRegisterQuantificationElements1}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default SemesterClassList;\r\n","import { ISemesterClassTeacher, SemesterClassTeacherModificationStatus } from \"../models/semester_class_teacher.interface\";\r\nexport const ADD_SEMESTER_CLASS_TEACHER: string = \"ADD_SEMESTER_CLASS_TEACHER\";\r\nexport const EDIT_SEMESTER_CLASS_TEACHER: string = \"EDIT_SEMESTER_CLASS_TEACHER\";\r\nexport const REMOVE_SEMESTER_CLASS_TEACHER: string = \"REMOVE_SEMESTER_CLASS_TEACHER\";\r\nexport const CHANGE_SEMESTER_CLASS_TEACHER_AMOUNT: string = \"CHANGE_SEMESTER_CLASS_TEACHER_AMOUNT\";\r\nexport const CHANGE_SEMESTER_CLASS_TEACHER_PENDING_EDIT: string = \"CHANGE_SEMESTER_CLASS_TEACHER_PENDING_EDIT\";\r\nexport const CLEAR_SEMESTER_CLASS_TEACHER_PENDING_EDIT: string = \"CLEAR_SEMESTER_CLASS_TEACHER_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SEMESTER_CLASS_TEACHER_ALL: string = \"REMOVE_SEMESTER_CLASS_TEACHER_ALL\";\r\nexport const INITIAL_SEMESTER_CLASS_TEACHER: string = \"INITIAL_SEMESTER_CLASS_TEACHER\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(semester_class_teacher: ISemesterClassTeacher) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        semester_class_teacher\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSemesterClassTeacher(semester_class_teacher: ISemesterClassTeacher): IInitialSemesterClassTeacherActionType {\r\n    return { type: INITIAL_SEMESTER_CLASS_TEACHER, semester_class_teacher: semester_class_teacher };\r\n}\r\n\r\nexport function removeSemesterClassTeacherAll(): IRemoveSemesterClassTeacherAllActionType {\r\n    return { type: REMOVE_SEMESTER_CLASS_TEACHER_ALL };\r\n}\r\n\r\nexport function addSemesterClassTeacher(semester_class_teacher: ISemesterClassTeacher): IAddSemesterClassTeacherActionType {\r\n    return { type: ADD_SEMESTER_CLASS_TEACHER, semester_class_teacher: semester_class_teacher };\r\n}\r\n\r\nexport function editSemesterClassTeacher(semester_class_teacher: ISemesterClassTeacher): IEditSemesterClassTeacherActionType {\r\n    return { type: EDIT_SEMESTER_CLASS_TEACHER, semester_class_teacher: semester_class_teacher };\r\n}\r\n\r\nexport function removeSemesterClassTeacher(id: string): IRemoveSemesterClassTeacherActionType {\r\n    return { type: REMOVE_SEMESTER_CLASS_TEACHER, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClassTeacher(semester_class_teacher: ISemesterClassTeacher): IChangeSelectedSemesterClassTeacherActionType {\r\n    return { type: CHANGE_SEMESTER_CLASS_TEACHER_PENDING_EDIT, semester_class_teacher: semester_class_teacher };\r\n}\r\n\r\nexport function clearSelectedSemesterClassTeacher(): IClearSelectedSemesterClassTeacherActionType {\r\n    return { type: CLEAR_SEMESTER_CLASS_TEACHER_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateSemesterClassTeacher(value: SemesterClassTeacherModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddSemesterClassTeacherActionType { type: string, semester_class_teacher: ISemesterClassTeacher };\r\ninterface IEditSemesterClassTeacherActionType { type: string, semester_class_teacher: ISemesterClassTeacher };\r\ninterface IRemoveSemesterClassTeacherActionType { type: string, id: string };\r\ninterface IChangeSelectedSemesterClassTeacherActionType { type: string, semester_class_teacher: ISemesterClassTeacher };\r\ninterface IClearSelectedSemesterClassTeacherActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  SemesterClassTeacherModificationStatus};\r\ninterface IRemoveSemesterClassTeacherAllActionType { type: string }\r\ninterface IInitialSemesterClassTeacherActionType {type: string, semester_class_teacher: ISemesterClassTeacher}","import { fetchDataSuccess, fetchDataError, removeSemesterClassTeacherAll, addSemesterClassTeacher } from \"../../../store/actions/semester_class_teacher.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface SemesterClassTeacher {\r\n    id: string;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: string;\r\n    semester_class_id: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    semester_name: string;\r\n    semester_id: string;\r\n    status: string;\r\n    image_url: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n    registration_deadline: string;\r\n}\r\nexport function getSemesterClassNewByTeacherCourse(dispatch: any, teacher_id: any, course_id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester-class/teacher-course/${teacher_id}/${course_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSemesterClassNewByTeacherCourse(dispatch, teacher_id, course_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeSemesterClassTeacherAll())\r\n                console.log(data.body.semester_classes)\r\n                data.body.semester_classes.map((ele: any, index: any) => {\r\n                    var val: SemesterClassTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        course_name: ele.course_name,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semster_class_id,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        schedule: ele.schedule,\r\n                        semester_id: ele.semester_id,\r\n                        status: ele.status,\r\n                        registration_deadline: ele.registration_deadline\r\n                    }\r\n                \r\n                    dispatch(addSemesterClassTeacher(val))\r\n                    return 1\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport SemesterClassList from \"./SemesterClassList\";\r\nimport { getSemesterClassNewByTeacherCourse } from \"../../common/service/SemesterClassTeacherNew/GetSemesterClassTeacherNew\";\r\n\r\nconst SemesterClassTeacherNew: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    //const semester_classs: ISemesterClassState = useSelector((state: IStateType) => state.semester_classes);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: string = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('course_id');\r\n    var course_id: string = \"\";\r\n    if (id_y !== null) {\r\n        course_id = id_y;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getSemesterClassNewByTeacherCourse(dispatch, id, course_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getSemesterClassNewByTeacherCourse(dispatch, id, course_id))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token, course_id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp mở\", \"\"));\r\n    }, [dispatch, path.area])\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                {/* <div className=\"row\">\r\n                <TopCard title=\"ĐÃ ĐĂNG KÍ\" text={`${numberTeacherRegisterSuccessfullCount}`} icon=\"book\" class=\"primary\" />\r\n            </div> */}\r\n\r\n                <div className=\"row\" id=\"search-box\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"input-group\" id=\"search-content\">\r\n                            <div className=\"form-outline\">\r\n                                <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                            </div>\r\n                            <button type=\"button\" className=\"btn btn-primary\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <SemesterClassList />\r\n                </div>\r\n\r\n\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default SemesterClassTeacherNew;\r\n","import React, { Fragment } from \"react\";\r\nimport { Switch, Route } from \"react-router\";\r\nimport \"./Routers.css\"\r\nimport LeftMenu from \"../components/LeftMenu/LeftMenu\";\r\nimport TopMenu from \"../components/TopMenu/TopMenu\";\r\nimport Home from \"../components/Home/Home\";\r\nimport Teacher from \"../components/Teachers/Teacher\";\r\nimport DetailTeacher from \"../components/Teachers/DetailTeacher\";\r\nimport Student from \"../components/Student/Student\";\r\nimport DetailStudent from \"../components/Student/DetailStudent\";\r\nimport Parent from \"../components/Parent/Parent\";\r\nimport DetailParent from \"../components/Parent/DetailParent\";\r\nimport Semester from \"../components/Semester/Semester\";\r\nimport Lesson from \"../components/Lesson/Lesson\";\r\nimport Art from \"../components/Art/Art\";\r\nimport Course from \"../components/Course/Course\";\r\nimport Class from \"../components/Class/Class\";\r\nimport DetailClass from \"../components/Class/DetailClass\";\r\nimport DetailLesson from \"../components/Class/DetailLesson\";\r\nimport Turnover from \"../components/Turnover/Turnover\";\r\nimport TeacherRequest from \"../components/Request/TeacherRequest\";\r\nimport RequestConfirmLevel from \"../components/Request/RequestConfirmLevel\";\r\nimport LessonPlan from \"../components/Course/LessonPlan\";\r\nimport Contest from \"../components/Contest/Contest\";\r\nimport DegreePhoto from \"../components/Request/DegreePhoto\";\r\nimport CourseNomalForm from \"../components/Course/CourseNomalForm\";\r\nimport ContestForm from \"../components/Contest/ContestForm\";\r\nimport CourseNomalFormEdit from \"../components/Course/CourseNomalFormEdit\";\r\nimport Account from \"../components/Account/Account\";\r\nimport ChangePassword from \"../components/Account/ChangePassword\";\r\nimport ResultContest from \"../components/Contest/ResultContest\";\r\nimport SectionTemplate from \"../components/SectionTemplate/SectionTemplate\";\r\nimport SectionTemplateForm from \"../components/SectionTemplate/SectionTemplateForm\";\r\nimport TeacherHome from \"../components/Home/TeacherHome\";\r\nimport ScheduleClass from \"../components/Class/ScheduleClass\";\r\nimport CourseTeacher from \"../components/Course/CourseTeacher\";\r\nimport ScheduleTeacher from \"../components/Schedule/ScheduleTeacher\";\r\nimport CourseTeacherDetail from \"../components/Course/CourseTeacherDetail\";\r\nimport TeacherLevel from \"../components/TeacherLevel/TeacherLevel\";\r\nimport TeacherLevelDetail from \"../components/TeacherLevel/TeacherLevelDetail\";\r\nimport ClassTeacher from \"../components/Class/ClassTeacher\";\r\nimport ClassTeacherDetail from \"../components/Class/ClassTeacherDetail\";\r\nimport ContestTeacher from \"../components/Contest/ContestTeacher\";\r\nimport ManageStudent from \"../components/ManageStudent/ManageStudent\";\r\nimport ExerciseStudentList from \"../components/ManageStudent/ExerciseStudentList\";\r\nimport DetailExerciseStudent from \"../components/ManageStudent/DetailExerciseStudent\";\r\nimport DetailClassTeacher from \"../components/Class/DetailClassTeacher\";\r\nimport GradeExamTeacher from \"../components/Exam/GradeExamTeacher\";\r\nimport ResultGradeExamTeacher from \"../components/Exam/ResultGradeExamTeacher\";\r\nimport AnalytisResultGradeExamTeacher from \"../components/Exam/AnalytisScoreExamTeacher\";\r\nimport SectionTeacher from \"../components/SectionTeacher/SectionTeacher\";\r\nimport EditSectionTeacher from \"../components/SectionTeacher/EditSectionTeacher\";\r\nimport ViewSectionTeacher from \"../components/SectionTeacher/ViewSectionTeacher\";\r\nimport RequestTeacher from \"../components/RequestTeacher/RequestTeacher\";\r\nimport ExamTeacher from \"../components/Exam/ExamTeacher\";\r\nimport StudentLeaveDetail from \"../components/RequestTeacher/StudentLeaveDetail\";\r\nimport DetailTeacherRequest from \"../components/Request/DetailTeacherRequest\";\r\nimport TutorialEditRequest from \"../components/Request/TutorialEditRequest\";\r\nimport ContestDetailTeacher from \"../components/Contest/ContestDetailTeacher\";\r\nimport GradeContestTeacher from \"../components/Contest/GradeContestTeacher\";\r\nimport ResultGradeContestTeacher from \"../components/Contest/ResultGradeContestTeacher\";\r\nimport AnalytisResultGradeContestTeacher from \"../components/Contest/AnalytisResultGradeContestTeacher\";\r\nimport DetailContestTeacher from \"../components/Contest/DetailContestTeacher\";\r\nimport NotificationDetail from \"../components/Notification/NotificationDetail\";\r\nimport Notification from \"../components/Notification/Notification\";\r\nimport ParentHome from \"../components/Home/ParentHome\";\r\nimport GuessColor from \"../components/GuessColor\";\r\nimport CourseParent from \"../components/Course/CourseParent\";\r\nimport ContestParent from \"../components/Contest/ContestParent\";\r\nimport ScheduleParent from \"../components/Schedule/ScheduleParent\";\r\nimport CourseStudent from \"../components/Course/CourseStudent\";\r\nimport ScheduleStudent from \"../components/Schedule/ScheduleStudent\";\r\nimport ContestStudent from \"../components/Contest/ContestStudent\";\r\nimport StudentHome from \"../components/Home/StudentHome\";\r\nimport ManageChild from \"../components/ManageChild/ManageChild\";\r\nimport ManageClassesDone from \"../components/ManageChild/ManageClassesDone\";\r\nimport ClassParent from \"../components/ClassParent/ClassParent\";\r\nimport ManageClassesDoing from \"../components/ManageChild/ManageClassesDoing\";\r\nimport Discovery from \"../components/Discovery/Discovery\";\r\nimport SemesterClassDetail from \"../components/Discovery/SemesterClassDetail\";\r\nimport ConestDetail from \"../components/Discovery/ContestDetail\";\r\nimport CartForm from \"../components/Discovery/CartForm\";\r\nimport DetailContestStudent from \"../components/ManageStudent/DetailContestStudent\";\r\nimport Attendance from \"../components/SectionTeacher/Attendance\";\r\nimport ClassStudent from \"../components/ClassStudent/ClassStudent\";\r\nimport DiscoveryStudent from \"../components/DiscoveryStudent/Discovery\";\r\nimport ConestDetailStudent from \"../components/Discovery/ContestDetail\";\r\nimport SemesterClassDetailStudent from \"../components/DiscoveryStudent/SemesterClassDetail\";\r\nimport DetailClassStudent from \"../components/ClassStudent/DetailClassStudent\";\r\nimport SectionStudent from \"../components/ClassStudent/SectionStudent\";\r\nimport ViewSectionStudent from \"../components/ClassStudent/ViewSectionStudent\";\r\nimport DetailExerciseStudent1 from \"../components/ManageStudent/DetailExerciseStudent1\";\r\nimport FormSubmit from \"../components/ClassStudent/FormSubmit\";\r\nimport FormSubmitContestStudent from \"../components/Contest/FormSubmitContestStudent\";\r\nimport ScheduleClassStudent from \"../components/ClassStudent/ScheduleClassStudent\";\r\nimport ViewExerciseSubmission from \"../components/Exercise/ViewExerciseSubmission\";\r\nimport SemesterClassStudentNew from \"../components/DiscoveryStudent/SemesterClasssStudentNew\";\r\nimport ReivewClassDone from \"../components/ClassStudent/ReviewClassDone\";\r\nimport ExerciseStudentList1 from \"../components/ClassStudent/ExerciseStudentList1\";\r\nimport ReviewStart from \"../components/ClassStudent/ReviewStart\";\r\nimport SemesterClassParentNew from \"../components/Discovery/SemesterClassParentNew\";\r\nimport SemesterClassTeacherNew from \"../components/Course/SemesterClassTeacherNew\";\r\n\r\nconst Routers: React.FC = () => {\r\n    var role_privilege = localStorage.getItem('role_privilege')\r\n    var rolePrivilege:string[] =[]\r\n    var roleUser :string =\"\"\r\n    if (role_privilege !== null) {\r\n        rolePrivilege = role_privilege.split(',')\r\n        roleUser = rolePrivilege[0]\r\n    }\r\n    if (roleUser === \"TEACHER_USER\"){\r\n        return (\r\n            <Fragment>\r\n                <LeftMenu />\r\n                <div id=\"content-wrapper\" className=\"d-flex flex-column content-wrapper-teacher\">\r\n                    <div id=\"content\" className=\"teacher-content\">\r\n                        <TopMenu />\r\n                        <div className=\"container-fluid\">\r\n                            <Switch>\r\n                                <Route path={`/change-password`}><ChangePassword /></Route>\r\n                                <Route path={`/account`}><Account /></Route>\r\n                                <Route path={`/attendance`}><Attendance /></Route>\r\n                                <Route path={`/student-leave/detail`}><StudentLeaveDetail /></Route>\r\n                                <Route path={`/teacher-level/detail`}><TeacherLevelDetail /></Route>                              \r\n                                <Route path={`/teacher-level`}><TeacherLevel /></Route>\r\n                                <Route path={`/courses/semester-classes`}><SemesterClassTeacherNew /></Route>\r\n                                <Route path={`/semester-class/detail`}><CourseTeacherDetail /></Route>\r\n                                <Route path={`/courses`}><CourseTeacher /></Route>\r\n                                <Route path={`/contests/detail`}><ContestDetailTeacher /></Route>\r\n                                <Route path={`/contests/detail-contest`}><DetailContestTeacher /></Route>\r\n                                <Route path={`/contest/result-grade`}><ResultGradeContestTeacher /></Route>\r\n                                <Route path={`/contest/result-analytis`}><AnalytisResultGradeContestTeacher /></Route>\r\n                                <Route path={`/contest/grade`}><GradeContestTeacher /></Route>\r\n                                <Route path={`/contests`}><ContestTeacher /></Route>\r\n                                <Route path={`/classes/detail-student`}><DetailClassTeacher /></Route>\r\n                                <Route path={`/exercise/grade`}><GradeExamTeacher /></Route>\r\n                                <Route path={`/exercise/result-analytis`}><AnalytisResultGradeExamTeacher /></Route>\r\n                                <Route path={`/classes/section`}><SectionTeacher /></Route>\r\n                                <Route path={`/section/edit`}><EditSectionTeacher /></Route>\r\n                                <Route path={`/section/view`}><ViewSectionTeacher /></Route>\r\n                                <Route path={`/request`}><RequestTeacher /></Route>\r\n                                <Route path={`/notification/detail`}><NotificationDetail /></Route>\r\n                                <Route path={`/notification`}><Notification /></Route>\r\n                                <Route path={`/exercise/result-grade`}><ResultGradeExamTeacher /></Route>\r\n                                <Route path={`/class/exercise-student`}><ExerciseStudentList /></Route>\r\n                                <Route path={`/classes/detail`}><ClassTeacherDetail /></Route>\r\n                                <Route path={`/classes`}><ClassTeacher /></Route>\r\n                                <Route path={`/schedule-teacher`}><ScheduleTeacher /></Route>\r\n                                <Route path={`/manage-student`}><ManageStudent /></Route>\r\n                                <Route path={`/exercise/detail`}><DetailExerciseStudent /></Route>\r\n                                <Route path={`/exercise`}><ExamTeacher /></Route>\r\n                                <Route path=\"/\"><TeacherHome /></Route>\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n    else if (roleUser === \"PARENT_USER\") {\r\n        return (\r\n            <Fragment>\r\n                <LeftMenu />\r\n                <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n                    <div id=\"content\">\r\n                        <TopMenu />\r\n                        <div className=\"container-fluid content-page\">\r\n                            <Switch>\r\n                                <Route path={`/teacher-request/detail`}><DetailTeacherRequest /></Route>\r\n                                <Route path={`/change-password`}><ChangePassword /></Route>\r\n                                <Route path={`/account`}><Account /></Route>  \r\n                                <Route path={`/courses/semester-classes`}><SemesterClassParentNew /></Route>\r\n                                <Route path={`/contests/detail`}><ContestDetailTeacher /></Route>\r\n                                <Route path={`/contests/detail-contest`}><DetailContestTeacher /></Route>\r\n                                <Route path={`/contest/result-grade`}><ResultGradeContestTeacher /></Route>\r\n                                <Route path={`/contest/result-analytis`}><AnalytisResultGradeContestTeacher /></Route>\r\n                                <Route path={`/cart`}><CartForm /></Route>\r\n                                <Route path={`/discover`}><Discovery /></Route>\r\n                                <Route path={`/exercise-submission/view`}><ViewExerciseSubmission /></Route>\r\n                                <Route path={`/class/exercise-student`}><ExerciseStudentList /></Route>\r\n                                <Route path={`/exercise/detail`}><DetailExerciseStudent /></Route>\r\n                                <Route path={`/contest/detail`}><DetailContestStudent /></Route>\r\n                                <Route path={`/student/classes-doing`}><ManageClassesDoing /></Route>\r\n                                <Route path={`/students/detail`}><ManageChild /></Route>    \r\n                                <Route path={`/student/class`}><ManageClassesDone /></Route>                        \r\n                                <Route path={`/notification/detail`}><NotificationDetail /></Route>\r\n                                <Route path={`/notification`}><Notification /></Route>\r\n                                <Route path={`/semester-class/detail`}><SemesterClassDetail /></Route>\r\n                                <Route path={`/courses`}><CourseParent /></Route>\r\n                                <Route path={`/classes`}><ClassParent /></Route>\r\n                                <Route path={`/contests/register`}><ConestDetail /></Route>\r\n                                <Route path={`/contests`}><ContestParent /></Route>\r\n                                <Route path={`/schedules`}><ScheduleParent /></Route>\r\n                                <Route path=\"/\"><ParentHome /></Route>\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n    else if (roleUser === \"STUDENT_USER\"){\r\n        return (\r\n            <Fragment>\r\n                <LeftMenu />\r\n                <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n                    <div id=\"content\">\r\n                        <TopMenu />\r\n                        <div className=\"container-fluid content-page\">\r\n                            <Switch>\r\n                                <Route path={`/change-password`}><ChangePassword /></Route>\r\n                                <Route path={`/account`}><Account /></Route>                            \r\n                                <Route path={`/notification/detail`}><NotificationDetail /></Route>\r\n                                <Route path={`/notification`}><Notification /></Route>\r\n                                <Route path={`/exercise-submission/view`}><ViewExerciseSubmission /></Route>\r\n                                <Route path={`/contests/submit`}><FormSubmitContestStudent /></Route>\r\n                                <Route path={`/contests/detail-contest`}><DetailContestTeacher /></Route>\r\n                                <Route path={`/contest/result-grade`}><ResultGradeContestTeacher /></Route>\r\n                                <Route path={`/contest/result-analytis`}><AnalytisResultGradeContestTeacher /></Route>\r\n                                <Route path={`/semester-class/detail`}><SemesterClassDetailStudent /></Route>\r\n                                <Route path={`/classes/section`}><SectionStudent /></Route>\r\n                                <Route path={`/section/view`}><ViewSectionStudent /></Route>\r\n                                <Route path={`/courses/semester-classes`}><SemesterClassStudentNew /></Route>\r\n                                <Route path={`/courses`}><CourseStudent /></Route>\r\n                                <Route path={`/exercise/detail`}><DetailExerciseStudent1 /></Route>\r\n                                <Route path={`/exercise/score`}><DetailExerciseStudent /></Route>\r\n                                <Route path={`/classes/form-review`}><ReviewStart /></Route>\r\n                                <Route path={`/exercise/submit`}><FormSubmit /></Route>\r\n                                <Route path={`/discover`}><DiscoveryStudent /></Route>\r\n                                <Route path={`/classes/exercise-student`}><ExerciseStudentList1 /></Route>\r\n                                <Route path={`/classes/review`}><ReivewClassDone /></Route>\r\n                                <Route path={`/classes/schedule`}><ScheduleClassStudent /></Route>\r\n                                <Route path={`/classes/detail-student`}><DetailClassStudent /></Route>\r\n                                <Route path={`/contests/register`}><ConestDetailStudent /></Route>\r\n                                <Route path={`/contests`}><ContestStudent /></Route>\r\n                                <Route path={`/classes`}><ClassStudent /></Route>\r\n                                <Route path={`/schedules`}><ScheduleStudent /></Route>\r\n                                <Route path={`/game/guess-color`}><GuessColor /></Route>\r\n                                <Route path=\"/\"><StudentHome /></Route>\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Fragment>\r\n                <LeftMenu />\r\n                <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n                    <div id=\"content\">\r\n                        <TopMenu />\r\n                        <div className=\"container-fluid\">\r\n                            <Switch>\r\n                                <Route path={`/teacher-request/detail`}><DetailTeacherRequest /></Route>\r\n                                <Route path={`/change-password`}><ChangePassword /></Route>\r\n                                <Route path={`/account`}><Account /></Route>\r\n                                <Route path={`/parents/detail`}><DetailParent /></Route>\r\n                                <Route path={`/parents`}><Parent /></Route>\r\n                                <Route path={`/students/detail`}><DetailStudent /></Route>\r\n                                <Route path={`/students`}><Student /></Route>\r\n                                <Route path={`/semesters`}><Semester /></Route>\r\n                                <Route path={`/lessons`}><Lesson /></Route>\r\n                                <Route path={`/arts`}><Art /></Route>\r\n                                <Route path={`/class/lesson`}><DetailLesson /></Route>\r\n                                <Route path={`/class/detail`}><DetailClass /></Route>\r\n                                <Route path={`/class/schedule`}><ScheduleClass /></Route>\r\n                                <Route path={`/class`}><Class /></Route>\r\n                                <Route path={`/section-template/edit`}><SectionTemplateForm /></Route>\r\n                                <Route path={`/courses/section-template`}><SectionTemplate /></Route>\r\n                                <Route path={`/courses/lesson-plan`}><LessonPlan /></Route>\r\n                                <Route path={`/courses/create-course`}><CourseNomalForm /></Route>\r\n                                <Route path={`/courses/edit-course`}><CourseNomalFormEdit /></Route>\r\n                                <Route path={`/courses/:id_course`}><CourseNomalForm /></Route>\r\n                                <Route path={`/courses`}><Course /></Route>\r\n                                <Route path={`/contests/result`}><ResultContest /></Route>\r\n                                <Route path={`/contests/edit-contest`}><ContestForm /></Route>\r\n                                <Route path={`/contests/:id_contest`}><ContestForm /></Route>\r\n                                <Route path={`/contests`}><Contest /></Route>\r\n                                <Route path={`/turnovers`}><Turnover /></Route>\r\n                                <Route path={`/tutorial-edit`}><TutorialEditRequest /></Route>\r\n                                <Route path={`/request-teacher-off`}><TeacherRequest /></Route>\r\n                                <Route path={`/teachers/request-level/degree-photo`}><DegreePhoto /></Route>\r\n                                <Route path={`/teachers/request-level`}><RequestConfirmLevel /></Route>\r\n                                <Route path=\"/teachers/detail\"><DetailTeacher /></Route>\r\n                                <Route path={`/teachers`}><Teacher /></Route>\r\n                                <Route path={`/notification/detail`}><NotificationDetail /></Route>\r\n                                <Route path={`/notification`}><Notification /></Route>\r\n                                <Route path=\"/\"><Home /></Route>\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Routers;","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../../assets/css/Header.css'\r\n\r\nconst Header: React.FC = () => {\r\n    let history = useHistory()\r\n    function handlerStart() {\r\n        history.push('/auth')\r\n    }\r\n    return (\r\n        <div className=\"header\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                <a className=\"navbar-brand text-logo\" href=\"/\" style={{\r\n                    color: \"#EBD510\",\r\n                    fontSize: '28px'\r\n                }}>KidsDrawing</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\" style={{\r\n                            marginRight: \"10px\"\r\n                        }}>\r\n                            <button className=\"btn btn-sigup my-2 my-sm-0\" id='btn-sigup-langdingpage' style={{\r\n                                backgroundColor: \"#5A47AB\",\r\n                                border: '1px solid #F2F2F2',\r\n                                color: \"#ffffff\",\r\n                                fontWeight: \"bold\",\r\n                            }}>Đăng kí</button>\r\n                        </li>\r\n                        <li className=\"nav-item\" style={{\r\n                            marginRight: \"10px\"\r\n                        }}>\r\n                            <button className=\"btn btn-sigin my-2 my-sm-0\" id='btn-sigin-landingpage' style={{\r\n                                backgroundColor: \"#F2F2F2\",\r\n                                color: \"#5A47AB\",\r\n                                fontWeight: \"bold\"\r\n                            }} onClick={() => handlerStart()}>Đăng nhập</button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Footer: React.FC = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <footer className=\"page-footer font-small blue pt-4\">\r\n\r\n                <div className=\"container-fluid text-center text-md-left\">\r\n\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-md-3 mt-md-0 mt-3\">\r\n\r\n                            <h5 style={{\r\n                                color: \"#EBD510\"\r\n                            }}>KidsDrawing</h5>\r\n                            <p style={{\r\n                                color: \"#ffffff\"\r\n                            }}>Hệ thống dạy vẽ tranh trực tuyến cho trẻ.\r\n                                Với sứ mệnh mang niềm đam mê vẽ tranh\r\n                                đến với các bé.</p>\r\n\r\n                        </div>\r\n\r\n                        <hr className=\"clearfix w-100 d-md-none pb-3\" />\r\n\r\n                        <div className=\"col-md-3 mb-md-0 mb-3\">\r\n\r\n                            <h6 style={{\r\n                                color: \"#F2F2F2\"\r\n                            }}>Số điện thoại</h6>\r\n\r\n                            <ul className=\"list-unstyled\">\r\n                                <li>\r\n                                    <p style={{\r\n                                        color: \"#ffffff\"\r\n                                    }}>+084 989439678</p>\r\n                                </li>\r\n                            </ul>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-md-3 mb-md-0 mb-3\">\r\n\r\n                            <h6 style={{\r\n                                color: \"#F2F2F2\"\r\n                            }}>Email</h6>\r\n\r\n                            <ul className=\"list-unstyled\">\r\n                                <li>\r\n                                    <p style={{\r\n                                        color: \"#ffffff\"\r\n                                    }}>kidsdrawing@gmail.com</p>\r\n                                </li>\r\n                            </ul>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-md-3 mb-md-0 mb-3\">\r\n\r\n                            <h6 style={{\r\n                                color: \"#F2F2F2\"\r\n                            }}>Địa chỉ</h6>\r\n\r\n                            <ul className=\"list-unstyled\">\r\n                                <li>\r\n                                    <p style={{\r\n                                        color: \"#ffffff\"\r\n                                    }}>Quảng Chính, Quảng Xương, Thanh Hóa</p>\r\n                                </li>\r\n                            </ul>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"footer-copyright text-center py-3\" style={{\r\n                    color: \"#ffffff\"\r\n                }}>© 2020 Copyright:\r\n                    <a href=\"/\"> MDBootstrap.com</a>\r\n                </div>\r\n\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n//import { OnChangeModel } from \"../../common/types/Form.types\";\r\n//import { useDispatch } from \"react-redux\";\r\n//import { login } from \"../../store/actions/account.actions\";\r\n//import TextInput from \"../../common/components/TextInput\";\r\nimport \"../../assets/css/LandingPage.css\"\r\nimport Header from \"../../common/components/Header\";\r\nimport Footer from \"../../common/components/Footer\";\r\n\r\nconst LandingPage: React.FC = () => {\r\n\r\n    return (\r\n\r\n        <div className=\"container-fluid full-height\" id=\"login-page\">\r\n            <Header />\r\n            <div className='container-fluid' id=\"content-landingpage\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6 col-sm-6\">\r\n                        <div className='text' style={{\r\n                            marginLeft:' 85px',\r\n                            marginTop: '150px',\r\n                        }}>\r\n                            <h1 className='header-landingpage' style={{\r\n                                color: '#EBD510',\r\n                                fontSize: '40px',\r\n                            }}>KidsDrawing</h1>\r\n                            <h2 className='description' style={{\r\n                                color: '#ffffff',\r\n                                fontSize: '40px'\r\n                            }}>Ươm mầm ước mơ của bé</h2>\r\n                            <button className=\"btn btn-primary btn-sigup-landingpage my-2 my-sm-0\" >Đăng kí ngay</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-6 col-sm-6 text-center\">\r\n                        <div className='slide-bar'>\r\n                            <img src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1653726835/yfzr51aot4uof2awbush.png\" alt=\"First slide\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React, { useState, FormEvent, Dispatch } from \"react\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport '../../assets/css/Login.css'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { postResetPassword } from \"../../common/service/ResetPassword/PostResetPassword\";\r\n\r\nconst ForgotPassword: React.FC = () => {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const history = useHistory()\r\n\r\n  const [formState, setFormState] = useState({\r\n    username: { error: \"\", value: \"\" },\r\n    password: { error: \"\", value: \"\" }\r\n  });\r\n\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n  }\r\n\r\n  function submit(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if(isFormInvalid()) { return; }\r\n    const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n      position: toast.POSITION.TOP_CENTER\r\n    });\r\n    dispatch(postResetPassword(formState.username.value, idx))\r\n  }\r\n\r\n  function isFormInvalid() {\r\n    return (formState.username.error \r\n      || !formState.username.value );\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid() as boolean;\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  const changeRoute = () => {\r\n    history.push('/landing-page')\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"container-fluid \" id=\"login-page\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-xl-10 col-lg-10 col-md-9\">\r\n          <h2 id=\"text-logo\" onClick={changeRoute}>KidsDrawing</h2>\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-xl-10 col-lg-12 col-md-9\">\r\n          <div className=\"card o-hidden border-0  my-5\">\r\n            <div className=\"card-body p-0\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-6 d-none d-lg-block text-center\" id=\"image-login-page\">\r\n                  <img src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1653726835/yfzr51aot4uof2awbush.png\" alt=\"First slide\" />\r\n                </div>\r\n                <div className=\"col-lg-6 shadow-lg\">\r\n                  <div className=\"p-5\">\r\n                    <div className=\"text-center\">\r\n                      <h1 className=\"h4 text-gray-900 mb-4\">Quên mật khẩu</h1>\r\n                    </div>\r\n                    <form className=\"user\" onSubmit={submit}>\r\n                      <div className=\"form-group\">\r\n\r\n                        <TextInput id=\"input_username\"\r\n                          field=\"username\"\r\n                          value={formState.username.value}\r\n                          onChange={hasFormValueChanged}\r\n                          required={true}\r\n                          maxLength={100}\r\n                          label=\"Email\"\r\n                          placeholder=\"\" />\r\n                      </div>\r\n                      <button\r\n                        className={`btn btn-primary btn-user btn-block ${getDisabledClass()}`}\r\n                        type=\"submit\">\r\n                        Gửi\r\n                      </button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/schedule.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postResetPassword(email: string, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/password-reset-token/user/resetPassword/${email}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postResetPassword(email, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                localStorage.removeItem('token_reset_password') // Authorization\r\n                localStorage.setItem('token_reset_password', data.token)\r\n                toast.update(idx, { render: \"Vui lòng đợi email!\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Gửi yêu cầu không thành công!\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch } from \"react\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport '../../assets/css/Login.css'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { postSavePassword } from \"../../common/service/ResetPassword/PostSavePassword\";\r\n\r\nconst UpdatePassword: React.FC = () => {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const history = useHistory()\r\n\r\n  const [formState, setFormState] = useState({\r\n    username: { error: \"\", value: \"\" },\r\n    password: { error: \"\", value: \"\" }\r\n  });\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n  }\r\n\r\n  function submit(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if(isFormInvalid()) { return; }\r\n    const idx = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\r\n      position: toast.POSITION.TOP_CENTER\r\n    });\r\n    dispatch(postSavePassword(\r\n        {\r\n            newPassword: formState.password.value, \r\n            token: localStorage.getItem('token_reset_password')\r\n        }, idx))\r\n  }\r\n\r\n  function isFormInvalid() {\r\n    return (formState.password.error || !formState.password.value);\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid() as boolean;\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  const changeRoute = () => {\r\n    history.push('/landing-page')\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"container-fluid \" id=\"login-page\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-xl-10 col-lg-10 col-md-9\">\r\n          <h2 id=\"text-logo\" onClick={changeRoute}>KidsDrawing</h2>\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-xl-10 col-lg-12 col-md-9\">\r\n          <div className=\"card o-hidden border-0  my-5\">\r\n            <div className=\"card-body p-0\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-6 d-none d-lg-block text-center\" id=\"image-login-page\">\r\n                  <img src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1653726835/yfzr51aot4uof2awbush.png\" alt=\"First slide\" />\r\n                </div>\r\n                <div className=\"col-lg-6 shadow-lg\">\r\n                  <div className=\"p-5\">\r\n                    <div className=\"text-center\">\r\n                      <h1 className=\"h4 text-gray-900 mb-4\">Thay đổi mật khẩu</h1>\r\n                    </div>\r\n                    <form className=\"user\" onSubmit={submit}>\r\n                      <div className=\"form-group\">\r\n                        <TextInput id=\"input_password\"\r\n                          field=\"password\"\r\n                          value={formState.password.value}\r\n                          onChange={hasFormValueChanged}\r\n                          required={true}\r\n                          maxLength={100}\r\n                          type=\"password\"\r\n                          label=\"Mật khẩu mới\"\r\n                          placeholder=\"\" />\r\n                      </div>\r\n                      <button\r\n                        className={`btn btn-primary btn-user btn-block ${getDisabledClass()}`}\r\n                        type=\"submit\">\r\n                        Gửi\r\n                      </button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdatePassword;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/schedule.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postSavePassword(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/password-reset-token/user/savePassword`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postSavePassword(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Đổi mật khẩu thành công!\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Đổi mật khẩu không thành công!\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch } from \"react\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport '../../assets/css/Login.css'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { postRegister } from \"../../common/service/Aut/Register\";\r\n\r\nconst RegisterForm: React.FC = () => {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const history = useHistory()\r\n\r\n  const [formState, setFormState] = useState({\r\n    username: { error: \"\", value: \"\" },\r\n    password: { error: \"\", value: \"\" },\r\n    email: { error: \"\", value: \"\" },\r\n    firstName: { error: \"\", value: \"\" },\r\n    lastName: { error: \"\", value: \"\" },\r\n    dateOfBirth: { error: \"\", value: \"\" },\r\n    profile_image_url: { error: \"\", value: \"\" },\r\n    sex: { error: \"\", value: \"\" },\r\n    phone: { error: \"\", value: \"\" },\r\n    address: { error: \"\", value: \"\" },\r\n    parent_id: { error: \"\", value: \"\" },\r\n    roleNames: { error: \"\", value: \"\" },\r\n  });\r\n\r\n  function changeRouteHome(value: boolean) {\r\n    if (value === true){\r\n      history.push('/aut')\r\n    }\r\n  }\r\n\r\n  function routeLogin() {\r\n      history.push('/aut')\r\n  }\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n  }\r\n\r\n  function submit(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if(isFormInvalid()) { return; }\r\n    const id = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\r\n      position: toast.POSITION.TOP_CENTER\r\n    });\r\n    dispatch(postRegister({\r\n        username: formState.username.value,\r\n        password: formState.password.value,\r\n        email: formState.email.value,\r\n        firstName: null,\r\n        lastName: null,\r\n        dateOfBirth: null,\r\n        profile_image_url: null,\r\n        sex: null,\r\n        phone: null,\r\n        address: null,\r\n        roleNames: [\"PARENT_USER\"]\r\n    }, changeRouteHome, id))\r\n  }\r\n\r\n  function isFormInvalid() {\r\n    return (formState.username.error || formState.password.error\r\n      || !formState.username.value || !formState.password.value);\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid() as boolean;\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  const changeRoute = () => {\r\n    history.push('/landing-page')\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"container-fluid \" id=\"login-page\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-xl-10 col-lg-10 col-md-9\">\r\n          <h2 id=\"text-logo\" onClick={changeRoute}>KidsDrawing</h2>\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-xl-10 col-lg-12 col-md-9\">\r\n          <div className=\"card o-hidden border-0  my-5\">\r\n            <div className=\"card-body p-0\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-6 d-none d-lg-block text-center\" id=\"image-login-page\">\r\n                  <img src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1653726835/yfzr51aot4uof2awbush.png\" alt=\"First slide\" />\r\n                </div>\r\n                <div className=\"col-lg-6 shadow-lg\">\r\n                  <div className=\"p-5\">\r\n                    <div className=\"text-center\">\r\n                      <h1 className=\"h4 text-gray-900 mb-4\">Đăng ký</h1>\r\n                    </div>\r\n                    <form className=\"user\" onSubmit={submit}>\r\n                      <div className=\"form-group\">\r\n\r\n                        <TextInput id=\"input_username\"\r\n                          field=\"username\"\r\n                          value={formState.username.value}\r\n                          onChange={hasFormValueChanged}\r\n                          required={true}\r\n                          maxLength={100}\r\n                          label=\"Tên đăng nhập\"\r\n                          placeholder=\"\" />\r\n                      </div>\r\n                      \r\n                      <div className=\"form-group\">\r\n\r\n                        <TextInput id=\"input_email\"\r\n                          field=\"email\"\r\n                          value={formState.email.value}\r\n                          onChange={hasFormValueChanged}\r\n                          required={true}\r\n                          maxLength={100}\r\n                          label=\"Email\"\r\n                          placeholder=\"\" />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <TextInput id=\"input_password\"\r\n                          field=\"password\"\r\n                          value={formState.password.value}\r\n                          onChange={hasFormValueChanged}\r\n                          required={true}\r\n                          maxLength={100}\r\n                          type=\"password\"\r\n                          label=\"Mật khẩu\"\r\n                          placeholder=\"\" />\r\n                      </div>\r\n                \r\n                      <button\r\n                        className={`btn btn-primary btn-user btn-block ${getDisabledClass()}`}\r\n                        type=\"submit\">\r\n                        Đăng kí\r\n                      </button>\r\n                    </form>\r\n                    <div className=\"justify-content-center text-center\">\r\n                      <p>Bạn đã có tài khoản? <span style={{color: '#0066FF'}}><span className=\"link\" style={{color: '#0066FF'}} onClick={() => {routeLogin()}}>Đăng nhập</span></span></p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import { toast } from 'react-toastify';\r\n\r\nexport function postRegister(data: any, changeRouteHome: any, id: any) {\r\n    \r\n    return (dispatch: any) => {\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/user`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                'Access-Control-Allow-Credentials': 'true'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }\r\n        )\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw Error(response.statusText);\r\n                }\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n\r\n                toast.update(id, { render: \"Đăng ký thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                setTimeout(function () {\r\n                    changeRouteHome(true);\r\n                }, 2000);            \r\n            })\r\n            .catch(error => {\r\n                toast.update(id, { render: \"Đăng ký không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            });\r\n    };\r\n}","import React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { postStatusUserRegisterJoinSemester } from \"../../common/service/UserRegisterJoinSemester/PostStatusUserRegisterJoinSemester\";\r\n\r\nimport \"./PaymentSuccessfull.css\"\r\n\r\n\r\nconst PaymentSuccessfull: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    \r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n\r\n    const ids = urlParams.get('ids')\r\n    console.log(ids);\r\n\r\n    useEffect(() => {\r\n        dispatch(postStatusUserRegisterJoinSemester(ids))\r\n    }, [dispatch, ids])\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 mx-auto mt-5\">\r\n                        <div className=\"payment\">\r\n                            <div className=\"payment_header\">\r\n                                <div className=\"check\"><i className=\"fa fa-check\" aria-hidden=\"true\"></i></div>\r\n                            </div>\r\n                            <div className=\"content\">\r\n                                <h1>Thanh toán thành công !</h1>\r\n                                <p>Chúc mừng bạn đã thanh toán thành công đơn hàng. Vui lòng lòng quay lại trang chủ để trải nghiệm!</p>\r\n                                <a href=\"/Home\">Go to Home</a>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default PaymentSuccessfull;\r\n","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postStatusUserRegisterJoinSemester(ids: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-join-semester/payment/v2?ids=${ids}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postStatusUserRegisterJoinSemester(ids))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React from \"react\";\nimport \"./App.css\";\nimport \"./styles/sb-admin-2.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/Account/Login\";\nimport { PrivateRoute } from \"./common/components/PrivateRoute\";\nimport Routers from \"./Routers/Routers\";\nimport LandingPage from \"./components/LandingPage/LandingPage\";\nimport ForgotPassword from \"./components/Account/ForgotPassword\";\nimport UpdatePassword from \"./components/Account/UpdatePassword\";\nimport RegisterForm from \"./components/Account/RegisterForm\";\nimport PaymentSuccessfull from \"./components/Discovery/PaymentSuccessfull\";\n\n\nconst App: React.FC = () => {\n  // Handle incoming messages. Called when:\n// - a message is received while the app has focus\n// - the user clicks on an app notification created by a service worker\n//   `messaging.onBackgroundMessage` handler.\n\n  return (\n    <div className=\"App\" id=\"wrapper\">\n      <Router>\n        <Switch>\n          <Route path=\"/landing-page\"><LandingPage /></Route>\n          <Route path={`/forgot-password`}><ForgotPassword /></Route>\n          <Route path={`/update-password`}><UpdatePassword /></Route>\n          <Route path={`/register`}><RegisterForm /></Route>\n          <Route path={`/payment-successfull`}><PaymentSuccessfull /></Route>\n          <Route path=\"/auth\"><Login /></Route>\n          <PrivateRoute path=\"/\">\n            <Routers />\n          </PrivateRoute>\n          {/* <Route path={`/aut`}><Login /></Route>\n          <Route path={`/landing-page`}><LandingPage /></Route>\n          <Route path={`/`}><Routers /></Route>\n          <Route path={`/`}>\n            <Redirect to=\"/landing-page\" />\n          </Route> */}\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { IProductState, IActionBase } from \"../models/root.interface\";\nimport { ADD_PRODUCT, CHANGE_PRODUCT_PENDING_EDIT, EDIT_PRODUCT, REMOVE_PRODUCT,\n    CLEAR_PRODUCT_PENDING_EDIT, SET_MODIFICATION_STATE, CHANGE_PRODUCT_AMOUNT} from \"../actions/products.action\";\nimport { IProduct, ProductModificationStatus } from \"../models/product.interface\";\n\n\n\nconst initialState: IProductState = {\n    modificationState: ProductModificationStatus.None,\n    selectedProduct: null,\n    products: []\n};\n\nfunction productsReducer(state: IProductState = initialState, action: IActionBase): IProductState {\n    switch (action.type) {\n        case ADD_PRODUCT: {\n            return { ...state, products: [...state.products, action.product]};\n        }\n        case EDIT_PRODUCT: {\n            const foundIndex: number = state.products.findIndex(pr => pr.id === action.product.id);\n            let products: IProduct[] = state.products;\n            products[foundIndex] = action.product;\n            return { ...state, products: products };\n        }\n        case REMOVE_PRODUCT: {\n            return { ...state, products: state.products.filter(pr => pr.id !== action.id) };\n        }\n        case CHANGE_PRODUCT_PENDING_EDIT: {\n            return { ...state, selectedProduct: action.product };\n        }\n        case CLEAR_PRODUCT_PENDING_EDIT: {\n            return { ...state, selectedProduct: null };\n        }\n        case SET_MODIFICATION_STATE: {\n            return { ...state, modificationState: action.value };\n        }\n        case CHANGE_PRODUCT_AMOUNT: {\n            const foundIndex: number = state.products.findIndex(pr => pr.id === action.id);\n            let products: IProduct[] = state.products;\n            products[foundIndex].amount = products[foundIndex].amount - action.amount;\n            return { ...state, products: products };\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport default productsReducer;","import { IActionBase, INotificationState } from \"../models/root.interface\";\nimport { ADD_NOTIFICATION, REMOVE_NOTIFICATION } from \"../actions/notifications.action\";\n\nconst initialState: INotificationState = {\n    notifications: [{id: \"\", date: new Date(), text: \"\", title: \"Xin chào\"}]\n};\n\nfunction notificationReducer(state: INotificationState = initialState, action: IActionBase): INotificationState {\n    switch (action.type) {\n        case ADD_NOTIFICATION: {\n            return {...state, notifications: [...state.notifications, action.notification]};\n        }\n        case REMOVE_NOTIFICATION: {\n            return {...state, notifications: state.notifications\n                .filter(Notification => Notification.id !== action.id)};\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport default notificationReducer;","import { IUserState, IActionBase } from \"../models/root.interface\";\nimport { \n    ADD_ADMIN, EDIT_ADMIN, REMOVE_ADMIN,\n    ADD_TEACHER, EDIT_TEACHER, REMOVE_TEACHER,INITIAL_TEACHER, REMOVE_TEACHER_ALL, \n    ADD_STUDENT, EDIT_STUDENT, REMOVE_STUDENT, INITIAL_STUDENT, REMOVE_STUDENT_ALL, \n    ADD_PARENT, EDIT_PARENT, REMOVE_PARENT , INITIAL_PARENT, REMOVE_PARENT_ALL,\n    CHANGE_USER_PENDING_EDIT, CLEAR_USER_PENDING_EDIT, SET_MODIFICATION_STATE\n\n} from \"../actions/users.action\";\nimport { IUser, UserModificationStatus } from \"../models/user.interface\";\n\nconst initialState: IUserState = {\n    modificationState: UserModificationStatus.None,\n    selectedUser: null,\n    admins: [],\n    teachers: [],\n    students: [],\n    parents: []\n};\n\nfunction userReducer(state: IUserState = initialState, action: IActionBase): IUserState {\n    switch (action.type) {\n        case ADD_ADMIN: {\n            return { ...state, admins: [...state.admins, action.user]};\n        }\n        case EDIT_ADMIN: {\n            const foundIndex: number = state.admins.findIndex(pr => pr.username === action.user.username);\n            let admins: IUser[] = state.admins;\n            admins[foundIndex] = action.user;\n            return { ...state, admins: admins };\n        }\n        case REMOVE_ADMIN: {\n            return { ...state, admins: state.admins.filter(x=>x.username !== action.user.username)};\n        }\n\n        case INITIAL_TEACHER: {\n            return { ...state, teachers : [...state.teachers, action.user]};\n        }\n        case REMOVE_TEACHER_ALL: {\n            return { ...state, teachers: [] };\n        }\n        case ADD_TEACHER: {\n            return { ...state, teachers: [...state.teachers, action.user]};\n        }\n        case EDIT_TEACHER: {\n            const foundIndex: number = state.teachers.findIndex(pr => pr.username === action.user.username);\n            let teachers: IUser[] = state.teachers;\n            teachers[foundIndex] = action.user;\n            return { ...state, teachers: teachers };\n        }\n        case REMOVE_TEACHER: {\n            return { ...state, teachers: state.teachers.filter(x=>x.username !== action.user.username)};\n        }\n\n        case INITIAL_STUDENT: {\n            return { ...state, students : [...state.students, action.user]};\n        }\n        case REMOVE_STUDENT_ALL: {\n            return { ...state, students: [] };\n        }\n        case ADD_STUDENT: {\n            return { ...state, students: [...state.students, action.user]};\n        }\n        case EDIT_STUDENT: {\n            const foundIndex: number = state.students.findIndex(pr => pr.username === action.user.username);\n            let students: IUser[] = state.students;\n            students[foundIndex] = action.user;\n            return { ...state, students: students };\n        }\n        case REMOVE_STUDENT: {\n            return { ...state, students: state.students.filter(x=>x.username !== action.user.username)};\n        }\n\n        case INITIAL_PARENT: {\n            return { ...state, parents : [...state.parents, action.user]};\n        }\n        case REMOVE_PARENT_ALL: {\n            return { ...state, parents: [] };\n        }\n        case ADD_PARENT: {\n            return { ...state, parents: [...state.parents, action.user]};\n        }\n        case EDIT_PARENT: {\n            const foundIndex: number = state.parents.findIndex(pr => pr.username === action.user.username);\n            let parents: IUser[] = state.parents;\n            parents[foundIndex] = action.user;\n            return { ...state, parents: parents };\n        }\n        case REMOVE_PARENT: {\n            return { ...state, parents: state.parents.filter(x=>x.username !== action.user.username)};\n        }\n        \n        case CHANGE_USER_PENDING_EDIT: {\n            return { ...state, selectedUser: action.user };\n        }\n        case CLEAR_USER_PENDING_EDIT: {\n            return { ...state, selectedUser: null };\n        }\n        case SET_MODIFICATION_STATE: {\n            return { ...state, modificationState: action.value };\n        }\n        default:\n            return state;\n    }\n}\n\nexport default userReducer;","import { IOrder } from \"../models/order.interface\";\n\nexport const ADD_ORDER: string = \"ADD_ORDER\";\n\nexport function addOrder(order: IOrder): IAddOrderActionType {\n    return { type: ADD_ORDER, order: order };\n}\n\ninterface IAddOrderActionType { type: string, order: IOrder };\n","import { IOrdersState, IActionBase } from \"../models/root.interface\";\nimport { ADD_ORDER } from \"../actions/orders.actions\";\n\n\nconst initialState: IOrdersState = {\n    orders: []\n};\n\nfunction orderReducer(state: IOrdersState = initialState, action: IActionBase): IOrdersState {\n    switch (action.type) {\n        case ADD_ORDER: {\n            return {...state, orders: [...state.orders, {...action.order}]};\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport default orderReducer;","import { IActionBase } from \"../models/root.interface\";\nimport { IAccount } from \"../models/account.interface\";\nimport { LOG_IN, LOG_OUT } from \"../actions/account.actions\";\n\nvar username = localStorage.getItem('username')\n\nconst initialState: IAccount = {\n    username: username !== null ? username : \"\"\n};\n\nfunction accountReducer(state: IAccount = initialState, action: IActionBase): IAccount {\n    switch (action.type) {\n        case LOG_IN: {\n            return { ...state, username: (action.username)};\n        }\n        case LOG_OUT: {\n            return { ...state, username: \"\"};\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport default accountReducer;","import { ISemesterState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SEMESTER, CHANGE_SEMESTER_PENDING_EDIT, EDIT_SEMESTER, REMOVE_SEMESTER,\r\n    CLEAR_SEMESTER_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SEMESTER, REMOVE_SEMESTER_ALL} from \"../actions/semester.actions\";\r\nimport { ISemester, SemesterModificationStatus } from \"../models/semester.interface\";\r\n\r\n\r\n\r\nconst initialState: ISemesterState = {\r\n    modificationState: SemesterModificationStatus.None,\r\n    selectedSemester: null,\r\n    semesters: []\r\n};\r\n\r\nfunction semestersReducer(state: ISemesterState = initialState, action: IActionBase): ISemesterState {\r\n    switch (action.type) {\r\n        case INITIAL_SEMESTER: {\r\n            return { ...state, semesters : [...state.semesters, action.semester]};\r\n        }\r\n        case ADD_SEMESTER: {\r\n            return { ...state, semesters: [...state.semesters, action.semester]};\r\n        }\r\n        case EDIT_SEMESTER: {\r\n            const foundIndex: number = state.semesters.findIndex(pr => pr.id === action.semester.id);\r\n            let semesters: ISemester[] = state.semesters;\r\n            semesters[foundIndex] = action.semester;\r\n            return { ...state, semesters: semesters };\r\n        }\r\n        case REMOVE_SEMESTER: {\r\n            return { ...state, semesters: state.semesters.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SEMESTER_ALL: {\r\n            return { ...state, semesters: [] };\r\n        }\r\n        case CHANGE_SEMESTER_PENDING_EDIT: {\r\n            return { ...state, selectedSemester: action.semester };\r\n        }\r\n        case CLEAR_SEMESTER_PENDING_EDIT: {\r\n            return { ...state, selectedSemester: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default semestersReducer;","import { ILessonState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_LESSON, CHANGE_LESSON_PENDING_EDIT, EDIT_LESSON, REMOVE_LESSON,\r\n    CLEAR_LESSON_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_LESSON, REMOVE_LESSON_ALL} from \"../actions/lesson.action\";\r\nimport { ILesson, LessonModificationStatus } from \"../models/lesson.interface\";\r\n\r\n\r\n\r\nconst initialState: ILessonState = {\r\n    modificationState: LessonModificationStatus.None,\r\n    selectedLesson: null,\r\n    lessons: []\r\n};\r\n\r\nfunction lessonsReducer(state: ILessonState = initialState, action: IActionBase): ILessonState {\r\n    switch (action.type) {\r\n        case INITIAL_LESSON: {\r\n            return { ...state, lessons : [...state.lessons, action.lesson]};\r\n        }\r\n        case ADD_LESSON: {\r\n            return { ...state, lessons: [...state.lessons, action.lesson]};\r\n        }\r\n        case EDIT_LESSON: {\r\n            const foundIndex: number = state.lessons.findIndex(pr => pr.id === action.lesson.id);\r\n            let lessons: ILesson[] = state.lessons;\r\n            lessons[foundIndex] = action.lesson;\r\n            return { ...state, lessons: lessons };\r\n        }\r\n        case REMOVE_LESSON: {\r\n            return { ...state, lessons: state.lessons.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_LESSON_ALL: {\r\n            return { ...state, lessons: [] };\r\n        }\r\n        case CHANGE_LESSON_PENDING_EDIT: {\r\n            return { ...state, selectedLesson: action.lesson };\r\n        }\r\n        case CLEAR_LESSON_PENDING_EDIT: {\r\n            return { ...state, selectedLesson: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default lessonsReducer;","export interface ISchedule {\r\n    id: string;\r\n    lesson_time_id: string;\r\n    lesson_time: string;\r\n    semester_class_id: string;\r\n    date_of_week: number;\r\n}\r\n\r\nexport enum ScheduleModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IScheduleState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SCHEDULE, CHANGE_SCHEDULE_PENDING_EDIT, EDIT_SCHEDULE, REMOVE_SCHEDULE,\r\n    CLEAR_SCHEDULE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SCHEDULE, REMOVE_SCHEDULE_ALL} from \"../actions/schedule.action\";\r\nimport { ISchedule, ScheduleModificationStatus } from \"../models/schedule.interface\";\r\n\r\n\r\n\r\nconst initialState: IScheduleState = {\r\n    modificationState: ScheduleModificationStatus.None,\r\n    selectedSchedule: null,\r\n    schedules: []\r\n};\r\n\r\nfunction schedulesReducer(state: IScheduleState = initialState, action: IActionBase): IScheduleState {\r\n    switch (action.type) {\r\n        case INITIAL_SCHEDULE: {\r\n            return { ...state, schedules : [...state.schedules, action.schedule]};\r\n        }\r\n        case ADD_SCHEDULE: {\r\n            return { ...state, schedules: [...state.schedules, action.schedule]};\r\n        }\r\n        case EDIT_SCHEDULE: {\r\n            const foundIndex: number = state.schedules.findIndex(pr => pr.id === action.schedule.id);\r\n            let schedules: ISchedule[] = state.schedules;\r\n            schedules[foundIndex] = action.schedule;\r\n            return { ...state, schedules: schedules };\r\n        }\r\n        case REMOVE_SCHEDULE: {\r\n            return { ...state, schedules: state.schedules.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SCHEDULE_ALL: {\r\n            return { ...state, schedules: [] };\r\n        }\r\n        case CHANGE_SCHEDULE_PENDING_EDIT: {\r\n            return { ...state, selectedSchedule: action.schedule };\r\n        }\r\n        case CLEAR_SCHEDULE_PENDING_EDIT: {\r\n            return { ...state, selectedSchedule: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default schedulesReducer;","export interface IScheduleItem {\r\n    id: string;\r\n    schedule_id: string;\r\n    lesson_time: number;\r\n    date_of_week: number;\r\n}\r\n\r\nexport enum ScheduleItemModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IScheduleItem, ScheduleItemModificationStatus } from \"../models/schedule_item.interface\";\r\nexport const ADD_SCHEDULE_ITEM: string = \"ADD_SCHEDULE_ITEM\";\r\nexport const EDIT_SCHEDULE_ITEM: string = \"EDIT_SCHEDULE_ITEM\";\r\nexport const REMOVE_SCHEDULE_ITEM: string = \"REMOVE_SCHEDULE_ITEM\";\r\nexport const CHANGE_SCHEDULE_ITEM_AMOUNT: string = \"CHANGE_SCHEDULE_ITEM_AMOUNT\";\r\nexport const CHANGE_SCHEDULE_ITEM_PENDING_EDIT: string = \"CHANGE_SCHEDULE_ITEM_PENDING_EDIT\";\r\nexport const CLEAR_SCHEDULE_ITEM_PENDING_EDIT: string = \"CLEAR_SCHEDULE_ITEM_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SCHEDULE_ITEM_ALL: string = \"REMOVE_SCHEDULE_ITEM_ALL\";\r\nexport const INITIAL_SCHEDULE_ITEM: string = \"INITIAL_SCHEDULE_ITEM\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(schedule_item: IScheduleItem) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        schedule_item\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialScheduleItem(schedule_item: IScheduleItem): IInitialScheduleItemActionType {\r\n    return { type: INITIAL_SCHEDULE_ITEM, schedule_item: schedule_item };\r\n}\r\n\r\nexport function removeScheduleItemAll(): IRemoveScheduleItemAllActionType {\r\n    return { type: REMOVE_SCHEDULE_ITEM_ALL };\r\n}\r\n\r\nexport function addScheduleItem(schedule_item: IScheduleItem): IAddScheduleItemActionType {\r\n    return { type: ADD_SCHEDULE_ITEM, schedule_item: schedule_item };\r\n}\r\n\r\nexport function editScheduleItem(schedule_item: IScheduleItem): IEditScheduleItemActionType {\r\n    return { type: EDIT_SCHEDULE_ITEM, schedule_item: schedule_item };\r\n}\r\n\r\nexport function removeScheduleItem(id: string): IRemoveScheduleItemActionType {\r\n    return { type: REMOVE_SCHEDULE_ITEM, id: id };\r\n}\r\n\r\nexport function changeSelectedScheduleItem(schedule_item: IScheduleItem): IChangeSelectedScheduleItemActionType {\r\n    return { type: CHANGE_SCHEDULE_ITEM_PENDING_EDIT, schedule_item: schedule_item };\r\n}\r\n\r\nexport function clearSelectedScheduleItem(): IClearSelectedScheduleItemActionType {\r\n    return { type: CLEAR_SCHEDULE_ITEM_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ScheduleItemModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddScheduleItemActionType { type: string, schedule_item: IScheduleItem };\r\ninterface IEditScheduleItemActionType { type: string, schedule_item: IScheduleItem };\r\ninterface IRemoveScheduleItemActionType { type: string, id: string };\r\ninterface IChangeSelectedScheduleItemActionType { type: string, schedule_item: IScheduleItem };\r\ninterface IClearSelectedScheduleItemActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ScheduleItemModificationStatus};\r\ninterface IRemoveScheduleItemAllActionType { type: string }\r\ninterface IInitialScheduleItemActionType {type: string, schedule_item: IScheduleItem}","import { IScheduleItemState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SCHEDULE_ITEM, CHANGE_SCHEDULE_ITEM_PENDING_EDIT, EDIT_SCHEDULE_ITEM, REMOVE_SCHEDULE_ITEM,\r\n    CLEAR_SCHEDULE_ITEM_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SCHEDULE_ITEM, REMOVE_SCHEDULE_ITEM_ALL} from \"../actions/schedule_item.action\";\r\nimport { IScheduleItem, ScheduleItemModificationStatus } from \"../models/schedule_item.interface\";\r\n\r\n\r\n\r\nconst initialState: IScheduleItemState = {\r\n    modificationState: ScheduleItemModificationStatus.None,\r\n    selectedScheduleItem: null,\r\n    schedule_items: []\r\n};\r\n\r\nfunction schedule_itemsReducer(state: IScheduleItemState = initialState, action: IActionBase): IScheduleItemState {\r\n    switch (action.type) {\r\n        case INITIAL_SCHEDULE_ITEM: {\r\n            return { ...state, schedule_items : [...state.schedule_items, action.schedule_item]};\r\n        }\r\n        case ADD_SCHEDULE_ITEM: {\r\n            return { ...state, schedule_items: [...state.schedule_items, action.schedule_item]};\r\n        }\r\n        case EDIT_SCHEDULE_ITEM: {\r\n            const foundIndex: number = state.schedule_items.findIndex(pr => pr.id === action.schedule_item.id);\r\n            let schedule_items: IScheduleItem[] = state.schedule_items;\r\n            schedule_items[foundIndex] = action.schedule_item;\r\n            return { ...state, schedule_items: schedule_items };\r\n        }\r\n        case REMOVE_SCHEDULE_ITEM: {\r\n            return { ...state, schedule_items: state.schedule_items.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SCHEDULE_ITEM_ALL: {\r\n            return { ...state, schedule_items: [] };\r\n        }\r\n        case CHANGE_SCHEDULE_ITEM_PENDING_EDIT: {\r\n            return { ...state, selectedScheduleItem: action.schedule_item };\r\n        }\r\n        case CLEAR_SCHEDULE_ITEM_PENDING_EDIT: {\r\n            return { ...state, selectedScheduleItem: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default schedule_itemsReducer;","import { IArtTypeState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_ART_TYPE, CHANGE_ART_TYPE_PENDING_EDIT, EDIT_ART_TYPE, REMOVE_ART_TYPE,\r\n    CLEAR_ART_TYPE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_ART_TYPE, REMOVE_ART_TYPE_ALL} from \"../actions/art_type.action\";\r\nimport { IArtType, ArtTypeModificationStatus } from \"../models/art_type.interface\";\r\n\r\n\r\n\r\nconst initialState: IArtTypeState = {\r\n    modificationState: ArtTypeModificationStatus.None,\r\n    selectedArtType: null,\r\n    artTypes: []\r\n};\r\n\r\nfunction artTypesReducer(state: IArtTypeState = initialState, action: IActionBase): IArtTypeState {\r\n    switch (action.type) {\r\n        case INITIAL_ART_TYPE: {\r\n            return { ...state, artTypes : [...state.artTypes, action.art_type]};\r\n        }\r\n        case ADD_ART_TYPE: {\r\n            return { ...state, artTypes: [...state.artTypes, action.art_type]};\r\n        }\r\n        case EDIT_ART_TYPE: {\r\n            const foundIndex: number = state.artTypes.findIndex(pr => pr.id === action.art_type.id);\r\n            let artTypes: IArtType[] = state.artTypes;\r\n            artTypes[foundIndex] = action.art_type;\r\n            return { ...state, artTypes: artTypes };\r\n        }\r\n        case REMOVE_ART_TYPE: {\r\n            return { ...state, artTypes: state.artTypes.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_ART_TYPE_ALL: {\r\n            return { ...state, artTypes: [] };\r\n        }\r\n        case CHANGE_ART_TYPE_PENDING_EDIT: {\r\n            return { ...state, selectedArtType: action.art_type };\r\n        }\r\n        case CLEAR_ART_TYPE_PENDING_EDIT: {\r\n            return { ...state, selectedArtType: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default artTypesReducer;","import { IArtLevelState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_ART_LEVEL, CHANGE_ART_LEVEL_PENDING_EDIT, EDIT_ART_LEVEL, REMOVE_ART_LEVEL,\r\n    CLEAR_ART_LEVEL_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_ART_LEVEL, REMOVE_ART_LEVEL_ALL} from \"../actions/art_level.action\";\r\nimport { IArtLevel, ArtLevelModificationStatus } from \"../models/art_level.interface\";\r\n\r\n\r\n\r\nconst initialState: IArtLevelState = {\r\n    modificationState: ArtLevelModificationStatus.None,\r\n    selectedArtLevel: null,\r\n    artLevels: []\r\n};\r\n\r\nfunction artLevelsReducer(state: IArtLevelState = initialState, action: IActionBase): IArtLevelState {\r\n    switch (action.type) {\r\n        case INITIAL_ART_LEVEL: {\r\n            return { ...state, artLevels : [...state.artLevels, action.art_level]};\r\n        }\r\n        case ADD_ART_LEVEL: {\r\n            return { ...state, artLevels: [...state.artLevels, action.art_level]};\r\n        }\r\n        case EDIT_ART_LEVEL: {\r\n            const foundIndex: number = state.artLevels.findIndex(pr => pr.id === action.art_level.id);\r\n            let artLevels: IArtLevel[] = state.artLevels;\r\n            artLevels[foundIndex] = action.art_level;\r\n            return { ...state, artLevels: artLevels };\r\n        }\r\n        case REMOVE_ART_LEVEL: {\r\n            return { ...state, artLevels: state.artLevels.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_ART_LEVEL_ALL: {\r\n            return { ...state, artLevels: [] };\r\n        }\r\n        case CHANGE_ART_LEVEL_PENDING_EDIT: {\r\n            return { ...state, selectedArtLevel: action.art_level };\r\n        }\r\n        case CLEAR_ART_LEVEL_PENDING_EDIT: {\r\n            return { ...state, selectedArtLevel: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default artLevelsReducer;","import { IArtAgeState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_ART_AGE, CHANGE_ART_AGE_PENDING_EDIT, EDIT_ART_AGE, REMOVE_ART_AGE,\r\n    CLEAR_ART_AGE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_ART_AGE, REMOVE_ART_AGE_ALL} from \"../actions/art_age.action\";\r\nimport { IArtAge, ArtAgeModificationStatus } from \"../models/art_age.interface\";\r\n\r\n\r\n\r\nconst initialState: IArtAgeState = {\r\n    modificationState: ArtAgeModificationStatus.None,\r\n    selectedArtAge: null,\r\n    artAges: []\r\n};\r\n\r\nfunction artAgesReducer(state: IArtAgeState = initialState, action: IActionBase): IArtAgeState {\r\n    switch (action.type) {\r\n        case INITIAL_ART_AGE: {\r\n            return { ...state, artAges : [...state.artAges, action.art_age]};\r\n        }\r\n        case ADD_ART_AGE: {\r\n            return { ...state, artAges: [...state.artAges, action.art_age]};\r\n        }\r\n        case EDIT_ART_AGE: {\r\n            const foundIndex: number = state.artAges.findIndex(pr => pr.id === action.art_age.id);\r\n            let artAges: IArtAge[] = state.artAges;\r\n            artAges[foundIndex] = action.art_age;\r\n            return { ...state, artAges: artAges };\r\n        }\r\n        case REMOVE_ART_AGE: {\r\n            return { ...state, artAges: state.artAges.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_ART_AGE_ALL: {\r\n            return { ...state, artAges: [] };\r\n        }\r\n        case CHANGE_ART_AGE_PENDING_EDIT: {\r\n            return { ...state, selectedArtAge: action.art_age };\r\n        }\r\n        case CLEAR_ART_AGE_PENDING_EDIT: {\r\n            return { ...state, selectedArtAge: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default artAgesReducer;","import { ICourseState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_COURSE, CHANGE_COURSE_PENDING_EDIT, EDIT_COURSE, REMOVE_COURSE,\r\n    CLEAR_COURSE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_COURSE, REMOVE_COURSE_ALL} from \"../actions/course.action\";\r\nimport { ICourse, CourseModificationStatus } from \"../models/course.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseState = {\r\n    modificationState: CourseModificationStatus.None,\r\n    selectedCourse: null,\r\n    courses: []\r\n};\r\n\r\nfunction coursesReducer(state: ICourseState = initialState, action: IActionBase): ICourseState {\r\n    switch (action.type) {\r\n        case INITIAL_COURSE: {\r\n            return { ...state, courses : [...state.courses, action.course]};\r\n        }\r\n        case ADD_COURSE: {\r\n            return { ...state, courses: [...state.courses, action.course]};\r\n        }\r\n        case EDIT_COURSE: {\r\n            const foundIndex: number = state.courses.findIndex(pr => pr.id === action.course.id);\r\n            let courses: ICourse[] = state.courses;\r\n            courses[foundIndex] = action.course;\r\n            return { ...state, courses: courses };\r\n        }\r\n        case REMOVE_COURSE: {\r\n            return { ...state, courses: state.courses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_COURSE_ALL: {\r\n            return { ...state, courses: [] };\r\n        }\r\n        case CHANGE_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourse: action.course };\r\n        }\r\n        case CLEAR_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourse: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default coursesReducer;","import { IContestState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CONTEST, CHANGE_CONTEST_PENDING_EDIT, EDIT_CONTEST, REMOVE_CONTEST,\r\n    CLEAR_CONTEST_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_CONTEST, REMOVE_CONTEST_ALL} from \"../actions/contest.action\";\r\nimport { IContest, ContestModificationStatus } from \"../models/contest.interface\";\r\n\r\n\r\n\r\nconst initialState: IContestState = {\r\n    modificationState: ContestModificationStatus.None,\r\n    selectedContest: null,\r\n    contests: []\r\n};\r\n\r\nfunction contestsReducer(state: IContestState = initialState, action: IActionBase): IContestState {\r\n    switch (action.type) {\r\n        case INITIAL_CONTEST: {\r\n            return { ...state, contests : [...state.contests, action.contest]};\r\n        }\r\n        case ADD_CONTEST: {\r\n            return { ...state, contests: [...state.contests, action.contest]};\r\n        }\r\n        case EDIT_CONTEST: {\r\n            const foundIndex: number = state.contests.findIndex(pr => pr.id === action.contest.id);\r\n            let contests: IContest[] = state.contests;\r\n            contests[foundIndex] = action.contest;\r\n            return { ...state, contests: contests };\r\n        }\r\n        case REMOVE_CONTEST: {\r\n            return { ...state, contests: state.contests.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_ALL: {\r\n            return { ...state, contests: [] };\r\n        }\r\n        case CHANGE_CONTEST_PENDING_EDIT: {\r\n            return { ...state, selectedContest: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_PENDING_EDIT: {\r\n            return { ...state, selectedContest: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default contestsReducer;","import { ISectionTemplateState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SECTION_TEMPLATE, CHANGE_SECTION_TEMPLATE_PENDING_EDIT, EDIT_SECTION_TEMPLATE, REMOVE_SECTION_TEMPLATE,\r\n    CLEAR_SECTION_TEMPLATE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SECTION_TEMPLATE, REMOVE_SECTION_TEMPLATE_ALL} from \"../actions/section_template.action\";\r\nimport { ISectionTemplate, SectionTemplateModificationStatus } from \"../models/section_template.interface\";\r\n\r\n\r\n\r\nconst initialState: ISectionTemplateState = {\r\n    modificationState: SectionTemplateModificationStatus.None,\r\n    selectedSectionTemplate: null,\r\n    sectionTemplates: []\r\n};\r\n\r\nfunction sectionTemplatesReducer(state: ISectionTemplateState = initialState, action: IActionBase): ISectionTemplateState {\r\n    switch (action.type) {\r\n        case INITIAL_SECTION_TEMPLATE: {\r\n            return { ...state, sectionTemplates : [...state.sectionTemplates, action.section_template]};\r\n        }\r\n        case ADD_SECTION_TEMPLATE: {\r\n            return { ...state, sectionTemplates: [...state.sectionTemplates, action.section_template]};\r\n        }\r\n        case EDIT_SECTION_TEMPLATE: {\r\n            const foundIndex: number = state.sectionTemplates.findIndex(pr => pr.id === action.section_template.id);\r\n            let sectionTemplates: ISectionTemplate[] = state.sectionTemplates;\r\n            sectionTemplates[foundIndex] = action.section_template;\r\n            return { ...state, sectionTemplates: sectionTemplates };\r\n        }\r\n        case REMOVE_SECTION_TEMPLATE: {\r\n            return { ...state, sectionTemplates: state.sectionTemplates.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SECTION_TEMPLATE_ALL: {\r\n            return { ...state, sectionTemplates: [] };\r\n        }\r\n        case CHANGE_SECTION_TEMPLATE_PENDING_EDIT: {\r\n            return { ...state, selectedSectionTemplate: action.section_template };\r\n        }\r\n        case CLEAR_SECTION_TEMPLATE_PENDING_EDIT: {\r\n            return { ...state, selectedSectionTemplate: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default sectionTemplatesReducer;","export interface ITutorialTemplate {\r\n    id: string;\r\n    section_template_id: string;\r\n    name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum TutorialTemplateModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITutorialTemplateState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TUTORIAL_TEMPLATE, CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT, EDIT_TUTORIAL_TEMPLATE, REMOVE_TUTORIAL_TEMPLATE,\r\n    CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TUTORIAL_TEMPLATE, REMOVE_TUTORIAL_TEMPLATE_ALL} from \"../actions/tutorial_template.action\";\r\nimport { ITutorialTemplate, TutorialTemplateModificationStatus } from \"../models/tutorial_template.interface\";\r\n\r\n\r\n\r\nconst initialState: ITutorialTemplateState = {\r\n    modificationState: TutorialTemplateModificationStatus.None,\r\n    selectedTutorialTemplate: null,\r\n    tutorialTemplates: []\r\n};\r\n\r\nfunction tutorialTemplatesReducer(state: ITutorialTemplateState = initialState, action: IActionBase): ITutorialTemplateState {\r\n    switch (action.type) {\r\n        case INITIAL_TUTORIAL_TEMPLATE: {\r\n            return { ...state, tutorialTemplates : [...state.tutorialTemplates, action.tutorial_template]};\r\n        }\r\n        case ADD_TUTORIAL_TEMPLATE: {\r\n            return { ...state, tutorialTemplates: [...state.tutorialTemplates, action.tutorial_template]};\r\n        }\r\n        case EDIT_TUTORIAL_TEMPLATE: {\r\n            const foundIndex: number = state.tutorialTemplates.findIndex(pr => pr.id === action.tutorial_template.id);\r\n            let tutorialTemplates: ITutorialTemplate[] = state.tutorialTemplates;\r\n            tutorialTemplates[foundIndex] = action.tutorial_template;\r\n            return { ...state, tutorialTemplates: tutorialTemplates };\r\n        }\r\n        case REMOVE_TUTORIAL_TEMPLATE: {\r\n            return { ...state, tutorialTemplates: state.tutorialTemplates.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_TUTORIAL_TEMPLATE_ALL: {\r\n            return { ...state, tutorialTemplates: [] };\r\n        }\r\n        case CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT: {\r\n            return { ...state, selectedTutorialTemplate: action.tutorial_template };\r\n        }\r\n        case CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT: {\r\n            return { ...state, selectedTutorialTemplate: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default tutorialTemplatesReducer;","export interface IUserGradeContest {\r\n    id: string;\r\n    contest_id: string;\r\n    teacher_id: string;\r\n    teacher_name: string;\r\n    contest_name: string;\r\n}\r\n\r\nexport enum UserGradeContestModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IUserGradeContestState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TUTORIAL_TEMPLATE, CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT, EDIT_TUTORIAL_TEMPLATE, REMOVE_TUTORIAL_TEMPLATE,\r\n    CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TUTORIAL_TEMPLATE, REMOVE_TUTORIAL_TEMPLATE_ALL} from \"../actions/user_grade_contest.action\";\r\nimport { IUserGradeContest, UserGradeContestModificationStatus } from \"../models/user_grade_contest.interface\";\r\n\r\n\r\n\r\nconst initialState: IUserGradeContestState = {\r\n    modificationState: UserGradeContestModificationStatus.None,\r\n    selectedUserGradeContest: null,\r\n    userGradeContests: []\r\n};\r\n\r\nfunction userGradeContestsReducer(state: IUserGradeContestState = initialState, action: IActionBase): IUserGradeContestState {\r\n    switch (action.type) {\r\n        case INITIAL_TUTORIAL_TEMPLATE: {\r\n            return { ...state, userGradeContests : [...state.userGradeContests, action.user_grade_contest]};\r\n        }\r\n        case ADD_TUTORIAL_TEMPLATE: {\r\n            return { ...state, userGradeContests: [...state.userGradeContests, action.user_grade_contest]};\r\n        }\r\n        case EDIT_TUTORIAL_TEMPLATE: {\r\n            const foundIndex: number = state.userGradeContests.findIndex(pr => pr.id === action.user_grade_contest.id);\r\n            let userGradeContests: IUserGradeContest[] = state.userGradeContests;\r\n            userGradeContests[foundIndex] = action.user_grade_contest;\r\n            return { ...state, userGradeContests: userGradeContests };\r\n        }\r\n        case REMOVE_TUTORIAL_TEMPLATE: {\r\n            return { ...state, userGradeContests: state.userGradeContests.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_TUTORIAL_TEMPLATE_ALL: {\r\n            return { ...state, userGradeContests: [] };\r\n        }\r\n        case CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT: {\r\n            return { ...state, selectedUserGradeContest: action.user_grade_contest };\r\n        }\r\n        case CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT: {\r\n            return { ...state, selectedUserGradeContest: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default userGradeContestsReducer;","export interface ITutorialTemplatePage {\r\n    id: string;\r\n    tutorial_template_id: string;\r\n    name: string;\r\n    description: string;\r\n    number: number;\r\n}\r\n\r\nexport enum TutorialTemplatePageModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITutorialTemplatePageState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TUTORIAL_TEMPLATE_PAGE, CHANGE_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT, EDIT_TUTORIAL_TEMPLATE_PAGE, REMOVE_TUTORIAL_TEMPLATE_PAGE,\r\n    CLEAR_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TUTORIAL_TEMPLATE_PAGE, REMOVE_TUTORIAL_TEMPLATE_PAGE_ALL} from \"../actions/tutorial_template_page.action\";\r\nimport { ITutorialTemplatePage, TutorialTemplatePageModificationStatus } from \"../models/tutorial_template_page.interface\";\r\n\r\n\r\n\r\nconst initialState: ITutorialTemplatePageState = {\r\n    modificationState: TutorialTemplatePageModificationStatus.None,\r\n    selectedTutorialTemplatePage: null,\r\n    tutorialTemplatePages: []\r\n};\r\n\r\nfunction tutorialTemplatePagesReducer(state: ITutorialTemplatePageState = initialState, action: IActionBase): ITutorialTemplatePageState {\r\n    switch (action.type) {\r\n        case INITIAL_TUTORIAL_TEMPLATE_PAGE: {\r\n            return { ...state, tutorialTemplatePages : [...state.tutorialTemplatePages, action.tutorial_template_page]};\r\n        }\r\n        case ADD_TUTORIAL_TEMPLATE_PAGE: {\r\n            return { ...state, tutorialTemplatePages: [...state.tutorialTemplatePages, action.tutorial_template_page]};\r\n        }\r\n        case EDIT_TUTORIAL_TEMPLATE_PAGE: {\r\n            const foundIndex: number = state.tutorialTemplatePages.findIndex(pr => pr.id === action.tutorial_template_page.id);\r\n            let tutorialTemplatePages: ITutorialTemplatePage[] = state.tutorialTemplatePages;\r\n            tutorialTemplatePages[foundIndex] = action.tutorial_template_page;\r\n            return { ...state, tutorialTemplatePages: tutorialTemplatePages };\r\n        }\r\n        case REMOVE_TUTORIAL_TEMPLATE_PAGE: {\r\n            return { ...state, tutorialTemplatePages: state.tutorialTemplatePages.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_TUTORIAL_TEMPLATE_PAGE_ALL: {\r\n            return { ...state, tutorialTemplatePages: [] };\r\n        }\r\n        case CHANGE_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT: {\r\n            return { ...state, selectedTutorialTemplatePage: action.tutorial_template_page };\r\n        }\r\n        case CLEAR_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT: {\r\n            return { ...state, selectedTutorialTemplatePage: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default tutorialTemplatePagesReducer;","import { ITeacherLeaveState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_LEAVES, EDIT_LEAVES, REMOVE_LEAVES,INITIAL_LEAVES, REMOVE_LEAVES_ALL, \r\n    ADD_ACCEPT_LEAVE, EDIT_ACCEPT_LEAVE, REMOVE_ACCEPT_LEAVE, INITIAL_ACCEPT_LEAVE, REMOVE_ACCEPT_LEAVE_ALL, \r\n    ADD_REMOVE_LEAVE, EDIT_REMOVE_LEAVE, REMOVE_REMOVE_LEAVE , INITIAL_REMOVE_LEAVE, REMOVE_REMOVE_LEAVE_ALL,\r\n    CHANGE_USER_PENDING_EDIT, CLEAR_USER_PENDING_EDIT, SET_MODIFICATION_STATE\r\n\r\n} from \"../actions/teacher_leave.action\";\r\nimport { ITeacherLeave, TeacherLeaveModificationStatus } from \"../models/teacher_leave.interface\";\r\n\r\nconst initialState: ITeacherLeaveState = {\r\n    modificationState: TeacherLeaveModificationStatus.None,\r\n    selectedTeacherLeave: null,\r\n    leaves: [],\r\n    acceptLeaves: [],\r\n    removeLeaves: []\r\n};\r\n\r\nfunction teacherLeaveReducer(state: ITeacherLeaveState = initialState, action: IActionBase): ITeacherLeaveState {\r\n    switch (action.type) {\r\n        case INITIAL_LEAVES: {\r\n            return { ...state, leaves : [...state.leaves, action.teacher_leave]};\r\n        }\r\n        case REMOVE_LEAVES_ALL: {\r\n            return { ...state, leaves: [] };\r\n        }\r\n        case ADD_LEAVES: {\r\n            return { ...state, leaves: [...state.leaves, action.teacher_leave]};\r\n        }\r\n        case EDIT_LEAVES: {\r\n            const foundIndex: number = state.leaves.findIndex(pr => pr.id === action.teacher_leave.id);\r\n            let leavess: ITeacherLeave[] = state.leaves;\r\n            leavess[foundIndex] = action.teacher_leave;\r\n            return { ...state, leaves: leavess };\r\n        }\r\n        case REMOVE_LEAVES: {\r\n            return { ...state, leaves: state.leaves.filter(x=>x.id !== action.teacher_leave.id)};\r\n        }\r\n\r\n        case INITIAL_ACCEPT_LEAVE: {\r\n            return { ...state, acceptLeaves : [...state.acceptLeaves, action.teacher_leave]};\r\n        }\r\n        case REMOVE_ACCEPT_LEAVE_ALL: {\r\n            return { ...state, acceptLeaves: [] };\r\n        }\r\n        case ADD_ACCEPT_LEAVE: {\r\n            return { ...state, acceptLeaves: [...state.acceptLeaves, action.teacher_leave]};\r\n        }\r\n        case EDIT_ACCEPT_LEAVE: {\r\n            const foundIndex: number = state.acceptLeaves.findIndex(pr => pr.id === action.teacher_leave.id);\r\n            let accept_leaves: ITeacherLeave[] = state.acceptLeaves;\r\n            accept_leaves[foundIndex] = action.teacher_leave;\r\n            return { ...state, acceptLeaves: accept_leaves };\r\n        }\r\n        case REMOVE_ACCEPT_LEAVE: {\r\n            return { ...state, acceptLeaves: state.acceptLeaves.filter(x=>x.id !== action.teacher_leave.id)};\r\n        }\r\n\r\n        case INITIAL_REMOVE_LEAVE: {\r\n            return { ...state, removeLeaves : [...state.removeLeaves, action.teacher_leave]};\r\n        }\r\n        case REMOVE_REMOVE_LEAVE_ALL: {\r\n            return { ...state, removeLeaves: [] };\r\n        }\r\n        case ADD_REMOVE_LEAVE: {\r\n            return { ...state, removeLeaves: [...state.removeLeaves, action.teacher_leave]};\r\n        }\r\n        case EDIT_REMOVE_LEAVE: {\r\n            const foundIndex: number = state.removeLeaves.findIndex(pr => pr.id === action.teacher_leave.id);\r\n            let remove_leaves: ITeacherLeave[] = state.removeLeaves;\r\n            remove_leaves[foundIndex] = action.teacher_leave;\r\n            return { ...state, removeLeaves: remove_leaves };\r\n        }\r\n        case REMOVE_REMOVE_LEAVE: {\r\n            return { ...state, removeLeaves: state.removeLeaves.filter(x=>x.id !== action.teacher_leave.id)};\r\n        }\r\n        \r\n        case CHANGE_USER_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherLeave: action.teacher_leave };\r\n        }\r\n        case CLEAR_USER_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherLeave: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default teacherLeaveReducer;","import { IStudentLeaveState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_STUDENT_LEAVE_NOT_APPROVED_NOW, EDIT_STUDENT_LEAVE_NOT_APPROVED_NOW, REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW,INITIAL_STUDENT_LEAVE_NOT_APPROVED_NOW, REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW_ALL, \r\n    ADD_STUDENT_LEAVE_APPROVED, EDIT_STUDENT_LEAVE_APPROVED, REMOVE_STUDENT_LEAVE_APPROVED, INITIAL_STUDENT_LEAVE_APPROVED, REMOVE_STUDENT_LEAVE_APPROVED_ALL, \r\n    ADD_STUDENT_LEAVE_NOT_APPROVED, EDIT_STUDENT_LEAVE_NOT_APPROVED, REMOVE_STUDENT_LEAVE_NOT_APPROVED , INITIAL_STUDENT_LEAVE_NOT_APPROVED, REMOVE_STUDENT_LEAVE_NOT_APPROVED_ALL,\r\n    CLEAR_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT, CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT, SET_MODIFICATION_STATE\r\n\r\n} from \"../actions/student_leave.action\";\r\nimport { IStudentLeave, StudentLeaveModificationStatus } from \"../models/student_leave.interface\";\r\n\r\nconst initialState: IStudentLeaveState = {\r\n    modificationState: StudentLeaveModificationStatus.None,\r\n    selectedStudentLeave: null,\r\n    leaves: [],\r\n    acceptLeaves: [],\r\n    removeLeaves: []\r\n};\r\n\r\nfunction studentLeaveReducer(state: IStudentLeaveState = initialState, action: IActionBase): IStudentLeaveState {\r\n    switch (action.type) {\r\n        case INITIAL_STUDENT_LEAVE_NOT_APPROVED_NOW: {\r\n            return { ...state, leaves : [...state.leaves, action.student_leave]};\r\n        }\r\n        case REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW_ALL: {\r\n            return { ...state, leaves: [] };\r\n        }\r\n        case ADD_STUDENT_LEAVE_NOT_APPROVED_NOW: {\r\n            return { ...state, leaves: [...state.leaves, action.student_leave]};\r\n        }\r\n        case EDIT_STUDENT_LEAVE_NOT_APPROVED_NOW: {\r\n            const foundIndex: number = state.leaves.findIndex(pr => pr.id === action.student_leave.id);\r\n            let leavess: IStudentLeave[] = state.leaves;\r\n            leavess[foundIndex] = action.student_leave;\r\n            return { ...state, leaves: leavess };\r\n        }\r\n        case REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW: {\r\n            return { ...state, leaves: state.leaves.filter(x=>x.id !== action.student_leave.id)};\r\n        }\r\n\r\n        case INITIAL_STUDENT_LEAVE_APPROVED: {\r\n            return { ...state, acceptLeaves : [...state.acceptLeaves, action.student_leave]};\r\n        }\r\n        case REMOVE_STUDENT_LEAVE_APPROVED_ALL: {\r\n            return { ...state, acceptLeaves: [] };\r\n        }\r\n        case ADD_STUDENT_LEAVE_APPROVED: {\r\n            return { ...state, acceptLeaves: [...state.acceptLeaves, action.student_leave]};\r\n        }\r\n        case EDIT_STUDENT_LEAVE_APPROVED: {\r\n            const foundIndex: number = state.acceptLeaves.findIndex(pr => pr.id === action.student_leave.id);\r\n            let accept_leaves: IStudentLeave[] = state.acceptLeaves;\r\n            accept_leaves[foundIndex] = action.student_leave;\r\n            return { ...state, acceptLeaves: accept_leaves };\r\n        }\r\n        case REMOVE_STUDENT_LEAVE_APPROVED: {\r\n            return { ...state, acceptLeaves: state.acceptLeaves.filter(x=>x.id !== action.student_leave.id)};\r\n        }\r\n\r\n        case INITIAL_STUDENT_LEAVE_NOT_APPROVED: {\r\n            return { ...state, removeLeaves : [...state.removeLeaves, action.student_leave]};\r\n        }\r\n        case REMOVE_STUDENT_LEAVE_NOT_APPROVED_ALL: {\r\n            return { ...state, removeLeaves: [] };\r\n        }\r\n        case ADD_STUDENT_LEAVE_NOT_APPROVED: {\r\n            return { ...state, removeLeaves: [...state.removeLeaves, action.student_leave]};\r\n        }\r\n        case EDIT_STUDENT_LEAVE_NOT_APPROVED: {\r\n            const foundIndex: number = state.removeLeaves.findIndex(pr => pr.id === action.student_leave.id);\r\n            let remove_leaves: IStudentLeave[] = state.removeLeaves;\r\n            remove_leaves[foundIndex] = action.student_leave;\r\n            return { ...state, removeLeaves: remove_leaves };\r\n        }\r\n        case REMOVE_STUDENT_LEAVE_NOT_APPROVED: {\r\n            return { ...state, removeLeaves: state.removeLeaves.filter(x=>x.id !== action.student_leave.id)};\r\n        }\r\n        \r\n        case CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedStudentLeave: action.student_leave };\r\n        }\r\n        case CLEAR_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedStudentLeave: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default studentLeaveReducer;","import { IMyClassState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_MY_CLASS, CHANGE_MY_CLASS_PENDING_EDIT, EDIT_MY_CLASS, REMOVE_MY_CLASS,\r\n    CLEAR_MY_CLASS_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_MY_CLASS, REMOVE_MY_CLASS_ALL} from \"../actions/my_class.action\";\r\nimport { IMyClass, MyClassModificationStatus } from \"../models/my_class.interface\";\r\n\r\n\r\n\r\nconst initialState: IMyClassState = {\r\n    modificationState: MyClassModificationStatus.None,\r\n    selectedMyClass: null,\r\n    myClasses: []\r\n};\r\n\r\nfunction myClassesReducer(state: IMyClassState = initialState, action: IActionBase): IMyClassState {\r\n    switch (action.type) {\r\n        case INITIAL_MY_CLASS: {\r\n            return { ...state, myClasses : [...state.myClasses, action.myclass]};\r\n        }\r\n        case ADD_MY_CLASS: {\r\n            return { ...state, myClasses: [...state.myClasses, action.myclass]};\r\n        }\r\n        case EDIT_MY_CLASS: {\r\n            const foundIndex: number = state.myClasses.findIndex(pr => pr.id === action.myclass.id);\r\n            let myClasses: IMyClass[] = state.myClasses;\r\n            myClasses[foundIndex] = action.myclass;\r\n            return { ...state, myClasses: myClasses };\r\n        }\r\n        case REMOVE_MY_CLASS: {\r\n            return { ...state, myClasses: state.myClasses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_MY_CLASS_ALL: {\r\n            return { ...state, myClasses: [] };\r\n        }\r\n        case CHANGE_MY_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedMyClass: action.myclass };\r\n        }\r\n        case CLEAR_MY_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedMyClass: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default myClassesReducer;","import { ITeacherRegisterQuantificationState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TEACHER_REGISTER_QUANTIFICATION_APPROVED, CHANGE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT, \r\n    EDIT_TEACHER_REGISTER_QUANTIFICATION_APPROVED, REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED,\r\n    CLEAR_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT,INITIAL_TEACHER_REGISTER_QUANTIFICATION_APPROVED, \r\n    REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_ALL,  \r\n    ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED, CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT, \r\n    EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED, REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED,\r\n    CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT,INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED, \r\n    REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_ALL,  \r\n    ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW, CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT, \r\n    EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW, REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW,\r\n    CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT,INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW, \r\n    REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_ALL, \r\n    SET_MODIFICATION_STATE} from \"../actions/teacher_register_quantification.action\";\r\nimport { ITeacherRegisterQuantification, TeacherRegisterQuantificationModificationStatus } from \"../models/teacher_register_quantification.interface\";\r\n\r\n\r\n\r\nconst initialState: ITeacherRegisterQuantificationState = {\r\n    modificationState: TeacherRegisterQuantificationModificationStatus.None,\r\n    selectedTeacherRegisterQuantification: null,\r\n    approveds: [],\r\n    not_approved_now: [],\r\n    not_approves: []\r\n};\r\n\r\nfunction teacher_register_quantificationsReducer(state: ITeacherRegisterQuantificationState = initialState, action: IActionBase): ITeacherRegisterQuantificationState {\r\n    switch (action.type) {\r\n        case INITIAL_TEACHER_REGISTER_QUANTIFICATION_APPROVED: {\r\n            return { ...state, approveds : [...state.approveds, action.teacher_register_quantification_approved]};\r\n        }\r\n        case ADD_TEACHER_REGISTER_QUANTIFICATION_APPROVED: {\r\n            return { ...state, approveds : [...state.approveds, action.teacher_register_quantification_approved]};\r\n        }\r\n        case EDIT_TEACHER_REGISTER_QUANTIFICATION_APPROVED: {\r\n            const foundIndex: number = state.approveds.findIndex(pr => pr.id === action.teacher_register_quantification_approved.id);\r\n            let approveds: ITeacherRegisterQuantification[] = state.approveds;\r\n            approveds[foundIndex] = action.teacher_register_quantification_approved;\r\n            return { ...state, approveds: approveds };\r\n        }\r\n        case REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED: {\r\n            return { ...state, approveds: state.approveds.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_ALL: {\r\n            return { ...state, approveds: [] };\r\n        }\r\n        case CHANGE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherRegisterQuantification: action.teacher_register_quantification_approved };\r\n        }\r\n        case CLEAR_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherRegisterQuantification: null };\r\n        }\r\n\r\n        case INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: {\r\n            return { ...state, not_approves : [...state.not_approves, action.teacher_register_quantification_not_approved]};\r\n        }\r\n        case ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: {\r\n            return { ...state, not_approves : [...state.not_approves, action.teacher_register_quantification_not_approved]};\r\n        }\r\n        case EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: {\r\n            const foundIndex: number = state.not_approves.findIndex(pr => pr.id === action.teacher_register_quantification_not_approved.id);\r\n            let not_approveds: ITeacherRegisterQuantification[] = state.not_approves;\r\n            not_approveds[foundIndex] = action.teacher_register_quantification_not_approved;\r\n            return { ...state, not_approves: not_approveds };\r\n        }\r\n        case REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: {\r\n            return { ...state, not_approves: state.not_approves.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_ALL: {\r\n            return { ...state, not_approves: [] };\r\n        }\r\n        case CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherRegisterQuantification: action.teacher_register_quantification_not_approved };\r\n        }\r\n        case CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherRegisterQuantification: null };\r\n        }\r\n\r\n\r\n        case INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: {\r\n            return { ...state, not_approved_now : [...state.not_approved_now, action.teacher_register_quantification_not_approved_now]};\r\n        }\r\n        case ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: {\r\n            return { ...state, not_approved_now : [...state.not_approved_now, action.teacher_register_quantification_not_approved_now]};\r\n        }\r\n        case EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: {\r\n            const foundIndex: number = state.not_approved_now.findIndex(pr => pr.id === action.teacher_register_quantification_not_approved_now.id);\r\n            let not_approved_now: ITeacherRegisterQuantification[] = state.not_approved_now;\r\n            not_approved_now[foundIndex] = action.teacher_register_quantification_not_approved_now;\r\n            return { ...state, not_approved_now: not_approved_now };\r\n        }\r\n        case REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: {\r\n            return { ...state, not_approved_now: state.not_approved_now.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_ALL: {\r\n            return { ...state, not_approved_now: [] };\r\n        }\r\n        case CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherRegisterQuantification: action.teacher_register_quantification_not_approved_now };\r\n        }\r\n        case CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherRegisterQuantification: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default teacher_register_quantificationsReducer;","export interface IInformationClass {\r\n    id: string,\r\n    name: string;\r\n    teacher: string;\r\n    security_code: string;\r\n    course: string;\r\n    art_age: string;\r\n    art_type: string;\r\n    art_level: string;\r\n    number_section: number;\r\n    number_student: number;\r\n}\r\n\r\nexport enum InformationClassModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IInformationClassState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_INFORMATION_CLASS, CHANGE_INFORMATION_CLASS_PENDING_EDIT, EDIT_INFORMATION_CLASS, REMOVE_INFORMATION_CLASS,\r\n    CLEAR_INFORMATION_CLASS_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_INFORMATION_CLASS, REMOVE_INFORMATION_CLASS_ALL} from \"../actions/information_class.action\";\r\nimport { IInformationClass, InformationClassModificationStatus } from \"../models/information_class.interface\";\r\n\r\n\r\n\r\nconst initialState: IInformationClassState = {\r\n    modificationState: InformationClassModificationStatus.None,\r\n    selectedInformationClass: null,\r\n    informationClasses: []\r\n};\r\n\r\nfunction informationClassesReducer(state: IInformationClassState = initialState, action: IActionBase): IInformationClassState {\r\n    switch (action.type) {\r\n        case INITIAL_INFORMATION_CLASS: {\r\n            return { ...state, informationClasses : [...state.informationClasses, action.information_class]};\r\n        }\r\n        case ADD_INFORMATION_CLASS: {\r\n            return { ...state, informationClasses: [...state.informationClasses, action.information_class]};\r\n        }\r\n        case EDIT_INFORMATION_CLASS: {\r\n            const foundIndex: number = state.informationClasses.findIndex(pr => pr.id === action.information_class.id);\r\n            let informationClasses: IInformationClass[] = state.informationClasses;\r\n            informationClasses[foundIndex] = action.information_class;\r\n            return { ...state, informationClasses: informationClasses };\r\n        }\r\n        case REMOVE_INFORMATION_CLASS: {\r\n            return { ...state, informationClasses: state.informationClasses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_INFORMATION_CLASS_ALL: {\r\n            return { ...state, informationClasses: [] };\r\n        }\r\n        case CHANGE_INFORMATION_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedInformationClass: action.information_class };\r\n        }\r\n        case CLEAR_INFORMATION_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedInformationClass: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default informationClassesReducer;","export interface ITimeSchedule {\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\n\r\nexport enum TimeScheduleModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITimeScheduleState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TIME_SCHEDULE, CHANGE_TIME_SCHEDULE_PENDING_EDIT, EDIT_TIME_SCHEDULE, REMOVE_TIME_SCHEDULE,\r\n    CLEAR_TIME_SCHEDULE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TIME_SCHEDULE, REMOVE_TIME_SCHEDULE_ALL} from \"../actions/time_schedule.action\";\r\nimport { ITimeSchedule, TimeScheduleModificationStatus } from \"../models/time_schedule.interface\";\r\n\r\n\r\n\r\nconst initialState: ITimeScheduleState = {\r\n    modificationState: TimeScheduleModificationStatus.None,\r\n    selectedTimeSchedule: null,\r\n    timeSchedules: []\r\n};\r\n\r\nfunction time_schedulesReducer(state: ITimeScheduleState = initialState, action: IActionBase): ITimeScheduleState {\r\n    switch (action.type) {\r\n        case INITIAL_TIME_SCHEDULE: {\r\n            return { ...state, timeSchedules : [...state.timeSchedules, action.time_schedule]};\r\n        }\r\n        case ADD_TIME_SCHEDULE: {\r\n            return { ...state, timeSchedules: [...state.timeSchedules, action.time_schedule]};\r\n        }\r\n        case EDIT_TIME_SCHEDULE: {\r\n            let time_schedules: ITimeSchedule[] = state.timeSchedules;\r\n            time_schedules[0] = action.time_schedule;\r\n            return { ...state, timeSchedules: time_schedules };\r\n        }\r\n        case REMOVE_TIME_SCHEDULE: {\r\n            return { ...state, timeSchedules: [] };\r\n        }\r\n        case REMOVE_TIME_SCHEDULE_ALL: {\r\n            return { ...state, timeSchedules: [] };\r\n        }\r\n        case CHANGE_TIME_SCHEDULE_PENDING_EDIT: {\r\n            return { ...state, selectedTimeSchedule: action.time_schedule };\r\n        }\r\n        case CLEAR_TIME_SCHEDULE_PENDING_EDIT: {\r\n            return { ...state, selectedTimeSchedule: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default time_schedulesReducer;","export interface ICourseTeacher {\r\n    id: string;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: string;\r\n    semester_class_id: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    semester_name: string;\r\n    image_url: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n    registration_deadline: string;\r\n}\r\n\r\nexport enum CourseTeacherModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICourseTeacherState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_REGISTER_SUCCESSFULL_COURSE, CHANGE_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT, EDIT_REGISTER_SUCCESSFULL_COURSE, REMOVE_REGISTER_SUCCESSFULL_COURSE,\r\n    CLEAR_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_REGISTER_SUCCESSFULL_COURSE, REMOVE_REGISTER_SUCCESSFULL_COURSE_ALL, INITIAL_NOT_REGISTER_COURSE, ADD_NOT_REGISTER_COURSE, EDIT_NOT_REGISTER_COURSE, REMOVE_NOT_REGISTER_COURSE, REMOVE_NOT_REGISTER_COURSE_ALL, CHANGE_NOT_REGISTER_COURSE_PENDING_EDIT, CLEAR_NOT_REGISTER_COURSE_PENDING_EDIT} from \"../actions/course_teacher.action\";\r\nimport { ICourseTeacher, CourseTeacherModificationStatus } from \"../models/course_teacher.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseTeacherState = {\r\n    modificationState: CourseTeacherModificationStatus.None,\r\n    selectedCourseTeacher: null,\r\n    register_successfull_courses: [],\r\n    not_register_courses: []\r\n};\r\n\r\nfunction courseTeachersReducer(state: ICourseTeacherState = initialState, action: IActionBase): ICourseTeacherState {\r\n    switch (action.type) {\r\n        case INITIAL_REGISTER_SUCCESSFULL_COURSE: {\r\n            return { ...state, register_successfull_courses : [...state.register_successfull_courses, action.course]};\r\n        }\r\n        case ADD_REGISTER_SUCCESSFULL_COURSE: {\r\n            return { ...state, register_successfull_courses: [...state.register_successfull_courses, action.course]};\r\n        }\r\n        case EDIT_REGISTER_SUCCESSFULL_COURSE: {\r\n            const foundIndex: number = state.register_successfull_courses.findIndex(pr => pr.id === action.course.id);\r\n            let register_successfull_courses: ICourseTeacher[] = state.register_successfull_courses;\r\n            register_successfull_courses[foundIndex] = action.course;\r\n            return { ...state, register_successfull_courses: register_successfull_courses };\r\n        }\r\n        case REMOVE_REGISTER_SUCCESSFULL_COURSE: {\r\n            return { ...state, register_successfull_courses: state.register_successfull_courses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_REGISTER_SUCCESSFULL_COURSE_ALL: {\r\n            return { ...state, register_successfull_courses: [] };\r\n        }\r\n        case CHANGE_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseTeacher: action.course };\r\n        }\r\n        case CLEAR_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseTeacher: null };\r\n        }\r\n\r\n        case INITIAL_NOT_REGISTER_COURSE: {\r\n            return { ...state, not_register_courses : [...state.not_register_courses, action.course]};\r\n        }\r\n        case ADD_NOT_REGISTER_COURSE: {\r\n            return { ...state, not_register_courses: [...state.not_register_courses, action.course]};\r\n        }\r\n        case EDIT_NOT_REGISTER_COURSE: {\r\n            const foundIndex: number = state.not_register_courses.findIndex(pr => pr.id === action.course.id);\r\n            let not_register_courses: ICourseTeacher[] = state.not_register_courses;\r\n            not_register_courses[foundIndex] = action.course;\r\n            return { ...state, not_register_courses: not_register_courses };\r\n        }\r\n        case REMOVE_NOT_REGISTER_COURSE: {\r\n            return { ...state, not_register_courses: state.not_register_courses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_NOT_REGISTER_COURSE_ALL: {\r\n            return { ...state, not_register_courses: [] };\r\n        }\r\n        case CHANGE_NOT_REGISTER_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseTeacher: action.course };\r\n        }\r\n        case CLEAR_NOT_REGISTER_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseTeacher: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default courseTeachersReducer;","export interface ITimeScheduleTeacher {\r\n    class_name: string;\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\n\r\nexport enum TimeScheduleTeacherModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITimeScheduleTeacherState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TIME_SCHEDULE_TEACHER, CHANGE_TIME_SCHEDULE_TEACHER_PENDING_EDIT, EDIT_TIME_SCHEDULE_TEACHER, REMOVE_TIME_SCHEDULE_TEACHER,\r\n    CLEAR_TIME_SCHEDULE_TEACHER_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TIME_SCHEDULE_TEACHER, REMOVE_TIME_SCHEDULE_TEACHER_ALL} from \"../actions/time_schedule_teacher.action\";\r\nimport { ITimeScheduleTeacher, TimeScheduleTeacherModificationStatus } from \"../models/time_schedule_teacher.interface\";\r\n\r\n\r\n\r\nconst initialState: ITimeScheduleTeacherState = {\r\n    modificationState: TimeScheduleTeacherModificationStatus.None,\r\n    selectedTimeScheduleTeacher: null,\r\n    timeScheduleTeachers: []\r\n};\r\n\r\nfunction time_schedule_teachersReducer(state: ITimeScheduleTeacherState = initialState, action: IActionBase): ITimeScheduleTeacherState {\r\n    switch (action.type) {\r\n        case INITIAL_TIME_SCHEDULE_TEACHER: {\r\n            return { ...state, timeScheduleTeachers : [...state.timeScheduleTeachers, action.time_schedule_teacher]};\r\n        }\r\n        case ADD_TIME_SCHEDULE_TEACHER: {\r\n            return { ...state, timeScheduleTeachers: [...state.timeScheduleTeachers, action.time_schedule_teacher]};\r\n        }\r\n        case EDIT_TIME_SCHEDULE_TEACHER: {\r\n            let time_schedule_teachers: ITimeScheduleTeacher[] = state.timeScheduleTeachers;\r\n            time_schedule_teachers[0] = action.time_schedule_teacher;\r\n            return { ...state, timeScheduleTeachers: time_schedule_teachers };\r\n        }\r\n        case REMOVE_TIME_SCHEDULE_TEACHER: {\r\n            return { ...state, timeScheduleTeachers: [] };\r\n        }\r\n        case REMOVE_TIME_SCHEDULE_TEACHER_ALL: {\r\n            return { ...state, timeScheduleTeachers: [] };\r\n        }\r\n        case CHANGE_TIME_SCHEDULE_TEACHER_PENDING_EDIT: {\r\n            return { ...state, selectedTimeScheduleTeacher: action.time_schedule_teacher };\r\n        }\r\n        case CLEAR_TIME_SCHEDULE_TEACHER_PENDING_EDIT: {\r\n            return { ...state, selectedTimeScheduleTeacher: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default time_schedule_teachersReducer;","import { IClassTeacherState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_DOING_CLASS, CHANGE_DOING_CLASS_PENDING_EDIT, EDIT_DOING_CLASS, REMOVE_DOING_CLASS,\r\n    CLEAR_DOING_CLASS_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_DOING_CLASS, REMOVE_DOING_CLASS_ALL, INITIAL_DONE_CLASS, ADD_DONE_CLASS, EDIT_DONE_CLASS, REMOVE_DONE_CLASS, REMOVE_DONE_CLASS_ALL, CHANGE_DONE_CLASS_PENDING_EDIT, CLEAR_DONE_CLASS_PENDING_EDIT} from \"../actions/class_teacher.action\";\r\nimport { IClassTeacher, ClassTeacherModificationStatus } from \"../models/class_teacher.interface\";\r\n\r\n\r\n\r\nconst initialState: IClassTeacherState = {\r\n    modificationState: ClassTeacherModificationStatus.None,\r\n    selectedClassTeacher: null,\r\n    class_doing: [],\r\n    class_done: []\r\n};\r\n\r\nfunction classTeachersReducer(state: IClassTeacherState = initialState, action: IActionBase): IClassTeacherState {\r\n    switch (action.type) {\r\n        case INITIAL_DOING_CLASS: {\r\n            return { ...state, class_doing : [...state.class_doing, action.class_teacher]};\r\n        }\r\n        case ADD_DOING_CLASS: {\r\n            return { ...state, class_doing: [...state.class_doing, action.class_teacher]};\r\n        }\r\n        case EDIT_DOING_CLASS: {\r\n            const foundIndex: number = state.class_doing.findIndex(pr => pr.id === action.class_teacher.id);\r\n            let class_doing: IClassTeacher[] = state.class_doing;\r\n            class_doing[foundIndex] = action.class_teacher;\r\n            return { ...state, class_doing: class_doing };\r\n        }\r\n        case REMOVE_DOING_CLASS: {\r\n            return { ...state, class_doing: state.class_doing.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DOING_CLASS_ALL: {\r\n            return { ...state, class_doing: [] };\r\n        }\r\n        case CHANGE_DOING_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassTeacher: action.class_teacher };\r\n        }\r\n        case CLEAR_DOING_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassTeacher: null };\r\n        }\r\n\r\n        case INITIAL_DONE_CLASS: {\r\n            return { ...state, class_done : [...state.class_done, action.class_teacher]};\r\n        }\r\n        case ADD_DONE_CLASS: {\r\n            return { ...state, class_done: [...state.class_done, action.class_teacher]};\r\n        }\r\n        case EDIT_DONE_CLASS: {\r\n            const foundIndex: number = state.class_done.findIndex(pr => pr.id === action.class_teacher.id);\r\n            let class_done: IClassTeacher[] = state.class_done;\r\n            class_done[foundIndex] = action.class_teacher;\r\n            return { ...state, class_done: class_done };\r\n        }\r\n        case REMOVE_DONE_CLASS: {\r\n            return { ...state, class_done: state.class_done.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DONE_CLASS_ALL: {\r\n            return { ...state, class_done: [] };\r\n        }\r\n        case CHANGE_DONE_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassTeacher: action.class_teacher };\r\n        }\r\n        case CLEAR_DONE_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassTeacher: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default classTeachersReducer;","export interface IContestTeacher{\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    total_contest_submission: number;\r\n    total_contest_submission_graded: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n}\r\n\r\nexport enum ContestTeacherModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IContestTeacherState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CONTEST_TEACHER_OPENING, CHANGE_CONTEST_TEACHER_OPENING_PENDING_EDIT, EDIT_CONTEST_TEACHER_OPENING, REMOVE_CONTEST_TEACHER_OPENING,\r\n    CLEAR_CONTEST_TEACHER_OPENING_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_CONTEST_TEACHER_OPENING, REMOVE_CONTEST_TEACHER_OPENING_ALL, INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, ADD_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, EDIT_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_ALL, CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT, CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT, INITIAL_CONTEST_TEACHER_END, EDIT_CONTEST_TEACHER_END, ADD_CONTEST_TEACHER_END, REMOVE_CONTEST_TEACHER_END, REMOVE_CONTEST_TEACHER_END_ALL, CHANGE_CONTEST_TEACHER_END_PENDING_EDIT, CLEAR_CONTEST_TEACHER_END_PENDING_EDIT, INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW, ADD_CONTEST_TEACHER_NOT_OPEN_NOW, EDIT_CONTEST_TEACHER_NOT_OPEN_NOW, REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW, REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_ALL, CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT, CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT} from \"../actions/contest_teacher.action\";\r\nimport { IContestTeacher, ContestTeacherModificationStatus } from \"../models/contest_teacher.interface\";\r\n\r\n\r\n\r\nconst initialState: IContestTeacherState = {\r\n    modificationState: ContestTeacherModificationStatus.None,\r\n    selectedContestTeacher: null,\r\n    contest_opening: [],\r\n    contest_not_open_now: [],\r\n    contest_end: [],\r\n    contest_not_open_now_not_teacher: []\r\n};\r\n\r\nfunction contestTeachersReducer(state: IContestTeacherState = initialState, action: IActionBase): IContestTeacherState {\r\n    switch (action.type) {\r\n        case INITIAL_CONTEST_TEACHER_OPENING: {\r\n            return { ...state, contest_opening : [...state.contest_opening, action.contest]};\r\n        }\r\n        case ADD_CONTEST_TEACHER_OPENING: {\r\n            return { ...state, contest_opening: [...state.contest_opening, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_TEACHER_OPENING: {\r\n            const foundIndex: number = state.contest_opening.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_opening: IContestTeacher[] = state.contest_opening;\r\n            contest_opening[foundIndex] = action.contest;\r\n            return { ...state, contest_opening: contest_opening };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_OPENING: {\r\n            return { ...state, contest_opening: state.contest_opening.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_OPENING_ALL: {\r\n            return { ...state, contest_opening: [] };\r\n        }\r\n        case CHANGE_CONTEST_TEACHER_OPENING_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_TEACHER_OPENING_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: null };\r\n        }\r\n\r\n\r\n        case INITIAL_CONTEST_TEACHER_END: {\r\n            return { ...state, contest_end : [...state.contest_end, action.contest]};\r\n        }\r\n        case ADD_CONTEST_TEACHER_END: {\r\n            return { ...state, contest_end: [...state.contest_end, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_TEACHER_END: {\r\n            const foundIndex: number = state.contest_end.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_end: IContestTeacher[] = state.contest_end;\r\n            contest_end[foundIndex] = action.contest;\r\n            return { ...state, contest_end: contest_end };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_END: {\r\n            return { ...state, contest_end: state.contest_end.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_END_ALL: {\r\n            return { ...state, contest_end: [] };\r\n        }\r\n        case CHANGE_CONTEST_TEACHER_END_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_TEACHER_END_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: null };\r\n        }\r\n\r\n\r\n\r\n        case INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now : [...state.contest_not_open_now, action.contest]};\r\n        }\r\n        case ADD_CONTEST_TEACHER_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now: [...state.contest_not_open_now, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_TEACHER_NOT_OPEN_NOW: {\r\n            const foundIndex: number = state.contest_not_open_now.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_not_open_now: IContestTeacher[] = state.contest_not_open_now;\r\n            contest_not_open_now[foundIndex] = action.contest;\r\n            return { ...state, contest_not_open_now: contest_not_open_now };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now: state.contest_not_open_now.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_ALL: {\r\n            return { ...state, contest_not_open_now: [] };\r\n        }\r\n        case CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: null };\r\n        }\r\n\r\n\r\n\r\n        case INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: {\r\n            return { ...state, contest_not_open_now_not_teacher : [...state.contest_not_open_now_not_teacher, action.contest]};\r\n        }\r\n        case ADD_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: {\r\n            return { ...state, contest_not_open_now_not_teacher: [...state.contest_not_open_now_not_teacher, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: {\r\n            const foundIndex: number = state.contest_not_open_now_not_teacher.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_not_open_now_not_teacher: IContestTeacher[] = state.contest_not_open_now_not_teacher;\r\n            contest_not_open_now_not_teacher[foundIndex] = action.contest;\r\n            return { ...state, contest_not_open_now_not_teacher: contest_not_open_now_not_teacher };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: {\r\n            return { ...state, contest_not_open_now_not_teacher: state.contest_not_open_now_not_teacher.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_ALL: {\r\n            return { ...state, contest_not_open_now_not_teacher: [] };\r\n        }\r\n        case CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default contestTeachersReducer;","import { ISemesterClassState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SEMESTER_CLASS, CHANGE_SEMESTER_CLASS_PENDING_EDIT, EDIT_SEMESTER_CLASS, REMOVE_SEMESTER_CLASS,\r\n    CLEAR_SEMESTER_CLASS_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SEMESTER_CLASS, REMOVE_SEMESTER_CLASS_ALL} from \"../actions/semester_class.action\";\r\nimport { ISemesterClass, SemesterClassModificationStatus } from \"../models/semester_class.interface\";\r\n\r\n\r\n\r\nconst initialState: ISemesterClassState = {\r\n    modificationState: SemesterClassModificationStatus.None,\r\n    selectedSemesterClass: null,\r\n    semesterClasses: []\r\n};\r\n\r\nfunction semesterClassesReducer(state: ISemesterClassState = initialState, action: IActionBase): ISemesterClassState {\r\n    switch (action.type) {\r\n        case INITIAL_SEMESTER_CLASS: {\r\n            return { ...state, semesterClasses : [...state.semesterClasses, action.semester_class]};\r\n        }\r\n        case ADD_SEMESTER_CLASS: {\r\n            return { ...state, semesterClasses: [...state.semesterClasses, action.semester_class]};\r\n        }\r\n        case EDIT_SEMESTER_CLASS: {\r\n            const foundIndex: number = state.semesterClasses.findIndex(pr => pr.id === action.semester_class.id);\r\n            let semesterClasses: ISemesterClass[] = state.semesterClasses;\r\n            semesterClasses[foundIndex] = action.semester_class;\r\n            return { ...state, semesterClasses: semesterClasses };\r\n        }\r\n        case REMOVE_SEMESTER_CLASS: {\r\n            return { ...state, semesterClasses: state.semesterClasses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SEMESTER_CLASS_ALL: {\r\n            return { ...state, semesterClasses: [] };\r\n        }\r\n        case CHANGE_SEMESTER_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClass: action.semester_class };\r\n        }\r\n        case CLEAR_SEMESTER_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClass: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default semesterClassesReducer;","import { IAnonymousNotificationState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_ANONYMOUS_NOTIFICATION, CHANGE_ANONYMOUS_NOTIFICATION_PENDING_EDIT, EDIT_ANONYMOUS_NOTIFICATION, REMOVE_ANONYMOUS_NOTIFICATION,\r\n    CLEAR_ANONYMOUS_NOTIFICATION_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_ANONYMOUS_NOTIFICATION, REMOVE_ANONYMOUS_NOTIFICATION_ALL} from \"../actions/anonymous_notification.action\";\r\nimport { IAnonymousNotification, AnonymousNotificationModificationStatus } from \"../models/anonymous_notification.interface\";\r\n\r\n\r\n\r\nconst initialState: IAnonymousNotificationState = {\r\n    modificationState: AnonymousNotificationModificationStatus.None,\r\n    selectedAnonymousNotification: null,\r\n    notifications: []\r\n};\r\n\r\nfunction anonymousNotificationsReducer(state: IAnonymousNotificationState = initialState, action: IActionBase): IAnonymousNotificationState {\r\n    switch (action.type) {\r\n        case INITIAL_ANONYMOUS_NOTIFICATION: {\r\n            return { ...state, notifications : [...state.notifications, action.anonymous_notification]};\r\n        }\r\n        case ADD_ANONYMOUS_NOTIFICATION: {\r\n            return { ...state, notifications: [...state.notifications, action.anonymous_notification]};\r\n        }\r\n        case EDIT_ANONYMOUS_NOTIFICATION: {\r\n            const foundIndex: number = state.notifications.findIndex(pr => pr.id === action.anonymous_notification.id);\r\n            let notifications: IAnonymousNotification[] = state.notifications;\r\n            notifications[foundIndex] = action.anonymous_notification;\r\n            return { ...state, notifications: notifications };\r\n        }\r\n        case REMOVE_ANONYMOUS_NOTIFICATION: {\r\n            return { ...state, notifications: state.notifications.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_ANONYMOUS_NOTIFICATION_ALL: {\r\n            return { ...state, notifications: [] };\r\n        }\r\n        case CHANGE_ANONYMOUS_NOTIFICATION_PENDING_EDIT: {\r\n            return { ...state, selectedAnonymousNotification: action.anonymous_notification };\r\n        }\r\n        case CLEAR_ANONYMOUS_NOTIFICATION_PENDING_EDIT: {\r\n            return { ...state, selectedAnonymousNotification: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default anonymousNotificationsReducer;","export interface ISection {\r\n    id: string;\r\n    class_id: string;\r\n    name: string;\r\n    number: number;\r\n    teacher_name: string;\r\n    teach_form: boolean;\r\n    recording: string;\r\n    message: string;\r\n}\r\n\r\nexport enum SectionModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ISectionState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SECTION, CHANGE_SECTION_PENDING_EDIT, EDIT_SECTION, REMOVE_SECTION,\r\n    CLEAR_SECTION_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SECTION, REMOVE_SECTION_ALL} from \"../actions/section.action\";\r\nimport { ISection, SectionModificationStatus } from \"../models/section.interface\";\r\n\r\n\r\n\r\nconst initialState: ISectionState = {\r\n    modificationState: SectionModificationStatus.None,\r\n    selectedSection: null,\r\n    sections: []\r\n};\r\n\r\nfunction sectionsReducer(state: ISectionState = initialState, action: IActionBase): ISectionState {\r\n    switch (action.type) {\r\n        case INITIAL_SECTION: {\r\n            return { ...state, sections : [...state.sections, action.section]};\r\n        }\r\n        case ADD_SECTION: {\r\n            return { ...state, sections: [...state.sections, action.section]};\r\n        }\r\n        case EDIT_SECTION: {\r\n            const foundIndex: number = state.sections.findIndex(pr => pr.id === action.section.id);\r\n            let sections: ISection[] = state.sections;\r\n            sections[foundIndex] = action.section;\r\n            return { ...state, sections: sections };\r\n        }\r\n        case REMOVE_SECTION: {\r\n            return { ...state, sections: state.sections.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SECTION_ALL: {\r\n            return { ...state, sections: [] };\r\n        }\r\n        case CHANGE_SECTION_PENDING_EDIT: {\r\n            return { ...state, selectedSection: action.section };\r\n        }\r\n        case CLEAR_SECTION_PENDING_EDIT: {\r\n            return { ...state, selectedSection: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default sectionsReducer;","export interface ITutorialPage {\r\n    id: string;\r\n    tutorial_id: string;\r\n    name: string;\r\n    description: string;\r\n    number: number;\r\n}\r\n\r\nexport enum TutorialPageModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITutorialPageState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TUTORIAL_PAGE, CHANGE_TUTORIAL_PAGE_PENDING_EDIT, EDIT_TUTORIAL_PAGE, REMOVE_TUTORIAL_PAGE,\r\n    CLEAR_TUTORIAL_PAGE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TUTORIAL_PAGE, REMOVE_TUTORIAL_PAGE_ALL, REMOVE_TUTORIAL_PAGE_BY_NUMBER} from \"../actions/tutorial_page.action\";\r\nimport { ITutorialPage, TutorialPageModificationStatus } from \"../models/tutorial_page.interface\";\r\n\r\n\r\n\r\nconst initialState: ITutorialPageState = {\r\n    modificationState: TutorialPageModificationStatus.None,\r\n    selectedTutorialPage: null,\r\n    tutorialPages: []\r\n};\r\n\r\nfunction tutorialPagesReducer(state: ITutorialPageState = initialState, action: IActionBase): ITutorialPageState {\r\n    switch (action.type) {\r\n        case INITIAL_TUTORIAL_PAGE: {\r\n            return { ...state, tutorialPages : [...state.tutorialPages, action.tutorial_page]};\r\n        }\r\n        case ADD_TUTORIAL_PAGE: {\r\n            return { ...state, tutorialPages: [...state.tutorialPages, action.tutorial_page]};\r\n        }\r\n        case EDIT_TUTORIAL_PAGE: {\r\n            const foundIndex: number = state.tutorialPages.findIndex(pr => pr.id === action.tutorial_page.id);\r\n            let tutorialPages: ITutorialPage[] = state.tutorialPages;\r\n            tutorialPages[foundIndex] = action.tutorial_page;\r\n            return { ...state, tutorialPages: tutorialPages };\r\n        }\r\n        case REMOVE_TUTORIAL_PAGE: {\r\n            return { ...state, tutorialPages: state.tutorialPages.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_TUTORIAL_PAGE_BY_NUMBER: {\r\n            return { ...state, tutorialPages: state.tutorialPages.filter(pr => pr.number !== action.number) };\r\n        }\r\n        case REMOVE_TUTORIAL_PAGE_ALL: {\r\n            return { ...state, tutorialPages: [] };\r\n        }\r\n        case CHANGE_TUTORIAL_PAGE_PENDING_EDIT: {\r\n            return { ...state, selectedTutorialPage: action.tutorial_page };\r\n        }\r\n        case CLEAR_TUTORIAL_PAGE_PENDING_EDIT: {\r\n            return { ...state, selectedTutorialPage: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default tutorialPagesReducer;","import { IExerciseState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_EXERCISE, CHANGE_EXERCISE_PENDING_EDIT, EDIT_EXERCISE, REMOVE_EXERCISE,\r\n    CLEAR_EXERCISE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_EXERCISE, REMOVE_EXERCISE_ALL} from \"../actions/exercise.action\";\r\nimport { IExercise, ExerciseModificationStatus } from \"../models/exercise.interface\";\r\n\r\n\r\n\r\nconst initialState: IExerciseState = {\r\n    modificationState: ExerciseModificationStatus.None,\r\n    selectedExercise: null,\r\n    exercises: []\r\n};\r\n\r\nfunction exercisesReducer(state: IExerciseState = initialState, action: IActionBase): IExerciseState {\r\n    switch (action.type) {\r\n        case INITIAL_EXERCISE: {\r\n            return { ...state, exercises : [...state.exercises, action.exercise]};\r\n        }\r\n        case ADD_EXERCISE: {\r\n            return { ...state, exercises: [...state.exercises, action.exercise]};\r\n        }\r\n        case EDIT_EXERCISE: {\r\n            const foundIndex: number = state.exercises.findIndex(pr => pr.id === action.exercise.id);\r\n            let exercises: IExercise[] = state.exercises;\r\n            exercises[foundIndex] = action.exercise;\r\n            return { ...state, exercises: exercises };\r\n        }\r\n        case REMOVE_EXERCISE: {\r\n            return { ...state, exercises: state.exercises.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_EXERCISE_ALL: {\r\n            return { ...state, exercises: [] };\r\n        }\r\n        case CHANGE_EXERCISE_PENDING_EDIT: {\r\n            return { ...state, selectedExercise: action.exercise };\r\n        }\r\n        case CLEAR_EXERCISE_PENDING_EDIT: {\r\n            return { ...state, selectedExercise: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default exercisesReducer;","export interface IExerciseSubmission {\r\n    id: string;\r\n    student_id: string;\r\n    exercise_id: string;\r\n    student_name: string;\r\n    exercise_name: string;\r\n    image_url: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ExerciseSubmissionModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IExerciseSubmissionState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_EXERCISE_SUBMISSION_NOT_GRADED, CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT, EDIT_EXERCISE_SUBMISSION_NOT_GRADED, REMOVE_EXERCISE_SUBMISSION_NOT_GRADED,\r\n    CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_EXERCISE_SUBMISSION_NOT_GRADED, REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL, INITIAL_EXERCISE_SUBMISSION_GRADED, ADD_EXERCISE_SUBMISSION_GRADED, EDIT_EXERCISE_SUBMISSION_GRADED, REMOVE_EXERCISE_SUBMISSION_GRADED, REMOVE_EXERCISE_SUBMISSION_GRADED_ALL, CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT, CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT} from \"../actions/exercise_submission.action\";\r\nimport { IExerciseSubmission, ExerciseSubmissionModificationStatus } from \"../models/exercise_submission.interface\";\r\n\r\n\r\n\r\nconst initialState: IExerciseSubmissionState = {\r\n    modificationState: ExerciseSubmissionModificationStatus.None,\r\n    selectedExerciseSubmission: null,\r\n    exercise_not_gradeds: [],\r\n    exercise_gradeds: []\r\n};\r\n\r\nfunction exerciseSubmissionsReducer(state: IExerciseSubmissionState = initialState, action: IActionBase): IExerciseSubmissionState {\r\n    switch (action.type) {\r\n        case INITIAL_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            return { ...state, exercise_not_gradeds : [...state.exercise_not_gradeds, action.exercise_submission]};\r\n        }\r\n        case ADD_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            return { ...state, exercise_not_gradeds: [...state.exercise_not_gradeds, action.exercise_submission]};\r\n        }\r\n        case EDIT_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            const foundIndex: number = state.exercise_not_gradeds.findIndex(pr => pr.id === action.exercise_submission.id);\r\n            let exercise_not_gradeds: IExerciseSubmission[] = state.exercise_not_gradeds;\r\n            exercise_not_gradeds[foundIndex] = action.exercise_submission;\r\n            return { ...state, exercise_not_gradeds: exercise_not_gradeds };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            return { ...state, exercise_not_gradeds: state.exercise_not_gradeds.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL: {\r\n            return { ...state, exercise_not_gradeds: [] };\r\n        }\r\n        case CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedExerciseSubmission: action.exercise_submission };\r\n        }\r\n        case CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedExerciseSubmission: null };\r\n        }\r\n\r\n        case INITIAL_EXERCISE_SUBMISSION_GRADED: {\r\n            return { ...state, exercise_gradeds : [...state.exercise_gradeds, action.exercise_submission]};\r\n        }\r\n        case ADD_EXERCISE_SUBMISSION_GRADED: {\r\n            return { ...state, exercise_gradeds: [...state.exercise_gradeds, action.exercise_submission]};\r\n        }\r\n        case EDIT_EXERCISE_SUBMISSION_GRADED: {\r\n            const foundIndex: number = state.exercise_gradeds.findIndex(pr => pr.id === action.exercise_submission.id);\r\n            let exercise_gradeds: IExerciseSubmission[] = state.exercise_gradeds;\r\n            exercise_gradeds[foundIndex] = action.exercise_submission;\r\n            return { ...state, exercise_gradeds: exercise_gradeds };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_GRADED: {\r\n            return { ...state, exercise_gradeds: state.exercise_gradeds.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_GRADED_ALL: {\r\n            return { ...state, exercise_gradeds: [] };\r\n        }\r\n        case CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedExerciseSubmission: action.exercise_submission };\r\n        }\r\n        case CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedExerciseSubmission: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default exerciseSubmissionsReducer;","export interface ITurnover {\r\n    turnover: number;\r\n}\r\n\r\nexport enum TurnoverModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITurnoverState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TURNOVER_NOW, CHANGE_TURNOVER_NOW_PENDING_EDIT, EDIT_TURNOVER_NOW, REMOVE_TURNOVER_NOW,\r\n    CLEAR_TURNOVER_NOW_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TURNOVER_NOW, REMOVE_TURNOVER_NOW_ALL, INITIAL_TURNOVER_LAST, ADD_TURNOVER_LAST, EDIT_TURNOVER_LAST, REMOVE_TURNOVER_LAST, REMOVE_TURNOVER_LAST_ALL, CHANGE_TURNOVER_LAST_PENDING_EDIT, CLEAR_TURNOVER_LAST_PENDING_EDIT} from \"../actions/turnover.action\";\r\nimport { ITurnover, TurnoverModificationStatus } from \"../models/turnover.interface\";\r\n\r\n\r\n\r\nconst initialState: ITurnoverState = {\r\n    modificationState: TurnoverModificationStatus.None,\r\n    selectedTurnover: null,\r\n    turnover_now: [],\r\n    turnover_last: []\r\n};\r\n\r\nfunction turnoversReducer(state: ITurnoverState = initialState, action: IActionBase): ITurnoverState {\r\n    switch (action.type) {\r\n        case INITIAL_TURNOVER_NOW: {\r\n            return { ...state, turnover_now : [...state.turnover_now, action.turnover]};\r\n        }\r\n        case ADD_TURNOVER_NOW: {\r\n            return { ...state, turnover_now: [...state.turnover_now, action.turnover]};\r\n        }\r\n        case EDIT_TURNOVER_NOW: {\r\n            const foundIndex: number = state.turnover_now.findIndex(pr => pr.turnover === action.turnover.turnover);\r\n            let turnover_now: ITurnover[] = state.turnover_now;\r\n            turnover_now[foundIndex] = action.turnover;\r\n            return { ...state, turnover_now: turnover_now };\r\n        }\r\n        case REMOVE_TURNOVER_NOW: {\r\n            return { ...state, turnover_now: state.turnover_now.filter(pr => pr.turnover !== action.turnover) };\r\n        }\r\n        case REMOVE_TURNOVER_NOW_ALL: {\r\n            return { ...state, turnover_now: [] };\r\n        }\r\n        case CHANGE_TURNOVER_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedTurnover: action.turnover };\r\n        }\r\n        case CLEAR_TURNOVER_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedTurnover: null };\r\n        }\r\n\r\n        case INITIAL_TURNOVER_LAST: {\r\n            return { ...state, turnover_last : [...state.turnover_last, action.turnover]};\r\n        }\r\n        case ADD_TURNOVER_LAST: {\r\n            return { ...state, turnover_last: [...state.turnover_last, action.turnover]};\r\n        }\r\n        case EDIT_TURNOVER_LAST: {\r\n            const foundIndex: number = state.turnover_last.findIndex(pr => pr.turnover === action.turnover.turnover);\r\n            let turnover_last: ITurnover[] = state.turnover_last;\r\n            turnover_last[foundIndex] = action.turnover;\r\n            return { ...state, turnover_last: turnover_last };\r\n        }\r\n        case REMOVE_TURNOVER_LAST: {\r\n            return { ...state, turnover_last: state.turnover_last.filter(pr => pr.turnover !== action.turnover) };\r\n        }\r\n        case REMOVE_TURNOVER_LAST_ALL: {\r\n            return { ...state, turnover_last: [] };\r\n        }\r\n        case CHANGE_TURNOVER_LAST_PENDING_EDIT: {\r\n            return { ...state, selectedTurnover: action.turnover };\r\n        }\r\n        case CLEAR_TURNOVER_LAST_PENDING_EDIT: {\r\n            return { ...state, selectedTurnover: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default turnoversReducer;","export interface IReportUser {\r\n    total: number;\r\n}\r\n\r\nexport enum ReportUserModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2\r\n}","import { IReportUserState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_REPORT_USER, CHANGE_REPORT_USER_PENDING_EDIT, EDIT_REPORT_USER, REMOVE_REPORT_USER,\r\n    CLEAR_REPORT_USER_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_REPORT_USER, REMOVE_REPORT_USER_ALL} from \"../actions/report_user.action\";\r\nimport { IReportUser, ReportUserModificationStatus } from \"../models/report_user.interface\";\r\n\r\n\r\n\r\nconst initialState: IReportUserState = {\r\n    modificationState: ReportUserModificationStatus.None,\r\n    selectedReportUser: null,\r\n    report_users: []\r\n};\r\n\r\nfunction report_usersReducer(state: IReportUserState = initialState, action: IActionBase): IReportUserState {\r\n    switch (action.type) {\r\n        case INITIAL_REPORT_USER: {\r\n            return { ...state, report_users : [...state.report_users, action.report_user]};\r\n        }\r\n        case ADD_REPORT_USER: {\r\n            return { ...state, report_users: [...state.report_users, action.report_user]};\r\n        }\r\n        case EDIT_REPORT_USER: {\r\n            const foundIndex: number = state.report_users.findIndex(pr => pr.total === action.report_user.id);\r\n            let report_users: IReportUser[] = state.report_users;\r\n            report_users[foundIndex] = action.report_user;\r\n            return { ...state, report_users: report_users };\r\n        }\r\n        case REMOVE_REPORT_USER: {\r\n            return { ...state, report_users: state.report_users.filter(pr => pr.total !== action.id) };\r\n        }\r\n        case REMOVE_REPORT_USER_ALL: {\r\n            return { ...state, report_users: [] };\r\n        }\r\n        case CHANGE_REPORT_USER_PENDING_EDIT: {\r\n            return { ...state, selectedReportUser: action.report_user };\r\n        }\r\n        case CLEAR_REPORT_USER_PENDING_EDIT: {\r\n            return { ...state, selectedReportUser: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default report_usersReducer;","export interface ICourseReport {\r\n    total_register: number;\r\n    name: string;\r\n}\r\n\r\nexport enum CourseReportModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICourseReportState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_COURSE_REPORT, CHANGE_COURSE_REPORT_PENDING_EDIT, EDIT_COURSE_REPORT, REMOVE_COURSE_REPORT,\r\n    CLEAR_COURSE_REPORT_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_COURSE_REPORT, REMOVE_COURSE_REPORT_ALL} from \"../actions/course_report.action\";\r\nimport { ICourseReport, CourseReportModificationStatus } from \"../models/course_report.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseReportState = {\r\n    modificationState: CourseReportModificationStatus.None,\r\n    selectedCourseReport: null,\r\n    course_reports: []\r\n};\r\n\r\nfunction course_reportsReducer(state: ICourseReportState = initialState, action: IActionBase): ICourseReportState {\r\n    switch (action.type) {\r\n        case INITIAL_COURSE_REPORT: {\r\n            return { ...state, course_reports : [...state.course_reports, action.course_report]};\r\n        }\r\n        case ADD_COURSE_REPORT: {\r\n            return { ...state, course_reports: [...state.course_reports, action.course_report]};\r\n        }\r\n        case EDIT_COURSE_REPORT: {\r\n            const foundIndex: number = state.course_reports.findIndex(pr => pr.total_register === action.course_report.id);\r\n            let course_reports: ICourseReport[] = state.course_reports;\r\n            course_reports[foundIndex] = action.course_report;\r\n            return { ...state, course_reports: course_reports };\r\n        }\r\n        case REMOVE_COURSE_REPORT: {\r\n            return { ...state, course_reports: state.course_reports.filter(pr => pr.total_register !== action.id) };\r\n        }\r\n        case REMOVE_COURSE_REPORT_ALL: {\r\n            return { ...state, course_reports: [] };\r\n        }\r\n        case CHANGE_COURSE_REPORT_PENDING_EDIT: {\r\n            return { ...state, selectedCourseReport: action.course_report };\r\n        }\r\n        case CLEAR_COURSE_REPORT_PENDING_EDIT: {\r\n            return { ...state, selectedCourseReport: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default course_reportsReducer;","export interface IExerciseLevel {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    weight: number;\r\n}\r\n\r\nexport enum ExerciseLevelModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IExerciseLevelState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_EXERCISE_LEVEL, CHANGE_EXERCISE_LEVEL_PENDING_EDIT, EDIT_EXERCISE_LEVEL, REMOVE_EXERCISE_LEVEL,\r\n    CLEAR_EXERCISE_LEVEL_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_EXERCISE_LEVEL, REMOVE_EXERCISE_LEVEL_ALL} from \"../actions/exercise_level.action\";\r\nimport { IExerciseLevel, ExerciseLevelModificationStatus } from \"../models/exercise_level.interface\";\r\n\r\n\r\n\r\nconst initialState: IExerciseLevelState = {\r\n    modificationState: ExerciseLevelModificationStatus.None,\r\n    selectedExerciseLevel: null,\r\n    exercise_levels: []\r\n};\r\n\r\nfunction exercise_levelsReducer(state: IExerciseLevelState = initialState, action: IActionBase): IExerciseLevelState {\r\n    switch (action.type) {\r\n        case INITIAL_EXERCISE_LEVEL: {\r\n            return { ...state, exercise_levels : [...state.exercise_levels, action.exercise_level]};\r\n        }\r\n        case ADD_EXERCISE_LEVEL: {\r\n            return { ...state, exercise_levels: [...state.exercise_levels, action.exercise_level]};\r\n        }\r\n        case EDIT_EXERCISE_LEVEL: {\r\n            const foundIndex: number = state.exercise_levels.findIndex(pr => pr.id === action.exercise_level.id);\r\n            let exercise_levels: IExerciseLevel[] = state.exercise_levels;\r\n            exercise_levels[foundIndex] = action.exercise_level;\r\n            return { ...state, exercise_levels: exercise_levels };\r\n        }\r\n        case REMOVE_EXERCISE_LEVEL: {\r\n            return { ...state, exercise_levels: state.exercise_levels.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_EXERCISE_LEVEL_ALL: {\r\n            return { ...state, exercise_levels: [] };\r\n        }\r\n        case CHANGE_EXERCISE_LEVEL_PENDING_EDIT: {\r\n            return { ...state, selectedExerciseLevel: action.exercise_level };\r\n        }\r\n        case CLEAR_EXERCISE_LEVEL_PENDING_EDIT: {\r\n            return { ...state, selectedExerciseLevel: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default exercise_levelsReducer;","export interface IUserGradeExerciseSubmission {\r\n    student_id: string;\r\n    student_name: string;\r\n    exercise_name: string;\r\n    time_submit: string;\r\n    deadline: string;\r\n    image_url: string;\r\n    exercise_submission_id: string;\r\n    feedback: string;\r\n    description: string;\r\n    score: number;\r\n    time: string;\r\n}\r\n\r\nexport enum UserGradeExerciseSubmissionModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IUserGradeExerciseSubmissionState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_USER_GRADE_EXERCISE_SUBMISSION, CHANGE_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT, EDIT_USER_GRADE_EXERCISE_SUBMISSION, REMOVE_USER_GRADE_EXERCISE_SUBMISSION,\r\n    CLEAR_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_USER_GRADE_EXERCISE_SUBMISSION, REMOVE_USER_GRADE_EXERCISE_SUBMISSION_ALL} from \"../actions/user_grade_exercise_submission.action\";\r\nimport { IUserGradeExerciseSubmission, UserGradeExerciseSubmissionModificationStatus } from \"../models/user_grade_exercise_submission.interface\";\r\n\r\n\r\n\r\nconst initialState: IUserGradeExerciseSubmissionState = {\r\n    modificationState: UserGradeExerciseSubmissionModificationStatus.None,\r\n    selectedUserGradeExerciseSubmission: null,\r\n    user_grade_exercise_submissions: []\r\n};\r\n\r\nfunction user_grade_exercise_submissionsReducer(state: IUserGradeExerciseSubmissionState = initialState, action: IActionBase): IUserGradeExerciseSubmissionState {\r\n    switch (action.type) {\r\n        case INITIAL_USER_GRADE_EXERCISE_SUBMISSION: {\r\n            return { ...state, user_grade_exercise_submissions : [...state.user_grade_exercise_submissions, action.user_grade_exercise_submission]};\r\n        }\r\n        case ADD_USER_GRADE_EXERCISE_SUBMISSION: {\r\n            return { ...state, user_grade_exercise_submissions: [...state.user_grade_exercise_submissions, action.user_grade_exercise_submission]};\r\n        }\r\n        case EDIT_USER_GRADE_EXERCISE_SUBMISSION: {\r\n            const foundIndex: number = state.user_grade_exercise_submissions.findIndex(pr => pr.student_id === action.user_grade_exercise_submission.id);\r\n            let user_grade_exercise_submissions: IUserGradeExerciseSubmission[] = state.user_grade_exercise_submissions;\r\n            user_grade_exercise_submissions[foundIndex] = action.user_grade_exercise_submission;\r\n            return { ...state, user_grade_exercise_submissions: user_grade_exercise_submissions };\r\n        }\r\n        case REMOVE_USER_GRADE_EXERCISE_SUBMISSION: {\r\n            return { ...state, user_grade_exercise_submissions: state.user_grade_exercise_submissions.filter(pr => pr.student_id !== action.id) };\r\n        }\r\n        case REMOVE_USER_GRADE_EXERCISE_SUBMISSION_ALL: {\r\n            return { ...state, user_grade_exercise_submissions: [] };\r\n        }\r\n        case CHANGE_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT: {\r\n            return { ...state, selectedUserGradeExerciseSubmission: action.user_grade_exercise_submission };\r\n        }\r\n        case CLEAR_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT: {\r\n            return { ...state, selectedUserGradeExerciseSubmission: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default user_grade_exercise_submissionsReducer;","export interface IExerciseStudent {\r\n    id: string;\r\n    name: string;\r\n    exercise_submission_id: string;\r\n    description: string;\r\n    section_id: string;\r\n    level_id: string;\r\n    level_name: string;\r\n    deadline: string;\r\n    time_submit:  string;\r\n    teacher_name: string;\r\n    section_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ExerciseStudentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IExerciseStudentState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_EXERCISE_NOT_SUBMIT, EDIT_EXERCISE_NOT_SUBMIT, REMOVE_EXERCISE_NOT_SUBMIT,INITIAL_EXERCISE_NOT_SUBMIT, REMOVE_EXERCISE_NOT_SUBMIT_ALL, \r\n    ADD_EXERCISE_SUBMITED_NOT_GRADE, EDIT_EXERCISE_SUBMITED_NOT_GRADE, REMOVE_EXERCISE_SUBMITED_NOT_GRADE, INITIAL_EXERCISE_SUBMITED_NOT_GRADE, REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL, \r\n    ADD_EXERCISE_SUBMITED_GRADED, EDIT_EXERCISE_SUBMITED_GRADED, REMOVE_EXERCISE_SUBMITED_GRADED , INITIAL_EXERCISE_SUBMITED_GRADED, REMOVE_EXERCISE_SUBMITED_GRADED_ALL,\r\n    SET_MODIFICATION_STATE\r\n\r\n} from \"../actions/exercise_student.action\";\r\nimport { IExerciseStudent, ExerciseStudentModificationStatus } from \"../models/exercise_student.interface\";\r\n\r\nconst initialState: IExerciseStudentState = {\r\n    modificationState: ExerciseStudentModificationStatus.None,\r\n    selectedExerciseStudent: null,\r\n    exercise_not_submit: [],\r\n    exercise_submitted_not_grade: [],\r\n    exercise_submitted_graded: []\r\n};\r\n\r\nfunction exerciseStudentReducer(state: IExerciseStudentState = initialState, action: IActionBase): IExerciseStudentState {\r\n    switch (action.type) {\r\n        case INITIAL_EXERCISE_NOT_SUBMIT: {\r\n            return { ...state, exercise_not_submit : [...state.exercise_not_submit, action.exercise_student]};\r\n        }\r\n        case REMOVE_EXERCISE_NOT_SUBMIT_ALL: {\r\n            return { ...state, exercise_not_submit: [] };\r\n        }\r\n        case ADD_EXERCISE_NOT_SUBMIT: {\r\n            return { ...state, exercise_not_submit: [...state.exercise_not_submit, action.exercise_student]};\r\n        }\r\n        case EDIT_EXERCISE_NOT_SUBMIT: {\r\n            const foundIndex: number = state.exercise_not_submit.findIndex(pr => pr.id === action.exercise_student.id);\r\n            let exercise_not_submits: IExerciseStudent[] = state.exercise_not_submit;\r\n            exercise_not_submits[foundIndex] = action.exercise_student;\r\n            return { ...state, exercise_not_submit: exercise_not_submits };\r\n        }\r\n        case REMOVE_EXERCISE_NOT_SUBMIT: {\r\n            return { ...state, exercise_not_submit: state.exercise_not_submit.filter(x=>x.id !== action.exercise_student.id)};\r\n        }\r\n\r\n        case INITIAL_EXERCISE_SUBMITED_NOT_GRADE: {\r\n            return { ...state, exercise_submitted_not_grade : [...state.exercise_submitted_not_grade, action.exercise_student]};\r\n        }\r\n        case REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL: {\r\n            return { ...state, exercise_submitted_not_grade: [] };\r\n        }\r\n        case ADD_EXERCISE_SUBMITED_NOT_GRADE: {\r\n            return { ...state, exercise_submitted_not_grade: [...state.exercise_submitted_not_grade, action.exercise_student]};\r\n        }\r\n        case EDIT_EXERCISE_SUBMITED_NOT_GRADE: {\r\n            const foundIndex: number = state.exercise_submitted_not_grade.findIndex(pr => pr.id === action.exercise_student.id);\r\n            let accept_exercise_not_submit: IExerciseStudent[] = state.exercise_submitted_not_grade;\r\n            accept_exercise_not_submit[foundIndex] = action.exercise_student;\r\n            return { ...state, exercise_submitted_not_grade: accept_exercise_not_submit };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMITED_NOT_GRADE: {\r\n            return { ...state, exercise_submitted_not_grade: state.exercise_submitted_not_grade.filter(x=>x.id !== action.exercise_student.id)};\r\n        }\r\n\r\n        case INITIAL_EXERCISE_SUBMITED_GRADED: {\r\n            return { ...state, exercise_submitted_graded : [...state.exercise_submitted_graded, action.exercise_student]};\r\n        }\r\n        case REMOVE_EXERCISE_SUBMITED_GRADED_ALL: {\r\n            return { ...state, exercise_submitted_graded: [] };\r\n        }\r\n        case ADD_EXERCISE_SUBMITED_GRADED: {\r\n            return { ...state, exercise_submitted_graded: [...state.exercise_submitted_graded, action.exercise_student]};\r\n        }\r\n        case EDIT_EXERCISE_SUBMITED_GRADED: {\r\n            const foundIndex: number = state.exercise_submitted_graded.findIndex(pr => pr.id === action.exercise_student.id);\r\n            let remove_exercise_not_submit: IExerciseStudent[] = state.exercise_submitted_graded;\r\n            remove_exercise_not_submit[foundIndex] = action.exercise_student;\r\n            return { ...state, exercise_submitted_graded: remove_exercise_not_submit };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMITED_GRADED: {\r\n            return { ...state, exercise_submitted_graded: state.exercise_submitted_graded.filter(x=>x.id !== action.exercise_student.id)};\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default exerciseStudentReducer;","export interface ITutorial {\r\n    id: string;\r\n    section_id: string;\r\n    creator_id: string;\r\n    creator_name: string;\r\n    class_name: string;\r\n    class_id: string;\r\n    section_number: number;\r\n    name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum TutorialModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITutorialState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_TUTORIAL, EDIT_TUTORIAL, REMOVE_TUTORIAL,INITIAL_TUTORIAL, REMOVE_TUTORIAL_ALL, \r\n    CLEAR_TUTORIAL_PENDING_EDIT, CHANGE_TUTORIAL_PENDING_EDIT, SET_MODIFICATION_STATE\r\n\r\n} from \"../actions/tutorial.action\";\r\nimport { ITutorial, TutorialModificationStatus } from \"../models/tutorial.interface\";\r\n\r\nconst initialState: ITutorialState = {\r\n    modificationState: TutorialModificationStatus.None,\r\n    selectedTutorial: null,\r\n    tutorials: []\r\n};\r\n\r\nfunction studentLeaveReducer(state: ITutorialState = initialState, action: IActionBase): ITutorialState {\r\n    switch (action.type) {\r\n        case INITIAL_TUTORIAL: {\r\n            return { ...state, tutorials : [...state.tutorials, action.tutorial]};\r\n        }\r\n        case REMOVE_TUTORIAL_ALL: {\r\n            return { ...state, tutorials: [] };\r\n        }\r\n        case ADD_TUTORIAL: {\r\n            return { ...state, tutorials: [...state.tutorials, action.tutorial]};\r\n        }\r\n        case EDIT_TUTORIAL: {\r\n            const foundIndex: number = state.tutorials.findIndex(pr => pr.id === action.tutorial.id);\r\n            let tutorials: ITutorial[] = state.tutorials;\r\n            tutorials[foundIndex] = action.tutorial;\r\n            return { ...state, tutorials: tutorials };\r\n        }\r\n        case REMOVE_TUTORIAL: {\r\n            return { ...state, tutorials: state.tutorials.filter(x=>x.id !== action.tutorial.id)};\r\n        }\r\n        \r\n        case CHANGE_TUTORIAL_PENDING_EDIT: {\r\n            return { ...state, selectedTutorial: action.tutorial };\r\n        }\r\n        case CLEAR_TUTORIAL_PENDING_EDIT: {\r\n            return { ...state, selectedTutorial: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default studentLeaveReducer;","export interface IUserGradeContestSubmission {\r\n    student_id: string;\r\n    teacher_name: string;\r\n    teacher_id: string;\r\n    student_name: string;\r\n    contest_id: string;\r\n    contest_name: string;\r\n    contest_submission_id: string;\r\n    feedback: string;\r\n    score: number;\r\n    time: string;\r\n}\r\n\r\nexport enum UserGradeContestSubmissionModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IUserGradeContestSubmissionState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_USER_GRADE_CONTEST_SUBMISSION, CHANGE_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT, EDIT_USER_GRADE_CONTEST_SUBMISSION, REMOVE_USER_GRADE_CONTEST_SUBMISSION,\r\n    CLEAR_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_USER_GRADE_CONTEST_SUBMISSION, REMOVE_USER_GRADE_CONTEST_SUBMISSION_ALL} from \"../actions/user_grade_contest_submission.action\";\r\nimport { IUserGradeContestSubmission, UserGradeContestSubmissionModificationStatus } from \"../models/user_grade_contest_submission.interface\";\r\n\r\n\r\n\r\nconst initialState: IUserGradeContestSubmissionState = {\r\n    modificationState: UserGradeContestSubmissionModificationStatus.None,\r\n    selectedUserGradeContestSubmission: null,\r\n    userGradeContestSubmissions: []\r\n};\r\n\r\nfunction userGradeContestSubmissionsReducer(state: IUserGradeContestSubmissionState = initialState, action: IActionBase): IUserGradeContestSubmissionState {\r\n    switch (action.type) {\r\n        case INITIAL_USER_GRADE_CONTEST_SUBMISSION: {\r\n            return { ...state, userGradeContestSubmissions : [...state.userGradeContestSubmissions, action.user_grade_contest_submission]};\r\n        }\r\n        case ADD_USER_GRADE_CONTEST_SUBMISSION: {\r\n            return { ...state, userGradeContestSubmissions: [...state.userGradeContestSubmissions, action.user_grade_contest_submission]};\r\n        }\r\n        case EDIT_USER_GRADE_CONTEST_SUBMISSION: {\r\n            const foundIndex: number = state.userGradeContestSubmissions.findIndex(pr => pr.student_id === action.user_grade_contest_submission.id);\r\n            let userGradeContestSubmissions: IUserGradeContestSubmission[] = state.userGradeContestSubmissions;\r\n            userGradeContestSubmissions[foundIndex] = action.user_grade_contest_submission;\r\n            return { ...state, userGradeContestSubmissions: userGradeContestSubmissions };\r\n        }\r\n        case REMOVE_USER_GRADE_CONTEST_SUBMISSION: {\r\n            return { ...state, userGradeContestSubmissions: state.userGradeContestSubmissions.filter(pr => pr.student_id !== action.id) };\r\n        }\r\n        case REMOVE_USER_GRADE_CONTEST_SUBMISSION_ALL: {\r\n            return { ...state, userGradeContestSubmissions: [] };\r\n        }\r\n        case CHANGE_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT: {\r\n            return { ...state, selectedUserGradeContestSubmission: action.user_grade_contest_submission };\r\n        }\r\n        case CLEAR_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT: {\r\n            return { ...state, selectedUserGradeContestSubmission: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default userGradeContestSubmissionsReducer;","export interface IUserRegisterTutorialPage {\r\n    id: string;\r\n    user_register_tutorial_id: string;\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nexport enum UserRegisterTutorialPageModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IUserRegisterTutorialPage, UserRegisterTutorialPageModificationStatus } from \"../models/user_register_tutorial_page.interface\";\r\nexport const ADD_USER_REGISTER_JOIN_SEMESTER: string = \"ADD_USER_REGISTER_JOIN_SEMESTER\";\r\nexport const EDIT_USER_REGISTER_JOIN_SEMESTER: string = \"EDIT_USER_REGISTER_JOIN_SEMESTER\";\r\nexport const REMOVE_USER_REGISTER_JOIN_SEMESTER: string = \"REMOVE_USER_REGISTER_JOIN_SEMESTER\";\r\nexport const CHANGE_USER_REGISTER_JOIN_SEMESTER_AMOUNT: string = \"CHANGE_USER_REGISTER_JOIN_SEMESTER_AMOUNT\";\r\nexport const CHANGE_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT: string = \"CHANGE_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT\";\r\nexport const CLEAR_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT: string = \"CLEAR_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_USER_REGISTER_JOIN_SEMESTER_ALL: string = \"REMOVE_USER_REGISTER_JOIN_SEMESTER_ALL\";\r\nexport const INITIAL_USER_REGISTER_JOIN_SEMESTER: string = \"INITIAL_USER_REGISTER_JOIN_SEMESTER\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(user_register_tutorial_page: IUserRegisterTutorialPage) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        user_register_tutorial_page\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialUserRegisterTutorialPage(user_register_tutorial_page: IUserRegisterTutorialPage): IInitialUserRegisterTutorialPageActionType {\r\n    return { type: INITIAL_USER_REGISTER_JOIN_SEMESTER, user_register_tutorial_page: user_register_tutorial_page };\r\n}\r\n\r\nexport function removeUserRegisterTutorialPageAll(): IRemoveUserRegisterTutorialPageAllActionType {\r\n    return { type: REMOVE_USER_REGISTER_JOIN_SEMESTER_ALL };\r\n}\r\n\r\nexport function addUserRegisterTutorialPage(user_register_tutorial_page: IUserRegisterTutorialPage): IAddUserRegisterTutorialPageActionType {\r\n    return { type: ADD_USER_REGISTER_JOIN_SEMESTER, user_register_tutorial_page: user_register_tutorial_page };\r\n}\r\n\r\nexport function editUserRegisterTutorialPage(user_register_tutorial_page: IUserRegisterTutorialPage): IEditUserRegisterTutorialPageActionType {\r\n    return { type: EDIT_USER_REGISTER_JOIN_SEMESTER, user_register_tutorial_page: user_register_tutorial_page };\r\n}\r\n\r\nexport function removeUserRegisterTutorialPage(id: string): IRemoveUserRegisterTutorialPageActionType {\r\n    return { type: REMOVE_USER_REGISTER_JOIN_SEMESTER, id: id };\r\n}\r\n\r\nexport function changeSelectedUserRegisterTutorialPage(user_register_tutorial_page: IUserRegisterTutorialPage): IChangeSelectedUserRegisterTutorialPageActionType {\r\n    return { type: CHANGE_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT, user_register_tutorial_page: user_register_tutorial_page };\r\n}\r\n\r\nexport function clearSelectedUserRegisterTutorialPage(): IClearSelectedUserRegisterTutorialPageActionType {\r\n    return { type: CLEAR_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateUserRegisterTutorialPage(value: UserRegisterTutorialPageModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddUserRegisterTutorialPageActionType { type: string, user_register_tutorial_page: IUserRegisterTutorialPage };\r\ninterface IEditUserRegisterTutorialPageActionType { type: string, user_register_tutorial_page: IUserRegisterTutorialPage };\r\ninterface IRemoveUserRegisterTutorialPageActionType { type: string, id: string };\r\ninterface IChangeSelectedUserRegisterTutorialPageActionType { type: string, user_register_tutorial_page: IUserRegisterTutorialPage };\r\ninterface IClearSelectedUserRegisterTutorialPageActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  UserRegisterTutorialPageModificationStatus};\r\ninterface IRemoveUserRegisterTutorialPageAllActionType { type: string }\r\ninterface IInitialUserRegisterTutorialPageActionType {type: string, user_register_tutorial_page: IUserRegisterTutorialPage}","import { IUserRegisterTutorialPageState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_USER_REGISTER_JOIN_SEMESTER, CHANGE_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT, EDIT_USER_REGISTER_JOIN_SEMESTER, REMOVE_USER_REGISTER_JOIN_SEMESTER,\r\n    CLEAR_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_USER_REGISTER_JOIN_SEMESTER, REMOVE_USER_REGISTER_JOIN_SEMESTER_ALL} from \"../actions/user_register_tutorial_page.action\";\r\nimport { IUserRegisterTutorialPage, UserRegisterTutorialPageModificationStatus } from \"../models/user_register_tutorial_page.interface\";\r\n\r\n\r\n\r\nconst initialState: IUserRegisterTutorialPageState = {\r\n    modificationState: UserRegisterTutorialPageModificationStatus.None,\r\n    selectedUserRegisterTutorialPage: null,\r\n    user_register_tutorial_pages: []\r\n};\r\n\r\nfunction user_register_tutorial_pagesReducer(state: IUserRegisterTutorialPageState = initialState, action: IActionBase): IUserRegisterTutorialPageState {\r\n    switch (action.type) {\r\n        case INITIAL_USER_REGISTER_JOIN_SEMESTER: {\r\n            return { ...state, user_register_tutorial_pages : [...state.user_register_tutorial_pages, action.user_register_tutorial_page]};\r\n        }\r\n        case ADD_USER_REGISTER_JOIN_SEMESTER: {\r\n            return { ...state, user_register_tutorial_pages: [...state.user_register_tutorial_pages, action.user_register_tutorial_page]};\r\n        }\r\n        case EDIT_USER_REGISTER_JOIN_SEMESTER: {\r\n            const foundIndex: number = state.user_register_tutorial_pages.findIndex(pr => pr.id === action.user_register_tutorial_page.id);\r\n            let user_register_tutorial_pages: IUserRegisterTutorialPage[] = state.user_register_tutorial_pages;\r\n            user_register_tutorial_pages[foundIndex] = action.user_register_tutorial_page;\r\n            return { ...state, user_register_tutorial_pages: user_register_tutorial_pages };\r\n        }\r\n        case REMOVE_USER_REGISTER_JOIN_SEMESTER: {\r\n            return { ...state, user_register_tutorial_pages: state.user_register_tutorial_pages.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_USER_REGISTER_JOIN_SEMESTER_ALL: {\r\n            return { ...state, user_register_tutorial_pages: [] };\r\n        }\r\n        case CHANGE_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterTutorialPage: action.user_register_tutorial_page };\r\n        }\r\n        case CLEAR_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterTutorialPage: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default user_register_tutorial_pagesReducer;","export interface IUserRegisterTutorial {\r\n    id: string;\r\n    section_id: string;\r\n    creator_id: string;\r\n    creator_name: string;\r\n    section_name: string;\r\n    section_number: number;\r\n    class_id: string;\r\n    class_name: string;\r\n    name: string;\r\n    status: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum UserRegisterTutorialModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IUserRegisterTutorialState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW, EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW, REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW,INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW, REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_ALL, \r\n    ADD_USER_REGISTER_TUTORIAL_APPROVED, EDIT_USER_REGISTER_TUTORIAL_APPROVED, REMOVE_USER_REGISTER_TUTORIAL_APPROVED, INITIAL_USER_REGISTER_TUTORIAL_APPROVED, REMOVE_USER_REGISTER_TUTORIAL_APPROVED_ALL, \r\n    ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED, EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED, REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED , INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED, REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_ALL,\r\n    CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT, CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE, REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE, REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_ALL, ADD_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE, EDIT_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE\r\n\r\n} from \"../actions/user_register_tutorial.action\";\r\nimport { IUserRegisterTutorial, UserRegisterTutorialModificationStatus } from \"../models/user_register_tutorial.interface\";\r\n\r\nconst initialState: IUserRegisterTutorialState = {\r\n    modificationState: UserRegisterTutorialModificationStatus.None,\r\n    selectedUserRegisterTutorial: null,\r\n    user_register_tutorial_not_approved_nows: [],\r\n    user_register_tutorial_not_approveds: [],\r\n    user_register_tutorial_approveds: [],\r\n    user_register_tutorial_approved_to_tutorial_templates: []\r\n};\r\n\r\nfunction userRegisterTutorialReducer(state: IUserRegisterTutorialState = initialState, action: IActionBase): IUserRegisterTutorialState {\r\n    switch (action.type) {\r\n        case INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: {\r\n            return { ...state, user_register_tutorial_not_approved_nows : [...state.user_register_tutorial_not_approved_nows, action.user_register_tutorial]};\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_ALL: {\r\n            return { ...state, user_register_tutorial_not_approved_nows: [] };\r\n        }\r\n        case ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: {\r\n            return { ...state, user_register_tutorial_not_approved_nows: [...state.user_register_tutorial_not_approved_nows, action.user_register_tutorial]};\r\n        }\r\n        case EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: {\r\n            const foundIndex: number = state.user_register_tutorial_not_approved_nows.findIndex(pr => pr.id === action.user_register_tutorial.id);\r\n            let user_register_tutorial_not_approved_nows: IUserRegisterTutorial[] = state.user_register_tutorial_not_approved_nows;\r\n            user_register_tutorial_not_approved_nows[foundIndex] = action.user_register_tutorial;\r\n            return { ...state, user_register_tutorial_not_approved_nows: user_register_tutorial_not_approved_nows };\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: {\r\n            return { ...state, user_register_tutorial_not_approved_nows: state.user_register_tutorial_not_approved_nows.filter(x=>x.id !== action.user_register_tutorial.id)};\r\n        }\r\n\r\n        case INITIAL_USER_REGISTER_TUTORIAL_APPROVED: {\r\n            return { ...state, user_register_tutorial_approveds : [...state.user_register_tutorial_approveds, action.user_register_tutorial]};\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_APPROVED_ALL: {\r\n            return { ...state, user_register_tutorial_approveds: [] };\r\n        }\r\n        case ADD_USER_REGISTER_TUTORIAL_APPROVED: {\r\n            return { ...state, user_register_tutorial_approveds: [...state.user_register_tutorial_approveds, action.user_register_tutorial]};\r\n        }\r\n        case EDIT_USER_REGISTER_TUTORIAL_APPROVED: {\r\n            const foundIndex: number = state.user_register_tutorial_approveds.findIndex(pr => pr.id === action.user_register_tutorials.id);\r\n            let user_register_tutorial_approveds: IUserRegisterTutorial[] = state.user_register_tutorial_approveds;\r\n            user_register_tutorial_approveds[foundIndex] = action.user_register_tutorial;\r\n            return { ...state, user_register_tutorial_approveds: user_register_tutorial_approveds };\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_APPROVED: {\r\n            return { ...state, user_register_tutorial_approveds: state.user_register_tutorial_approveds.filter(x=>x.id !== action.user_register_tutorial.id)};\r\n        }\r\n\r\n        case INITIAL_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: {\r\n            return { ...state, user_register_tutorial_approved_to_tutorial_templates : [...state.user_register_tutorial_approved_to_tutorial_templates, action.user_register_tutorial]};\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_ALL: {\r\n            return { ...state, user_register_tutorial_approved_to_tutorial_templates: [] };\r\n        }\r\n        case ADD_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: {\r\n            return { ...state, user_register_tutorial_approved_to_tutorial_templates: [...state.user_register_tutorial_approved_to_tutorial_templates, action.user_register_tutorial]};\r\n        }\r\n        case EDIT_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: {\r\n            const foundIndex: number = state.user_register_tutorial_approved_to_tutorial_templates.findIndex(pr => pr.id === action.user_register_tutorials.id);\r\n            let user_register_tutorial_approved_to_tutorial_templates: IUserRegisterTutorial[] = state.user_register_tutorial_approved_to_tutorial_templates;\r\n            user_register_tutorial_approved_to_tutorial_templates[foundIndex] = action.user_register_tutorial;\r\n            return { ...state, user_register_tutorial_approved_to_tutorial_templates: user_register_tutorial_approved_to_tutorial_templates };\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: {\r\n            return { ...state, user_register_tutorial_approved_to_tutorial_templates: state.user_register_tutorial_approved_to_tutorial_templates.filter(x=>x.id !== action.user_register_tutorial.id)};\r\n        }\r\n\r\n        case INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED: {\r\n            return { ...state, user_register_tutorial_approveds : [...state.user_register_tutorial_approveds, action.user_register_tutorial]};\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_ALL: {\r\n            return { ...state, user_register_tutorial_approveds: [] };\r\n        }\r\n        case ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED: {\r\n            return { ...state, user_register_tutorial_approveds: [...state.user_register_tutorial_approveds, action.user_register_tutorial]};\r\n        }\r\n        case EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED: {\r\n            const foundIndex: number = state.user_register_tutorial_approveds.findIndex(pr => pr.id === action.user_register_tutorial.id);\r\n            let user_register_tutorial_approveds: IUserRegisterTutorial[] = state.user_register_tutorial_approveds;\r\n            user_register_tutorial_approveds[foundIndex] = action.user_register_tutorials;\r\n            return { ...state, user_register_tutorial_approveds: user_register_tutorial_approveds };\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED: {\r\n            return { ...state, user_register_tutorial_approveds: state.user_register_tutorial_approveds.filter(x=>x.id !== action.user_register_tutorial.id)};\r\n        }\r\n        \r\n        case CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterTutorial: action.user_register_tutorial };\r\n        }\r\n        case CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterTutorial: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userRegisterTutorialReducer;","export interface IContestSubmission {\r\n    id: string;\r\n    student_id: string;\r\n    contest_id: string;\r\n    student_name: string;\r\n    contest_name: string;\r\n    image_url: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ContestSubmissionModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IContestSubmissionState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_EXERCISE_SUBMISSION_NOT_GRADED, CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT, EDIT_EXERCISE_SUBMISSION_NOT_GRADED, REMOVE_EXERCISE_SUBMISSION_NOT_GRADED,\r\n    CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_EXERCISE_SUBMISSION_NOT_GRADED, REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL, INITIAL_EXERCISE_SUBMISSION_GRADED, ADD_EXERCISE_SUBMISSION_GRADED, EDIT_EXERCISE_SUBMISSION_GRADED, REMOVE_EXERCISE_SUBMISSION_GRADED, REMOVE_EXERCISE_SUBMISSION_GRADED_ALL, CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT, CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT} from \"../actions/contest_submission.action\";\r\nimport { IContestSubmission, ContestSubmissionModificationStatus } from \"../models/contest_submission.interface\";\r\n\r\n\r\n\r\nconst initialState: IContestSubmissionState = {\r\n    modificationState: ContestSubmissionModificationStatus.None,\r\n    selectedContestSubmission: null,\r\n    contest_not_gradeds: [],\r\n    contest_gradeds: []\r\n};\r\n\r\nfunction contestSubmissionsReducer(state: IContestSubmissionState = initialState, action: IActionBase): IContestSubmissionState {\r\n    switch (action.type) {\r\n        case INITIAL_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            return { ...state, contest_not_gradeds : [...state.contest_not_gradeds, action.contest_submission]};\r\n        }\r\n        case ADD_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            return { ...state, contest_not_gradeds: [...state.contest_not_gradeds, action.contest_submission]};\r\n        }\r\n        case EDIT_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            const foundIndex: number = state.contest_not_gradeds.findIndex(pr => pr.id === action.contest_submission.id);\r\n            let contest_not_gradeds: IContestSubmission[] = state.contest_not_gradeds;\r\n            contest_not_gradeds[foundIndex] = action.contest_submission;\r\n            return { ...state, contest_not_gradeds: contest_not_gradeds };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            return { ...state, contest_not_gradeds: state.contest_not_gradeds.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL: {\r\n            return { ...state, contest_not_gradeds: [] };\r\n        }\r\n        case CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedContestSubmission: action.contest_submission };\r\n        }\r\n        case CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedContestSubmission: null };\r\n        }\r\n\r\n        case INITIAL_EXERCISE_SUBMISSION_GRADED: {\r\n            return { ...state, contest_gradeds : [...state.contest_gradeds, action.contest_submission]};\r\n        }\r\n        case ADD_EXERCISE_SUBMISSION_GRADED: {\r\n            return { ...state, contest_gradeds: [...state.contest_gradeds, action.contest_submission]};\r\n        }\r\n        case EDIT_EXERCISE_SUBMISSION_GRADED: {\r\n            const foundIndex: number = state.contest_gradeds.findIndex(pr => pr.id === action.contest_submission.id);\r\n            let contest_gradeds: IContestSubmission[] = state.contest_gradeds;\r\n            contest_gradeds[foundIndex] = action.contest_submission;\r\n            return { ...state, contest_gradeds: contest_gradeds };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_GRADED: {\r\n            return { ...state, contest_gradeds: state.contest_gradeds.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_GRADED_ALL: {\r\n            return { ...state, contest_gradeds: [] };\r\n        }\r\n        case CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedContestSubmission: action.contest_submission };\r\n        }\r\n        case CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedContestSubmission: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default contestSubmissionsReducer;","export interface IScheduleTimeClass {\r\n    class_name: string;\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\n\r\nexport enum ScheduleTimeClassModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IScheduleTimeClassState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TIME_SCHEDULE, CHANGE_TIME_SCHEDULE_PENDING_EDIT, EDIT_TIME_SCHEDULE, REMOVE_TIME_SCHEDULE,\r\n    CLEAR_TIME_SCHEDULE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TIME_SCHEDULE, REMOVE_TIME_SCHEDULE_ALL} from \"../actions/schedule_time_class.action\";\r\nimport { IScheduleTimeClass, ScheduleTimeClassModificationStatus } from \"../models/schedule_time_class.interface\";\r\n\r\n\r\n\r\nconst initialState: IScheduleTimeClassState = {\r\n    modificationState: ScheduleTimeClassModificationStatus.None,\r\n    selectedScheduleTimeClass: null,\r\n    schedule_time_classes: []\r\n};\r\n\r\nfunction schedule_time_classsReducer(state: IScheduleTimeClassState = initialState, action: IActionBase): IScheduleTimeClassState {\r\n    switch (action.type) {\r\n        case INITIAL_TIME_SCHEDULE: {\r\n            return { ...state, schedule_time_classes : [...state.schedule_time_classes, action.schedule_time_class]};\r\n        }\r\n        case ADD_TIME_SCHEDULE: {\r\n            return { ...state, schedule_time_classes: [...state.schedule_time_classes, action.schedule_time_class]};\r\n        }\r\n        case EDIT_TIME_SCHEDULE: {\r\n            let schedule_time_classs: IScheduleTimeClass[] = state.schedule_time_classes;\r\n            schedule_time_classs[0] = action.schedule_time_class;\r\n            return { ...state, schedule_time_classes: schedule_time_classs };\r\n        }\r\n        case REMOVE_TIME_SCHEDULE: {\r\n            return { ...state, schedule_time_classes: [] };\r\n        }\r\n        case REMOVE_TIME_SCHEDULE_ALL: {\r\n            return { ...state, schedule_time_classes: [] };\r\n        }\r\n        case CHANGE_TIME_SCHEDULE_PENDING_EDIT: {\r\n            return { ...state, selectedScheduleTimeClass: action.schedule_time_class };\r\n        }\r\n        case CLEAR_TIME_SCHEDULE_PENDING_EDIT: {\r\n            return { ...state, selectedScheduleTimeClass: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default schedule_time_classsReducer;","export interface INotifyDb {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    time: string;\r\n}\r\n\r\nexport enum NotifyDbModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { INotifyDbState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_NOTIFY_DB, CHANGE_NOTIFY_DB_PENDING_EDIT, EDIT_NOTIFY_DB, REMOVE_NOTIFY_DB,\r\n    CLEAR_NOTIFY_DB_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_NOTIFY_DB, REMOVE_NOTIFY_DB_ALL} from \"../actions/notify_db.action\";\r\nimport { INotifyDb, NotifyDbModificationStatus } from \"../models/notify_db.interface\";\r\n\r\n\r\n\r\nconst initialState: INotifyDbState = {\r\n    modificationState: NotifyDbModificationStatus.None,\r\n    selectedNotifyDb: null,\r\n    notify_dbs: []\r\n};\r\n\r\nfunction notify_dbsReducer(state: INotifyDbState = initialState, action: IActionBase): INotifyDbState {\r\n    switch (action.type) {\r\n        case INITIAL_NOTIFY_DB: {\r\n            return { ...state, notify_dbs : [...state.notify_dbs, action.notify_db]};\r\n        }\r\n        case ADD_NOTIFY_DB: {\r\n            return { ...state, notify_dbs: [...state.notify_dbs, action.notify_db]};\r\n        }\r\n        case EDIT_NOTIFY_DB: {\r\n            const foundIndex: number = state.notify_dbs.findIndex(pr => pr.id === action.notify_db.id);\r\n            let notify_dbs: INotifyDb[] = state.notify_dbs;\r\n            notify_dbs[foundIndex] = action.notify_db;\r\n            return { ...state, notify_dbs: notify_dbs };\r\n        }\r\n        case REMOVE_NOTIFY_DB: {\r\n            return { ...state, notify_dbs: state.notify_dbs.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_NOTIFY_DB_ALL: {\r\n            return { ...state, notify_dbs: [] };\r\n        }\r\n        case CHANGE_NOTIFY_DB_PENDING_EDIT: {\r\n            return { ...state, selectedNotifyDb: action.notify_db };\r\n        }\r\n        case CLEAR_NOTIFY_DB_PENDING_EDIT: {\r\n            return { ...state, selectedNotifyDb: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default notify_dbsReducer;","export interface IUserReadNotification {\r\n    notification_id: string;\r\n    user_id: string;\r\n    is_read: boolean;\r\n}\r\n\r\nexport enum UserReadNotificationModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IUserReadNotificationState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_USER_READED_NOTIFICATION, CHANGE_USER_READED_NOTIFICATION_PENDING_EDIT, EDIT_USER_READED_NOTIFICATION, REMOVE_USER_READED_NOTIFICATION,\r\n    CLEAR_USER_READED_NOTIFICATION_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_USER_READED_NOTIFICATION, REMOVE_USER_READED_NOTIFICATION_ALL, INITIAL_USER_NOT_READED_NOTIFICATION, ADD_USER_NOT_READED_NOTIFICATION, EDIT_USER_NOT_READED_NOTIFICATION, REMOVE_USER_NOT_READED_NOTIFICATION, REMOVE_USER_NOT_READED_NOTIFICATION_ALL, CHANGE_USER_NOT_READED_NOTIFICATION_PENDING_EDIT, CLEAR_USER_NOT_READED_NOTIFICATION_PENDING_EDIT} from \"../actions/user_read_notification.action\";\r\nimport { IUserReadNotification, UserReadNotificationModificationStatus } from \"../models/user_read_notification.interface\";\r\n\r\n\r\n\r\nconst initialState: IUserReadNotificationState = {\r\n    modificationState: UserReadNotificationModificationStatus.None,\r\n    selectedUserReadNotification: null,\r\n    user_readed_notifications: [],\r\n    user_not_readed_notifications: []\r\n};\r\n\r\nfunction userReadNotificationsReducer(state: IUserReadNotificationState = initialState, action: IActionBase): IUserReadNotificationState {\r\n    switch (action.type) {\r\n        case INITIAL_USER_READED_NOTIFICATION: {\r\n            return { ...state, user_readed_notifications : [...state.user_readed_notifications, action.user_read_notification]};\r\n        }\r\n        case ADD_USER_READED_NOTIFICATION: {\r\n            return { ...state, user_readed_notifications: [...state.user_readed_notifications, action.user_read_notification]};\r\n        }\r\n        case EDIT_USER_READED_NOTIFICATION: {\r\n            const foundIndex: number = state.user_readed_notifications.findIndex(pr => pr.notification_id === action.user_read_notification.notification_id);\r\n            let user_readed_notifications: IUserReadNotification[] = state.user_readed_notifications;\r\n            user_readed_notifications[foundIndex] = action.user_read_notification;\r\n            return { ...state, user_readed_notifications: user_readed_notifications };\r\n        }\r\n        case REMOVE_USER_READED_NOTIFICATION: {\r\n            return { ...state, user_readed_notifications: state.user_readed_notifications.filter(pr => pr.notification_id !== action.notification_id) };\r\n        }\r\n        case REMOVE_USER_READED_NOTIFICATION_ALL: {\r\n            return { ...state, user_readed_notifications: [] };\r\n        }\r\n        case CHANGE_USER_READED_NOTIFICATION_PENDING_EDIT: {\r\n            return { ...state, selectedUserReadNotification: action.user_read_notification };\r\n        }\r\n        case CLEAR_USER_READED_NOTIFICATION_PENDING_EDIT: {\r\n            return { ...state, selectedUserReadNotification: null };\r\n        }\r\n\r\n        case INITIAL_USER_NOT_READED_NOTIFICATION: {\r\n            return { ...state, user_not_readed_notifications : [...state.user_not_readed_notifications, action.user_read_notification]};\r\n        }\r\n        case ADD_USER_NOT_READED_NOTIFICATION: {\r\n            return { ...state, user_not_readed_notifications: [...state.user_not_readed_notifications, action.user_read_notification]};\r\n        }\r\n        case EDIT_USER_NOT_READED_NOTIFICATION: {\r\n            const foundIndex: number = state.user_not_readed_notifications.findIndex(pr => pr.notification_id === action.user_read_notification.notification_id);\r\n            let user_not_readed_notifications: IUserReadNotification[] = state.user_not_readed_notifications;\r\n            user_not_readed_notifications[foundIndex] = action.user_read_notification;\r\n            return { ...state, user_not_readed_notifications: user_not_readed_notifications };\r\n        }\r\n        case REMOVE_USER_NOT_READED_NOTIFICATION: {\r\n            return { ...state, user_not_readed_notifications: state.user_not_readed_notifications.filter(pr => pr.notification_id !== action.notification_id) };\r\n        }\r\n        case REMOVE_USER_NOT_READED_NOTIFICATION_ALL: {\r\n            return { ...state, user_not_readed_notifications: [] };\r\n        }\r\n        case CHANGE_USER_NOT_READED_NOTIFICATION_PENDING_EDIT: {\r\n            return { ...state, selectedUserReadNotification: action.user_read_notification };\r\n        }\r\n        case CLEAR_USER_NOT_READED_NOTIFICATION_PENDING_EDIT: {\r\n            return { ...state, selectedUserReadNotification: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default userReadNotificationsReducer;","export interface INotify {\r\n    idx: string;\r\n    name: string;\r\n    description: string;\r\n    time: string;\r\n}\r\n\r\nexport enum NotifyModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { INotifyState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_NOTIFY, CHANGE_NOTIFY_PENDING_EDIT, EDIT_NOTIFY, REMOVE_NOTIFY,\r\n    CLEAR_NOTIFY_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_NOTIFY, REMOVE_NOTIFY_ALL} from \"../actions/notify.action\";\r\nimport { INotify, NotifyModificationStatus } from \"../models/notify.interface\";\r\n\r\n\r\n\r\nconst initialState: INotifyState = {\r\n    modificationState: NotifyModificationStatus.None,\r\n    selectedNotify: null,\r\n    notifys: []\r\n};\r\n\r\nfunction notifysReducer(state: INotifyState = initialState, action: IActionBase): INotifyState {\r\n    switch (action.type) {\r\n        case INITIAL_NOTIFY: {\r\n            return { ...state, notifys: [...state.notifys, action.notify]};\r\n        }\r\n        case ADD_NOTIFY: {\r\n            return { ...state, notifys: [...state.notifys, action.notify]};\r\n        }\r\n        case EDIT_NOTIFY: {\r\n            const foundIndex: number = state.notifys.findIndex(pr => pr.idx === action.notify.id);\r\n            let notifys: INotify[] = state.notifys;\r\n            notifys[foundIndex] = action.notify;\r\n            return { ...state, notifys: notifys };\r\n        }\r\n        case REMOVE_NOTIFY: {\r\n            return { ...state, notifys: state.notifys.filter(pr => pr.idx !== action.id) };\r\n        }\r\n        case REMOVE_NOTIFY_ALL: {\r\n            return { ...state, notifys: [] };\r\n        }\r\n        case CHANGE_NOTIFY_PENDING_EDIT: {\r\n            return { ...state, selectedNotify: action.notify };\r\n        }\r\n        case CLEAR_NOTIFY_PENDING_EDIT: {\r\n            return { ...state, selectedNotify: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default notifysReducer;","import { IClassesStudentState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_DOING_CLASS, CHANGE_DOING_CLASS_PENDING_EDIT, EDIT_DOING_CLASS, REMOVE_DOING_CLASS,\r\n    CLEAR_DOING_CLASS_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_DOING_CLASS, REMOVE_DOING_CLASS_ALL, INITIAL_DONE_CLASS, ADD_DONE_CLASS, EDIT_DONE_CLASS, REMOVE_DONE_CLASS, REMOVE_DONE_CLASS_ALL, CHANGE_DONE_CLASS_PENDING_EDIT, CLEAR_DONE_CLASS_PENDING_EDIT} from \"../actions/classes_student.action\";\r\nimport { IClassesStudent, ClassesStudentModificationStatus } from \"../models/classes_student.interface\";\r\n\r\n\r\n\r\nconst initialState: IClassesStudentState = {\r\n    modificationState: ClassesStudentModificationStatus.None,\r\n    selectedClassesStudent: null,\r\n    classes_doing: [],\r\n    classes_done: []\r\n};\r\n\r\nfunction classesStudentsReducer(state: IClassesStudentState = initialState, action: IActionBase): IClassesStudentState {\r\n    switch (action.type) {\r\n        case INITIAL_DOING_CLASS: {\r\n            return { ...state, classes_doing : [...state.classes_doing, action.classes_student]};\r\n        }\r\n        case ADD_DOING_CLASS: {\r\n            return { ...state, classes_doing: [...state.classes_doing, action.classes_student]};\r\n        }\r\n        case EDIT_DOING_CLASS: {\r\n            const foundIndex: number = state.classes_doing.findIndex(pr => pr.id === action.classes_student.id);\r\n            let classes_doing: IClassesStudent[] = state.classes_doing;\r\n            classes_doing[foundIndex] = action.classes_student;\r\n            return { ...state, classes_doing: classes_doing };\r\n        }\r\n        case REMOVE_DOING_CLASS: {\r\n            return { ...state, classes_doing: state.classes_doing.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DOING_CLASS_ALL: {\r\n            return { ...state, classes_doing: [] };\r\n        }\r\n        case CHANGE_DOING_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesStudent: action.classes_student };\r\n        }\r\n        case CLEAR_DOING_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesStudent: null };\r\n        }\r\n\r\n        case INITIAL_DONE_CLASS: {\r\n            return { ...state, classes_done : [...state.classes_done, action.classes_student]};\r\n        }\r\n        case ADD_DONE_CLASS: {\r\n            return { ...state, classes_done: [...state.classes_done, action.classes_student]};\r\n        }\r\n        case EDIT_DONE_CLASS: {\r\n            const foundIndex: number = state.classes_done.findIndex(pr => pr.id === action.classes_student.id);\r\n            let classes_done: IClassesStudent[] = state.classes_done;\r\n            classes_done[foundIndex] = action.classes_student;\r\n            return { ...state, classes_done: classes_done };\r\n        }\r\n        case REMOVE_DONE_CLASS: {\r\n            return { ...state, classes_done: state.classes_done.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DONE_CLASS_ALL: {\r\n            return { ...state, classes_done: [] };\r\n        }\r\n        case CHANGE_DONE_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesStudent: action.classes_student };\r\n        }\r\n        case CLEAR_DONE_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesStudent: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default classesStudentsReducer;","import { IClassesParentState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_DOING_CLASS, CHANGE_DOING_CLASS_PENDING_EDIT, EDIT_DOING_CLASS, REMOVE_DOING_CLASS,\r\n    CLEAR_DOING_CLASS_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_DOING_CLASS, REMOVE_DOING_CLASS_ALL, INITIAL_DONE_CLASS, ADD_DONE_CLASS, EDIT_DONE_CLASS, REMOVE_DONE_CLASS, REMOVE_DONE_CLASS_ALL, CHANGE_DONE_CLASS_PENDING_EDIT, CLEAR_DONE_CLASS_PENDING_EDIT} from \"../actions/classes_parent.action\";\r\nimport { IClassesParent, ClassesParentModificationStatus } from \"../models/classes_parent.interface\";\r\n\r\n\r\n\r\nconst initialState: IClassesParentState = {\r\n    modificationState: ClassesParentModificationStatus.None,\r\n    selectedClassesParent: null,\r\n    classes_doing: [],\r\n    classes_done: []\r\n};\r\n\r\nfunction classesParentsReducer(state: IClassesParentState = initialState, action: IActionBase): IClassesParentState {\r\n    switch (action.type) {\r\n        case INITIAL_DOING_CLASS: {\r\n            return { ...state, classes_doing : [...state.classes_doing, action.classes_parent]};\r\n        }\r\n        case ADD_DOING_CLASS: {\r\n            return { ...state, classes_doing: [...state.classes_doing, action.classes_parent]};\r\n        }\r\n        case EDIT_DOING_CLASS: {\r\n            const foundIndex: number = state.classes_doing.findIndex(pr => pr.id === action.classes_parent.id);\r\n            let classes_doing: IClassesParent[] = state.classes_doing;\r\n            classes_doing[foundIndex] = action.classes_parent;\r\n            return { ...state, classes_doing: classes_doing };\r\n        }\r\n        case REMOVE_DOING_CLASS: {\r\n            return { ...state, classes_doing: state.classes_doing.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DOING_CLASS_ALL: {\r\n            return { ...state, classes_doing: [] };\r\n        }\r\n        case CHANGE_DOING_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesParent: action.classes_parent };\r\n        }\r\n        case CLEAR_DOING_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesParent: null };\r\n        }\r\n\r\n        case INITIAL_DONE_CLASS: {\r\n            return { ...state, classes_done : [...state.classes_done, action.classes_parent]};\r\n        }\r\n        case ADD_DONE_CLASS: {\r\n            return { ...state, classes_done: [...state.classes_done, action.classes_parent]};\r\n        }\r\n        case EDIT_DONE_CLASS: {\r\n            const foundIndex: number = state.classes_done.findIndex(pr => pr.id === action.classes_parent.id);\r\n            let classes_done: IClassesParent[] = state.classes_done;\r\n            classes_done[foundIndex] = action.classes_parent;\r\n            return { ...state, classes_done: classes_done };\r\n        }\r\n        case REMOVE_DONE_CLASS: {\r\n            return { ...state, classes_done: state.classes_done.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DONE_CLASS_ALL: {\r\n            return { ...state, classes_done: [] };\r\n        }\r\n        case CHANGE_DONE_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesParent: action.classes_parent };\r\n        }\r\n        case CLEAR_DONE_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesParent: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default classesParentsReducer;","export interface ICourseParent {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    creator_id: string;\r\n    art_type_id: string;\r\n    art_type_name: string;\r\n    art_level_id: string;\r\n    art_level_name: string;\r\n    art_age_id: string;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum CourseParentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICourseParentState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_DOING_COURSE, CHANGE_DOING_COURSE_PENDING_EDIT, EDIT_DOING_COURSE, REMOVE_DOING_COURSE,\r\n    CLEAR_DOING_COURSE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_DOING_COURSE, REMOVE_DOING_COURSE_ALL, INITIAL_DONE_COURSE, ADD_DONE_COURSE, EDIT_DONE_COURSE, REMOVE_DONE_COURSE, REMOVE_DONE_COURSE_ALL, CHANGE_DONE_COURSE_PENDING_EDIT, CLEAR_DONE_COURSE_PENDING_EDIT} from \"../actions/course_parent.action\";\r\nimport { ICourseParent, CourseParentModificationStatus } from \"../models/course_parent.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseParentState = {\r\n    modificationState: CourseParentModificationStatus.None,\r\n    selectedCourseParent: null,\r\n    courses_registed: [],\r\n    courses_not_registed_now: []\r\n};\r\n\r\nfunction courseParentsReducer(state: ICourseParentState = initialState, action: IActionBase): ICourseParentState {\r\n    switch (action.type) {\r\n        case INITIAL_DOING_COURSE: {\r\n            return { ...state, courses_not_registed_now : [...state.courses_not_registed_now, action.course_parent]};\r\n        }\r\n        case ADD_DOING_COURSE: {\r\n            return { ...state, courses_not_registed_now: [...state.courses_not_registed_now, action.course_parent]};\r\n        }\r\n        case EDIT_DOING_COURSE: {\r\n            const foundIndex: number = state.courses_not_registed_now.findIndex(pr => pr.id === action.course_parent.id);\r\n            let courses_not_registed_now: ICourseParent[] = state.courses_not_registed_now;\r\n            courses_not_registed_now[foundIndex] = action.course_parent;\r\n            return { ...state, courses_not_registed_now: courses_not_registed_now };\r\n        }\r\n        case REMOVE_DOING_COURSE: {\r\n            return { ...state, courses_not_registed_now: state.courses_not_registed_now.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DOING_COURSE_ALL: {\r\n            return { ...state, courses_not_registed_now: [] };\r\n        }\r\n        case CHANGE_DOING_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseParent: action.course_parent };\r\n        }\r\n        case CLEAR_DOING_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseParent: null };\r\n        }\r\n\r\n        case INITIAL_DONE_COURSE: {\r\n            return { ...state, courses_registed : [...state.courses_registed, action.course_parent]};\r\n        }\r\n        case ADD_DONE_COURSE: {\r\n            return { ...state, courses_registed: [...state.courses_registed, action.course_parent]};\r\n        }\r\n        case EDIT_DONE_COURSE: {\r\n            const foundIndex: number = state.courses_registed.findIndex(pr => pr.id === action.course_parent.id);\r\n            let courses_registed: ICourseParent[] = state.courses_not_registed_now;\r\n            courses_registed[foundIndex] = action.course_parent;\r\n            return { ...state, courses_registed: courses_registed };\r\n        }\r\n        case REMOVE_DONE_COURSE: {\r\n            return { ...state, courses_registed: state.courses_registed.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DONE_COURSE_ALL: {\r\n            return { ...state, courses_registed: [] };\r\n        }\r\n        case CHANGE_DONE_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseParent: action.course_parent };\r\n        }\r\n        case CLEAR_DONE_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseParent: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default courseParentsReducer;","export interface IContestStudent{\r\n    id: string;\r\n    name: string;\r\n    student_id: string;\r\n    student_name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    total_contest_submission: number;\r\n    total_contest_submission_graded: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    creator_id: string;\r\n    art_type_id: string;\r\n    art_age_id: string;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ContestStudentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IContestStudentState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CONTEST_STUDENT_OPENING, CHANGE_CONTEST_STUDENT_OPENING_PENDING_EDIT, EDIT_CONTEST_STUDENT_OPENING, REMOVE_CONTEST_STUDENT_OPENING,\r\n    CLEAR_CONTEST_STUDENT_OPENING_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_CONTEST_STUDENT_OPENING, REMOVE_CONTEST_STUDENT_OPENING_ALL, INITIAL_CONTEST_STUDENT_NEW, ADD_CONTEST_STUDENT_NEW, EDIT_CONTEST_STUDENT_NEW, REMOVE_CONTEST_STUDENT_NEW, REMOVE_CONTEST_STUDENT_NEW_ALL, CHANGE_CONTEST_STUDENT_NEW_PENDING_EDIT, CLEAR_CONTEST_STUDENT_NEW_PENDING_EDIT, INITIAL_CONTEST_STUDENT_END, EDIT_CONTEST_STUDENT_END, ADD_CONTEST_STUDENT_END, REMOVE_CONTEST_STUDENT_END, REMOVE_CONTEST_STUDENT_END_ALL, CHANGE_CONTEST_STUDENT_END_PENDING_EDIT, CLEAR_CONTEST_STUDENT_END_PENDING_EDIT, INITIAL_CONTEST_STUDENT_NOT_OPEN_NOW, ADD_CONTEST_STUDENT_NOT_OPEN_NOW, EDIT_CONTEST_STUDENT_NOT_OPEN_NOW, REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW, REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW_ALL, CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT, CLEAR_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT} from \"../actions/contest_student.action\";\r\nimport { IContestStudent, ContestStudentModificationStatus } from \"../models/contest_student.interface\";\r\n\r\n\r\n\r\nconst initialState: IContestStudentState = {\r\n    modificationState: ContestStudentModificationStatus.None,\r\n    selectedContestStudent: null,\r\n    contest_opening: [],\r\n    contest_not_open_now: [],\r\n    contest_end: [],\r\n    contest_new: []\r\n};\r\n\r\nfunction contestStudentsReducer(state: IContestStudentState = initialState, action: IActionBase): IContestStudentState {\r\n    switch (action.type) {\r\n        case INITIAL_CONTEST_STUDENT_OPENING: {\r\n            return { ...state, contest_opening : [...state.contest_opening, action.contest]};\r\n        }\r\n        case ADD_CONTEST_STUDENT_OPENING: {\r\n            return { ...state, contest_opening: [...state.contest_opening, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_STUDENT_OPENING: {\r\n            const foundIndex: number = state.contest_opening.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_opening: IContestStudent[] = state.contest_opening;\r\n            contest_opening[foundIndex] = action.contest;\r\n            return { ...state, contest_opening: contest_opening };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_OPENING: {\r\n            return { ...state, contest_opening: state.contest_opening.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_OPENING_ALL: {\r\n            return { ...state, contest_opening: [] };\r\n        }\r\n        case CHANGE_CONTEST_STUDENT_OPENING_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_STUDENT_OPENING_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: null };\r\n        }\r\n\r\n\r\n        case INITIAL_CONTEST_STUDENT_END: {\r\n            return { ...state, contest_end : [...state.contest_end, action.contest]};\r\n        }\r\n        case ADD_CONTEST_STUDENT_END: {\r\n            return { ...state, contest_end: [...state.contest_end, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_STUDENT_END: {\r\n            const foundIndex: number = state.contest_end.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_end: IContestStudent[] = state.contest_end;\r\n            contest_end[foundIndex] = action.contest;\r\n            return { ...state, contest_end: contest_end };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_END: {\r\n            return { ...state, contest_end: state.contest_end.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_END_ALL: {\r\n            return { ...state, contest_end: [] };\r\n        }\r\n        case CHANGE_CONTEST_STUDENT_END_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_STUDENT_END_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: null };\r\n        }\r\n\r\n\r\n\r\n        case INITIAL_CONTEST_STUDENT_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now : [...state.contest_not_open_now, action.contest]};\r\n        }\r\n        case ADD_CONTEST_STUDENT_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now: [...state.contest_not_open_now, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_STUDENT_NOT_OPEN_NOW: {\r\n            const foundIndex: number = state.contest_not_open_now.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_not_open_now: IContestStudent[] = state.contest_not_open_now;\r\n            contest_not_open_now[foundIndex] = action.contest;\r\n            return { ...state, contest_not_open_now: contest_not_open_now };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now: state.contest_not_open_now.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW_ALL: {\r\n            return { ...state, contest_not_open_now: [] };\r\n        }\r\n        case CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: null };\r\n        }\r\n\r\n\r\n\r\n        case INITIAL_CONTEST_STUDENT_NEW: {\r\n            return { ...state, contest_new : [...state.contest_new, action.contest]};\r\n        }\r\n        case ADD_CONTEST_STUDENT_NEW: {\r\n            return { ...state, contest_new: [...state.contest_new, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_STUDENT_NEW: {\r\n            const foundIndex: number = state.contest_new.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_new: IContestStudent[] = state.contest_new;\r\n            contest_new[foundIndex] = action.contest;\r\n            return { ...state, contest_new: contest_new };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_NEW: {\r\n            return { ...state, contest_new: state.contest_new.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_NEW_ALL: {\r\n            return { ...state, contest_new: [] };\r\n        }\r\n        case CHANGE_CONTEST_STUDENT_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_STUDENT_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default contestStudentsReducer;","export interface ICart {\r\n    id: string;\r\n    name: string;\r\n    image: string;\r\n    student_id: string;\r\n    student_name: string;\r\n    price: number;\r\n    quantity: number;\r\n}\r\n\r\nexport enum CartModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICartState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CART, CHANGE_CART_PENDING_EDIT, EDIT_CART, REMOVE_CART,\r\n    CLEAR_CART_PENDING_EDIT, SET_MODIFICATION_STATE, INCREASE_QUANTITY, DECREASE_QUANTITY} from \"../actions/cart.action\";\r\nimport { ICart, CartModificationStatus } from \"../models/cart.interface\";\r\n\r\n\r\n\r\nconst initialState: ICartState = {\r\n    modificationState: CartModificationStatus.None,\r\n    selectedCart: null,\r\n    carts: []\r\n};\r\n\r\nfunction cartReducer(state: ICartState = initialState, action: IActionBase): ICartState {\r\n    switch (action.type) {\r\n        case ADD_CART: {\r\n            return { ...state, carts: [...state.carts, action.cart]};\r\n        }\r\n        case EDIT_CART: {\r\n            const foundIndex: number = state.carts.findIndex(pr => pr.id === action.cart.id);\r\n            let cart: ICart[] = state.carts;\r\n            cart[foundIndex] = action.cart;\r\n            return { ...state, carts: cart };\r\n        }\r\n        case REMOVE_CART: {\r\n            return { ...state, carts: state.carts.filter(pr => pr.id !== action.id) };\r\n        }\r\n        \r\n        case INCREASE_QUANTITY: {\r\n            const foundIndex: number = state.carts.findIndex(pr => pr.id === action.id);\r\n            let cart: ICart[] = state.carts;\r\n            cart[foundIndex].quantity += 1;\r\n            return { ...state, carts: cart };\r\n        }\r\n\r\n        case DECREASE_QUANTITY: {\r\n            const foundIndex: number = state.carts.findIndex(pr => pr.id === action.id);\r\n            let cart: ICart[] = state.carts;\r\n            cart[foundIndex].quantity -= 1;\r\n            return { ...state, carts: cart };\r\n        }\r\n\r\n        case CHANGE_CART_PENDING_EDIT: {\r\n            return { ...state, selectedCart: action.cart };\r\n        }\r\n        case CLEAR_CART_PENDING_EDIT: {\r\n            return { ...state, selectedCart: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default cartReducer;","export interface IAttendance {\r\n    id: string;\r\n    student_id: string;\r\n    section_id: string;\r\n    status: string;\r\n    section_number: number;\r\n    email: string;\r\n    course_name: string;\r\n    course_id: string;\r\n    student_name: string;\r\n    section_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum AttendanceModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IAttendanceState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_ATTENDANCE, CHANGE_ATTENDANCE_PENDING_EDIT, EDIT_ATTENDANCE, REMOVE_ATTENDANCE,\r\n    CLEAR_ATTENDANCE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_ATTENDANCE, REMOVE_ATTENDANCE_ALL} from \"../actions/attendance.action\";\r\nimport { IAttendance, AttendanceModificationStatus } from \"../models/attendance.interface\";\r\n\r\n\r\n\r\nconst initialState: IAttendanceState = {\r\n    modificationState: AttendanceModificationStatus.None,\r\n    selectedAttendance: null,\r\n    attendances: []\r\n};\r\n\r\nfunction attendancesReducer(state: IAttendanceState = initialState, action: IActionBase): IAttendanceState {\r\n    switch (action.type) {\r\n        case INITIAL_ATTENDANCE: {\r\n            return { ...state, attendances : [...state.attendances, action.attendance]};\r\n        }\r\n        case ADD_ATTENDANCE: {\r\n            return { ...state, attendances: [...state.attendances, action.attendance]};\r\n        }\r\n        case EDIT_ATTENDANCE: {\r\n            const foundIndex: number = state.attendances.findIndex(pr => pr.id === action.attendance.id);\r\n            let attendances: IAttendance[] = state.attendances;\r\n            attendances[foundIndex] = action.attendance;\r\n            return { ...state, attendances: attendances };\r\n        }\r\n        case REMOVE_ATTENDANCE: {\r\n            return { ...state, attendances: state.attendances.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_ATTENDANCE_ALL: {\r\n            return { ...state, attendances: [] };\r\n        }\r\n        case CHANGE_ATTENDANCE_PENDING_EDIT: {\r\n            return { ...state, selectedAttendance: action.attendance };\r\n        }\r\n        case CLEAR_ATTENDANCE_PENDING_EDIT: {\r\n            return { ...state, selectedAttendance: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default attendancesReducer;","export interface IProfile {\r\n    id: string;\r\n    profile_image_url: string;\r\n}\r\n\r\nexport enum ProfileModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2\r\n}","import { IProfileState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_PROFILE, CHANGE_PROFILE_PENDING_EDIT, EDIT_PROFILE, REMOVE_PROFILE,\r\n    CLEAR_PROFILE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_PROFILE, REMOVE_PROFILE_ALL} from \"../actions/profile.action\";\r\nimport { IProfile, ProfileModificationStatus } from \"../models/profile.interface\";\r\n\r\n\r\n\r\nconst initialState: IProfileState = {\r\n    modificationState: ProfileModificationStatus.None,\r\n    selectedProfile: null,\r\n    profiles: []\r\n};\r\n\r\nfunction profilesReducer(state: IProfileState = initialState, action: IActionBase): IProfileState {\r\n    switch (action.type) {\r\n        case INITIAL_PROFILE: {\r\n            return { ...state, profiles : [...state.profiles, action.profile]};\r\n        }\r\n        case ADD_PROFILE: {\r\n            return { ...state, profiles: [...state.profiles, action.profile]};\r\n        }\r\n        case EDIT_PROFILE: {\r\n            const foundIndex: number = state.profiles.findIndex(pr => pr.id === action.profile.id);\r\n            let profiles: IProfile[] = state.profiles;\r\n            profiles[foundIndex] = action.profile;\r\n            return { ...state, profiles: profiles };\r\n        }\r\n        case REMOVE_PROFILE: {\r\n            return { ...state, profiles: state.profiles.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_PROFILE_ALL: {\r\n            return { ...state, profiles: [] };\r\n        }\r\n        case CHANGE_PROFILE_PENDING_EDIT: {\r\n            return { ...state, selectedProfile: action.profile };\r\n        }\r\n        case CLEAR_PROFILE_PENDING_EDIT: {\r\n            return { ...state, selectedProfile: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default profilesReducer;","export interface IUserRegisterJoinSemester {\r\n    id: string;\r\n    student_id: string;\r\n    semester_class_id: string;\r\n    student_name: string;\r\n    link_url: string;\r\n    status: string;\r\n    payer_id: string;\r\n    payer_name: string;\r\n    course_name: string;\r\n    price: number;\r\n    time: string;\r\n}\r\n\r\nexport enum UserRegisterJoinSemesterModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IUserRegisterJoinSemesterState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_COMPLETED, CHANGE_COMPLETED_PENDING_EDIT, EDIT_COMPLETED, REMOVE_COMPLETED,\r\n    CLEAR_COMPLETED_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_COMPLETED, REMOVE_COMPLETED_ALL, INITIAL_WAITING, ADD_WAITING, EDIT_WAITING, REMOVE_WAITING, REMOVE_WAITING_ALL, CHANGE_WAITING_PENDING_EDIT, CLEAR_WAITING_PENDING_EDIT} from \"../actions/user_register_join_semester.action\";\r\nimport { IUserRegisterJoinSemester, UserRegisterJoinSemesterModificationStatus } from \"../models/user_register_join_semester.interface\";\r\n\r\n\r\n\r\nconst initialState: IUserRegisterJoinSemesterState = {\r\n    modificationState: UserRegisterJoinSemesterModificationStatus.None,\r\n    selectedUserRegisterJoinSemester: null,\r\n    completed: [],\r\n    waiting: []\r\n};\r\n\r\nfunction user_register_join_semestersReducer(state: IUserRegisterJoinSemesterState = initialState, action: IActionBase): IUserRegisterJoinSemesterState {\r\n    switch (action.type) {\r\n        case INITIAL_COMPLETED: {\r\n            return { ...state, completed : [...state.completed, action.user_register_join_semester]};\r\n        }\r\n        case ADD_COMPLETED: {\r\n            return { ...state, completed: [...state.completed, action.user_register_join_semester]};\r\n        }\r\n        case EDIT_COMPLETED: {\r\n            const foundIndex: number = state.completed.findIndex(pr => pr.id === action.user_register_join_semester.id);\r\n            let completed: IUserRegisterJoinSemester[] = state.completed;\r\n            completed[foundIndex] = action.user_register_join_semester;\r\n            return { ...state, completed: completed };\r\n        }\r\n        case REMOVE_COMPLETED: {\r\n            return { ...state, completed: state.completed.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_COMPLETED_ALL: {\r\n            return { ...state, completed: [] };\r\n        }\r\n        case CHANGE_COMPLETED_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterJoinSemester: action.user_register_join_semester };\r\n        }\r\n        case CLEAR_COMPLETED_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterJoinSemester: null };\r\n        }\r\n\r\n        case INITIAL_WAITING: {\r\n            return { ...state, waiting : [...state.waiting, action.user_register_join_semester]};\r\n        }\r\n        case ADD_WAITING: {\r\n            return { ...state, waiting: [...state.waiting, action.user_register_join_semester]};\r\n        }\r\n        case EDIT_WAITING: {\r\n            const foundIndex: number = state.waiting.findIndex(pr => pr.id === action.user_register_join_semester.id);\r\n            let waiting: IUserRegisterJoinSemester[] = state.waiting;\r\n            waiting[foundIndex] = action.user_register_join_semester;\r\n            return { ...state, waiting: waiting };\r\n        }\r\n        case REMOVE_WAITING: {\r\n            return { ...state, waiting: state.waiting.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_WAITING_ALL: {\r\n            return { ...state, waiting: [] };\r\n        }\r\n        case CHANGE_WAITING_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterJoinSemester: action.user_register_join_semester };\r\n        }\r\n        case CLEAR_WAITING_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterJoinSemester: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default user_register_join_semestersReducer;","export interface ICourseStudent {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    creator_id: string;\r\n    art_type_id: string;\r\n    art_type_name: string;\r\n    art_level_id: string;\r\n    art_level_name: string;\r\n    art_age_id: string;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum CourseStudentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICourseStudent, CourseStudentModificationStatus } from \"../models/course_student.interface\";\r\n\r\n// register_successfull_course_students\r\nexport const ADD_DOING_COURSE: string = \"ADD_DOING_COURSE\";\r\nexport const EDIT_DOING_COURSE: string = \"EDIT_DOING_COURSE\";\r\nexport const REMOVE_DOING_COURSE: string = \"REMOVE_DOING_COURSE\";\r\nexport const CHANGE_DOING_COURSE_AMOUNT: string = \"CHANGE_DOING_COURSE_AMOUNT\";\r\nexport const CHANGE_DOING_COURSE_PENDING_EDIT: string = \"CHANGE_DOING_COURSE_PENDING_EDIT\";\r\nexport const CLEAR_DOING_COURSE_PENDING_EDIT: string = \"CLEAR_DOING_COURSE_PENDING_EDIT\";\r\nexport const REMOVE_DOING_COURSE_ALL: string = \"REMOVE_DOING_COURSE_ALL\";\r\nexport const INITIAL_DOING_COURSE: string = \"INITIAL_DOING_COURSE\";\r\n\r\n// not_register_course_students\r\nexport const ADD_DONE_COURSE: string = \"ADD_DONE_COURSE\";\r\nexport const EDIT_DONE_COURSE: string = \"EDIT_DONE_COURSE\";\r\nexport const REMOVE_DONE_COURSE: string = \"REMOVE_DONE_COURSE\";\r\nexport const CHANGE_DONE_COURSE_AMOUNT: string = \"CHANGE_DONE_COURSE_AMOUNT\";\r\nexport const CHANGE_DONE_COURSE_PENDING_EDIT: string = \"CHANGE_DONE_COURSE_PENDING_EDIT\";\r\nexport const CLEAR_DONE_COURSE_PENDING_EDIT: string = \"CLEAR_DONE_COURSE_PENDING_EDIT\";\r\nexport const REMOVE_DONE_COURSE_ALL: string = \"REMOVE_DONE_COURSE_ALL\";\r\nexport const INITIAL_DONE_COURSE: string = \"INITIAL_DONE_COURSE\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course_student: ICourseStudent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course_student\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCourseNotRegistedNow(course_student: ICourseStudent): IInitialCourseNotRegistedNowActionType {\r\n    return { type: INITIAL_DOING_COURSE, course_student: course_student };\r\n}\r\n\r\nexport function removeCourseNotRegistedNowAll(): IRemoveCourseNotRegistedNowAllActionType {\r\n    return { type: REMOVE_DOING_COURSE_ALL };\r\n}\r\n\r\nexport function addCourseNotRegistedNow(course_student: ICourseStudent): IAddCourseNotRegistedNowActionType {\r\n    return { type: ADD_DOING_COURSE, course_student: course_student };\r\n}\r\n\r\nexport function editCourseNotRegistedNow(course_student: ICourseStudent): IEditCourseNotRegistedNowActionType {\r\n    return { type: EDIT_DOING_COURSE, course_student: course_student };\r\n}\r\n\r\nexport function removeCourseNotRegistedNow(id: string): IRemoveCourseNotRegistedNowActionType {\r\n    return { type: REMOVE_DOING_COURSE, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseNotRegistedNow(course_student: ICourseStudent): IChangeSelectedCourseNotRegistedNowActionType {\r\n    return { type: CHANGE_DOING_COURSE_PENDING_EDIT, course_student: course_student };\r\n}\r\n\r\nexport function clearSelectedCourseNotRegistedNow(): IClearSelectedCourseNotRegistedNowActionType {\r\n    return { type: CLEAR_DOING_COURSE_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialCourseRegisted(course_student: ICourseStudent): IInitialCourseRegistedActionType {\r\n    return { type: INITIAL_DONE_COURSE, course_student: course_student };\r\n}\r\n\r\nexport function removeCourseRegistedAll(): IRemoveCourseRegistedAllActionType {\r\n    return { type: REMOVE_DONE_COURSE_ALL };\r\n}\r\n\r\nexport function addCourseRegisted(course_student: ICourseStudent): IAddCourseRegistedActionType {\r\n    return { type: ADD_DONE_COURSE, course_student: course_student };\r\n}\r\n\r\nexport function editCourseRegisted(course_student: ICourseStudent): IEditCourseRegistedActionType {\r\n    return { type: EDIT_DONE_COURSE, course_student: course_student };\r\n}\r\n\r\nexport function removeCourseRegisted(id: string): IRemoveCourseRegistedActionType {\r\n    return { type: REMOVE_DONE_COURSE, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseRegisted(course_student: ICourseStudent): IChangeSelectedCourseRegistedActionType {\r\n    return { type: CHANGE_DONE_COURSE_PENDING_EDIT, course_student: course_student };\r\n}\r\n\r\nexport function clearSelectedCourseRegisted(): IClearSelectedCourseRegistedActionType {\r\n    return { type: CLEAR_DONE_COURSE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseStudentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_course_students\r\ninterface IAddCourseNotRegistedNowActionType { type: string, course_student: ICourseStudent };\r\ninterface IEditCourseNotRegistedNowActionType { type: string, course_student: ICourseStudent };\r\ninterface IRemoveCourseNotRegistedNowActionType { type: string, id: string };\r\ninterface IChangeSelectedCourseNotRegistedNowActionType { type: string, course_student: ICourseStudent };\r\ninterface IClearSelectedCourseNotRegistedNowActionType { type: string };\r\ninterface IRemoveCourseNotRegistedNowAllActionType { type: string }\r\ninterface IInitialCourseNotRegistedNowActionType {type: string, course_student: ICourseStudent}\r\n\r\n// not_register_course_students\r\ninterface IAddCourseRegistedActionType { type: string, course_student: ICourseStudent };\r\ninterface IEditCourseRegistedActionType { type: string, course_student: ICourseStudent };\r\ninterface IRemoveCourseRegistedActionType { type: string, id: string };\r\ninterface IChangeSelectedCourseRegistedActionType { type: string, course_student: ICourseStudent };\r\ninterface IClearSelectedCourseRegistedActionType { type: string };\r\ninterface IRemoveCourseRegistedAllActionType { type: string }\r\ninterface IInitialCourseRegistedActionType {type: string, course_student: ICourseStudent}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  CourseStudentModificationStatus};","import { ICourseStudentState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_DOING_COURSE, CHANGE_DOING_COURSE_PENDING_EDIT, EDIT_DOING_COURSE, REMOVE_DOING_COURSE,\r\n    CLEAR_DOING_COURSE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_DOING_COURSE, REMOVE_DOING_COURSE_ALL, INITIAL_DONE_COURSE, ADD_DONE_COURSE, EDIT_DONE_COURSE, REMOVE_DONE_COURSE, REMOVE_DONE_COURSE_ALL, CHANGE_DONE_COURSE_PENDING_EDIT, CLEAR_DONE_COURSE_PENDING_EDIT} from \"../actions/course_student.action\";\r\nimport { ICourseStudent, CourseStudentModificationStatus } from \"../models/course_student.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseStudentState = {\r\n    modificationState: CourseStudentModificationStatus.None,\r\n    selectedCourseStudent: null,\r\n    courses_registed: [],\r\n    courses_not_registed_now: []\r\n};\r\n\r\nfunction courseStudentsReducer(state: ICourseStudentState = initialState, action: IActionBase): ICourseStudentState {\r\n    switch (action.type) {\r\n        case INITIAL_DOING_COURSE: {\r\n            return { ...state, courses_not_registed_now : [...state.courses_not_registed_now, action.course_student]};\r\n        }\r\n        case ADD_DOING_COURSE: {\r\n            return { ...state, courses_not_registed_now: [...state.courses_not_registed_now, action.course_student]};\r\n        }\r\n        case EDIT_DOING_COURSE: {\r\n            const foundIndex: number = state.courses_not_registed_now.findIndex(pr => pr.id === action.course_student.id);\r\n            let courses_not_registed_now: ICourseStudent[] = state.courses_not_registed_now;\r\n            courses_not_registed_now[foundIndex] = action.course_student;\r\n            return { ...state, courses_not_registed_now: courses_not_registed_now };\r\n        }\r\n        case REMOVE_DOING_COURSE: {\r\n            return { ...state, courses_not_registed_now: state.courses_not_registed_now.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DOING_COURSE_ALL: {\r\n            return { ...state, courses_not_registed_now: [] };\r\n        }\r\n        case CHANGE_DOING_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseStudent: action.course_student };\r\n        }\r\n        case CLEAR_DOING_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseStudent: null };\r\n        }\r\n\r\n        case INITIAL_DONE_COURSE: {\r\n            return { ...state, courses_registed : [...state.courses_registed, action.course_student]};\r\n        }\r\n        case ADD_DONE_COURSE: {\r\n            return { ...state, courses_registed: [...state.courses_registed, action.course_student]};\r\n        }\r\n        case EDIT_DONE_COURSE: {\r\n            const foundIndex: number = state.courses_registed.findIndex(pr => pr.id === action.course_student.id);\r\n            let courses_registed: ICourseStudent[] = state.courses_not_registed_now;\r\n            courses_registed[foundIndex] = action.course_student;\r\n            return { ...state, courses_registed: courses_registed };\r\n        }\r\n        case REMOVE_DONE_COURSE: {\r\n            return { ...state, courses_registed: state.courses_registed.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DONE_COURSE_ALL: {\r\n            return { ...state, courses_registed: [] };\r\n        }\r\n        case CHANGE_DONE_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseStudent: action.course_student };\r\n        }\r\n        case CLEAR_DONE_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseStudent: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default courseStudentsReducer;","export interface ICourseNew {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    creator_id: string;\r\n    art_type_id: string;\r\n    art_level_id: string;\r\n    art_age_id: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    total: number;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum CourseNewModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICourseNewState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_COURSE_NEW, CHANGE_COURSE_NEW_PENDING_EDIT, EDIT_COURSE_NEW, REMOVE_COURSE_NEW,\r\n    CLEAR_COURSE_NEW_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_COURSE_NEW, REMOVE_COURSE_NEW_ALL} from \"../actions/course_new.action\";\r\nimport { ICourseNew, CourseNewModificationStatus } from \"../models/course_new.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseNewState = {\r\n    modificationState: CourseNewModificationStatus.None,\r\n    selectedCourseNew: null,\r\n    course_news: []\r\n};\r\n\r\nfunction course_newsReducer(state: ICourseNewState = initialState, action: IActionBase): ICourseNewState {\r\n    switch (action.type) {\r\n        case INITIAL_COURSE_NEW: {\r\n            return { ...state, course_news : [...state.course_news, action.course_new]};\r\n        }\r\n        case ADD_COURSE_NEW: {\r\n            return { ...state, course_news: [...state.course_news, action.course_new]};\r\n        }\r\n        case EDIT_COURSE_NEW: {\r\n            const foundIndex: number = state.course_news.findIndex(pr => pr.id === action.course_new.id);\r\n            let course_news: ICourseNew[] = state.course_news;\r\n            course_news[foundIndex] = action.course_new;\r\n            return { ...state, course_news: course_news };\r\n        }\r\n        case REMOVE_COURSE_NEW: {\r\n            return { ...state, course_news: state.course_news.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_COURSE_NEW_ALL: {\r\n            return { ...state, course_news: [] };\r\n        }\r\n        case CHANGE_COURSE_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedCourseNew: action.course_new };\r\n        }\r\n        case CLEAR_COURSE_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedCourseNew: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default course_newsReducer;","export interface ISemesterClassStudent {\r\n    id: string;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: string;\r\n    semester_class_id: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    semester_name: string;\r\n    semester_id: string;\r\n    status: string;\r\n    image_url: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n    registration_deadline: string;\r\n}\r\n\r\nexport enum SemesterClassStudentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ISemesterClassStudentState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_NOT_PAYED_NOW, EDIT_NOT_PAYED_NOW, REMOVE_NOT_PAYED_NOW,INITIAL_NOT_PAYED_NOW, REMOVE_NOT_PAYED_NOW_ALL, \r\n    ADD_PAYED, EDIT_PAYED, REMOVE_PAYED, INITIAL_PAYED, REMOVE_PAYED_ALL, \r\n    ADD_NOT_PAYED, EDIT_NOT_PAYED, REMOVE_NOT_PAYED , INITIAL_NOT_PAYED, REMOVE_NOT_PAYED_ALL,\r\n    CLEAR_NOT_PAYED_NOW_PENDING_EDIT, CHANGE_NOT_PAYED_NOW_PENDING_EDIT, SET_MODIFICATION_STATE\r\n\r\n} from \"../actions/semester_class_student.action\";\r\nimport { ISemesterClassStudent, SemesterClassStudentModificationStatus } from \"../models/semester_class_student.interface\";\r\n\r\nconst initialState: ISemesterClassStudentState = {\r\n    modificationState: SemesterClassStudentModificationStatus.None,\r\n    selectedSemesterClassStudent: null,\r\n    not_payed_now: [],\r\n    payed: [],\r\n    not_payed: []\r\n};\r\n\r\nfunction semesterClassStudentReducer(state: ISemesterClassStudentState = initialState, action: IActionBase): ISemesterClassStudentState {\r\n    switch (action.type) {\r\n        case INITIAL_NOT_PAYED_NOW: {\r\n            return { ...state, not_payed_now : [...state.not_payed_now, action.semester_class_student]};\r\n        }\r\n        case REMOVE_NOT_PAYED_NOW_ALL: {\r\n            return { ...state, not_payed_now: [] };\r\n        }\r\n        case ADD_NOT_PAYED_NOW: {\r\n            return { ...state, not_payed_now: [...state.not_payed_now, action.semester_class_student]};\r\n        }\r\n        case EDIT_NOT_PAYED_NOW: {\r\n            const foundIndex: number = state.not_payed_now.findIndex(pr => pr.id === action.semester_class_student.id);\r\n            let not_payed_now: ISemesterClassStudent[] = state.not_payed_now;\r\n            not_payed_now[foundIndex] = action.semester_class_student;\r\n            return { ...state, not_payed_now: not_payed_now };\r\n        }\r\n        case REMOVE_NOT_PAYED_NOW: {\r\n            return { ...state, not_payed_now: state.not_payed_now.filter(x=>x.id !== action.semester_class_student.id)};\r\n        }\r\n\r\n        case INITIAL_PAYED: {\r\n            return { ...state, payed : [...state.payed, action.semester_class_student]};\r\n        }\r\n        case REMOVE_PAYED_ALL: {\r\n            return { ...state, payed: [] };\r\n        }\r\n        case ADD_PAYED: {\r\n            return { ...state, payed: [...state.payed, action.semester_class_student]};\r\n        }\r\n        case EDIT_PAYED: {\r\n            const foundIndex: number = state.payed.findIndex(pr => pr.id === action.semester_class_student.id);\r\n            let accept_not_payed_now: ISemesterClassStudent[] = state.payed;\r\n            accept_not_payed_now[foundIndex] = action.semester_class_student;\r\n            return { ...state, payed: accept_not_payed_now };\r\n        }\r\n        case REMOVE_PAYED: {\r\n            return { ...state, payed: state.payed.filter(x=>x.id !== action.semester_class_student.id)};\r\n        }\r\n\r\n        case INITIAL_NOT_PAYED: {\r\n            return { ...state, not_payed : [...state.not_payed, action.semester_class_student]};\r\n        }\r\n        case REMOVE_NOT_PAYED_ALL: {\r\n            return { ...state, not_payed: [] };\r\n        }\r\n        case ADD_NOT_PAYED: {\r\n            return { ...state, not_payed: [...state.not_payed, action.semester_class_student]};\r\n        }\r\n        case EDIT_NOT_PAYED: {\r\n            const foundIndex: number = state.not_payed.findIndex(pr => pr.id === action.semester_class_student.id);\r\n            let remove_not_payed_now: ISemesterClassStudent[] = state.not_payed;\r\n            remove_not_payed_now[foundIndex] = action.semester_class_student;\r\n            return { ...state, not_payed: remove_not_payed_now };\r\n        }\r\n        case REMOVE_NOT_PAYED: {\r\n            return { ...state, not_payed: state.not_payed.filter(x=>x.id !== action.semester_class_student.id)};\r\n        }\r\n        \r\n        case CHANGE_NOT_PAYED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClassStudent: action.semester_class_student };\r\n        }\r\n        case CLEAR_NOT_PAYED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClassStudent: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default semesterClassStudentReducer;","export interface IClassHasRegisterJoinSemester {\r\n    classes_id: string;\r\n    user_register_join_semester_id: string;\r\n    review_star: number;\r\n    student_feedback: string;\r\n    teacher_feedback: string;\r\n}\r\n\r\nexport enum ClassHasRegisterJoinSemesterModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IClassHasRegisterJoinSemesterState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CLASS_HAS_REGISTER_JOIN_SEMESTER, CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT, EDIT_CLASS_HAS_REGISTER_JOIN_SEMESTER, REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER,\r\n    CLEAR_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_CLASS_HAS_REGISTER_JOIN_SEMESTER, REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER_ALL} from \"../actions/class_has_register_join_semester.action\";\r\nimport { IClassHasRegisterJoinSemester, ClassHasRegisterJoinSemesterModificationStatus } from \"../models/class_has_register_join_semester.interface\";\r\n\r\n\r\n\r\nconst initialState: IClassHasRegisterJoinSemesterState = {\r\n    modificationState: ClassHasRegisterJoinSemesterModificationStatus.None,\r\n    selectedClassHasRegisterJoinSemester: null,\r\n    class_has_register_join_semesters: []\r\n};\r\n\r\nfunction class_has_register_join_semestersReducer(state: IClassHasRegisterJoinSemesterState = initialState, action: IActionBase): IClassHasRegisterJoinSemesterState {\r\n    switch (action.type) {\r\n        case INITIAL_CLASS_HAS_REGISTER_JOIN_SEMESTER: {\r\n            return { ...state, class_has_register_join_semesters : [...state.class_has_register_join_semesters, action.class_has_register_join_semester]};\r\n        }\r\n        case ADD_CLASS_HAS_REGISTER_JOIN_SEMESTER: {\r\n            return { ...state, class_has_register_join_semesters: [...state.class_has_register_join_semesters, action.class_has_register_join_semester]};\r\n        }\r\n        case EDIT_CLASS_HAS_REGISTER_JOIN_SEMESTER: {\r\n            const foundIndex: number = state.class_has_register_join_semesters.findIndex(pr => pr.classes_id === action.class_has_register_join_semester.classes_id);\r\n            let class_has_register_join_semesters: IClassHasRegisterJoinSemester[] = state.class_has_register_join_semesters;\r\n            class_has_register_join_semesters[foundIndex] = action.class_has_register_join_semester;\r\n            return { ...state, class_has_register_join_semesters: class_has_register_join_semesters };\r\n        }\r\n        case REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER: {\r\n            return { ...state, class_has_register_join_semesters: state.class_has_register_join_semesters.filter(pr => pr.classes_id !== action.id) };\r\n        }\r\n        case REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER_ALL: {\r\n            return { ...state, class_has_register_join_semesters: [] };\r\n        }\r\n        case CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT: {\r\n            return { ...state, selectedClassHasRegisterJoinSemester: action.class_has_register_join_semester };\r\n        }\r\n        case CLEAR_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT: {\r\n            return { ...state, selectedClassHasRegisterJoinSemester: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default class_has_register_join_semestersReducer;","export interface ICourseParentNew {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    creator_id: string;\r\n    art_type_id: string;\r\n    art_level_id: string;\r\n    art_age_id: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    total: number;\r\n    student_registered_name: string[];\r\n    student_registered_id: string[];\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum CourseParentNewModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICourseParentNewState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_COURSE_PARENT_NEW, CHANGE_COURSE_PARENT_NEW_PENDING_EDIT, EDIT_COURSE_PARENT_NEW, REMOVE_COURSE_PARENT_NEW,\r\n    CLEAR_COURSE_PARENT_NEW_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_COURSE_PARENT_NEW, REMOVE_COURSE_PARENT_NEW_ALL} from \"../actions/course_parent_new.action\";\r\nimport { ICourseParentNew, CourseParentNewModificationStatus } from \"../models/course_parent_new.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseParentNewState = {\r\n    modificationState: CourseParentNewModificationStatus.None,\r\n    selectedCourseParentNew: null,\r\n    courses: []\r\n};\r\n\r\nfunction course_parent_newsReducer(state: ICourseParentNewState = initialState, action: IActionBase): ICourseParentNewState {\r\n    switch (action.type) {\r\n        case INITIAL_COURSE_PARENT_NEW: {\r\n            return { ...state, courses : [...state.courses, action.course_parent_new]};\r\n        }\r\n        case ADD_COURSE_PARENT_NEW: {\r\n            return { ...state, courses: [...state.courses, action.course_parent_new]};\r\n        }\r\n        case EDIT_COURSE_PARENT_NEW: {\r\n            const foundIndex: number = state.courses.findIndex(pr => pr.id === action.course_parent_new.id);\r\n            let courses: ICourseParentNew[] = state.courses;\r\n            courses[foundIndex] = action.course_parent_new;\r\n            return { ...state, courses: courses };\r\n        }\r\n        case REMOVE_COURSE_PARENT_NEW: {\r\n            return { ...state, courses: state.courses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_COURSE_PARENT_NEW_ALL: {\r\n            return { ...state, courses: [] };\r\n        }\r\n        case CHANGE_COURSE_PARENT_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedCourseParentNew: action.course_parent_new };\r\n        }\r\n        case CLEAR_COURSE_PARENT_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedCourseParentNew: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default course_parent_newsReducer;","export interface ISemesterClassParent {\r\n    id: string;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    semester_name: string;\r\n    semester_id: string;\r\n    image_url: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n    registration_deadline: string;\r\n    student_registered_name: string[];\r\n    student_registered_id: string[];\r\n    status: string;\r\n}\r\n\r\nexport enum SemesterClassParentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ISemesterClassParentState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_NOT_PAYED_NOW, EDIT_NOT_PAYED_NOW, REMOVE_NOT_PAYED_NOW,INITIAL_NOT_PAYED_NOW, REMOVE_NOT_PAYED_NOW_ALL, \r\n    ADD_PAYED, EDIT_PAYED, REMOVE_PAYED, INITIAL_PAYED, REMOVE_PAYED_ALL, \r\n    ADD_NOT_PAYED, EDIT_NOT_PAYED, REMOVE_NOT_PAYED , INITIAL_NOT_PAYED, REMOVE_NOT_PAYED_ALL,\r\n    CLEAR_NOT_PAYED_NOW_PENDING_EDIT, CHANGE_NOT_PAYED_NOW_PENDING_EDIT, SET_MODIFICATION_STATE\r\n\r\n} from \"../actions/semester_class_parent.action\";\r\nimport { ISemesterClassParent, SemesterClassParentModificationStatus } from \"../models/semester_class_parent.interface\";\r\n\r\nconst initialState: ISemesterClassParentState = {\r\n    modificationState: SemesterClassParentModificationStatus.None,\r\n    selectedSemesterClassParent: null,\r\n    not_payed_now: [],\r\n    payed: [],\r\n    not_payed: []\r\n};\r\n\r\nfunction semesterClassParentReducer(state: ISemesterClassParentState = initialState, action: IActionBase): ISemesterClassParentState {\r\n    switch (action.type) {\r\n        case INITIAL_NOT_PAYED_NOW: {\r\n            return { ...state, not_payed_now : [...state.not_payed_now, action.semester_class_parent]};\r\n        }\r\n        case REMOVE_NOT_PAYED_NOW_ALL: {\r\n            return { ...state, not_payed_now: [] };\r\n        }\r\n        case ADD_NOT_PAYED_NOW: {\r\n            return { ...state, not_payed_now: [...state.not_payed_now, action.semester_class_parent]};\r\n        }\r\n        case EDIT_NOT_PAYED_NOW: {\r\n            const foundIndex: number = state.not_payed_now.findIndex(pr => pr.id === action.semester_class_parent.id);\r\n            let not_payed_now: ISemesterClassParent[] = state.not_payed_now;\r\n            not_payed_now[foundIndex] = action.semester_class_parent;\r\n            return { ...state, not_payed_now: not_payed_now };\r\n        }\r\n        case REMOVE_NOT_PAYED_NOW: {\r\n            return { ...state, not_payed_now: state.not_payed_now.filter(x=>x.id !== action.semester_class_parent.id)};\r\n        }\r\n\r\n        case INITIAL_PAYED: {\r\n            return { ...state, payed : [...state.payed, action.semester_class_parent]};\r\n        }\r\n        case REMOVE_PAYED_ALL: {\r\n            return { ...state, payed: [] };\r\n        }\r\n        case ADD_PAYED: {\r\n            return { ...state, payed: [...state.payed, action.semester_class_parent]};\r\n        }\r\n        case EDIT_PAYED: {\r\n            const foundIndex: number = state.payed.findIndex(pr => pr.id === action.semester_class_parent.id);\r\n            let accept_not_payed_now: ISemesterClassParent[] = state.payed;\r\n            accept_not_payed_now[foundIndex] = action.semester_class_parent;\r\n            return { ...state, payed: accept_not_payed_now };\r\n        }\r\n        case REMOVE_PAYED: {\r\n            return { ...state, payed: state.payed.filter(x=>x.id !== action.semester_class_parent.id)};\r\n        }\r\n\r\n        case INITIAL_NOT_PAYED: {\r\n            return { ...state, not_payed : [...state.not_payed, action.semester_class_parent]};\r\n        }\r\n        case REMOVE_NOT_PAYED_ALL: {\r\n            return { ...state, not_payed: [] };\r\n        }\r\n        case ADD_NOT_PAYED: {\r\n            return { ...state, not_payed: [...state.not_payed, action.semester_class_parent]};\r\n        }\r\n        case EDIT_NOT_PAYED: {\r\n            const foundIndex: number = state.not_payed.findIndex(pr => pr.id === action.semester_class_parent.id);\r\n            let remove_not_payed_now: ISemesterClassParent[] = state.not_payed;\r\n            remove_not_payed_now[foundIndex] = action.semester_class_parent;\r\n            return { ...state, not_payed: remove_not_payed_now };\r\n        }\r\n        case REMOVE_NOT_PAYED: {\r\n            return { ...state, not_payed: state.not_payed.filter(x=>x.id !== action.semester_class_parent.id)};\r\n        }\r\n        \r\n        case CHANGE_NOT_PAYED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClassParent: action.semester_class_parent };\r\n        }\r\n        case CLEAR_NOT_PAYED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClassParent: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default semesterClassParentReducer;","export interface IContestParentNew{\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    creator_id: string;\r\n    art_type_id: string;\r\n    art_age_id: string;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n    student_registered_name: string[];\r\n    student_registered_id: string[];\r\n}\r\n\r\nexport enum ContestParentNewModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IContestParentNewState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CONTEST_PARENT_NEW, CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT, EDIT_CONTEST_PARENT_NEW, REMOVE_CONTEST_PARENT_NEW,\r\n    CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_CONTEST_PARENT_NEW, REMOVE_CONTEST_PARENT_NEW_ALL} from \"../actions/contest_parent_new.action\";\r\nimport { IContestParentNew, ContestParentNewModificationStatus } from \"../models/contest_parent_new.interface\";\r\n\r\n\r\n\r\nconst initialState: IContestParentNewState = {\r\n    modificationState: ContestParentNewModificationStatus.None,\r\n    selectedContestParentNew: null,\r\n    contests: []\r\n};\r\n\r\nfunction contest_parent_newsReducer(state: IContestParentNewState = initialState, action: IActionBase): IContestParentNewState {\r\n    switch (action.type) {\r\n        case INITIAL_CONTEST_PARENT_NEW: {\r\n            return { ...state, contests : [...state.contests, action.contest_parent_new]};\r\n        }\r\n        case ADD_CONTEST_PARENT_NEW: {\r\n            return { ...state, contests: [...state.contests, action.contest_parent_new]};\r\n        }\r\n        case EDIT_CONTEST_PARENT_NEW: {\r\n            const foundIndex: number = state.contests.findIndex(pr => pr.id === action.contest_parent_new.id);\r\n            let contests: IContestParentNew[] = state.contests;\r\n            contests[foundIndex] = action.contest_parent_new;\r\n            return { ...state, contests: contests };\r\n        }\r\n        case REMOVE_CONTEST_PARENT_NEW: {\r\n            return { ...state, contests: state.contests.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_PARENT_NEW_ALL: {\r\n            return { ...state, contests: [] };\r\n        }\r\n        case CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedContestParentNew: action.contest_parent_new };\r\n        }\r\n        case CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedContestParentNew: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default contest_parent_newsReducer;","export interface ICourseTeacherNew {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    art_type_id: string;\r\n    art_level_id: string;\r\n    art_age_id: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    total: number;\r\n    total_registed: number;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum CourseTeacherNewModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICourseTeacherNewState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_COURSE_TEACHER_NEW, CHANGE_COURSE_TEACHER_NEW_PENDING_EDIT, EDIT_COURSE_TEACHER_NEW, REMOVE_COURSE_TEACHER_NEW,\r\n    CLEAR_COURSE_TEACHER_NEW_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_COURSE_TEACHER_NEW, REMOVE_COURSE_TEACHER_NEW_ALL} from \"../actions/course_teacher_new.action\";\r\nimport { ICourseTeacherNew, CourseTeacherNewModificationStatus } from \"../models/course_teacher_new.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseTeacherNewState = {\r\n    modificationState: CourseTeacherNewModificationStatus.None,\r\n    selectedCourseTeacherNew: null,\r\n    courses: []\r\n};\r\n\r\nfunction course_teacher_newsReducer(state: ICourseTeacherNewState = initialState, action: IActionBase): ICourseTeacherNewState {\r\n    switch (action.type) {\r\n        case INITIAL_COURSE_TEACHER_NEW: {\r\n            return { ...state, courses : [...state.courses, action.course_teacher_new]};\r\n        }\r\n        case ADD_COURSE_TEACHER_NEW: {\r\n            return { ...state, courses: [...state.courses, action.course_teacher_new]};\r\n        }\r\n        case EDIT_COURSE_TEACHER_NEW: {\r\n            const foundIndex: number = state.courses.findIndex(pr => pr.id === action.course_teacher_new.id);\r\n            let courses: ICourseTeacherNew[] = state.courses;\r\n            courses[foundIndex] = action.course_teacher_new;\r\n            return { ...state, courses: courses };\r\n        }\r\n        case REMOVE_COURSE_TEACHER_NEW: {\r\n            return { ...state, courses: state.courses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_COURSE_TEACHER_NEW_ALL: {\r\n            return { ...state, courses: [] };\r\n        }\r\n        case CHANGE_COURSE_TEACHER_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedCourseTeacherNew: action.course_teacher_new };\r\n        }\r\n        case CLEAR_COURSE_TEACHER_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedCourseTeacherNew: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default course_teacher_newsReducer;","export interface ISemesterClassTeacher {\r\n    id: string;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    semester_name: string;\r\n    semester_id: string;\r\n    image_url: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n    registration_deadline: string;\r\n    status: string;\r\n}\r\n\r\nexport enum SemesterClassTeacherModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ISemesterClassTeacherState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SEMESTER_CLASS_TEACHER, CHANGE_SEMESTER_CLASS_TEACHER_PENDING_EDIT, EDIT_SEMESTER_CLASS_TEACHER, REMOVE_SEMESTER_CLASS_TEACHER,\r\n    CLEAR_SEMESTER_CLASS_TEACHER_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SEMESTER_CLASS_TEACHER, REMOVE_SEMESTER_CLASS_TEACHER_ALL} from \"../actions/semester_class_teacher.action\";\r\nimport { ISemesterClassTeacher, SemesterClassTeacherModificationStatus } from \"../models/semester_class_teacher.interface\";\r\n\r\n\r\n\r\nconst initialState: ISemesterClassTeacherState = {\r\n    modificationState: SemesterClassTeacherModificationStatus.None,\r\n    selectedSemesterClassTeacher: null,\r\n    semester_class_teachers: []\r\n};\r\n\r\nfunction semester_class_teachersReducer(state: ISemesterClassTeacherState = initialState, action: IActionBase): ISemesterClassTeacherState {\r\n    switch (action.type) {\r\n        case INITIAL_SEMESTER_CLASS_TEACHER: {\r\n            return { ...state, semester_class_teachers : [...state.semester_class_teachers, action.semester_class_teacher]};\r\n        }\r\n        case ADD_SEMESTER_CLASS_TEACHER: {\r\n            return { ...state, semester_class_teachers: [...state.semester_class_teachers, action.semester_class_teacher]};\r\n        }\r\n        case EDIT_SEMESTER_CLASS_TEACHER: {\r\n            const foundIndex: number = state.semester_class_teachers.findIndex(pr => pr.id === action.semester_class_teacher.id);\r\n            let semester_class_teachers: ISemesterClassTeacher[] = state.semester_class_teachers;\r\n            semester_class_teachers[foundIndex] = action.semester_class_teacher;\r\n            return { ...state, semester_class_teachers: semester_class_teachers };\r\n        }\r\n        case REMOVE_SEMESTER_CLASS_TEACHER: {\r\n            return { ...state, semester_class_teachers: state.semester_class_teachers.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SEMESTER_CLASS_TEACHER_ALL: {\r\n            return { ...state, semester_class_teachers: [] };\r\n        }\r\n        case CHANGE_SEMESTER_CLASS_TEACHER_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClassTeacher: action.semester_class_teacher };\r\n        }\r\n        case CLEAR_SEMESTER_CLASS_TEACHER_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClassTeacher: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default semester_class_teachersReducer;","import { combineReducers, Reducer } from \"redux\";\nimport { UPDATE_CURRENT_PATH } from \"../actions/root.actions\";\nimport { IRootStateType, IActionBase, IStateType } from \"../models/root.interface\";\nimport productsReducer from \"./products.reducer\";\nimport notificationReducer from \"./notification.reducer\";\nimport userReducer from \"./users.reducer\";\nimport orderReducer from \"./order.reducer\";\nimport accountReducer from \"./account.reducer\";\nimport semestersReducer from \"./semester.reducer\";\nimport lessonsReducer from \"./lesson.reducer\";\nimport schedulesReducer from \"./schedule.reducer\";\nimport schedule_itemsReducer from \"./schedule_item.reducer\";\nimport artTypesReducer from \"./art_type.reducer\";\nimport artLevelsReducer from \"./art_level.reducer\";\nimport artAgesReducer from \"./art_age.reducer\";\nimport coursesReducer from \"./course.reducer\";\nimport contestsReducer from \"./contest.reducer\";\nimport sectionTemplatesReducer from \"./section_template.reducer\";\nimport tutorialTemplatesReducer from \"./tutorial_template.reducer\";\nimport userGradeContestsReducer from \"./user_grade_contest.reducer\";\nimport tutorialTemplatePagesReducer from \"./tutorial_template_page.reducer\";\nimport teacherLeaveReducer from \"./teacher_leave.reducer\";\nimport studentLeaveReducer from \"./student_leave.reducer\";\nimport myClassesReducer from \"./my_class.reducer\";\nimport teacher_register_quantificationsReducer from \"./teacher_register_quantification.reducer\";\nimport informationClassesReducer from \"./information_class.reducer\";\nimport time_schedulesReducer from \"./time_schedule.reducer\";\nimport courseTeachersReducer from \"./course_teacher.reducer\";\nimport time_schedule_teachersReducer from \"./time_schedule_teacher.reducer\";\nimport classTeachersReducer from \"./class_teacher.reducer\";\nimport contestTeachersReducer from \"./contest_teacher.reducer\";\nimport semesterClassesReducer from \"./semester_class.reducer\";\nimport anonymousNotificationsReducer from \"./anonymous_notification.reducer\";\nimport sectionsReducer from \"./section.reducer\";\nimport tutorialPagesReducer from \"./tutorial_page.reducer\";\nimport exercisesReducer from \"./exercise.reducer\";\nimport exerciseSubmissionsReducer from \"./exercise_submission.reducer\";\nimport turnoversReducer from \"./turnover.reducer\";\nimport report_usersReducer from \"./report_user.reducer\";\nimport course_reportsReducer from \"./course_report.reducer\";\nimport exercise_levelsReducer from \"./exercise_level.reducer\";\nimport user_grade_exercise_submissionsReducer from \"./user_grade_exercise_submission.reducer\";\nimport exerciseStudentsReducer from \"./exercise_student.reducer\";\nimport tutorialsReducer from \"./tutorial.reducer\";\nimport userGradeContestSubmissionsReducer from \"./user_grade_contest_submission.reducer\";\nimport user_register_tutorial_pagesReducer from \"./user_register_tutorial_page.reducer\";\nimport userRegisterTutorialReducer from \"./user_register_tutorial.reducer\";\nimport contestSubmissionsReducer from \"./contest_submission.reducer\";\nimport schedule_time_classsReducer from \"./schedule_time_class.reducer\";\nimport notify_dbsReducer from \"./notify_db.reducer\";\nimport userReadNotificationsReducer from \"./user_read_notification.reducer\";\nimport notifysReducer from \"./notify.reducer\";\nimport classes_studentsReducer from \"./classes_student.reducer\";\nimport classesParentsReducer from \"./classes_parent.reducer\";\nimport courseParentsReducer from \"./course_parent.reducer\";\nimport contestStudentsReducer from \"./contest_student.reducer\";\nimport cartReducer from \"./cart.reducer\";\nimport attendancesReducer from \"./attendance.reducer\";\nimport profilesReducer from \"./profile.reducer\";\nimport user_register_join_semestersReducer from \"./user_register_join_semester.reducer\";\nimport courseStudentsReducer from \"./course_student.reducer\";\nimport course_newsReducer from \"./course_new.reducer\";\nimport semesterClassStudentReducer from \"./semester_class_student.reducer\";\nimport class_has_register_join_semestersReducer from \"./class_has_register_join_semester.reducer\";\nimport course_parent_newsReducer from \"./course_parent_new.reducer\";\nimport semesterClassParentReducer from \"./semester_class_parent.reducer\";\nimport contest_parent_newsReducer from \"./contest_parent_new.reducer\";\nimport course_teacher_newsReducer from \"./course_teacher_new.reducer\";\nimport semester_class_teachersReducer from \"./semester_class_teacher.reducer\";\n\n\nconst initialState: IRootStateType = {\n    page: {area: \"Trang chủ\", subArea: \"\"}\n};\n\nfunction rootReducer(state: IRootStateType = initialState, action: IActionBase): IRootStateType {\n    switch (action.type) {\n        case UPDATE_CURRENT_PATH:\n            return { ...state, page: {area: action.area, subArea: action.subArea}};\n        default:\n            return state;\n    }\n}\n\nconst rootReducers: Reducer<IStateType> = combineReducers({root: rootReducer,\n    products: productsReducer,\n    notifications: notificationReducer,\n    users: userReducer,\n    orders: orderReducer,\n    account: accountReducer,\n    semesters: semestersReducer,\n    lessons: lessonsReducer,\n    schedules: schedulesReducer,\n    schedule_items: schedule_itemsReducer,\n    art_types: artTypesReducer,\n    art_levels: artLevelsReducer,\n    art_ages: artAgesReducer,\n    courses: coursesReducer,\n    semester_classes: semesterClassesReducer,\n    contests: contestsReducer,\n    section_templates: sectionTemplatesReducer,\n    tutorial_templates: tutorialTemplatesReducer,\n    user_grade_contests: userGradeContestsReducer,\n    tutorial_template_pages: tutorialTemplatePagesReducer,\n    teacher_leaves: teacherLeaveReducer,\n    student_leaves: studentLeaveReducer,\n    user_register_join_semesters: user_register_join_semestersReducer,\n    myclasses: myClassesReducer,\n    teacher_register_quantifications: teacher_register_quantificationsReducer,\n    information_classes: informationClassesReducer,\n    time_schedules: time_schedulesReducer,\n    course_teachers: courseTeachersReducer,\n    time_schedule_teachers: time_schedule_teachersReducer,\n    class_teachers: classTeachersReducer,\n    contest_teachers: contestTeachersReducer,\n    anonymous_notifications: anonymousNotificationsReducer,\n    sections: sectionsReducer,\n    tutorial_pages: tutorialPagesReducer,\n    exercises: exercisesReducer,\n    exercise_submissions: exerciseSubmissionsReducer,\n    turnovers: turnoversReducer,\n    report_users: report_usersReducer,\n    course_reports: course_reportsReducer,\n    exercise_levels: exercise_levelsReducer,\n    user_grade_exercise_submissions: user_grade_exercise_submissionsReducer,\n    exercise_students: exerciseStudentsReducer,\n    tutorials: tutorialsReducer,\n    user_grade_contest_submissions: userGradeContestSubmissionsReducer,\n    user_register_tutorial_pages: user_register_tutorial_pagesReducer,\n    user_register_tutorials: userRegisterTutorialReducer,\n    contest_submissions: contestSubmissionsReducer,\n    schedule_time_classes: schedule_time_classsReducer,\n    notify_dbs: notify_dbsReducer,\n    user_read_notifications: userReadNotificationsReducer,\n    notifys: notifysReducer,\n    classes_students: classes_studentsReducer,\n    classes_parents: classesParentsReducer,\n    course_parents: courseParentsReducer,\n    contest_students: contestStudentsReducer,\n    carts: cartReducer,\n    attendances: attendancesReducer,\n    profiles: profilesReducer,\n    course_students: courseStudentsReducer,\n    course_news: course_newsReducer,\n    semester_class_student: semesterClassStudentReducer,\n    class_has_register_join_semesters: class_has_register_join_semestersReducer,\n    course_parent_news: course_parent_newsReducer,\n    semester_class_parent: semesterClassParentReducer,\n    contest_parent_new: contest_parent_newsReducer,\n    course_teacher_new: course_teacher_newsReducer,\n    semester_class_teachers: semester_class_teachersReducer,\n});\n\n\n\nexport default rootReducers;","import { createStore, applyMiddleware, Store  } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport rootReducers from \"./reducers/root.reducer\";\n\n\nconst store: Store = createStore(rootReducers, applyMiddleware(\n    thunkMiddleware\n));\n\nstore.subscribe(() => {});\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n\n// f you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}