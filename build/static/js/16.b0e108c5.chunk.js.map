{"version":3,"sources":["components/Teachers/TeacherList.js","components/Teachers/TeacherForm.tsx","common/service/Teacher/PutTeacher.tsx","components/Teachers/TeacherImportForm.tsx","common/service/TeacherRegisterQuantification/GetTeacherRegisterQuantification.tsx","components/Teachers/Teacher.tsx","common/service/Teacher/PostTeacher1.tsx"],"names":["TeacherList","props","dispatch","useDispatch","users","useSelector","state","teacher_register_quantifications","history","useHistory","routeChange","teacher","localStorage","removeItem","setItem","id","toString","push","pathname","class_id","datas","teachers","options","paginationSize","pageStartIndex","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","showTotal","totalSize","length","onSizePerPageChange","sizePerPage","page","console","log","onPageChange","columns","dataField","text","filter","textFilter","formatter","cell","row","total","teacher_level","not_approved_now","map","ele","index","teacher_id","approveds","onClick","onChangeRequest","style","color","cursor","type","className","onSelect","setModificationState","UserModificationStatus","Edit","Remove","pagination","paginationFactory","paginationProps","paginationTableProps","hover","keyField","data","filterFactory","TeacherForm","user","selectedUser","isCreate","modificationState","Create","username","email","status","password","firstName","lastName","sex","phone","address","dateOfBirth","profile_image_url","createTime","parents","parent","student_ids","student_names","useState","error","value","formState","setFormState","hasFormValueChanged","model","field","isFormInvalid","onSubmit","e","preventDefault","isCheck","saveUserFn","addTeacher","editTeacher","saveFn","toast","loading","position","POSITION","TOP_CENTER","postTeacher","roleName","putTeacher","idx","bearer","getItem","fetchDataRequest","fetch","process","method","headers","body","JSON","stringify","then","response","ok","Error","statusText","postRefreshToken","val","update","render","isLoading","autoClose","getTeacher","catch","closeButton","addNotification","clearSelectedUser","None","saveForm","TextInput","onChange","required","maxLength","label","placeholder","TeacherImportForm","csvFile","setCsvFile","file","reader","FileReader","onload","str","delim","slice","indexOf","split","rows","headerx","newArray","values","reduce","obj","header","i","x","processCSV","target","result","readAsText","htmlFor","accept","files","href","getTeacherRegisterQuantification","json","fetchDataSuccess","removeTeacherRegisterQuatificationApprovedAll","removeTeacherRegisterQuatificationNotApprovedNowAll","removeTeacherRegisterQuatificationNotApprovedAll","teacher_register_qualification","TeacherRegisterQuantification","reviewer_id","teacher_name","course_id","course_name","art_age_name","art_level_name","art_type_name","degree_photo_url","initialTeacherRegisterQuatificationApproved","addTeacherRegisterQuatificationApproved","initialTeacherRegisterQuatificationNotApprovedNow","addTeacherRegisterQuatificationNotApprovedNow","initialTeacherRegisterQuatificationNotApproved","addTeacherRegisterQuatificationNotApproved","fetchDataError","Teacher","path","root","numberItemsCount","popup","setPopup","promiseInProgress","usePromiseTracker","setDatas","access_token","refresh_token","onUserRemove","onRemovePopup","useEffect","undefined","access_token_decode","jwt_decode","refresh_token_decode","exp_access_token_decode","exp","exp_refresh_token_decode","now_time","Date","now","logout","trackPromise","updateCurrentPath","area","TopCard","title","icon","class","cssClass","onFileLoaded","fileInfo","is_check","parserOptions","dynamicTyping","skipEmptyLines","transformHeader","toLowerCase","replace","postTeacher1","lst","changeSelectedUser","open","onClose","closeOnDocumentClick","ImportFile","deleteUser"],"mappings":"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","file":"static/js/16.b0e108c5.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setModificationState } from \"../../store/actions/users.action\";\r\nimport { UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\nimport {MdAnalytics} from 'react-icons/md'\r\nimport { FaEdit } from 'react-icons/fa'\r\nimport { IoIosRemove } from 'react-icons/io'\r\n\r\n\r\nfunction TeacherList(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const users = useSelector((state) => state.users);\r\n  const teacher_register_quantifications = useSelector((state) => state.teacher_register_quantifications);\r\n  const history = useHistory();\r\n  const routeChange = (teacher) => {\r\n    let path = '/teacher/detail';\r\n    localStorage.removeItem(\"teacher_id\");\r\n    localStorage.setItem(\"teacher_id\", teacher.id.toString())\r\n    history.push({\r\n      pathname: path,\r\n      state: { class_id: teacher.id }\r\n    });\r\n  }\r\n\r\n\r\n  const datas = users.teachers;\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n  function removeButton(cell, row) {\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-danger\" onClick={() => {\r\n        if (props.onSelect) props.onSelect(row);\r\n        dispatch(setModificationState(UserModificationStatus.Remove))\r\n      }}><IoIosRemove className=\"icon-remove\"/></button>\r\n    );\r\n  }\r\n\r\n  function editButton(cell, row) {\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n        if(props.onSelect) props.onSelect(row);\r\n        dispatch(setModificationState(UserModificationStatus.Edit))\r\n      }}><FaEdit className=\"icon-edit\"/></button>\r\n    )\r\n  }\r\n\r\n  function analytisButton(cell, row) {\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-info\" onClick={() => {\r\n        routeChange(row)\r\n      }}><MdAnalytics className=\"icon-remove\" /></button>\r\n    )\r\n  }\r\n\r\n  function totalQuatification(cell, row) {\r\n    let total = 0;\r\n    let teacher_level = 0;\r\n    teacher_register_quantifications.not_approved_now.map((ele, index) => {\r\n      if (ele.teacher_id === row.id){\r\n        total ++;\r\n      }\r\n      return ele\r\n    })\r\n    teacher_register_quantifications.approveds.map((ele, index) => {\r\n      if (ele.teacher_id === row.id){\r\n        teacher_level ++;\r\n      }\r\n      return ele\r\n    })\r\n    return (\r\n      <span onClick={() => {\r\n        onChangeRequest(row.id)\r\n      }}>\r\n        <strong style={ { color: 'red', cursor: \"pointer\" } }>{teacher_level}/{total}</strong>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'username',\r\n      text: 'Tên đăng nhập',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      text: 'Email',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'firstName',\r\n      text: 'Họ',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'lastName',\r\n      text: 'Tên',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'phone',\r\n      text: 'Số điện thoại',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'sex',\r\n      text: 'Hành động',\r\n      formatter: totalQuatification\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: '',\r\n      formatter: editButton\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: '',\r\n      formatter: analytisButton\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: '',\r\n      formatter: removeButton\r\n    }\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n  const onChangeRequest = (teacher_id) => {\r\n    let path = '/teachers/request-level';\r\n    localStorage.removeItem(\"teacher_id\");\r\n    localStorage.setItem(\"teacher_id\", teacher_id.toString())\r\n    history.push({\r\n      pathname: path\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default TeacherList;\r\n","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editTeacher, clearSelectedUser, setModificationState, addTeacher } from \"../../store/actions/users.action\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { OnChangeModel, IUserFormState } from \"../../common/types/Form.types\";\r\nimport { postTeacher } from \"../../common/service/Teacher/PostTeacher\";\r\nimport { putTeacher } from \"../../common/service/Teacher/PutTeacher\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type teacherListProps = {\r\n  isCheck: (value: boolean) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction TeacherForm(props: teacherListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const users: IUserState = useSelector((state: IStateType) => state.users);\r\n  let user: IUser | null = users.selectedUser;\r\n  const isCreate: boolean = (users.modificationState === UserModificationStatus.Create);\r\n\r\n  if (!user || isCreate) {\r\n    user =  { id: 0, username: \"\", email: \"\", status: \"\", password: \"\", firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: 0, parent: \"\", student_ids: [], student_names: [] }\r\n  }\r\n\r\n  const [formState, setFormState] = useState({\r\n    username: { error: \"\", value: user.username },\r\n    email: { error: \"\", value: user.email },\r\n    password: { error: \"\", value: user.password }\r\n  });\r\n\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n  }\r\n\r\n  function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if (isFormInvalid()) {\r\n      return;\r\n    }\r\n    props.isCheck(false);\r\n    let saveUserFn: Function = (isCreate) ? addTeacher : editTeacher;\r\n    saveForm(formState, saveUserFn);\r\n  }\r\n\r\n  function saveForm(formState: IUserFormState, saveFn: Function): void {\r\n    if (user) {\r\n\r\n      const id = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n\r\n      if (saveFn === addTeacher){\r\n        dispatch(postTeacher({\r\n          username: formState.username.value,\r\n          email: formState.email.value,\r\n          password: formState.password.value,\r\n          firstName: null,\r\n          lastName: null,\r\n          dateOfBirth: null,\r\n          profile_image_url: null,\r\n          sex: null,\r\n          phone: null,\r\n          address: null,\r\n          roleName: [\"TEACHER\"]\r\n        }, id));\r\n      }\r\n\r\n      else if (saveFn === editTeacher) {\r\n        dispatch(putTeacher(user.id, {\r\n          username: formState.username.value,\r\n          email: formState.email.value\r\n        }, id));\r\n      }\r\n\r\n      dispatch(addNotification(\"Giáo viên\", ` ${formState.username.value} chỉnh bởi bạn`));\r\n      dispatch(clearSelectedUser());\r\n      dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    props.isCheck(false);\r\n    dispatch(setModificationState(UserModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid();\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  function isFormInvalid(): boolean {\r\n    return (formState.username.error || formState.email.error\r\n      || !formState.email.value || !formState.username.value ) as boolean;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row text-left\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card shadow shadow-xx\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} giáo viên</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={saveUser}>\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col-md-6\">\r\n                    <TextInput id=\"input_username\"\r\n                      field=\"username\"\r\n                      value={formState.username.value}\r\n                      onChange={hasFormValueChanged}\r\n                      required={true}\r\n                      maxLength={100}\r\n                      label=\"Tên đăng nhập\"\r\n                      placeholder=\"\" />\r\n                  </div>\r\n                  <div className=\"form-group col-md-6\">\r\n                    <TextInput id=\"input_email\"\r\n                      field=\"email\"\r\n                      value={formState.email.value}\r\n                      onChange={hasFormValueChanged}\r\n                      required={true}\r\n                      maxLength={200}\r\n                      label=\"Email\"\r\n                      placeholder=\"\" />\r\n                  </div>\r\n                </div>\r\n                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TeacherForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getUserById } from \"../User/GetUserById\";\r\nimport { getTeacher } from \"./GetTeacher\";\r\n\r\nexport function putTeacher(id: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/teacher/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putTeacher(id, data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                console.log(id)\r\n                toast.update(idx, { render: \"Chỉnh thông tin tài khoản thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 1000 });\r\n                getTeacher(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(id, { render: \"Chỉnh thông tin tài khoản không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, closeButton: true });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport { clearSelectedUser, setModificationState, addTeacher } from \"../../store/actions/users.action\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { postTeacher } from \"../../common/service/Teacher/PostTeacher\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type teacherListProps = {\r\n  isCheck: (value: boolean) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction TeacherImportForm(props: teacherListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const users: IUserState = useSelector((state: IStateType) => state.users);\r\n  let user: IUser | null = users.selectedUser;\r\n  const isCreate: boolean = (users.modificationState === UserModificationStatus.Create);\r\n\r\n  if (!user || isCreate) {\r\n    user = { id: 0, username: \"\", email: \"\", status: \"\", password: \"\", firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: 0, parent: \"\", student_ids: [], student_names: [] }\r\n  }\r\n\r\n  function saveForm(formState: any, saveFn: Function): void {\r\n    const id = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\r\n      position: toast.POSITION.TOP_CENTER\r\n    });\r\n\r\n    if (user) {\r\n      console.log({\r\n        username: formState.username,\r\n        email: formState.email,\r\n        password: null,\r\n        firstName: null,\r\n        lastName: null,\r\n        dateOfBirth: null,\r\n        profile_image_url: null,\r\n        sex: null,\r\n        phone: null,\r\n        address: null,\r\n        roleName: [\"TEACHER\"]\r\n      })\r\n      if (saveFn === addTeacher){\r\n        dispatch(postTeacher({\r\n          username: formState.username,\r\n          email: formState.email,\r\n          password: null,\r\n          firstName: null,\r\n          lastName: null,\r\n          dateOfBirth: null,\r\n          profile_image_url: null,\r\n          sex: null,\r\n          phone: null,\r\n          address: null,\r\n          roleName: [\"TEACHER\"]\r\n        }, id));\r\n      }\r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    props.isCheck(false);\r\n    dispatch(setModificationState(UserModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    return !csvFile ? \"disabled\" : \"\";\r\n  }\r\n\r\n  const [csvFile, setCsvFile] = useState<any>();\r\n\r\n  const processCSV = (str: string, delim = ',') => {\r\n    console.log('hello')\r\n    const headers = str.slice(0, str.indexOf('\\n')).split(delim);\r\n    console.log(headers)\r\n    const rows = str.slice(str.indexOf('\\n') + 1).split('\\n');\r\n    const headerx = [\"username\", \"email\"]\r\n\r\n    const newArray = rows.map(row => {\r\n      const values = row.split(delim);\r\n      const eachObject = headerx.reduce((obj: any, header, i) => {\r\n        obj[header] = values[i];\r\n        return obj;\r\n      }, {})\r\n      return eachObject;\r\n    })\r\n    console.log(newArray)\r\n    newArray.map((ele: any, index: any) => {\r\n      if (ele.username !== \"\") {\r\n        let x = {\r\n            username: ele.username,\r\n            email: ele.email\r\n        };\r\n\r\n        console.log(x)\r\n        let saveUserFn: Function = addTeacher;\r\n        saveForm(x, saveUserFn);\r\n        dispatch(addNotification(\"Giáo viên\", ` ${x.username} chỉnh bởi bạn`));\r\n        dispatch(clearSelectedUser());\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n        //let saveUserFn: Function = addTeacher;\r\n        //saveForm(x, saveUserFn);\r\n      }\r\n      return 0\r\n    })\r\n  }\r\n\r\n  const saveTeacherCSV = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    props.isCheck(false)\r\n    const file = csvFile;\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = function (e: any) {\r\n        const text = e.target.result;\r\n        processCSV(text)\r\n    }\r\n\r\n    reader.readAsText(file);\r\n\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row text-left\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} giáo viên</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={saveTeacherCSV}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"profile_image\">Chọn file (.xml):</label>\r\n                  <input\r\n                  type={\"file\"}\r\n                  accept=\".csv,.xlsx,.xls\"\r\n                  id=\"csvFile\"\r\n                  onChange={(e: any) => {\r\n                    setCsvFile(e.target.files[0])\r\n                  }}\r\n                />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <a href={`${process.env.REACT_APP_API_LOCAL}\\\\example.csv`}>File mẫu</a>\r\n                </div>\r\n                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TeacherImportForm;\r\n","import { fetchDataSuccess, fetchDataError, removeTeacherRegisterQuatificationApprovedAll, initialTeacherRegisterQuatificationApproved, addTeacherRegisterQuatificationApproved, removeTeacherRegisterQuatificationNotApprovedNowAll, removeTeacherRegisterQuatificationNotApprovedAll, initialTeacherRegisterQuatificationNotApproved, addTeacherRegisterQuatificationNotApproved, initialTeacherRegisterQuatificationNotApprovedNow, addTeacherRegisterQuatificationNotApprovedNow } from \"../../../store/actions/teacher_register_quantification.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface TeacherRegisterQuantification {\r\n    id: any;\r\n    teacher_id: number;\r\n    teacher_name: string;\r\n    reviewer_id: number;\r\n    course_id: number;\r\n    course_name: string;\r\n    art_age_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    degree_photo_url: string;\r\n    status: string;\r\n}\r\nexport function getTeacherRegisterQuantification(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/teacher-register-level`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTeacherRegisterQuantification(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeTeacherRegisterQuatificationApprovedAll())\r\n                dispatch(removeTeacherRegisterQuatificationNotApprovedNowAll())\r\n                dispatch(removeTeacherRegisterQuatificationNotApprovedAll())\r\n                console.log(data.body.teacher_register_qualification)\r\n                data.body.teacher_register_qualification.map((ele: any, index: any) => {\r\n                    var TeacherRegisterQuantification: TeacherRegisterQuantification = {\r\n                        id: ele.id,\r\n                        teacher_id: ele.teacher_id,\r\n                        reviewer_id: ele.reviewer_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        course_id: ele.course_id,\r\n                        course_name:ele.course_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        degree_photo_url: ele.degree_photo_url,\r\n                        status: ele.status\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (ele.status === \"Approved\"){\r\n                        if (index === 0){\r\n                            return dispatch(initialTeacherRegisterQuatificationApproved(TeacherRegisterQuantification));\r\n                        }\r\n                        else{\r\n                            return dispatch(addTeacherRegisterQuatificationApproved(TeacherRegisterQuantification))\r\n                        }\r\n                    }\r\n                    else if (ele.status === \"Not approve now\"){\r\n                        if (index === 0){\r\n                            return dispatch(initialTeacherRegisterQuatificationNotApprovedNow(TeacherRegisterQuantification));\r\n                        }\r\n                        else{\r\n                            return dispatch(addTeacherRegisterQuatificationNotApprovedNow(TeacherRegisterQuantification))\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (index === 0){\r\n                            return dispatch(initialTeacherRegisterQuatificationNotApproved(TeacherRegisterQuantification));\r\n                        }\r\n                        else{\r\n                            return dispatch(addTeacherRegisterQuatificationNotApproved(TeacherRegisterQuantification))\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport TeacherList from \"./TeacherList\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./Teacher.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IUserState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport {clearSelectedUser, setModificationState, changeSelectedUser, removeTeacher  } from \"../../store/actions/users.action\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport TeacherForm from \"./TeacherForm\";\r\nimport { getTeacher } from \"../../common/service/Teacher/GetTeacher\";\r\nimport { deleteUser } from \"../../common/service/User/DeleteUser\";\r\nimport TeacherImportForm from \"./TeacherImportForm\";\r\nimport { getTeacherRegisterQuantification } from \"../../common/service/TeacherRegisterQuantification/GetTeacherRegisterQuantification\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport CSVReader from \"react-csv-reader\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { postTeacher1 } from \"../../common/service/Teacher/PostTeacher1\";\r\n\r\n\r\n\r\nconst Teacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = users.teachers.length;\r\n    const [popup, setPopup] = useState(false);\r\n    const { promiseInProgress } = usePromiseTracker();\r\n    const [datas, setDatas] = useState<any[]>([]);\r\n    const handleForce = (data: any, fileInfo: any) => {\r\n        if (data.length === 0) {\r\n            toast.error(\"File không chưa dữ liệu\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 1000\r\n            });\r\n        }\r\n        else {\r\n            let is_check = true;\r\n            for (let index = 0; index < data.length; index++) {\r\n                const ele = data[index];\r\n                if (ele.username === null || ele.username === \"\" || ele.email === null || ele.email === \"\")   {\r\n                    toast.error(`Lỗi tại dòng ${index + 1}`, {\r\n                        position: toast.POSITION.TOP_CENTER,\r\n                        autoClose: 1000\r\n                    });\r\n                    is_check = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (is_check === true) {\r\n                setDatas(data);\r\n            }\r\n        }\r\n    };\r\n    console.log(datas)\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = datas.length === 0;\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    const handleImport = () => {\r\n        let isError: boolean = datas.length === 0;\r\n        if (isError === false) {\r\n            const id = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            dispatch(postTeacher1({\r\n                username: datas[0].username,\r\n                email: datas[0].email,\r\n                password: null,\r\n                firstName: null,\r\n                lastName: null,\r\n                dateOfBirth: null,\r\n                profile_image_url: null,\r\n                sex: null,\r\n                phone: null,\r\n                address: null,\r\n                roleName: [\"TEACHER\"]\r\n              }, datas.slice(1, datas.length), id));\r\n            /* datas.map((ele: any, idx: any) => {\r\n                if (idx === datas.length - 1) {\r\n                    dispatch(postTeacher({\r\n                        username: ele.username,\r\n                        email: ele.email,\r\n                        password: ele.password,\r\n                        firstName: null,\r\n                        lastName: null,\r\n                        dateOfBirth: null,\r\n                        profile_image_url: null,\r\n                        sex: null,\r\n                        phone: null,\r\n                        address: null,\r\n                        roleName: [\"TEACHER\"]\r\n                      }, id));\r\n                }\r\n                else {\r\n                    dispatch(postTeacher1({\r\n                        username: ele.username,\r\n                        email: ele.email,\r\n                        password: ele.password,\r\n                        firstName: null,\r\n                        lastName: null,\r\n                        dateOfBirth: null,\r\n                        profile_image_url: null,\r\n                        sex: null,\r\n                        phone: null,\r\n                        address: null,\r\n                        roleName: [\"TEACHER\"]\r\n                      }));\r\n                }\r\n            }) */\r\n        } \r\n    }\r\n\r\n    const papaparseOptions = {\r\n      header: true,\r\n      dynamicTyping: true,\r\n      skipEmptyLines: true,\r\n      transformHeader: (header: any) => header.toLowerCase().replace(/\\W/g, \"_\")\r\n    };\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getTeacher(dispatch))\r\n                    trackPromise(getTeacherRegisterQuantification(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getTeacher(dispatch))\r\n                trackPromise(getTeacherRegisterQuantification(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token])\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedUser());\r\n        dispatch(updateCurrentPath(\"Giáo viên\", \"Danh sách\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    function onUserSelect(user: IUser): void {\r\n        dispatch(changeSelectedUser(user));\r\n        onUserRemove();\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n\r\n    function onUserRemove() {\r\n        setPopup(true);\r\n    }\r\n\r\n    function onRemovePopup(value: boolean) {\r\n        setPopup(value);\r\n    }\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"loader\"></div> :<Fragment>\r\n        <ToastContainer />\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Giáo viên</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"GIÁO VIÊN\" text={`${numberItemsCount}`} icon=\"user\" class=\"primary\" />\r\n                <div className=\"col-xl-2 col-lg-2\">\r\n                    <div>\r\n                        <h6 className=\"m-0 font-weight-bold text-green\">Import</h6>\r\n                    </div>\r\n                    <div>\r\n                        <a className=\"m-0 font-weight-bold\" href={`https://recording-jitsi-chung.s3.ap-southeast-1.amazonaws.com/Asset/example.csv`}>File mẫu</a>\r\n                    </div>\r\n                    <div>\r\n                        <CSVReader\r\n                            cssClass=\"csv-reader-input import-teacher\"\r\n                            label=\"\"\r\n                            onFileLoaded={handleForce}\r\n                            parserOptions={papaparseOptions}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-xl-2 col-lg-2 btn-import-teacher\">\r\n                    <button type=\"button\" className={`btn btn-success left-margin mt-2 ${getDisabledClass()}`} onClick={handleImport}>Gửi</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-2\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Danh sách giáo viên</h6>\r\n                            <div className=\"header-buttons\">\r\n                                {/* <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                    dispatch(setModificationState(UserModificationStatus.ImportFile))\r\n                                    onUserRemove()\r\n                                }}>\r\n                                    <i className=\"fas fa fa-plus\"></i>\r\n                                    Import file\r\n                                </button> */}\r\n                                <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                    dispatch(setModificationState(UserModificationStatus.Create))\r\n                                    onUserRemove()\r\n                                }}>\r\n                                    <i className=\"fas fa fa-plus\"></i>\r\n                                    Thêm thủ công\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <TeacherList\r\n                                onSelect={onUserSelect} \r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <Popup\r\n                open={popup}\r\n                onClose={() => setPopup(false)}\r\n                closeOnDocumentClick\r\n            >\r\n                <>\r\n                    {\r\n                        function () {\r\n                            if ((users.modificationState === UserModificationStatus.Create) || ((users.selectedUser) && (users.modificationState === UserModificationStatus.Edit))) {\r\n                                return <TeacherForm isCheck={onRemovePopup}/>\r\n                            }\r\n\r\n                            else if (users.modificationState === UserModificationStatus.ImportFile){\r\n                                return <TeacherImportForm isCheck={onRemovePopup}/>\r\n                            }\r\n                        }()\r\n                    }\r\n                </>\r\n            </Popup>\r\n            {\r\n                function () {\r\n                    if ((users.selectedUser) && (users.modificationState === UserModificationStatus.Remove)) {\r\n                        return (\r\n                            <Popup\r\n                                open={popup}\r\n                                onClose={() => setPopup(false)}\r\n                                closeOnDocumentClick\r\n                            >\r\n                                <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                    <div className=\"popup-title\">\r\n                                        Bạn có chắc chắn muốn xóa?\r\n                                    </div>\r\n                                    <div className=\"popup-content\">\r\n                                        <button type=\"button\"\r\n                                            className=\"btn btn-danger\"\r\n                                            onClick={() => {\r\n                                                if (!users.selectedUser) {\r\n                                                    return;\r\n                                                }\r\n                                                const idx = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\r\n                                                    position: toast.POSITION.TOP_CENTER\r\n                                                });\r\n                                                deleteUser(dispatch, users.selectedUser.id, idx)\r\n                                                dispatch(clearSelectedUser());\r\n                                                setPopup(false);\r\n                                            }}>Remove\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </Popup>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Teacher;\r\n","import { fetchDataRequest } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postTeacher } from \"./PostTeacher\";\r\n\r\nexport function postTeacher1(data: any, lst: any[], idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/teacher`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postTeacher1(data, lst, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                console.log(lst)\r\n                if (lst.length > 1) {\r\n                    dispatch(postTeacher1({\r\n                        username: lst[0].username,\r\n                        email: lst[0].email,\r\n                        password: lst[0].password,\r\n                        firstName: null,\r\n                        lastName: null,\r\n                        dateOfBirth: null,\r\n                        profile_image_url: null,\r\n                        sex: null,\r\n                        phone: null,\r\n                        address: null,\r\n                        roleName: [\"TEACHER\"]\r\n                      }, lst.slice(1, lst.length), idx));\r\n                }\r\n                else if (lst.length === 1) {\r\n                    dispatch(postTeacher({\r\n                        username: lst[0].username,\r\n                        email: lst[0].email,\r\n                        password: lst[0].password,\r\n                        firstName: null,\r\n                        lastName: null,\r\n                        dateOfBirth: null,\r\n                        profile_image_url: null,\r\n                        sex: null,\r\n                        phone: null,\r\n                        address: null,\r\n                        roleName: [\"TEACHER\"]\r\n                      }, idx));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                \r\n            });\r\n    };\r\n}"],"sourceRoot":""}