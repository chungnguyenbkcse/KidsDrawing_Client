{"version":3,"sources":["components/TopMenu/TopMenuAccount.tsx","common/service/Notify/GetNotify.tsx","components/TopMenu/TopNotification.tsx","components/TopMenu/TopMenuCart.tsx","components/TopMenu/TopMenu.tsx"],"names":["TopMenuAccount","dispatch","useDispatch","username","localStorage","getItem","id","profiles","useSelector","state","useEffect","trackPromise","getProfile","useState","isShow","setShow","console","log","profile_image","length","setItem","profile_image_url","id_x","className","onClick","role","data-toggle","aria-haspopup","aria-expanded","alt","src","aria-labelledby","href","data-target","clear","logout","putStatusUser","status","getNotify","bearer","fetchDataRequest","fetch","process","method","headers","then","response","ok","json","Error","statusText","postRefreshToken","data","removeNotifyAll","body","notifications","map","ele","index","notification","idx","name","description","time","initialNotify","catch","error","fetchDataError","TopMenuNotification","notifys","user_read_notifications","user_id","parseInt","getUserReadNotification","user_not_readed_notifications","data_not_read","total","notification_id","item","notification_name","notification_time","notification_desciption","is_read","push","data_readed","user_readed_notifications","history","useHistory","key","props","putUserReadNotification","removeItem","toString","pathname","routeChange","e","preventDefault","TopMenuCart","user_register_join_semesters","rolePrivilege","roleUser","split","getUserRegisterJoinSemesterByPayer","getUserRegisterJoinSemesterByStudent","waiting","TopMenu","page","root","handleRoute","idxxx","path","subArea","area"],"mappings":"oPAmFeA,MA3Ef,WACE,IAAMC,EAA0BC,cAC1BC,EAA0BC,aAAaC,QAAQ,YAC/CC,EAAKF,aAAaC,QAAQ,MAC1BE,EAA0BC,aAAY,SAACC,GAAD,OAAuBA,EAAMF,YACzEG,qBAAU,WACRC,uBAAaC,YAAWX,EAAUK,MACjC,CAACL,EAAUK,IAPuB,MAQXO,oBAAS,GARE,mBAQ9BC,EAR8B,KAQtBC,EARsB,KAUrCC,QAAQC,IAAIV,EAASA,UACrB,IAAIW,EAAgB,GAChBX,EAASA,SAASY,OAAS,GAC7Bf,aAAagB,QAAQ,gBAAiBb,EAASA,SAAS,GAAGc,mBAG7D,IAAIC,EAAOlB,aAAaC,QAAQ,iBAKhC,OAJa,OAATiB,IACFJ,EAAgBI,GAKhB,wBAAIC,UAAU,8BACZ,uBAAGA,UAAU,2BACXC,QAAS,WACPT,GAASD,IAEXR,GAAG,eACHmB,KAAK,SACLC,cAAY,WACZC,gBAAc,OACdC,gBAAc,SACd,0BAAML,UAAU,uCAAuCpB,GACvD,yBAAKoB,UAAU,6BAA6BM,IAAI,GAC9CC,IAAuB,OAAlBZ,EAAyBA,EAAiB,mDAGnD,yBAAKK,UAAS,qEAAiET,EAAU,OAAS,IAChGiB,kBAAgB,gBAChB,uBAAGR,UAAU,gBACbC,QAAS,aACTQ,KAAK,WACLN,cAAY,QACZO,cAAY,gBACV,uBAAGV,UAAU,+CALf,0CAQA,uBAAGA,UAAU,gBACbC,QAAS,aACTQ,KAAK,mBACLN,cAAY,QACZO,cAAY,oBACV,uBAAGV,UAAU,8CALf,yCAQA,uBAAGA,UAAU,2BACbC,QAAS,WACP,IAAIlB,EAAKF,aAAaC,QAAQ,MAC9BD,aAAa8B,QACbjC,EAASkC,eACTlC,EAASmC,YAAc9B,EAAI,CACzB+B,OAAQ,SAGZX,cAAY,QACZO,cAAY,gBACV,uBAAGV,UAAU,uDAXf,a,kCC7DD,SAASe,IACZ,IAAIC,EAAS,UAAYnC,aAAaC,QAAQ,gBAC9C,OAAO,SAACJ,GACJA,EAASuC,eACTC,MAAM,GAAD,OACMC,uEADN,0BAC6D,CACtDC,OAAQ,MACRC,QAAS,CACL,cAAiBL,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCG,yBAClC,mCAAoC,UAI/CG,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASE,OAThB,GAAwB,MAApBF,EAAST,OAKT,MAAMY,MAAMH,EAASI,YAJrBjD,EAASkD,eACTlD,EAASqC,QAUpBO,MAAM,SAAAO,GACHnD,EAASoD,eACTrC,QAAQC,IAAImC,EAAKE,KAAKC,eACtBH,EAAKE,KAAKC,cAAcC,KAAI,SAACC,EAAUC,GACnC,IAAIC,EAAwB,CACxBC,IAAKH,EAAInD,GACTuD,KAAMJ,EAAII,KACVC,YAAaL,EAAIK,YACjBC,KAAMN,EAAIM,MAGd,OADA/C,QAAQC,IAAIwC,GACLxD,EAAS+D,YAAcL,UAGrCM,OAAM,SAAAC,GACHjE,EAASkE,YAAeD,IACxBlD,QAAQC,IAAI,a,6BCsGbmD,MAnIf,WACE,IAAMnE,EAA0BC,cAC1BmE,EAAwB7D,aAAY,SAACC,GAAD,OAAuBA,EAAM4D,WACjEC,EAAsD9D,aAAY,SAACC,GAAD,OAAuBA,EAAM6D,2BAH3D,EAIhBzD,oBAAS,GAJO,mBAInCC,EAJmC,KAI3BC,EAJ2B,KAMtCO,EAAOlB,aAAaC,QAAQ,MAC5BkE,EAAkB,EACT,OAATjD,IACFiD,EAAUC,SAASlD,IAGrBZ,qBAAU,WACRT,EAASwE,YAAwBF,IACjCtE,EAASqC,OACR,CAACrC,EAAUsE,IAEdvD,QAAQC,IAAIoD,EAAQA,SACpBrD,QAAQC,IAAIqD,EAAwBI,+BAEpC,IAAIC,EAA2B,GAC3BC,EAAQ,EACZN,EAAwBI,8BAA8BlB,KAAI,SAACC,EAAKG,GAC9D,OAAOS,EAAQA,QAAQb,KAAI,SAAAG,GACzB,GAAIA,EAAaC,MAAQH,EAAIoB,gBAAgB,CAC3C,IAAIC,EAAgB,CAClBD,gBAAiBpB,EAAIoB,gBACrBE,kBAAmBpB,EAAaE,KAChCU,QAASd,EAAIc,QACbS,kBAAmBrB,EAAaI,KAChCkB,wBAAyBtB,EAAaG,YACtCoB,QAASzB,EAAIyB,SAGf,OADAN,IACOD,EAAcQ,KAAKL,GAE5B,OAAOnB,QAIX,IAAIyB,EAAyB,GAC7Bd,EAAwBe,0BAA0B7B,KAAI,SAACC,EAAKG,GAC1D,OAAOS,EAAQA,QAAQb,KAAI,SAAAG,GACzB,GAAIA,EAAaC,MAAQH,EAAIoB,iBAAmBD,GAAS,EAAE,CACzD,IAAIE,EAAgB,CAClBD,gBAAiBpB,EAAIoB,gBACrBE,kBAAmBpB,EAAaE,KAChCU,QAASd,EAAIc,QACbS,kBAAmBrB,EAAaI,KAChCkB,wBAAyBtB,EAAaG,YACtCoB,QAASzB,EAAIyB,SAGf,OADAN,IACOQ,EAAYD,KAAKL,GAE1B,OAAOnB,QAIX,IAAM2B,EAAUC,cAgChB,OAEE,wBAAIhE,UAAU,8BAGZ,uBAAGA,UAAU,oDAAoDjB,GAAG,2BAA2BoB,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,OAAOJ,QAAS,WACvKT,GAASD,KAET,0BAAMS,UAAU,2BAA2B+C,EAAwBI,8BAA8BvD,QACjG,uBAAGI,UAAU,iBAGf,yBAAKA,UAAS,wFAAoFT,EAAU,OAAS,GAAvG,iBACZiB,kBAAgB,gBACd,wBAAIR,UAAU,eAEVoD,EAAcnB,KAAI,SAACC,EAAKG,GACtB,OACE,wBAAI4B,IAAK5B,GACP,uBAAGrC,UAAU,4BACXC,QAAS,YA3CT,SAACiE,GACjB1E,GAASD,GACTb,EAASyF,YAAwB,CAC/BnB,QAASA,EACTM,gBAAiBY,EAAMZ,gBACvBK,SAAS,KAEX9E,aAAauF,WAAW,mBACxBvF,aAAagB,QAAQ,kBAAmBqE,EAAMZ,gBAAgBe,YAC9DxF,aAAauF,WAAW,WACxBvF,aAAagB,QAAQ,UAAWqE,EAAMlB,QAAQqB,YAC9CxF,aAAauF,WAAW,qBACxBvF,aAAagB,QAAQ,oBAAqBqE,EAAMV,mBAChD3E,aAAauF,WAAW,2BACxBvF,aAAagB,QAAQ,0BAA2BqE,EAAMR,yBACtD7E,aAAauF,WAAW,qBACxBvF,aAAagB,QAAQ,oBAAqBqE,EAAMT,mBAEhDM,EAAQH,KAAK,CACTU,SAFO,yBA0BqBC,CAAYrC,IAC5B/B,cAAY,QACZO,cAAY,gBACZ,uBAAGV,UAAU,iCACZkC,EAAIsB,kBACL,0BAAMxD,UAAU,2BAAhB,WAOZ,yBAAKA,UAAU,+BACb,uBAAGS,KAAK,KAAKR,QAhEF,SAACuE,GACpBA,EAAEC,iBAEAV,EAAQH,KAAK,CACTU,SAFK,kBAIT9E,GAASD,KA0DH,2B,2BCoDGmF,MA5Kf,WACE,IAAMhG,EAA0BC,cAC1BmE,EAAwB7D,aAAY,SAACC,GAAD,OAAuBA,EAAM4D,WACjEC,EAAsD9D,aAAY,SAACC,GAAD,OAAuBA,EAAM6D,2BAHnE,EAIRzD,oBAAS,GAJD,mBAI3BC,EAJ2B,KAInBC,EAJmB,KAK5BmF,EAA+D1F,aAAY,SAACC,GAAD,OAAuBA,EAAMyF,gCAE1G5E,EAAOlB,aAAaC,QAAQ,MAC5BkE,EAAkB,EACT,OAATjD,IACFiD,EAAUC,SAASlD,IAGrB,IAAIG,EAAOrB,aAAaC,QAAQ,QAC5B8F,EAA0B,GAC1BC,EAAmB,GACV,OAAT3E,IACA0E,EAAgB1E,EAAK4E,MAAM,KAC3BD,EAAWD,EAAc,IAG7BzF,qBAAU,WACRT,EAASwE,YAAwBF,IACjCtE,EAASqC,OACR,CAACrC,EAAUsE,IAEd7D,qBAAU,WACS,WAAb0F,EACFzF,uBAAa2F,YAAmCrG,EAAUsE,IAEtC,YAAb6B,GACPzF,uBAAa4F,YAAqCtG,EAAUsE,MAE7D,CAACtE,EAAUsE,EAAS6B,IAEvBpF,QAAQC,IAAIoD,EAAQA,SACpBrD,QAAQC,IAAIqD,EAAwBI,+BAEpC,IAAIC,EAA2B,GAC3BC,EAAQ,EACZN,EAAwBI,8BAA8BlB,KAAI,SAACC,EAAKG,GAC9D,OAAOS,EAAQA,QAAQb,KAAI,SAAAG,GACzB,GAAIA,EAAaC,MAAQH,EAAIoB,gBAAgB,CAC3C,IAAIC,EAAgB,CAClBD,gBAAiBpB,EAAIoB,gBACrBE,kBAAmBpB,EAAaE,KAChCU,QAASd,EAAIc,QACbS,kBAAmBrB,EAAaI,KAChCkB,wBAAyBtB,EAAaG,YACtCoB,QAASzB,EAAIyB,SAGf,OADAN,IACOD,EAAcQ,KAAKL,GAE5B,OAAOnB,QAKXW,EAAwBe,0BAA0B7B,KAAI,SAACC,EAAKG,GAC1D,OAAOS,EAAQA,QAAQb,KAAI,SAAAG,GACzB,GAAIA,EAAaC,MAAQH,EAAIoB,iBAAmBD,GAAS,EAAE,CACzD,IAAIE,EAAgB,CAClBD,gBAAiBpB,EAAIoB,gBACrBE,kBAAmBpB,EAAaE,KAChCU,QAASd,EAAIc,QACbS,kBAAmBrB,EAAaI,KAChCkB,wBAAyBtB,EAAaG,YACtCoB,QAASzB,EAAIyB,SAGf,OADAN,IACOD,EAAcQ,KAAKL,GAE5B,OAAOnB,QAIX,IAAM2B,EAAUC,cA+BhB,MAAiB,WAAba,GAAsC,YAAbA,EAGzB,wBAAI7E,UAAU,8BAGZ,uBAAGA,UAAU,oDAAoDjB,GAAG,2BAA2BoB,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,OAAOJ,QAAS,WAX7K8D,EAAQH,KAAK,CACTU,SAFO,YAeL,0BAAMtE,UAAU,2BAA2B2E,EAA6BM,QAAQrF,QAChF,kBAAC,IAAD,OAGF,yBAAKI,UAAS,wFAAoFT,EAAU,OAAS,GAAvG,iBACZiB,kBAAgB,gBACd,wBAAIR,UAAU,eAEVoD,EAAcnB,KAAI,SAACC,EAAKG,GACtB,OACE,wBAAI4B,IAAK5B,GACP,uBAAGrC,UAAU,4BACXC,QAAS,YAnDX,SAACiE,GACjB1E,GAASD,GACTb,EAASyF,YAAwB,CAC/BnB,QAASA,EACTM,gBAAiBY,EAAMZ,gBACvBK,SAAS,KAEX9E,aAAauF,WAAW,mBACxBvF,aAAagB,QAAQ,kBAAmBqE,EAAMZ,gBAAgBe,YAC9DxF,aAAauF,WAAW,WACxBvF,aAAagB,QAAQ,UAAWqE,EAAMlB,QAAQqB,YAC9CxF,aAAauF,WAAW,qBACxBvF,aAAagB,QAAQ,oBAAqBqE,EAAMV,mBAChD3E,aAAauF,WAAW,2BACxBvF,aAAagB,QAAQ,0BAA2BqE,EAAMR,yBACtD7E,aAAauF,WAAW,qBACxBvF,aAAagB,QAAQ,oBAAqBqE,EAAMT,mBAEhDM,EAAQH,KAAK,CACTU,SAFO,yBAkCuBC,CAAYrC,IAC5B/B,cAAY,QACZO,cAAY,gBACZ,uBAAGV,UAAU,iCACZkC,EAAIsB,kBACL,0BAAMxD,UAAU,2BAAhB,UA5EO,GAqFHiC,KAAI,SAACC,EAAKG,GACpB,OACE,4BACE,uBAAGrC,UAAU,4BACXC,QAAS,kBAAMvB,EAASkC,gBACxBT,cAAY,QACZO,cAAY,gBACZ,uBAAGV,UAAU,+CACZkC,EAAIsB,wBAOjB,yBAAKxD,UAAU,+BACb,uBAAGS,KAAK,iBAAR,0BAQR,sCCtFSyE,UA/FW,WACxB,IAAMC,EAA2BlG,aAAY,SAACC,GAAD,OAAuBA,EAAMkG,KAAKD,QAC3EjF,EAAOrB,aAAaC,QAAQ,QAE5B+F,EAAkB,GACT,OAAT3E,IAEA2E,EADgB3E,EAAK4E,MAAM,KACF,IAG7B,IAAMf,EAAUC,cAChB,SAASqB,IACP,IAAIC,EAAQzG,aAAaC,QAAQ,QAC7ByG,EAAe,GACN,MAATD,IACFC,EAAOD,GAET7F,QAAQC,IAAI,UACQ,MAAhByF,EAAKK,UACP/F,QAAQC,IAAI,SACZqE,EAAQH,KAAK,CACXU,SAAUiB,KAMhB,MAAiB,UAAbV,EAEA,yBAAK7E,UAAU,kFACb,wBAAIA,UAAU,8BACZ,wBAAIA,UAAU,2CAA0C,uBAAGA,UAAU,qBAAqBjB,GAAG,eAAekB,QAAS,WAAOoF,MAAiBF,EAAOA,EAAKM,KAAO,OAChK,wBAAIzF,UAAU,2CAA0C,uBAAGA,UAAU,qBAAqBjB,GAAG,gBAAgBoG,EAAOA,EAAKK,QAAU,QAGrI,wBAAIxF,UAAU,sBACZ,kBAAC,EAAD,MACA,yBAAKA,UAAU,qCACf,kBAAC,EAAD,QAKc,YAAb6E,EAEL,yBAAK7E,UAAU,0EAA0EjB,GAAG,kBAC1F,wBAAIiB,UAAU,6BAA6BjB,GAAG,sBAC5C,wBAAIiB,UAAU,2CAA0C,uBAAGA,UAAU,qBAAqBjB,GAAG,eAAekB,QAAS,WAAOoF,MAAiBF,EAAOA,EAAKM,KAAO,OAChK,wBAAIzF,UAAU,2CAA0C,uBAAGA,UAAU,qBAAqBjB,GAAG,gBAAgBoG,EAAOA,EAAKK,QAAU,QAGrI,wBAAIxF,UAAU,sBACZ,kBAAC,EAAD,MACA,yBAAKA,UAAU,qCACf,kBAAC,EAAD,QAMc,WAAb6E,GAAsC,YAAbA,EAE9B,yBAAK7E,UAAU,+DAA+DjB,GAAG,kBAC/E,wBAAIiB,UAAU,6BAA6BjB,GAAG,sBAC5C,wBAAIiB,UAAU,2CAA0C,uBAAGA,UAAU,qBAAqBjB,GAAG,eAAekB,QAAS,WAAOoF,MAAiBF,EAAOA,EAAKM,KAAO,OAChK,wBAAIzF,UAAU,2CAA0C,uBAAGA,UAAU,qBAAqBjB,GAAG,gBAAgBoG,EAAOA,EAAKK,QAAU,QAGrI,wBAAIxF,UAAU,sBACZ,kBAAC,EAAD,MACA,yBAAKA,UAAU,qCACf,kBAAC,EAAD,MACA,yBAAKA,UAAU,qCACf,kBAAC,EAAD,QAMN,yBAAKA,UAAU,kFACb,wBAAIA,UAAU,8BACV,wBAAIA,UAAU,2CAA0C,uBAAGA,UAAU,qBAAqBjB,GAAG,eAAekB,QAAS,WAAOoF,MAAiBF,EAAOA,EAAKM,KAAO,OAChK,wBAAIzF,UAAU,2CAA0C,uBAAGA,UAAU,qBAAqBjB,GAAG,gBAAgBoG,EAAOA,EAAKK,QAAU,QAGvI,wBAAIxF,UAAU,sBACZ,kBAAC,EAAD,MACA,yBAAKA,UAAU,qCACf,kBAAC,EAAD","file":"static/js/10.0999e426.chunk.js","sourcesContent":["import React, { useState, Dispatch, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { putStatusUser } from \"../../common/service/User/UpdateStatusUser\";\nimport { logout } from \"../../store/actions/account.actions\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport { IProfileState, IStateType } from \"../../store/models/root.interface\";\nimport { getProfile } from \"../../common/service/User/GetProfile\";\n\nfunction TopMenuAccount(): JSX.Element {\n  const dispatch: Dispatch<any> = useDispatch();\n  const username: string | null = localStorage.getItem('username');\n  const id = localStorage.getItem('id')\n  const profiles: IProfileState = useSelector((state: IStateType) => state.profiles);\n  useEffect(() => {\n    trackPromise(getProfile(dispatch, id))\n  }, [dispatch, id])\n  const [isShow, setShow] = useState(false);\n\n  console.log(profiles.profiles)\n  let profile_image = \"\"\n  if (profiles.profiles.length > 0 ){\n    localStorage.setItem('profile_image', profiles.profiles[0].profile_image_url)\n  }\n\n  var id_x = localStorage.getItem('profile_image');\n  if (id_x !== null) {\n    profile_image = id_x;\n  }\n\n  return (\n\n    <li className=\"nav-item dropdown no-arrow\">\n      <p className=\"nav-link dropdown-toggle\"\n        onClick={() => {\n          setShow(!isShow);\n        }}\n        id=\"userDropdown\"\n        role=\"button\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\">\n        <span className=\"mr-2 d-none d-lg-inline small cadet\">{username}</span>\n        <img className=\"img-profile rounded-circle\" alt=\"\"\n          src={profile_image !== null ? profile_image :  \"https://source.unsplash.com/QAB-WJcbgJk/60x60\"} />\n      </p>\n\n      <div className={`dropdown-menu dropdown-menu-right shadow animated--grow-in ${(isShow) ? \"show\" : \"\"}`}\n        aria-labelledby=\"userDropdown\">\n        <a className=\"dropdown-item\"\n        onClick={() =>{}}\n        href=\"/account\" \n        data-toggle=\"modal\"\n        data-target=\"#logoutModal\">\n          <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"></i>\n          Chỉnh thông tin các nhân\n        </a>\n        <a className=\"dropdown-item\"\n        onClick={() =>{}}\n        href=\"/change-password\" \n        data-toggle=\"modal\"\n        data-target=\"#change-password\">\n          <i className=\"fas fa-key fa-sm fa-fw mr-2 text-gray-400\"></i>\n          Thay đổi mật khẩu\n        </a>\n        <p className=\"dropdown-item logout-btn\"\n        onClick={() => {\n          let id = localStorage.getItem('id');\n          localStorage.clear();\n          dispatch(logout())\n          dispatch(putStatusUser(id, {\n            status: null\n          }))\n        }}\n        data-toggle=\"modal\"\n        data-target=\"#logoutModal\">\n          <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i>\n          Logout\n        </p>\n      </div>\n    </li>\n  );\n};\n\nexport default TopMenuAccount;\n","import { fetchDataRequest, fetchDataError, removeNotifyAll, initialNotify } from \"../../../store/actions/notify.action\";\r\nimport { INotify } from \"../../../store/models/notify.interface\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nexport function getNotify() {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/notification-database`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getNotify())\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(removeNotifyAll())\r\n                console.log(data.body.notifications)\r\n                data.body.notifications.map((ele: any, index: any) => {\r\n                    let notification: INotify = {\r\n                        idx: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        time: ele.time\r\n                    }\r\n                    console.log(ele)\r\n                    return dispatch(initialNotify(notification))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getNotify } from \"../../common/service/Notify/GetNotify\";\r\nimport { getUserReadNotification } from \"../../common/service/UserReadNotification/GetUserReadNotificationByUser\";\r\nimport { putUserReadNotification } from \"../../common/service/UserReadNotification/PutUserReadNotification\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { INotifyState, IStateType, IUserReadNotificationState } from \"../../store/models/root.interface\";\r\nimport \"./TopNotification.css\"\r\n\r\ntype Options = {\r\n  notification_id: number;\r\n  user_id: number;\r\n  notification_name: string;\r\n  notification_desciption: string;\r\n  notification_time: string;\r\n  is_read: boolean;\r\n}\r\n\r\nfunction TopMenuNotification(): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const notifys: INotifyState = useSelector((state: IStateType) => state.notifys);\r\n  const user_read_notifications: IUserReadNotificationState = useSelector((state: IStateType) => state.user_read_notifications);\r\n  const [isShow, setShow] = useState(false);\r\n\r\n  var id_x = localStorage.getItem('id');\r\n  let user_id: number = 0;\r\n  if (id_x !== null) {\r\n    user_id = parseInt(id_x)\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserReadNotification(user_id))\r\n    dispatch(getNotify())\r\n  }, [dispatch, user_id])\r\n\r\n  console.log(notifys.notifys)\r\n  console.log(user_read_notifications.user_not_readed_notifications)\r\n\r\n  let data_not_read: Options[] = [];\r\n  let total = 0;\r\n  user_read_notifications.user_not_readed_notifications.map((ele, idx) => {\r\n    return notifys.notifys.map(notification => {\r\n      if (notification.idx === ele.notification_id){\r\n        let item: Options = {\r\n          notification_id: ele.notification_id,\r\n          notification_name: notification.name,\r\n          user_id: ele.user_id,\r\n          notification_time: notification.time,\r\n          notification_desciption: notification.description,\r\n          is_read: ele.is_read\r\n        }\r\n        total ++;\r\n        return data_not_read.push(item)\r\n      }\r\n      return notification\r\n    })\r\n  })\r\n\r\n  let data_readed: Options[] = [];\r\n  user_read_notifications.user_readed_notifications.map((ele, idx) => {\r\n    return notifys.notifys.map(notification => {\r\n      if (notification.idx === ele.notification_id && total <= 6){\r\n        let item: Options = {\r\n          notification_id: ele.notification_id,\r\n          notification_name: notification.name,\r\n          user_id: ele.user_id,\r\n          notification_time: notification.time,\r\n          notification_desciption: notification.description,\r\n          is_read: ele.is_read\r\n        }\r\n        total ++;\r\n        return data_readed.push(item)\r\n      }\r\n      return notification\r\n    })\r\n  })\r\n\r\n  const history = useHistory();\r\n  const routeChange1 = (e: any) =>{ \r\n    e.preventDefault();\r\n    let path = '/notification'; \r\n      history.push({\r\n          pathname: path,\r\n      });\r\n      setShow(!isShow);\r\n  }\r\n  const routeChange = (props: Options) =>{ \r\n      setShow(!isShow)\r\n      dispatch(putUserReadNotification({\r\n        user_id: user_id,\r\n        notification_id: props.notification_id,\r\n        is_read: true\r\n      }))\r\n      localStorage.removeItem('notification_id');\r\n      localStorage.setItem('notification_id', props.notification_id.toString());\r\n      localStorage.removeItem('user_id');\r\n      localStorage.setItem('user_id', props.user_id.toString());\r\n      localStorage.removeItem('notification_name');\r\n      localStorage.setItem('notification_name', props.notification_name);\r\n      localStorage.removeItem('notification_desciption');\r\n      localStorage.setItem('notification_desciption', props.notification_desciption);\r\n      localStorage.removeItem('notification_time');\r\n      localStorage.setItem('notification_time', props.notification_time);\r\n      let path = '/notification/detail'; \r\n      history.push({\r\n          pathname: path,\r\n      });\r\n  }\r\n\r\n  return (\r\n\r\n    <li className=\"nav-item dropdown no-arrow\">\r\n\r\n\r\n      <p className=\"nav-link dropdown-toggle waves-effect waves-light\" id=\"navbarDropdownMenuLink-5\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\" onClick={() => {\r\n        setShow(!isShow);\r\n      }}>\r\n        <span className=\"badge badge-danger ml-2\">{user_read_notifications.user_not_readed_notifications.length}</span>\r\n        <i className=\"fas fa-bell\"></i>\r\n      </p>\r\n\r\n      <div className={`dropdown-menu dropdown-menu-right shadow dropdown-secondary animated--grow-in ${(isShow) ? \"show\" : \"\"} notification`}\r\n        aria-labelledby=\"userDropdown\">\r\n          <ul className=\"list-notify\">\r\n            {\r\n              data_not_read.map((ele, idx) => {\r\n                return (\r\n                  <li key={idx}>\r\n                    <p className=\"dropdown-item waves-light\"\r\n                      onClick={() => {routeChange(ele)}}\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#logoutModal\">\r\n                      <i className=\"fas fa-bell fa-sm fa-fw mr-2\"></i>\r\n                      {ele.notification_name}\r\n                      <span className=\"badge badge-danger ml-2\">*</span>\r\n                    </p>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n          <div className=\"view-all-notify text-center\">\r\n            <a href=\"/#\" onClick={routeChange1}>Xem toàn bộ</a>\r\n          </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TopMenuNotification;\r\n","import React, { useState, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getNotify } from \"../../common/service/Notify/GetNotify\";\r\nimport { getUserReadNotification } from \"../../common/service/UserReadNotification/GetUserReadNotificationByUser\";\r\nimport { putUserReadNotification } from \"../../common/service/UserReadNotification/PutUserReadNotification\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { INotifyState, IStateType, IUserReadNotificationState, IUserRegisterJoinSemesterState } from \"../../store/models/root.interface\";\r\nimport \"./TopNotification.css\"\r\nimport { AiOutlineShoppingCart } from \"react-icons/ai\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { getUserRegisterJoinSemesterByPayer } from \"../../common/service/UserRegisterJoinSemester/GetUserRegisterJoinSemesterByPayer\";\r\nimport { getUserRegisterJoinSemesterByStudent } from \"../../common/service/UserRegisterJoinSemester/GetUserRegisterJoinSemesterStudent\";\r\n\r\ntype Options = {\r\n  notification_id: number;\r\n  user_id: number;\r\n  notification_name: string;\r\n  notification_desciption: string;\r\n  notification_time: string;\r\n  is_read: boolean;\r\n}\r\n\r\nfunction TopMenuCart(): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const notifys: INotifyState = useSelector((state: IStateType) => state.notifys);\r\n  const user_read_notifications: IUserReadNotificationState = useSelector((state: IStateType) => state.user_read_notifications);\r\n  const [isShow, setShow] = useState(false);\r\n  const user_register_join_semesters: IUserRegisterJoinSemesterState = useSelector((state: IStateType) => state.user_register_join_semesters);\r\n\r\n  var id_x = localStorage.getItem('id');\r\n  let user_id: number = 0;\r\n  if (id_x !== null) {\r\n    user_id = parseInt(id_x)\r\n  }\r\n\r\n  var role = localStorage.getItem('role')\r\n  var rolePrivilege: string[] = []\r\n  var roleUser: string = \"\"\r\n  if (role !== null) {\r\n      rolePrivilege = role.split(',')\r\n      roleUser = rolePrivilege[0]\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserReadNotification(user_id))\r\n    dispatch(getNotify())\r\n  }, [dispatch, user_id])\r\n\r\n  useEffect(() => {\r\n    if (roleUser === \"PARENT\") {\r\n      trackPromise(getUserRegisterJoinSemesterByPayer(dispatch, user_id))\r\n    }\r\n    else if (roleUser === \"STUDENT\") {\r\n      trackPromise(getUserRegisterJoinSemesterByStudent(dispatch, user_id))\r\n    }\r\n  }, [dispatch, user_id, roleUser])\r\n\r\n  console.log(notifys.notifys)\r\n  console.log(user_read_notifications.user_not_readed_notifications)\r\n\r\n  let data_not_read: Options[] = [];\r\n  let total = 0;\r\n  user_read_notifications.user_not_readed_notifications.map((ele, idx) => {\r\n    return notifys.notifys.map(notification => {\r\n      if (notification.idx === ele.notification_id){\r\n        let item: Options = {\r\n          notification_id: ele.notification_id,\r\n          notification_name: notification.name,\r\n          user_id: ele.user_id,\r\n          notification_time: notification.time,\r\n          notification_desciption: notification.description,\r\n          is_read: ele.is_read\r\n        }\r\n        total ++;\r\n        return data_not_read.push(item)\r\n      }\r\n      return notification\r\n    })\r\n  })\r\n\r\n  let data_readed: Options[] = [];\r\n  user_read_notifications.user_readed_notifications.map((ele, idx) => {\r\n    return notifys.notifys.map(notification => {\r\n      if (notification.idx === ele.notification_id && total <= 6){\r\n        let item: Options = {\r\n          notification_id: ele.notification_id,\r\n          notification_name: notification.name,\r\n          user_id: ele.user_id,\r\n          notification_time: notification.time,\r\n          notification_desciption: notification.description,\r\n          is_read: ele.is_read\r\n        }\r\n        total ++;\r\n        return data_not_read.push(item)\r\n      }\r\n      return notification\r\n    })\r\n  })\r\n\r\n  const history = useHistory();\r\n  const routeChange = (props: Options) =>{ \r\n      setShow(!isShow)\r\n      dispatch(putUserReadNotification({\r\n        user_id: user_id,\r\n        notification_id: props.notification_id,\r\n        is_read: true\r\n      }))\r\n      localStorage.removeItem('notification_id');\r\n      localStorage.setItem('notification_id', props.notification_id.toString());\r\n      localStorage.removeItem('user_id');\r\n      localStorage.setItem('user_id', props.user_id.toString());\r\n      localStorage.removeItem('notification_name');\r\n      localStorage.setItem('notification_name', props.notification_name);\r\n      localStorage.removeItem('notification_desciption');\r\n      localStorage.setItem('notification_desciption', props.notification_desciption);\r\n      localStorage.removeItem('notification_time');\r\n      localStorage.setItem('notification_time', props.notification_time);\r\n      let path = '/notification/detail'; \r\n      history.push({\r\n          pathname: path,\r\n      });\r\n  }\r\n\r\n  function routeCart() {\r\n    let path = '/cart'; \r\n    history.push({\r\n        pathname: path\r\n    });\r\n  }\r\n\r\n  if (roleUser === \"PARENT\" || roleUser === \"STUDENT\") {\r\n    return (\r\n\r\n      <li className=\"nav-item dropdown no-arrow\">\r\n  \r\n  \r\n        <p className=\"nav-link dropdown-toggle waves-effect waves-light\" id=\"navbarDropdownMenuLink-5\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\" onClick={() => {\r\n          routeCart();\r\n        }}>\r\n          <span className=\"badge badge-danger ml-2\">{user_register_join_semesters.waiting.length}</span>\r\n          <AiOutlineShoppingCart />\r\n        </p>\r\n  \r\n        <div className={`dropdown-menu dropdown-menu-right shadow dropdown-secondary animated--grow-in ${(isShow) ? \"show\" : \"\"} notification`}\r\n          aria-labelledby=\"userDropdown\">\r\n            <ul className=\"list-notify\">\r\n              {\r\n                data_not_read.map((ele, idx) => {\r\n                  return (\r\n                    <li key={idx}>\r\n                      <p className=\"dropdown-item waves-light\"\r\n                        onClick={() => {routeChange(ele)}}\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#logoutModal\">\r\n                        <i className=\"fas fa-bell fa-sm fa-fw mr-2\"></i>\r\n                        {ele.notification_name}\r\n                        <span className=\"badge badge-danger ml-2\">*</span>\r\n                      </p>\r\n                    </li>\r\n                  )\r\n                })\r\n              }\r\n  \r\n  \r\n              {\r\n                data_readed.map((ele, idx) => {\r\n                  return (\r\n                    <li>\r\n                      <p className=\"dropdown-item waves-light\"\r\n                        onClick={() => dispatch(logout())}\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#logoutModal\">\r\n                        <i className=\"fas fa-bell fa-sm fa-fw mr-2 text-gray-400\"></i>\r\n                        {ele.notification_name}\r\n                      </p>\r\n                    </li>\r\n                  )\r\n                })\r\n              }\r\n            </ul>\r\n            <div className=\"view-all-notify text-center\">\r\n              <a href=\"/notification\">Xem toàn bộ</a>\r\n            </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <></>\r\n    )\r\n  }\r\n};\r\n\r\nexport default TopMenuCart;\r\n","import React from \"react\";\nimport TopMenuAccount from \"./TopMenuAccount\";\nimport \"./TopMenu.css\";\nimport { useSelector } from \"react-redux\";\nimport { IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\nimport TopMenuNotification from \"./TopNotification\";\nimport TopMenuCart from \"./TopMenuCart\";\nimport { useHistory } from \"react-router-dom\";\n\nconst TopMenu: React.FC = () => {\n  const page: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\n  var role = localStorage.getItem('role')\n  var rolePrivilege:string[] =[]\n  var roleUser :string =\"\"\n  if (role !== null) {\n      rolePrivilege = role.split(',')\n      roleUser = rolePrivilege[0]\n  }\n\n  const history = useHistory();\n  function handleRoute () {\n    var idxxx = localStorage.getItem('path');\n    let path: string = \"\";\n    if (idxxx != null) {\n      path = idxxx\n    }\n    console.log('hello0')\n    if (page.subArea != null) {\n      console.log('hello')\n      history.push({\n        pathname: path\n      })\n    }\n    \n  }\n\n  if (roleUser === \"ADMIN\"){\n    return (\n      <nav className=\"navbar navbar-expand navbar-light bg-custom-dark topbar mb-4 static-top shadow\">\n        <ol className=\"breadcrumb dark-breadcrumb\">\n          <li className=\"breadcrumb-item teacher-breadcrumb-item\"><p className=\"mb-2 text-gray-400\" id=\"home-teacher\" onClick={() => {handleRoute()}}>{page ? page.area : null}</p></li>\n          <li className=\"breadcrumb-item teacher-breadcrumb-item\"><p className=\"mb-2 text-gray-400\" id=\"home-teacher\">{page ? page.subArea : null}</p></li>\n        </ol>\n  \n        <ul className=\"navbar-nav ml-auto\">\n          <TopMenuNotification />\n          <div className=\"topbar-divider d-none d-sm-block\"></div>\n          <TopMenuAccount />\n        </ul>\n      </nav>\n    );\n  }\n  else if (roleUser === \"TEACHER\"){\n    return (\n      <nav className=\"navbar navbar-expand navbar-light bg-custom-dark topbar mb-4 static-top\" id=\"teacher_navbar\">\n        <ol className=\"breadcrumb dark-breadcrumb\" id=\"teacher_breadcrumb\">\n          <li className=\"breadcrumb-item teacher-breadcrumb-item\"><p className=\"mb-2 text-gray-400\" id=\"home-teacher\" onClick={() => {handleRoute()}}>{page ? page.area : null}</p></li>\n          <li className=\"breadcrumb-item teacher-breadcrumb-item\"><p className=\"mb-2 text-gray-400\" id=\"home-teacher\">{page ? page.subArea : null}</p></li>\n        </ol>\n  \n        <ul className=\"navbar-nav ml-auto\">\n          <TopMenuNotification />\n          <div className=\"topbar-divider d-none d-sm-block\"></div>\n          <TopMenuAccount />\n        </ul>\n      </nav>\n    );\n  }\n\n  else if (roleUser === \"PARENT\" || roleUser === \"STUDENT\") {\n    return (\n      <nav className=\"navbar navbar-expand navbar-light bg-custom-dark topbar mb-4\" id=\"teacher_navbar\">\n        <ol className=\"breadcrumb dark-breadcrumb\" id=\"teacher_breadcrumb\">\n          <li className=\"breadcrumb-item teacher-breadcrumb-item\"><p className=\"mb-2 text-gray-400\" id=\"home-teacher\" onClick={() => {handleRoute()}}>{page ? page.area : null}</p></li>\n          <li className=\"breadcrumb-item teacher-breadcrumb-item\"><p className=\"mb-2 text-gray-400\" id=\"home-teacher\">{page ? page.subArea : null}</p></li>\n        </ol>\n  \n        <ul className=\"navbar-nav ml-auto\">\n          <TopMenuCart />\n          <div className=\"topbar-divider d-none d-sm-block\"></div>\n          <TopMenuNotification />\n          <div className=\"topbar-divider d-none d-sm-block\"></div>\n          <TopMenuAccount />\n        </ul>\n      </nav>\n    );\n  }\n  return (\n    <nav className=\"navbar navbar-expand navbar-light bg-custom-dark topbar mb-4 static-top shadow\">\n      <ol className=\"breadcrumb dark-breadcrumb\">\n          <li className=\"breadcrumb-item teacher-breadcrumb-item\"><p className=\"mb-2 text-gray-400\" id=\"home-teacher\" onClick={() => {handleRoute()}}>{page ? page.area : null}</p></li>\n          <li className=\"breadcrumb-item teacher-breadcrumb-item\"><p className=\"mb-2 text-gray-400\" id=\"home-teacher\">{page ? page.subArea : null}</p></li>\n      </ol>\n\n      <ul className=\"navbar-nav ml-auto\">\n        <TopMenuNotification />\n        <div className=\"topbar-divider d-none d-sm-block\"></div>\n        <TopMenuAccount />\n      </ul>\n    </nav>\n  );\n  \n};\n\nexport default TopMenu;\n"],"sourceRoot":""}