{"version":3,"sources":["common/service/Payment/PostPayment.js","common/components/TextInput.tsx","store/actions/account.actions.ts","store/actions/users.action.ts","common/service/Aut/RefreshToken.tsx","common/service/User/UpdateStatusUser.tsx","common/service/Aut/Login.tsx","components/Account/Login.tsx","common/components/PrivateRoute.tsx","components/LeftMenu/LeftMenu.js","store/actions/profile.action.ts","common/service/User/GetProfile.tsx","components/TopMenu/TopMenuAccount.tsx","store/actions/notify.action.ts","common/service/Notify/GetNotify.tsx","store/actions/user_read_notification.action.ts","common/service/UserReadNotification/GetUserReadNotificationByUser.tsx","store/actions/semester.actions.ts","common/service/UserReadNotification/PutUserReadNotification.tsx","components/TopMenu/TopNotification.tsx","store/actions/user_register_join_semester.action.ts","common/service/UserRegisterJoinSemester/GetUserRegisterJoinSemesterByPayer.tsx","common/service/UserRegisterJoinSemester/GetUserRegisterJoinSemesterStudent.tsx","components/TopMenu/TopMenuCart.tsx","components/TopMenu/TopMenu.tsx","store/actions/root.actions.ts","common/components/TopCard.tsx","store/models/anonymous_notification.interface.ts","store/actions/anonymous_notification.action.ts","store/actions/art_age.action.ts","common/components/SelectKeyValue.tsx","components/Home/NotificationForm.tsx","common/service/AnonymousNotification/PostAnonymousNotification.tsx","store/actions/schedule_time_class.action.ts","common/service/ScheduleTimeClass/GetScheduleTimeClass.tsx","common/components/Loading.js","common/service/UserRegisterJoinSemester/GetTotalMoney.tsx","common/service/Teacher/GetTotalTeacher.tsx","common/service/Parent/GetTotalParent.tsx","common/service/Student/GetTotalStudent.tsx","store/actions/course.action.ts","common/service/Course/GetTotalCourse.tsx","store/actions/contest.action.ts","common/service/Contest/GetTotalContest.tsx","components/Home/Home.tsx","store/models/user.interface.ts","components/Teachers/TeacherList.js","store/actions/notifications.action.ts","common/service/Teacher/GetTeacher.tsx","common/service/Teacher/PostTeacher.tsx","common/service/User/GetUserById.tsx","common/service/Teacher/PutTeacher.tsx","components/Teachers/TeacherForm.tsx","common/service/User/DeleteUser.tsx","components/Teachers/TeacherImportForm.tsx","store/actions/teacher_register_quantification.action.ts","common/service/TeacherRegisterQuantification/GetTeacherRegisterQuantification.tsx","components/Teachers/Teacher.tsx","store/models/product.interface.ts","common/service/Teacher/PostTeacher1.tsx","store/actions/products.action.ts","components/Teachers/HistoryTeach.tsx","common/service/Course/GetCourse.tsx","components/Teachers/DetailTeacher.tsx","components/Student/StudentList.js","common/service/Student/GetStudent.tsx","components/Student/Student.tsx","components/Student/HistoryStudent.tsx","components/Student/DetailStudent.tsx","components/Parent/ParentList.js","common/service/Parent/GetParent.tsx","components/Parent/Parent.tsx","components/Parent/HistoryParent.tsx","store/models/semester.interface.ts","components/Parent/DetailParent.tsx","common/components/NumberInput.tsx","common/service/semester/GetSemester.tsx","common/components/DateInput.tsx","common/components/DateInput2.tsx","components/Semester/SemesterForm.tsx","common/service/semester/PostSemester.tsx","common/service/semester/PutSemester.tsx","components/Semester/SemesterlList.js","store/models/lesson.interface.ts","components/Semester/Semester.tsx","common/service/semester/DeleteSemester.tsx","store/actions/lesson.action.ts","common/service/Lesson/GetLesson.tsx","components/Lesson/LessonForm.tsx","common/service/Lesson/PostLesson.tsx","common/service/Lesson/PutLesson.tsx","components/Lesson/LessonList.js","store/models/art_type.interface.ts","components/Lesson/Lesson.tsx","common/service/Lesson/DeleteLesson.tsx","store/actions/art_type.action.ts","components/Art/TeachTypeList.js","common/service/ArtType/GetArtType.tsx","components/Art/TeachTypeForm.tsx","store/models/art_level.interface.ts","common/service/ArtType/PostArtType.tsx","common/service/ArtType/PutArtType.tsx","store/actions/art_level.action.ts","components/Art/TeachLevelList.js","common/service/ArtLevel/GetArtLevel.tsx","components/Art/TeachLevelForm.tsx","store/models/art_age.interface.ts","common/service/ArtLevel/PostArtLevel.tsx","common/service/ArtLevel/PutArtLevel.tsx","components/Art/TeachAgeList.js","common/service/ArtAge/GetArtAge.tsx","components/Art/TeachAgeForm.tsx","common/service/ArtAge/PostArtAge.tsx","common/service/ArtAge/PutArtAge.tsx","components/Art/Art.tsx","store/models/course.interface.ts","common/service/ArtType/DeleteArtType.tsx","common/service/ArtAge/DeleteArtAge.tsx","common/service/ArtLevel/DeleteArtLevel.tsx","components/Course/CourseNomalList.js","components/Course/Course.tsx","store/models/my_class.interface.ts","common/service/Course/DeleteCourse.tsx","store/actions/my_class.action.ts","components/Class/ClassList.js","common/service/MyClass/GetMyClass.tsx","store/models/semester_class.interface.ts","store/actions/semester_class.action.ts","components/Class/ClassSemesterList.js","store/actions/schedule.action.ts","common/service/Schedule/GetSchedule.tsx","common/service/Schedule/PostSchedule.tsx","common/service/SemesterClass/GetSemesterClass.tsx","common/components/SelectKeyValueMutiple.tsx","common/components/SelectKeyValueMutiple2.tsx","components/Class/ClassSemesterForm.tsx","common/service/SemesterClass/PostSemesterClass.tsx","common/service/SemesterClass/PutSemesterClass.tsx","common/service/Schedule/DeleteScheduleBySemesterClass.tsx","common/service/MyClass/PostScheduleClass.tsx","common/service/semester/GetSemesterNext.tsx","common/components/SelectKeyValueNotField.tsx","components/Class/Class.tsx","common/service/SemesterClass/DeleteSemesterClass.tsx","components/Class/LessonList.tsx","components/Class/StudentList.tsx","store/actions/information_class.action.ts","store/actions/time_schedule.action.ts","common/service/MyClass/GetInfoMyClass.tsx","store/actions/section.action.ts","common/service/Section/GetSectionByClass.tsx","components/Class/DetailClass.tsx","components/Class/DetailLesson.tsx","common/components/ChartBar.js","common/service/UserRegisterJoinSemester/GetUserRegisterJoinSemester.tsx","common/components/DoughnutPieCharts.js","components/Turnover/CourseAnalytis.tsx","common/components/CharLine.js","components/Turnover/UserAnalytis.tsx","store/actions/turnover.action.ts","common/service/TurnOver/GetTurnoverReport.tsx","store/actions/report_user.action.ts","common/service/ReportUser/GetUserReport.tsx","store/actions/course_report.action.ts","common/service/CourseReport/GetCourseReport.tsx","components/Turnover/TurnoverList.js","components/Turnover/Turnover.tsx","store/actions/teacher_leave.action.ts","common/service/NotifyDb/PostNotifyDb.tsx","common/service/UserReadNotification/PostUserReadNotification.tsx","common/service/TeacherLeave/PutTeacherLeave.tsx","components/Request/TeacherRequestList.js","common/service/TeacherLeave/GetTeacherLeave.tsx","components/Request/TeacherRequest.tsx","common/service/TeacherRegisterQuantification/GetTeacherRegisterQuantificationByTeacherId.tsx","common/service/TeacherRegisterQuantification/PutTeacherRegisterLevelAdmin.tsx","components/Request/RequestConfirmLevelList.js","components/Request/RequestConfirmLevel.tsx","common/components/Quill/EditorToolbar.js","common/components/Quill/EditorSectionTemplate.js","store/actions/tutorial_template_page.action.ts","common/service/TutorialTemplatePage/GetTutorialTemplatePageByTutorialTemplateId.tsx","common/service/TutorialTemplatePage/PostTutorialTemplatePage1.tsx","components/Course/LessonPlan.tsx","store/models/contest.interface.ts","common/components/ConverDate.js","components/Contest/ContestIsOnList.js","components/Contest/ContestEndList.js","components/Contest/ContestNotOnYetList.js","common/service/ContestSubmission/PostGenerationForTeacher.tsx","common/service/Contest/GetContest.tsx","components/Contest/Contest.tsx","common/service/Contest/DeleteContest.tsx","components/Request/DegreePhoto.tsx","common/components/Checkbox.tsx","common/components/Quill/Editor.js","store/actions/section_template.action.ts","store/actions/tutorial_template.action.ts","common/service/TutorialTemplate/PostTutorialTemplate1.tsx","common/service/TutorialTemplatePage/PostTutorialTemplatePage.tsx","common/service/SectionTemplate/GetSectionTemplate.tsx","common/service/Course/PostCourse.tsx","common/service/SectionTemplate/PostSectionTemplate1.tsx","common/service/Course/PutCourse.tsx","components/Course/CourseNomalForm.tsx","common/service/UserGradeContest/PostUserGradeContest.tsx","common/service/Contest/PutContest.tsx","common/service/UserGradeContest/DeleteUserGradeContestByContest.tsx","common/components/ReactSelect.js","store/actions/user_grade_contest.action.ts","common/service/UserGradeContest/GetUserGradeContestByContestId.tsx","common/components/DateInput1.tsx","components/Contest/ContestForm.tsx","common/service/Contest/PostContest.tsx","components/Course/CourseNomalFormEdit.tsx","common/components/Select.tsx","components/Account/Account.tsx","components/Account/ChangePassword.tsx","common/service/User/UpdatePassword.tsx","components/Contest/TopStudent.tsx","components/Contest/TopTeacher.tsx","store/actions/user_grade_contest_submission.action.ts","common/service/UserGradeContestSubmission/GetUserGradeContestSubmissionByContest.tsx","store/actions/contest_submission.action.ts","common/service/ContestSubmission/GetContestSubmissionByContest.tsx","components/Contest/ResultContest.tsx","store/models/section_template.interface.ts","common/components/ConvertVietNamese.tsx","components/SectionTemplate/SectionTemplateList.tsx","common/service/SectionTemplate/GetSectionTemplateByCourseId.tsx","common/service/TutorialTemplate/GetTutorialTemplate.tsx","common/service/TutorialTemplatePage/GetTutorialTemplatePage.tsx","components/SectionTemplate/SectionTemplate.tsx","common/components/Quill/EditorEditSection.js","common/service/TutorialTemplatePage/PutTutorialTemplatePage.tsx","common/service/TutorialTemplatePage/DeleteTutorialTemplatePage.tsx","common/service/TutorialTemplatePage/PutTutorialTemplatePage1.tsx","components/SectionTemplate/SectionTemplateForm.tsx","common/service/SectionTemplate/PutSectionTemplate.tsx","common/components/TopCardUser.tsx","store/models/teacher_register_quantification.interface.ts","common/components/TopCardLevel.tsx","components/Home/TeacherLevelList.tsx","components/Home/TeacherHome.tsx","components/Class/ScheduleForClassList.js","components/Class/ScheduleClass.tsx","store/actions/course_teacher_new.action.ts","common/service/CourseTeacherNew/GetCourseTeacherNew.tsx","components/Course/CourseTeacherList.tsx","components/Course/CourseTeacher.tsx","store/actions/time_schedule_teacher.action.ts","common/service/ScheduleTeacher/GetScheduleTeacher.tsx","components/Schedule/ScheduleTeacher.tsx","store/actions/course_teacher.action.ts","common/service/CourseTeacher/GetCourseTeacherByTeacher.tsx","components/Course/CourseTeacherDetail.tsx","common/service/UserTeachSemester/PostRegisterTeachSemester.tsx","components/TeacherLevel/TeacherLevelForm.tsx","common/service/TeacherRegisterQuantification/PostTeacherLevel.tsx","common/service/TeacherRegisterQuantification/PutTeacherRegisterLevel.tsx","components/TeacherLevel/TeacherLevelList.tsx","components/TeacherLevel/TeacherLevelNotApprovedNowList.tsx","store/models/class_teacher.interface.ts","components/TeacherLevel/TeacherLevel.tsx","components/TeacherLevel/TeacherLevelDetail.tsx","store/actions/class_teacher.action.ts","common/service/ClassTeacher/GetClassTeacher.tsx","components/Class/ClassTeacherDoingList.js","components/Class/ClassTeacherEndList.js","components/Class/ClassTeacher.tsx","components/Class/NotificationClassTeacher.tsx","common/service/Notification/PostNotificationByClass.tsx","components/Class/StudentForTeacherList.tsx","components/Class/ClassTeacherDetail.tsx","store/actions/contest_teacher.action.ts","common/service/ContestTeacher/GetContestTeacher.tsx","components/Contest/ContestTeacherNotDoingList.js","components/Contest/ContestTeacherEndList.js","components/Contest/ContestTeacherDoingList.js","components/Contest/ContestTeacher.tsx","store/actions/exercise_student.action.ts","common/service/ExerciseStudent/GetExerciseForClassStudent.tsx","common/service/Parent/GetParentById.tsx","store/actions/student_leave.action.ts","common/service/StudentLeave/GetStudentLeaveByClassStudent.tsx","store/actions/user_grade_exercise_submission.action.ts","common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByClassStudent.tsx","components/ManageStudent/ManageStudent.tsx","components/ManageStudent/ExerciseSectionList.js","components/ManageStudent/ExerciseStudentList.tsx","components/ManageStudent/DetailExerciseStudent.tsx","store/actions/exercise_submission.action.ts","common/service/ExerciseSubmission/GetExerciseSubmissionByClass.tsx","common/service/TeacherLeave/GetTeacherLeaveByTeacher.tsx","components/Class/RequestOffSectionForm.tsx","common/service/TeacherLeave/PostTeacherLeave.tsx","components/Class/DetailClassTeacher.tsx","common/service/UserGradeExercise/PostUserGradeExercise.tsx","common/service/ExerciseSubmission/GetExerciseSubmissionByExeercise.tsx","components/Exam/GradeExamTeacher.tsx","common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByExeerciseAndClass.tsx","components/Exam/ScoreExamList.tsx","components/Exam/ResultGradeExamTeacher.tsx","components/Exam/AnalytisScoreExamTeacher.tsx","store/actions/exercise.action.ts","common/service/Exercise/GetExerciseBySection.tsx","store/actions/exercise_level.action.ts","store/models/exercise.interface.ts","common/service/ExerciseLevel/GetExerciseLevel.tsx","common/service/Section/GetSectionById.tsx","components/Exercise/ExerciseForm.tsx","common/service/Exercise/PostExercise.tsx","store/actions/tutorial_page.action.ts","common/service/TutorialPage/GetTutorialPageBySection.tsx","store/actions/tutorial.action.ts","common/service/Tutorial/GetTutorialBySection.tsx","common/service/Section/PutSection.tsx","components/SectionTeacher/SubmitRecordForm.tsx","components/SectionTeacher/SectionTeacher.tsx","common/service/TutorialPage/GetTutorialPageByTutorialId.tsx","common/service/UserRegisterTutorial/PostUserRegisterTutorial.tsx","common/service/UserRegisterTutorialPage/PostUserRegisterTutorialPageToast.tsx","common/service/UserRegisterTutorialPage/PostUserRegisterTutorialPage.tsx","components/SectionTeacher/EditSectionTeacher.tsx","components/SectionTeacher/ViewSectionTeacher.tsx","common/service/StudentLeave/GetStudentLeaveByTeacher.tsx","components/RequestTeacher/StudentLeaveList1.js","common/service/StudentLeave/PutStudentLeave.tsx","components/RequestTeacher/RequestTeacher.tsx","components/Exam/ExamTeacher.tsx","components/RequestTeacher/StudentLeaveDetail.tsx","components/Request/DetailTeacherRequest.tsx","store/actions/user_register_tutorial.action.ts","common/service/UserRegisterTutorial/GetUserRegisterTutorial.tsx","common/service/UserRegisterTutorial/PutUserRegisterTutorial.tsx","components/Request/TutorialEditRequestList.js","components/Request/UserRegisterTutorialEditRequestList.tsx","components/Request/TutorialEditRequest.tsx","store/actions/contest_submission_teacher.action.ts","common/service/ContestSubmission/GetContestSubmissonForTeacherAndContest.tsx","components/Contest/ContestDetailTeacher.tsx","common/service/UserGradeContestSubmission/PostUserGradeContestSubmission.tsx","components/Contest/GradeContestTeacher.tsx","components/Contest/ScoreContestList.tsx","common/service/Student/GetStudentByParent.tsx","components/Contest/ResultGradeContestTeacher.tsx","components/Contest/AnalytisResultGradeContestTeacher.tsx","components/Contest/DetailContestTeacher.tsx","components/Notification/NotificationDetail.tsx","store/actions/notify_db.action.ts","common/service/NotifyDb/GetNotifyDb.tsx","store/models/child.interface.ts","components/Notification/Notification.tsx","store/actions/child.action.ts","components/AccountChild/AccountChildForm.tsx","common/service/User/PostUser.tsx","common/service/ScheduleTimeClass/GetScheduleTimeByParent.tsx","components/Home/AccountChildList1.tsx","common/service/Childs/GetInforChildByParent.tsx","components/Home/ParentHome.tsx","components/GuessColor/Header/index.tsx","components/GuessColor/Game/components/ColorBlock/index.tsx","components/GuessColor/Game/index.tsx","components/GuessColor/Scoreboard/index.tsx","components/GuessColor/index.tsx","store/actions/course_parent.action.ts","common/service/CourseParent/GetCourseParent.tsx","components/Course/CourseParent.tsx","store/actions/contest_student.action.ts","common/service/ContestStudent/GetContestStudentByParent.tsx","components/Contest/ContestStudentNotOpenNowListList.tsx","components/Contest/ContestDoingStudentList.tsx","components/Contest/ContestEndStudentList.tsx","components/Contest/ContestParent.tsx","components/Schedule/ScheduleParent.tsx","components/Course/CourseStudent.tsx","common/service/ScheduleTimeClass/GetScheduleTimeByStudent.tsx","components/Schedule/ScheduleStudent.tsx","common/service/ContestStudent/GetContestStudent.tsx","components/Contest/ContestStudentDoingList1.tsx","components/Contest/ContestStudent.tsx","common/service/Course/GetTotalCourseForStudent.tsx","common/service/Contest/GetTotalContestForStudent.tsx","components/Home/StudentHome.tsx","common/service/Contest/GetContestByStudent.tsx","store/actions/classes_student.action.ts","common/service/ClassesStudent/GetClassesStudentByStudent.tsx","components/ManageChild/ManageStudyChild.tsx","components/ManageChild/ScheduleForChild.tsx","common/service/UserGradeContestSubmission/GetUserGradeContestSubmissionByStudent.tsx","store/actions/final_score_child.action.ts","common/service/FinalScoreChild/GetFinalScoreChild.tsx","components/ManageChild/ManageChild.tsx","common/service/ClassHasRegisterJoinSemester/PutReviewClassByStudent.tsx","components/ManageChild/FormReviewClass.tsx","store/models/classes_parent.interface.ts","components/ManageChild/ManageClassesDone.tsx","store/actions/classes_parent.action.ts","common/service/ClassesParent/GetClassesParent.tsx","components/ClassParent/ClassDoingList1.tsx","components/ClassParent/ClassDoneList1.tsx","components/ClassParent/ClassParent.tsx","components/ManageChild/ManageClassesDoing.tsx","common/service/SemesterClass/GetSemesterNew.tsx","store/actions/cart.action.ts","common/service/UserRegisterJoinSemester/PostUserRegisterJoinSemester.tsx","common/service/UserRegisterJoinSemester/postUserRegisterJoinSemester1.tsx","components/Discovery/SemesterClassDetail.tsx","components/Discovery/ContestDetail.tsx","common/service/UserRegisterContest/PostUserRegisterContest.tsx","common/service/UserRegisterJoinSemester/DeleteUserRegisterJoinSemester.tsx","components/Discovery/CartForm.tsx","components/ManageStudent/DetailContestStudent.tsx","store/actions/attendance.action.ts","common/service/Attendance/PutAttendance.tsx","common/service/Attendance/GetAttendance.tsx","components/SectionTeacher/AttendanceList.tsx","common/service/Attendance/GetAttendanceBySection.tsx","components/SectionTeacher/Attendance.tsx","store/models/classes_student.interface.ts","components/ClassStudent/ClassDoneList1.tsx","components/ClassStudent/ClassDoingList1.tsx","components/ClassStudent/ClassStudent.tsx","store/actions/course_new.action.ts","common/service/CourseNew/GetCourseNew.tsx","components/DiscoveryStudent/CourseListNew.tsx","store/models/student_leave.interface.ts","components/DiscoveryStudent/Discovery.tsx","components/DiscoveryStudent/SemesterClassDetail.tsx","common/service/StudentLeave/PostStudentLeave.tsx","common/service/StudentLeave/GetStudentLeave.tsx","components/ClassStudent/RequestOffSectionForm.tsx","components/ClassStudent/DetailClassStudent.tsx","common/service/ExerciseStudent/GetExerciseBySectionStudent.tsx","components/ClassStudent/SectionStudent.tsx","components/ClassStudent/ViewSectionStudent.tsx","common/service/Attendance/PutAttendanceByUserAndSection.tsx","common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByExerciseStudent.tsx","components/ManageStudent/DetailExerciseStudent1.tsx","components/ClassStudent/FormSubmit.tsx","common/service/ExerciseSubmission/PostExerciseSubmission.tsx","components/Contest/FormSubmitContestStudent.tsx","common/service/ContestSubmission/PostContestSubmission.tsx","components/ClassStudent/ScheduleClassStudent.tsx","common/service/ExerciseSubmission/GetExerciseSubmissionById.tsx","components/Exercise/ViewExerciseSubmission.tsx","store/actions/semester_class_student.action.ts","common/service/SemesterClassStudent/GetSemesterClassStudentNew.tsx","components/DiscoveryStudent/SemesterClassListNew.tsx","components/DiscoveryStudent/SemesterClasssStudentNew.tsx","common/service/FinalCourse/GetInfoFinalCourse.tsx","store/actions/class_has_register_join_semester.action.ts","common/service/ClassHasRegisterJoinSemester/GetInfoClassHasRegisterJoinSemester.tsx","components/ClassStudent/ReviewClassDone.tsx","components/ClassStudent/ExerciseSectionList1.tsx","components/ClassStudent/ExerciseStudentList1.tsx","components/ClassStudent/ReviewStart.tsx","store/actions/semester_class_parent.action.ts","common/service/SemesterClasssParent/GetSemesterClassByParentCourse.tsx","components/Discovery/SemesterClassNewList.tsx","components/Discovery/SemesterClassParentNew.tsx","common/components/TopCardSemesterClassTeacher.tsx","components/Course/SemesterClassList.tsx","store/actions/semester_class_teacher.action.ts","common/service/SemesterClassTeacherNew/GetSemesterClassTeacherNew.tsx","components/Course/SemesterClassTeacherNew.tsx","common/service/MyClass/GetInforMyClassTeacher.tsx","components/ClassTeacher/ClassTeacherEndDetail.tsx","common/components/Quill/EditReviewStudent.js","components/ManageStudent/ReviewStudent.tsx","common/service/ClassHasRegisterJoinSemester/PutClassHasRegisterJoinSemesterTeacher.tsx","components/ManageStudent/ManageStudentEnd.tsx","store/actions/course_parent_new.action.ts","common/service/CourseParentNew/GetCourseParentNew.tsx","components/Discovery/CourseNewListTest.tsx","components/Discovery/Discovery.tsx","store/actions/contest_parent_new.action.ts","common/service/ContestParentNew/GetContestParentNew.tsx","components/Discovery/ContestNewListTest.tsx","components/Discovery/DiscoveryContest.tsx","components/RequestTeacher/TeacherLeaveList1.js","components/RequestTeacher/RequestTeacher1.tsx","components/DiscoveryStudent/ContestListNew.tsx","components/DiscoveryStudent/Discovery1.tsx","components/Exam/GradeExamTeacherEle.tsx","components/Exam/ViewExerciseTeacherStudent.tsx","Routers/Routers.tsx","common/components/Header.tsx","common/components/Footer.tsx","components/LandingPage/LandingPage.tsx","components/Account/ForgotPassword.tsx","common/service/ResetPassword/PostResetPassword.tsx","components/Account/UpdatePassword.tsx","common/service/ResetPassword/PostSavePassword.tsx","components/Account/RegisterForm.tsx","common/service/Aut/Register.tsx","components/Discovery/PaymentSuccessfull.tsx","common/service/UserRegisterJoinSemester/PostStatusUserRegisterJoinSemester.tsx","App.tsx","serviceWorker.ts","store/reducers/products.reducer.ts","store/reducers/notification.reducer.ts","store/reducers/users.reducer.ts","store/actions/orders.actions.ts","store/reducers/order.reducer.ts","store/reducers/account.reducer.ts","store/reducers/semester.reducer.ts","store/reducers/lesson.reducer.ts","store/models/schedule.interface.ts","store/reducers/schedule.reducer.ts","store/models/schedule_item.interface.ts","store/actions/schedule_item.action.ts","store/reducers/schedule_item.reducer.ts","store/reducers/art_type.reducer.ts","store/reducers/art_level.reducer.ts","store/reducers/art_age.reducer.ts","store/reducers/course.reducer.ts","store/reducers/contest.reducer.ts","store/reducers/section_template.reducer.ts","store/models/tutorial_template.interface.ts","store/reducers/tutorial_template.reducer.ts","store/models/user_grade_contest.interface.ts","store/reducers/user_grade_contest.reducer.ts","store/models/tutorial_template_page.interface.ts","store/reducers/tutorial_template_page.reducer.ts","store/models/teacher_leave.interface.ts","store/reducers/teacher_leave.reducer.ts","store/reducers/student_leave.reducer.ts","store/reducers/my_class.reducer.ts","store/reducers/teacher_register_quantification.reducer.ts","store/models/information_class.interface.ts","store/reducers/information_class.reducer.ts","store/models/time_schedule.interface.ts","store/reducers/time_schedule.reducer.ts","store/models/course_teacher.interface.ts","store/reducers/course_teacher.reducer.ts","store/models/time_schedule_teacher.interface.ts","store/reducers/time_schedule_teacher.reducer.ts","store/reducers/class_teacher.reducer.ts","store/models/contest_teacher.interface.ts","store/reducers/contest_teacher.reducer.ts","store/reducers/semester_class.reducer.ts","store/reducers/anonymous_notification.reducer.ts","store/models/section.interface.ts","store/reducers/section.reducer.ts","store/models/tutorial_page.interface.ts","store/reducers/tutorial_page.reducer.ts","store/reducers/exercise.reducer.ts","store/models/exercise_submission.interface.ts","store/reducers/exercise_submission.reducer.ts","store/models/turnover.interface.ts","store/reducers/turnover.reducer.ts","store/models/report_user.interface.ts","store/reducers/report_user.reducer.ts","store/models/course_report.interface.ts","store/reducers/course_report.reducer.ts","store/models/exercise_level.interface.ts","store/reducers/exercise_level.reducer.ts","store/models/user_grade_exercise_submission.interface.ts","store/reducers/user_grade_exercise_submission.reducer.ts","store/models/exercise_student.interface.ts","store/reducers/exercise_student.reducer.ts","store/models/tutorial.interface.ts","store/reducers/tutorial.reducer.ts","store/models/user_grade_contest_submission.interface.ts","store/reducers/user_grade_contest_submission.reducer.ts","store/models/user_register_tutorial_page.interface.ts","store/actions/user_register_tutorial_page.action.ts","store/reducers/user_register_tutorial_page.reducer.ts","store/models/user_register_tutorial.interface.ts","store/reducers/user_register_tutorial.reducer.ts","store/models/contest_submission.interface.ts","store/reducers/contest_submission.reducer.ts","store/models/schedule_time_class.interface.ts","store/reducers/schedule_time_class.reducer.ts","store/models/notify_db.interface.ts","store/reducers/notify_db.reducer.ts","store/models/user_read_notification.interface.ts","store/reducers/user_read_notification.reducer.ts","store/models/notify.interface.ts","store/reducers/notify.reducer.ts","store/reducers/classes_student.reducer.ts","store/reducers/classes_parent.reducer.ts","store/models/course_parent.interface.ts","store/reducers/course_parent.reducer.ts","store/models/contest_student.interface.ts","store/reducers/contest_student.reducer.ts","store/models/cart.interface.ts","store/reducers/cart.reducer.ts","store/models/attendance.interface.ts","store/reducers/attendance.reducer.ts","store/models/profile.interface.ts","store/reducers/profile.reducer.ts","store/models/user_register_join_semester.interface.ts","store/reducers/user_register_join_semester.reducer.ts","store/models/course_student.interface.ts","store/actions/course_student.action.ts","store/reducers/course_student.reducer.ts","store/models/course_new.interface.ts","store/reducers/course_new.reducer.ts","store/models/semester_class_student.interface.ts","store/reducers/semester_class_student.reducer.ts","store/models/class_has_register_join_semester.interface.ts","store/reducers/class_has_register_join_semester.reducer.ts","store/models/course_parent_new.interface.ts","store/reducers/course_parent_new.reducer.ts","store/models/semester_class_parent.interface.ts","store/reducers/semester_class_parent.reducer.ts","store/models/contest_parent_new.interface.ts","store/reducers/contest_parent_new.reducer.ts","store/models/course_teacher_new.interface.ts","store/reducers/course_teacher_new.reducer.ts","store/models/semester_class_teacher.interface.ts","store/reducers/semester_class_teacher.reducer.ts","store/models/contest_submission_teacher.interface.ts","store/reducers/contest_submission_teacher.reducer.ts","store/reducers/child.reducer.ts","store/models/final_score_child.interface.ts","store/reducers/final_score_child.reducer.ts","store/reducers/root.reducer.ts","store/store.ts","index.tsx"],"names":["postMomo","total_price","ids","requestId","Date","getTime","orderId","ipnUrl","toString","console","log","redirectUrl","rawSignature","signature","crypto","update","digest","requestBody","JSON","stringify","partnerCode","accessKey","amount","orderInfo","extraData","requestType","lang","https","require","options","hostname","port","path","method","headers","Buffer","byteLength","req","request","res","statusCode","setEncoding","on","body","window","open","parse","payUrl","e","message","write","end","TextInput","props","useState","touched","setTouch","error","setError","htmlClass","setHtmlClass","setValue","htmlFor","id","label","value","type","onChange","event","target","validClass","elementValue","required","maxLength","length","field","className","inputClass","placeholder","LOG_IN","LOG_OUT","logout","FETCH_DATA_REQUEST","FETCH_DATA_SUCCESS","FETCH_DATA_ERROR","ADD_ADMIN","EDIT_ADMIN","REMOVE_ADMIN","REMOVE_TEACHER_ALL","INITIAL_TEACHER","ADD_TEACHER","REMOVE_TEACHER","EDIT_TEACHER","REMOVE_STUDENT_ALL","INITIAL_STUDENT","ADD_STUDENT","EDIT_STUDENT","REMOVE_STUDENT","REMOVE_PARENT_ALL","INITIAL_PARENT","ADD_PARENT","EDIT_PARENT","REMOVE_PARENT","SET_MODIFICATION_STATE","CHANGE_USER_PENDING_EDIT","CLEAR_USER_PENDING_EDIT","fetchDataRequest","fetchDataSuccess","user","fetchDataError","payload","initialTeacher","removeTeacherAll","initialStudent","removeStudentAll","initialParent","removeParentAll","addTeacher","editTeacher","addStudent","changeSelectedUser","clearSelectedUser","setModificationState","postRefreshToken","refresh_token","localStorage","getItem","dispatch","fetch","process","then","response","ok","status","Error","statusText","putStatusUser","removeItem","json","data","setItem","accessToken","refreshToken","catch","bearer","val","postAut","username","password","changeRouteHome","clear","token","decoded","jwt_decode","role_privilege","profile_image_url","login","toast","render","isLoading","position","POSITION","TOP_CENTER","autoClose","setTimeout","openRequest","indexedDB","onerror","onsuccess","db","result","onversionchange","close","alert","query","transaction","objectStore","getAll","token_object","Login","useDispatch","history","useHistory","formState","setFormState","push","hasFormValueChanged","model","isFormInvalid","onClick","src","alt","onSubmit","preventDefault","loading","style","color","PrivateRoute","children","rest","useSelector","state","account","to","pathname","Header","menuCollapse","setMenuCollapse","roleUser","split","menuIconClick","active1","setActive1","active2","setActive2","active3","setActive3","active4","setActive4","active5","setActive5","active6","setActive6","active7","setActive7","active8","setActive8","active9","setActive9","active10","setActive10","active11","setActive11","active12","setActive12","active13","setActive13","active14","setActive14","active15","setActive15","active16","setActive16","active17","setActive17","collapsed","iconShape","active","icon","title","ADD_PROFILE","EDIT_PROFILE","REMOVE_PROFILE","CHANGE_PROFILE_PENDING_EDIT","CLEAR_PROFILE_PENDING_EDIT","REMOVE_PROFILE_ALL","INITIAL_PROFILE","getProfile","ele","profile","addProfile","TopMenuAccount","profiles","useEffect","trackPromise","isShow","setShow","profile_image","id_x","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","href","data-target","ADD_NOTIFY","EDIT_NOTIFY","REMOVE_NOTIFY","CHANGE_NOTIFY_PENDING_EDIT","CLEAR_NOTIFY_PENDING_EDIT","REMOVE_NOTIFY_ALL","INITIAL_NOTIFY","getNotify","notifications","map","index","notification","idx","name","description","time","notify","ADD_USER_READED_NOTIFICATION","EDIT_USER_READED_NOTIFICATION","REMOVE_USER_READED_NOTIFICATION","CHANGE_USER_READED_NOTIFICATION_PENDING_EDIT","CLEAR_USER_READED_NOTIFICATION_PENDING_EDIT","REMOVE_USER_READED_NOTIFICATION_ALL","INITIAL_USER_READED_NOTIFICATION","ADD_USER_NOT_READED_NOTIFICATION","EDIT_USER_NOT_READED_NOTIFICATION","REMOVE_USER_NOT_READED_NOTIFICATION","CHANGE_USER_NOT_READED_NOTIFICATION_PENDING_EDIT","CLEAR_USER_NOT_READED_NOTIFICATION_PENDING_EDIT","REMOVE_USER_NOT_READED_NOTIFICATION_ALL","INITIAL_USER_NOT_READED_NOTIFICATION","getUserReadNotification","user_read_notification","UserReadNotification","userReadNotification","notification_id","user_id","is_read","addUserReadedNotification","addUserNotReadedNotification","ADD_SEMESTER","EDIT_SEMESTER","REMOVE_SEMESTER","CHANGE_SEMESTER_PENDING_EDIT","CLEAR_SEMESTER_PENDING_EDIT","REMOVE_SEMESTER_ALL","INITIAL_SEMESTER","semester","initialSemester","removeSemesterAll","addSemester","editSemester","removeSemester","clearSelectedSemester","putUserReadNotification","xx","TopMenuNotification","notifys","user_read_notifications","parseInt","user_not_readed_notifications","data_not_read","total","item","notification_name","notification_time","notification_desciption","user_readed_notifications","key","routeChange","ADD_COMPLETED","EDIT_COMPLETED","REMOVE_COMPLETED","CHANGE_COMPLETED_PENDING_EDIT","CLEAR_COMPLETED_PENDING_EDIT","REMOVE_COMPLETED_ALL","INITIAL_COMPLETED","ADD_WAITING","EDIT_WAITING","REMOVE_WAITING","CHANGE_WAITING_PENDING_EDIT","CLEAR_WAITING_PENDING_EDIT","REMOVE_WAITING_ALL","INITIAL_WAITING","removeCompletedAll","addCompleted","user_register_join_semester","removeWaitingAll","addWaiting","getUserRegisterJoinSemesterByPayer","user_register_semester","student_id","student_name","link_url","payer_name","course_name","payer_id","price","semester_class_id","getUserRegisterJoinSemesterByStudent","TopMenuCart","user_register_join_semesters","rolePrivilege","waiting","TopMenu","page","root","area","subArea","UPDATE_CURRENT_PATH","updateCurrentPath","TopCard","AnonymousNotificationModificationStatus","class","text","ADD_ANONYMOUS_NOTIFICATION","EDIT_ANONYMOUS_NOTIFICATION","REMOVE_ANONYMOUS_NOTIFICATION","CHANGE_ANONYMOUS_NOTIFICATION_PENDING_EDIT","CLEAR_ANONYMOUS_NOTIFICATION_PENDING_EDIT","REMOVE_ANONYMOUS_NOTIFICATION_ALL","INITIAL_ANONYMOUS_NOTIFICATION","addAnonymousNotification","anonymous_notification","editAnonymousNotification","clearSelectedAnonymousNotification","setModificationStateAnonymousNotification","ADD_ART_AGE","EDIT_ART_AGE","REMOVE_ART_AGE","CHANGE_ART_AGE_PENDING_EDIT","CLEAR_ART_AGE_PENDING_EDIT","REMOVE_ART_AGE_ALL","INITIAL_ART_AGE","addArtAge","art_age","editArtAge","removeArtAge","clearSelectedArtAge","setModificationStateArtAge","SelectKeyValue","getOptions","option","TeachAgeForm","anonymous_notifications","selectedAnonymousNotification","isCreate","modificationState","Create","type_send","isCheck","saveFn","postAnonymousNotification","recipient","subject","msgBody","attachment","None","saveForm","ADD_TIME_SCHEDULE","EDIT_TIME_SCHEDULE","REMOVE_TIME_SCHEDULE","CHANGE_TIME_SCHEDULE_PENDING_EDIT","CLEAR_TIME_SCHEDULE_PENDING_EDIT","REMOVE_TIME_SCHEDULE_ALL","INITIAL_TIME_SCHEDULE","schedule_time_class","removeScheduleTimeClassAll","addScheduleTimeClass","getScheduleTimeClass","schedules","x","Object","values","y","keys","ele_1","ele_2","ele_3","ele_4","class_name","start_time","end_time","Loading","height","width","getTotalMoney","total_money","getTotalTeacher","getTotalParent","getTotalStudent","ADD_COURSE","EDIT_COURSE","REMOVE_COURSE","CHANGE_COURSE_PENDING_EDIT","CLEAR_COURSE_PENDING_EDIT","REMOVE_COURSE_ALL","INITIAL_COURSE","course","addCourse","editCourse","removeCourse","clearSelectedCourse","getTotalCourse","ADD_CONTEST","EDIT_CONTEST","REMOVE_CONTEST","CHANGE_CONTEST_PENDING_EDIT","CLEAR_CONTEST_PENDING_EDIT","REMOVE_CONTEST_ALL","INITIAL_CONTEST","contest","addContest","editContest","removeContest","changeSelectedContest","clearSelectedContest","getTotalContest","UserModificationStatus","Home","promiseInProgress","usePromiseTracker","popup1","setPopup1","onRemovePopup1","numberStudentsCount","id_y","numberParentsCount","id_z","numberTeachersCount","id_k","numberCoursesCount","id_l","numberContestsCount","id_m","parseFloat","schedule_time_classes","undefined","Id","Subject","StartTime","EndTime","IsAllDay","access_token","access_token_decode","refresh_token_decode","exp_access_token_decode","exp","exp_refresh_token_decode","now_time","now","onClose","closeOnDocumentClick","NotificationForm","selectedDate","eventSettings","dataSource","fields","isAllDay","startTime","endTime","startHour","endHour","showWeekend","services","Day","Week","WorkWeek","Month","Agenda","TeacherList","users","teacher_register_quantifications","datas","teachers","paginationSize","pageStartIndex","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","showTotal","totalSize","onSizePerPageChange","sizePerPage","onPageChange","columns","dataField","filter","textFilter","formatter","cell","row","teacher_level","not_approved_now","teacher_id","approveds","onChangeRequest","cursor","onSelect","Edit","Remove","pagination","paginationFactory","paginationProps","paginationTableProps","hover","keyField","filterFactory","ADD_NOTIFICATION","REMOVE_NOTIFICATION","addNotification","getTeacher","email","firstName","lastName","dateOfBirth","sex","phone","address","parents","createTime","postTeacher","getUserById","putTeacher","TeacherForm","selectedUser","roleNames","deleteUser","TeacherImportForm","csvFile","setCsvFile","file","reader","FileReader","onload","str","delim","slice","indexOf","rows","headerx","newArray","reduce","obj","header","i","processCSV","readAsText","accept","files","REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_ALL","INITIAL_TEACHER_REGISTER_QUANTIFICATION_APPROVED","ADD_TEACHER_REGISTER_QUANTIFICATION_APPROVED","EDIT_TEACHER_REGISTER_QUANTIFICATION_APPROVED","REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED","CHANGE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT","CLEAR_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT","REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_ALL","INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED","ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED","EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED","REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED","CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT","CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT","REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_ALL","INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW","ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW","EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW","REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW","CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT","CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT","teacher_register_quantification","initialTeacherRegisterQuatificationApproved","teacher_register_quantification_approved","removeTeacherRegisterQuatificationApprovedAll","addTeacherRegisterQuatificationApproved","changeSelectedTeacherRegisterQuatificationApproved","clearSelectedTeacherRegisterQuatification","initialTeacherRegisterQuatificationNotApproved","teacher_register_quantification_not_approved","removeTeacherRegisterQuatificationNotApprovedAll","addTeacherRegisterQuatificationNotApproved","editTeacherRegisterQuatificationNotApproved","initialTeacherRegisterQuatificationNotApprovedNow","teacher_register_quantification_not_approved_now","removeTeacherRegisterQuatificationNotApprovedNowAll","addTeacherRegisterQuatificationNotApprovedNow","clearSelectedTeacherRegisterNotQuatificationNow","getTeacherRegisterQuantification","teacher_register_qualification","TeacherRegisterQuantification","reviewer_id","teacher_name","course_id","art_age_name","art_level_name","art_type_name","degree_photo_url","ProductModificationStatus","Teacher","numberItemsCount","popup","setPopup","setDatas","onUserRemove","onRemovePopup","cssClass","onFileLoaded","fileInfo","is_check","parserOptions","dynamicTyping","skipEmptyLines","transformHeader","toLowerCase","replace","postTeacher1","lst","ImportFile","ADD_PRODUCT","EDIT_PRODUCT","REMOVE_PRODUCT","CHANGE_PRODUCT_AMOUNT","CHANGE_PRODUCT_PENDING_EDIT","CLEAR_PRODUCT_PENDING_EDIT","changeSelectedProduct","product","clearSelectedProduct","HistoryTeach","productElements","scope","RatingStar","rating","rating_star","getCourse","courses","max_participant","num_of_section","image_url","is_enabled","creator_id","art_type_id","art_level_id","checked_tutoral","art_age_id","create_time","update_time","initialCourse","DetailTeacher","checked","setChecked","products","useLocation","course_ids","onProductSelect","StudentList","students","getStudent","Student","HistoryStudent","userElements","DetailStudent","parent","find","parent_name","onUserSelect","textAlign","margin","backgroundColor","ParentList","getParent","addParent","Parent","HistoryParent","SemesterModificationStatus","DetailParent","NumberInput","max","isNaN","Number","min","getSemester","semesters","strDate_1","strDate_2","number","year","substring","DateInput","disabled","DateInput2","SemesterForm","selectedSemester","setMinutes","getMinutes","getTimezoneOffset","time_now","toISOString","saveUserFn","postSemester","putSemester","SemesterList","LessonModificationStatus","strDate","Semester","searchTerm","setSearchTerm","onSemesterRemove","changeSelectedSemester","deleteSemester","ADD_LESSON","EDIT_LESSON","REMOVE_LESSON","CHANGE_LESSON_PENDING_EDIT","CLEAR_LESSON_PENDING_EDIT","REMOVE_LESSON_ALL","INITIAL_LESSON","lesson","addLesson","editLesson","removeLesson","clearSelectedLesson","getLesson","lesson_times","initialLesson","LessonForm","lessons","selectedLesson","postLesson","putLesson","LessonList","ArtTypeModificationStatus","Lesson","onLessonRemove","changeSelectedLesson","deleteLesson","ADD_ART_TYPE","EDIT_ART_TYPE","REMOVE_ART_TYPE","CHANGE_ART_TYPE_PENDING_EDIT","CLEAR_ART_TYPE_PENDING_EDIT","REMOVE_ART_TYPE_ALL","INITIAL_ART_TYPE","addArtType","art_type","editArtType","removeArtType","clearSelectedArtType","TeachTypeList","art_types","artTypes","ptypeStartIndex","firstPtypeText","prePtypeText","nextPtypeText","lastPtypeText","nextPtypeTitle","prePtypeTitle","firstPtypeTitle","lastPtypeTitle","onSizePerPtypeChange","sizePerPtype","ptype","onPtypeChange","getArtType","artType","initialArtType","TeachTypeForm","ArtLevelModificationStatus","selectedArtType","postArtType","putArtType","ADD_ART_LEVEL","EDIT_ART_LEVEL","REMOVE_ART_LEVEL","CHANGE_ART_LEVEL_PENDING_EDIT","CLEAR_ART_LEVEL_PENDING_EDIT","REMOVE_ART_LEVEL_ALL","INITIAL_ART_LEVEL","addArtLevel","art_level","editArtLevel","removeArtLevel","clearSelectedArtLevel","setModificationStateArtLevel","TeachLevelList","art_levels","artLevels","plevelStartIndex","firstPlevelText","prePlevelText","nextPlevelText","lastPlevelText","nextPlevelTitle","prePlevelTitle","firstPlevelTitle","lastPlevelTitle","onSizePerPlevelChange","sizePerPlevel","plevel","onPlevelChange","getArtLevel","artLevel","initialArtLevel","TeachLevelForm","ArtAgeModificationStatus","selectedArtLevel","postArtLevel","putArtLevel","TeachAgeList","art_ages","artAges","getArtAge","artAge","initialArtAge","selectedArtAge","postArtAge","putArtAge","CourseModificationStatus","Art","checked1","setChecked1","checked2","setChecked2","checked3","setChecked3","numberArtTypeCount","numberArtLevelCount","numberArtAgeCount","popup2","setPopup2","popup3","setPopup3","onArtTypeSelect","changeSelectedArtType","onArtTypeRemove","onArtLevelSelect","changeSelectedArtLevel","onArtLevelRemove","onArtAgeSelect","changeSelectedArtAge","onArtAgeRemove","onRemovePopup2","onRemovePopup3","deleteArtType","deleteArtAge","deleteArtLevel","CourseNomalList","routeEdit","MyClassModificationStatus","Course","numberCourseCount","onCourseRemove1","course_value","changeSelectedCourse","selectedCourse","deleteCourse","ADD_MY_CLASS","EDIT_MY_CLASS","REMOVE_MY_CLASS","CHANGE_MY_CLASS_PENDING_EDIT","CLEAR_MY_CLASS_PENDING_EDIT","REMOVE_MY_CLASS_ALL","INITIAL_MY_CLASS","myclass","clearSelectedMyClass","ClassList","myclasss","myclasses","class_id","routeViewSchedule","myClasses","getMyClass","classes","my_class","security_code","user_register_teach_semester","addMyClass","SemesterClassModificationStatus","ADD_SEMESTER_CLASS","EDIT_SEMESTER_CLASS","REMOVE_SEMESTER_CLASS","CHANGE_SEMESTER_CLASS_PENDING_EDIT","CLEAR_SEMESTER_CLASS_PENDING_EDIT","REMOVE_SEMESTER_CLASS_ALL","INITIAL_SEMESTER_CLASS","addSemesterClass","semester_class","editSemesterClass","clearSelectedSemesterClass","setModificationStateSemesterClass","ClassSemesterList","semester_classes","schedule_list","semesterClasses","element","lesson_time","rowIndex","ADD_SCHEDULE","EDIT_SCHEDULE","REMOVE_SCHEDULE","CHANGE_SCHEDULE_PENDING_EDIT","CLEAR_SCHEDULE_PENDING_EDIT","REMOVE_SCHEDULE_ALL","INITIAL_SCHEDULE","getSchedule","schedule","lesson_time_id","semester_classes_id","date_of_week","initialSchedule","addSchedule","postSchedule","getSemesterClass","class_ele","semester_id","registration_time","registration_expiration_time","semester_name","initialSemesterClass","SelectKeyValueMutiple","SelectKeyValueMutiple2","ClassSemesterForm","semester_classe","selectedSemesterClass","listSemesters","listCourses","lesson_time_list","forEach","list_date_of_week","list_lesson","list_lessons","total_date_of_week","listScheduleItemId","setListScheduleItemId","listLessonId","setListLessonId","res_1","date_of_week_obj","lesson_time_obj","hasFormMutipleValueChanged1","hasFormMutipleValueChanged2","date_of_weeks","schedule_element","postSemesterClass","data_1","putSemesterClass","deleteScheduleBySemesterClass","Array","from","postScheduleClass","getSemesterNext","SelectKeyValueNotField","format","Class","numberSemesterClassesCount","DateObject","set","day","semesterId","setSemesterId","listSemester","onMyClassSelect","changeSelectedMyClass","onSemesterClassSelect","onSemesterClassRemove","hasFormValueChangedNotFiled","a","multiple","plugins","handleScheduleClass","deleteSemesterClass","selectedMyClass","time_schedules","sections","list_link_record","check_active","timeSchedules","start_time_0","end_time_0","hour_start","minus_tart","sercon_start","hour_end","minus_end","sercon_end","start_date","end_date","days","date_now","checkActive","sort","b","section","studentElements","student","ADD_INFORMATION_CLASS","EDIT_INFORMATION_CLASS","REMOVE_INFORMATION_CLASS","CHANGE_INFORMATION_CLASS_PENDING_EDIT","CLEAR_INFORMATION_CLASS_PENDING_EDIT","REMOVE_INFORMATION_CLASS_ALL","INITIAL_INFORMATION_CLASS","removeInformationClassAll","addInformationClass","information_class","removeTimeScheduleAll","addTimeSchedule","time_schedule","getInfoMyClass","teacher","number_section","number_student","ADD_SECTION","EDIT_SECTION","REMOVE_SECTION","CHANGE_SECTION_PENDING_EDIT","CLEAR_SECTION_PENDING_EDIT","REMOVE_SECTION_ALL","INITIAL_SECTION","removeSectionAll","addSection","getSectionByClass","Section","teach_form","recording","initialSection","DetailClass","information_classes","numberItemsCount1","informationClasses","DetailLesson","link_recording","section_id","frameBorder","allow","allowFullScreen","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","responsive","legend","display","ChartBar","getUserRegisterJoinSemester","DoughnutPieCharts","ArcElement","CourseAnalytis","course_reports","data_list","data_name_list","total_register","labels","datasets","borderColor","borderWidth","PointElement","LineElement","ChartLine","report_users","currentYear","getFullYear","ADD_TURNOVER_NOW","EDIT_TURNOVER_NOW","REMOVE_TURNOVER_NOW","CHANGE_TURNOVER_NOW_PENDING_EDIT","CLEAR_TURNOVER_NOW_PENDING_EDIT","REMOVE_TURNOVER_NOW_ALL","INITIAL_TURNOVER_NOW","ADD_TURNOVER_LAST","EDIT_TURNOVER_LAST","REMOVE_TURNOVER_LAST","CHANGE_TURNOVER_LAST_PENDING_EDIT","CLEAR_TURNOVER_LAST_PENDING_EDIT","REMOVE_TURNOVER_LAST_ALL","INITIAL_TURNOVER_LAST","getTurnOverReport","turnover","report_user_register_semester_now","addTurnoverNow","report_user_register_semester_last","addTurnoverLast","ADD_REPORT_USER","EDIT_REPORT_USER","REMOVE_REPORT_USER","CHANGE_REPORT_USER_PENDING_EDIT","CLEAR_REPORT_USER_PENDING_EDIT","REMOVE_REPORT_USER_ALL","INITIAL_REPORT_USER","getReportUser","report_user","ADD_COURSE_REPORT","EDIT_COURSE_REPORT","REMOVE_COURSE_REPORT","CHANGE_COURSE_REPORT_PENDING_EDIT","CLEAR_COURSE_REPORT_PENDING_EDIT","REMOVE_COURSE_REPORT_ALL","INITIAL_COURSE_REPORT","getCourseReport","report_course","report","course_report","TurnoverList","completed","Turnover","turnovers","totalPrice","turnover_now","prev","next","totalUserNew","totalCourse","now_data","last_data","turnover_last","UserAnalytis","REMOVE_REMOVE_LEAVE_ALL","INITIAL_REMOVE_LEAVE","ADD_REMOVE_LEAVE","REMOVE_REMOVE_LEAVE","EDIT_REMOVE_LEAVE","REMOVE_LEAVES_ALL","INITIAL_LEAVES","ADD_LEAVES","EDIT_LEAVES","REMOVE_LEAVES","REMOVE_ACCEPT_LEAVE_ALL","INITIAL_ACCEPT_LEAVE","ADD_ACCEPT_LEAVE","EDIT_ACCEPT_LEAVE","REMOVE_ACCEPT_LEAVE","teacherLeave","removeRemoveTeacherLeaveAll","addRemoveTeacherLeave","teacher_leave","removeAcceptTeacherLeaveAll","addAcceptTeacherLeave","removeLeavesAll","addLeaves","postNotifyDb","postUserReadNotification","putTeacherLeaveStatus","section_number","TeacherRequestList","teacher_leaves","routeChange1","handleTeacherLeave","leaves","getTeacherLeave","substitute_teacher_id","substitute_teacher_name","section_name","TeacherRequest","getTeacherRegisterQuantificationByTeacherId","approved","not_approved","putTeacherRegisterLevelAdmin","RequestConfirmLevelList","degree_photo","info","approvedTeacherLevel","notApprovedTeacherLevel","RequestConfirmLevel","CustomUndo","viewBox","points","d","CustomRedo","Size","Quill","import","whitelist","Font","modules","imageResize","parchment","toolbar","container","handlers","undo","this","quill","redo","delay","maxStack","userOnly","formats","QuillToolbar","defaultValue","ImageResize","Editor","reactQuillRef","useRef","React","current","getEditor","clipboard","dangerouslyPasteHTML","setState","EditorToolbar","ref","theme","getValue","ADD_TUTORIAL_TEMPLATE_PAGE","EDIT_TUTORIAL_TEMPLATE_PAGE","REMOVE_TUTORIAL_TEMPLATE_PAGE","CHANGE_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT","CLEAR_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT","REMOVE_TUTORIAL_TEMPLATE_PAGE_ALL","INITIAL_TUTORIAL_TEMPLATE_PAGE","tutorial_template_page","initialTutorialTemplatePage","removeTutorialTemplatePageAll","getTutorialTemplatePageByTutorialTemplateId","TutorialTemplatePage","tutorial_template_id","addTutorialTemplatePage","postTutorialTemplatePage1","tutorialtemplatepage","ContestModificationStatus","LessonPlan","number_of_sum","id_t","contentTutorialSection","setContentTutorialSection","contentTutorialPage","setContentTutorialPage","currentPage","setCurrentPage","numberSection","setNumberSection","setText","total_page","handleSaveStep","value1","textHtml","setTextHtml","handleNextPage","contentPage","content","handleNextSection","contentSection","teaching_form","value2","tutorial","setHtmlClass1","setHtmlClass2","setValue1","setValue2","error1","setError1","htmlClass1","error2","setError2","htmlClass2","getOptions2","handleBackPage","handleRemove","handleNewPage","validClass1","elementValue1","validClass2","elementValue2","padTo2Digits","num","padStart","formatDate","date","getMonth","getDate","join","getHours","getSeconds","ContestIsOnList","contests","toUTCString","strDate1","strDate2","ContestEndList","ContestNotOnYetList","generationContestSubmission","postGenerationContestSubmissionGrade","getContest","strDate3","total_contest_submission_graded","total_contest_submission","total_register_contest","initialContest","Contest","numberContestEndCount","numberContestOnCount","numberContestNotStartCount","onContestSelectNotOnYetList","onContestSelectOnList","onContestSelectEndList","contest_value","selectedContest","deleteContest","DegreePhoto","Checkbox","ADD_SECTION_TEMPLATE","EDIT_SECTION_TEMPLATE","REMOVE_SECTION_TEMPLATE","CHANGE_SECTION_TEMPLATE_PENDING_EDIT","CLEAR_SECTION_TEMPLATE_PENDING_EDIT","REMOVE_SECTION_TEMPLATE_ALL","INITIAL_SECTION_TEMPLATE","section_template","initialSectionTemplate","removeSectionTemplateAll","addSectionTemplate","setModificationStateSectionTemplate","ADD_TUTORIAL_TEMPLATE","EDIT_TUTORIAL_TEMPLATE","REMOVE_TUTORIAL_TEMPLATE","CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT","CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT","REMOVE_TUTORIAL_TEMPLATE_ALL","INITIAL_TUTORIAL_TEMPLATE","postTutorialTemplate1","postTutorialTemplatePage","getSectionTemplate","SectionTemplate","postCourse","postSectionTemplate1","section_template_id","putCourse","CourseNomalForm","listLevel","listLevels","listMytype","listMytypes","listArtAge","listArtAges","preview","setPreview","setImageAction","url","image","setImage","formData","FormData","append","pictureAsFile","url_image","picturePreview","URL","createObjectURL","postUserGradeContest","putContest","valueTeacher","routeHome","deleteUserGradeContestByContest","contest_id","ReactSelect","selectedOption","setSelectedOption","isMulti","changeValue","getUserGradeContestByContestId","user_grade_contest","teacher_grade_contest","contest_name","initialUserGradeContest","addUserGradeContest","DateInput1","ContestForm","listTeacher","listTeachers","listTeacherGradeContest","user_grade_contests","userGradeContests","listTeacherGradeContests","postContest","setValueTeacher","CourseNomalFormEdit","SelectInput","Account","userRole","url_x","parent_ids","Select","ChangePassword","putPassword","pre_password","new_password","TopStudent","user_gradee_contest_submissions","user_grade_contest_submissions","user_register_semesterElements","userGradeContestSubmissions","score","TopTeacher","contest_submissions","Math","round","contest_gradeds","contest_not_gradeds","user_grade_contestElements","ADD_USER_GRADE_CONTEST_SUBMISSION","EDIT_USER_GRADE_CONTEST_SUBMISSION","REMOVE_USER_GRADE_CONTEST_SUBMISSION","CHANGE_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT","CLEAR_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT","REMOVE_USER_GRADE_CONTEST_SUBMISSION_ALL","INITIAL_USER_GRADE_CONTEST_SUBMISSION","user_grade_contest_submission","removeUserGradeContestSubmissionAll","addUserGradeContestSubmission","getUserGradeContestSubmissionByContestId","UserGradeContestSubmission","contest_submission_id","feedback","ADD_EXERCISE_SUBMISSION_NOT_GRADED","EDIT_EXERCISE_SUBMISSION_NOT_GRADED","REMOVE_EXERCISE_SUBMISSION_NOT_GRADED","CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT","CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT","REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL","INITIAL_EXERCISE_SUBMISSION_NOT_GRADED","ADD_EXERCISE_SUBMISSION_GRADED","EDIT_EXERCISE_SUBMISSION_GRADED","REMOVE_EXERCISE_SUBMISSION_GRADED","CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT","CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT","REMOVE_EXERCISE_SUBMISSION_GRADED_ALL","INITIAL_EXERCISE_SUBMISSION_GRADED","getContestSubmissionByContest","contest_submission","contest_not_graded","addContestNotGraded","contest_graded","addContestGraded","SectionTemplateModificationStatus","ResultContest","scores","toNonAccentVietnamese","SectionTemplateList","section_templates","tutorial_templates","tutorial_template_pages","section_templateElements","sectionTemplates","includes","selectedSectionTemplate","tutorial_template_page_list","tutorialTemplates","tutorialTemplatePages","getSectionTemplateByCourseId","getTutorialTemplate","tutorial_template","TutorialTemplate","initialTutorialTemplate","addTutorialTemplate","getTutorialTemplatePage","SectionTemplates","putTutorialTemplatePage","deleteTutorialTemplatePage","putTutorialTemplatePage1","SectionTemplateForm","list_description","initial_text","id_h","tutorial_name","totalPage","setTotalPage","checkCreateNew","setCheckCreateNew","checkAfterCreate","setCheckAfterCreate","warning","k","handleSave","putSectionTemplate","TeacherRegisterQuantificationModificationStatus","TopCardLevel","stopPropagation","TeacherRegisterQuantificationList","teacherRegisterQuantificationElements","TeacherHome","teacherRegisterQuantifications","numberApprovedCount","numberNotApprovedNowCount","teacherRegisterQuantification","ScheduleForClassList","replaceAll","ScheduleClass","ADD_COURSE_TEACHER_NEW","EDIT_COURSE_TEACHER_NEW","REMOVE_COURSE_TEACHER_NEW","CHANGE_COURSE_TEACHER_NEW_PENDING_EDIT","CLEAR_COURSE_TEACHER_NEW_PENDING_EDIT","REMOVE_COURSE_TEACHER_NEW_ALL","INITIAL_COURSE_TEACHER_NEW","getCourseTeacherNew","course_teacher_new","total_registed","student_registered_id","student_registered_name","initialCourseTeacherNew","addCourseTeacherNew","CourseTeacherList","course_teachers","setElement","setFilter","filter1","setFilter1","filter2","setFilter2","handleFilter","aria-label","aria-hidden","count","CourseTeacher","ADD_TIME_SCHEDULE_TEACHER","EDIT_TIME_SCHEDULE_TEACHER","REMOVE_TIME_SCHEDULE_TEACHER","CHANGE_TIME_SCHEDULE_TEACHER_PENDING_EDIT","CLEAR_TIME_SCHEDULE_TEACHER_PENDING_EDIT","REMOVE_TIME_SCHEDULE_TEACHER_ALL","INITIAL_TIME_SCHEDULE_TEACHER","getScheduleTeacher","time_schedule_teacher","schedule_time","addTimeScheduleTeacher","ScheduleTeacher","time_schedule_teacherss","time_schedule_teachers","timeScheduleTeachers","ADD_REGISTER_SUCCESSFULL_COURSE","EDIT_REGISTER_SUCCESSFULL_COURSE","REMOVE_REGISTER_SUCCESSFULL_COURSE","CHANGE_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT","CLEAR_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT","REMOVE_REGISTER_SUCCESSFULL_COURSE_ALL","INITIAL_REGISTER_SUCCESSFULL_COURSE","ADD_NOT_REGISTER_COURSE","EDIT_NOT_REGISTER_COURSE","REMOVE_NOT_REGISTER_COURSE","CHANGE_NOT_REGISTER_COURSE_PENDING_EDIT","CLEAR_NOT_REGISTER_COURSE_PENDING_EDIT","REMOVE_NOT_REGISTER_COURSE_ALL","INITIAL_NOT_REGISTER_COURSE","removeRegisterSuccessfullCourseAll","addRegisterSuccessfullCourse","getCourseTeacher","register_successfull_courses","semster_class_id","registration_deadline","initialRegisterSuccessfullCourse","not_register_courses","initialNotRegisterCourse","addNotRegisterCourse","CourseTeacherDetail","id_a","description_course","id_c","id_d","id_e","id_f","semester_class_name","id_n","id_nx","handleRegister","postRegisterTeachSemester","dangerouslySetInnerHTML","__html","TeacherLevelForm","teacher_register_not_approved_nows","teacher_register_not_approved","selectedTeacherRegisterQuantification","listCourse","postTeaherLevel","putTeacherRegisterLevel","TeacherLevelList","TeacherLevelNotApprovedNowList","ClassTeacherModificationStatus","TeacherLevel","numberNotApprovedCount","not_approves","onTeacherRegisterQuantificationSelect","TeacherLevelDetail","ADD_DOING_CLASS","EDIT_DOING_CLASS","REMOVE_DOING_CLASS","CHANGE_DOING_CLASS_PENDING_EDIT","CLEAR_DOING_CLASS_PENDING_EDIT","REMOVE_DOING_CLASS_ALL","INITIAL_DOING_CLASS","ADD_DONE_CLASS","EDIT_DONE_CLASS","REMOVE_DONE_CLASS","CHANGE_DONE_CLASS_PENDING_EDIT","CLEAR_DONE_CLASS_PENDING_EDIT","REMOVE_DONE_CLASS_ALL","INITIAL_DONE_CLASS","getClassTeacher","class_teacher","classes_done","classes_doing","total_student","initialDoneClass","addDoneClass","initialDoinglClass","addDoinglClass","ClassTeacherDoingList","class_teachers","class_doing","ClassTeacherEndList","class_done","ClassTeacher","numberClassDoingCount","numberClassDoneCount","onClassTeacherSelect","changeSelectedDoinglClass","NotificationClassTeacher","postNotificationByClass","class_end","parent_id","ClassTeacherDetail","ADD_CONTEST_TEACHER_OPENING","EDIT_CONTEST_TEACHER_OPENING","REMOVE_CONTEST_TEACHER_OPENING","CHANGE_CONTEST_TEACHER_OPENING_PENDING_EDIT","CLEAR_CONTEST_TEACHER_OPENING_PENDING_EDIT","REMOVE_CONTEST_TEACHER_OPENING_ALL","INITIAL_CONTEST_TEACHER_OPENING","ADD_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER","EDIT_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER","REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER","CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT","CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT","REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_ALL","INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER","ADD_CONTEST_TEACHER_END","EDIT_CONTEST_TEACHER_END","REMOVE_CONTEST_TEACHER_END","CHANGE_CONTEST_TEACHER_END_PENDING_EDIT","CLEAR_CONTEST_TEACHER_END_PENDING_EDIT","REMOVE_CONTEST_TEACHER_END_ALL","INITIAL_CONTEST_TEACHER_END","ADD_CONTEST_TEACHER_NOT_OPEN_NOW","EDIT_CONTEST_TEACHER_NOT_OPEN_NOW","REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW","CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT","CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT","REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_ALL","INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW","initialContestTeacherOpening","removeContestTeacherOpeningAll","addContestTeacherOpening","removeContestTeacherNotOpenNowNotTeacherAll","initialContestTeacherEnd","removeContestTeacherEndAll","addContestTeacherEnd","initialContestTeacherNotOpenNow","removeContestTeacherNotOpenNowAll","addContestTeacherNotOpenNow","getContestTeacher","contest_opening","contest_not_open_now_not_teacher","initialContestTeacherNotOpenNowNotTeacher","addContestTeacherNotOpenNowNotTeacher","contest_end","contest_not_open_now","ContestTeacherNotDoingList","contest_teachers","onChangeRoute","contest_teacher","ContestTeacherEndList","ContestTeacherDoingList","ContestTeacher","numberContestOpeningCount","numberContestNotOpenNowCount","ADD_EXERCISE_NOT_SUBMIT","EDIT_EXERCISE_NOT_SUBMIT","REMOVE_EXERCISE_NOT_SUBMIT","REMOVE_EXERCISE_NOT_SUBMIT_ALL","INITIAL_EXERCISE_NOT_SUBMIT","ADD_EXERCISE_SUBMITED_NOT_GRADE","EDIT_EXERCISE_SUBMITED_NOT_GRADE","REMOVE_EXERCISE_SUBMITED_NOT_GRADE","REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL","INITIAL_EXERCISE_SUBMITED_NOT_GRADE","ADD_EXERCISE_SUBMITED_GRADED","EDIT_EXERCISE_SUBMITED_GRADED","REMOVE_EXERCISE_SUBMITED_GRADED","REMOVE_EXERCISE_SUBMITED_GRADED_ALL","INITIAL_EXERCISE_SUBMITED_GRADED","exercise_student","removeExerciseNotSubmitAll","addExerciseNotSubmit","removeExerciseSubmitNotGradeAll","addExerciseSubmitNotGrade","getExerciseForClassStudent","exercise_not_submit","exercise","level_id","exercise_submission_id","time_submit","deadline","level_name","exercise_submitted","getParentById","ADD_STUDENT_LEAVE_NOT_APPROVED_NOW","EDIT_STUDENT_LEAVE_NOT_APPROVED_NOW","REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW","CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT","CLEAR_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT","REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW_ALL","INITIAL_STUDENT_LEAVE_NOT_APPROVED_NOW","ADD_STUDENT_LEAVE_APPROVED","EDIT_STUDENT_LEAVE_APPROVED","REMOVE_STUDENT_LEAVE_APPROVED","REMOVE_STUDENT_LEAVE_APPROVED_ALL","INITIAL_STUDENT_LEAVE_APPROVED","ADD_STUDENT_LEAVE_NOT_APPROVED","EDIT_STUDENT_LEAVE_NOT_APPROVED","REMOVE_STUDENT_LEAVE_NOT_APPROVED","REMOVE_STUDENT_LEAVE_NOT_APPROVED_ALL","INITIAL_STUDENT_LEAVE_NOT_APPROVED","student_leave","removeStudentLeaveNotApprovedNowAll","addStudentLeaveNotApprovedNow","removeStudentLeaveApprovedAll","addStudentLeaveApproved","removeStudentLeaveNotApprovedAll","addStudentLeaveNotApproved","getStudentLeaveByClassAndStudent","ADD_USER_GRADE_EXERCISE_SUBMISSION","EDIT_USER_GRADE_EXERCISE_SUBMISSION","REMOVE_USER_GRADE_EXERCISE_SUBMISSION","CHANGE_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT","CLEAR_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT","REMOVE_USER_GRADE_EXERCISE_SUBMISSION_ALL","INITIAL_USER_GRADE_EXERCISE_SUBMISSION","user_grade_exercise_submission","removeUserGradeExerciseSubmissionAll","addUserGradeExerciseSubmission","getUserGradeExerciseByStudentAndClass","UserGradeExerciseSubmission","exercise_name","ManageStudent","exercise_students","student_leaves","user_grade_exercise_submissions","numberSubmittedCount","exercise_submitted_not_grade","exercise_submitted_graded","numberNotSubmitNowCount","numberStudentLeaveCount","acceptLeaves","list_score_user_grade_exercise","list_name_user_grade_exercise","ExerciseStudentList","ExerciseSectionList","DetailExerciseStudent","image_url_exercise","exercise_submission","removeExerciseNotGradedAll","addExerciseNotGraded","removeExerciseGradedAll","addExerciseGraded","getExerciseSubmissionByClass","exercise_not_graded","exercise_id","exercise_graded","getTeacherLeaveByTeacher","RequestOffSectionForm","selectedTeacherLeave","teacher_leave_id","listSections","postTeacherLeave","classes_id","DetailClassTeacher","tutorial_pages","exercise_submissions","exercise_not_gradeds","onAnonymousNotificationRemove","total_time","postUserGradeExercise","getExerciseSubmissionByExercise","GradeExamTeacher","setCount","setImageUrl","setStudentName","setStudentId","setExerciseSubmissionId","setTimeSubmit","image_url_","student_name_","time_submit_","student_id_","exercise_submission_id_","getUserGradeExerciseByExerciseAndClass","ScoreExamList","ResultGradeExamTeacher","Infinity","class_id_","AnalytisResultGradeExamTeacher","ADD_EXERCISE","EDIT_EXERCISE","REMOVE_EXERCISE","CHANGE_EXERCISE_PENDING_EDIT","CLEAR_EXERCISE_PENDING_EDIT","REMOVE_EXERCISE_ALL","INITIAL_EXERCISE","addExercise","editExercise","getExerciseBySection","Exercise","initialExercise","ExerciseModificationStatus","ADD_EXERCISE_LEVEL","EDIT_EXERCISE_LEVEL","REMOVE_EXERCISE_LEVEL","CHANGE_EXERCISE_LEVEL_PENDING_EDIT","CLEAR_EXERCISE_LEVEL_PENDING_EDIT","REMOVE_EXERCISE_LEVEL_ALL","INITIAL_EXERCISE_LEVEL","getExerciseLevel","exercise_level","ExerciseLevel","weight","addExerciseLevel","getSectionById","ExerciseForm","exercises","exercise_levels","selectedExercise","listExerciseLevel","listExerciseLevels","postExercise","ADD_TUTORIAL_PAGE","EDIT_TUTORIAL_PAGE","REMOVE_TUTORIAL_PAGE","REMOVE_TUTORIAL_PAGE_BY_NUMBER","CHANGE_TUTORIAL_PAGE_PENDING_EDIT","CLEAR_TUTORIAL_PAGE_PENDING_EDIT","REMOVE_TUTORIAL_PAGE_ALL","INITIAL_TUTORIAL_PAGE","tutorial_page","initialTutorialPage","removeTutorialPageAll","addTutorialPage","editTutorialPage","removeTutorialPage","getTutorialPageBySection","TutorialPage","tutorial_id","ADD_TUTORIAL","EDIT_TUTORIAL","REMOVE_TUTORIAL","CHANGE_TUTORIAL_PENDING_EDIT","CLEAR_TUTORIAL_PENDING_EDIT","REMOVE_TUTORIAL_ALL","INITIAL_TUTORIAL","getTutorialBySection","creator_name","addTutorial","putSection","SubmitRecordForm","selectedFile","setSelectedFile","isFilePicked","setIsFilePicked","handleSubmission","url_video","size","lastModifiedDate","toLocaleDateString","SectionTeacher","tutorials","onExerciseRemove","link_jisti","routeChange4","routeChange5","onChangeRoute1","tutorialPages","Create1","routeChange3","getTutorialPageByTutorialId","postUserRegisterTutorial","postUserRegisterTutorialPageToast","user_register_tutorial_id","postUserRegisterTutorialPage","EditSectionTeacher","selectedSection","currentPageOld","setCurrentPageOld","ViewSectionTeacher","TutorialPages","setChangeCount","setChangeCountBack","getStudentLeaveByTeacher","StudentLeaveList","handleStudentLeave","putStudentLeaveStatus","RequestTeacher","numberTeacherRegisterSuccessfullCount","ExamTeacher","exercise_gradeds","numberGradedCount","exercise_description","exercise_description_","exercise_name_","exercise_level_name","exercise_level_name_","StudentLeaveDetail","detail_resson","DetailTeacherRequest","ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW","EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW","REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW","CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT","CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT","REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_ALL","INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW","ADD_USER_REGISTER_TUTORIAL_APPROVED","EDIT_USER_REGISTER_TUTORIAL_APPROVED","REMOVE_USER_REGISTER_TUTORIAL_APPROVED","REMOVE_USER_REGISTER_TUTORIAL_APPROVED_ALL","INITIAL_USER_REGISTER_TUTORIAL_APPROVED","ADD_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE","EDIT_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE","REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE","REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_ALL","INITIAL_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE","ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED","EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED","REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED","REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_ALL","INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED","user_register_tutorial","getUserRegisterTutorial","UserRegisterTutorial","addUserRegisterTutorialApproved","initialUserRegisterTutorialNotApprovedNow","addUserRegisterTutorialNotApprovedNow","initialUserRegisterTutorialApprovedToTutorialTemplate","addUserRegisterTutorialApprovedToTutorialTemplate","initialUserRegisterTutorialNotApproved","addUserRegisterTutorialNotApproved","putUserRegisterTutorial","TutorialEditRequestList","user_register_tutorials","user_register_tutorial_not_approved_nows","approvedTutorial","notApprovedTutorial","UserRegisterTutorialEditRequestList","user_register_tutorial_approveds","selectedUserRegisterTutorial","TutorialEditRequest","numberItemsApprovedCount","ADD_CONTEST_SUBMISSION_TEACHER_NOT_GRADED","EDIT_CONTEST_SUBMISSION_TEACHER_NOT_GRADED","REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED","CHANGE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT","CLEAR_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT","REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_ALL","INITIAL_CONTEST_SUBMISSION_TEACHER_NOT_GRADED","ADD_CONTEST_SUBMISSION_TEACHER_GRADED","EDIT_CONTEST_SUBMISSION_TEACHER_GRADED","REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED","CHANGE_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT","CLEAR_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT","REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED_ALL","INITIAL_CONTEST_SUBMISSION_TEACHER_GRADED","getContestSubmissionByContestAndTeacher","contest_submission_teacher","contest_submission_not_grade","addContestSubmissionNotGrade","contest_submission_grade","addContestSubmissionGrade","ContestDetailTeacher","numberNotGradedCount","contest_description","contest_description_","art_type_contest","art_age_contest","postUserGradeContestSubmission","GradeContestTeacher","setContestSubmissionTeacherId","contest_submission_id_","ScoreContestList","childs","parentElements","teacherElements","getStudentByParent","ResultGradeContestTeacher","AnalytisResultGradeContestTeacher","DetailContestTeacher","NotificationDetail","ADD_NOTIFY_DB","EDIT_NOTIFY_DB","REMOVE_NOTIFY_DB","CHANGE_NOTIFY_DB_PENDING_EDIT","CLEAR_NOTIFY_DB_PENDING_EDIT","REMOVE_NOTIFY_DB_ALL","INITIAL_NOTIFY_DB","getNotifyDb","notificationDb","notify_db","ChildModificationStatus","Notification","notificationDbs","notify_dbs","o","data_readed","ADD_CHILD","EDIT_CHILD","REMOVE_CHILD","CHANGE_CHILD_PENDING_EDIT","CLEAR_CHILD_PENDING_EDIT","REMOVE_CHILD_ALL","INITIAL_CHILD","addChild","child","editChild","AccountChildForm","selectedChild","total_contest","total_course","birthday","postUser","getScheduleTimeByParent","xxas","x_1","y_1","ele_5","ele_6","ele_7","AccountChildList1","xmlns","cx","cy","r","fill","stroke","stroke-width","clip-path","rx","ry","getInforChildByParent","initialChild","ParentHome","numberChildCount","totalMoney","ContentHeader","styled","correct","pickedColor","MotionBlock","motion","div","visible","ColorBlock","checkColor","setVisibility","transition","duration","whileHover","scale","rotate","whileTap","borderRadius","GameSection","ColorGrid","Game","colors","difficulty","handleCorrect","handleGameColors","handleMessage","handleButtonMessage","divColor","correctColor","changeColors","gamesWonArr","averageDifficultyArr","PageBase","ScoreboardContainer","ScoreboardTitle","h1","FlexWrap","StatTitle","p","StatValue","Scoreboard","gamesWon","setGamesWon","averageDifficulty","setAverageDifficulty","wins","avgDifficulty","difficultyMode","mode","arr","v","pop","init","difficultyMap","useMemo","scoreBoardStats","stat","MenuBar","MenuButton","button","DifficultyButton","buttonDifficulty","gameDifficulty","Message","span","GuessColor","setDifficulty","gameColors","setGameColors","setPickedColor","setCorrect","setMessage","playButtonMessage","setPlayButtonMessage","randomColor","floor","random","g","generateRandomColors","useCallback","randomIndex","resetGame","setupLocalStorage","border","ADD_DOING_COURSE","EDIT_DOING_COURSE","REMOVE_DOING_COURSE","CHANGE_DOING_COURSE_PENDING_EDIT","CLEAR_DOING_COURSE_PENDING_EDIT","REMOVE_DOING_COURSE_ALL","INITIAL_DOING_COURSE","ADD_DONE_COURSE","EDIT_DONE_COURSE","REMOVE_DONE_COURSE","CHANGE_DONE_COURSE_PENDING_EDIT","CLEAR_DONE_COURSE_PENDING_EDIT","REMOVE_DONE_COURSE_ALL","INITIAL_DONE_COURSE","getCourseParent","course_parent","courses_registed","courses_not_registed_now","classes_parent","addCourseRegisted","addCourseNotRegistedNow","CourseParent","course_parents","numberParentRegisterSuccessfullCount","ADD_CONTEST_STUDENT_OPENING","EDIT_CONTEST_STUDENT_OPENING","REMOVE_CONTEST_STUDENT_OPENING","CHANGE_CONTEST_STUDENT_OPENING_PENDING_EDIT","CLEAR_CONTEST_STUDENT_OPENING_PENDING_EDIT","REMOVE_CONTEST_STUDENT_OPENING_ALL","INITIAL_CONTEST_STUDENT_OPENING","ADD_CONTEST_STUDENT_NEW","EDIT_CONTEST_STUDENT_NEW","REMOVE_CONTEST_STUDENT_NEW","CHANGE_CONTEST_STUDENT_NEW_PENDING_EDIT","CLEAR_CONTEST_STUDENT_NEW_PENDING_EDIT","REMOVE_CONTEST_STUDENT_NEW_ALL","INITIAL_CONTEST_STUDENT_NEW","ADD_CONTEST_STUDENT_END","EDIT_CONTEST_STUDENT_END","REMOVE_CONTEST_STUDENT_END","CHANGE_CONTEST_STUDENT_END_PENDING_EDIT","CLEAR_CONTEST_STUDENT_END_PENDING_EDIT","REMOVE_CONTEST_STUDENT_END_ALL","INITIAL_CONTEST_STUDENT_END","ADD_CONTEST_STUDENT_NOT_OPEN_NOW","EDIT_CONTEST_STUDENT_NOT_OPEN_NOW","REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW","CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT","CLEAR_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT","REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW_ALL","INITIAL_CONTEST_STUDENT_NOT_OPEN_NOW","initialContestStudentOpening","removeContestStudentOpeningAll","addContestStudentOpening","initialContestStudentNew","removeContestStudentNewAll","addContestStudentNew","initialContestStudentEnd","removeContestStudentEndAll","addContestStudentEnd","initialContestStudentNotOpenNow","removeContestStudentNotOpenNowAll","addContestStudentNotOpenNow","getContestStudentByParent","contest_new","ContestStudentNotOpenNowList","contest_students","handleChange","contest_student","ContestStudentDoingList","ContestStudentEndList","ContestParent","numberNotOpenNowCount","ScheduleParent","getScheduleTimeByChild","child_id","ScheduleStudent","getContestStudentByStudent","ContestStudentDoingList1","ContestStudent","getTotalCourseForStudent","getTotalContestForStudent","StudentHome","total_contest_student","total_course_student","getContestByStudent","getClassesStudent","classes_student","schedule_section_next","user_register_join_semester_id","total_section","total_section_studied","ManageStudyChild","classes_students","user_grade_contest_submisson","final_score_childs","listClasses","list_score_final","list_name_final","final_score","list_score_user_grade_contest","list_name_user_grade_contest","setElement1","datax","datax_c","ScheduleForChild","getUserGradeContestSubmissionByStudent","ADD_FINAL_SCORE_CHILD","EDIT_FINAL_SCORE_CHILD","REMOVE_FINAL_SCORE_CHILD","CHANGE_FINAL_SCORE_CHILD_PENDING_EDIT","CLEAR_FINAL_SCORE_CHILD_PENDING_EDIT","REMOVE_FINAL_SCORE_CHILD_ALL","INITIAL_FINAL_SCORE_CHILD","getFinalScoreChild","final_score_child","final_grade","addFinalScoreChild","ManageChild","putReviewClassByStudent","FormReviewClass","ClassesParentModificationStatus","review_start","review","setRating","student_feedback","review_star","rate","ratingValue","showTooltip","tooltipArray","ManageClassesDone","getClassesParent","ClassDoingList1","classes_parents","ClassDoneList1","ClassParent","onClassesParentSelect","ManageClassesDoing","getSemesterClassNew","ADD_CART","EDIT_CART","REMOVE_CART","INCREASE_QUANTITY","DECREASE_QUANTITY","CHANGE_CART_PENDING_EDIT","CLEAR_CART_PENDING_EDIT","addCart","cart","postUserRegisterJoinSemester","postUserRegisterJoinSemester1","SemesterClassDetail","id_b","idxx","quantity","handleRegister1","ConestDetailStudent","description_contest","postUserRegisterContest","deleteUserRegisterJoinSemester1","CartForm","colSpan","handlePayment","DetailContestStudent","submistions","score_contest","feedback_contest","ADD_ATTENDANCE","EDIT_ATTENDANCE","REMOVE_ATTENDANCE","CHANGE_ATTENDANCE_PENDING_EDIT","CLEAR_ATTENDANCE_PENDING_EDIT","REMOVE_ATTENDANCE_ALL","INITIAL_ATTENDANCE","attendance","initialAttendance","removeAttendanceAll","addAttendance","putAttendance","getAttendance","UserAttendance","AttendanceList","attendances","lessonElements","success","getAttendanceBySection","ClassesStudentModificationStatus","Attendance","ClassStudent","onClassesStudentSelect","ADD_COURSE_NEW","EDIT_COURSE_NEW","REMOVE_COURSE_NEW","CHANGE_COURSE_NEW_PENDING_EDIT","CLEAR_COURSE_NEW_PENDING_EDIT","REMOVE_COURSE_NEW_ALL","INITIAL_COURSE_NEW","getCourseNew","course_new","initialCourseNew","addCourseNew","CourseListNew","StudentLeaveModificationStatus","course_news","DiscoveryStudent","SemesterClassDetailStudent","postStudentLeave","getStudentLeave","studentleaves","selectedStudentLeave","listStudent","listStudents","DetailClassStudent","numberSectionCount","is_active","link_record","tutorial_page_list","routeChange2","routeChangeVIewExerciseSubmission","getExerciseForSectionStudent","SectionStudent","class_students","id_tt","ViewSectionStudent","handleChecked","putAttendanceByUserAndSection","getUserGradeExerciseByExerciseAndStudent","DetailExerciseStudent1","percentage","FormSubmit","postExerciseSubmission","FormSubmitContestStudent","postContestSubmission","ScheduleClassStudent","getExerciseSubmissionById","ViewExerciseSubmission","ADD_NOT_PAYED_NOW","EDIT_NOT_PAYED_NOW","REMOVE_NOT_PAYED_NOW","CHANGE_NOT_PAYED_NOW_PENDING_EDIT","CLEAR_NOT_PAYED_NOW_PENDING_EDIT","REMOVE_NOT_PAYED_NOW_ALL","INITIAL_NOT_PAYED_NOW","ADD_PAYED","EDIT_PAYED","REMOVE_PAYED","REMOVE_PAYED_ALL","INITIAL_PAYED","ADD_NOT_PAYED","EDIT_NOT_PAYED","REMOVE_NOT_PAYED","REMOVE_NOT_PAYED_ALL","INITIAL_NOT_PAYED","getSemesterClassStudent","semester_class_student","addSemesterClassStudentPayed","addSemesterClassStudentNotPayed","addSemesterClassStudentNotPayedNow","SemesterClassListNew","payed","not_payed","not_payed_now","SemesterClassStudentNew","getInfoFinalCourse","ADD_CLASS_HAS_REGISTER_JOIN_SEMESTER","EDIT_CLASS_HAS_REGISTER_JOIN_SEMESTER","REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER","CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT","CLEAR_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT","REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER_ALL","INITIAL_CLASS_HAS_REGISTER_JOIN_SEMESTER","getInforClassHasRegisterJoinSemester","class_has_register_join_semester","teacher_feedback","addClassHasRegisterJoinSemester","ReivewClassDone","class_has_register_join_semesters","ExerciseSectionList1","ExerciseStudentList1","ReviewStart","getSemesterClassByParentCourse","semester_class_parent","addSemesterClassParentPayed","addSemesterClassParentNotPayed","addSemesterClassParentNotPayedNow","SemesterClassNewList","elex","SemesterClassParentNew","TopCardSemesterClassTeacher","SemesterClassList","semester_class_teacher","semester_class_teachers","teacherRegisterQuantificationElements1","ADD_SEMESTER_CLASS_TEACHER","EDIT_SEMESTER_CLASS_TEACHER","REMOVE_SEMESTER_CLASS_TEACHER","CHANGE_SEMESTER_CLASS_TEACHER_PENDING_EDIT","CLEAR_SEMESTER_CLASS_TEACHER_PENDING_EDIT","REMOVE_SEMESTER_CLASS_TEACHER_ALL","INITIAL_SEMESTER_CLASS_TEACHER","getSemesterClassNewByTeacherCourse","addSemesterClassTeacher","SemesterClassTeacherNew","getInfoMyClassTeacher","ClassTeacherEndDetail","ReviewStudent","putClassHasRegisterJoinSemesterTeacher","ManageStudentEnd","ADD_COURSE_PARENT_NEW","EDIT_COURSE_PARENT_NEW","REMOVE_COURSE_PARENT_NEW","CHANGE_COURSE_PARENT_NEW_PENDING_EDIT","CLEAR_COURSE_PARENT_NEW_PENDING_EDIT","REMOVE_COURSE_PARENT_NEW_ALL","INITIAL_COURSE_PARENT_NEW","getCourseParentNew","course_parent_new","initialCourseParentNew","addCourseParentNew","CourseNewList","course_parent_news","DiscoveryParent","CourseNewListTest","ADD_CONTEST_PARENT_NEW","EDIT_CONTEST_PARENT_NEW","REMOVE_CONTEST_PARENT_NEW","CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT","CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT","REMOVE_CONTEST_PARENT_NEW_ALL","INITIAL_CONTEST_PARENT_NEW","getContestParentNew","contest_parent_new","initialContestParentNew","addContestParentNew","ContestNewListTest","contest_parent_news","DiscoveryParentContest","TeacherLeaveList","updateStatusTeacherLeave","RequestTeacher1","numberTeacherNotRegisterCount","DiscoveryStudentContest","GradeExamTeacherEle","image_url_exercise_submission","ViewExerciseTeacherStudent","id_ta","score_exercise","id_tb","Routers","LeftMenu","CourseStudent","fontSize","aria-controls","marginRight","fontWeight","Footer","LandingPage","marginLeft","marginTop","ForgotPassword","postResetPassword","UpdatePassword","postSavePassword","newPassword","RegisterForm","postRegister","PaymentSuccessfull","queryString","location","search","URLSearchParams","get","postStatusUserRegisterJoinSemester","App","Boolean","match","initialState","selectedProduct","productsReducer","action","foundIndex","findIndex","pr","notificationReducer","admins","userReducer","ADD_ORDER","orders","orderReducer","order","accountReducer","semestersReducer","lessonsReducer","ScheduleModificationStatus","selectedSchedule","schedulesReducer","ScheduleItemModificationStatus","ADD_SCHEDULE_ITEM","EDIT_SCHEDULE_ITEM","REMOVE_SCHEDULE_ITEM","CHANGE_SCHEDULE_ITEM_PENDING_EDIT","CLEAR_SCHEDULE_ITEM_PENDING_EDIT","REMOVE_SCHEDULE_ITEM_ALL","INITIAL_SCHEDULE_ITEM","selectedScheduleItem","schedule_items","schedule_itemsReducer","schedule_item","artTypesReducer","artLevelsReducer","artAgesReducer","coursesReducer","contestsReducer","sectionTemplatesReducer","TutorialTemplateModificationStatus","selectedTutorialTemplate","tutorialTemplatesReducer","UserGradeContestModificationStatus","selectedUserGradeContest","userGradeContestsReducer","TutorialTemplatePageModificationStatus","selectedTutorialTemplatePage","tutorialTemplatePagesReducer","TeacherLeaveModificationStatus","removeLeaves","teacherLeaveReducer","leavess","accept_leaves","remove_leaves","studentLeaveReducer","myClassesReducer","teacher_register_quantificationsReducer","InformationClassModificationStatus","not_approveds","selectedInformationClass","informationClassesReducer","TimeScheduleModificationStatus","selectedTimeSchedule","time_schedulesReducer","CourseTeacherModificationStatus","selectedCourseTeacher","courseTeachersReducer","TimeScheduleTeacherModificationStatus","selectedTimeScheduleTeacher","time_schedule_teachersReducer","selectedClassTeacher","classTeachersReducer","ContestTeacherModificationStatus","selectedContestTeacher","contestTeachersReducer","semesterClassesReducer","anonymousNotificationsReducer","SectionModificationStatus","sectionsReducer","TutorialPageModificationStatus","selectedTutorialPage","tutorialPagesReducer","exercisesReducer","ExerciseSubmissionModificationStatus","selectedExerciseSubmission","exerciseSubmissionsReducer","TurnoverModificationStatus","selectedTurnover","turnoversReducer","ReportUserModificationStatus","selectedReportUser","report_usersReducer","CourseReportModificationStatus","selectedCourseReport","course_reportsReducer","ExerciseLevelModificationStatus","selectedExerciseLevel","exercise_levelsReducer","UserGradeExerciseSubmissionModificationStatus","selectedUserGradeExerciseSubmission","user_grade_exercise_submissionsReducer","ExerciseStudentModificationStatus","selectedExerciseStudent","exerciseStudentReducer","TutorialModificationStatus","exercise_not_submits","accept_exercise_not_submit","remove_exercise_not_submit","selectedTutorial","UserGradeContestSubmissionModificationStatus","selectedUserGradeContestSubmission","userGradeContestSubmissionsReducer","UserRegisterTutorialPageModificationStatus","ADD_USER_REGISTER_JOIN_SEMESTER","EDIT_USER_REGISTER_JOIN_SEMESTER","REMOVE_USER_REGISTER_JOIN_SEMESTER","CHANGE_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT","CLEAR_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT","REMOVE_USER_REGISTER_JOIN_SEMESTER_ALL","INITIAL_USER_REGISTER_JOIN_SEMESTER","selectedUserRegisterTutorialPage","user_register_tutorial_pages","user_register_tutorial_pagesReducer","UserRegisterTutorialModificationStatus","user_register_tutorial_page","user_register_tutorial_not_approveds","user_register_tutorial_approved_to_tutorial_templates","userRegisterTutorialReducer","ContestSubmissionModificationStatus","selectedContestSubmission","contestSubmissionsReducer","ScheduleTimeClassModificationStatus","selectedScheduleTimeClass","schedule_time_classsReducer","NotifyDbModificationStatus","schedule_time_classs","selectedNotifyDb","notify_dbsReducer","UserReadNotificationModificationStatus","selectedUserReadNotification","userReadNotificationsReducer","NotifyModificationStatus","selectedNotify","notifysReducer","selectedClassesStudent","classesStudentsReducer","selectedClassesParent","classesParentsReducer","CourseParentModificationStatus","selectedCourseParent","courseParentsReducer","ContestStudentModificationStatus","selectedContestStudent","contestStudentsReducer","CartModificationStatus","selectedCart","carts","cartReducer","AttendanceModificationStatus","selectedAttendance","attendancesReducer","ProfileModificationStatus","selectedProfile","profilesReducer","UserRegisterJoinSemesterModificationStatus","selectedUserRegisterJoinSemester","user_register_join_semestersReducer","CourseStudentModificationStatus","selectedCourseStudent","courseStudentsReducer","CourseNewModificationStatus","course_student","selectedCourseNew","course_newsReducer","SemesterClassStudentModificationStatus","selectedSemesterClassStudent","semesterClassStudentReducer","ClassHasRegisterJoinSemesterModificationStatus","accept_not_payed_now","remove_not_payed_now","selectedClassHasRegisterJoinSemester","class_has_register_join_semestersReducer","CourseParentNewModificationStatus","selectedCourseParentNew","course_parent_newsReducer","SemesterClassParentModificationStatus","selectedSemesterClassParent","semesterClassParentReducer","ContestParentNewModificationStatus","selectedContestParentNew","contest_parent_newsReducer","CourseTeacherNewModificationStatus","selectedCourseTeacherNew","course_teacher_newsReducer","SemesterClassTeacherModificationStatus","selectedSemesterClassTeacher","semester_class_teachersReducer","ContestSubmissionTeacherModificationStatus","selectedContestSubmissionTeacher","contestSubmissionTeachersReducer","childsReducer","FinalScoreChildModificationStatus","selectedFinalScoreChild","final_score_childsReducer","rootReducers","combineReducers","exerciseStudentsReducer","tutorialsReducer","classes_studentsReducer","course_students","store","createStore","applyMiddleware","thunkMiddleware","subscribe","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+eAAA,2DAEO,SAASA,EAASC,EAAaC,GAGlC,IAGIC,EAHc,oBAGY,IAAIC,MAAOC,UACrCC,EAAUH,EAEVI,EAAS,wEAA0EL,EAAIM,WAE3FC,QAAQC,IAAI,SAAUH,GACtB,IAAII,EAAc,iDAAmDT,EAAIM,WAQrEI,EAAe,4DAA0FL,EAAS,YAAcD,EAAU,qEAA8EK,EAAc,cAAgBR,EAAY,6BAEtQM,QAAQC,IAAI,qDACZD,QAAQC,IAAIE,GACZ,IAAIC,EAAYC,aAAkB,SAnBlB,oCAoBXC,OAAOH,GACPI,OAAO,OACZP,QAAQC,IAAI,iDACZD,QAAQC,IAAIG,GAGZ,IAAMI,EAAcC,KAAKC,UAAU,CAC/BC,YA7Bc,mBA8BdC,UA7BY,mBA8BZlB,UAAWA,EACXmB,OArBS,IAsBThB,QAASA,EACTiB,UA7BY,gBA8BZZ,YAAaA,EACbJ,OAAQA,EACRiB,UAxBY,GAyBZC,YA1Bc,gBA2BdZ,UAAWA,EACXa,KAAM,OAIJC,EAAQC,EAAQ,KAChBC,EAAU,CACZC,SAAU,uBACVC,KAAM,IACNC,KAAM,yBACNC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,QAAW,QACX,iBAAkBC,EAAOC,WAAWnB,KAItCoB,EAAMV,EAAMW,QAAQT,GAAS,SAAAU,GAC/B9B,QAAQC,IAAR,kBAAuB6B,EAAIC,aAC3B/B,QAAQC,IAAR,mBAAwBQ,KAAKC,UAAUoB,EAAIL,WAC3CK,EAAIE,YAAY,QAChBF,EAAIG,GAAG,QAAQ,SAACC,GACZlC,QAAQC,IAAI,UACZD,QAAQC,IAAIiC,GACZlC,QAAQC,IAAI,YACZkC,OAAOC,KAAK3B,KAAK4B,MAAMH,GAAMI,OAAQ,UACrCtC,QAAQC,IAAIQ,KAAK4B,MAAMH,GAAMI,WAEjCR,EAAIG,GAAG,OAAO,WACVjC,QAAQC,IAAI,mCAIpB2B,EAAIK,GAAG,SAAS,SAACM,GACbvC,QAAQC,IAAR,gCAAqCsC,EAAEC,aAG3CxC,QAAQC,IAAI,eACZ2B,EAAIa,MAAMjC,GACVoB,EAAIc,S,mvCCpCOC,MA7Cf,SAAmBC,GAAqC,IAAD,EACvBC,oBAAS,GADc,mBAC5CC,EAD4C,KACnCC,EADmC,OAEzBF,mBAAS,IAFgB,mBAE5CG,EAF4C,KAErCC,EAFqC,OAGjBJ,mBAAS,IAHQ,mBAG5CK,EAH4C,KAGjCC,EAHiC,OAI9BN,mBAAS,IAArBO,EAJ0C,oBA0BnD,OACI,6BACI,2BAAOC,QAAST,EAAMU,GAAGvD,YAAa6C,EAAMW,OAC5C,2BACIC,MAAOZ,EAAMY,MACbC,KAAMb,EAAMa,KACZC,SAzBZ,SAAwBC,GAA6C,IAAD,EACxB,CAAC,GAAI,GAAIA,EAAMC,OAAOJ,OAAzDR,EAD2D,KACpDa,EADoD,KACxCC,EADwC,QAGxCA,GAAgBlB,EAAMmB,SAC1C,CAAC,wBAAyB,cAAgB,CAAC,GAAI,YAJa,mBAMhE,GAHCf,EAH+D,KAGxDa,EAHwD,MAM3Db,EAAO,CAAC,IAAD,EACeJ,EAAMoB,WAAaF,GAAgBA,EAAaG,OAAUrB,EAAMoB,UACvF,CAAC,8BAAD,OAA+BpB,EAAMoB,UAArC,eAA6D,cAAgB,CAAC,GAAI,YAF1E,mBACPhB,EADO,KACAa,EADA,KAKZjB,EAAMc,SAAS,CAAEF,MAAOM,EAAcd,MAAOA,EAAOF,QAASA,EAASoB,MAAOtB,EAAMsB,QAEnFnB,GAAS,GACTE,EAASD,GACTG,EAAaU,GACbT,EAASU,IAUDK,UAAS,uBAAkBvB,EAAMwB,WAAxB,YAAsClB,GAC/CI,GAAE,aAAQV,EAAMW,OAChBc,YAAazB,EAAMyB,cACtBrB,EACG,yBAAKmB,UAAU,oBACVnB,GACI,O,iBC1CZsB,EAAiB,SACjBC,EAAkB,UAMxB,SAASC,IACZ,MAAO,CAAEf,KAAMc,G,WCNNE,EAA6B,qBAC7BC,EAA6B,qBAC7BC,EAA2B,mBAG3BC,EAAoB,YACpBC,EAAqB,aACrBC,EAAuB,eAGvBC,EAA6B,qBAC7BC,EAA0B,kBAC1BC,EAAsB,cACtBC,EAAyB,iBACzBC,EAAuB,eAIvBC,EAA6B,qBAC7BC,EAA0B,kBAC1BC,EAAsB,cACtBC,EAAuB,eACvBC,EAAyB,iBAGzBC,EAA4B,oBAC5BC,EAAyB,iBACzBC,EAAqB,aACrBC,EAAsB,cACtBC,EAAwB,gBAExBC,EAAiC,yBACjCC,EAAmC,2BACnCC,EAAkC,0BAExC,SAASC,IACZ,MAAO,CACHxC,KAAMgB,GAIP,SAASyB,EAAiBC,GAC7B,MAAO,CACH1C,KAAMiB,EACNyB,QAID,SAASC,EAAepD,GAC3B,MAAO,CACHS,KAAMkB,EACN0B,QAAS,CAAErD,UAIZ,SAASsD,EAAeH,GAC3B,MAAO,CAAE1C,KAAMuB,EAAiBmB,KAAMA,GAGnC,SAASI,IACZ,MAAO,CAAE9C,KAAMsB,GAGZ,SAASyB,EAAeL,GAC3B,MAAO,CAAE1C,KAAM4B,EAAiBc,KAAMA,GAGnC,SAASM,IACZ,MAAO,CAAEhD,KAAM2B,GAGZ,SAASsB,EAAcP,GAC1B,MAAO,CAAE1C,KAAMiC,EAAgBS,KAAMA,GAGlC,SAASQ,IACZ,MAAO,CAAElD,KAAMgC,GAeZ,SAASmB,EAAWT,GACvB,MAAO,CAAE1C,KAAMwB,EAAakB,KAAMA,GAG/B,SAASU,EAAYV,GACxB,MAAO,CAAE1C,KAAM0B,EAAcgB,KAAMA,GAOhC,SAASW,EAAWX,GACvB,MAAO,CAAE1C,KAAM6B,EAAaa,KAAMA,GAuB/B,SAASY,GAAmBZ,GAC/B,MAAO,CAAE1C,KAAMsC,EAA0BI,KAAMA,GAG5C,SAASa,KACZ,MAAO,CAAEvD,KAAMuC,GAGZ,SAASiB,GAAqBzD,GACjC,MAAO,CAAEC,KAAMqC,EAAwBtC,MAAOA,GCvI3C,SAAS0D,KACZ,IAAIC,EAAgBC,aAAaC,QAAQ,iBAEzC,OAAO,SAACC,GACJC,MAAM,GAAD,OACMC,+BADN,iBACoD,CAC7ChG,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBS,KAAMzB,KAAKC,UAAU,CACjB,aAAeyG,MAI1BM,MAAM,SAAAC,GACH,IAAKA,EAASC,GAAI,CACd,GAAwB,MAApBD,EAASE,OAeT,MAAMC,MAAMH,EAASI,YAdrB,IAAIxE,EAAK8D,aAAaC,QAAQ,MAC9BC,EAASS,GAAczE,EAAI,CACvBsE,OAAQ,QAEZR,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,KAMjB,OAAOkD,EAASO,UAEnBR,MAAM,SAAAS,GACHd,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAae,QAAQ,eAAgBD,EAAKE,aAC1ChB,aAAae,QAAQ,gBAAiBD,EAAKG,iBAE9CC,OAAM,SAAAtF,GACHhD,QAAQC,IAAI,aC5CrB,SAAS8H,GAAczE,EAAS4E,GACnC,IAAIK,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,KACTsB,MAAM,GAAD,OACMC,+BADN,wBACmDlE,GAAM,CAClD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASS,GAAczE,EAAG4E,OAUrCT,MAAM,SAAAe,GACHxI,QAAQC,IAAIuI,GACZxI,QAAQC,IAAIqD,GACZgE,EAASpB,EAAiBgC,OAE7BI,OAAM,SAAAtF,GACHsE,EAASlB,EAAepD,IACxBhD,QAAQC,IAAI,aCpCrB,SAASwI,GAAQC,EAAkBC,EAAkBC,EAAsBtF,GAE9E,OAAO,SAACgE,GACJC,MAAM,GAAD,OACEC,+BADF,SACwC,CACzChG,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkC+F,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAU,CACjB,SAAYgI,EACZ,SAAYC,MAIflB,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAME,MAAMH,EAASI,YAEzB,OAAOJ,EAASO,UAEnBR,MAAK,SAAAS,GACFd,aAAayB,QACbzB,aAAae,QAAQ,eAAgBD,EAAKE,aAC1ChB,aAAae,QAAQ,gBAAiBD,EAAKG,cAC3CjB,aAAae,QAAQ,WAAYO,GACjC,IAAMI,EAAgBZ,EAAKE,YACrBW,EAAeC,YAAWF,GAChC9I,QAAQC,IAAI8I,GACZ3B,aAAae,QAAQ,iBAAkBY,EAAQE,gBAC/C7B,aAAae,QAAQ,KAAMY,EAAQzF,IACnC8D,aAAae,QAAQ,eAAgBY,EAAQG,mBAC7C5B,EJpCT,SAAeoB,GAClB,MAAO,CAAEjF,KAAMa,EAAQoE,SAAUA,GImCZS,CAAMT,IACfU,IAAM9I,OAAOgD,EAAI,CAAE+F,OAAQ,4CAAwB5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACtIC,YAAW,WACPf,GAAgB,KACjB,KACH,IAAIgB,EAAcC,UAAUzH,KAAK,8BAA+B,GAChEwH,EAAYE,QAAU,WAClB9J,QAAQgD,MAAM,QAAS4G,EAAY5G,QAGvC4G,EAAYG,UAAY,WACpB,IAAIC,EAAKJ,EAAYK,OACrBD,EAAGE,gBAAkB,WACjBF,EAAGG,QACHC,MAAM,kDAGVpK,QAAQC,IAAI+J,GACZ,IAGIK,EAHQL,EAAGM,YAAY,2BAA4B,aACrCC,YAAY,4BAEZC,SAElBH,EAAMP,QAAU,WACZ9J,QAAQgD,MAAM,QAAS4G,EAAY5G,QAGvCqH,EAAMN,UAAY,SAACpG,GACf,GAAKA,EAAMC,OAAOqG,OAEX,CACHjK,QAAQC,IAAI0D,EAAMC,OAAOqG,QACzB,IAAIQ,EAAe9G,EAAMC,OAAOqG,OAAO,GACvC3C,EAASS,GAAcX,aAAaC,QAAQ,MAAO,CAC/CO,OAAQ6C,EAAa3B,cALzB9I,QAAQC,IAAR,mDAWfqI,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOgD,EAAI,CAAE+F,OAAQ,qDAA8B5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,U,qOCtE1J,IA6HegB,GA7HS,WACtB,IAAMpD,EAA0BqD,cAC1BC,EAAUC,cAFY,EAIMhI,mBAAS,CACzC6F,SAAU,CAAE1F,MAAO,GAAIQ,MAAO,IAC9BmF,SAAU,CAAE3F,MAAO,GAAIQ,MAAO,MANJ,mBAIrBsH,EAJqB,KAIVC,EAJU,KAS5B,SAASnC,EAAgBpF,IACT,IAAVA,GACFoH,EAAQI,KAAK,KAYjB,SAASC,EAAoBC,GAC3BH,E,2VAAa,CAAD,GAAMD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UAYjF,SAAS2H,IACP,OAAQL,EAAUpC,SAAS1F,OAAS8H,EAAUnC,SAAS3F,QACjD8H,EAAUpC,SAASlF,QAAUsH,EAAUnC,SAASnF,MAYxD,OAEE,yBAAKW,UAAU,mBAAmBb,GAAG,cACnC,yBAAKa,UAAU,8BACb,yBAAKA,UAAU,gCACb,wBAAIb,GAAG,YAAY8H,QATP,WAClBR,EAAQI,KAAK,mBAQP,iBAGJ,kBAAC,IAAD,MACA,yBAAK7G,UAAU,8BACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yCAAyCb,GAAG,oBACzD,yBAAK+H,IAAI,yFAAyFC,IAAI,iBAExG,yBAAKnH,UAAU,sBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,yBAAd,6BAEF,0BAAMA,UAAU,OAAOoH,SA7CzC,SAAgBhJ,GAEd,GADAA,EAAEiJ,kBACCL,IAAH,CACA,IAAM7H,EAAK8F,IAAMqC,QAAQ,0EAA2C,CAClElC,SAAUH,IAAMI,SAASC,aAE3BnC,EAASmB,GAAQqC,EAAUpC,SAASlF,MAAOsH,EAAUnC,SAASnF,MAAOoF,EAAiBtF,OAwCpE,yBAAKa,UAAU,cAEb,kBAAC,EAAD,CAAWb,GAAG,iBACZY,MAAM,WACNV,MAAOsH,EAAUpC,SAASlF,MAC1BE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,kCACNc,YAAY,MAEhB,yBAAKF,UAAU,cACb,kBAAC,EAAD,CAAWb,GAAG,iBACZY,MAAM,WACNV,MAAOsH,EAAUnC,SAASnF,MAC1BE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXP,KAAK,WACLF,MAAM,qBACNc,YAAY,MAEhB,yBAAKF,UAAU,cACb,yBAAKA,UAAU,wCACb,2BAAOV,KAAK,WAAWU,UAAU,uBAAuBb,GAAG,gBAC3D,2BAAOa,UAAU,uBACfd,QAAQ,eADV,iCAIJ,4BACEc,UAAS,6CA7DNgH,IACN,WAAa,IA6DV1H,KAAK,UAFP,6BAMF,yBAAKU,UAAU,sCACb,uBAAGA,UAAU,OAAOuH,MAAO,CAACC,MAAO,WAAYP,QAAS,WAzF1ER,EAAQI,KAAK,sBAyFK,gCAEF,yBAAK7G,UAAU,sCACb,0EAA0B,0BAAMuH,MAAO,CAACC,MAAO,YAAY,0BAAMxH,UAAU,OAAOuH,MAAO,CAACC,MAAO,WAAYP,QAAS,WAhGtIR,EAAQI,KAAK,eAgG8D,oC,UCnH1E,SAASY,GAAT,GAAuE,IAA/CC,EAA8C,EAA9CA,SAAaC,EAAiC,6BAIzE,OAFAC,aAAY,SAACC,GAAD,OAAuBA,EAAMC,WAGrC,kBAAC,IAAD,iBACQH,EADR,CAEIzC,OAAQ,kBACJjC,aAAaC,QAAQ,YACjBwE,EACA,kBAAC,IAAD,CACJK,GAAI,CACAC,SAAU,e,yGC0+BfC,I,cAr9BA,WAAM,MAGqBvJ,oBAAS,GAH9B,mBAGZwJ,EAHY,KAGEC,EAHF,KAKfrD,EAAiB7B,aAAaC,QAAQ,kBAEtCkF,EAAW,GACQ,OAAnBtD,IAEAsD,EADgBtD,EAAeuD,MAAM,KACZ,IAI7B,IAAMC,EAAgB,WAELH,GAAfD,IAhBiB,EAmBWxJ,oBAAS,GAnBpB,mBAmBZ6J,EAnBY,KAmBHC,EAnBG,OAoBW9J,oBAAS,GApBpB,mBAoBZ+J,EApBY,KAoBHC,EApBG,OAqBWhK,oBAAS,GArBpB,mBAqBZiK,EArBY,KAqBHC,EArBG,OAsBWlK,oBAAS,GAtBpB,mBAsBZmK,EAtBY,KAsBHC,EAtBG,OAuBWpK,oBAAS,GAvBpB,mBAuBZqK,EAvBY,KAuBHC,EAvBG,OAwBWtK,oBAAS,GAxBpB,mBAwBZuK,EAxBY,KAwBHC,EAxBG,OAyBWxK,oBAAS,GAzBpB,mBAyBZyK,EAzBY,KAyBHC,EAzBG,OA0BW1K,oBAAS,GA1BpB,mBA0BZ2K,EA1BY,KA0BHC,EA1BG,OA2BW5K,oBAAS,GA3BpB,mBA2BZ6K,EA3BY,KA2BHC,EA3BG,OA4Ba9K,oBAAS,GA5BtB,mBA4BZ+K,EA5BY,KA4BFC,EA5BE,OA6BahL,oBAAS,GA7BtB,mBA6BZiL,EA7BY,KA6BFC,GA7BE,QA8BalL,oBAAS,GA9BtB,qBA8BZmL,GA9BY,MA8BFC,GA9BE,SA+BapL,oBAAS,GA/BtB,qBA+BZqL,GA/BY,MA+BFC,GA/BE,SAgCatL,oBAAS,GAhCtB,qBAgCZuL,GAhCY,MAgCFC,GAhCE,SAiCaxL,oBAAS,GAjCtB,qBAiCZyL,GAjCY,MAiCFC,GAjCE,SAkCa1L,oBAAS,GAlCtB,qBAkCZ2L,GAlCY,MAkCFC,GAlCE,SAmCa5L,oBAAS,GAnCtB,qBAmCZ6L,GAnCY,MAmCFC,GAnCE,MAqCnB,MAAiB,eAAbpC,EAEA,oCACE,yBAAKjJ,GAAG,eAAea,UAAU,gFAE/B,kBAAC,KAAD,CAAYyK,UAAWvC,GACrB,kBAAC,KAAD,KACE,yBAAKlI,UAAU,YAEb,2BAAIkI,EAAe,GAAK,gBAE1B,yBAAKlI,UAAU,YAAYiH,QAASqB,GAEjCJ,EACC,kBAAC,KAAD,MAEA,kBAAC,KAAD,QAIN,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAMwC,UAAU,UACd,kBAAC,KAAD,CAAUC,OAAQpC,EAASqC,KAAM,kBAAC,KAAD,OAC/B,kBAAC,IAAD,CAAM7C,GAAE,QAAW/H,UAAWuI,EAAU,cAAgB,aAActB,QAAS,YAC7D,IAAZsB,IACFC,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GAEXE,GAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,MAnBhB,mBAyBF,kBAAC,KAAD,CAASG,OAAQlC,EAASmC,KAAM,kBAAC,KAAD,MAAYC,MAAM,kBAAUrD,MAAM,UAAUxH,UAAWyI,EAAU,cAAgB,cAC/G,kBAAC,KAAD,CAAUmC,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM5K,UAAWuJ,EAAU,uBAAyB,2BAA4BxB,GAAE,WAAcd,QAAS,YACvF,IAAZwB,IACFD,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXQ,GAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,KAEE,IAAZjB,IACFf,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GAEXE,GAAW,GACXE,GAAW,GACXE,GAAW,GAEXE,GAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,MAGd,qDAGJ,kBAAC,KAAD,CAAUI,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM5K,UAAWqJ,EAAU,uBAAyB,2BAA4BtB,GAAE,SAAYd,QAAS,YACrF,IAAZwB,IACFD,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GAEXE,GAAW,GACXE,GAAW,GACXE,GAAW,GAEXE,GAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,KAEE,IAAZnB,IACFb,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GAEXE,GAAW,GACXE,GAAW,GACXE,GAAW,GAEXE,GAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,MAGd,6CAGJ,kBAAC,KAAD,CAAUI,KAAM,kBAAC,KAAD,MAAcD,OAAQlC,GACpC,kBAAC,IAAD,CAAMV,GAAE,YAAe/H,UAAWmJ,EAAU,uBAAyB,2BAA4BlC,QAAS,YACxF,IAAZwB,IAEFD,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GAEXE,GAAW,GACXE,GAAW,GACXE,GAAW,GAEXE,GAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,KAEE,IAAZrB,IACFX,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GAEXE,GAAW,GACXE,GAAW,GACXE,GAAW,GAEXE,GAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,MAGd,mDAIN,kBAAC,KAAD,CAASG,OAAQhC,EAASiC,KAAM,kBAAC,KAAD,MAAkBC,MAAM,0BAAarD,MAAM,UAAUxH,UAAW2I,EAAU,cAAgB,aAAc1B,QAAS,YAC/H,IAAZ0B,IACFH,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GAEXE,GAAW,GACXE,GAAW,GACXE,GAAW,GAEXE,GAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,MAGd,kBAAC,KAAD,CAAUI,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM7C,GAAE,YAAe/H,UAAWyJ,EAAW,uBAAyB,2BAA4BxC,QAAS,YACtF,IAAf2B,IACFJ,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GAEXE,GAAW,GACXE,GAAW,GACXE,GAAW,GAEXE,GAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,GACZE,IAAY,KAEG,IAAbf,IACFC,GAAY,GACZE,IAAY,GACZE,IAAY,MAGd,oDAGJ,kBAAC,KAAD,CAAUc,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM7C,GAAE,YAAgB/H,UAAW2J,EAAW,uBAAyB,2BAA4B1C,QAAS,YACvF,IAAf2B,IACFJ,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,KAEI,IAAbS,IACFD,GAAY,GACZE,IAAY,GACZE,IAAY,MAGd,kDAGJ,kBAAC,KAAD,CAAUc,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM7C,GAAE,WAAc/H,UAAW6J,GAAW,uBAAyB,2BAA4B5C,QAAS,YACrF,IAAf2B,IACFJ,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,KAEI,IAAbW,KACFT,GAAW,GACXE,GAAW,GACXQ,IAAY,MAGd,oDAIN,kBAAC,KAAD,CAAUa,OAAQ9B,EAAS+B,KAAM,kBAAC,KAAD,OAC/B,kBAAC,IAAD,CAAM7C,GAAE,aAAgB/H,UAAW6I,EAAU,cAAgB,aAAc5B,QAAS,YAClE,IAAZ4B,IACFL,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,MAGb,oDAGJ,kBAAC,KAAD,CAASyB,OAAQ5B,EAAS6B,KAAM,kBAAC,KAAD,MAAWC,MAAM,oBAAYrD,MAAM,UAAUxH,UAAW+I,EAAU,cAAgB,aAAc9B,QAAS,YACvH,IAAZ8B,IACFP,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,MAGb,kBAAC,KAAD,CAAU0B,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM7C,GAAE,aAAgB/H,UAAW+J,GAAW,uBAAyB,2BAA4B9C,QAAS,YAC1F,IAAZ8B,IACFP,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,KAEI,IAAba,KACFC,IAAY,GACZE,IAAY,GACZE,IAAY,MAGd,mDAGJ,kBAAC,KAAD,CAAUQ,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM7C,GAAE,WAAc/H,UAAWiK,GAAW,uBAAyB,2BAA4BhD,QAAS,YACxF,IAAZ8B,IACFP,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,KAEI,IAAbe,KACFD,IAAY,GACZE,IAAY,GACZE,IAAY,MAGd,uDAGJ,kBAAC,KAAD,CAAUQ,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM7C,GAAE,QAAW/H,UAAWmK,GAAW,uBAAyB,2BAA4BlD,QAAS,YACrF,IAAZ8B,IACFP,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,KAEI,IAAbiB,KACFH,IAAY,GACZE,IAAY,GACZE,IAAY,MAGd,0DAIN,kBAAC,KAAD,CAASO,OAAQ1B,EAAS2B,KAAM,kBAAC,KAAD,MAAWC,MAAM,kBAAUrD,MAAM,UAAUxH,UAAWiJ,EAAU,cAAgB,aAAchC,QAAS,YACrH,IAAZgC,IACFT,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,MAGb,kBAAC,KAAD,CAAU0B,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM7C,GAAE,iBAAoB/H,UAAWqK,GAAW,uBAAyB,2BAA4BpD,QAAS,YAC9F,IAAZgC,IACFT,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,KAEI,IAAbmB,KACFC,IAAY,GACZE,IAAY,MAGd,kDAGJ,kBAAC,KAAD,CAAUI,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM7C,GAAE,uBAA0B/H,UAAWuK,GAAW,uBAAyB,2BAA4BtD,QAAS,YACpG,IAAZgC,IACFT,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,KAEI,IAAbqB,KACFD,IAAY,GACZE,IAAY,MAGd,0DAMV,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAME,UAAU,UACd,kBAAC,KAAD,CAAUE,KAAM,kBAAC,KAAD,OAAhB,eAQQ,iBAAbxC,EAEL,oCACE,yBAAKjJ,GAAG,eAAea,UAAU,kFAE/B,kBAAC,KAAD,CAAYyK,UAAWvC,GACrB,kBAAC,KAAD,KACE,yBAAKlI,UAAU,YAEb,2BAAIkI,EAAe,GAAK,gBAE1B,yBAAKlI,UAAU,YAAYiH,QAASqB,GAEjCJ,EACC,kBAAC,KAAD,MAEA,kBAAC,KAAD,QAIN,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAMwC,UAAU,UACd,kBAAC,KAAD,CAAUC,OAAQpC,EAASqC,KAAM,kBAAC,KAAD,OAC/B,kBAAC,IAAD,CAAM7C,GAAE,QAAW/H,UAAWuI,EAAU,cAAgB,aAActB,QAAS,YAC7D,IAAZsB,IACFC,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,KAEZ1B,MAAM,WATT,mBAaF,kBAAC,KAAD,CAAUmD,OAAQlC,EAASmC,KAAM,kBAAC,KAAD,OAC/B,kBAAC,IAAD,CAAM7C,GAAE,iBAAoB/H,UAAWyI,EAAU,cAAgB,aAAcxB,QAAS,YACtE,IAAZwB,IACFD,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,MAPf,0BAaF,kBAAC,KAAD,CAAUyB,OAAQhC,EAASiC,KAAM,kBAAC,KAAD,OAC/B,kBAAC,IAAD,CAAM7C,GAAE,WAAc/H,UAAW2I,EAAU,cAAgB,aAAc1B,QAAS,YAC9D,IAAZ0B,IACFH,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,MAPjB,mBAaF,kBAAC,KAAD,CAASyB,OAAQ9B,EAAS+B,KAAM,kBAAC,KAAD,MAAwBC,MAAM,kBAAUrD,MAAM,UAAUxH,UAAW2I,EAAU,cAAgB,aAAc1B,QAAS,YAClI,IAAZ4B,IACFL,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,MAGb,kBAAC,KAAD,CAAU0B,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM7C,GAAE,WAAc/H,UAAWuJ,EAAU,uBAAyB,2BAA4BtC,QAAS,YACvF,IAAZ4B,IACFL,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,KAEG,IAAZK,IACFC,GAAW,GACXE,GAAY,MAGd,6CAGJ,kBAAC,KAAD,CAAUkB,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM7C,GAAE,YAAe/H,UAAWyJ,EAAW,uBAAyB,2BAA4BxC,QAAS,YACzF,IAAZ4B,IACFL,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,KAEI,IAAbO,IACFD,GAAW,GACXE,GAAY,MAGd,mDAIN,kBAAC,KAAD,CAASiB,OAAQ5B,EAAS6B,KAAM,kBAAC,KAAD,MAAWC,MAAM,kBAAUrD,MAAM,UAAUxH,UAAW+I,EAAU,cAAgB,aAAc9B,QAAS,YACrH,IAAZ8B,IACFP,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,MAGb,kBAAC,KAAD,CAAU0B,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM7C,GAAE,mBAAsB/H,UAAW2J,EAAW,uBAAyB,2BAA4B1C,QAAS,YAChG,IAAZ8B,IACFP,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,KAEI,IAAbS,IACFC,IAAY,GACZE,IAAY,MAGd,sDAGJ,kBAAC,KAAD,CAAUc,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM7C,GAAE,mBAAsB/H,UAAW6J,GAAW,uBAAyB,2BAA4B5C,QAAS,YAChG,IAAZ8B,IACFP,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,KAEI,IAAbW,KACFD,IAAY,GACZE,IAAY,MAGd,mDAIN,kBAAC,KAAD,CAAUa,OAAQ1B,EAAS2B,KAAM,kBAAC,KAAD,OAC/B,kBAAC,IAAD,CAAM7C,GAAE,oBAAuB/H,UAAWiJ,EAAU,cAAgB,aAAchC,QAAS,YACzE,IAAZgC,IACFT,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,MAPf,kCAeN,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAMwB,UAAU,UAChB,kBAAC,KAAD,KACI,yBAAK1K,UAAU,WAAWmH,IAAI,GAAGD,IAAI,4FAEvC,kBAAC,KAAD,CAAU0D,KAAM,kBAAC,KAAD,OAAhB,eAQQ,gBAAbxC,EAEL,oCACE,yBAAKjJ,GAAG,eAAea,UAAU,kFAE/B,kBAAC,KAAD,CAAYyK,UAAWvC,GACrB,kBAAC,KAAD,KACE,yBAAKlI,UAAU,YAEb,2BAAIkI,EAAe,GAAK,gBAE1B,yBAAKlI,UAAU,YAAYiH,QAASqB,GAEjCJ,EACC,kBAAC,KAAD,MAEA,kBAAC,KAAD,QAIN,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAMwC,UAAU,UACd,kBAAC,KAAD,CAAUC,OAAQpC,EAASqC,KAAM,kBAAC,KAAD,OAC/B,kBAAC,IAAD,CAAM7C,GAAE,QAAW/H,UAAWuI,EAAU,cAAgB,aAActB,QAAS,YAC7D,IAAZsB,IACFC,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,MAPf,mBAaF,kBAAC,KAAD,CAASyB,OAAQhC,EAASiC,KAAM,kBAAC,KAAD,MAAwBC,MAAM,kBAAUrD,MAAM,UAAUxH,UAAW2I,EAAU,cAAgB,aAAc1B,QAAS,YAClI,IAAZ0B,IACFH,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,MAGb,kBAAC,KAAD,CAAU0B,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM7C,GAAE,WAAc/H,UAAWmJ,EAAU,uBAAyB,2BAA4BlC,QAAS,YACvF,IAAZ0B,IACFH,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,KAEG,IAAZC,IACFC,GAAW,GACXE,GAAW,MAGb,4DAGJ,kBAAC,KAAD,CAAUsB,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM7C,GAAE,YAAe/H,UAAWqJ,EAAU,uBAAyB,2BAA4BpC,QAAS,YACxF,IAAZ0B,IACFH,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,KAEG,IAAZG,IACFD,GAAW,GACXE,GAAW,MAGb,kEAIN,kBAAC,KAAD,CAASqB,OAAQ9B,EAAS+B,KAAM,kBAAC,KAAD,MAA2BC,MAAM,iBAAWrD,MAAM,UAAUxH,UAAW6I,EAAU,cAAgB,aAAc5B,QAAS,YACtI,IAAZ4B,IACFL,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,MAGb,kBAAC,KAAD,CAAU0B,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM7C,GAAE,mBAAsB/H,UAAWuJ,EAAU,uBAAyB,2BAA4BtC,QAAS,YAC/F,IAAZ4B,IACFL,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,KAEG,IAAZK,IACFC,GAAW,GACXE,GAAY,MAGd,qDAGJ,kBAAC,KAAD,CAAUkB,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM7C,GAAE,oBAAuB/H,UAAWyJ,EAAW,uBAAyB,2BAA4BxC,QAAS,YACjG,IAAZ4B,IACFL,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,KAEI,IAAbO,IACFD,GAAW,GACXE,GAAY,MAGd,mDAIN,kBAAC,KAAD,CAAUiB,OAAQ1B,EAAS2B,KAAM,kBAAC,KAAD,OAC/B,kBAAC,IAAD,CAAM7C,GAAE,aAAgB/H,UAAWiJ,EAAU,cAAgB,aAAchC,QAAS,YAClE,IAAZgC,IACFT,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,MAPf,kCAeN,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAMwB,UAAU,UAChB,kBAAC,KAAD,KACI,yBAAK1K,UAAU,WAAWmH,IAAI,GAAGD,IAAI,4FAEvC,kBAAC,KAAD,CAAU0D,KAAM,kBAAC,KAAD,OAAhB,eASZ,oCACE,yBAAKzL,GAAG,eAAea,UAAU,mFAE/B,kBAAC,KAAD,CAAYyK,UAAWvC,GACrB,kBAAC,KAAD,KACE,yBAAKlI,UAAU,YAEb,2BAAIkI,EAAe,GAAK,gBAE1B,yBAAKlI,UAAU,YAAYiH,QAASqB,GAEjCJ,EACC,kBAAC,KAAD,MAEA,kBAAC,KAAD,QAIN,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAMwC,UAAU,UACd,kBAAC,KAAD,CAAUC,OAAQpC,EAASqC,KAAM,kBAAC,KAAD,OAC/B,kBAAC,IAAD,CAAM7C,GAAE,QAAW/H,UAAWuI,EAAU,cAAgB,aAActB,QAAS,YAC7D,IAAZsB,IACFC,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,MAPf,mBAaF,kBAAC,KAAD,CAASyB,OAAQhC,EAASiC,KAAM,kBAAC,KAAD,MAAWC,MAAM,kBAAUrD,MAAM,UAAUxH,UAAW2I,EAAU,cAAgB,aAAc1B,QAAS,YACrH,IAAZ0B,IACFH,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,MAGb,kBAAC,KAAD,CAAU0B,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM7C,GAAE,WAAc/H,UAAWmJ,EAAU,uBAAyB,2BAA4BlC,QAAS,YACvF,IAAZ0B,IACFH,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,KAEG,IAAZC,IACFC,GAAW,GACXE,GAAW,MAGb,4DAGJ,kBAAC,KAAD,CAAUsB,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM7C,GAAE,YAAe/H,UAAWqJ,EAAU,uBAAyB,2BAA4BpC,QAAS,YACxF,IAAZ0B,IACFH,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,KAEG,IAAZG,IACFD,GAAW,GACXE,GAAW,MAGb,kEAIN,kBAAC,KAAD,CAASqB,OAAQ9B,EAAS+B,KAAM,kBAAC,KAAD,MAA2BC,MAAM,iBAAWrD,MAAM,UAAUxH,UAAW6I,EAAU,cAAgB,aAAc5B,QAAS,YACtI,IAAZ4B,IACFL,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,MAGb,kBAAC,KAAD,CAAU0B,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM7C,GAAE,mBAAsB/H,UAAWuJ,EAAU,uBAAyB,2BAA4BtC,QAAS,YAC/F,IAAZ4B,IACFL,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,KAEG,IAAZK,IACFC,GAAW,GACXE,GAAY,MAGd,qDAGJ,kBAAC,KAAD,CAAUkB,KAAM,kBAAC,KAAD,OACd,kBAAC,IAAD,CAAM7C,GAAE,oBAAuB/H,UAAWyJ,EAAW,uBAAyB,2BAA4BxC,QAAS,YACjG,IAAZ4B,IACFL,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,KAEI,IAAbO,IACFD,GAAW,GACXE,GAAY,MAGd,mDAIN,kBAAC,KAAD,CAAUiB,OAAQ1B,EAAS2B,KAAM,kBAAC,KAAD,OAC/B,kBAAC,IAAD,CAAM7C,GAAE,aAAgB/H,UAAWiJ,EAAU,cAAgB,aAAchC,QAAS,YAClE,IAAZgC,IACFT,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,MAPf,gCAaF,kBAAC,KAAD,CAAUyB,OAAQ5B,EAAS6B,KAAM,kBAAC,KAAD,OAC/B,kBAAC,IAAD,CAAM7C,GAAE,oBAAuB/H,UAAW+I,EAAU,cAAgB,aAAc9B,QAAS,YACzE,IAAZ8B,IACFP,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,GACXE,GAAW,MAPf,uBAeN,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAMwB,UAAU,UACd,kBAAC,KAAD,KACI,yBAAK1K,UAAU,WAAWmH,IAAI,GAAGD,IAAI,4FAEzC,kBAAC,KAAD,CAAU0D,KAAM,kBAAC,KAAD,OAAhB,iB,QCn/BDE,GAAsB,cACtBC,GAAuB,eACvBC,GAAyB,iBAEzBC,GAAsC,8BACtCC,GAAqC,6BACrCvJ,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBAC3B2K,GAA6B,qBAC7BC,GAA0B,kBCNhC,SAASC,GAAWlI,EAAgBhE,GACvC,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,iBACwClE,GAAM,CAC3C9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASkI,GAAWlI,EAAUhE,OAUzCmE,MAAM,SAAAgI,GACHzP,QAAQC,IAAIwP,GACZnI,EDfL,CACH7D,KAAMiB,GACNgL,QCakCD,IAC1BnI,EDEL,CAAE7D,KAAM6L,KCDH,IAAInJ,EAAgB,CAChB7C,GAAImM,EAAInM,GACR4F,kBAAmBuG,EAAIvG,mBAG3B5B,EDDT,SAAoBoI,GACvB,MAAO,CAAEjM,KAAMwL,GAAaS,QAASA,GCAhBC,CAAWxJ,OAEvBmC,OAAM,SAAAtF,GACHsE,EDnBT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UCgBMoD,CAAepD,IACxBhD,QAAQC,IAAI,YCoCb2P,OA3Ef,WACE,IAAMtI,EAA0BqD,cAC1BjC,EAA0BtB,aAAaC,QAAQ,YAC/C/D,EAAK8D,aAAaC,QAAQ,MAC1BwI,EAA0B9D,aAAY,SAACC,GAAD,OAAuBA,EAAM6D,YACzEC,qBAAU,WACRC,wBAAaP,GAAWlI,EAAUhE,MACjC,CAACgE,EAAUhE,IAPuB,MAQXT,oBAAS,GARE,mBAQ9BmN,EAR8B,KAQtBC,EARsB,KAUrCjQ,QAAQC,IAAI4P,EAASA,UACrB,IAAIK,EAAgB,GAChBL,EAASA,SAAS5L,OAAS,GAC7BmD,aAAae,QAAQ,gBAAiB0H,EAASA,SAAS,GAAG3G,mBAG7D,IAAIiH,EAAO/I,aAAaC,QAAQ,iBAKhC,OAJa,OAAT8I,IACFD,EAAgBC,GAKhB,wBAAIhM,UAAU,8BACZ,uBAAGA,UAAU,2BACXiH,QAAS,WACP6E,GAASD,IAEX1M,GAAG,eACH8M,KAAK,SACLC,cAAY,WACZC,gBAAc,OACdC,gBAAc,SACd,0BAAMpM,UAAU,uCAAuCuE,GACvD,yBAAKvE,UAAU,6BAA6BmH,IAAI,GAC9CD,IAAuB,OAAlB6E,EAAyBA,EAAiB,mDAGnD,yBAAK/L,UAAS,qEAAiE6L,EAAU,OAAS,IAChGQ,kBAAgB,gBAChB,uBAAGrM,UAAU,gBACbiH,QAAS,aACTqF,KAAK,WACLJ,cAAY,QACZK,cAAY,gBACV,uBAAGvM,UAAU,+CALf,0CAQA,uBAAGA,UAAU,gBACbiH,QAAS,aACTqF,KAAK,mBACLJ,cAAY,QACZK,cAAY,oBACV,uBAAGvM,UAAU,8CALf,yCAQA,uBAAGA,UAAU,2BACbiH,QAAS,WACP,IAAI9H,EAAK8D,aAAaC,QAAQ,MAC9BD,aAAayB,QACbvB,EAAS9C,KACT8C,EAASS,GAAczE,EAAI,CACzBsE,OAAQ,SAGZyI,cAAY,QACZK,cAAY,gBACV,uBAAGvM,UAAU,uDAXf,aC/DKwM,I,OAAqB,cACrBC,GAAsB,cACtBC,GAAwB,gBAExBC,GAAqC,6BACrCC,GAAoC,4BACpCjL,GAAiC,yBACjCrB,GAA6B,qBAE7BE,GAA2B,mBAC3BqM,GAA4B,oBAC5BC,GAAyB,iBCT/B,SAASC,KACZ,IAAI3I,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EDSG,CACH7D,KAAMgB,KCTN8C,MAAM,GAAD,OACMC,+BADN,0BAC6D,CACtDhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS4J,SAUpBzJ,MAAM,SAAAS,GACHZ,EDML,CAAE7D,KAAMuN,KCLHhR,QAAQC,IAAIiI,EAAKhG,KAAKiP,eACtBjJ,EAAKhG,KAAKiP,cAAcC,KAAI,SAAC3B,EAAU4B,GACnC,IAAIC,EAAwB,CACxBC,IAAK9B,EAAInM,GACTkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjBC,KAAMjC,EAAIiC,MAGd,OADA1R,QAAQC,IAAIwP,GACLnI,EDRhB,CAAE7D,KAAMwN,GAAgBU,OCQeL,UAGrChJ,OAAM,SAAAtF,GACHsE,EDpBT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UCiBMoD,CAAepD,IACxBhD,QAAQC,IAAI,aC7CrB,IAAM2R,GAAuC,+BACvCC,GAAwC,gCACxCC,GAA0C,kCAE1CC,GAAuD,+CACvDC,GAAsD,8CACtDC,GAA8C,sCAC9CC,GAA2C,mCAG3CC,GAA2C,mCAC3CC,GAA4C,oCAC5CC,GAA8C,sCAE9CC,GAA2D,mDAC3DC,GAA0D,kDAC1DC,GAAkD,0CAClDC,GAA+C,uCAG/C3M,GAAiC,yBACjCrB,GAA6B,qBAC7BC,GAA6B,qBAC7BC,GAA2B,mBCnBjC,SAAS+N,GAAwBpP,GACpC,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EDkBG,CACH7D,KAAMgB,KClBN8C,MAAM,GAAD,OACMC,+BADN,wCACmElE,GAAM,CAClE9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASoL,GAAwBpP,OAU5CmE,MAAM,SAAAS,GACHZ,EDHL,CACH7D,KAAMiB,GACNiO,uBCCkCzK,IAC1BZ,ED2CL,CAAE7D,KAAM+O,KC1CHlL,EDaL,CAAE7D,KAAMwO,KCZHjS,QAAQC,IAAIiI,EAAKhG,KAAK0Q,sBACtB1K,EAAKhG,KAAK0Q,qBAAqBxB,KAAI,SAAC3B,EAAU4B,GAC1C,IAAIwB,EAA6C,CAC7CC,gBAAiBrD,EAAIqD,gBACrBC,QAAStD,EAAIsD,QACbC,QAASvD,EAAIuD,SAEjB,OACW1L,GAD0B,IAAjCuL,EAAqBG,QDQtC,SAAmCL,GACtC,MAAO,CAAElP,KAAMmO,GAA8Be,uBAAwBA,GCRjCM,CAA0BJ,GDoC3D,SAAsCF,GACzC,MAAO,CAAElP,KAAM0O,GAAkCQ,uBAAwBA,GClCrCO,CAA6BL,UAIxDvK,OAAM,SAAAtF,GACHsE,EDhBT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UCaMoD,CAAepD,IACxBhD,QAAQC,IAAI,aCzDrB,IAAMkT,GAAuB,eACvBC,GAAwB,gBACxBC,GAA0B,kBAE1BC,GAAuC,+BACvCC,GAAsC,8BACtCzN,GAAiC,yBACjCrB,GAA6B,qBAC7BC,GAA6B,qBAC7BC,GAA2B,mBAC3B6O,GAA8B,sBAC9BC,GAA2B,mBAEjC,SAASxN,KACZ,MAAO,CACHxC,KAAMgB,IAIP,SAASyB,GAAiBwN,GAC7B,MAAO,CACHjQ,KAAMiB,GACNgP,YAID,SAAStN,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAIZ,SAAS2Q,GAAgBD,GAC5B,MAAO,CAAEjQ,KAAMgQ,GAAkBC,SAAUA,GAGxC,SAASE,KACZ,MAAO,CAAEnQ,KAAM+P,IAGZ,SAASK,GAAYH,GACxB,MAAO,CAAEjQ,KAAM0P,GAAcO,SAAUA,GAGpC,SAASI,GAAaJ,GACzB,MAAO,CAAEjQ,KAAM2P,GAAeM,SAAUA,GAGrC,SAASK,GAAezQ,GAC3B,MAAO,CAAEG,KAAM4P,GAAiB/P,GAAIA,GAOjC,SAAS0Q,KACZ,MAAO,CAAEvQ,KAAM8P,IAGZ,SAAStM,GAAqBzD,GACjC,MAAO,CAAEC,KAAMqC,GAAwBtC,MAAOA,GC3D3C,SAASyQ,GAAwB/L,GACpC,IAAIK,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,2BAC8D,CACvDhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS2M,GAAwB/L,OAU5CT,MAAM,SAAAyM,GACHlU,QAAQC,IAAIiU,GACZ5M,EAASoL,GAAwBxK,EAAK6K,aAEzCzK,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,a,OCuHbkU,OA5If,WACE,IAAM7M,EAA0BqD,cAC1ByJ,EAAwBrI,aAAY,SAACC,GAAD,OAAuBA,EAAMoI,WACjEC,EAAsDtI,aAAY,SAACC,GAAD,OAAuBA,EAAMqI,2BAH3D,EAIhBxR,oBAAS,GAJO,mBAInCmN,EAJmC,KAI3BC,EAJ2B,KAMtCE,EAAO/I,aAAaC,QAAQ,MAC5B0L,EAAkB,EACT,OAAT5C,IACF4C,EAAUuB,SAASnE,IAGrBL,qBAAU,WACRxI,EAASoL,GAAwBK,IACjCzL,EAAS4J,QACR,CAAC5J,EAAUyL,IAEd/S,QAAQC,IAAImU,EAAQA,SACpBpU,QAAQC,IAAIoU,EAAwBE,+BAEpC,IAAIC,EAA2B,GAC3BC,EAAQ,EACZJ,EAAwBE,8BAA8BnD,KAAI,SAAC3B,EAAK8B,GAC9D,OAAO6C,EAAQA,QAAQhD,KAAI,SAAAE,GACzB,GAAIA,EAAaC,MAAQ9B,EAAIqD,gBAAgB,CAC3C,IAAI4B,EAAgB,CAClB5B,gBAAiBrD,EAAIqD,gBACrB6B,kBAAmBrD,EAAaE,KAChCuB,QAAStD,EAAIsD,QACb6B,kBAAmBtD,EAAaI,KAChCmD,wBAAyBvD,EAAaG,YACtCuB,QAASvD,EAAIuD,SAGf,OADAyB,IACOD,EAAcxJ,KAAK0J,GAE5B,OAAOpD,QAKX+C,EAAwBS,0BAA0B1D,KAAI,SAAC3B,EAAK8B,GAC1D,OAAO6C,EAAQA,QAAQhD,KAAI,SAAAE,GACzB,GAAIA,EAAaC,MAAQ9B,EAAIqD,iBAAmB2B,GAAS,EAAE,CACzD,IAAIC,EAAgB,CAClB5B,gBAAiBrD,EAAIqD,gBACrB6B,kBAAmBrD,EAAaE,KAChCuB,QAAStD,EAAIsD,QACb6B,kBAAmBtD,EAAaI,KAChCmD,wBAAyBvD,EAAaG,YACtCuB,QAASvD,EAAIuD,SAGf,OADAyB,IACOD,EAAcxJ,KAAK0J,GAE5B,OAAOpD,QAIX,IAAM1G,EAAUC,cAwBhB,OAEE,wBAAI1G,UAAU,8BAGZ,uBAAGA,UAAU,oDAAoDb,GAAG,2BAA2B+M,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,OAAOnF,QAAS,WACvK6E,GAASD,KAET,0BAAM7L,UAAU,2BAA2BkQ,EAAwBE,8BAA8BtQ,QACjG,uBAAGE,UAAU,iBAGf,yBAAKA,UAAS,wFAAoF6L,EAAU,OAAS,GAAvG,iBACZQ,kBAAgB,gBACd,wBAAIrM,UAAU,eAEVqQ,EAAcpD,KAAI,SAAC3B,EAAK8B,GACtB,OACE,wBAAIwD,IAAKxD,GACP,uBAAGpN,UAAU,4BACXiH,QAAS,YA3CT,SAACxI,GACjBqN,GAASD,GACT1I,EAAS2M,GAAwB,CAC/BlB,QAASA,EACTD,gBAAiBlQ,EAAMkQ,gBACvBE,SAAS,KAEX5L,aAAaY,WAAW,mBACxBZ,aAAae,QAAQ,kBAAmBvF,EAAMkQ,gBAAgB/S,YAC9DqH,aAAaY,WAAW,WACxBZ,aAAae,QAAQ,UAAWvF,EAAMmQ,QAAQhT,YAC9CqH,aAAaY,WAAW,qBACxBZ,aAAae,QAAQ,oBAAqBvF,EAAM+R,mBAChDvN,aAAaY,WAAW,2BACxBZ,aAAae,QAAQ,0BAA2BvF,EAAMiS,yBACtDzN,aAAaY,WAAW,qBACxBZ,aAAae,QAAQ,oBAAqBvF,EAAMgS,mBAEhDhK,EAAQI,KAAK,CACTmB,SAFO,yBA0BqB6I,CAAYvF,IAC5BY,cAAY,QACZK,cAAY,gBACZ,uBAAGvM,UAAU,iCACZsL,EAAIkF,kBACL,0BAAMxQ,UAAU,2BAAhB,UApES,GA6ELiN,KAAI,SAAC3B,EAAK8B,GACpB,OACE,4BACE,uBAAGpN,UAAU,4BACXiH,QAAS,kBAAM9D,EAAS9C,MACxB6L,cAAY,QACZK,cAAY,gBACZ,uBAAGvM,UAAU,+CACZsL,EAAIkF,wBAOjB,yBAAKxQ,UAAU,+BACb,uBAAGsM,KAAK,iBAAR,2BCrJCwE,GAAwB,gBACxBC,GAAyB,iBACzBC,GAA2B,mBAE3BC,GAAwC,gCACxCC,GAAuC,+BACvCC,GAA+B,uBAC/BC,GAA4B,oBAG5BC,GAAsB,cACtBC,GAAuB,eACvBC,GAAyB,iBAEzBC,GAAsC,8BACtCC,GAAqC,6BACrCC,GAA6B,qBAC7BC,GAA0B,kBAG1BhQ,GAAiC,yBACjCrB,GAA6B,qBAE7BE,GAA2B,mBAejC,SAASyB,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAQZ,SAAS+S,KACZ,MAAO,CAAEtS,KAAM6R,IAGZ,SAASU,GAAaC,GACzB,MAAO,CAAExS,KAAMwR,GAAegB,4BAA6BA,GAwBxD,SAASC,KACZ,MAAO,CAAEzS,KAAMoS,IAGZ,SAASM,GAAWF,GACvB,MAAO,CAAExS,KAAM+R,GAAaS,4BAA6BA,GCvEtD,SAASG,GAAmC9O,EAAehE,GAC9D,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,8CACqElE,GAAM,CACxE9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS8O,GAAmC9O,EAAUhE,OAUjEmE,MAAM,SAAAS,GACHZ,EAASyO,MACTzO,EAAS4O,MACTlW,QAAQC,IAAIiI,EAAKhG,KAAKmU,wBACtBnO,EAAKhG,KAAKmU,uBAAuBjF,KAAI,SAAC3B,EAAU4B,GAC5C,IAAIgF,EAAiD,CACjD/S,GAAImM,EAAInM,GACRgT,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClBC,SAAU/G,EAAI+G,SACdC,WAAY,GACZC,YAAajH,EAAIiH,YACjB9O,OAAQ6H,EAAI7H,OACZ+O,SAAUlH,EAAIkH,SACdC,MAAOnH,EAAImH,MACXC,kBAAmBpH,EAAIoH,kBACvBnF,KAAMjC,EAAIiC,MASd,MANmB,cAAfjC,EAAI7H,OACJN,EAAS0O,GAAaK,IAGtB/O,EAAS6O,GAAWE,IAEjBhF,QAGd/I,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCzDrB,SAAS6W,GAAqCxP,EAAehE,GAChE,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,gDACuElE,GAAM,CAC1E9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASwP,GAAqCxP,EAAUhE,OAUnEmE,MAAM,SAAAS,GACHZ,EAASyO,MACTzO,EAAS4O,MACTlW,QAAQC,IAAIiI,EAAKhG,KAAKmU,wBACtBnO,EAAKhG,KAAKmU,uBAAuBjF,KAAI,SAAC3B,EAAU4B,GAC5C,IAAIgF,EAAiD,CACjD/S,GAAImM,EAAInM,GACRgT,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClBC,SAAU/G,EAAI+G,SACdC,WAAY,GACZC,YAAajH,EAAIiH,YACjB9O,OAAQ6H,EAAI7H,OACZ+O,SAAUlH,EAAIkH,SACdC,MAAOnH,EAAImH,MACXC,kBAAmBpH,EAAIoH,kBACvBnF,KAAMjC,EAAIiC,MASd,MANmB,cAAfjC,EAAI7H,OACJN,EAAS0O,GAAaK,IAGtB/O,EAAS6O,GAAWE,IAEjBhF,QAGd/I,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YC2Hb8W,OA5Kf,WACE,IAAMzP,EAA0BqD,cAC1ByJ,EAAwBrI,aAAY,SAACC,GAAD,OAAuBA,EAAMoI,WACjEC,EAAsDtI,aAAY,SAACC,GAAD,OAAuBA,EAAMqI,2BAHnE,EAIRxR,oBAAS,GAJD,mBAI3BmN,EAJ2B,KAInBC,EAJmB,KAK5B+G,EAA+DjL,aAAY,SAACC,GAAD,OAAuBA,EAAMgL,gCAE1G7G,EAAO/I,aAAaC,QAAQ,MAC5B0L,EAAkB,EACT,OAAT5C,IACF4C,EAAUuB,SAASnE,IAGrB,IAAIlH,EAAiB7B,aAAaC,QAAQ,kBACtC4P,EAA0B,GAC1B1K,EAAmB,GACA,OAAnBtD,IACAgO,EAAgBhO,EAAeuD,MAAM,KACrCD,EAAW0K,EAAc,IAG7BnH,qBAAU,WACRxI,EAASoL,GAAwBK,IACjCzL,EAAS4J,QACR,CAAC5J,EAAUyL,IAEdjD,qBAAU,WACS,gBAAbvD,EACFwD,wBAAaqG,GAAmC9O,EAAUyL,IAEtC,iBAAbxG,GACPwD,wBAAa+G,GAAqCxP,EAAUyL,MAE7D,CAACzL,EAAUyL,EAASxG,IAEvBvM,QAAQC,IAAImU,EAAQA,SACpBpU,QAAQC,IAAIoU,EAAwBE,+BAEpC,IAAIC,EAA2B,GAC3BC,EAAQ,EACZJ,EAAwBE,8BAA8BnD,KAAI,SAAC3B,EAAK8B,GAC9D,OAAO6C,EAAQA,QAAQhD,KAAI,SAAAE,GACzB,GAAIA,EAAaC,MAAQ9B,EAAIqD,gBAAgB,CAC3C,IAAI4B,EAAgB,CAClB5B,gBAAiBrD,EAAIqD,gBACrB6B,kBAAmBrD,EAAaE,KAChCuB,QAAStD,EAAIsD,QACb6B,kBAAmBtD,EAAaI,KAChCmD,wBAAyBvD,EAAaG,YACtCuB,QAASvD,EAAIuD,SAGf,OADAyB,IACOD,EAAcxJ,KAAK0J,GAE5B,OAAOpD,QAKX+C,EAAwBS,0BAA0B1D,KAAI,SAAC3B,EAAK8B,GAC1D,OAAO6C,EAAQA,QAAQhD,KAAI,SAAAE,GACzB,GAAIA,EAAaC,MAAQ9B,EAAIqD,iBAAmB2B,GAAS,EAAE,CACzD,IAAIC,EAAgB,CAClB5B,gBAAiBrD,EAAIqD,gBACrB6B,kBAAmBrD,EAAaE,KAChCuB,QAAStD,EAAIsD,QACb6B,kBAAmBtD,EAAaI,KAChCmD,wBAAyBvD,EAAaG,YACtCuB,QAASvD,EAAIuD,SAGf,OADAyB,IACOD,EAAcxJ,KAAK0J,GAE5B,OAAOpD,QAIX,IAAM1G,EAAUC,cA+BhB,MAAiB,gBAAb0B,GAA2C,iBAAbA,EAG9B,wBAAIpI,UAAU,8BAGZ,uBAAGA,UAAU,oDAAoDb,GAAG,2BAA2B+M,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,OAAOnF,QAAS,WAX7KR,EAAQI,KAAK,CACTmB,SAFO,YAeL,0BAAMhI,UAAU,2BAA2B6S,EAA6BE,QAAQjT,QAChF,kBAAC,KAAD,OAGF,yBAAKE,UAAS,wFAAoF6L,EAAU,OAAS,GAAvG,iBACZQ,kBAAgB,gBACd,wBAAIrM,UAAU,eAEVqQ,EAAcpD,KAAI,SAAC3B,EAAK8B,GACtB,OACE,wBAAIwD,IAAKxD,GACP,uBAAGpN,UAAU,4BACXiH,QAAS,YAnDX,SAACxI,GACjBqN,GAASD,GACT1I,EAAS2M,GAAwB,CAC/BlB,QAASA,EACTD,gBAAiBlQ,EAAMkQ,gBACvBE,SAAS,KAEX5L,aAAaY,WAAW,mBACxBZ,aAAae,QAAQ,kBAAmBvF,EAAMkQ,gBAAgB/S,YAC9DqH,aAAaY,WAAW,WACxBZ,aAAae,QAAQ,UAAWvF,EAAMmQ,QAAQhT,YAC9CqH,aAAaY,WAAW,qBACxBZ,aAAae,QAAQ,oBAAqBvF,EAAM+R,mBAChDvN,aAAaY,WAAW,2BACxBZ,aAAae,QAAQ,0BAA2BvF,EAAMiS,yBACtDzN,aAAaY,WAAW,qBACxBZ,aAAae,QAAQ,oBAAqBvF,EAAMgS,mBAEhDhK,EAAQI,KAAK,CACTmB,SAFO,yBAkCuB6I,CAAYvF,IAC5BY,cAAY,QACZK,cAAY,gBACZ,uBAAGvM,UAAU,iCACZsL,EAAIkF,kBACL,0BAAMxQ,UAAU,2BAAhB,UA5EO,GAqFHiN,KAAI,SAAC3B,EAAK8B,GACpB,OACE,4BACE,uBAAGpN,UAAU,4BACXiH,QAAS,kBAAM9D,EAAS9C,MACxB6L,cAAY,QACZK,cAAY,gBACZ,uBAAGvM,UAAU,+CACZsL,EAAIkF,wBAOjB,yBAAKxQ,UAAU,+BACb,uBAAGsM,KAAK,iBAAR,0BAQR,sCCxGS0G,GA9EW,WACxB,IAAMC,EAA2BrL,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAC3EnO,EAAiB7B,aAAaC,QAAQ,kBAEtCkF,EAAkB,GAMtB,OALuB,OAAnBtD,IAEAsD,EADgBtD,EAAeuD,MAAM,KACZ,IAGZ,eAAbD,EAEA,yBAAKpI,UAAU,kFACb,wBAAIA,UAAU,8BACZ,wBAAIA,UAAU,mBAAkB,uBAAGsM,KAAK,MAAM2G,EAAOA,EAAKE,KAAO,OACjE,wBAAInT,UAAU,mBAAkB,uBAAGsM,KAAK,MAAM2G,EAAOA,EAAKG,QAAU,QAGtE,wBAAIpT,UAAU,sBACZ,kBAAC,GAAD,MACA,yBAAKA,UAAU,qCACf,kBAAC,GAAD,QAKc,iBAAboI,EAEL,yBAAKpI,UAAU,0EAA0Eb,GAAG,kBAC1F,wBAAIa,UAAU,6BAA6Bb,GAAG,sBAC5C,wBAAIa,UAAU,2CAA0C,wBAAIA,UAAU,wBAAwBb,GAAG,gBAAgB8T,EAAOA,EAAKE,KAAO,OACpI,wBAAInT,UAAU,2CAA0C,wBAAIA,UAAU,wBAAwBb,GAAG,gBAAgB8T,EAAOA,EAAKG,QAAU,QAGzI,wBAAIpT,UAAU,sBACZ,kBAAC,GAAD,MACA,yBAAKA,UAAU,qCACf,kBAAC,GAAD,QAMc,gBAAboI,GAA2C,iBAAbA,EAEnC,yBAAKpI,UAAU,+DAA+Db,GAAG,kBAC/E,wBAAIa,UAAU,6BAA6Bb,GAAG,sBAC5C,wBAAIa,UAAU,2CAA0C,wBAAIA,UAAU,wBAAwBb,GAAG,gBAAgB8T,EAAOA,EAAKE,KAAO,OACpI,wBAAInT,UAAU,2CAA0C,wBAAIA,UAAU,wBAAwBb,GAAG,gBAAgB8T,EAAOA,EAAKG,QAAU,QAGzI,wBAAIpT,UAAU,sBACZ,kBAAC,GAAD,MACA,yBAAKA,UAAU,qCACf,kBAAC,GAAD,MACA,yBAAKA,UAAU,qCACf,kBAAC,GAAD,QAMN,yBAAKA,UAAU,kFACb,wBAAIA,UAAU,8BACZ,wBAAIA,UAAU,mBAAkB,uBAAGsM,KAAK,MAAM2G,EAAOA,EAAKE,KAAO,OACjE,wBAAInT,UAAU,mBAAkB,uBAAGsM,KAAK,MAAM2G,EAAOA,EAAKG,QAAU,QAGtE,wBAAIpT,UAAU,sBACZ,kBAAC,GAAD,MACA,yBAAKA,UAAU,qCACf,kBAAC,GAAD,SC/EKqT,GAA8B,sBAEpC,SAASC,GAAkBH,EAAcC,GAC5C,MAAO,CAAE9T,KAAM+T,GAAqBF,KAAMA,EAAMC,QAASA,GCqB9CG,ICjBHC,GDiBGD,GArBf,SAAiB9U,GACb,OACI,yBAAKuB,UAAU,0BACX,yBAAKA,UAAS,2BAAsBvB,EAAMgV,MAA5B,wBACV,yBAAKzT,UAAU,aACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,2DAA2DvB,EAAMoM,OAChF,yBAAK7K,UAAU,0CAA0CvB,EAAMiV,OAEnE,yBAAK1T,UAAU,YACX,uBAAGA,UAAS,iBAAYvB,EAAMmM,KAAlB,gCEb3B+I,GAAqC,6BACrCC,GAAsC,8BACtCC,GAAwC,gCAExCC,GAAqD,6CACrDC,GAAoD,4CACpDpS,GAAiC,yBAIjCqS,GAA4C,oCAC5CC,GAAyC,iCA8B/C,SAASC,GAAyBC,GACrC,MAAO,CAAE7U,KAAMqU,GAA4BQ,uBAAwBA,GAGhE,SAASC,GAA0BD,GACtC,MAAO,CAAE7U,KAAMsU,GAA6BO,uBAAwBA,GAWjE,SAASE,KACZ,MAAO,CAAE/U,KAAMyU,IAGZ,SAASO,GAA0CjV,GACtD,MAAO,CAAEC,KAAMqC,GAAwBtC,MAAOA,I,SDxDtCmU,O,eAAAA,I,mBAAAA,I,eAAAA,I,oBAAAA,Q,KENL,IAAMe,GAAsB,cACtBC,GAAuB,eACvBC,GAAyB,iBAEzBC,GAAsC,8BACtCC,GAAqC,6BACrChT,GAAiC,yBACjCrB,GAA6B,qBAC7BC,GAA6B,qBAC7BC,GAA2B,mBAC3BoU,GAA6B,qBAC7BC,GAA0B,kBAEhC,SAAS/S,KACZ,MAAO,CACHxC,KAAMgB,IAWP,SAAS2B,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAYZ,SAASiW,GAAUC,GACtB,MAAO,CAAEzV,KAAMiV,GAAaQ,QAASA,GAGlC,SAASC,GAAWD,GACvB,MAAO,CAAEzV,KAAMkV,GAAcO,QAASA,GAGnC,SAASE,GAAa9V,GACzB,MAAO,CAAEG,KAAMmV,GAAgBtV,GAAIA,GAOhC,SAAS+V,KACZ,MAAO,CAAE5V,KAAMqV,IAGZ,SAASQ,GAA2B9V,GACvC,MAAO,CAAEC,KAAMqC,GAAwBtC,MAAOA,GCTnC+V,OAnDf,SAAwB3W,GAAkC,IAAD,EACzBC,oBAAS,GADgB,mBAC9CC,EAD8C,KACrCC,EADqC,OAE3BF,mBAAS,IAFkB,mBAE9CG,EAF8C,KAEvCC,EAFuC,OAGnBJ,mBAAS,IAHU,mBAG9CK,EAH8C,KAGnCC,EAHmC,OAI3BN,mBAASD,EAAMY,OAJY,mBAI9CA,EAJ8C,KAIvCJ,EAJuC,KAwB/CoW,EAAqC5W,EAAMxB,QAAQgQ,KAAK,SAACqI,EAAapI,GACxE,OACI,4BAAQ0D,IAAK1D,EAAO7N,MAAOiW,EAAOjW,OAAQiW,EAAOjI,SAIzD,OACI,kBAAC,WAAD,KACI,2BAAOnO,QAAO,UAAKT,EAAMU,KAAOV,EAAMW,OACtC,4BACIC,MAAOA,EACPF,GAAE,UAAKV,EAAMU,IACba,UAAS,uBAAkBvB,EAAMwB,WAAaxB,EAAMwB,WAAa,GAAxD,YAA8DlB,GACvEQ,SA9BZ,SAAwBC,GAA8C,IAC7DX,EAAOa,EADqD,EACzB,CAAC,GAAI,GAAIF,EAAMC,OAAOJ,OAAtCM,EADyC,QAGzCA,GAAgBlB,EAAMmB,SAC1C,CAAC,2BAA4B,cAAgB,CAAC,GAAI,YAJW,mBAGhEf,EAHgE,KAGzDa,EAHyD,KAOjEjB,EAAMc,SAAS,CAAEF,MAAOM,EAAcd,MAAOA,EAAOF,QAASA,EAASoB,MAAOtB,EAAMsB,QAEnFnB,GAAS,GACTE,EAASD,GACTG,EAAaU,GACbT,EAASU,KAmBD,4BAAQN,MAAQ,GAAhB,aACCgW,GAGJxW,EACG,yBAAKmB,UAAU,oBACVnB,GACI,O,+NC0GV0W,OAzIf,SAAsB9W,GAClB,IAAM0E,EAA0BqD,cAC1BwG,EAAoDpF,aAAY,SAACC,GAAD,OAAuBA,EAAM2N,2BAC/FrI,EAA8CH,EAAcyI,8BAC1DC,EAAqB1I,EAAc2I,oBAAsBnC,GAAwCoC,OAElGzI,IAAgBuI,IACjBvI,EAAe,CAAEhO,GAAI,EAAGkO,KAAM,GAAIC,YAAa,GAAIC,KAAM,KAPN,MAUrB7O,mBAAS,CACvC2O,KAAM,CAAExO,MAAO,GAAIQ,MAAO8N,EAAaE,MACvCC,YAAa,CAAEzO,MAAO,GAAIQ,MAAO8N,EAAaG,aAC9CuI,UAAW,CAAEhX,MAAO,GAAIQ,MAAO,4BAboB,mBAUhDsH,EAVgD,KAUrCC,EAVqC,KAgBvD,SAASE,EAAoBC,GACzBH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UAgDnF,SAAS2H,IACL,OAAQL,EAAU0G,KAAKxO,QAAU8H,EAAU0G,KAAKhO,MAGpD,OACI,kBAAC,WAAD,KACI,yBAAKW,UAAU,iBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAoC0V,EAAW,WAAQ,WAArE,4BAEJ,yBAAK1V,UAAU,aACX,0BAAMoH,SA1D9B,SAAkBhJ,GACdA,EAAEiJ,iBACEL,MAGJvI,EAAMqX,SAAQ,GAKlB,SAAkBnP,EAA4CoP,GAC1D,GAAI5I,EAAc,CACd,IAAMC,EAAMnI,IAAMqC,QAAQ,uFAAgD,CACtElC,SAAUH,IAAMI,SAASC,aAGzByQ,IAAW7B,IACX/Q,EClDT,SAAS6S,EAA0BC,EAAgBlS,EAAWqJ,GACjE,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACEC,+BADF,sBAC6C4S,GAAa,CAC3D5Y,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAGpBT,MAAK,SAAAC,GACF,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS6S,EAA0BC,EAAUlS,EAAMqJ,OAU9D9J,MAAK,SAAAS,GACFlI,QAAQC,IAAIiI,GACZkB,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,4CAA4B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,SAE9IpB,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,qDAAkC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC/I1J,QAAQC,IAAI,aDaHka,CAA0BrP,EAAUkP,UAAUxW,MAAO,CAC1D6W,QAASvP,EAAU0G,KAAKhO,MACxB8W,QAASxP,EAAU2G,YAAYjO,MAC/B+W,WAAY,IACbhJ,IAGPvR,QAAQC,IAAI,CACRuR,KAAM1G,EAAU0G,KAAKhO,MACrBiO,YAAa3G,EAAU2G,YAAYjO,MACnCwW,UAAWlP,EAAUkP,YAGzB1S,EAASkR,MACTlR,EAASmR,GAA0Cd,GAAwC6C,QAxB/FC,CAAS3P,EADmB+O,EAAYxB,GAA2BE,OAqD3C,yBAAKpU,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAOsH,EAAU0G,KAAKhO,MACtBU,MAAM,OACNR,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,SACNc,YAAY,MAEpB,yBAAKF,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,oBACVY,MAAM,cACNV,MAAOsH,EAAU2G,YAAYjO,MAC7BE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,kBACNc,YAAY,MAGpB,yBAAKF,UAAU,YACf,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CAAgBb,GAAG,kBACfY,MAAM,YACNV,MAAOsH,EAAUkP,UAAUxW,MAC3BE,SAAUuH,EACVlH,UAAU,EACVR,MAAM,oBACNnC,QAAS,CACL,CACIoQ,KAAM,6BACNhO,MAAO,SAEX,CACIgO,KAAM,2BACNhO,MAAO,WAEX,CACIgO,KAAM,wCACNhO,MAAO,gBAOvB,4BAAQW,UAAU,iBAAiBiH,QAAS,kBAtEpExI,EAAMqX,SAAQ,QACd3S,EAASmR,GAA0Cd,GAAwC6C,SAqEnE,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCAlEhCgH,IACN,WAAa,KAiEN,mB,SE/InBuP,GAA4B,oBAC5BC,GAA6B,qBAC7BC,GAA+B,uBAE/BC,GAA4C,oCAC5CC,GAA2C,mCAC3ChV,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBAC3BoW,GAAmC,2BACnCC,GAAgC,wBAQtC,SAAS9U,GAAiB+U,GAC7B,MAAO,CACHxX,KAAMiB,GACNuW,uBAID,SAAS7U,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAQZ,SAASkY,KACZ,MAAO,CAAEzX,KAAMsX,IAGZ,SAASI,GAAqBF,GACjC,MAAO,CAAExX,KAAMiX,GAAmBO,oBAAqBA,GCnCpD,SAASG,GAAqB9T,GACjC,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAOE,MAAM,GAAD,OACGC,+BADH,yBACyD,CACrDhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS8T,GAAqB9T,OAUzCG,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAAS4T,MAEThT,EAAKhG,KAAKmZ,UAAUjK,KAAI,SAAC3B,EAAU4B,GAC/B,IAAIiK,EAAIC,OAAOC,OAAO/L,GAClBgM,EAAIF,OAAOG,KAAKjM,GACpB,OAAO6L,EAAElK,KAAI,SAACuK,EAAYpK,GAEtB,OAAOgK,OAAOC,OAAOG,GAAOvK,KAAI,SAACwK,GAG7B,OADUL,OAAOC,OAAOI,GACbxK,KAAI,SAACyK,GACZ,OAAOA,EAAMzK,KAAI,SAAC0K,GAEd,GADA9b,QAAQC,IAAI6b,GACS,IAAjBA,EAAM7X,OAAa,CACnB,IAAIyN,EAA0B,CAC1BqK,WAAYN,EAAE,GACdO,WAAYF,EAAM,GAClBG,SAAUH,EAAM,IAEpBxU,EAAS6T,GAAqBzJ,IAElC,OAAOoK,oBAO9BxT,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,Y,sKC1Dbic,GAPC,SAAC,GAAD,IAAGzY,EAAH,EAAGA,KAAMkI,EAAT,EAASA,MAAT,OACZ,yBAAKxH,UAAU,eACX,kBAAC,KAAD,CAAcV,KAAMA,EAAMkI,MAAOA,EAAOwQ,OAAQ,IAAKC,MAAO,MAC5D,uDCJD,SAASC,GAAc/U,GAC1B,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,4CAC4E,CACxEhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS+U,GAAc/U,OAUlCG,MAAM,SAAAS,GACHd,aAAaY,WAAW,eACxBZ,aAAae,QAAQ,cAAeD,EAAKhG,KAAKoa,gBAEjDhU,OAAM,SAAAtF,GACHhD,QAAQC,IAAI,YChCrB,SAASsc,GAAgBjV,GAC5B,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,uBACuD,CACnDhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASiV,GAAgBjV,OAUpCG,MAAM,SAAAS,GACHd,aAAaY,WAAW,iBACxBZ,aAAae,QAAQ,gBAAiBD,EAAKhG,KAAKiE,SAEnDmC,OAAM,SAAAtF,GACHhD,QAAQC,IAAI,YChCrB,SAASuc,GAAelV,GAC3B,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,sBACsD,CAClDhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASkV,GAAelV,OAUnCG,MAAM,SAAAS,GACHd,aAAaY,WAAW,gBACxBZ,aAAae,QAAQ,eAAgBD,EAAKhG,KAAKiE,SAElDmC,OAAM,SAAAtF,GACHhD,QAAQC,IAAI,YChCrB,SAASwc,GAAgBnV,GAC5B,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,uBACuD,CACnDhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASmV,GAAgBnV,OAUpCG,MAAM,SAAAS,GACHd,aAAaY,WAAW,iBACxBZ,aAAae,QAAQ,gBAAiBD,EAAKhG,KAAKiE,SAEnDmC,OAAM,SAAAtF,GACHhD,QAAQC,IAAI,YCjCrB,IAAMyc,GAAqB,aACrBC,GAAsB,cACtBC,GAAwB,gBAExBC,GAAqC,6BACrCC,GAAoC,4BACpChX,GAAiC,yBACjCrB,GAA6B,qBAC7BC,GAA6B,qBAC7BC,GAA2B,mBAC3BoY,GAA4B,oBAC5BC,GAAyB,iBAE/B,SAAS/W,KACZ,MAAO,CACHxC,KAAMgB,IAIP,SAASyB,GAAiB+W,GAC7B,MAAO,CACHxZ,KAAMiB,GACNuY,UAID,SAAS7W,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAYZ,SAASka,GAAUD,GACtB,MAAO,CAAExZ,KAAMiZ,GAAYO,OAAQA,GAGhC,SAASE,GAAWF,GACvB,MAAO,CAAExZ,KAAMkZ,GAAaM,OAAQA,GAGjC,SAASG,GAAa9Z,GACzB,MAAO,CAAEG,KAAMmZ,GAAetZ,GAAIA,GAO/B,SAAS+Z,KACZ,MAAO,CAAE5Z,KAAMqZ,IAGZ,SAAS7V,GAAqBzD,GACjC,MAAO,CAAEC,KAAMqC,GAAwBtC,MAAOA,GC5D3C,SAAS8Z,GAAehW,GAC3B,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,iBACiD,CAC7ChG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASgW,GAAehW,OAUnCG,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1Bd,aAAaY,WAAW,gBACxBZ,aAAae,QAAQ,eAAgBD,EAAKhG,KAAK+a,WAElD3U,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCpCrB,IAAMsd,GAAsB,cACtBC,GAAuB,eACvBC,GAAyB,iBAEzBC,GAAsC,8BACtCC,GAAqC,6BACrC7X,GAAiC,yBACjCrB,GAA6B,qBAC7BC,GAA6B,qBAC7BC,GAA2B,mBAC3BiZ,GAA6B,qBAC7BC,GAA0B,kBAEhC,SAAS5X,KACZ,MAAO,CACHxC,KAAMgB,IAIP,SAASyB,GAAiB4X,GAC7B,MAAO,CACHra,KAAMiB,GACNoZ,WAID,SAAS1X,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAYZ,SAAS+a,GAAWD,GACvB,MAAO,CAAEra,KAAM8Z,GAAaO,QAASA,GAGlC,SAASE,GAAYF,GACxB,MAAO,CAAEra,KAAM+Z,GAAcM,QAASA,GAGnC,SAASG,GAAc3a,GAC1B,MAAO,CAAEG,KAAMga,GAAgBna,GAAIA,GAGhC,SAAS4a,GAAsBJ,GAClC,MAAO,CAAEra,KAAMia,GAA6BI,QAASA,GAGlD,SAASK,KACZ,MAAO,CAAE1a,KAAMka,IAGZ,SAAS1W,GAAqBzD,GACjC,MAAO,CAAEC,KAAMqC,GAAwBtC,MAAOA,GC5D3C,SAAS4a,GAAgB9W,GAC5B,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,kBACkD,CAC9ChG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS8W,GAAgB9W,OAUpCG,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1Bd,aAAaY,WAAW,iBACxBZ,aAAae,QAAQ,gBAAiBD,EAAKhG,KAAK4b,YAEnDxV,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCE5B,ICtBYoe,GD+OGC,GAzNQ,WAAO,IACpBC,EAAsBC,+BAAtBD,kBADmB,EAGC1b,oBAAS,GAHV,mBAGpB4b,EAHoB,KAGZC,EAHY,KAS3B,SAASC,EAAenb,GACtBkb,GAAU,GAGZ,IAAM/E,EAA8D5N,aAAY,SAACC,GAAD,OAAuBA,EAAM2N,2BAEzGxJ,EAAO/I,aAAaC,QAAQ,iBAC3BuX,EAA8B,EAEtB,OAATzO,IACFyO,EAAsBtK,SAASnE,IAGjC,IAAI0O,EAAOzX,aAAaC,QAAQ,gBAC3ByX,EAA6B,EAErB,OAATD,IACFC,EAAqBxK,SAASuK,IAGhC,IAAIE,EAAO3X,aAAaC,QAAQ,iBAC3B2X,EAA8B,EAEtB,OAATD,IACFC,EAAsB1K,SAASyK,IAGjC,IAAIE,EAAO7X,aAAaC,QAAQ,gBAC3B6X,EAA6B,EAErB,OAATD,IACFC,EAAqB5K,SAAS2K,IAGhC,IAAIE,EAAO/X,aAAaC,QAAQ,iBAC3B+X,EAA8B,EAEtB,OAATD,IACFC,EAAsB9K,SAAS6K,IAGjC,IAAIE,EAAOjY,aAAaC,QAAQ,eAC3BiV,EAAsB,EAEd,OAAT+C,IACF/C,EAAcgD,WAAWD,IAK3B,IAAME,EAAiDxT,aAAY,SAACC,GAAD,OAAuBA,EAAMuT,yBAChGvf,QAAQC,IAAIsf,GAEZ,IAAIrX,EAAiB,GAErBqX,EAAsBA,sBAAsBnO,KAAI,SAAC3B,EAAK4B,GACpD,YAAYmO,IAAR/P,GAA4B,MAAPA,EAChBvH,EAAK8C,KAAK,CACfyU,GAAIpO,EACJqO,aAA4BF,IAAnB/P,EAAIsM,YAA+C,OAAnBtM,EAAIsM,WAAsBtM,EAAIsM,WAAa,GACpF4D,UAAW,IAAIhgB,KAAK8P,EAAIuM,YACxB4D,QAAS,IAAIjgB,KAAK8P,EAAIwM,UACtB4D,UAAU,IAGP,KAGT7f,QAAQC,IAAIiI,GAEZ,IAAMZ,EAA0BqD,cAChCrD,EAASmQ,GAAkB,iBAAa,KAExC,IAAIqI,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBA2CzC,OA1CAyI,qBAAU,WACR,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAChH,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACxBD,EAA2BC,GAC7BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAaXuL,wBAAasM,GAAc/U,IAC3ByI,wBAAawM,GAAgBjV,IAC7ByI,wBAAayM,GAAelV,IAC5ByI,wBAAa0M,GAAgBnV,IAC7ByI,wBAAauN,GAAehW,IAC5ByI,wBAAaqO,GAAgB9W,IAC7ByI,wBAAaqL,GAAqB9T,QAGrC,CAACA,EAAUwY,EAAc3Y,IAG1BoX,EACE,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACP,kBAAC,IAAD,MACA,wBAAIxH,UAAU,yBAAd,kBAEA,yBAAKA,UAAU,OACb,kBAAC,GAAD,CAAS6K,MAAM,mBAAW6I,KAAI,UAAKqH,GAAsBnQ,KAAK,OAAO6I,MAAM,YAC3E,kBAAC,GAAD,CAAS5I,MAAM,gBAAW6I,KAAI,UAAKuH,GAAuBrQ,KAAK,OAAO6I,MAAM,WAC5E,kBAAC,GAAD,CAAS5I,MAAM,YAAY6I,KAAI,WAAMyE,GAAevN,KAAK,cAAc6I,MAAM,aAG/E,yBAAKzT,UAAU,OACb,kBAAC,GAAD,CAAS6K,MAAM,mBAAW6I,KAAI,UAAK+G,GAAuB7P,KAAK,OAAO6I,MAAM,YAC5E,kBAAC,GAAD,CAAS5I,MAAM,kBAAY6I,KAAI,UAAKmH,GAAuBjQ,KAAK,OAAO6I,MAAM,WAC7E,kBAAC,GAAD,CAAS5I,MAAM,iBAAY6I,KAAI,UAAKiH,GAAsB/P,KAAK,OAAO6I,MAAM,YAG9E,yBAAKzT,UAAU,OACb,yBAAKA,UAAU,0BACb,4BACEA,UAAU,4BACViH,QAAS,WACP9D,EAASmR,GAA0Cd,GAAwCoC,SAvJvG2E,GAAU,KA2JA,uBAAGva,UAAU,mBAPf,8BAaJ,kBAAC,KAAD,CACE/B,KAAMqc,EACN6B,QAAS,kBAAM5B,GAAU,IACzB6B,sBAAoB,GAEpB,oCAEI,WACE,GAAK5G,EAAwBG,oBAAsBnC,GAAwCoC,OACzF,OAAO,kBAACyG,GAAD,CAAkBvG,QAAS0E,IAFtC,KAUN,yBAAKxa,UAAU,OACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAd,qCAEF,yBAAKA,UAAU,aACb,kBAAC,KAAD,CAAmBgY,OAAO,QAAQsE,aAAc,IAAI9gB,KAAQ+gB,cAAe,CACzEC,WAAYzY,EAAM0Y,OAAQ,CACxBtd,GAAI,KACJ+W,QAAS,CAAE7I,KAAM,WACjBqP,SAAU,CAAErP,KAAM,YAClBsP,UAAW,CAAEtP,KAAM,aACnBuP,QAAS,CAAEvP,KAAM,cAInB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAeiI,OAAO,WAAWuH,UAAU,QAAQC,QAAQ,UAC3D,kBAAC,KAAD,CAAexH,OAAO,OAAOuH,UAAU,QAAQC,QAAQ,UACvD,kBAAC,KAAD,CAAexH,OAAO,QAAQyH,aAAa,KAE7C,kBAAC,KAAD,CAAQC,SAAU,CAACC,KAAKC,KAAMC,KAAUC,KAAOC,SAhBnD,W,SCpNFnD,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,2BAAAA,I,4BAAAA,Q,qEC+JGoD,OAtKf,SAAqB7e,GAEnB,IAAM0E,EAAWqD,cAEX+W,EAAQ3V,aAAY,SAACC,GAAD,OAAWA,EAAM0V,SACrCC,EAAmC5V,aAAY,SAACC,GAAD,OAAWA,EAAM2V,oCAChE/W,EAAUC,cAGV+W,EAAQF,EAAMG,SAEdzgB,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KA8C3ByL,EAAU,CACd,CACEC,UAAW,WACXjL,KAAM,kCACNkL,OAAQC,yBAEV,CACEF,UAAW,QACXjL,KAAM,QACNkL,OAAQC,yBAEV,CACEF,UAAW,YACXjL,KAAM,UACNkL,OAAQC,yBAEV,CACEF,UAAW,WACXjL,KAAM,SACNkL,OAAQC,yBAEV,CACEF,UAAW,QACXjL,KAAM,oCACNkL,OAAQC,yBAEV,CACEF,UAAW,MACXjL,KAAM,yBACNoL,UArDJ,SAA4BC,EAAMC,GAChC,IAAI1O,EAAQ,EACR2O,EAAgB,EAapB,OAZAzB,EAAiC0B,iBAAiBjS,KAAI,SAAC3B,EAAK4B,GAI1D,OAHI5B,EAAI6T,aAAeH,EAAI7f,IACzBmR,IAEKhF,KAETkS,EAAiC4B,UAAUnS,KAAI,SAAC3B,EAAK4B,GAInD,OAHI5B,EAAI6T,aAAeH,EAAI7f,IACzB8f,IAEK3T,KAGP,0BAAMrE,QAAS,WACboY,EAAgBL,EAAI7f,MAEpB,4BAAQoI,MAAQ,CAAEC,MAAO,MAAO8X,OAAQ,YAAeL,EAAvD,IAAuE3O,MAoC3E,CACEqO,UAAW,cACXjL,KAAM,GACNoL,UAnEJ,SAAoBC,EAAMC,GACxB,OACE,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACtDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClC7b,EAASL,GAAqBoX,GAAuBsF,SAFvD,yBAmEF,CACEb,UAAW,UACXjL,KAAM,GACNoL,UAjFJ,SAAsBC,EAAMC,GAC1B,OACE,4BAAQ1f,KAAK,SAASU,UAAU,iBAAiBiH,QAAS,WACpDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GACnC7b,EAASL,GAAqBoX,GAAuBuF,WAFvD,aAsGEJ,EAAkB,SAACF,GAEvBlc,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAcmb,EAAWvjB,YAC9C6K,EAAQI,KAAK,CACXmB,SAJS,6BASb,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACE0X,WACEC,KAAkB1iB,KAlCP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aC9IHI,I,OAA2B,oBAC3BC,GAA8B,sBAEpC,SAASC,GAAgBtV,EAAe6I,GAC3C,MAAO,CAAEpU,KAAM2gB,GAAkBvM,KAAMA,EAAM7I,MAAOA,GCcjD,SAASuV,GAAWjd,GACvB,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAOE,MAAM,GAAD,OACGC,+BADH,iBACiD,CAC7ChG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASid,GAAWjd,OAU/BG,MAAM,SAAAS,GACHZ,EAASpB,EAAiBgC,IAC1BZ,EAASf,KACTvG,QAAQC,IAAIiI,EAAKhG,KAAK2f,UACtB3Z,EAAKhG,KAAK2f,SAASzQ,KAAI,SAAC3B,EAAU4B,GAC9B,IAAIlL,EAAa,CACb7C,GAAImM,EAAInM,GACRoF,SAAU+G,EAAI/G,SACd8b,MAAO/U,EAAI+U,MACX7b,SAAU8G,EAAI9G,SACdf,OAAQ6H,EAAI7H,OACZ6c,UAAWhV,EAAIgV,UACfC,SAAUjV,EAAIiV,SACdC,YAAalV,EAAIkV,YACjBzb,kBAAmBuG,EAAIvG,kBACvB0b,IAAKnV,EAAImV,IACTC,MAAOpV,EAAIoV,MACXC,QAASrV,EAAIqV,QACbC,QAAStV,EAAIsV,QACbC,WAAYvV,EAAIuV,YAGpB,OACW1d,EADG,IAAV+J,EACgB/K,EAAeH,GAGfS,EAAWT,UAItCmC,OAAM,SAAAtF,GACHsE,EAASlB,EAAepD,IACxBhD,QAAQC,IAAI,YCzErB,SAASglB,GAAY/c,EAAWqJ,GACnC,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,KACTsB,MAAM,GAAD,OACMC,+BADN,iBACoD,CAC7ChG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS2d,GAAY/c,EAAMqJ,OAUtC9J,MAAM,SAAAe,GACHxI,QAAQC,IAAIuI,GACZY,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,6DAAwC5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,aAChI8a,GAAWjd,MAEdgB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,sDAAqC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,iBCxBpI,SAASyb,GAAY5d,EAAgBhE,GACxC,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,iBACwClE,GAAM,CAC3C9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS4d,GAAY5d,EAAUhE,OAU1CmE,MAAM,SAAAgI,GACHzP,QAAQC,IAAIwP,GACZnI,EAASpB,EAAiBuJ,IAC1BnI,EAASf,KACT,IAAIJ,EAAa,CACb7C,GAAImM,EAAInM,GACRoF,SAAU+G,EAAI/G,SACd8b,MAAO/U,EAAI+U,MACX7b,SAAU,GACVf,OAAQ6H,EAAI7H,OACZ6c,UAAWhV,EAAIgV,UACfC,SAAUjV,EAAIiV,SACdC,YAAalV,EAAIkV,YACjBzb,kBAAmBuG,EAAIvG,kBACvB0b,IAAKnV,EAAImV,IACTC,MAAOpV,EAAIoV,MACXC,QAASrV,EAAIqV,QACbC,QAAStV,EAAIsV,QACbC,WAAYvV,EAAIuV,YAGpB1d,EAAShB,EAAeH,OAE3BmC,OAAM,SAAAtF,GACHsE,EAASlB,EAAepD,IACxBhD,QAAQC,IAAI,YClErB,SAASklB,GAAW7hB,EAAS4E,EAAWqJ,GAC3C,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,KACTsB,MAAM,GAAD,OACMC,+BADN,iBAC4ClE,GAAM,CAC3C9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS6d,GAAW7hB,EAAI4E,EAAMqJ,OAUzC9J,MAAM,SAAAe,GACHxI,QAAQC,IAAIuI,GACZxI,QAAQC,IAAIqD,GACZ8F,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,6DAAwC5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACvJwb,GAAY5d,EAAUhE,MAEzBgF,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOgD,EAAI,CAAE+F,OAAQ,sEAA8C5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC1J1J,QAAQC,IAAI,a,+NC2GbmlB,OAtIf,SAAqBxiB,GACnB,IAAM0E,EAA0BqD,cAC1B+W,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAC/Dvb,EAAqBub,EAAM2D,aACzBxL,EAAqB6H,EAAM5H,oBAAsBuE,GAAuBtE,OAEzE5T,IAAQ0T,IACX1T,EAAO,CAAE7C,GAAI,EAAGoF,SAAU,GAAI8b,MAAO,GAAI7b,SAAU,GAAIf,OAAQ,GAAI6c,UAAW,GAAIC,SAAU,GAAIE,IAAK,GAAIC,MAAO,GAAIC,QAAS,GAAIH,YAAa,GAAIzb,kBAAmB,GAAI8b,WAAY,GAAID,QAAS,IAP3I,MAUvBliB,mBAAS,CACzC6F,SAAU,CAAE1F,MAAO,GAAIQ,MAAO2C,EAAKuC,UACnC8b,MAAO,CAAExhB,MAAO,GAAIQ,MAAO2C,EAAKqe,OAChC7b,SAAU,CAAE3F,MAAO,GAAIQ,MAAO2C,EAAKwC,YAboB,mBAUlDmC,EAVkD,KAUvCC,EAVuC,KAiBzD,SAASE,EAAoBC,GAC3BH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UAoEjF,SAAS2H,IACP,OAAQL,EAAUpC,SAAS1F,OAAS8H,EAAU0Z,MAAMxhB,QAC9C8H,EAAU0Z,MAAMhhB,QAAUsH,EAAUpC,SAASlF,QAAUsH,EAAUnC,SAASnF,MAGlF,OACE,kBAAC,WAAD,KACE,yBAAKW,UAAU,iBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAoC0V,EAAW,WAAQ,WAArE,qBAEF,yBAAK1V,UAAU,aACb,0BAAMoH,SA/ElB,SAAkBhJ,GAChBA,EAAEiJ,iBACEL,MAGJvI,EAAMqX,SAAQ,GAKhB,SAAkBnP,EAA2BoP,GAC3C,GAAI/T,EAAM,CAER,IAAM7C,EAAK8F,IAAMqC,QAAQ,0EAA2C,CAClElC,SAAUH,IAAMI,SAASC,aAGvByQ,IAAWtT,EACbU,EAAS2d,GAAY,CACnBvc,SAAUoC,EAAUpC,SAASlF,MAC7BghB,MAAO1Z,EAAU0Z,MAAMhhB,MACvBmF,SAAUmC,EAAUnC,SAASnF,MAC7BihB,UAAW,KACXC,SAAU,KACVC,YAAa,KACbzb,kBAAmB,KACnB0b,IAAK,KACLC,MAAO,KACPC,QAAS,KACTQ,UAAW,CAAC,iBACXhiB,IAGI4W,IAAWrT,GAClBS,EAAS6d,GAAWhf,EAAK7C,GAAI,CAC3BoF,SAAUoC,EAAUpC,SAASlF,MAC7BghB,MAAO1Z,EAAU0Z,MAAMhhB,MACvBmF,SAAUmC,EAAUnC,SAASnF,MAC7BihB,UAAW,KACXC,SAAU,KACVC,YAAa,KACbzb,kBAAmB,KACnB0b,IAAK,KACLC,MAAO,KACPC,QAAS,KACTQ,UAAW,CAAC,iBACXhiB,IAGLgE,EAASgd,GAAgB,kBAAD,WAAkBxZ,EAAUpC,SAASlF,MAArC,mCACxB8D,EAASN,MACTM,EAASL,GAAqBoX,GAAuB7D,QA5CvDC,CAAS3P,EADmB+O,EAAYjT,EAAaC,MA0EzC,yBAAK1C,UAAU,YACb,yBAAKA,UAAU,uBACb,kBAAC,EAAD,CAAWb,GAAG,iBACZY,MAAM,WACNV,MAAOsH,EAAUpC,SAASlF,MAC1BE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,kCACNc,YAAY,MAEhB,yBAAKF,UAAU,uBACb,kBAAC,EAAD,CAAWb,GAAG,cACZY,MAAM,QACNV,MAAOsH,EAAU0Z,MAAMhhB,MACvBE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,QACNc,YAAY,OAGlB,4BAAQF,UAAU,iBAAiBiH,QAAS,kBA9CxDxI,EAAMqX,SAAQ,QACd3S,EAASL,GAAqBoX,GAAuB7D,SA6CzC,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCA1CpBgH,IACN,WAAa,KAyClB,mBC1IT,SAASoa,GAAWjiB,GACvB,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,KACTsB,MAAM,GAAD,OACEC,+BADF,iBACwClE,GAAM,CAC3C9B,OAAQ,SACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI3CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASie,GAAWjiB,OAU/BmE,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,MAEfI,OAAM,SAAAtF,GACHsE,EAASlB,EAAepD,IACxBhD,QAAQC,IAAI,aCwHbulB,OAhJf,SAA2B5iB,GACzB,IAAM0E,EAA0BqD,cAC1B+W,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAC/Dvb,EAAqBub,EAAM2D,aACzBxL,EAAqB6H,EAAM5H,oBAAsBuE,GAAuBtE,OAM9E,SAASU,EAAS3P,EAAgBoP,GAChC,IAAM5W,EAAK8F,IAAMqC,QAAQ,0EAA2C,CAClElC,SAAUH,IAAMI,SAASC,aAGvBtD,IACFnG,QAAQC,IAAI,CACVyI,SAAUoC,EAAUpC,SACpB8b,MAAO1Z,EAAU0Z,MACjB7b,SAAU,KACV8b,UAAW,KACXC,SAAU,KACVC,YAAa,KACbzb,kBAAmB,KACnB0b,IAAK,KACLC,MAAO,KACPC,QAAS,KACTQ,UAAW,CAAC,kBAEVpL,IAAWtT,GACbU,EAAS2d,GAAY,CACnBvc,SAAUoC,EAAUpC,SACpB8b,MAAO1Z,EAAU0Z,MACjB7b,SAAU,KACV8b,UAAW,KACXC,SAAU,KACVC,YAAa,KACbzb,kBAAmB,KACnB0b,IAAK,KACLC,MAAO,KACPC,QAAS,KACTQ,UAAW,CAAC,iBACXhiB,KApCJ6C,IAAQ0T,IACX1T,EAAO,CAAE7C,GAAI,EAAGoF,SAAU,GAAI8b,MAAO,GAAI7b,SAAU,GAAIf,OAAQ,GAAI6c,UAAW,GAAIC,SAAU,GAAIE,IAAK,GAAIC,MAAO,GAAIC,QAAS,GAAIH,YAAa,GAAIzb,kBAAmB,GAAI8b,WAAY,GAAID,QAAS,IAPrI,MAwDjCliB,qBAxDiC,mBAwDxD4iB,EAxDwD,KAwD/CC,EAxD+C,KA6G/D,OACE,kBAAC,WAAD,KACE,yBAAKvhB,UAAU,iBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAoC0V,EAAW,WAAQ,WAArE,qBAEF,yBAAK1V,UAAU,aACb,0BAAMoH,SAxBK,SAAChJ,GACtBA,EAAEiJ,iBACF5I,EAAMqX,SAAQ,GACd,IAAM0L,EAAOF,EACPG,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,SAAUvjB,IA1CT,SAACwjB,GAA8B,IAAjBC,EAAgB,uDAAR,IACvChmB,QAAQC,IAAI,SACZ,IAAMwB,EAAUskB,EAAIE,MAAM,EAAGF,EAAIG,QAAQ,OAAO1Z,MAAMwZ,GACtDhmB,QAAQC,IAAIwB,GACZ,IAAM0kB,EAAOJ,EAAIE,MAAMF,EAAIG,QAAQ,MAAQ,GAAG1Z,MAAM,MAC9C4Z,EAAU,CAAC,WAAY,SAEvBC,EAAWF,EAAK/U,KAAI,SAAA+R,GACxB,IAAM3H,EAAS2H,EAAI3W,MAAMwZ,GAKzB,OAJmBI,EAAQE,QAAO,SAACC,EAAUC,EAAQC,GAEnD,OADAF,EAAIC,GAAUhL,EAAOiL,GACdF,IACN,OAGLvmB,QAAQC,IAAIomB,GACZA,EAASjV,KAAI,SAAC3B,EAAU4B,GACtB,GAAqB,KAAjB5B,EAAI/G,SAAiB,CACvB,IAAI4S,EAAI,CACJ5S,SAAU+G,EAAI/G,SACd8b,MAAO/U,EAAI+U,OAGfxkB,QAAQC,IAAIqb,GAEZb,EAASa,EADkB1U,GAE3BU,EAASgd,GAAgB,kBAAD,WAAkBhJ,EAAE5S,SAApB,mCACxBpB,EAASN,MACTM,EAASL,GAAqBoX,GAAuB7D,OAIvD,OAAO,KAYLkM,CADankB,EAAEqB,OAAOqG,SAI1B2b,EAAOe,WAAWhB,KAcN,yBAAKxhB,UAAU,cACb,2BAAOd,QAAQ,iBAAf,0BACA,2BACAI,KAAM,OACNmjB,OAAO,kBACPtjB,GAAG,UACHI,SAAU,SAACnB,GACTmjB,EAAWnjB,EAAEqB,OAAOijB,MAAM,QAI9B,yBAAK1iB,UAAU,cACb,uBAAGsM,KAAI,UAAKjJ,wBAAL,kBAAP,kBAEF,4BAAQrD,UAAU,iBAAiBiH,QAAS,kBArFxDxI,EAAMqX,SAAQ,QACd3S,EAASL,GAAqBoX,GAAuB7D,SAoFzC,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCAjFnCshB,EAAuB,GAAb,aAiFN,mBCjJHqB,GAA8D,sDAC9DC,GAA2D,mDAC3DC,GAAuD,+CACvDC,GAAwD,gDACxDC,GAA0D,kDAE1DC,GAAuE,+DACvEC,GAAsE,8DAGtEC,GAAkE,0DAClEC,GAA+D,uDAC/DC,GAA2D,mDAC3DC,GAA4D,oDAC5DC,GAA8D,sDAE9DC,GAA2E,mEAC3EC,GAA0E,kEAG1EC,GAAsE,8DACtEC,GAAmE,2DACnEC,GAA+D,uDAC/DC,GAAgE,wDAChEC,GAAkE,0DAElEC,GAA+E,uEAC/EC,GAA8E,sEAE9EpiB,GAAiC,yBACjCrB,GAA6B,qBAC7BC,GAA6B,qBAC7BC,GAA2B,mBAEjC,SAASsB,KACZ,MAAO,CACHxC,KAAMgB,IAIP,SAASyB,GAAiBiiB,GAC7B,MAAO,CACH1kB,KAAMiB,GACNyjB,mCAID,SAAS/hB,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAIZ,SAASiE,GAAqBzD,GACjC,MAAO,CAAEC,KAAMqC,GAAwBtC,MAAOA,GAK3C,SAAS4kB,GAA4CC,GACxD,MAAO,CAAE5kB,KAAMsjB,GAAkDsB,yCAA0CA,GAGxG,SAASC,KACZ,MAAO,CAAE7kB,KAAMqjB,IAGZ,SAASyB,GAAwCF,GACpD,MAAO,CAAE5kB,KAAMujB,GAA8CqB,yCAA0CA,GAWpG,SAASG,GAAmDH,GAC/D,MAAO,CAAE5kB,KAAM0jB,GAA8DkB,yCAA0CA,GAGpH,SAASI,KACZ,MAAO,CAAEhlB,KAAM2jB,IAKZ,SAASsB,GAA+CC,GAC3D,MAAO,CAAEllB,KAAM6jB,GAAsDqB,6CAA8CA,GAGhH,SAASC,KACZ,MAAO,CAAEnlB,KAAM4jB,IAGZ,SAASwB,GAA2CF,GACvD,MAAO,CAAEllB,KAAM8jB,GAAkDoB,6CAA8CA,GAG5G,SAASG,GAA4CH,GACxD,MAAO,CAAEllB,KAAM+jB,GAAmDmB,6CAA8CA,GAkB7G,SAASI,GAAkDC,GAC9D,MAAO,CAAEvlB,KAAMokB,GAA0DmB,iDAAkDA,GAGxH,SAASC,KACZ,MAAO,CAAExlB,KAAMmkB,IAGZ,SAASsB,GAA8CF,GAC1D,MAAO,CAAEvlB,KAAMqkB,GAAsDkB,iDAAkDA,GAepH,SAASG,KACZ,MAAO,CAAE1lB,KAAMykB,ICtIZ,SAASkB,GAAiC9hB,GAC7C,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAOE,MAAM,GAAD,OACGC,+BADH,2BAC2D,CACvDhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS8hB,GAAiC9hB,OAUrDG,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASghB,MACThhB,EAAS2hB,MACT3hB,EAASshB,MACT5oB,QAAQC,IAAIiI,EAAKhG,KAAKmnB,gCACtBnhB,EAAKhG,KAAKmnB,+BAA+BjY,KAAI,SAAC3B,EAAU4B,GACpD,IAAIiY,EAA+D,CAC/DhmB,GAAImM,EAAInM,GACRggB,WAAY7T,EAAI6T,WAChBiG,YAAa9Z,EAAI8Z,YACjBC,aAAc/Z,EAAI+Z,aAClBC,UAAWha,EAAIga,UACf/S,YAAYjH,EAAIiH,YAChBgT,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBC,cAAena,EAAIma,cACnBC,iBAAkBpa,EAAIoa,iBACtBjiB,OAAQ6H,EAAI7H,QAGhB,MAAmB,aAAf6H,EAAI7H,OAEON,EADG,IAAV+J,EACgB+W,GAA4CkB,GAG5Cf,GAAwCe,IAGxC,qBAAf7Z,EAAI7H,OAEEN,EADG,IAAV+J,EACgB0X,GAAkDO,GAGlDJ,GAA8CI,IAKvDhiB,EADG,IAAV+J,EACgBqX,GAA+CY,GAG/CT,GAA2CS,UAK1EhhB,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,Y,yBClE5B,IChBY6pB,GD2SGC,GA3RW,WACtB,IAAMziB,EAA0BqD,cAC1B+W,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAC7DngB,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzE4S,EAA2BtI,EAAMG,SAAS5d,OAJpB,EAKFpB,oBAAS,GALP,mBAKrBonB,EALqB,KAKdC,EALc,KAMpB3L,EAAsBC,+BAAtBD,kBANoB,EAOF1b,mBAAgB,IAPd,mBAOrB+e,EAPqB,KAOduI,EAPc,KAkC5BnqB,QAAQC,IAAI2hB,GAOZ,IA8DI9B,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBA4CzC,SAAS+iB,IACLF,GAAS,GAGb,SAASG,EAAc7mB,GACnB0mB,EAAS1mB,GAIb,OApDAsM,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAQbuL,wBAAawU,GAAWjd,IACxByI,wBAAaqZ,GAAiC9hB,QAGvD,CAACA,EAAUwY,EAAc3Y,IAE5B2I,qBAAU,WACNxI,EAASN,MACTM,EAASmQ,GAAkB,kBAAa,mBACzC,CAAClW,EAAK+V,KAAMhQ,IAkBXiX,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI9B,kBAAC,WAAD,KACN,kBAAC,IAAD,MACI,wBAAIxH,UAAU,yBAAd,mBACA,uBAAGA,UAAU,QAAb,sBACA,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,kBAAY6I,KAAI,UAAKmS,GAAoBjb,KAAK,OAAO6I,MAAM,YAC1E,yBAAKzT,UAAU,sBAGf,yBAAKA,UAAU,qBACX,6BACI,wBAAIA,UAAU,mCAAd,WAEJ,6BACI,kBAAC,KAAD,CACImmB,SAAS,kCACT/mB,MAAM,GACNgnB,aAhLJ,SAACriB,EAAWsiB,GAC5B,GAAoB,IAAhBtiB,EAAKjE,OACLmF,IAAMpG,MAAM,4CAA2B,CACnCuG,SAAUH,IAAMI,SAASC,WACzBC,UAAW,UAGd,CAED,IADA,IAAI+gB,GAAW,EACNpZ,EAAQ,EAAGA,EAAQnJ,EAAKjE,OAAQoN,IAAS,CAC9C,IAAM5B,EAAMvH,EAAKmJ,GACjB,GAAqB,OAAjB5B,EAAI/G,UAAsC,KAAjB+G,EAAI/G,UAAiC,OAAd+G,EAAI+U,OAAgC,KAAd/U,EAAI+U,OAAiC,OAAjB/U,EAAI9G,UAAsC,KAAjB8G,EAAI9G,SAAmB,CAC1IS,IAAMpG,MAAN,oCAA4BqO,EAAQ,GAAK,CACrC9H,SAAUH,IAAMI,SAASC,WACzBC,UAAW,MAEf+gB,GAAW,EACX,QAIS,IAAbA,GACAN,EAASjiB,KA2JGwiB,cA1FC,CACvBlE,QAAQ,EACRmE,eAAe,EACfC,gBAAgB,EAChBC,gBAAiB,SAACrE,GAAD,OAAiBA,EAAOsE,cAAcC,QAAQ,MAAO,WA0F5D,yBAAK5mB,UAAU,wCACX,4BAAQV,KAAK,SAASU,UAAS,2CAzJH,IAAjByd,EAAM3d,OACZ,WAAa,IAwJyEmH,QArJtF,WAEjB,IAAgB,KADwB,IAAjBwW,EAAM3d,QACN,CACnB,IAAMX,EAAK8F,IAAMqC,QAAQ,0EAA2C,CAChElC,SAAUH,IAAMI,SAASC,aAE7BnC,EErEL,SAAS0jB,EAAa9iB,EAAW+iB,EAAY1Z,GAChD,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,KACTsB,MAAM,GAAD,OACMC,+BADN,iBACoD,CAC7ChG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS0jB,EAAa9iB,EAAM+iB,EAAK1Z,OAU5C9J,MAAM,SAAAe,GACHxI,QAAQC,IAAIuI,GACZxI,QAAQC,IAAIgrB,GACRA,EAAIhnB,OAAS,EACbqD,EAAS0jB,EAAa,CAClBtiB,SAAUuiB,EAAI,GAAGviB,SACjB8b,MAAOyG,EAAI,GAAGzG,MACd7b,SAAUsiB,EAAI,GAAGtiB,SACjB8b,UAAW,KACXC,SAAU,KACVC,YAAa,KACbzb,kBAAmB,KACnB0b,IAAK,KACLC,MAAO,KACPC,QAAS,KACTQ,UAAW,CAAC,iBACX2F,EAAIhF,MAAM,EAAGgF,EAAIhnB,QAASsN,IAEX,IAAf0Z,EAAIhnB,QACTqD,EAAS2d,GAAY,CACjBvc,SAAUuiB,EAAI,GAAGviB,SACjB8b,MAAOyG,EAAI,GAAGzG,MACd7b,SAAUsiB,EAAI,GAAGtiB,SACjB8b,UAAW,KACXC,SAAU,KACVC,YAAa,KACbzb,kBAAmB,KACnB0b,IAAK,KACLC,MAAO,KACPC,QAAS,KACTQ,UAAW,CAAC,iBACX/T,OAGZjJ,OAAM,SAAAtF,QFIEgoB,CAAa,CAClBtiB,SAAUkZ,EAAM,GAAGlZ,SACnB8b,MAAO5C,EAAM,GAAG4C,MAChB7b,SAAUiZ,EAAM,GAAGjZ,SACnB8b,UAAW,KACXC,SAAU,KACVC,YAAa,KACbzb,kBAAmB,KACnB0b,IAAK,KACLC,MAAO,KACPC,QAAS,KACTQ,UAAW,CAAC,iBACX1D,EAAMqE,MAAM,EAAGrE,EAAM3d,QAASX,OAmI3B,cAIR,yBAAKa,UAAU,YACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,gCACA,yBAAKA,UAAU,kBAQX,4BAAQA,UAAU,4BAA4BiH,QAAS,WACnD9D,EAASL,GAAqBoX,GAAuBtE,SACrDqQ,MAEA,uBAAGjmB,UAAU,mBAJjB,8BASR,yBAAKA,UAAU,aACX,kBAAC,GAAD,CACIuf,SA5E5B,SAAsBvd,GAClBmB,EAASP,GAAmBZ,IAC5BikB,IACA9iB,EAASL,GAAqBoX,GAAuB7D,cAiFjD,kBAAC,KAAD,CACIpY,KAAM6nB,EACN3J,QAAS,kBAAM4J,GAAS,IACxB3J,sBAAoB,GAEpB,oCAGiBmB,EAAM5H,oBAAsBuE,GAAuBtE,QAAa2H,EAAM2D,cAAkB3D,EAAM5H,oBAAsBuE,GAAuBsF,KACrI,kBAAC,GAAD,CAAa1J,QAASoQ,IAGxB3I,EAAM5H,oBAAsBuE,GAAuB6M,WACjD,kBAAC,GAAD,CAAmBjR,QAASoQ,SADlC,IAQjB,WACI,GAAK3I,EAAM2D,cAAkB3D,EAAM5H,oBAAsBuE,GAAuBuF,OAC5E,OACI,kBAAC,KAAD,CACIxhB,KAAM6nB,EACN3J,QAAS,kBAAM4J,GAAS,IACxB3J,sBAAoB,GAEpB,yBAAKpc,UAAU,cAAcb,GAAG,eAC5B,yBAAKa,UAAU,eAAf,iBAGA,yBAAKA,UAAU,iBACX,4BAAQV,KAAK,SACTU,UAAU,iBACViH,QAAS,WtD1L9C,IAAuB9H,EsD2LuBoe,EAAM2D,eAGX/d,EAASie,GAAW7D,EAAM2D,aAAa/hB,KACvCgE,EAASgd,GAAgB,kBAAD,UAAiB5C,EAAM2D,aAAa3c,SAApC,6CACxBpB,GtDhMlBhE,EsDgMyCoe,EAAM2D,aAAa/hB,GtD/L/E,CAAEG,KAAMyB,EAAgB5B,GAAIA,KsDgMSgE,EAASN,MACTkjB,GAAS,MAVjB,aAbxB,KG/QHiB,I,OAAsB,eACtBC,GAAuB,eACvBC,GAAyB,iBACzBC,GAAgC,wBAChCC,GAAsC,8BACtCC,GAAqC,6BACrC1lB,GAAiC,yBAkBvC,SAAS2lB,GAAsBC,GAClC,MAAO,CAAEjoB,KAAM8nB,GAA6BG,QAASA,GAGlD,SAASC,KACZ,MAAO,CAAEloB,KAAM+nB,IAGZ,SAASvkB,GAAqBzD,GACjC,MAAO,CAAEC,KAAMqC,GAAwBtC,MAAOA,I,SFxBtCsmB,O,eAAAA,I,mBAAAA,I,gBAAAA,Q,mBGAN5hB,GAAO,CACT,CACI,GAAM,EACN,WAAc,OACd,YAAe,8BACf,SAAY,wBACZ,YAAe,GAEnB,CACI,GAAM,EACN,WAAc,OACd,YAAe,8BACf,SAAY,wBACZ,YAAe,GAEnB,CACI,GAAM,EACN,WAAc,OACd,YAAe,8BACf,SAAY,wBACZ,YAAe,MAiDR0jB,OA7Cf,SAAsBhpB,GAClB,IAAMgI,EAAUC,cAEVmK,EAAc,WAEhBpK,EAAQI,KADG,qBAIT6gB,EAA0C3jB,GAAKkJ,KAAI,SAAAsa,GACrD,OAAKA,EACG,wBAAIvnB,UAAS,YACjBiH,QAAS4J,EACTD,IAAG,kBAAa2W,EAAQpoB,KACxB,wBAAIwoB,MAAM,OAAOJ,EAAQpoB,IACzB,4BAAKooB,EAAQ3P,YACb,4BAAK2P,EAAQhV,aACb,4BAAKgV,EAAQhY,UACb,4BACI,kBAACqY,GAAA,EAAD,CAAYzoB,GAAIooB,EAAQ3P,WAAYiQ,OAAQN,EAAQO,gBATrC,QAe3B,OACI,yBAAK9nB,UAAU,4BACX,2BAAOA,UAAU,SACb,2BAAOA,UAAU,eACb,4BACI,wBAAI2nB,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,kBACA,wBAAIA,MAAM,OAAV,oBACA,wBAAIA,MAAM,OAAV,kBACA,wBAAIA,MAAM,OAAV,yBAGR,+BACKD,MChDd,SAASK,GAAU5kB,GACtB,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,0BAC0D,CACtDhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS4kB,GAAU5kB,OAU9BG,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EtBbL,CAAE7D,KAAMsZ,KsBcH/c,QAAQC,IAAIiI,EAAKhG,KAAKiqB,SACtBjkB,EAAKhG,KAAKiqB,QAAQ/a,KAAI,SAAC3B,EAAU4B,GAC7B,IAAI4L,EAAiB,CACjB3Z,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrBC,eAAgB5c,EAAI4c,eACpBzV,MAAOnH,EAAImH,MACX0V,UAAW7c,EAAI6c,UACfC,WAAY9c,EAAI8c,WAChBC,WAAY/c,EAAI+c,WAChBC,YAAahd,EAAIgd,YACjBC,aAAcjd,EAAIid,aAClBhD,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBC,cAAena,EAAIma,cACnB+C,gBAAiBld,EAAIkd,gBACrBC,WAAYnd,EAAImd,WAChBC,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAIrB,OADA9sB,QAAQC,IAAIgd,GAED3V,EADG,IAAV+J,EtB3CjB,SAAuB4L,GAC1B,MAAO,CAAExZ,KAAMuZ,GAAgBC,OAAQA,GsB2CH8P,CAAc9P,GAGdC,GAAUD,OAGlC3V,EAAS9C,QAEZ8D,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCpE5B,IAyOe+sB,GAzOiB,WAAO,IAAD,EACJnqB,oBAAS,GADL,mBAC3BoqB,EAD2B,KAClBC,EADkB,KAE5B5lB,EAA0BqD,cAC1BwiB,EAA0BphB,aAAY,SAACC,GAAD,OAAuBA,EAAMmhB,YACnE5rB,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzE4S,EAA2BmD,EAASA,SAASlpB,OAC7C0d,EAAwE5V,aAAY,SAACC,GAAD,OAAuBA,EAAM2V,oCACjHwK,EAAwBpgB,aAAY,SAACC,GAAD,OAAuBA,EAAMmgB,WAEnErM,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAOb8C,EAAS4kB,GAAU5kB,OAG5B,CAACA,EAAUwY,EAAc3Y,IAvCM,IAyC1B6E,EAAUohB,cAAVphB,MACJ7F,EAAc,CAAE7C,GAAI,EAAGoF,SAAU,GAAI8b,MAAO,GAAI7b,SAAU,GAAIf,OAAQ,GAAI6c,UAAW,GAAIC,SAAU,GAAIE,IAAK,GAAIC,MAAO,GAAIC,QAAS,GAAIH,YAAa,GAAIzb,kBAAmB,GAAI8b,WAAY,GAAID,QAAS,QACxLvF,WAAVxT,IACP7F,EAAO6F,EAAM7F,MAGjBnG,QAAQC,IAAIkG,GAEZ,IAAIknB,EAAuB,GAC3B1L,EAAiC4B,UAAUnS,KAAI,SAAC3B,EAAK4B,GAIjD,OAHI5B,EAAI6T,aAAend,EAAK7C,IAAqB,aAAfmM,EAAI7H,QAClCylB,EAAWriB,KAAKyE,EAAIga,WAEjBha,KAEXzP,QAAQC,IAAIotB,GACZrtB,QAAQC,IAAIksB,EAAQA,SAEpB,IAAIzV,EAAc,GA0BlB,SAAS4W,EAAgB5B,GACrBpkB,EAASmkB,GAAsBC,IAC/BpkB,EAASL,GAAqB6iB,GAA0BtP,OAG5D,OA9BA6S,EAAWjc,KAAI,SAAC3B,EAAK4B,GACjB,OAAO8a,EAAQA,QAAQ/a,KAAI,SAAA6L,GAWvB,OAVIA,EAAO3Z,KAAOmM,IACdzP,QAAQC,IAAI,SACQ,KAAhByW,EACAA,EAAcA,EAAc,KAAMuG,EAAOzL,MAGzCkF,GAA4BuG,EAAOzL,KACnCxR,QAAQC,IAAI,WAGbgd,QAQfnN,qBAAU,WACNxI,EAASqkB,MACTrkB,EAASmQ,GAAkB,WAAY,WACxC,CAAClW,EAAK+V,KAAMhQ,IAQX,kBAAC,WAAD,KACI,wBAAInD,UAAU,yBAAd,mBACA,uBAAGA,UAAU,QAAb,sBACA,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,8BAAe6I,KAAI,UAAKmS,GAAoBjb,KAAK,MAAM6I,MAAM,YAC5E,kBAAC,GAAD,CAAS5I,MAAM,+BAAa6I,KAAI,UAAKmS,GAAoBjb,KAAK,MAAM6I,MAAM,aAG9E,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,WAAW8H,QAAS,YACxC,IAAZ6hB,GACAC,GAAW,IAEhBxhB,MAAO,CACNC,MAAOshB,EAAU,UAAY,YALjC,iCAQJ,yBAAK9oB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACzC,IAAZ6hB,GACAC,GAAW,IAGfxhB,MAAO,CACHC,MAAOshB,EAAU,UAAY,YANrC,iCAagB,IAAZA,EAEI,yBAAK9oB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,aACX,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,mCACf,yBAAKA,UAAU,cAAcb,GAAG,cAAcgI,IAAI,GAC9CD,IAAKlF,EAAK+C,qBAEd,yBAAK/E,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,kCACNc,YAAa8B,EAAKuC,aAG9B,yBAAKvE,UAAU,YACf,yBAAKA,UAAU,uBACP,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,eACNc,YAAa8B,EAAKwe,eAE1B,yBAAKxgB,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,oBACNc,YAAa8B,EAAKye,QAG9B,yBAAKzgB,UAAU,YACf,yBAAKA,UAAU,uBACP,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,oCACNc,YAAa8B,EAAK0e,SAE1B,yBAAK1gB,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,yBACNc,YAAa8B,EAAK2e,YAG9B,yBAAK3gB,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,IACXT,MAAM,wBACNc,YAAaqS,WAY7C,yBAAKvS,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,+BAEJ,yBAAKA,UAAU,aACX,kBAAC,GAAD,CACIuf,SAAU4J,UC9D3CC,OAxKf,SAAqB3qB,GAEnB,IAAM0E,EAAWqD,cAIXiX,EAFQ7V,aAAY,SAACC,GAAD,OAAWA,EAAM0V,SAEvB8L,SAEdpsB,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KAc3ByL,EAAU,CACd,CACEC,UAAW,WACXjL,KAAM,kCACNkL,OAAQC,yBAEV,CACEF,UAAW,QACXjL,KAAM,QACNkL,OAAQC,yBAEV,CACEF,UAAW,YACXjL,KAAM,UACNkL,OAAQC,yBAEV,CACEF,UAAW,WACXjL,KAAM,SACNkL,OAAQC,yBAEV,CACEF,UAAW,cACXjL,KAAM,eACNkL,OAAQC,yBAEV,CACEF,UAAW,MACXjL,KAAM,oBACNkL,OAAQC,yBAEV,CACEF,UAAW,QACXjL,KAAM,oCACNkL,OAAQC,yBAEV,CACEF,UAAW,UACXjL,KAAM,yBACNoL,UAjDJ,SAAsBC,EAAMC,GAC1B,OACE,4BAAQ1f,KAAK,SAASU,UAAU,iBAAiBiH,QAAS,WACpDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GACnC7b,EAASL,GAAqBoX,GAAuBuF,WAFvD,aAqHJ,OACE,kBAAC,WAAD,KACE,6BACE,kBAAC,sBAAD,CACEC,WACEC,KAAkB1iB,KAvEP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,a,OCxFT,SAASyJ,GAAWnmB,GACvB,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,iBACiD,CAC7ChG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASmmB,GAAWnmB,OAU/BG,MAAM,SAAAS,GACHZ,EAASpB,EAAiBgC,IAC1BZ,EAASb,KACTyB,EAAKhG,KAAKsrB,SAASpc,KAAI,SAAC3B,EAAU4B,GAC9B,IAAIlL,EAAa,CACb7C,GAAImM,EAAInM,GACRoF,SAAU+G,EAAI/G,SACd8b,MAAO/U,EAAI+U,MACX7b,SAAU,GACVf,OAAQ6H,EAAI7H,OACZ6c,UAAWhV,EAAIgV,UACfC,SAAUjV,EAAIiV,SACdC,YAAalV,EAAIkV,YACjBzb,kBAAmBuG,EAAIvG,kBACvB0b,IAAKnV,EAAImV,IACTC,MAAOpV,EAAIoV,MACXC,QAASrV,EAAIqV,QACbC,QAAStV,EAAIsV,QACbC,WAAYvV,EAAIuV,YAGpB,OACW1d,EADG,IAAV+J,EACgB7K,EAAeL,GAGfW,EAAWX,UAItCmC,OAAM,SAAAtF,GACHsE,EAASlB,EAAepD,IACxBhD,QAAQC,IAAI,YCxD5B,IAgIeytB,GAhIW,WACtB,IAAMpmB,EAA0BqD,cAC1B+W,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAC7DngB,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzE4S,EAA2BtI,EAAM8L,SAASvpB,OAJpB,EAKFpB,oBAAS,GALP,mBAKrBonB,EALqB,KAKdC,EALc,KAMpB3L,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAkDzC,OAhDAyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,EACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAGTuL,wBAAa0d,GAAWnmB,IACxBtH,QAAQC,IAAI,WAIhB8P,wBAAa0d,GAAWnmB,IACxBtH,QAAQC,IAAI,eAIrB,CAACqH,EAAUwY,EAAc3Y,IAE5B2I,qBAAU,WACNxI,EAASN,MACTM,EAASmQ,GAAkB,gBAAY,mBACxC,CAAClW,EAAK+V,KAAMhQ,IAaXiX,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI9B,kBAAC,WAAD,KACF,wBAAIxH,UAAU,yBAAd,iBACA,uBAAGA,UAAU,QAAb,sBACA,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,gBAAW6I,KAAI,UAAKmS,GAAoBjb,KAAK,OAAO6I,MAAM,aAG7E,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,+BAEJ,yBAAKA,UAAU,aACX,kBAAC,GAAD,CACIuf,SAnC5B,SAAsBvd,GAClBmB,EAASP,GAAmBZ,IAM5B+jB,GAAS,GAJT5iB,EAASL,GAAqBoX,GAAuB7D,cAuC7C,WACI,GAAKkH,EAAM2D,cAAkB3D,EAAM5H,oBAAsBuE,GAAuBuF,OAC5E,OACI,kBAAC,KAAD,CACIxhB,KAAM6nB,EACN3J,QAAS,kBAAM4J,GAAS,IACxB3J,sBAAoB,GAEpB,yBAAKpc,UAAU,cAAcb,GAAG,eAC5B,yBAAKa,UAAU,eAAf,iBAGA,yBAAKA,UAAU,iBACX,4BAAQV,KAAK,SACTU,UAAU,iBACViH,QAAS,W/Db9C,IAAuB9H,E+DcuBoe,EAAM2D,eAGX/d,EAASie,GAAW7D,EAAM2D,aAAa/hB,KACvCgE,EAASgd,GAAgB,iBAAD,UAAiB5C,EAAM2D,aAAa3c,SAApC,6CACxBpB,G/DnBlBhE,E+DmByCoe,EAAM2D,aAAa/hB,G/DlB/E,CAAEG,KAAM+B,EAAgBlC,GAAIA,K+DmBSgE,EAASN,MACTkjB,GAAS,MAVjB,aAbxB,KCpGVhiB,I,OAAO,CACT,CACI,GAAM,GACN,WAAc,OACd,YAAe,8BACf,SAAY,yBAEhB,CACI,GAAM,GACN,WAAc,OACd,YAAe,8BACf,SAAY,yBAEhB,CACI,GAAM,GACN,WAAc,OACd,YAAe,8BACf,SAAY,2BA8CLylB,OA1Cf,SAAwB/qB,GACpB,IAAM8e,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAC7D9W,EAAUC,cAEVmK,EAAc,WAEhBpK,EAAQI,KADG,qBAIT4iB,EAAuC1lB,GAAKkJ,KAAI,SAAAjL,GAClD,OAAKA,EACG,wBAAIhC,UAAS,oBAAgBud,EAAM2D,cAAgB3D,EAAM2D,aAAa/hB,KAAO6C,EAAK7C,GAAM,WAAa,IACzG8H,QAAS4J,EACTD,IAAG,eAAU5O,EAAK7C,KAClB,wBAAIwoB,MAAM,OAAO3lB,EAAK7C,IACtB,4BAAK6C,EAAK4V,YACV,4BAAK5V,EAAKuQ,aACV,4BAAKvQ,EAAKuN,WAPM,QAYxB,OACI,yBAAKvP,UAAU,4BACX,2BAAOA,UAAU,SACb,2BAAOA,UAAU,eACb,4BACI,wBAAI2nB,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,kBACA,wBAAIA,MAAM,OAAV,oBACA,wBAAIA,MAAM,OAAV,oBAGR,+BACK8B,MCqINC,GAzLiB,WAAO,IAAD,EACJhrB,oBAAS,GADL,mBAC3BoqB,EAD2B,KAClBC,EADkB,KAE5B5lB,EAA0BqD,cAC1B+W,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAC7DngB,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzE4S,EAA2BtI,EAAM8L,SAASvpB,OAC1C8gB,EAAmBrD,EAAMqD,QAC3B5e,EAAqBub,EAAM2D,aAC/BrlB,QAAQC,IAAIkG,GACPA,GAAiB,OAATA,IACTA,EAAO,CAAE7C,GAAI,EAAGoF,SAAU,GAAI8b,MAAO,GAAI7b,SAAU,GAAIf,OAAQ,GAAI6c,UAAW,GAAIC,SAAU,GAAIE,IAAK,GAAIC,MAAO,GAAIC,QAAS,GAAIH,YAAa,GAAIzb,kBAAmB,GAAI8b,WAAY,GAAID,QAAS,IAGtM,IAAI+I,EAA4B/I,EAAQgJ,MAAK,SAACvqB,GAAD,OAAoB,OAAT2C,GAAiB3C,EAAMF,KAAO6C,EAAK7C,MACvF0qB,EAAsB,GAS1B,SAASC,EAAa9nB,GAClBmB,EAASP,GAAmBZ,IAC5BmB,EAASL,GAAqBoX,GAAuB7D,OAGzD,YAbsBgF,WAAXsO,QAAmCtO,IAAXsO,IAC/BE,EAAcF,EAAOrJ,UAAY,IAAMqJ,EAAOpJ,UAGlD5U,qBAAU,WACNxI,EAASmQ,GAAkB,gBAAY,OACxC,CAAClW,EAAK+V,KAAMhQ,IAQX,kBAAC,WAAD,KACI,wBAAInD,UAAU,yBAAd,iBACA,uBAAGA,UAAU,QAAb,sBACA,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,8BAAe6I,KAAI,UAAKmS,GAAoBjb,KAAK,MAAM6I,MAAM,YAC5E,kBAAC,GAAD,CAAS5I,MAAM,+BAAa6I,KAAI,UAAKmS,GAAoBjb,KAAK,MAAM6I,MAAM,aAG9E,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,gBAAgB8H,QAAS,YAC7C,IAAZ6hB,GACAC,GAAW,IAEhBxhB,MAAO,CACNC,MAAOshB,EAAU,UAAY,YALjC,8BAOA,yBAAKvhB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBnB,EAAU,UAAY,cAG/C,yBAAK9oB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,kBAAkB8H,QAAS,YAC/C,IAAZ6hB,GACAC,GAAW,IAGfxhB,MAAO,CACHC,MAAOshB,EAAU,UAAY,YANrC,8BAQI,yBAAKvhB,MAAO,CACZyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBnB,EAAU,UAAY,gBAO3B,IAAZA,EAEI,yBAAK9oB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,aACX,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,mCACf,yBAAKA,UAAU,cAAcb,GAAG,cAAcgI,IAAI,GAC9CD,IAAI,mDAER,yBAAKlH,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,kCACNc,YAAa8B,EAAKuC,aAG9B,yBAAKvE,UAAU,YACf,yBAAKA,UAAU,uBACP,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,eACNc,YAAa8B,EAAKwe,eAE1B,yBAAKxgB,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,oBACNc,YAAa8B,EAAKye,QAG9B,yBAAKzgB,UAAU,YACf,yBAAKA,UAAU,uBACP,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,oCACNc,YAAa8B,EAAK0e,SAE1B,yBAAK1gB,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,yBACNc,YAAa8B,EAAK2e,YAG9B,yBAAK3gB,UAAU,YACf,yBAAKA,UAAU,uBACP,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,iBACNc,YAAa2pB,WAY7C,yBAAK7pB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,+BAEJ,yBAAKA,UAAU,aACX,kBAAC,GAAD,CACIuf,SAAUuK,UCR3CI,OAxKf,SAAoBzrB,GAElB,IAAM0E,EAAWqD,cAIXiX,EAFQ7V,aAAY,SAACC,GAAD,OAAWA,EAAM0V,SAEvBqD,QAEd3jB,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KAc3ByL,EAAU,CACd,CACEC,UAAW,WACXjL,KAAM,kCACNkL,OAAQC,yBAEV,CACEF,UAAW,QACXjL,KAAM,QACNkL,OAAQC,yBAEV,CACEF,UAAW,YACXjL,KAAM,UACNkL,OAAQC,yBAEV,CACEF,UAAW,WACXjL,KAAM,SACNkL,OAAQC,yBAEV,CACEF,UAAW,cACXjL,KAAM,eACNkL,OAAQC,yBAEV,CACEF,UAAW,MACXjL,KAAM,oBACNkL,OAAQC,yBAEV,CACEF,UAAW,QACXjL,KAAM,oCACNkL,OAAQC,yBAEV,CACEF,UAAW,UACXjL,KAAM,yBACNoL,UAjDJ,SAAsBC,EAAMC,GAC1B,OACE,4BAAQ1f,KAAK,SAASU,UAAU,iBAAiBiH,QAAS,WACpDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GACnC7b,EAASL,GAAqBoX,GAAuBuF,WAFvD,aAqHJ,OACE,kBAAC,WAAD,KACE,6BACE,kBAAC,sBAAD,CACEC,WACEC,KAAkB1iB,KAvEP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,a,OCxFT,SAASsK,GAAUhnB,GACtB,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,gBACgD,CAC5ChG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASgnB,GAAUhnB,OAU9BG,MAAM,SAAAS,GACHZ,EAASpB,EAAiBgC,IAC1BZ,EAASX,KACTuB,EAAKhG,KAAK6iB,QAAQ3T,KAAI,SAAC3B,EAAU4B,GAC7B,IAAIlL,EAAa,CACb7C,GAAImM,EAAInM,GACRoF,SAAU+G,EAAI/G,SACd8b,MAAO/U,EAAI+U,MACX7b,SAAU,GACVf,OAAQ6H,EAAI7H,OACZ6c,UAAWhV,EAAIgV,UACfC,SAAUjV,EAAIiV,SACdC,YAAalV,EAAIkV,YACjBzb,kBAAmBuG,EAAIvG,kBACvB0b,IAAKnV,EAAImV,IACTC,MAAOpV,EAAIoV,MACXC,QAASrV,EAAIqV,QACbC,QAAStV,EAAIsV,QACbC,WAAYvV,EAAIuV,YAGpB,OACW1d,EADG,IAAV+J,EACgB3K,EAAcP,GnEkD/C,SAAmBA,GACtB,MAAO,CAAE1C,KAAMkC,EAAYQ,KAAMA,GmEhDGooB,CAAUpoB,UAIrCmC,OAAM,SAAAtF,GACHsE,EAASlB,EAAepD,IACxBhD,QAAQC,IAAI,YCxD5B,IA4HeuuB,GA5HU,WACrB,IAAMlnB,EAA0BqD,cAC1B+W,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAC7DngB,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzE4S,EAA2BtI,EAAMqD,QAAQ9gB,OAJpB,EAKDpB,oBAAS,GALR,mBAKpBonB,EALoB,KAKbC,EALa,KAMnB3L,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBA8CzC,OA7CAyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAaue,GAAUhnB,OAGhC,CAACA,EAAUwY,EAAc3Y,IAE5B2I,qBAAU,WACNxI,EAASN,MACTM,EAASmQ,GAAkB,iBAAa,mBACzC,CAAClW,EAAK+V,KAAMhQ,IAaXiX,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI9B,kBAAC,WAAD,KACF,wBAAIxH,UAAU,yBAAd,kBACA,uBAAGA,UAAU,QAAb,sBACA,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,iBAAY6I,KAAI,UAAKmS,GAAoBjb,KAAK,OAAO6I,MAAM,aAG9E,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,gCAEJ,yBAAKA,UAAU,aACX,kBAAC,GAAD,CACIuf,SAnC5B,SAAsBvd,GAClBmB,EAASP,GAAmBZ,IAM5B+jB,GAAS,GAJT5iB,EAASL,GAAqBoX,GAAuB7D,cAuC7C,WACI,GAAKkH,EAAM2D,cAAkB3D,EAAM5H,oBAAsBuE,GAAuBuF,OAC5E,OACI,kBAAC,KAAD,CACIxhB,KAAM6nB,EACN3J,QAAS,kBAAM4J,GAAS,IACxB3J,sBAAoB,GAEpB,yBAAKpc,UAAU,cAAcb,GAAG,eAC5B,yBAAKa,UAAU,eAAf,iBAGA,yBAAKA,UAAU,iBACX,4BAAQV,KAAK,SACTU,UAAU,iBACViH,QAAS,WpEG9C,IAAsB9H,EoEFwBoe,EAAM2D,eAGX/d,EAASie,GAAW7D,EAAM2D,aAAa/hB,KACvCgE,EAASgd,GAAgB,kBAAD,UAAkB5C,EAAM2D,aAAa3c,SAArC,6CACxBpB,GpEHnBhE,EoEGyCoe,EAAM2D,aAAa/hB,GpEF9E,CAAEG,KAAMoC,EAAevC,GAAIA,KoEGUgE,EAASN,MACTkjB,GAAS,MAVjB,aAbxB,KClGVhiB,I,OAAO,CACT,CACI,GAAM,EACN,WAAc,OACd,YAAe,8BACf,SAAY,yBAEhB,CACI,GAAM,EACN,WAAc,OACd,YAAe,8BACf,SAAY,yBAEhB,CACI,GAAM,EACN,WAAc,OACd,YAAe,8BACf,SAAY,2BA6CLumB,IC1DHC,GD0DGD,GAzCf,SAAuB7rB,GACnB,IAAMgI,EAAUC,cAEVmK,EAAc,WAEhBpK,EAAQI,KADG,qBAIT6gB,EAA0C3jB,GAAKkJ,KAAI,SAAAsa,GACrD,OAAKA,EACG,wBAAIvnB,UAAS,aACjBiH,QAAS4J,EACTD,IAAG,kBAAa2W,EAAQpoB,KACxB,wBAAIwoB,MAAM,OAAOJ,EAAQpoB,IACzB,4BAAKooB,EAAQ3P,YACb,4BAAK2P,EAAQhV,aACb,4BAAKgV,EAAQhY,WAPM,QAY3B,OACI,yBAAKvP,UAAU,4BACX,2BAAOA,UAAU,SACb,2BAAOA,UAAU,eACb,4BACI,wBAAI2nB,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,kBACA,wBAAIA,MAAM,OAAV,oBACA,wBAAIA,MAAM,OAAV,oBAGR,+BACKD,MEjDf3jB,GAIU,gBAJVA,GAMe,aANfA,GAOO,aAPPA,GAQK,UARLA,GASS,YATTA,GAUO,CAAC,gBAAiB,aAmKhBymB,GA/JgB,WAAO,IAAD,EACH9rB,oBAAS,GADN,mBAC1BoqB,EAD0B,KACjBC,EADiB,KAE3B5lB,EAA0BqD,cAC1BwiB,EAA0BphB,aAAY,SAACC,GAAD,OAAuBA,EAAMmhB,YACnE5rB,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzE4S,EAA2BmD,EAASA,SAASlpB,OAOnD,SAASqpB,EAAgB5B,GACrBpkB,EAASmkB,GAAsBC,IAC/BpkB,EAASL,GAAqB6iB,GAA0BtP,OAG5D,OAVA1K,qBAAU,WACNxI,EAASqkB,MACTrkB,EAASmQ,GAAkB,iBAAa,oBACzC,CAAClW,EAAK+V,KAAMhQ,IAQX,kBAAC,WAAD,KACI,wBAAInD,UAAU,yBAAd,eACA,uBAAGA,UAAU,QAAb,sBACA,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,kCAAkB6I,KAAI,UAAKmS,GAAoBjb,KAAK,MAAM6I,MAAM,aAGnF,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uBAAuBiH,QAAS,YAC1B,IAAZ6hB,GACAC,GAAW,IAEhBxhB,MAAO,CACNC,MAAOshB,EAAU,UAAY,YALjC,+BAQJ,yBAAK9oB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBiH,QAAS,YAC1B,IAAZ6hB,GACAC,GAAW,IAGfxhB,MAAO,CACHC,MAAOshB,EAAU,UAAY,YANrC,iCAagB,IAAZA,EAEI,yBAAK9oB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,aACX,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,mCACf,yBAAKA,UAAU,cAAcb,GAAG,cAAcgI,IAAI,GAC9CD,IAAI,mDAER,yBAAKlH,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,kCACNc,YAAa6D,OAGzB,yBAAK/D,UAAU,YACf,yBAAKA,UAAU,uBACP,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,eACNc,YAAa6D,MAErB,yBAAK/D,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,oBACNc,YAAa6D,OAGzB,yBAAK/D,UAAU,YACf,yBAAKA,UAAU,uBACP,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,oCACNc,YAAa6D,MAErB,yBAAK/D,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,yBACNc,YAAa6D,OAGzB,yBAAK/D,UAAU,YACf,yBAAKA,UAAU,uBACP,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,wBACNc,YAAa6D,GAAW,GAAK,KAAOA,GAAW,YAY/E,yBAAK/D,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,0BAEJ,yBAAKA,UAAU,aACX,kBAAC,GAAD,CACIuf,SAAU4J,W,SDhK9CoB,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KEsCGE,OAhDf,SAAqBhsB,GAAuC,IAAD,EAC3BC,oBAAS,GADkB,mBAChDC,EADgD,KACvCC,EADuC,OAE7BF,mBAAS,IAFoB,mBAEhDG,EAFgD,KAEzCC,EAFyC,OAGrBJ,mBAAS,IAHY,mBAGhDK,EAHgD,KAGrCC,EAHqC,OAIlCN,mBAAS,GAArBO,EAJ8C,oBA6BvD,OACI,6BACI,2BAAOC,QAAST,EAAMU,GAAGvD,YAAa6C,EAAMW,OAC5C,2BACIC,MAAOZ,EAAMY,MACbC,KAAK,SACLorB,IAAKjsB,EAAMisB,IACXnrB,SA7BZ,SAAwBC,GACpB,IAAIG,EAAwBgrB,MAAMC,OAAOprB,EAAMC,OAAOJ,QAAW,EAAIurB,OAAOprB,EAAMC,OAAOJ,OACpFR,EAAsB,GAAfa,EAAmB,GAE/B,IAAKb,EAAO,CAAC,IAAD,EAC6B,MAAbJ,EAAMisB,KAAgB/qB,EAAgBlB,EAAMisB,IACpE,CAAC,8BAAD,OAA+BjsB,EAAMisB,IAArC,KAA6C,cAAgB,CAAC,GAAI,YAF1D,mBACP7rB,EADO,KACAa,EADA,KAKZ,IAAKb,EAAO,CAAC,IAAD,EAC6B,MAAbJ,EAAMosB,KAAgBlrB,EAAgBlB,EAAMosB,IACpE,CAAC,6BAAD,OAA8BpsB,EAAMosB,IAApC,KAA4C,cAAgB,CAAC,GAAI,YAFzD,mBACPhsB,EADO,KACAa,EADA,KAKZjB,EAAMc,SAAS,CAAEF,MAAOM,EAAcd,MAAOA,EAAOF,QAASA,EAASoB,MAAOtB,EAAMsB,QAEnFnB,GAAS,GACTE,EAASD,GACTG,EAAaU,GACbT,EAASU,IAWDK,UAAS,uBAAkBvB,EAAMwB,WAAxB,YAAsClB,GAC/CI,GAAE,aAAQV,EAAMW,SACnBP,EACG,yBAAKmB,UAAU,oBACVnB,GACI,OC/BlB,SAASisB,GAAY3nB,GACxB,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,aAC6C,CACzChG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS2nB,GAAY3nB,OAUhCG,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASsM,MAET1L,EAAKhG,KAAKgtB,UAAU9d,KAAI,SAAC3B,EAAU4B,GAC/B,IAAI8d,EAAY1f,EAAIuM,WAChBoT,EAAY3f,EAAIwM,SAChBvI,EAAqB,CACrBpQ,GAAImM,EAAInM,GACR+rB,OAAQ5f,EAAI4f,OACZC,KAAM7f,EAAI6f,KACV9d,KAAM/B,EAAI+B,KACVgb,WAAY/c,EAAI+c,WAChB/a,YAAahC,EAAIgC,YACjBuK,WAAYmT,EAAUI,UAAU,EAAG,IACnCtT,SAAUmT,EAAUG,UAAU,EAAG,IACjC1C,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAGrB,OACWxlB,EADG,IAAV+J,EACgBsC,GAAgBD,GAGhBG,GAAYH,UAIvCpL,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCtBbuvB,OA9Cf,SAAmB5sB,GAAqC,IAAD,EACvBC,oBAAS,GADc,mBAC5CC,EAD4C,KACnCC,EADmC,OAEzBF,mBAAS,IAFgB,mBAE5CG,EAF4C,KAErCC,EAFqC,OAGjBJ,mBAAS,IAHQ,mBAG5CK,EAH4C,KAGjCC,EAHiC,OAI9BN,mBAAS,IAArBO,EAJ0C,oBA0BnD,OACI,6BACI,2BAAOC,QAAST,EAAMU,GAAGvD,YAAa6C,EAAMW,OAC5C,2BACIC,MAAOZ,EAAMY,MACbC,KAAMb,EAAMa,KACZC,SAzBZ,SAAwBC,GAA6C,IAAD,EACxB,CAAC,GAAI,GAAIA,EAAMC,OAAOJ,OAAzDR,EAD2D,KACpDa,EADoD,KACxCC,EADwC,QAGxCA,GAAgBlB,EAAMmB,SAC1C,CAAC,wBAAyB,cAAgB,CAAC,GAAI,YAJa,mBAMhE,GAHCf,EAH+D,KAGxDa,EAHwD,MAM3Db,EAAO,CAAC,IAAD,EACeJ,EAAMoB,WAAaF,GAAgBA,EAAgBlB,EAAMoB,UAChF,CAAC,8BAAD,OAA+BpB,EAAMoB,UAAUurB,UAAU,EAAE,IAA3D,YAAkE3sB,EAAMoB,UAAUurB,UAAU,GAAG,IAA/F,eAAiH,cAAgB,CAAC,GAAI,YAF9H,mBACPvsB,EADO,KACAa,EADA,KAKZjB,EAAMc,SAAS,CAAEF,MAAOM,EAAcd,MAAOA,EAAOF,QAASA,EAASoB,MAAOtB,EAAMsB,QAEnFnB,GAAS,GACTE,EAASD,GACTG,EAAaU,GACbT,EAASU,IAUD2rB,SAAU7sB,EAAMkM,OAChB3K,UAAS,uBAAkBvB,EAAMwB,WAAxB,YAAsClB,GAC/CI,GAAE,aAAQV,EAAMW,OAChBc,YAAazB,EAAMyB,cACtBrB,EACG,yBAAKmB,UAAU,oBACVnB,GACI,OCMV0sB,OA9Cf,SAAoB9sB,GAAqC,IAAD,EACxBC,oBAAS,GADe,mBAC7CC,EAD6C,KACpCC,EADoC,OAE1BF,mBAAS,IAFiB,mBAE7CG,EAF6C,KAEtCC,EAFsC,OAGlBJ,mBAAS,IAHS,mBAG7CK,EAH6C,KAGlCC,EAHkC,OAI/BN,mBAAS,IAArBO,EAJ2C,oBA0BpD,OACI,6BACI,2BAAOC,QAAST,EAAMU,GAAGvD,YAAa6C,EAAMW,OAC5C,2BACIC,MAAOZ,EAAMY,MACbC,KAAMb,EAAMa,KACZgsB,SAAU7sB,EAAMkM,OAChBpL,SA1BZ,SAAwBC,GAA6C,IAAD,EACxB,CAAC,GAAI,GAAIA,EAAMC,OAAOJ,OAAzDR,EAD2D,KACpDa,EADoD,KACxCC,EADwC,QAGxCA,GAAgBlB,EAAMmB,SAC1C,CAAC,wBAAyB,cAAgB,CAAC,GAAI,YAJa,mBAMhE,GAHCf,EAH+D,KAGxDa,EAHwD,MAM3Db,EAAO,CAAC,IAAD,EACeJ,EAAMoB,WAAaF,GAAgBA,EAAgBlB,EAAMoB,UAChF,CAAC,8BAAD,OAA+BpB,EAAMoB,UAAUurB,UAAU,EAAE,IAA3D,YAAkE3sB,EAAMoB,UAAUurB,UAAU,GAAG,IAA/F,eAAiH,cAAgB,CAAC,GAAI,YAF9H,mBACPvsB,EADO,KACAa,EADA,KAKZjB,EAAMc,SAAS,CAAEF,MAAOM,EAAcd,MAAOA,EAAOF,QAASA,EAASoB,MAAOtB,EAAMsB,QAEnFnB,GAAS,GACTE,EAASD,GACTG,EAAaU,GACbT,EAASU,IAWDK,UAAS,uBAAkBvB,EAAMwB,WAAxB,YAAsClB,GAC/CI,GAAE,aAAQV,EAAMW,OAChBc,YAAazB,EAAMyB,cACtBrB,EACG,yBAAKmB,UAAU,oBACVnB,GACI,O,+NCsJV2sB,OA7Kf,SAAsB/sB,GACpB,IAAM0E,EAA0BqD,cAC1BukB,EAAmCnjB,aAAY,SAACC,GAAD,OAAuBA,EAAMkjB,aAC9Exb,EAA6Bwb,EAAUU,iBACrC/V,EAAqBqV,EAAUpV,oBAAsB4U,GAA2B3U,OAEjFrG,IAAYmG,IACfnG,EAAW,CAAEpQ,GAAI,EAAGkO,KAAM,GAAIC,YAAa,GAAI4d,OAAQ,EAAGC,KAAM,EAAGtT,WAAY,GAAIC,SAAU,GAAI4Q,YAAa,GAAIC,YAAa,GAAIN,WAAY,IAPtF,MAUzB3pB,mBAAS,CACzC2O,KAAM,CAAExO,MAAO,GAAIQ,MAAOkQ,EAASlC,MACnCC,YAAa,CAAEzO,MAAO,GAAIQ,MAAOkQ,EAASjC,aAC1C4d,OAAQ,CAAErsB,MAAO,GAAIQ,MAAOkQ,EAAS2b,QACrCC,KAAM,CAAEtsB,MAAO,GAAIQ,MAAOkQ,EAAS4b,MACnCtT,WAAY,CAAEhZ,MAAO,GAAIQ,MAAOkQ,EAASsI,YACzCC,SAAU,CAAEjZ,MAAO,GAAIQ,MAAOkQ,EAASuI,YAhBkB,mBAUpDnR,EAVoD,KAUzCC,EAVyC,KAmB3D,SAASE,EAAoBC,GAC3BH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UA4DjF,SAAS2H,IACP,OAAQL,EAAUukB,OAAOrsB,OAAS8H,EAAU2G,YAAYzO,OACnD8H,EAAU0G,KAAKxO,OAAS8H,EAAUwkB,KAAKtsB,OAAS8H,EAAUkR,WAAWhZ,OAAS8H,EAAUmR,SAASjZ,QAChG8H,EAAU0G,KAAKhO,QAAUsH,EAAUkR,WAAWxY,QAAUsH,EAAUmR,SAASzY,MAGnF,IAAI6c,EAAM,IAAI1gB,KACd0gB,EAAIwP,WAAWxP,EAAIyP,aAAezP,EAAI0P,qBACtC,IAAIC,EAAW3P,EAAI4P,cAAchK,MAAM,EAAE,IAEzC,OACE,kBAAC,WAAD,KACE,yBAAK9hB,UAAU,iBACf,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAoC0V,EAAW,WAAQ,WAArE,oBAEF,yBAAK1V,UAAU,aACb,0BAAMoH,SA3EhB,SAAkBhJ,GAEhB,GADAA,EAAEiJ,kBACEL,IAAJ,CAIA,IAAI+kB,EAAwBrW,EAAYhG,GAAcC,GACtDlR,EAAMqX,SAAQ,GAIhB,SAAkBnP,EAA+BoP,GAC/C,GAAIxG,EAAU,CACZ,IAAMnC,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAChElC,SAAUH,IAAMI,SAASC,aAIzBnC,EADE4S,IAAWrG,GCxDd,SAASsc,EAAazc,EAAenC,GACxC,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,aACgD,CACzChG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUgT,KAG5BjM,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS6oB,EAAazc,EAAUnC,OAU3C9J,MAAM,SAAAS,GACHZ,EAASpB,GAAiBwN,IAC1BtK,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,0CAA0B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACzI1J,QAAQC,IAAIiI,GACZ+mB,GAAY3nB,MAEfgB,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,qDAAkC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC/I1J,QAAQC,IAAI,aDkBXkwB,CAAa,CACpB3e,KAAM1G,EAAU0G,KAAKhO,MACrB8rB,KAAMxkB,EAAUwkB,KAAK9rB,MACrBiO,YAAa3G,EAAU2G,YAAYjO,MACnC6rB,OAAQvkB,EAAUukB,OAAO7rB,MACzBwY,WAAYlR,EAAUkR,WAAWxY,MACjCgpB,WAAYplB,aAAaC,QAAQ,OAChCkK,GEhEJ,SAAS6e,EAAY9sB,EAAS4E,EAAWqJ,GAC5C,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,qBACgDlE,GAAM,CAC/C9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS8oB,EAAY9sB,EAAG4E,EAAMqJ,OAUzC9J,MAAM,SAAAe,GACHxI,QAAQC,IAAIuI,GACZxI,QAAQC,IAAIqD,GACZ8F,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,6CAA2B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC1IpC,EAASpB,GAAiBgC,IAC1B+mB,GAAY3nB,MAEfgB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,wDAAmC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAChJpC,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aF2BXmwB,CAAY1c,EAASpQ,GAAI,CAChCkO,KAAM1G,EAAU0G,KAAKhO,MACrB8rB,KAAMxkB,EAAUwkB,KAAK9rB,MACrBiO,YAAa3G,EAAU2G,YAAYjO,MACnC6rB,OAAQvkB,EAAUukB,OAAO7rB,MACzBwY,WAAYlR,EAAUkR,WAAWxY,MACjCgpB,WAAYplB,aAAaC,QAAQ,OAChCkK,IAGLvR,QAAQC,IAAIia,GAEZ5S,EAASgd,GAAgB,kBAAD,UAAexZ,EAAU0G,KAAKhO,MAA9B,mCACxB8D,EAAS0M,MACT1M,EAASL,GAAqBynB,GAA2BlU,QAlC3DC,CAAS3P,EAAWolB,MAoEV,yBAAK/rB,UAAU,cACb,kBAAC,EAAD,CAAWb,GAAG,aACZE,MAAOsH,EAAU0G,KAAKhO,MACtBU,MAAM,OACNR,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,SACNc,YAAY,MAMhB,yBAAKF,UAAU,YACb,yBAAKA,UAAU,uBACb,kBAAC,GAAD,CAAab,GAAG,aACdE,MAAOsH,EAAUwkB,KAAK9rB,MACtBU,MAAM,OACNR,SAAUuH,EACV4jB,IAAK,IACLG,IAAK,EACLzrB,MAAM,uBAGV,yBAAKY,UAAU,uBACb,kBAAC,GAAD,CAAab,GAAG,eACdY,MAAM,SACNV,MAAOsH,EAAUukB,OAAO7rB,MACxBE,SAAUuH,EACV4jB,IAAK,IACLG,IAAK,EACLzrB,MAAM,qBAIZ,yBAAKY,UAAU,YACb,yBAAKA,UAAU,uBACb,kBAAC,GAAD,CAAWb,GAAG,mBACZY,MAAM,aACNV,MAAOsH,EAAUkR,WAAWxY,MAC5BE,SAAUuH,EACV6D,QAAQ,EACRrL,KAAK,iBACLM,UAAU,EACVC,UAAWgsB,EACXzsB,MAAM,wCACNc,YAAY,MAEhB,yBAAKF,UAAU,uBACb,kBAAC,GAAD,CAAYb,GAAG,iBACbY,MAAM,WACNV,MAAOsH,EAAUmR,SAASzY,MAC1BE,SAAUuH,EACV6D,OAAuC,OAA/BhE,EAAUkR,WAAWxY,OAAiD,KAA/BsH,EAAUkR,WAAWxY,MACpEC,KAAK,iBACLM,UAAU,EACVC,UAAW8G,EAAUkR,WAAWxY,MAChCD,MAAM,kCACNc,YAAY,OAGlB,4BAAQF,UAAU,iBAAiBiH,QAAS,kBA3FtDxI,EAAMqX,SAAQ,QACd3S,EAASL,GAAqBynB,GAA2BlU,SA0F/C,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCAvFlBgH,IACN,WAAa,KAsFpB,mB,OGjCCklB,IChJHC,GDgJGD,GA7If,SAAsBztB,GAEpB,IAAM0E,EAAWqD,cAKXiX,EAHY7V,aAAY,SAACC,GAAD,OAAWA,EAAMkjB,aAGvBA,UAElB9tB,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KAqC3ByL,EAAU,CACd,CACEC,UAAW,OACXjL,KAAM,SACNkL,OAAQC,yBAEV,CACEF,UAAW,OACXjL,KAAM,oBACNkL,OAAQC,yBAEV,CACEF,UAAW,SACXjL,KAAM,iBACNkL,OAAQC,yBAEV,CACEF,UAAW,aACXjL,KAAM,wCACNoL,UAlCJ,SAAuBC,EAAMC,GAC3B,IAAIoN,EAAUpN,EAAInH,WAClB,OACI,8BAAOuU,EAAQhB,UAAU,EAAG,IAAM,IAAMgB,EAAQhB,UAAU,GAAG,OAiCjE,CACEzM,UAAW,WACXjL,KAAM,kCACNoL,UAhCJ,SAAqBC,EAAMC,GACzB,IAAIoN,EAAUpN,EAAInH,WAClB,OACI,8BAAOuU,EAAQhB,UAAU,EAAG,IAAM,IAAMgB,EAAQhB,UAAU,GAAG,OA+BjE,CACEzM,UAAW,GACXjL,KAAM,yBACNoL,UArDJ,SAAoBC,EAAMC,GACxB,OACI,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACpDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClC7b,EAASL,GAAqBynB,GAA2B/K,SAF7D,yBAqDJ,CACEb,UAAW,GACXjL,KAAM,GACNoL,UAnEJ,SAAsBC,EAAMC,GAC1B,OACI,4BAAQ1f,KAAK,SAASU,UAAU,iBAAiBiH,QAAS,WACnDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClC7b,EAASL,GAAqBynB,GAA2B9K,WAF7D,aAyFN,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACEC,WACEC,KAAkB1iB,KAzBP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aE2EDwM,GAhLY,WACvB,IAAMlpB,EAA0BqD,cAC1BukB,EAA4BnjB,aAAY,SAACC,GAAD,OAAuBA,EAAMkjB,aACrE3tB,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzE4S,EAA2BkF,EAAUA,UAAUjrB,OAJxB,EAKHpB,oBAAS,GALN,mBAKtBonB,EALsB,KAKfC,EALe,OAMOrnB,mBAAS,IANhB,mBAMtB4tB,EANsB,KAMVC,EANU,KAOrBnS,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBA0CzC,SAASspB,IACLzG,GAAS,GAGb,SAASG,EAAc7mB,GACnB0mB,GAAS,GAIb,OAlDApa,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAakf,GAAY3nB,OAGlC,CAACA,EAAUwY,EAAc3Y,IAE5B2I,qBAAU,WACNxI,EAAS0M,MACT1M,EAASmQ,GAAkB,iBAAU,mBACtC,CAAClW,EAAK+V,KAAMhQ,IAkBXiX,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI9B,kBAAC,WAAD,KACR,kBAAC,IAAD,MACM,wBAAIxH,UAAU,yBAAd,kBACA,uBAAGA,UAAU,QAAb,sBACA,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,yBAAY6I,KAAI,UAAKmS,GAAoBjb,KAAK,MAAM6I,MAAM,aAG7E,yBAAKzT,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,2BAAOV,KAAK,OAAOH,GAAG,QAAQa,UAAU,eAAeE,YAAY,mBAAWX,SAAU,SAACC,GACrF+sB,EAAc/sB,EAAMC,OAAOJ,OAC3BxD,QAAQC,IAAIwwB,OAGpB,4BAAQhtB,KAAK,SAASU,UAAU,mBAC5B,uBAAGA,UAAU,sBAM7B,yBAAKA,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,+BACA,yBAAKA,UAAU,kBACX,4BAAQA,UAAU,4BAA4BiH,QAAS,WACnD9D,EAASL,GAAqBynB,GAA2B3U,SACzD4W,MAEA,uBAAGxsB,UAAU,mBAJjB,4BASR,yBAAKA,UAAU,aACX,kBAAC,GAAD,CACIuf,SAlE5B,SAA0BhQ,GACtBpM,EnEjBD,SAAgCoM,GACnC,MAAO,CAAEjQ,KAAM6P,GAA8BI,SAAUA,GmEgB1Ckd,CAAuBld,IAChCid,IACArpB,EAASL,GAAqBynB,GAA2BlU,QA+DLhX,MAAOitB,QASvD,kBAAC,KAAD,CACIruB,KAAM6nB,EACN3J,QAAS,kBAAM4J,GAAS,IACxB3J,sBAAoB,GAEpB,oCAEQ,WACI,GAAK2O,EAAUpV,oBAAsB4U,GAA2B3U,QAAamV,EAAUU,kBAAsBV,EAAUpV,oBAAsB4U,GAA2B/K,KACpK,OAAO,kBAAC,GAAD,CAAc1J,QAASoQ,IAFtC,KASR,WACI,GAAK6E,EAAUU,kBAAsBV,EAAUpV,oBAAsB4U,GAA2B9K,OAC5F,OACI,kBAAC,KAAD,CACIxhB,KAAM6nB,EACN3J,QAAS,kBAAM4J,GAAS,IACxB3J,sBAAoB,GAEpB,yBAAKpc,UAAU,cAAcb,GAAG,eAC5B,yBAAKa,UAAU,eAAf,iBAGA,yBAAKA,UAAU,iBACX,4BAAQV,KAAK,SACTU,UAAU,iBACViH,QAAS,WACA8jB,EAAUU,mBAGftoB,ECjLzC,SAASupB,EAAevtB,GAC3B,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACEC,+BADF,qBAC4ClE,GAAM,CAC/C9B,OAAQ,SACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI3CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASupB,EAAevtB,OAUnCmE,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZZ,EAASpB,GAAiBgC,IAC1BZ,EAASyM,GAAezQ,OAE3BgF,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aD6I6B4wB,CAAe3B,EAAUU,iBAAiBtsB,KACnDgE,EAASgd,GAAgB,mBAAD,mBAAiC4K,EAAUU,iBAAiBpe,KAA5D,kBACxBlK,EAASyM,GAAemb,EAAUU,iBAAiBtsB,KACnDgE,EAAS0M,MACTkW,GAAS,MAVjB,aAbxB,M,SD3JJoG,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KGLL,IAAMQ,GAAqB,aACrBC,GAAsB,cACtBC,GAAwB,gBAExBC,GAAqC,6BACrCC,GAAoC,4BACpCprB,GAAiC,yBACjCrB,GAA6B,qBAC7BC,GAA6B,qBAC7BC,GAA2B,mBAC3BwsB,GAA4B,oBAC5BC,GAAyB,iBAE/B,SAASnrB,KACZ,MAAO,CACHxC,KAAMgB,IAIP,SAASyB,GAAiBmrB,GAC7B,MAAO,CACH5tB,KAAMiB,GACN2sB,UAID,SAASjrB,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAYZ,SAASsuB,GAAUD,GACtB,MAAO,CAAE5tB,KAAMqtB,GAAYO,OAAQA,GAGhC,SAASE,GAAWF,GACvB,MAAO,CAAE5tB,KAAMstB,GAAaM,OAAQA,GAGjC,SAASG,GAAaluB,GACzB,MAAO,CAAEG,KAAMutB,GAAe1tB,GAAIA,GAO/B,SAASmuB,KACZ,MAAO,CAAEhuB,KAAMytB,IAGZ,SAASjqB,GAAqBzD,GACjC,MAAO,CAAEC,KAAMqC,GAAwBtC,MAAOA,GCxD3C,SAASkuB,GAAUpqB,GACtB,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,8BAC8D,CAC1DhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASoqB,GAAUpqB,OAU9BG,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EDGL,CAAE7D,KAAM0tB,KCDHjpB,EAAKhG,KAAKyvB,aAAavgB,KAAI,SAAC3B,EAAU4B,GAClC,IAAI8d,EAAY1f,EAAIuM,WAChBoT,EAAY3f,EAAIwM,SAChBoV,EAAiB,CACjB/tB,GAAImM,EAAInM,GACR0Y,WAAYmT,EAAUI,UAAU,EAAG,GACnCtT,SAAUmT,EAAUG,UAAU,EAAG,IAGrC,OACWjoB,EADG,IAAV+J,EDbjB,SAAuBggB,GAC1B,MAAO,CAAE5tB,KAAM2tB,GAAgBC,OAAQA,GCaHO,CAAcP,GAGdC,GAAUD,UAIrC/oB,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,Y,+NCgEb4xB,OAzGf,SAAoBjvB,GAClB,IAAM0E,EAA0BqD,cAC1BmnB,EAA+B/lB,aAAY,SAACC,GAAD,OAAuBA,EAAM8lB,WAC1ET,EAAyBS,EAAQC,eAC/BlY,EAAqBiY,EAAQhY,oBAAsBwW,GAAyBvW,OAE7EsX,IAAUxX,IACbwX,EAAS,CAAE/tB,GAAI,EAAG0Y,WAAY,GAAGC,SAAU,KAPU,MAUrBpZ,mBAAS,CACzCmZ,WAAY,CAAEhZ,MAAO,GAAIQ,MAAO6tB,EAAOrV,YACvCC,SAAU,CAAEjZ,MAAO,GAAIQ,MAAO6tB,EAAOpV,YAZgB,mBAUhDnR,EAVgD,KAUrCC,EAVqC,KAkEvD,SAASI,IACP,OAAQL,EAAUkR,WAAWhZ,OAAS8H,EAAUmR,SAASjZ,QACnD8H,EAAUkR,WAAWxY,QAAUsH,EAAUmR,SAASzY,MAG1D,OACE,kBAAC,WAAD,KACE,yBAAKW,UAAU,iBACf,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAoC0V,EAAW,WAAQ,WAArE,uBAEF,yBAAK1V,UAAU,aACb,0BAAMoH,SA5DhB,SAAkBhJ,GAEhB,GADAA,EAAEiJ,kBACEL,IAAJ,CAIA,IAAI+kB,EAAwBrW,EAAYyX,GAAYC,GACpD3uB,EAAMqX,SAAQ,GAIhB,SAAkBnP,EAA6BoP,GAC7C,GAAImX,EAAQ,CAEV,IAAM9f,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAChElC,SAAUH,IAAMI,SAASC,aAIzBnC,EADE4S,IAAWoX,GCjDd,SAASU,EAAW9pB,EAAWqJ,GAClC,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,gBACmD,CAC5ChG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS0qB,EAAW9pB,EAAMqJ,OAUrC9J,MAAM,SAAAe,GACHxI,QAAQC,IAAIuI,GACZY,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,8CAA4B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC3IpC,EAASpB,GAAiBgC,IAC1BwpB,GAAUpqB,MAEbgB,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,uDAAkC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC/I1J,QAAQC,IAAI,aDWX+xB,CAAW,CAClBhW,WAAYlR,EAAUkR,WAAWxY,OAChC+N,GEpDJ,SAAS0gB,EAAU3uB,EAAS4E,EAAWqJ,GAC1C,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,wBACmDlE,GAAM,CAClD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS2qB,EAAU3uB,EAAG4E,EAAMqJ,OAUvC9J,MAAM,SAAAe,GACHxI,QAAQC,IAAIuI,GACZxI,QAAQC,IAAIqD,GACZ8F,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,iDAA6B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC5IpC,EAASpB,GAAiBgC,IAC1BwpB,GAAUpqB,MAEbgB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,iDAA6B5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC1IpC,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aFeXgyB,CAAUZ,EAAO/tB,GAAI,CAC5B0Y,WAAYlR,EAAUkR,WAAWxY,OAChC+N,IAGLvR,QAAQC,IAAIia,GAEZ5S,EAASmqB,MACTnqB,EAASL,GAAqBqpB,GAAyB9V,QAxBzDC,CAAS3P,EAAWolB,MAqDV,yBAAK/rB,UAAU,YACb,yBAAKA,UAAU,uBACb,kBAAC,EAAD,CAAWb,GAAG,mBACZY,MAAM,aACNV,MAAOsH,EAAUkR,WAAWxY,MAC5BE,SAvElB,SAA6BwH,GAC3BH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,WAuE/DC,KAAK,OACLM,UAAU,EACVC,UAAW,IACXT,MAAM,wCACNc,YAAY,OAGlB,4BAAQF,UAAU,iBAAiBiH,QAAS,kBArCtDxI,EAAMqX,SAAQ,QACd3S,EAASL,GAAqBqpB,GAAyB9V,SAoC7C,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCAjClBgH,IACN,WAAa,KAgCpB,mB,OGsBC+mB,IC/HHC,GD+HGD,GA5Hf,SAAoBtvB,GAEhB,IAAM0E,EAAWqD,cAIbiX,EAHY7V,aAAY,SAACC,GAAD,OAAWA,EAAM8lB,WAGzBA,QAEhB1wB,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KAoC3ByL,EAAU,CACd,CACEC,UAAW,aACXjL,KAAM,wCACNoL,UApCJ,SAAuBC,EAAMC,GAC3B,IAAIoN,EAAUpN,EAAInH,WAClB,OACI,8BAAOuU,EAAQhB,UAAU,EAAG,IAAM,IAAMgB,EAAQhB,UAAU,GAAG,OAmCjE,CACEzM,UAAW,WACXjL,KAAM,kCACNoL,UAlCJ,SAAqBC,EAAMC,GACzB,IAAIoN,EAAUpN,EAAIlH,SAClB,OACI,8BAAOsU,EAAQhB,UAAU,EAAG,IAAM,IAAMgB,EAAQhB,UAAU,GAAG,OAiCjE,CACEzM,UAAW,GACXjL,KAAM,yBACNoL,UAvBJ,SAAoBC,EAAMC,GACxB,OACI,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACpDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClC7b,EAASL,GAAqBqpB,GAAyB3M,SAF3D,yBAuBJ,CACEb,UAAW,GACXjL,KAAM,GACNoL,UArCJ,SAAsBC,EAAMC,GAC1B,OACI,4BAAQ1f,KAAK,SAASU,UAAU,iBAAiBiH,QAAS,WACnDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClC7b,EAASL,GAAqBqpB,GAAyB1M,WAF3D,aA2DN,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACEC,WACEC,KAAkB1iB,KAzBP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aE4FDoO,GAhLU,WACrB,IAAM9qB,EAA0BqD,cAC1BmnB,EAAwB/lB,aAAY,SAACC,GAAD,OAAuBA,EAAM8lB,WACjEvwB,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzE4S,EAA2B8H,EAAQA,QAAQ7tB,OAJtB,EAKDpB,oBAAS,GALR,mBAKpBonB,EALoB,KAKbC,EALa,OAMSrnB,mBAAS,IANlB,mBAMpB4tB,EANoB,KAMRC,EANQ,KAOnBnS,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBA0CzC,SAASgrB,IACLnI,GAAS,GAGb,SAASG,EAAc7mB,GACnB0mB,GAAS,GAIb,OAlDApa,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAa2hB,GAAUpqB,OAGhC,CAACA,EAAUwY,EAAc3Y,IAE5B2I,qBAAU,WACNxI,EAASmqB,MACTnqB,EAASmQ,GAAkB,qBAAY,mBACxC,CAAClW,EAAK+V,KAAMhQ,IAkBXiX,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACH,kBAAC,IAAD,MACA,wBAAIxH,UAAU,yBAAd,sBACA,uBAAGA,UAAU,QAAb,sBACA,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,qBAAW6I,KAAI,UAAKmS,GAAoBjb,KAAK,MAAM6I,MAAM,aAG5E,yBAAKzT,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,2BAAOV,KAAK,OAAOH,GAAG,QAAQa,UAAU,eAAeE,YAAY,mBAAWX,SAAU,SAACC,GACrF+sB,EAAc/sB,EAAMC,OAAOJ,OAC3BxD,QAAQC,IAAIwwB,OAGpB,4BAAQhtB,KAAK,SAASU,UAAU,mBAC5B,uBAAGA,UAAU,sBAM7B,yBAAKA,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,mCACA,yBAAKA,UAAU,kBACX,4BAAQA,UAAU,4BAA4BiH,QAAS,WACnD9D,EAASL,GAAqBqpB,GAAyBvW,SACvDsY,MAEA,uBAAGluB,UAAU,mBAJjB,gCASR,yBAAKA,UAAU,aACX,kBAAC,GAAD,CACIuf,SAlE5B,SAAwB2N,GACpB/pB,EPjBD,SAA8B+pB,GACjC,MAAO,CAAE5tB,KAAMwtB,GAA4BI,OAAQA,GOgBtCiB,CAAqBjB,IAC9BgB,IACA/qB,EAASL,GAAqBqpB,GAAyB9V,QA+DLhX,MAAOitB,QASrD,kBAAC,KAAD,CACIruB,KAAM6nB,EACN3J,QAAS,kBAAM4J,GAAS,IACxB3J,sBAAoB,GAEpB,oCAEQ,WACI,GAAKuR,EAAQhY,oBAAsBwW,GAAyBvW,QAAa+X,EAAQC,gBAAoBD,EAAQhY,oBAAsBwW,GAAyB3M,KACxJ,OAAO,kBAAC,GAAD,CAAY1J,QAASoQ,IAFpC,KASR,WACI,GAAKyH,EAAQC,gBAAoBD,EAAQhY,oBAAsBwW,GAAyB1M,OACpF,OACI,kBAAC,KAAD,CACIxhB,KAAM6nB,EACN3J,QAAS,kBAAM4J,GAAS,IACxB3J,sBAAoB,GAEpB,yBAAKpc,UAAU,cAAcb,GAAG,eAC5B,yBAAKa,UAAU,eAAf,iBAGA,yBAAKA,UAAU,iBACX,4BAAQV,KAAK,SACTU,UAAU,iBACViH,QAAS,WACA0mB,EAAQC,iBAGbzqB,ECjLzC,SAASirB,EAAajvB,GACzB,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACEC,+BADF,wBAC+ClE,GAAM,CAClD9B,OAAQ,SACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI3CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASirB,EAAajvB,OAUjCmE,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZZ,EAASkqB,GAAaluB,OAEzBgF,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aD8I6BsyB,CAAaT,EAAQC,eAAezuB,KAC7CgE,EAASgd,GAAgB,sBAAD,UAAiBwN,EAAQC,eAAe/V,WAAxC,4CACxB1U,EAASkqB,GAAaM,EAAQC,eAAezuB,KAC7CgE,EAASmqB,MACTvH,GAAS,MAVjB,aAbxB,M,SD3JJiI,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KGLL,IAAMK,GAAuB,eACvBC,GAAwB,gBACxBC,GAA0B,kBAE1BC,GAAuC,+BACvCC,GAAsC,8BACtC9sB,GAAiC,yBACjCrB,GAA6B,qBAC7BC,GAA6B,qBAC7BC,GAA2B,mBAC3BkuB,GAA8B,sBAC9BC,GAA2B,mBAEjC,SAAS7sB,KACZ,MAAO,CACHxC,KAAMgB,IAWP,SAAS2B,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAYZ,SAAS+vB,GAAWC,GACvB,MAAO,CAAEvvB,KAAM+uB,GAAcQ,SAAUA,GAGpC,SAASC,GAAYD,GACxB,MAAO,CAAEvvB,KAAMgvB,GAAeO,SAAUA,GAGrC,SAASE,GAAc5vB,GAC1B,MAAO,CAAEG,KAAMivB,GAAiBpvB,GAAIA,GAOjC,SAAS6vB,KACZ,MAAO,CAAE1vB,KAAMmvB,IAGZ,SAAS3rB,GAAqBzD,GACjC,MAAO,CAAEC,KAAMqC,GAAwBtC,MAAOA,GCoDnC4vB,OA1Gf,SAAuBxwB,GAEnB,IAAM0E,EAAWqD,cACb0oB,EAAYtnB,aAAY,SAACC,GAAD,OAAWA,EAAMqnB,aAC/CrzB,QAAQC,IAAI2C,EAAMY,OAGlB,IAAMoe,EAAQyR,EAAUC,SAElBlyB,EAAU,CACd0gB,eAAgB,EAChByR,gBAAiB,EACjBC,eAAgB,QAChBC,aAAc,OACdC,cAAe,OACfC,cAAe,OACfC,eAAgB,cAChBC,cAAe,YACfC,gBAAiB,aACjBC,eAAgB,aAChBvR,WAAW,EACXC,UAAWb,EAAM3d,OACjB+vB,qBAAsB,SAACC,EAAcC,GACnCl0B,QAAQC,IAAI,4BACZD,QAAQC,IAAI,yBAA2Bg0B,GACvCj0B,QAAQC,IAAI,gBAAkBi0B,IAEhCC,cAAe,SAACD,EAAOD,GACrBj0B,QAAQC,IAAI,mBACZD,QAAQC,IAAI,yBAA2Bg0B,GACvCj0B,QAAQC,IAAI,gBAAkBi0B,KAsB5BrR,EAAU,CACd,CACEC,UAAW,OACXjL,KAAM,SACNkL,OAAQC,yBAEV,CACEF,UAAW,GACXjL,KAAM,yBACNoL,UAlBJ,SAAoBC,EAAMC,GACxB,OACI,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACpDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClC7b,EAASL,GAAqBkrB,GAA0BxO,SAF5D,yBAkBJ,CACEb,UAAW,GACXjL,KAAM,GACNoL,UAhCJ,SAAsBC,EAAMC,GAC1B,OACI,4BAAQ1f,KAAK,SAASU,UAAU,iBAAiBiH,QAAS,WACnDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClC7b,EAASL,GAAqBkrB,GAA0BvO,WAF5D,aAsDN,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACEC,WACEC,KAAkB1iB,KAzBP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aCnFT,SAASoQ,GAAW9sB,GACvB,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,2BAC0D,CACvDhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS8sB,GAAW9sB,OAU/BG,MAAM,SAAAS,GACHZ,EFfL,CACH7D,KAAMiB,GACNsuB,SEakC9qB,IAC1BZ,EFEL,CAAE7D,KAAMovB,KEDH7yB,QAAQC,IAAIiI,EAAKhG,KAAK8wB,UACtB9qB,EAAKhG,KAAK8wB,SAAS5hB,KAAI,SAAC3B,EAAU4B,GAC9B,IAAIgjB,EAAmB,CACnB/wB,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,aAGrB,OACWnK,EADG,IAAV+J,EFZjB,SAAwB2hB,GAC3B,MAAO,CAAEvvB,KAAMqvB,GAAkBE,SAAUA,GEYPsB,CAAeD,GAGftB,GAAWsB,UAItC/rB,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,Y,+NCuEbs0B,ICzHHC,GDyHGD,GA/Gf,SAAuB3xB,GACrB,IAAM0E,EAA0BqD,cAC1B0oB,EAAkCtnB,aAAY,SAACC,GAAD,OAAuBA,EAAMqnB,aAC7EL,EAA4BK,EAAUoB,gBACpC5a,EAAqBwZ,EAAUvZ,oBAAsBqY,GAA0BpY,OAEhFiZ,IAAYnZ,IACfmZ,EAAW,CAAE1vB,GAAI,EAAGkO,KAAM,GAAIC,YAAa,KAPc,MAUzB5O,mBAAS,CACzC2O,KAAM,CAAExO,MAAO,GAAIQ,MAAOwvB,EAASxhB,MACnCC,YAAa,CAAEzO,MAAO,GAAIQ,MAAOwvB,EAASvhB,eAZe,mBAUpD3G,EAVoD,KAUzCC,EAVyC,KAe3D,SAASE,EAAoBC,GAC3BH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UAiDjF,SAAS2H,IACP,OAAQL,EAAU0G,KAAKxO,QAAS8H,EAAU0G,KAAKhO,MAGjD,OACE,kBAAC,WAAD,KACE,yBAAKW,UAAU,iBACf,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAoC0V,EAAW,WAAQ,WAArE,wBAEF,yBAAK1V,UAAU,aACb,0BAAMoH,SA3DhB,SAAkBhJ,GAChBA,EAAEiJ,iBACEL,MAGJvI,EAAMqX,SAAQ,GAMhB,SAAkBnP,EAA8BoP,GAC9C,GAAI8Y,EAAU,CACZ,IAAM1vB,EAAK8F,IAAMqC,QAAQ,uEAAwC,CAC/DlC,SAAUH,IAAMI,SAASC,aAGvByQ,IAAW6Y,GACbzrB,EEhDD,SAASotB,EAAYxsB,EAAWqJ,GACnC,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,aACgD,CACzChG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASotB,EAAYxsB,EAAKqJ,OAUrC9J,MAAM,SAAAyM,GACH9K,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,8CAA4B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC3I0qB,GAAW9sB,MAEdgB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,uDAAkC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC/I1J,QAAQC,IAAI,aFWXy0B,CAAY,CACnBljB,KAAM1G,EAAU0G,KAAKhO,MACrBiO,YAAa3G,EAAU2G,YAAYjO,OAClCF,IAGI4W,IAAW+Y,IAClB3rB,EGvDD,SAASqtB,EAAWrxB,EAAS4E,EAAWqJ,GAC3C,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,qBACgDlE,GAAM,CAC/C9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASqtB,EAAWrxB,EAAI4E,EAAMqJ,OAUzC9J,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZlI,QAAQC,IAAIqD,GACZ8F,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,iDAA6B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC5I0qB,GAAW9sB,MAEdgB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,0DAAmC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAChJ1J,QAAQC,IAAI,aHgBX00B,CAAW3B,EAAS1vB,GAAI,CAC/BkO,KAAM1G,EAAU0G,KAAKhO,MACrBiO,YAAa3G,EAAU2G,YAAYjO,OAClCF,IAGLgE,EAAS6rB,MACT7rB,EAASL,GAAqBkrB,GAA0B3X,QAxB1DC,CAAS3P,EADmB+O,EAAYkZ,GAAaE,OAqD3C,yBAAK9uB,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,cACZE,MAAOsH,EAAU0G,KAAKhO,MACtBU,MAAM,OACNR,SAAUuH,EACVlH,UAAU,EACVC,UAAW,GACXT,MAAM,SACNc,YAAY,MAElB,yBAAKF,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,oBACdY,MAAQ,cACNV,MAAOsH,EAAU2G,YAAYjO,MAC7BE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,kBACNc,YAAY,MAGlB,4BAAQF,UAAU,iBAAiBiH,QAAS,kBA5CtDxI,EAAMqX,SAAQ,QACd3S,EAASL,GAAqBkrB,GAA0B3X,SA2C9C,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCAxClBgH,IACN,WAAa,KAuCpB,oB,SC/GFqpB,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KGLL,IAAMI,GAAwB,gBACxBC,GAAyB,iBACzBC,GAA2B,mBAE3BC,GAAwC,gCACxCC,GAAuC,+BACvClvB,GAAiC,yBACjCrB,GAA6B,qBAC7BC,GAA6B,qBAC7BC,GAA2B,mBAC3BswB,GAA+B,uBAC/BC,GAA4B,oBAElC,SAASjvB,KACZ,MAAO,CACHxC,KAAMgB,IAWP,SAAS2B,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAYZ,SAASmyB,GAAYC,GACxB,MAAO,CAAE3xB,KAAMmxB,GAAeQ,UAAWA,GAGtC,SAASC,GAAaD,GACzB,MAAO,CAAE3xB,KAAMoxB,GAAgBO,UAAWA,GAGvC,SAASE,GAAehyB,GAC3B,MAAO,CAAEG,KAAMqxB,GAAkBxxB,GAAIA,GAOlC,SAASiyB,KACZ,MAAO,CAAE9xB,KAAMuxB,IAGZ,SAASQ,GAA6BhyB,GACzC,MAAO,CAAEC,KAAMqC,GAAwBtC,MAAOA,GCoDnCiyB,OA1Gf,SAAwB7yB,GAEpB,IAAM0E,EAAWqD,cACb+qB,EAAa3pB,aAAY,SAACC,GAAD,OAAWA,EAAM0pB,cAChD11B,QAAQC,IAAI2C,EAAMY,OAGlB,IAAMoe,EAAQ8T,EAAWC,UAEnBv0B,EAAU,CACd0gB,eAAgB,EAChB8T,iBAAkB,EAClBC,gBAAiB,QACjBC,cAAe,OACfC,eAAgB,OAChBC,eAAgB,OAChBC,gBAAiB,eACjBC,eAAgB,aAChBC,iBAAkB,cAClBC,gBAAiB,cACjB5T,WAAW,EACXC,UAAWb,EAAM3d,OACjBoyB,sBAAuB,SAACC,EAAeC,GACrCv2B,QAAQC,IAAI,6BACZD,QAAQC,IAAI,0BAA4Bq2B,GACxCt2B,QAAQC,IAAI,iBAAmBs2B,IAEjCC,eAAgB,SAACD,EAAQD,GACvBt2B,QAAQC,IAAI,oBACZD,QAAQC,IAAI,0BAA4Bq2B,GACxCt2B,QAAQC,IAAI,iBAAmBs2B,KAsB7B1T,EAAU,CACd,CACEC,UAAW,OACXjL,KAAM,SACNkL,OAAQC,yBAEV,CACEF,UAAW,GACXjL,KAAM,yBACNoL,UAlBJ,SAAoBC,EAAMC,GACxB,OACI,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACpDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClC7b,EAASkuB,GAA6BhB,GAA2B7Q,SAFrE,yBAkBJ,CACEb,UAAW,GACXjL,KAAM,GACNoL,UAhCJ,SAAsBC,EAAMC,GAC1B,OACI,4BAAQ1f,KAAK,SAASU,UAAU,iBAAiBiH,QAAS,WACnDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClC7b,EAASkuB,GAA6BhB,GAA2B5Q,WAFrE,aAsDN,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACEC,WACEC,KAAkB1iB,KAzBP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aCnFT,SAASyS,GAAYnvB,GACxB,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,4BAC4D,CACxDhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASmvB,GAAYnvB,OAUhCG,MAAM,SAAAS,GACHZ,EFdL,CACH7D,KAAMiB,GACN0wB,UEYkCltB,IAC1BZ,EFGL,CAAE7D,KAAMwxB,KEFHj1B,QAAQC,IAAIiI,EAAKhG,KAAKkzB,WACtBltB,EAAKhG,KAAKkzB,UAAUhkB,KAAI,SAAC3B,EAAU4B,GAC/B,IAAIqlB,EAAqB,CACrBpzB,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,aAGrB,OACWnK,EADG,IAAV+J,EFXjB,SAAyB+jB,GAC5B,MAAO,CAAE3xB,KAAMyxB,GAAmBE,UAAWA,GEWTuB,CAAgBD,GAGhBvB,GAAYuB,UAIvCpuB,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,Y,+NCwEb22B,ICzHHC,GDyHGD,GA/Gf,SAAwBh0B,GACtB,IAAM0E,EAA0BqD,cAC1B+qB,EAAoC3pB,aAAY,SAACC,GAAD,OAAuBA,EAAM0pB,cAC/EN,EAA8BM,EAAWoB,iBACvCjd,EAAqB6b,EAAW5b,oBAAsB0a,GAA2Bza,OAElFqb,IAAavb,IAChBub,EAAY,CAAE9xB,GAAI,EAAGkO,KAAM,GAAIC,YAAa,KAPe,MAU3B5O,mBAAS,CACzC2O,KAAM,CAAExO,MAAO,GAAIQ,MAAO4xB,EAAU5jB,MACpCC,YAAa,CAAEzO,MAAO,GAAIQ,MAAO4xB,EAAU3jB,eAZgB,mBAUtD3G,EAVsD,KAU3CC,EAV2C,KAe7D,SAASE,EAAoBC,GAC3BH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UAkDjF,SAAS2H,IACP,OAAQL,EAAU0G,KAAKxO,QAAU8H,EAAU0G,KAAKhO,MAGlD,OACE,kBAAC,WAAD,KACE,yBAAKW,UAAU,iBACf,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAoC0V,EAAW,WAAQ,WAArE,2BAEF,yBAAK1V,UAAU,aACb,0BAAMoH,SA5DhB,SAAkBhJ,GAChBA,EAAEiJ,iBACEL,MAIJvI,EAAMqX,SAAQ,GAMhB,SAAkBnP,EAA+BoP,GAC/C,GAAIkb,EAAW,CACb,IAAM9xB,EAAK8F,IAAMqC,QAAQ,uEAAwC,CAC/DlC,SAAUH,IAAMI,SAASC,aAGvByQ,IAAWib,GACb7tB,EEjDD,SAASyvB,EAAa7uB,EAAWqJ,GACpC,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,cACiD,CAC1ChG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASyvB,EAAa7uB,EAAMqJ,OAUvC9J,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZkB,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,iDAA4B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC3I+sB,GAAYnvB,MAEfgB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,0DAAkC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC/I1J,QAAQC,IAAI,aFYX82B,CAAa,CACpBvlB,KAAM1G,EAAU0G,KAAKhO,MACrBiO,YAAa3G,EAAU2G,YAAYjO,OAClCF,IAGI4W,IAAWmb,IAClB/tB,EGxDD,SAAS0vB,EAAY1zB,EAAS4E,EAAWqJ,GAC5C,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,sBACiDlE,GAAM,CAChD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS0vB,EAAY1zB,EAAI4E,EAAMqJ,OAU1C9J,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZlI,QAAQC,IAAIqD,GACZ8F,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,oDAA6B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC5I+sB,GAAYnvB,MAEfgB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,6DAAmC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAChJ1J,QAAQC,IAAI,aHkBX+2B,CAAY5B,EAAU9xB,GAAI,CACjCkO,KAAM1G,EAAU0G,KAAKhO,MACrBiO,YAAa3G,EAAU2G,YAAYjO,OAClCF,IAGLgE,EAASiuB,MACTjuB,EAASkuB,GAA6BhB,GAA2Bha,QAxBnEC,CAAS3P,EADmB+O,EAAYsb,GAAcE,OAqD9C,yBAAKlxB,UAAU,cACT,kBAAC,EAAD,CAAWb,GAAG,cACZE,MAAOsH,EAAU0G,KAAKhO,MACtBU,MAAM,OACNR,SAAUuH,EACVlH,UAAU,EACVC,UAAW,GACXT,MAAM,SACNc,YAAY,MAElB,yBAAKF,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,oBACdY,MAAQ,cACNV,MAAOsH,EAAU2G,YAAYjO,MAC7BE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,kBACNc,YAAY,MAElB,4BAAQF,UAAU,iBAAiBiH,QAAS,kBA3CtDxI,EAAMqX,SAAQ,QACd3S,EAASkuB,GAA6BhB,GAA2Bha,SA0CvD,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCAvClBgH,IACN,WAAa,KAsCpB,oB,SC/GF0rB,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KG6GGI,OA1Gf,SAAsBr0B,GAElB,IAAM0E,EAAWqD,cACbusB,EAAWnrB,aAAY,SAACC,GAAD,OAAWA,EAAMkrB,YAC9Cl3B,QAAQC,IAAI2C,EAAMY,OAGlB,IAAMoe,EAAQsV,EAASC,QAEjB/1B,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KAsB3ByL,EAAU,CACd,CACEC,UAAW,OACXjL,KAAM,SACNkL,OAAQC,yBAEV,CACEF,UAAW,GACXjL,KAAM,yBACNoL,UAlBJ,SAAoBC,EAAMC,GACxB,OACI,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACpDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClC7b,EAASgS,GAA2Bud,GAAyBlT,SAFjE,yBAkBJ,CACEb,UAAW,GACXjL,KAAM,GACNoL,UAhCJ,SAAsBC,EAAMC,GAC1B,OACI,4BAAQ1f,KAAK,SAASU,UAAU,iBAAiBiH,QAAS,WACnDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClC7b,EAASgS,GAA2Bud,GAAyBjT,WAFjE,aAsDN,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACEC,WACEC,KAAkB1iB,KAzBP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aCnFT,SAASoT,GAAU9vB,GACtB,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,0BAC0D,CACtDhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS8vB,GAAU9vB,OAU9BG,MAAM,SAAAS,GACHZ,EjFdL,CACH7D,KAAMiB,GACNwU,QiFYkChR,IAC1BZ,EjFGL,CAAE7D,KAAMsV,KiFFH/Y,QAAQC,IAAIiI,EAAKhG,KAAKgX,SACtBhR,EAAKhG,KAAKgX,QAAQ9H,KAAI,SAAC3B,EAAU4B,GAC7B,IAAIgmB,EAAiB,CACjB/zB,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,aAGrB,OACWnK,EADG,IAAV+J,EjFXjB,SAAuB6H,GAC1B,MAAO,CAAEzV,KAAMuV,GAAiBE,QAASA,GiFWLoe,CAAcD,GAGdpe,GAAUoe,UAIrC/uB,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,Y,+NCuEbyZ,OA9Gf,SAAsB9W,GACpB,IAAM0E,EAA0BqD,cAC1BusB,EAAgCnrB,aAAY,SAACC,GAAD,OAAuBA,EAAMkrB,YAC3Ehe,EAA0Bge,EAASK,eACjC1d,EAAqBqd,EAASpd,oBAAsB+c,GAAyB9c,OAE9Eb,IAAWW,IACdX,EAAU,CAAE5V,GAAI,EAAGkO,KAAM,GAAIC,YAAa,KAPa,MAUvB5O,mBAAS,CACzC2O,KAAM,CAAExO,MAAO,GAAIQ,MAAO0V,EAAQ1H,MAClCC,YAAa,CAAEzO,MAAO,GAAIQ,MAAO0V,EAAQzH,eAZc,mBAUlD3G,EAVkD,KAUvCC,EAVuC,KAezD,SAASE,EAAoBC,GAC3BH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UAgDjF,SAAS2H,IACP,OAAQL,EAAU0G,KAAKxO,QAAU8H,EAAU0G,KAAKhO,MAGlD,OACE,kBAAC,WAAD,KACE,yBAAKW,UAAU,iBACf,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAoC0V,EAAW,WAAQ,WAArE,4BAEF,yBAAK1V,UAAU,aACb,0BAAMoH,SA1DhB,SAAkBhJ,GAChBA,EAAEiJ,iBACEL,MAGJvI,EAAMqX,SAAQ,GAKhB,SAAkBnP,EAA6BoP,GAC7C,GAAIhB,EAAS,CACX,IAAM5V,EAAK8F,IAAMqC,QAAQ,uEAAwC,CAC/DlC,SAAUH,IAAMI,SAASC,aAGvByQ,IAAWjB,GACb3R,EC/CD,SAASkwB,EAAWtvB,EAAWqJ,GAClC,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,YAC+C,CACxChG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASkwB,EAAWtvB,EAAMqJ,OAUrC9J,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZkB,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,kDAA2B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC1I0tB,GAAU9vB,MAEbgB,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,2DAAiC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC9I1J,QAAQC,IAAI,aDSXu3B,CAAW,CAClBhmB,KAAM1G,EAAU0G,KAAKhO,MACrBiO,YAAa3G,EAAU2G,YAAYjO,OAClCF,IAGI4W,IAAWf,IAClB7R,EEtDD,SAASmwB,EAAUn0B,EAAS4E,EAAWqJ,GAC1C,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,oBAC+ClE,GAAM,CAC9C9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASmwB,EAAUn0B,EAAI4E,EAAMqJ,OAUxC9J,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZlI,QAAQC,IAAIqD,GACZ8F,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,qDAA4B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,aACpH2tB,GAAU9vB,MAEbgB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,8DAAkC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,aACxHzJ,QAAQC,IAAI,aFgBXw3B,CAAUve,EAAQ5V,GAAI,CAC7BkO,KAAM1G,EAAU0G,KAAKhO,MACrBiO,YAAa3G,EAAU2G,YAAYjO,OAClCF,IAGLgE,EAAS+R,MACT/R,EAASgS,GAA2Bud,GAAyBrc,QAxB/DC,CAAS3P,EADmB+O,EAAYZ,GAAYE,OAqD5C,yBAAKhV,UAAU,cACT,kBAAC,EAAD,CAAWb,GAAG,cACZE,MAAOsH,EAAU0G,KAAKhO,MACtBU,MAAM,OACNR,SAAUuH,EACVlH,UAAU,EACVC,UAAW,GACXT,MAAM,SACNc,YAAY,MAElB,yBAAKF,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,oBACdY,MAAQ,cACNV,MAAOsH,EAAU2G,YAAYjO,MAC7BE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,kBACNc,YAAY,MAGlB,4BAAQF,UAAU,iBAAiBiH,QAAS,kBA5CtDxI,EAAMqX,SAAQ,QACd3S,EAASgS,GAA2Bud,GAAyBrc,SA2CnD,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCAxClBgH,IACN,WAAa,KAuCpB,mB,OGrEd,IC1BYusB,GD0eGC,GAhdO,WAAO,IAAD,EACQ90B,oBAAS,GADjB,mBACjB+0B,EADiB,KACPC,EADO,OAEQh1B,oBAAS,GAFjB,mBAEjBi1B,EAFiB,KAEPC,EAFO,OAGQl1B,oBAAS,GAHjB,mBAGjBm1B,EAHiB,KAGPC,EAHO,KAIlB3wB,EAA0BqD,cACxB4T,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAEzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OASbuL,wBAAaqkB,GAAW9sB,IACxByI,wBAAaqnB,GAAU9vB,IACvByI,wBAAa0mB,GAAYnvB,QAGlC,CAACA,EAAUwY,EAAc3Y,IAG5B,IAAMksB,EAA2BtnB,aAAY,SAACC,GAAD,OAAuBA,EAAMqnB,aACpEqC,EAA6B3pB,aAAY,SAACC,GAAD,OAAuBA,EAAM0pB,cACtEwB,EAAyBnrB,aAAY,SAACC,GAAD,OAAuBA,EAAMkrB,YAClE31B,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzE8gB,EAA6B7E,EAAUC,SAASrvB,OAChDk0B,EAA8BzC,EAAWC,UAAU1xB,OACnDm0B,EAA4BlB,EAASC,QAAQlzB,OAnD3B,EAoDIpB,oBAAS,GApDb,mBAoDjB4b,EApDiB,KAoDTC,EApDS,OAqDI7b,oBAAS,GArDb,mBAqDjBw1B,EArDiB,KAqDTC,EArDS,OAsDIz1B,oBAAS,GAtDb,mBAsDjB01B,EAtDiB,KAsDTC,EAtDS,OAuDY31B,mBAAS,IAvDrB,mBAuDjB4tB,EAvDiB,KAuDLC,EAvDK,KAgExB,SAAS+H,EAAgBzF,GACrB1rB,EnB1DD,SAA+B0rB,GAClC,MAAO,CAAEvvB,KAAMkvB,GAA8BK,SAAUA,GmByD1C0F,CAAsB1F,IAC/B2F,IACArxB,EAASL,GAAqBkrB,GAA0B3X,OAG5D,SAASoe,EAAiBxD,GACtB9tB,EZhED,SAAgC8tB,GACnC,MAAO,CAAE3xB,KAAMsxB,GAA+BK,UAAWA,GY+D5CyD,CAAuBzD,IAChC0D,IACAxxB,EAASkuB,GAA6BhB,GAA2Bha,OAGrE,SAASue,EAAe7f,GACpB5R,ErFtED,SAA8B4R,GACjC,MAAO,CAAEzV,KAAMoV,GAA6BK,QAASA,GqFqExC8f,CAAqB9f,IAC9B+f,IACA3xB,EAASgS,GAA2Bud,GAAyBrc,OAGjE,SAASme,IACLja,GAAU,GAEd,SAASoa,IACLN,GAAU,GAGd,SAASS,IACLX,GAAU,GAGd,SAAS3Z,EAAenb,GACpBkb,GAAU,GAGd,SAASwa,EAAe11B,GACpB80B,GAAU,GAGd,SAASa,GAAe31B,GACpBg1B,GAAU,GAId,OAjDA1oB,qBAAU,WACNxI,EAAS6rB,MACT7rB,EAASiuB,MACTjuB,EAAS+R,MACT/R,EAASmQ,GAAkB,uBAAc,mBAC1C,CAAClW,EAAK+V,KAAMhQ,IA6CXiX,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACH,kBAAC,IAAD,MACA,wBAAIxH,UAAU,yBAAd,wBACA,uBAAGA,UAAU,QAAb,sBACA,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,qBAAW6I,KAAI,UAAKqgB,GAAsBnpB,KAAK,MAAM6I,MAAM,YAC1E,kBAAC,GAAD,CAAS5I,MAAM,yBAAU6I,KAAI,UAAKugB,GAAqBrpB,KAAK,MAAM6I,MAAM,YACxE,kBAAC,GAAD,CAAS5I,MAAM,wBAAW6I,KAAI,UAAKsgB,GAAuBppB,KAAK,MAAM6I,MAAM,aAG/E,yBAAKzT,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,2BAAOV,KAAK,SAASH,GAAG,QAAQa,UAAU,eAAeE,YAAY,mBAAWX,SAAU,SAACC,GACvF+sB,EAAc/sB,EAAMC,OAAOJ,OAC3BxD,QAAQC,IAAIwwB,OAGpB,4BAAQhtB,KAAK,SAASU,UAAU,mBAC5B,uBAAGA,UAAU,sBAO7B,yBAAKA,UAAU,OACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,WAAW8H,QAAS,YACvC,IAAbwsB,IACAC,GAAY,GACZE,GAAY,GACZE,GAAY,KAEjBvsB,MAAO,CACNC,MAAOisB,EAAW,UAAY,YAPlC,sBAUA,yBAAKlsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBwJ,EAAW,UAAY,cAGhD,yBAAKzzB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACxC,IAAb0sB,IACAC,GAAY,GACZF,GAAY,GACZI,GAAY,KAGhBvsB,MAAO,CACHC,MAAOmsB,EAAW,UAAY,YARtC,0BAUA,yBAAKpsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiB0J,EAAW,UAAY,cAIhD,yBAAK3zB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACxC,IAAb4sB,IACAC,GAAY,GACZJ,GAAY,GACZE,GAAY,KAGhBrsB,MAAO,CACHC,MAAOqsB,EAAW,UAAY,YARtC,yBAUA,yBAAKtsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiB4J,EAAW,UAAY,gBAQ3B,IAAbJ,EAEI,kBAAC,WAAD,KACI,yBAAKzzB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,mCACA,yBAAKA,UAAU,kBACX,4BAAQA,UAAU,4BAA4BiH,QAAS,WACnD9D,EAASL,GAAqBkrB,GAA0BpY,SACxD4e,MAEA,uBAAGx0B,UAAU,mBAJjB,gCASR,yBAAKA,UAAU,aACX,kBAAC,GAAD,CACIuf,SAAU+U,EAAiBj1B,MAAOitB,QAQtD,kBAAC,KAAD,CACIruB,KAAMqc,EACN6B,QAAS,kBAAM5B,GAAU,IACzB6B,sBAAoB,GAEpB,oCAEQ,WACI,GAAK8S,EAAUvZ,oBAAsBqY,GAA0BpY,QAAasZ,EAAUoB,iBAAqBpB,EAAUvZ,oBAAsBqY,GAA0BxO,KACjK,OAAO,kBAAC,GAAD,CAAe1J,QAAS0E,IAFvC,KASR,WACI,GAAK0U,EAAUoB,iBAAqBpB,EAAUvZ,oBAAsBqY,GAA0BvO,OAC1F,OACI,kBAAC,KAAD,CACIxhB,KAAMqc,EACN6B,QAAS,kBAAM5B,GAAU,IACzB6B,sBAAoB,GAEpB,yBAAKpc,UAAU,cAAcb,GAAG,eAC5B,yBAAKa,UAAU,eAAf,iBAGA,yBAAKA,UAAU,iBACX,4BAAQV,KAAK,SACTU,UAAU,iBACViH,QAAS,WACL,GAAKioB,EAAUoB,gBAAf,CAGA,IAAMljB,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAC9DlC,SAAUH,IAAMI,SAASC,aAE7BnC,EE5T7D,SAAS8xB,EAAc91B,EAASiO,GACnC,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACEC,+BADF,qBAC4ClE,GAAM,CAC/C9B,OAAQ,SACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI3CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS8xB,EAAc91B,EAAIiO,OAUtC9J,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZkB,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,gDAA2B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC1IpC,EAAS4rB,GAAc5vB,OAE1BgF,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,yDAAiC5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAChJ1J,QAAQC,IAAI,aFsRiDm5B,CAAc/F,EAAUoB,gBAAgBnxB,GAAIiO,IACrDjK,EAASgd,GAAgB,sBAAD,UAAiB+O,EAAUoB,gBAAgBjjB,KAA3C,4CACxBlK,EAAS4rB,GAAcG,EAAUoB,gBAAgBnxB,KACjDgE,EAAS6rB,MACTzU,GAAU,MAblB,aAbxB,KAuCM,IAAboZ,EAED,kBAAC,WAAD,KACI,yBAAK3zB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,uCACA,yBAAKA,UAAU,kBACX,4BAAQA,UAAU,4BAA4BiH,QAAS,WACnD9D,EAASgS,GAA2Bud,GAAyB9c,SAC7Dkf,MAEA,uBAAG90B,UAAU,mBAJjB,oCASR,yBAAKA,UAAU,aACX,kBAAC,GAAD,CACIuf,SAAUqV,EAAgBv1B,MAAOitB,QAQrD,kBAAC,KAAD,CACIruB,KAAMi2B,EACN/X,QAAS,kBAAMgY,GAAU,IACzB/X,sBAAoB,GAEpB,oCAEQ,WACI,GAAK2W,EAASpd,oBAAsB+c,GAAyB9c,QAAamd,EAASK,gBAAoBL,EAASpd,oBAAsB+c,GAAyBlT,KAC3J,OAAO,kBAAC,GAAD,CAAc1J,QAASif,IAFtC,KASR,WACI,GAAKhC,EAASK,gBAAoBL,EAASpd,oBAAsB+c,GAAyBjT,OACtF,OACI,kBAAC,KAAD,CACIxhB,KAAMi2B,EACN/X,QAAS,kBAAMgY,GAAU,IACzB/X,sBAAoB,GAEpB,yBAAKpc,UAAU,cAAcb,GAAG,eAC5B,yBAAKa,UAAU,eAAf,iBAGA,yBAAKA,UAAU,iBACX,4BAAQV,KAAK,SACTU,UAAU,iBACViH,QAAS,WACL,GAAK8rB,EAASK,eAAd,CAGA,IAAMhmB,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAC9DlC,SAAUH,IAAMI,SAASC,aAE7BnC,EG/Y7D,SAAS+xB,EAAa/1B,EAASiO,GAClC,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACEC,+BADF,oBAC2ClE,GAAM,CAC9C9B,OAAQ,SACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI3CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS+xB,EAAa/1B,EAAIiO,OAUrC9J,MAAM,SAAAS,GACHkB,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,iDAA0B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACzI1J,QAAQC,IAAIiI,GACZZ,EAAS8R,GAAa9V,OAEzBgF,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,0DAAgC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC7IpC,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aH0WiDo5B,CAAanC,EAASK,eAAej0B,GAAIiO,IAClDjK,EAASgd,GAAgB,0BAAD,UAAgB4S,EAASK,eAAe/lB,KAAxC,4CACxBlK,EAAS8R,GAAa8d,EAASK,eAAej0B,KAC9CgE,EAAS+R,MACTif,GAAU,MAblB,aAbxB,KAwCM,IAAbN,EAED,kBAAC,WAAD,KACI,yBAAK7zB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,sCACA,yBAAKA,UAAU,kBACX,4BAAQA,UAAU,4BAA4BiH,QAAS,WACnD9D,EAASkuB,GAA6BhB,GAA2Bza,SACjE+e,MAEA,uBAAG30B,UAAU,mBAJjB,mCASR,yBAAKA,UAAU,aACX,kBAAC,GAAD,CACIuf,SAAUkV,EAAkBp1B,MAAOitB,QAQvD,kBAAC,KAAD,CACIruB,KAAMm2B,EACNjY,QAAS,kBAAMkY,GAAU,IACzBjY,sBAAoB,GAEpB,oCAEQ,WACI,GAAKmV,EAAW5b,oBAAsB0a,GAA2Bza,QAAa2b,EAAWoB,kBAAsBpB,EAAW5b,oBAAsB0a,GAA2B7Q,KACvK,OAAO,kBAAC,GAAD,CAAgB1J,QAASkf,KAFxC,KASR,WACI,GAAKzD,EAAWoB,kBAAsBpB,EAAW5b,oBAAsB0a,GAA2B5Q,OAC9F,OACI,kBAAC,KAAD,CACIxhB,KAAMm2B,EACNjY,QAAS,kBAAMkY,GAAU,IACzBjY,sBAAoB,GAEpB,yBAAKpc,UAAU,cAAcb,GAAG,eAC5B,yBAAKa,UAAU,eAAf,iBAGA,yBAAKA,UAAU,iBACX,4BAAQV,KAAK,SACTU,UAAU,iBACViH,QAAS,WACL,GAAKsqB,EAAWoB,iBAAhB,CAGA,IAAMvlB,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAC9DlC,SAAUH,IAAMI,SAASC,aAE7BnC,EIne7D,SAASgyB,EAAeh2B,EAASiO,GACpC,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACEC,+BADF,sBAC6ClE,GAAM,CAChD9B,OAAQ,SACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI3CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASgyB,EAAeh2B,EAAIiO,OAUvC9J,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZkB,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,gDAA2B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC1IpC,EAASguB,GAAehyB,OAE3BgF,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,yDAAiC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC9IpC,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aJ8biDq5B,CAAe5D,EAAWoB,iBAAiBxzB,GAAIiO,IACxDjK,EAASgd,GAAgB,yBAAD,UAAiBoR,EAAWoB,iBAAiBtlB,KAA7C,4CACxBlK,EAASguB,GAAeI,EAAWoB,iBAAiBxzB,KACpDgE,EAASiuB,MACTiD,GAAU,MAblB,aAbxB,SA5CX,K,SChZbd,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KIqIG6B,OAhJf,SAAyB32B,GAErB,IAAMupB,EAAUpgB,aAAY,SAACC,GAAD,OAAWA,EAAMmgB,WACvCvhB,EAAUC,cACVvD,EAAWqD,cAIXqK,EAAc,SAACiI,GACnB7V,aAAaY,WAAW,aACxBZ,aAAae,QAAQ,YAAa8U,EAAO3Z,GAAGvD,YAC5CqH,aAAaY,WAAW,iBACxBZ,aAAae,QAAQ,gBAAiB8U,EAAOoP,eAAetsB,YAC5DqH,aAAaY,WAAW,eACxBZ,aAAae,QAAQ,cAAe8U,EAAOzL,MAE3C5G,EAAQI,KAAK,CACXmB,SAFS,+BAOPqtB,EAAY,SAACvc,GACf3V,EAASL,GAAqBywB,GAAyBld,OAEvD5P,EAAQI,KADA,yBAKR4W,EAAQuK,EAAQA,QAEhB/qB,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KAuB3ByL,EAAU,CACd,CACEC,UAAW,OACXjL,KAAM,SACNkL,OAAQC,yBAEV,CACEF,UAAW,gBACXjL,KAAM,qBACNkL,OAAQC,yBAEV,CACEF,UAAW,eACXjL,KAAM,yBACNkL,OAAQC,yBAEV,CACEF,UAAW,iBACXjL,KAAM,sBACNkL,OAAQC,yBAEV,CACEF,UAAW,GACXjL,KAAM,yBACNoL,UAlCJ,SAAoBC,EAAMC,GACxB,OACI,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACnDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GACnCnO,EAAYmO,KAFhB,8BAkCJ,CACEL,UAAW,GACXjL,KAAM,GACNoL,UAhDJ,SAAsBC,EAAMC,GAC1B,OACI,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACpDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClCqW,EAAUrW,KAFd,8BAsEN,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACEU,WACEC,KAAkB1iB,KAzBP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,a,OCxGhB,ICdYyV,GD0KGC,GA5JU,WAErB,IAAMpyB,EAA0BqD,cAC1BwhB,EAAwBpgB,aAAY,SAACC,GAAD,OAAuBA,EAAMmgB,WACjE5qB,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzEuiB,EAA4BxN,EAAQA,QAAQloB,OALvB,EAMCpB,oBAAS,GANV,mBAMpB4b,EANoB,KAMZC,EANY,KAOnBH,EAAsBC,+BAAtBD,kBAERve,QAAQC,IAAIksB,GACZ,IAAIrM,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBA0CzC,SAASuyB,IACLlb,GAAU,GA1Cd5O,qBAAU,WACNxI,EAAS+V,MACT/V,EAASmQ,GAAkB,mBAAY,mBACxC,CAAClW,EAAK+V,KAAMhQ,IAEfwI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAamc,GAAU5kB,OAGhC,CAACA,EAAUwY,EAAc3Y,IAY5B,IAAMyD,EAAUC,cAehB,OAHA7K,QAAQC,IAAIksB,EAAQrS,mBAIhByE,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACH,kBAAC,IAAD,MACA,wBAAIxH,UAAU,yBAAd,oBACA,uBAAGA,UAAU,QAAb,sBACA,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,mBAAW6I,KAAI,UAAK8hB,GAAqB5qB,KAAK,MAAM6I,MAAM,aAI7E,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,iCACA,yBAAKA,UAAU,kBACX,4BAAQA,UAAU,4BAA4BiH,QAAS,WACnD9D,EAASL,GAAqBywB,GAAyB3d,SArCnFnP,EAAQI,KACJ,CACImB,SAHA,yBAIAH,MAAO,CAAE6tB,aAAc,QAoCHD,MAEA,uBAAGz1B,UAAU,mBALjB,8BAUR,yBAAKA,UAAU,aACX,kBAAC,GAAD,CACIuf,SA9D5B,SAAwBzG,GACpB3V,EhFnBD,SAA8B2V,GACjC,MAAO,CAAExZ,KAAMoZ,GAA4BI,OAAQA,GgFkBtC6c,CAAqB7c,IAC9B2c,IACAtyB,EAASL,GAAqBywB,GAAyBld,cAoE/C,WACI,GAAK2R,EAAQ4N,gBAAoB5N,EAAQrS,oBAAsB4d,GAAyB9T,OACpF,OACI,kBAAC,KAAD,CACIxhB,KAAMqc,EACN6B,QAAS,kBAAM5B,GAAU,IACzB6B,sBAAoB,GAEpB,yBAAKpc,UAAU,cAAcb,GAAG,eAC5B,yBAAKa,UAAU,eAAf,iBAGA,yBAAKA,UAAU,iBACX,4BAAQV,KAAK,SACTU,UAAU,iBACViH,QAAS,WACA+gB,EAAQ4N,iBAGbzyB,EE/JzC,SAAS0yB,EAAa12B,GACzB,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACEC,+BADF,mBAC0ClE,GAAM,CAC7C9B,OAAQ,SACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI3CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS0yB,EAAa12B,OAUjCmE,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZZ,EAAS8V,GAAa9Z,OAEzBgF,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aF4H6B+5B,CAAa7N,EAAQ4N,eAAez2B,KAC7CgE,EAASgd,GAAgB,oBAAD,UAAiB6H,EAAQ4N,eAAez2B,GAAxC,4CACxBgE,EAAS8V,GAAa+O,EAAQ4N,eAAez2B,KAC7CgE,EAAS+V,MACTqB,GAAU,MAVlB,aAbxB,K,uCCpIJ+a,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KEVL,IAAMQ,GAAuB,eACvBC,GAAwB,gBACxBC,GAA0B,kBAE1BC,GAAuC,+BACvCC,GAAsC,8BACtCv0B,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBAC3B21B,GAA8B,sBAC9BC,GAA2B,mBAQjC,SAASr0B,GAAiBs0B,GAC7B,MAAO,CACH/2B,KAAMiB,GACN81B,WAID,SAASp0B,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UA4BZ,SAASy3B,KACZ,MAAO,CAAEh3B,KAAM42B,IAGZ,SAASpzB,GAAqBzD,GACjC,MAAO,CAAEC,KAAMqC,GAAwBtC,MAAOA,GC4GnCk3B,OAjKf,SAAmB93B,GAEf,IAAM0E,EAAWqD,cAEXgwB,EAAW5uB,aAAY,SAACC,GAAD,OAAWA,EAAM4uB,aAExChwB,EAAUC,cAGVmK,EAAc,SAAC6lB,GAEnBzzB,aAAae,QAAQ,WAAY0yB,EAAS96B,YAC1C6K,EAAQI,KAAK,CACXmB,SAHS,gBAITH,MAAO,CAAE6uB,SAAUA,MAKnBC,EAAoB,SAACD,EAAU9e,GACnC3U,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAY0yB,EAAS96B,YAC1CqH,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAc4T,GAEnCnR,EAAQI,KAAK,CACXmB,SAFS,kBAGTH,MAAO,CAAE6uB,SAAUA,MAKjBjZ,EAAQ+Y,EAASI,UAEjB35B,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KA0C3ByL,EAAU,CACd,CACEC,UAAW,OACXjL,KAAM,SACNkL,OAAQC,yBAEV,CACEF,UAAW,GACXjL,KAAM,qBACNoL,UA7BJ,SAA4BC,EAAMC,GAChC,OACI,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACpDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClC2X,EAAkB3X,EAAI7f,GAAI6f,EAAI3R,QAFlC,mBA6BJ,CACIsR,UAAW,GACXjL,KAAM,mBACNoL,UAzBN,SAA2BC,EAAMC,GAC/B,OACI,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACpDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClCnO,EAAYmO,EAAI7f,MAFpB,mBAyBJ,CACEwf,UAAW,GACXjL,KAAM,yBACNoL,UAzDJ,SAAoBC,EAAMC,GACxB,OACI,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACpDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClC7b,EAASL,GAAqBkc,MAFlC,yBAyDJ,CACEL,UAAW,GACXjL,KAAM,GACNoL,UArDJ,SAAsBC,EAAMC,GAC1B,OACI,4BAAQ1f,KAAK,SAASU,UAAU,iBAAiBiH,QAAS,WACnDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClC7b,EAASL,GAAqBwyB,GAA0B7V,WAF5D,aA2EN,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACEC,WACEC,KAAkB1iB,KAzBP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,a,OCvIT,SAASgX,GAAW1zB,GACvB,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,YAC2C,CACxChG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS0zB,GAAW1zB,OAU/BG,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EFDL,CAAE7D,KAAM62B,KEEHt6B,QAAQC,IAAIiI,EAAKhG,KAAK+4B,SACtB/yB,EAAKhG,KAAK+4B,QAAQ7pB,KAAI,SAAC3B,EAAU4B,GAG7B,IAAI6pB,EAAoB,CACpB53B,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACV2pB,cAAe1rB,EAAI0rB,cACnB3O,WAAY/c,EAAI+c,WAChB4O,6BAA8B3rB,EAAI2rB,6BAClCvO,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAGrB,OACWxlB,EADG,IAAV+J,EFpBb,CAAE5N,KAAM82B,GAAkBC,QEqBkBU,GFdhD,SAAoBV,GACvB,MAAO,CAAE/2B,KAAMw2B,GAAcO,QAASA,GEgBFa,CAAWH,UAItC5yB,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,Y,ICrDhBq7B,G,oDAAAA,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCXL,IAAMC,GAA6B,qBAC7BC,GAA8B,sBAC9BC,GAAgC,wBAEhCC,GAA6C,qCAC7CC,GAA4C,oCAC5C71B,GAAiC,yBACjCrB,GAA6B,qBAC7BC,GAA6B,qBAC7BC,GAA2B,mBAC3Bi3B,GAAoC,4BACpCC,GAAiC,yBAEvC,SAAS51B,KACZ,MAAO,CACHxC,KAAMgB,IAWP,SAAS2B,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAYZ,SAAS84B,GAAiBC,GAC7B,MAAO,CAAEt4B,KAAM83B,GAAoBQ,eAAgBA,GAGhD,SAASC,GAAkBD,GAC9B,MAAO,CAAEt4B,KAAM+3B,GAAqBO,eAAgBA,GAWjD,SAASE,KACZ,MAAO,CAAEx4B,KAAMk4B,IAGZ,SAASO,GAAkC14B,GAC9C,MAAO,CAAEC,KAAMqC,GAAwBtC,MAAOA,GCqGnC24B,OA3Jf,SAA2Bv5B,GAEvB,IAAM0E,EAAWqD,cACXyxB,EAAmBrwB,aAAY,SAACC,GAAD,OAAWA,EAAMowB,oBAChD/gB,EAAYtP,aAAY,SAACC,GAAD,OAAWA,EAAMqP,aAC3CghB,EAAgB,GACpBr8B,QAAQC,IAAIm8B,EAAiBE,iBACzBjhB,EAAUA,UAAUpX,OAAS,GAC/Bm4B,EAAiBE,gBAAgBlrB,KAAI,SAAA3B,GACnC,IAAIiF,EAAO,GAQX,OAPA2G,EAAUA,UAAUjK,KAAI,SAAAmrB,GAKtB,OAJIA,EAAQ1lB,oBAAsBpH,EAAInM,KACpCtD,QAAQC,IAAIs8B,EAAQC,aACpB9nB,GAAQ6nB,EAAQC,aAEXD,KAEFF,EAAcrxB,KAAK,CACxBwG,KAAM/B,EAAI+B,KACVhO,MAAOkR,OAMf,IAAMkN,EAAQwa,EAAiBE,gBAEzBl7B,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KAkC3ByL,EAAU,CACd,CACEC,UAAW,OACXjL,KAAM,SACNkL,OAAQC,yBAEV,CACEF,UAAW,cACXjL,KAAM,mBACNkL,OAAQC,yBAEV,CACEF,UAAW,gBACXjL,KAAM,iBACNkL,OAAQC,yBAEV,CACEF,UAAW,kBACXjL,KAAM,0CAER,CACEiL,UAAW,GACXjL,KAAM,qBACNoL,UAnCJ,SAAqBC,EAAMC,EAAKsZ,GAC9B,OACI,8BACCJ,EAAcjrB,KAAI,SAAC3B,EAAK8B,GACvB,GAAI9B,EAAI+B,OAAS2R,EAAI3R,KACnB,OAAO/B,EAAIjM,YAgCnB,CACEsf,UAAW,GACXjL,KAAM,yBACNoL,UA1DJ,SAAoBC,EAAMC,GACxB,OACI,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACpDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClC7b,EAAS40B,GAAkCZ,GAAgC3X,SAF/E,yBA0DJ,CACEb,UAAW,GACXjL,KAAM,GACNoL,UAtDJ,SAAsBC,EAAMC,GAC1B,OACI,4BAAQ1f,KAAK,SAASU,UAAU,iBAAiBiH,QAAS,WACnDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClC7b,EAAS40B,GAAkCZ,GAAgC1X,WAF/E,aA4EN,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACEC,WACEC,KAAkB1iB,KAzBP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,a,QC1IH0Y,GAAuB,eACvBC,GAAwB,gBACxBC,GAA0B,kBAE1BC,GAAuC,+BACvCC,GAAsC,8BACtCh3B,GAAiC,yBACjCrB,GAA6B,qBAC7BC,GAA6B,qBAC7BC,GAA2B,mBAC3Bo4B,GAA8B,sBAC9BC,GAA2B,mBAEjC,SAAS/2B,KACZ,MAAO,CACHxC,KAAMgB,IAWP,SAAS2B,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UCrBZ,SAASi6B,GAAY31B,GACxB,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,aAC4C,CACzChG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS21B,GAAY31B,OAUhCG,MAAM,SAAAS,GACHZ,EDhBL,CACH7D,KAAMiB,GACNw4B,SCckCh1B,IAC1BZ,EDCL,CAAE7D,KAAMs5B,KCAH/8B,QAAQC,IAAIiI,EAAKhG,KAAKmZ,WACtBnT,EAAKhG,KAAKmZ,UAAUjK,KAAI,SAAC3B,EAAU4B,GAC/B,IAAI6rB,EAAqB,CACrB55B,GAAImM,EAAInM,GACR65B,eAAgB1tB,EAAI0tB,eACpBX,YAAa/sB,EAAI+sB,YACjB3lB,kBAAmBpH,EAAI2tB,oBACvBC,aAAc5tB,EAAI4tB,cAGtB,OACW/1B,EADG,IAAV+J,EDfjB,SAAyB6rB,GAC5B,MAAO,CAAEz5B,KAAMu5B,GAAkBE,SAAUA,GCePI,CAAgBJ,GDRjD,SAAqBA,GACxB,MAAO,CAAEz5B,KAAMi5B,GAAcQ,SAAUA,GCUHK,CAAYL,UAIvC50B,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCvDrB,SAASu9B,GAAat1B,GACzB,IAAIK,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,aACgD,CACzChG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASk2B,GAAat1B,OAUjCT,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZ+0B,GAAY31B,MAEfgB,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aC3BrB,SAASw9B,GAAiBn2B,GAC7B,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAOE,MAAM,GAAD,OACGC,+BADH,mBACmD,CAC/ChG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASm2B,GAAiBn2B,OAUrCG,MAAM,SAAAS,GACHZ,ELrBL,CACH7D,KAAMiB,GACNq3B,eKmBkC7zB,IAC1BZ,ELJL,CAAE7D,KAAMm4B,KKMH1zB,EAAKhG,KAAKk6B,iBAAiBhrB,KAAI,SAAC3B,EAAU4B,GACtC,IAAIqsB,EAA2B,CAC3Bp6B,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVmsB,YAAaluB,EAAIkuB,YACjBC,kBAAmBnuB,EAAImuB,kBACvBC,6BAA8BpuB,EAAIouB,6BAClCC,cAAeruB,EAAIquB,cACnBrU,UAAWha,EAAIga,UACf/S,YAAajH,EAAIiH,YACjB0V,gBAAiB3c,EAAI2c,iBAGzB,OACW9kB,EADG,IAAV+J,ELxBjB,SAA8B0qB,GACjC,MAAO,CAAEt4B,KAAMo4B,GAAwBE,eAAgBA,GKwBnBgC,CAAqBL,GAGrB5B,GAAiB4B,UAI5Cp1B,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCnBb+9B,OA9Cf,SAA+Bp7B,GAAyC,IAAD,EACzCC,mBAAS,IADgC,mBAC5DG,EAD4D,KACrDC,EADqD,OAEjCJ,mBAAS,IAFwB,mBAE5DK,EAF4D,KAEjDC,EAFiD,OAGzCN,mBAASD,EAAMY,OAH0B,mBAG5DA,EAH4D,KAGrDJ,EAHqD,KAoB7DoW,EAAqC5W,EAAMxB,QAAQgQ,KAAK,SAACqI,EAAapI,GACxE,OACI,4BAAQ0D,IAAK1D,EAAO7N,MAAOiW,EAAOjW,OAAQiW,EAAOjI,SAIzD,OACI,kBAAC,WAAD,KACI,+BAAQ5O,EAAMW,OACd,4BACIC,MAAOA,EACPW,UAAS,uBAAkBvB,EAAMwB,WAAaxB,EAAMwB,WAAa,GAAxD,YAA8DlB,GACvEQ,SA3BZ,SAAwBC,GAA8C,IAC7DX,EAAOa,EADqD,EACzB,CAAC,GAAI,GAAIF,EAAMC,OAAOJ,OAAtCM,EADyC,QAGzCA,GAAgBlB,EAAMmB,SAC1C,CAAC,2BAA4B,cAAgB,CAAC,GAAI,YAJW,mBAGhEf,EAHgE,KAGzDa,EAHyD,KAOjEjB,EAAMc,SAAS4Q,SAASxQ,GAAelB,EAAMyO,OAC7CpO,EAASD,GACTG,EAAaU,GACbT,EAASkR,SAASxQ,MAkBV,4BAAQN,MAAQ,GAAhB,aACCgW,GAGJxW,EACG,yBAAKmB,UAAU,oBACVnB,GACI,OCMVi7B,OA9Cf,SAAgCr7B,GAAyC,IAAD,EAC1CC,mBAAS,IADiC,mBAC7DG,EAD6D,KACtDC,EADsD,OAElCJ,mBAAS,IAFyB,mBAE7DK,EAF6D,KAElDC,EAFkD,OAG1CN,mBAASD,EAAMY,OAH2B,mBAG7DA,EAH6D,KAGtDJ,EAHsD,KAoB9DoW,EAAqC5W,EAAMxB,QAAQgQ,KAAK,SAACqI,EAAapI,GACxE,OACI,4BAAQ0D,IAAK1D,EAAO7N,MAAOiW,EAAOjW,OAAQiW,EAAOjI,SAIzD,OACI,kBAAC,WAAD,KACI,+BAAQ5O,EAAMW,OACd,4BACIC,MAAOA,EACPW,UAAS,uBAAkBvB,EAAMwB,WAAaxB,EAAMwB,WAAa,GAAxD,YAA8DlB,GACvEQ,SA3BZ,SAAwBC,GAA8C,IAC7DX,EAAOa,EADqD,EACzB,CAAC,GAAI,GAAIF,EAAMC,OAAOJ,OAAtCM,EADyC,QAGzCA,GAAgBlB,EAAMmB,SAC1C,CAAC,2BAA4B,cAAgB,CAAC,GAAI,YAJW,mBAGhEf,EAHgE,KAGzDa,EAHyD,KAOjEjB,EAAMc,SAASI,EAAclB,EAAMyO,OACnCpO,EAASD,GACTG,EAAaU,GACbT,EAASU,KAkBD,4BAAQN,MAAQ,IAAhB,aACCgW,GAGJxW,EACG,yBAAKmB,UAAU,oBACVnB,GACI,O,+NC+ZVk7B,OAlZf,SAA2Bt7B,GACzB,IAAM0E,EAA0BqD,cAC1ByxB,EAA+CrwB,aAAY,SAACC,GAAD,OAAuBA,EAAMowB,oBACxFlN,EAAmCnjB,aAAY,SAACC,GAAD,OAAuBA,EAAMkjB,aAC5E/C,EAA+BpgB,aAAY,SAACC,GAAD,OAAuBA,EAAMmgB,WAC1EgS,EAAyC/B,EAAiBgC,sBACxDvkB,EAAqBuiB,EAAiBtiB,oBAAsBwhB,GAAgCvhB,OAC9FlD,EAA4B,GAC3BsnB,GAAmBtkB,EACtBskB,EAAkB,CAAE76B,GAAI,EAAG8oB,gBAAiB,EAAEyR,6BAA8B,GAAIC,cAAe,GAAIrU,UAAW,EAAG/S,YAAa,GAAIinB,YAAa,EAAGnsB,KAAM,GAAIosB,kBAAmB,IAG/K/mB,EAAoBsnB,EAAgB76B,GAGtC,IAAM+6B,EAA2B,GACjCnP,EAAUA,UAAU9d,KAAI,SAAC3B,GACvB,IAAIiF,EAAgB,CAAE,KAAQjF,EAAI+B,KAAM,MAAS/B,EAAInM,IACrD,OAAO+6B,EAAcrzB,KAAK0J,MAG5B,IAAI2L,EAAM,IAAI1gB,KACd0gB,EAAIwP,WAAWxP,EAAIyP,aAAezP,EAAI0P,qBACtC,IAAIC,EAAW3P,EAAI4P,cAAchK,MAAM,EAAE,IAEnCqY,EAAyB,GAC/BnS,EAAQA,QAAQ/a,KAAI,SAAC3B,GACnB,IAAIiF,EAAgB,CAAE,KAAQjF,EAAI+B,KAAM,MAAS/B,EAAInM,IACrD,OAAOg7B,EAAYtzB,KAAK0J,MAG1B,IAAM2G,EAA4BtP,aAAY,SAACC,GAAD,OAAuBA,EAAMqP,aACvEkjB,EAAiC,GACrCv+B,QAAQC,IAAIob,EAAUA,WACI,IAAtBxE,GACFwE,EAAUA,UAAUmjB,SAAQ,SAAAjC,GACtBA,EAAQ1lB,oBAAsBA,GAChC0nB,EAAiBvzB,KAAK,CACpB+J,IAAKwnB,EAAQc,aACb75B,MAAO+4B,EAAQY,oBAMvBn9B,QAAQC,IAAIs+B,GAIZ,IAAME,EAA+B,CACnC,CACE,KAAQ,aACR,MAAS,GAEX,CACE,KAAQ,aACR,MAAS,GAEX,CACE,KAAQ,aACR,MAAS,GAEX,CACE,KAAQ,aACR,MAAS,GAEX,CACE,KAAQ,aACR,MAAS,GAEX,CACE,KAAQ,aACR,MAAS,IAKPC,EAD6B3yB,aAAY,SAACC,GAAD,OAAuBA,EAAM8lB,WAChCA,QACtC6M,EAA0B,GAChCD,EAAYttB,KAAI,SAAC3B,GACf,IAAIiF,EAAgB,CAAE,KAAQjF,EAAIuM,WAAa,MAAQvM,EAAIwM,SAAU,MAASxM,EAAInM,IAClF,OAAOq7B,EAAa3zB,KAAK0J,MAG3B,IAAID,EAAQ4G,EAAUA,UAAU0H,QAAO,SAACvf,GAAD,OAAWA,EAAMqT,oBAAsBA,KAAmB5S,OAC7Fo4B,EAAgBhhB,EAAUA,UAAU0H,QAAO,SAACvf,GAAD,OAAWA,EAAMqT,oBAAsBA,KArFjB,EAuFnChU,mBAAS,CACzC86B,YAAa,CAAE36B,MAAO,GAAIQ,MAAO26B,EAAgBR,aACjDnsB,KAAM,CAAExO,MAAO,GAAIQ,MAAO26B,EAAgB3sB,MAC1CqsB,6BAA8B,CAAC76B,MAAO,GAAIQ,MAAO26B,EAAgBN,8BACjEzR,gBAAiB,CAAEppB,MAAO,GAAIQ,MAAO26B,EAAgB/R,iBACrD3C,UAAW,CAAEzmB,MAAO,GAAIQ,MAAO26B,EAAgB1U,WAC/CmV,mBAAoB,CAAE57B,MAAO,GAAIQ,MAAOiR,GACxCmpB,kBAAmB,CAAE56B,MAAO,GAAIQ,MAAO26B,EAAgBP,qBA9FY,mBAuF9D9yB,EAvF8D,KAuFnDC,EAvFmD,OAkGjBlI,mBAAqB,IAlGJ,mBAkG9Dg8B,EAlG8D,KAkG1CC,EAlG0C,OAmG7Bj8B,mBAAqB,IAnGQ,mBAmG9Dk8B,EAnG8D,KAmGhDC,EAnGgD,KAqGrE,SAAS/zB,EAAoBC,GAC3BH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UAE/E,IAAIy7B,EAAoB,GACxB,GAAIxqB,EAAQ,EACV,IAAK,IAAIpD,EAAQ,EAAGA,EAAQoD,EAAOpD,IAAS,CAC1C,IAAI6tB,EAA6B,CAC/BnqB,IAAK1D,EACL7N,MAAO64B,EAAchrB,GAAOgsB,cAE1B8B,EAA4B,CAC9BpqB,IAAK1D,EACL7N,MAAO64B,EAAchrB,GAAO8rB,gBAE9B8B,EAAMj0B,KAAKk0B,GACXL,EAAmB7zB,KAAKk0B,GACxBH,EAAa/zB,KAAKm0B,GAGtBL,EAAsB,aAAID,IAC1BG,EAAgB,aAAID,IA0EtB,SAAS5zB,IACP,OAAQL,EAAU0G,KAAKxO,OAAU8H,EAAU6yB,YAAY36B,OAAS8H,EAAU8yB,kBAAkB56B,OACvF8H,EAAU2e,UAAUzmB,QAAU8H,EAAU6yB,YAAYn6B,QAAUsH,EAAU2e,UAAUjmB,QACjFsH,EAAU0G,KAAKhO,QAAUsH,EAAU8yB,kBAAkBp6B,MAuB7D,SAAS47B,EAA4B57B,EAAe6N,GAGlD,GADArR,QAAQC,IAAI4+B,GACsB,IAA9BA,EAAmB56B,OACrB66B,EAAsB,GAAD,oBAAKD,GAAL,CAAyB,CAAE,IAAOxtB,EAAO,MAAS7N,UAEpE,CAEH,IADA,IAAIinB,GAAW,EACNlZ,EAAM,EAAGA,EAAMstB,EAAmB56B,OAAQsN,IACjD,GAAIstB,EAAmBttB,GAAKwD,MAAQ1D,EAAO,CACrCwtB,EAAmBttB,GAAK/N,QAAUA,IACpCinB,GAAW,EACXqU,EAAsB,GAAD,oBAAKD,EAAmB9b,QAAO,SAACrO,EAAMnD,GAAP,OAAemD,EAAKK,MAAQ1D,MAA3D,CAAmE,CAAE,IAAOA,EAAO,MAAS7N,OAEnH,OAKa,IAAbinB,GACFqU,EAAsB,GAAD,oBAAKD,GAAL,CAAyB,CAAE,IAAOxtB,EAAO,MAAS7N,OAO7E,SAAS67B,EAA4B77B,EAAe6N,GAIlD,GAHArR,QAAQC,IAAIuD,GACZxD,QAAQC,IAAIoR,GAEgB,IAAxB0tB,EAAa96B,OACf+6B,EAAgB,GAAD,oBAAKD,GAAL,CAAmB,CAAE,IAAO1tB,EAAO,MAAS7N,UAExD,CAEH,IADA,IAAIinB,GAAW,EACNlZ,EAAM,EAAGA,EAAMwtB,EAAa96B,OAAQsN,IAC3C,GAAIwtB,EAAaxtB,GAAKwD,MAAQ1D,EAAO,CAC/B0tB,EAAaxtB,GAAK/N,QAAUA,IAC9BinB,GAAW,EACXuU,EAAgB,GAAD,oBAAKD,EAAahc,QAAO,SAACrO,EAAMnD,GAAP,OAAemD,EAAKK,MAAQ1D,MAArD,CAA6D,CAAE,IAAOA,EAAO,MAAS7N,OAEvG,OAKa,IAAbinB,GACFuU,EAAgB,GAAD,oBAAKD,GAAL,CAAmB,CAAE,IAAO1tB,EAAO,MAAS7N,OAQjE,OA7IAxD,QAAQC,IAAI8+B,GA8GZ/+B,QAAQC,IAAI4+B,GA4BZ7+B,QAAQC,IAAI8+B,GAIV,kBAAC,WAAD,KACE,yBAAK56B,UAAU,iBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAoC0V,EAAW,WAAQ,WAArE,yBAEF,yBAAK1V,UAAU,aACb,0BAAMoH,SAlKlB,SAAkBhJ,GAChBA,EAAEiJ,iBACEL,MAIJvI,EAAMqX,SAAQ,GAQhB,SAAkBnP,EAAoCoP,GACpD,GAAIikB,EAAiB,CACnB,IAAIxM,EAA2BoN,EAAahc,QAAO,SAACvf,EAAO6N,GAAR,OAAkB7N,EAAMuR,IAAMjK,EAAU8zB,mBAAmBp7B,SAC1G87B,EAA4BT,EAAmB9b,QAAO,SAACvf,EAAO6N,GAAR,OAAkB7N,EAAMuR,IAAMjK,EAAU8zB,mBAAmBp7B,SACjH+7B,EAAmC,GACvC5N,EAAavgB,KAAI,SAAC3B,EAAK8B,GACrB,OAAOguB,EAAiBv0B,KAAK,CAC3BwxB,YAAa/sB,EAAIjM,MACjB65B,aAAciC,EAAc/tB,GAAK/N,WAIrC,IAAM+N,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAChElC,SAAUH,IAAMI,SAASC,aAG3BzJ,QAAQC,IAAIs/B,GACRrlB,IAAW4hB,GACbx0B,EC9MD,SAASk4B,EAAkBt3B,EAAWq3B,EAAuBhuB,GAChE,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,mBACsD,CAC/ChG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASk4B,EAAkBt3B,EAAMq3B,EAAkBhuB,OAU9D9J,MAAM,SAAAg4B,GACHz/B,QAAQC,IAAIw/B,GACZr2B,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,+CAA+B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC9I61B,EAAiBnuB,KAAI,SAAC3B,GAClB,OAAOnI,EAASk2B,GAAa,CACzBhB,YAAa/sB,EAAI+sB,YACjBa,aAAc5tB,EAAI4tB,aAClBD,oBAAqBqC,EAAOn8B,SAGpCm6B,GAAiBn2B,MAEpBgB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,wDAAqC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAClJpC,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aDgKXu/B,CAAkB,CACzB7B,YAAa7yB,EAAU6yB,YAAYn6B,MACnCgO,KAAM1G,EAAU0G,KAAKhO,MACrBo6B,kBAAmB9yB,EAAU8yB,kBAAkBp6B,MAC/Cq6B,6BAA8B/yB,EAAU+yB,6BAA6Br6B,MACrEimB,UAAW3e,EAAU2e,UAAUjmB,OAC9B+7B,EAAkBhuB,IAGd2I,IAAW8hB,KAClB10B,EEzND,SAASo4B,EAAiBp8B,EAAS4E,EAAWqJ,GACjD,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,2BACsDlE,GAAM,CACrD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASo4B,EAAiBp8B,EAAI4E,EAAMqJ,OAU/C9J,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZlI,QAAQC,IAAIqD,GACZ8F,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,kDAAgC5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC/I+zB,GAAiBn2B,MAEpBgB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,2DAAsC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACnJpC,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aFiLXy/B,CAAiBvB,EAAgB76B,GAAI,CAC5Cq6B,YAAa7yB,EAAU6yB,YAAYn6B,MACnCgO,KAAM1G,EAAU0G,KAAKhO,MACrBo6B,kBAAmB9yB,EAAU8yB,kBAAkBp6B,MAC/Cq6B,6BAA8B/yB,EAAU+yB,6BAA6Br6B,MACrEimB,UAAW3e,EAAU2e,UAAUjmB,OAC9B+N,IACHjK,EGhOD,SAASq4B,EAA8Br8B,EAASi8B,EAAuBhuB,GAC1E,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACEC,+BADF,oCAC2DlE,GAAM,CAC9D9B,OAAQ,SACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI3CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASq4B,EAA8Br8B,EAAIi8B,EAAkBhuB,OAUxE9J,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZq3B,EAAiBnuB,KAAI,SAAC3B,GAClB,OAAOnI,EAASk2B,GAAa,CACzBhB,YAAa/sB,EAAI+sB,YACjBa,aAAc5tB,EAAI4tB,aAClBD,oBAAqB95B,QAG7B8F,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,kDAAgC5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,SAElJpB,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,SACZmJ,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,2DAAsC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,UHqLlJi2B,CAA8BxB,EAAgB76B,GAAIi8B,EAAkBhuB,KAG/EjK,EAASgd,GAAgB,oDAAD,iCACxBhd,EAAS20B,MACT30B,EAAS40B,GAAkCZ,GAAgC9gB,QA7C7EC,CAAS3P,EADmB+O,EAAYiiB,GAAmBE,OA2J/C,yBAAK73B,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,aACZY,MAAM,OACNV,MAAOsH,EAAU0G,KAAKhO,MACtBE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,SACNc,YAAY,MAGlB,yBAAKF,UAAU,YACb,yBAAKA,UAAU,uBACb,kBAAC,GAAD,CAAgBb,GAAG,oBACjBY,MAAM,cACNV,MAAOsH,EAAU6yB,YAAYn6B,MAC7BE,SAAUuH,EACVlH,UAAU,EACVR,MAAM,iBACNnC,QAASi9B,KAGb,yBAAKl6B,UAAU,uBACb,kBAAC,GAAD,CAAgBb,GAAG,kBACjBY,MAAM,YACNV,MAAOsH,EAAU2e,UAAUjmB,MAC3BE,SAAUuH,EACVlH,UAAU,EACVR,MAAM,8BACNnC,QAASk9B,MAKf,yBAAKn6B,UAAU,YACf,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CAAWb,GAAG,0BACZY,MAAM,oBACNV,MAAOsH,EAAU8yB,kBAAkBp6B,MACnCE,SAAUuH,EACV6D,QAAQ,EACRrL,KAAK,iBACLM,UAAU,EACVC,UAAWgsB,EACXzsB,MAAM,6DACNc,YAAY,MAEhB,yBAAKF,UAAU,uBACf,kBAAC,GAAD,CAAYb,GAAG,qCACbY,MAAM,+BACNV,MAAOsH,EAAU+yB,6BAA6Br6B,MAC9CE,SAAUuH,EACV6D,OAA8C,OAAtChE,EAAU8yB,kBAAkBp6B,OAAwD,KAAtCsH,EAAU8yB,kBAAkBp6B,MAClFC,KAAK,iBACLM,UAAU,EACVC,UAAW8G,EAAU8yB,kBAAkBp6B,MACvCD,MAAM,wDACNc,YAAY,OAGhB,yBAAKF,UAAU,YACb,yBAAKA,UAAU,uBACf,kBAAC,GAAD,CAAab,GAAG,2BACZE,MAAOsH,EAAU8zB,mBAAmBp7B,MACpCU,MAAM,qBACNR,SAAUuH,EACV4jB,IAAK,EACLG,IAAK,EACLzrB,MAAM,yDAMVq8B,MAAMC,KAAKD,MAAM90B,EAAU8zB,mBAAmBp7B,OAAOkY,QAAQtK,KAAI,SAAC5N,EAAO6N,GACvE,OACE,yBAAKlN,UAAU,WAAW4Q,IAAK1D,GAC7B,yBAAKlN,UAAU,uBACb,kBAAC,GAAD,CACEX,MAAOqW,GAAYxI,GAASktB,EAAiBt6B,OAAU,EAAIs6B,EAAiBltB,GAAO0D,IACnF1D,MAAOA,EACPjN,WAAU,qCAAgCiN,GAC1C3N,SAAU07B,EACVr7B,UAAU,EACVR,MAAM,2BACNnC,QAASq9B,KAGb,yBAAKt6B,UAAU,uBACb,kBAAC,GAAD,CACEX,MAAOqW,GAAYxI,GAASktB,EAAiBt6B,OAAS,EAAIs6B,EAAiBltB,GAAO7N,MAClFY,WAAU,oCAA+BiN,GACzCA,MAAOA,EACP3N,SAAU27B,EACVt7B,UAAU,EACVR,MAAM,YACNnC,QAASu9B,SAQrB,4BAAQx6B,UAAU,iBAAiBiH,QAAS,kBA7MxDxI,EAAMqX,SAAQ,QACd3S,EAAS40B,GAAkCZ,GAAgC9gB,SA4M/D,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCAzMpBgH,IACN,WAAa,KAwMlB,mBI5bT,SAAS20B,GAAkBx8B,EAAS4E,EAAWqJ,GAClDvR,QAAQC,IAAI,WACZ,IAAIsI,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJC,MAAM,GAAD,OACMC,+BADN,oCAC+DlE,GAAM,CAC9D9B,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,oBAEpBrG,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASw4B,GAAkBx8B,EAAI4E,EAAMqJ,OAUhD9J,MAAM,SAAAe,GACHxI,QAAQC,IAAIuI,GACZY,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,qCAAsB5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACrIsxB,GAAW1zB,MAGdgB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,8CAA4B5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACzI1J,QAAQC,IAAI,aC1BrB,SAAS8/B,GAAgBz4B,GAC5B,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,kBACkD,CAC9ChG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASy4B,GAAgBz4B,OAUpCG,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASsM,MACT5T,QAAQC,IAAIiI,EAAKhG,KAAKgtB,WACtBhnB,EAAKhG,KAAKgtB,UAAU9d,KAAI,SAAC3B,EAAU4B,GAC/B,IAAI8d,EAAY1f,EAAIuM,WAChBoT,EAAY3f,EAAIwM,SAChBvI,EAAqB,CACrBpQ,GAAImM,EAAInM,GACR+rB,OAAQ5f,EAAI4f,OACZC,KAAM7f,EAAI6f,KACV9d,KAAM/B,EAAI+B,KACVgb,WAAY/c,EAAI+c,WAChB/a,YAAahC,EAAIgC,YACjBuK,WAAYmT,EAAUI,UAAU,EAAG,IACnCtT,SAAUmT,EAAUG,UAAU,EAAG,IACjC1C,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAGrB,OACWxlB,EADG,IAAV+J,EACgBsC,GAAgBD,GAGhBG,GAAYH,UAIvCpL,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCXb+/B,OAzDf,SAAgCp9B,GAA0C,IAAD,EACzCC,oBAAS,GADgC,mBAC9DC,EAD8D,KACrDC,EADqD,OAE3CF,mBAAS,IAFkC,mBAE9DG,EAF8D,KAEvDC,EAFuD,OAGnCJ,mBAAS,IAH0B,mBAG9DK,EAH8D,KAGnDC,EAHmD,OAI3CN,mBAASD,EAAMY,OAJ4B,mBAI9DA,EAJ8D,KAIvDJ,EAJuD,KA8B/DoW,EAAqC5W,EAAMxB,QAAQgQ,KAAK,SAACqI,EAAapI,GACxE,OACI,4BAAQ0D,IAAK1D,EAAO7N,MAAOiW,EAAOjW,OAAQiW,EAAOjI,SAIzD,OACI,kBAAC,WAAD,KACI,2BAAOnO,QAAO,UAAKT,EAAMU,KAAOV,EAAMW,OACtC,4BACIC,MAAOA,EACPF,GAAE,UAAKV,EAAMU,IACba,UAAS,uBAAkBvB,EAAMwB,WAAaxB,EAAMwB,WAAa,GAAxD,YAA8DlB,GACvEQ,SApCZ,SAAwBC,GAA8C,IAAD,EACzB,CAAC,GAAI,GAAIA,EAAMC,OAAOJ,OAAzDR,EAD4D,KACrDa,EADqD,KACzCC,EADyC,QAGzCA,GAAgBlB,EAAMmB,SAC1C,CAAC,2BAA4B,cAAgB,CAAC,GAAI,YAJW,mBAGhEf,EAHgE,KAGzDa,EAHyD,KAMxC,KAArBjB,EAAMwB,aACLpB,EAAsB,GAAfa,EAAmB,IAG/B7D,QAAQC,IAAI2C,EAAMwB,YAElBpE,QAAQC,IAAI6D,GACZlB,EAAMc,SAAS,CAAEF,MAAOM,EAAcd,MAAOA,EAAOF,QAASA,IAE7DC,GAAS,GACTE,EAASD,GACTG,EAAaU,GACbT,EAASU,KAmBD,4BAAQN,MAAQ,IAAhB,aACCgW,GAGJxW,EACG,yBAAKmB,UAAU,oBACVnB,GACI,OCPnBi9B,GAAS,aAiZAC,GA/YS,WACpB,IAAM54B,EAA0BqD,cAC1BgwB,EAA0B5uB,aAAY,SAACC,GAAD,OAAuBA,EAAM4uB,aACnEwB,EAAwCrwB,aAAY,SAACC,GAAD,OAAuBA,EAAMowB,oBACjF76B,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzE4S,EAA2B2Q,EAASI,UAAU92B,OAC9Ck8B,EAAqC/D,EAAiBE,gBAAgBr4B,OANlD,EAOApB,mBAAc,EACpC,IAAIu9B,eAAaC,IAAI,CAAEC,IAAK,EAAGL,aAC/B,IAAIG,eAAaC,IAAI,CAAEC,IAAK,GAAIL,aAChC,IAAIG,eAAaC,IAAI,CAAEC,IAAK,GAAIL,cAVV,mBAOnBz8B,EAPmB,KAOZJ,EAPY,OAYMP,oBAAS,GAZf,mBAYnB+0B,EAZmB,KAYTC,EAZS,OAaMh1B,oBAAS,GAbf,mBAanBi1B,EAbmB,KAaTC,EAbS,OAcMl1B,oBAAS,GAdf,mBAcnBm1B,EAdmB,KAcTC,EAdS,OAeUp1B,mBAAS,GAfnB,mBAenB09B,EAfmB,KAePC,EAfO,OAgBE39B,oBAAS,GAhBX,mBAgBnB4b,EAhBmB,KAgBXC,EAhBW,OAiBE7b,oBAAS,GAjBX,mBAiBnBw1B,EAjBmB,KAiBXC,EAjBW,OAkBUz1B,mBAAS,IAlBnB,mBAkBnB4tB,EAlBmB,KAkBPC,EAlBO,KAmBlBnS,EAAsBC,+BAAtBD,kBAERzO,qBAAU,WACNxI,EAASmzB,MACTnzB,EAASmQ,GAAkB,oBAAW,mBACvC,CAAClW,EAAK+V,KAAMhQ,IAEf,IAAIwY,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAYbuL,wBAAairB,GAAW1zB,IACxByI,wBAAagwB,GAAgBz4B,IAC7ByI,wBAAa0tB,GAAiBn2B,IAC9ByI,wBAAaktB,GAAY31B,IACzByI,wBAAa2hB,GAAUpqB,IACvByI,wBAAamc,GAAU5kB,QAGhC,CAACA,EAAUwY,EAAc3Y,IAE5B,IACMs5B,EAD4B10B,aAAY,SAACC,GAAD,OAAuBA,EAAMkjB,aAC/BA,UAEtCmP,EAA2B,GAMjC,SAASqC,EAAgBlG,GACrBlzB,EnBzED,SAA+BkzB,GAClC,MAAO,CAAE/2B,KAAM22B,GAA8BI,QAASA,GmBwEzCmG,CAAsBnG,IAC/BlzB,EAASL,GAAqBwyB,GAA0Bjf,OAG5D,SAASomB,EAAsB3jB,GAC3B3V,Ef7EG,CAAE7D,KAAMi4B,GAAoCK,ee6EV9e,IACrC4jB,KACAv5B,EAAS40B,GAAkCZ,GAAgC9gB,OAG/E,SAASsmB,EAA4B51B,GACjCs1B,EAAct1B,EAAM1H,OAzFE,8CA8F1B,+BAAAu9B,EAAA,sDACQrvB,EAAiB,GACrBlO,EAAM4N,KAAI,SAAC3B,EAAU4B,GACjB,OAAOK,EAAK1G,KAAKyE,EAAI1P,eAGnBwR,EAAMnI,IAAMqC,QAAQ,2EAA0C,CAChElC,SAAUH,IAAMI,SAASC,aAG7BnC,EAASw4B,GAAkBS,EAAY,CAAE7uB,KAAMA,GAAQH,IAV3D,4CA9F0B,sBA2G1B,SAASsvB,KACLniB,GAAU,GAGd,SAASC,GAAenb,GACpBkb,GAAU,GAGd,OA3CA+hB,EAAarvB,KAAI,SAAC3B,GACd,IAAIiF,EAAgB,CAAE,KAAQjF,EAAI+B,KAAM,MAAS/B,EAAInM,IACrD,OAAO+6B,EAAcrzB,KAAK0J,MAkB9B1U,QAAQC,IAAIsgC,GAyBRhiB,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACH,kBAAC,IAAD,MACA,wBAAIxH,UAAU,yBAAd,qBACA,uBAAGA,UAAU,QAAb,sBACA,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,8BAAiB6I,KAAI,UAAKsoB,GAA8BpxB,KAAK,MAAM6I,MAAM,YACxF,kBAAC,GAAD,CAAS5I,MAAM,4BAAa6I,KAAI,UAAKmS,GAAoBjb,KAAK,MAAM6I,MAAM,aAE9E,yBAAKzT,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,2BAAOV,KAAK,SAASH,GAAG,QAAQa,UAAU,eAAeE,YAAY,mBAAWX,SAAU,SAACC,GACvF+sB,EAAc/sB,EAAMC,OAAOJ,OAC3BxD,QAAQC,IAAIwwB,OAGpB,4BAAQhtB,KAAK,SAASU,UAAU,mBAC5B,uBAAGA,UAAU,sBAM7B,yBAAKA,UAAU,OACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,WAAW8H,QAAS,YACvC,IAAbwsB,IACAC,GAAY,GACZE,GAAY,GACZE,GAAY,KAEjBvsB,MAAO,CACNC,MAAOisB,EAAW,UAAY,YAPlC,qBAUA,yBAAKlsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBwJ,EAAW,UAAY,cAGhD,yBAAKzzB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACxC,IAAb0sB,IACAC,GAAY,GACZF,GAAY,GACZI,GAAY,KAGhBvsB,MAAO,CACHC,MAAOmsB,EAAW,UAAY,YARtC,uBAUA,yBAAKpsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiB0J,EAAW,UAAY,cAIhD,yBAAK3zB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACxC,IAAb4sB,IACAC,GAAY,GACZJ,GAAY,GACZE,GAAY,KAGhBrsB,MAAO,CACHC,MAAOqsB,EAAW,UAAY,YARtC,qBAUA,yBAAKtsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiB4J,EAAW,UAAY,gBAQ3B,IAAbJ,EAEI,kBAAC,WAAD,KACI,yBAAKzzB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,QACX,wBAAIA,UAAU,mCAAd,sBAEJ,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CACIX,MAAO+8B,EACPj9B,GAAG,mBACHI,SAAUo9B,EACV/8B,UAAU,EACVR,MAAM,mBACNnC,QAASi9B,KAGjB,yBAAKl6B,UAAU,uBACX,sDACA,kBAAC,KAAD,CACI68B,UAAQ,EACR19B,GAAG,oBACHE,MAAOA,EACPE,SAAUN,EACV68B,OAAQA,GACRgB,QAAS,CACL,kBAAC,KAAD,YAMpB,4BAAQ98B,UAAS,8BAAiCiH,QAAS,YA1PzE,mCA0PgF81B,KAAlE,0BAOF,IAAbpJ,EAED,kBAAC,WAAD,KACI,yBAAK3zB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,4CACA,yBAAKA,UAAU,kBACX,4BAAQA,UAAU,4BAA4BiH,QAAS,WACnD9D,EAAS40B,GAAkCZ,GAAgCvhB,SAC3E8mB,OAEA,uBAAG18B,UAAU,mBAJjB,sBASR,yBAAKA,UAAU,aACX,kBAAC,GAAD,CACIuf,SAAUkd,EAAuBp9B,MAAOitB,QAQ5D,kBAAC,KAAD,CACIruB,KAAMqc,EACN6B,QAAS,kBAAM5B,GAAU,IACzB6B,sBAAoB,GAEpB,oCAEQ,WACI,GAAK6b,EAAiBtiB,oBAAsBwhB,GAAgCvhB,QAAaqiB,EAAiBgC,uBAA2BhC,EAAiBtiB,oBAAsBwhB,GAAgC3X,KACxM,OAAO,kBAAC,GAAD,CAAmB1J,QAAS0E,KAF3C,KASR,WACI,GAAKyd,EAAiBgC,uBAA2BhC,EAAiBtiB,oBAAsBwhB,GAAgC1X,OACpH,OACI,kBAAC,KAAD,CACIxhB,KAAMqc,EACN6B,QAAS,kBAAM5B,GAAU,IACzB6B,sBAAoB,GAEpB,yBAAKpc,UAAU,cAAcb,GAAG,eAC5B,yBAAKa,UAAU,eAAf,iBAGA,yBAAKA,UAAU,iBACX,4BAAQV,KAAK,SACTU,UAAU,iBACViH,QAAS,Wf3TlE,IAA6B9H,Ee4TqC84B,EAAiBgC,wBAGtB92B,EC9W7D,SAAS65B,EAAoB79B,GAChC,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACEC,+BADF,2BACkDlE,GAAM,CACrD9B,OAAQ,SACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI3CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS65B,EAAoB79B,OAUxCmE,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,MAEfI,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aD2UiDkhC,CAAoB/E,EAAiBgC,sBAAsB96B,KACpEgE,EAASgd,GAAgB,0BAAD,UAAgB8X,EAAiBgC,sBAAsB5sB,KAAvD,4CACxBlK,GfjUhChE,EeiU6D84B,EAAiBgC,sBAAsB96B,GfhU7H,CAAEG,KAAMg4B,GAAuBn4B,GAAIA,KeiUsBgE,EAAS20B,MACTvd,GAAU,MAVlB,aAbxB,KAqCM,IAAbsZ,EAED,kBAAC,WAAD,KACI,yBAAK7zB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,mCAEJ,yBAAKA,UAAU,aACX,kBAAC,GAAD,CACIuf,SAAUgd,EAAiBl9B,MAAOitB,QAQlD,WACI,GAAKkK,EAASyG,iBAAqBzG,EAAS7gB,oBAAsB2f,GAA0B7V,OACxF,OACI,kBAAC,KAAD,CACIxhB,KAAMi2B,EACN/X,QAAS,kBAAMgY,GAAU,IACzB/X,sBAAoB,GAEpB,yBAAKpc,UAAU,cAAcb,GAAG,eAC5B,yBAAKa,UAAU,eAAf,iBAGA,yBAAKA,UAAU,iBACX,4BAAQV,KAAK,SACTU,UAAU,iBACViH,QAAS,WnBnXlE,IAAuB9H,EmBoX2Cq3B,EAASyG,kBAGd95B,EAASgd,GAAgB,yBAAD,UAAiBqW,EAASyG,gBAAgB5vB,KAA1C,4CACxBlK,GnBxXtChE,EmBwX6Dq3B,EAASyG,gBAAgB99B,GnBvXzG,CAAEG,KAAM02B,GAAiB72B,GAAIA,KmBwX4BgE,EAASmzB,MACTnC,GAAU,MATlB,aAbxB,SAnBX,IEzNVpG,OA7Jf,SAAoBtvB,GAElB,IAAMy+B,EAAqCt1B,aAAY,SAACC,GAAD,OAAuBA,EAAMq1B,kBAC9EC,EAA0Bv1B,aAAY,SAACC,GAAD,OAAuBA,EAAMs1B,YACnE12B,EAAUC,cASZ3C,EAAiB,GACfq5B,EAA6B,GAE7BC,EAAyB,GAE7B,GAAIH,EAAeI,cAAcx9B,OAAS,QACMub,IAApC6hB,EAAeI,cAAc,IAAwD,OAApCJ,EAAeI,cAAc,GAAY,CAC1F,IAAIC,EAAeL,EAAeI,cAAc,GAAGzlB,WAAWxP,MAAM,KAChEm1B,EAAaN,EAAeI,cAAc,GAAGxlB,SAASzP,MAAM,KAC5Do1B,EAAattB,SAASotB,EAAa,GAAGnS,UAAU,EAAG,IACnDsS,EAAavtB,SAASotB,EAAa,GAAGnS,UAAU,EAAG,IACnDuS,EAAextB,SAASotB,EAAa,GAAGnS,UAAU,EAAG,IACrDwS,EAAWztB,SAASqtB,EAAW,GAAGpS,UAAU,EAAG,IAC/CyS,EAAY1tB,SAASqtB,EAAW,GAAGpS,UAAU,EAAG,IAChD0S,EAAa3tB,SAASqtB,EAAW,GAAGpS,UAAU,EAAG,KAEvCwS,EAAWH,GAAY7hC,WAAa,cAAWiiC,EAAYH,GAAY9hC,WAAa,aAAYkiC,EAAaH,GAAc/hC,WAAa,WACtJshC,EAAeI,cAAcrwB,KAAI,SAAC3B,EAAK4B,GACnC,IAAI6wB,EAAa,IAAIviC,KAAK8P,EAAIuM,YAC1BmmB,EAAW,IAAIxiC,KAAK8P,EAAIwM,UAGtBmmB,EAAO3yB,EAAIwM,SACb8J,EAHS,2EACI,GAEShmB,WAAa,IAAMqiC,EAAKnc,MAAM,EAAE,IAAM,OAChEsb,EAAiBv2B,KAAK+a,GAEtB,IAAIsc,EAAa,IAAI1iC,MAEfuiC,EAAWtiC,UAAYyiC,EAASziC,WAAa,IAAO,MACtD4hC,EAAax2B,KAAK,2BAEZk3B,EAAWtiC,UAAYyiC,EAASziC,WAAa,IAAO,QAAUyiC,EAASziC,UAAYsiC,EAAWtiC,WAAa,IAAO,EACxH4hC,EAAax2B,KAAK,oCAEZq3B,EAASziC,UAAYsiC,EAAWtiC,WAAa,IAAO,IAAMuiC,EAASviC,UAAYyiC,EAASziC,WAAa,IAAO,EAClH4hC,EAAax2B,KAAK,0BAGlBw2B,EAAax2B,KAAK,2BAGtB,IAAIgR,EAAavM,EAAIuM,WAAWxP,MAAM,KAClCyP,EAAWxM,EAAIwM,SAASzP,MAAM,KAClC,OAAOtE,EAAK8C,KAAK,WAAQgR,EAAW,GAAK,IAAMA,EAAW,GAAK,OAASC,EAAS,GAAK,IAAMA,EAAS,OAKrH,SAASqmB,EAAYjxB,GACjB,MAA4B,2BAAxBmwB,EAAanwB,GACN,iBAEsB,oCAAxBmwB,EAAanwB,GACX,iBAEsB,2BAAxBmwB,EAAanwB,GACX,aAGA,aAKf,IAAMwa,EAAkByV,EAASA,SAASiB,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQje,KAAI,SAACsa,EAASra,GAC1F,OAAgB,OAAZqa,EAAyB,KACF,mBAAvB4W,EAAYjxB,GAEV,wBAAIlN,UAAS,YACX4Q,IAAG,kBAAa2W,EAAQpoB,KACxB,4BAAKooB,EAAQ2D,QACb,4BAAK3D,EAAQla,MACb,4BAAKka,EAAQlC,cACb,sDACA,8BAKwB,mBAAvB8Y,EAAYjxB,GAEjB,wBAAIlN,UAAS,YACX4Q,IAAG,kBAAa2W,EAAQpoB,KACxB,4BAAKooB,EAAQ2D,QACb,4BAAK3D,EAAQla,MACb,4BAAKka,EAAQlC,cACb,+DACA,8BAI0B,eAAvB8Y,EAAYjxB,GAEjB,wBAAIlN,UAAS,YACX4Q,IAAG,kBAAa2W,EAAQpoB,KACxB,4BAAKooB,EAAQ2D,QACb,4BAAK3D,EAAQla,MACb,4BAAKka,EAAQlC,cACb,sDACA,8BAMF,wBAAIrlB,UAAS,YACX4Q,IAAG,kBAAa2W,EAAQpoB,KACxB,4BAAKooB,EAAQ2D,QACb,4BAAK3D,EAAQla,MACb,4BAAKka,EAAQlC,cACb,uDACA,4BACA,4BAAQ/lB,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WAvHjD,IAACq3B,EAwHTr7B,aAAae,QAAQ,iBAAkBo5B,EAAiBlwB,IAxH/CoxB,EAyHG/W,EAvHtBtkB,aAAae,QAAQ,aAAcs6B,EAAQn/B,GAAGvD,YAC9C6K,EAAQI,KAFG,mBAsHH,kBAWV,OACE,yBAAK7G,UAAU,4BACb,2BAAOA,UAAU,SACf,2BAAOA,UAAU,eACf,4BACE,wBAAI2nB,MAAM,OAAV,qBACA,wBAAIA,MAAM,OAAV,6BACA,wBAAIA,MAAM,OAAV,mBACA,wBAAIA,MAAM,OAAV,sBACA,wBAAIA,MAAM,OAAV,4BAGJ,+BACGD,MCjHI0B,OA5Cf,WAEE,IAAMC,EAAuBzhB,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAChE9W,EAAUC,cAGVmK,EAAc,WAElBpK,EAAQI,KADG,kBAKP03B,EAA0ClV,EAASA,SAASpc,KAAI,SAACuxB,EAASpxB,GAC9E,OAAKoxB,EACG,wBAAIx+B,UAAS,oBAAgBqpB,EAASnI,cAAgBmI,EAASnI,aAAa/hB,KAAOq/B,EAAQr/B,GAAM,WAAa,IACpHyR,IAAG,kBAAaxD,GAAOnG,QAAS4J,GAChC,wBAAI8W,MAAM,OAAOva,EAAM,GACvB,4BAAKoxB,EAAQj6B,UACb,4BAAKi6B,EAAQhe,aACb,4BAAKge,EAAQ/d,MANQ,QAWzB,OACE,yBAAKzgB,UAAU,4BACb,2BAAOA,UAAU,SACf,2BAAOA,UAAU,eACf,4BACE,wBAAI2nB,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,aACA,wBAAIA,MAAM,OAAV,uBAGJ,+BACG4W,MCxCEE,GAAgC,wBAChCC,GAAiC,yBACjCC,GAAmC,2BAEnCC,GAAgD,wCAChDC,GAA+C,uCAC/Cl9B,GAAiC,yBAIjCm9B,GAAuC,+BACvCC,GAAoC,4BA0B1C,SAASC,KACZ,MAAO,CAAE1/B,KAAMw/B,IAGZ,SAASG,GAAoBC,GAChC,MAAO,CAAE5/B,KAAMm/B,GAAuBS,kBAAmBA,GC1CtD,IAAM3oB,GAA4B,oBAC5BC,GAA6B,qBAC7BC,GAA+B,uBAE/BC,GAA4C,oCAC5CC,GAA2C,mCAC3ChV,GAAiC,yBAIjCiV,GAAmC,2BACnCC,GAAgC,wBA0BtC,SAASsoB,KACZ,MAAO,CAAE7/B,KAAMsX,IAGZ,SAASwoB,GAAgBC,GAC5B,MAAO,CAAE//B,KAAMiX,GAAmB8oB,cAAeA,GCT9C,SAASC,GAAen8B,EAAehE,GAC1C,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,yBACgDlE,GAAM,CACnD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASm8B,GAAen8B,EAAUhE,OAU7CmE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASb,KACTzG,QAAQC,IAAIiI,EAAKhG,KAAKsrB,UACtBtlB,EAAKhG,KAAKsrB,SAASpc,KAAI,SAAC3B,EAAU4B,GAC9B,IAAIlL,EAAa,CACb7C,GAAImM,EAAInM,GACRoF,SAAU+G,EAAI/G,SACd8b,MAAO/U,EAAI+U,MACX5c,OAAQ6H,EAAI7H,OACZe,SAAU,GACV8b,UAAWhV,EAAIgV,UACfC,SAAUjV,EAAIiV,SACdC,YAAalV,EAAIkV,YACjBzb,kBAAmBuG,EAAIvG,kBACvB0b,IAAKnV,EAAImV,IACTC,MAAOpV,EAAIoV,MACXC,QAASrV,EAAIqV,QACbC,QAAStV,EAAIsV,QACbC,WAAYvV,EAAIuV,YAGpB,OAAO1d,EAASR,EAAWX,OAE/BnG,QAAQC,IAAIiI,EAAKhG,KAAK+4B,QAAQE,eAC9B7zB,EAAS67B,MACT,IAAIE,EAA6B,CAC7B//B,GAAI,EACJkO,KAAMtJ,EAAKhG,KAAK+4B,QAAQzpB,KACxBkyB,QAASx7B,EAAKhG,KAAKwhC,QAAQh7B,SAC3ByyB,cAAejzB,EAAKhG,KAAK+4B,QAAQE,cACjCle,OAAQ/U,EAAKhG,KAAK+a,OAAOzL,KACzB0H,QAAShR,EAAKhG,KAAKgX,QAAQ1H,KAC3B4jB,UAAWltB,EAAKhG,KAAKkzB,UAAU5jB,KAC/BwhB,SAAU9qB,EAAKhG,KAAK8wB,SAASxhB,KAC7BmyB,eAAgBz7B,EAAKhG,KAAK+a,OAAOoP,eACjCuX,eAAgB17B,EAAKhG,KAAKsrB,SAASvpB,QAGvCqD,EAASg8B,MACTp7B,EAAKhG,KAAKs6B,YAAYprB,KAAI,SAAC3B,EAAU4B,GAEjC,OADQkK,OAAOC,OAAO/L,GACb2B,KAAI,SAACuK,GACV,OAAOA,EAAMvK,KAAI,SAACwK,GAKd,OAHqB,IAAjBA,EAAM3X,QACNqD,EAASi8B,GAAgB,CAACvnB,WAAYJ,EAAM,GAAIK,SAAUL,EAAM,MAE7DA,WAKnBtU,EAAS87B,GAAoBC,OAGhC/6B,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCtHrB,IAAM4jC,GAAsB,cACtBC,GAAuB,eACvBC,GAAyB,iBAEzBC,GAAsC,8BACtCC,GAAqC,6BACrCn+B,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBAC3Bu/B,GAA6B,qBAC7BC,GAA0B,kBAQhC,SAASj+B,GAAiBu8B,GAC7B,MAAO,CACHh/B,KAAMiB,GACN+9B,WAID,SAASr8B,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAQZ,SAASohC,KACZ,MAAO,CAAE3gC,KAAMygC,IAGZ,SAASG,GAAW5B,GACvB,MAAO,CAAEh/B,KAAMogC,GAAapB,QAASA,GC9BlC,SAAS6B,GAAkBh9B,EAAehE,GAC7C,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,0BACiDlE,GAAM,CACpD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASg9B,GAAkBh9B,EAAUhE,OAUhDmE,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZZ,EAASpB,GAAiBgC,IAC1BZ,EAAS88B,MACTpkC,QAAQC,IAAIiI,EAAKhG,KAAKqiC,SACtBr8B,EAAKhG,KAAKqiC,QAAQnzB,KAAI,SAAC3B,EAAU4B,GAC7B,IAAIoxB,EAAmB,CACnBn/B,GAAImM,EAAInM,GACRu3B,SAAUprB,EAAIorB,SACdrpB,KAAM/B,EAAI+B,KACVgY,aAAc/Z,EAAI+Z,aAClB/X,YAAahC,EAAIgC,YACjB4d,OAAQ5f,EAAI4f,OACZmV,WAAY/0B,EAAI+0B,WAChBC,UAAWh1B,EAAIg1B,UACfjiC,QAASiN,EAAIjN,SAGjB,OACW8E,EADG,IAAV+J,EDzBjB,SAAwBoxB,GAC3B,MAAO,CAAEh/B,KAAM0gC,GAAiB1B,QAASA,GCyBLiC,CAAejC,GAGf4B,GAAW5B,UAItCn6B,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YChD5B,IAwMe0kC,GAxMe,WAC1B,IAAMr9B,EAA0BqD,cAC1B22B,EAA0Bv1B,aAAY,SAACC,GAAD,OAAuBA,EAAMs1B,YACnE9T,EAAuBzhB,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAChE2hB,EAA4Ct3B,aAAY,SAACC,GAAD,OAAuBA,EAAM44B,uBACrFrjC,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzE4S,EAA2BwD,EAASA,SAASvpB,OAC7C4gC,EAA4BvD,EAASA,SAASr9B,OAC5Csa,EAAsBC,+BAAtBD,kBAERzO,qBAAU,WACNxI,EAASqkB,MACTrkB,EAASmQ,GAAkB,WAAO,oBACnC,CAAClW,EAAK+V,KAAMhQ,IAEf,IAAI6I,EAAO/I,aAAaC,QAAQ,YAC5BwzB,EAAmB,EACV,OAAT1qB,IACA0qB,EAAWvmB,SAASnE,IAIxB,IAAI2P,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAwCzC,OAvCAyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAQbuL,wBAAa0zB,GAAen8B,EAAUuzB,IACtC9qB,wBAAau0B,GAAkBh9B,EAAUuzB,QAGlD,CAACvzB,EAAUwY,EAAc3Y,EAAe0zB,IAO3C76B,QAAQC,IAAIojC,EAAkByB,oBAG1BvmB,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACH,wBAAIxH,UAAU,yBAAyBk/B,EAAkByB,mBAAmB7gC,OAAS,EAAIo/B,EAAkByB,mBAAmB,GAAGtzB,KAAO,IACxI,uBAAGrN,UAAU,QAAb,sBACA,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,wBAAc6I,KAAI,UAAKmS,GAAoBjb,KAAK,MAAM6I,MAAM,YAC3E,kBAAC,GAAD,CAAS5I,MAAM,oBAAU6I,KAAI,UAAKgtB,GAAqB91B,KAAK,MAAM6I,MAAM,aAE5E,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,+BAEJ,yBAAKA,UAAU,aACX,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,wBACf,kBAAC,EAAD,CAAWb,GAAG,cACNE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,iBACNc,YAAag/B,EAAkByB,mBAAmB7gC,OAAS,EAAIo/B,EAAkByB,mBAAmB,GAAG3J,cAAgB,MAE/H,yBAAKh3B,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,8BACNc,YAAag/B,EAAkByB,mBAAmB7gC,OAAS,EAAIo/B,EAAkByB,mBAAmB,GAAG7nB,OAAS,OAG5H,yBAAK9Y,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,qBACNc,YAAag/B,EAAkByB,mBAAmB7gC,OAAS,EAAIo/B,EAAkByB,mBAAmB,GAAG9R,SAAW,MAE1H,yBAAK7uB,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,yBACNc,YAAag/B,EAAkByB,mBAAmB7gC,OAAS,EAAIo/B,EAAkByB,mBAAmB,GAAG1P,UAAY,OAG/H,yBAAKjxB,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,qBACNc,YAAag/B,EAAkByB,mBAAmB7gC,OAAS,EAAIo/B,EAAkByB,mBAAmB,GAAGpB,QAAU,MAEzH,yBAAKv/B,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,oBACNc,YAAag/B,EAAkByB,mBAAmB7gC,OAAS,EAAIo/B,EAAkByB,mBAAmB,GAAGnB,eAAe5jC,WAAa,OAG/I,yBAAKoE,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAO,GACPU,MAAM,OACNR,SAAU,aACVK,UAAU,EACVC,UAAW,GACXT,MAAM,wBACNc,YAAag/B,EAAkByB,mBAAmB7gC,OAAS,EAAIo/B,EAAkByB,mBAAmB,GAAGlB,eAAe7jC,WAAa,YASnK,yBAAKoE,UAAU,OACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,2CAEJ,yBAAKA,UAAU,aACf,kBAAC,GAAD,CACQuf,SA5H5B,SAAyBgI,GACrBpkB,EAASmkB,GAAsBC,IAC/BpkB,EAASL,GAAqB6iB,GAA0BtP,aA+HhD,yBAAKrW,UAAU,qBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,kBAEJ,yBAAKA,UAAU,aACf,kBAAC,GAAD,YC5IT4gC,GA3DgB,WAC3B,IAAMz9B,EAA0BqD,cAC1BwiB,EAA0BphB,aAAY,SAACC,GAAD,OAAuBA,EAAMmhB,YACnE5rB,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzE4S,EAA2BmD,EAASA,SAASlpB,OAE/CkM,EAAO/I,aAAaC,QAAQ,kBAC5B29B,EAAiB,GACR,OAAT70B,IACA60B,EAAiB70B,GAErBL,qBAAU,WACNxI,EAASqkB,MACTrkB,EAASmQ,GAAkB,gBAAY,kBACxC,CAAClW,EAAK+V,KAAMhQ,IAEf,IAAIuX,EAAOzX,aAAaC,QAAQ,cAC5B49B,EAAa,GACJ,OAATpmB,IACAomB,EAAapmB,GAGjB,IAAMjU,EAAUC,cAShB,OACI,kBAAC,WAAD,KACI,wBAAI1G,UAAU,yBAAd,eACA,uBAAGA,UAAU,QAAb,sBACA,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,iCAAuB6I,KAAI,UAAKmS,GAAoBjb,KAAK,MAAM6I,MAAM,aAExF,yBAAKzT,UAAU,OAEC,4BAAQA,UAAS,iCAAoCiH,QAjBxD,WAEjBR,EAAQI,KAAK,CACTmB,SAFO,gBAGPH,MAAO,CAAEi5B,WAAYA,OAaL,yBAEhB,yBAAK9gC,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,sCAEJ,yBAAKA,UAAU,aACf,4BAAQiY,MAAM,OAAOD,OAAO,MAAM9Q,IAAK25B,EAAgBh2B,MAAM,uBAAuBk2B,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,U,kBCjD5OC,KAAQC,SACJC,KACAC,KACAC,KACAC,KACAC,KACAC,MAGG,IAAMxkC,GAAU,CACnBykC,YAAY,EACZ5E,QAAS,CACL6E,OAAQ,CACJv8B,SAAU,OAEdyF,MAAO,CACH+2B,SAAS,EACTluB,KAAM,wBAMX,SAASmuB,GAASpjC,GACrB,OAAO,kBAAC,KAAD,CAAKxB,QAASA,GAAS8G,KAAMtF,EAAMsF,OCtBvC,SAAS+9B,GAA4B3+B,GACxC,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,gCAC+D,CAC5DhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS2+B,GAA4B3+B,OAUhDG,MAAM,SAAAS,GACHZ,EAASyO,MACTzO,EAAS4O,MACTlW,QAAQC,IAAIiI,EAAKhG,KAAKmU,wBACtBnO,EAAKhG,KAAKmU,uBAAuBjF,KAAI,SAAC3B,EAAU4B,GAC5C,IAAIgF,EAAiD,CACjD/S,GAAImM,EAAInM,GACRgT,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClBC,SAAU/G,EAAI+G,SACdC,WAAYhH,EAAIgH,WAChBC,YAAajH,EAAIiH,YACjB9O,OAAQ6H,EAAI7H,OACZ+O,SAAUlH,EAAIkH,SACdC,MAAOnH,EAAImH,MACXC,kBAAmBpH,EAAIoH,kBACvBnF,KAAMjC,EAAIiC,MASd,MANmB,cAAfjC,EAAI7H,OACJN,EAAS0O,GAAaK,IAGtB/O,EAAS6O,GAAWE,IAEjBhF,QAGd/I,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YClErB,SAASimC,GAAkBtjC,GAC9B,OAAO,kBAAC,KAAD,CAAUsF,KAAMtF,EAAMsF,OAHjCm9B,KAAQC,SAASa,KAAYR,KAASC,MCuDvBQ,OA/Cf,SAAwBxjC,GACtB,IAAMyjC,EAAqCt6B,aAAY,SAACC,GAAD,OAAuBA,EAAMq6B,kBAEhFC,EAAsB,GACtBC,EAA2B,GAC3BF,EAAeA,eAAepiC,OAAS,GACzCoiC,EAAeA,eAAej1B,KAAI,SAAA3B,GAG5B,OAFA62B,EAAUt7B,KAAKyE,EAAI+2B,gBACnBD,EAAev7B,KAAKyE,EAAI+B,MACjB/B,KAIb,IAAMvH,EAAO,CACTu+B,OAAQF,EACRG,SAAU,CACR,CACEnjC,MAAO,aACP2E,KAAMo+B,EACNlY,gBAAiB,CACf,0BACA,0BACA,0BACA,0BACA,2BACA,2BAEFuY,YAAa,CACX,wBACA,wBACA,wBACA,wBACA,yBACA,yBAEFC,YAAa,KAKrB,OACI,kBAAC,WAAD,KACI,kBAACV,GAAD,CAAmBh+B,KAAOA,MCzCtCm9B,KAAQC,SACJC,KACAC,KACAqB,KACAC,KACApB,KACAC,KACAC,MAGG,IAAMxkC,GAAU,CACnBykC,YAAY,EACZ5E,QAAS,CACL6E,OAAQ,CACJv8B,SAAU,OAEdyF,MAAO,CACH+2B,SAAS,EACTluB,KAAM,qBAKX,SAASkvB,GAAUnkC,GACtB,OAAO,kBAAC,KAAD,CAAMxB,QAASA,GAAS8G,KAAMtF,EAAMsF,OCQhCk+B,OAjCf,SAAwBxjC,GAEpB,IAAMokC,EAAiCj7B,aAAY,SAACC,GAAD,OAAuBA,EAAMg7B,gBAE5EV,EAAsB,GACtBU,EAAaA,aAAa/iC,OAAS,GACnC+iC,EAAaA,aAAa51B,KAAI,SAAA3B,GAC1B,OAAO62B,EAAUt7B,KAAKyE,EAAIgF,UAIlC,IAAMwyB,GAAc,IAAItnC,MAAOunC,cAGzBh/B,EAAO,CACTu+B,OAFW,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,aAAc,UAAW,WAAY,YAG3HC,SAAU,CACN,CACInjC,MAAM,YAAD,OAAS0jC,GACd/+B,KAAMo+B,EACNK,YAAa,oBACbvY,gBAAiB,6BAK7B,OACI,kBAAC,WAAD,KACI,kBAAC2Y,GAAD,CAAW7+B,KAAMA,MCrChBi/B,GAA2B,mBAC3BC,GAA4B,oBAC5BC,GAA8B,sBAE9BC,GAA2C,mCAC3CC,GAA0C,kCAC1CC,GAAkC,0BAClCC,GAA+B,uBAG/BC,GAA4B,oBAC5BC,GAA6B,qBAC7BC,GAA+B,uBAE/BC,GAA4C,oCAC5CC,GAA2C,mCAC3CC,GAAmC,2BACnCC,GAAgC,wBAGhCliC,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBCrBjC,SAASsjC,GAAkB3gC,GAC9B,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBACxC4/B,GAAc,IAAItnC,MAAOunC,cAC/B,OAAO3/B,MAAM,GAAD,OACGC,+BADH,+CACuEy/B,GAAe,CAClFzlC,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS2gC,GAAkB3gC,OAUtCG,MAAM,SAAAS,GACHZ,EDCL,CACH7D,KAAMiB,GACNwjC,SCHkChgC,IAC1BZ,EDkBL,CAAE7D,KAAM+jC,KCjBHxnC,QAAQC,IAAIiI,EAAKhG,KAAKimC,mCACtBjgC,EAAKhG,KAAKimC,kCAAkC/2B,KAAI,SAAC3B,EAAU4B,GAKvD,OAAO/J,EDcpB,SAAwB4gC,GAC3B,MAAO,CAAEzkC,KAAM0jC,GAAkBe,SAAUA,GCfXE,CAJS,CACrBF,SAAUz4B,QAMlBnI,EDqCL,CAAE7D,KAAMskC,KCpCH/nC,QAAQC,IAAIiI,EAAKhG,KAAKmmC,oCACtBngC,EAAKhG,KAAKmmC,mCAAmCj3B,KAAI,SAAC3B,EAAU4B,GAKxD,OAAO/J,EDiCpB,SAAyB4gC,GAC5B,MAAO,CAAEzkC,KAAMikC,GAAmBQ,SAAUA,GClCZI,CAJS,CACrBJ,SAAUz4B,WAMrBnH,OAAM,SAAAtF,GACHsE,EDfT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UCYMoD,CAAepD,IACxBhD,QAAQC,IAAI,YCxDrB,IAAMsoC,GAA0B,kBAC1BC,GAA2B,mBAC3BC,GAA6B,qBAE7BC,GAA0C,kCAC1CC,GAAyC,iCACzC7iC,GAAiC,yBAGjCnB,GAA2B,mBAC3BikC,GAAiC,yBACjCC,GAA8B,sBCPpC,SAASC,GAAcxhC,GAC1B,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBACxC4/B,GAAc,IAAItnC,MAAOunC,cAC/B,OAAQ3/B,MAAM,GAAD,OACEC,+BADF,wBAC+Cy/B,GAAe,CAC3DzlC,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASwhC,GAAcxhC,OAUlCG,MAAM,SAAAS,GACHZ,EDKL,CAAE7D,KAAMmlC,KCJH5oC,QAAQC,IAAIiI,EAAKhG,KAAK6mC,aACtB7gC,EAAKhG,KAAK6mC,YAAY33B,KAAI,SAAC3B,EAAU4B,GAKjC,OAAO/J,EDEhB,CAAE7D,KAAM8kC,GAAiBQ,YCNS,CACrBt0B,MAAOhF,WAMlBnH,OAAM,SAAAtF,GACHsE,EDlBT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UCeMoD,CAAepD,IACxBhD,QAAQC,IAAI,YC7CrB,IAAM+oC,GAA4B,oBAC5BC,GAA6B,qBAC7BC,GAA+B,uBAE/BC,GAA4C,oCAC5CC,GAA2C,mCAC3CtjC,GAAiC,yBAGjCnB,GAA2B,mBAC3B0kC,GAAmC,2BACnCC,GAAgC,wBCNtC,SAASC,GAAgBjiC,GAC5B,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,kBACkD,CAC9ChG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASiiC,GAAgBjiC,OAUpCG,MAAM,SAAAS,GACHZ,EDKL,CAAE7D,KAAM4lC,KCJHrpC,QAAQC,IAAIiI,EAAKhG,KAAKsnC,eACtBthC,EAAKhG,KAAKsnC,cAAcp4B,KAAI,SAAC3B,EAAU4B,GACnC,IAAIo4B,EAAuB,CACvBjD,eAAgB/2B,EAAI+2B,eACpBh1B,KAAM/B,EAAI+B,MAGd,OAAOlK,EDChB,CAAE7D,KAAMulC,GAAmBU,cCDcD,UAGvCnhC,OAAM,SAAAtF,GACHsE,EDnBT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UCgBMoD,CAAepD,IACxBhD,QAAQC,IAAI,YC+Db0pC,OAxGf,WAEqBh/B,cAAjB,IAIIiX,EAH8B7V,aAAY,SAACC,GAAD,OAAWA,EAAMgL,gCAGzB4yB,UAElCxoC,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KAW3ByL,EAAU,CACd,CACEC,UAAW,aACXjL,KAAM,iBACNkL,OAAQC,yBAEV,CACEF,UAAW,eACXjL,KAAM,gBACNkL,OAAQC,yBAEV,CACIF,UAAW,cACXjL,KAAM,mBACNkL,OAAQC,yBAEV,CACEF,UAAW,QACXjL,KAAM,oBACNkL,OAAQC,yBAEZ,CACEF,UAAW,OACXjL,KAAM,iBACNoL,UA/BJ,SAAuBC,EAAMC,GAC3B,IAAIoN,EAAUpN,EAAIzR,KAClB,OACI,8BAAO6e,EAAQhB,UAAU,EAAG,IAAM,IAAMgB,EAAQhB,UAAU,GAAG,QAoDnE,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACE1L,WACEC,KAAkB1iB,KAzBP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aCuLD6lB,GA1PY,WACzB,IAAMC,EAA4B/9B,aAAY,SAACC,GAAD,OAAuBA,EAAM89B,aACrE9C,EAAiCj7B,aAAY,SAACC,GAAD,OAAuBA,EAAMg7B,gBAC1EX,EAAqCt6B,aAAY,SAACC,GAAD,OAAuBA,EAAMq6B,kBAE9E0D,EAAqBD,EAAUE,aAAa1jB,QAAO,SAAC2jB,EAAMC,GAAP,OAAgBD,GAASC,EAAKhC,UAAa,KAAI,GAClGiC,EAAuBnD,EAAaA,aAAa1gB,QAAO,SAAC2jB,EAAMC,GAAP,OAAgBD,GAASC,EAAKz1B,OAAU,KAAI,GACpG21B,EAAsB/D,EAAeA,eAAe/f,QAAO,SAAC2jB,EAAMC,GAAP,OAAgBD,GAASC,EAAK1D,gBAAmB,KAAI,GAEhHl/B,EAA0BqD,cAChCrD,EAASmQ,GAAkB,YAAa,KAVT,MAYC5U,oBAAS,GAZV,mBAYxB+0B,EAZwB,KAYdC,EAZc,OAaCh1B,oBAAS,GAbV,mBAaxBi1B,EAbwB,KAadC,EAbc,OAcCl1B,oBAAS,GAdV,mBAcxBm1B,EAdwB,KAcdC,EAdc,KAgBvB1Z,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACR,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAChH,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACxBD,EAA2BC,GAC7BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAUTuL,wBAAak2B,GAA4B3+B,IACzCyI,wBAAak4B,GAAkB3gC,IAC/ByI,wBAAa+4B,GAAcxhC,IAC3ByI,wBAAaw5B,GAAgBjiC,QAGlC,CAACA,EAAUwY,EAAc3Y,IAE5B,IAEIkjC,EAAqB,GACrBC,EAAsB,GACtBR,EAAUE,aAAa/lC,OAAS,GAAK6lC,EAAUS,cAActmC,OAAS,IACxE6lC,EAAUE,aAAa54B,KAAI,SAAA3B,GACzB,OAAO46B,EAASr/B,KAAKyE,EAAIy4B,aAG3B4B,EAAUS,cAAcn5B,KAAI,SAAA3B,GAC1B,OAAO66B,EAAUt/B,KAAKyE,EAAIy4B,cAG9B,IAAMjB,GAAc,IAAItnC,MAAOunC,cAE/BlnC,QAAQC,IAAI6pC,GAEZ,IAAM5hC,EAAO,CACXu+B,OAlBa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,aAAc,UAAW,WAAY,YAmB7HC,SAAU,CACR,CACEnjC,MAAM,YAAD,OAAS0jC,EAAY,GAC1B/+B,KAAMoiC,EACNlc,gBAAiB,2BAEnB,CACE7qB,MAAM,YAAD,OAAS0jC,GACd/+B,KAAMmiC,EACNjc,gBAAiB,6BAOvB,OACE7P,EACE,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACT,wBAAIxH,UAAU,yBAAd,mBAGA,yBAAKA,UAAU,OACb,kBAAC,GAAD,CAAS6K,MAAM,YAAY6I,KAAI,WAAMkyB,GAAch7B,KAAK,cAAc6I,MAAM,YAC5E,kBAAC,GAAD,CAAS5I,MAAM,mBAAW6I,KAAI,UAAKuyB,GAAer7B,KAAK,YAAY6I,MAAM,YACzE,kBAAC,GAAD,CAAS5I,MAAM,mCAAiB6I,KAAI,UAAKsyB,GAAgBp7B,KAAK,OAAO6I,MAAM,aAG7E,yBAAKzT,UAAU,OACb,yBAAKA,UAAU,+CACb,wBAAIA,UAAU,uBAAuBb,GAAG,WAAW8H,QAAS,YACzC,IAAbwsB,IACFC,GAAY,GACZE,GAAY,GACZE,GAAY,KAEbvsB,MAAO,CACRC,MAAOisB,EAAW,UAAY,YAPhC,aAUA,yBAAKlsB,MAAO,CACVyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBwJ,EAAW,UAAY,cAG5C,yBAAKzzB,UAAU,+CACb,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YAC1C,IAAb0sB,IACFC,GAAY,GACZF,GAAY,GACZI,GAAY,KAGdvsB,MAAO,CACLC,MAAOmsB,EAAW,UAAY,YARlC,oBAUA,yBAAKpsB,MAAO,CACVyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiB0J,EAAW,UAAY,cAI5C,yBAAK3zB,UAAU,+CACb,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YAC1C,IAAb4sB,IACFC,GAAY,GACZJ,GAAY,GACZE,GAAY,KAGdrsB,MAAO,CACLC,MAAOqsB,EAAW,UAAY,YARlC,2BAUA,yBAAKtsB,MAAO,CACVyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiB4J,EAAW,UAAY,gBAOzB,IAAbJ,EAEA,kBAAC,WAAD,KACE,yBAAKzzB,UAAU,OACb,yBAAKA,UAAU,uBACb,kBAAC6hC,GAAD,CAAU99B,KAAMA,MAIpB,yBAAK/D,UAAU,OAEb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAd,gCAEF,yBAAKA,UAAU,aACb,kBAAC,GAAD,YAUQ,IAAb2zB,EAEL,kBAAC,WAAD,KACE,yBAAK3zB,UAAU,OAEb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAd,qCAEF,yBAAKA,UAAU,aACb,kBAAC,GAAD,WAYV,kBAAC,WAAD,KACE,yBAAKA,UAAU,OAEb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAd,oCAEF,yBAAKA,UAAU,aACb,kBAACqmC,GAAD,aCzPX/lC,GAA6B,qBAC7BC,GAA6B,qBAC7BC,GAA2B,mBAE3B8lC,GAAkC,0BAClCC,GAA+B,uBAC/BC,GAA2B,mBAC3BC,GAA8B,sBAC9BC,GAA4B,oBAG5BC,GAA4B,oBAC5BC,GAAyB,iBACzBC,GAAqB,aACrBC,GAAsB,cACtBC,GAAwB,gBAExBC,GAAkC,0BAClCC,GAA+B,uBAC/BC,GAA2B,mBAC3BC,GAA4B,oBAC5BC,GAA8B,sBAE9BzlC,GAAiC,yBACjCC,GAAmC,2BACnCC,GAAkC,0BAExC,SAASC,KACZ,MAAO,CACHxC,KAAMgB,IAIP,SAASyB,GAAiBslC,GAC7B,MAAO,CACH/nC,KAAMiB,GACN8mC,gBAID,SAASplC,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAQZ,SAASyoC,KACZ,MAAO,CAAEhoC,KAAMgnC,IAGZ,SAASiB,GAAsBC,GAClC,MAAO,CAAEloC,KAAMknC,GAAkBgB,cAAeA,GAgB7C,SAASC,KACZ,MAAO,CAAEnoC,KAAM0nC,IAGZ,SAASU,GAAsBF,GAClC,MAAO,CAAEloC,KAAM4nC,GAAkBM,cAAeA,GAgB7C,SAASG,KACZ,MAAO,CAAEroC,KAAMqnC,IAGZ,SAASiB,GAAUJ,GACtB,MAAO,CAAEloC,KAAMunC,GAAYW,cAAeA,GChGvC,SAASK,GAAa9jC,EAAW6K,GACpC,IAAIxK,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACEC,+BADF,0BACyD,CAC1DhG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAGpBT,MAAK,SAAAC,GACF,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS0kC,GAAa9jC,EAAM6K,OAUvCtL,MAAK,SAAAyM,GACFlU,QAAQC,IAAIiU,GACZ5M,EChCT,SAAS2kC,EAAyB/jC,GACrC,IAAIK,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,2BAC8D,CACvDhG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS2kC,EAAyB/jC,OAU7CT,MAAM,SAAAyM,GACHlU,QAAQC,IAAIiU,GACZ5M,EAASoL,GAAwBxK,EAAK6K,aAEzCzK,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aDJHgsC,CAAyB,CAC9Bn5B,gBAAiBoB,EAAG5Q,GACpByP,QAASA,EACTC,SAAS,QAGhB1K,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aEvCrB,SAASisC,GAAsB5oC,EAAS4E,EAAWqJ,GACtD,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,gCAC2DlE,GAAM,CAC1D9B,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS4kC,GAAsB5oC,EAAI4E,EAAMqJ,OAUpD9J,MAAM,SAAAe,GACHxI,QAAQC,IAAIuI,GACQ,aAAhBN,EAAKN,OACLN,EAAS0kC,GAAa,CAClBx6B,KAAK,0EAAD,OAAwChJ,EAAI2jC,eAA5C,qBAAkE3jC,EAAIuT,WAAtE,KACJtK,YAAY,4HAAD,OAA8DjJ,EAAI2jC,eAAlE,qBAAwF3jC,EAAIuT,WAA5F,MACZ7T,EAAKob,aAGRhc,EAAS0kC,GAAa,CAClBx6B,KAAK,mFAAD,OAA8ChJ,EAAI2jC,eAAlD,qBAAwE3jC,EAAIuT,WAA5E,KACJtK,YAAY,qIAAD,OAAoEjJ,EAAI2jC,eAAxE,qBAA8F3jC,EAAIuT,WAAlG,MACZ7T,EAAKob,aAGZla,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,mCAAsB5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,SAExIpB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,4BAAoB5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,UCiHlI0iC,OA5Jf,SAA4BxpC,GAExB,IAAMypC,EAAiBtgC,aAAY,SAACC,GAAD,OAAWA,EAAMqgC,kBAC9C/kC,EAAWqD,cACjBrD,EAASmQ,GAAkB,qCAAoB,KAC/C,IAAM7M,EAAUC,cACVyhC,EAAe,SAACX,GACpBvkC,aAAaY,WAAW,sBACxBZ,aAAae,QAAQ,qBAAsBwjC,EAAcl6B,aAEzD7G,EAAQI,KAAK,CACTmB,SAFO,6BAMPogC,EAAqB,SAACZ,EAAe/jC,GACzC,IAAMtE,EAAK8F,IAAMqC,QAAQ,uEAAwC,CAC/DlC,SAAUH,IAAMI,SAASC,aAE3BnC,EAAS4kC,GAAsBP,EAAcroC,GAAI,CAC/CsE,OAAQA,GACPtE,KAIDse,EAAQyqB,EAAeG,OAEvBprC,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KA6B3ByL,EAAU,CACd,CACEC,UAAW,eACXjL,KAAM,kBACNkL,OAAQC,yBAEV,CACEF,UAAW,aACXjL,KAAM,WACNkL,OAAQC,yBAEV,CACIF,UAAW,eACXjL,KAAM,YACNkL,OAAQC,yBAEV,CACEF,UAAW,cACXjL,KAAM,iBACNoL,UA1BN,SAAuBC,EAAMC,GAC3B,IAAIoN,EAAUpN,EAAI0J,YAClB,OACI,8BAAO0D,EAAQhB,UAAU,EAAG,IAAM,IAAMgB,EAAQhB,UAAU,GAAG,OAyB/D,CACEzM,UAAW,0BACXjL,KAAM,gCACNkL,OAAQC,yBAGZ,CACEF,UAAW,GACXjL,KAAM,yBACNoL,UA3CJ,SAAoBC,EAAMC,GACxB,OACI,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WAAOkhC,EAAanpB,KAA/E,uBA2CJ,CACEL,UAAW,GACXjL,KAAM,GACNoL,UAtDJ,SAAoBC,EAAMC,GACxB,OACI,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WAAOmhC,EAAmBppB,EAAK,cAA1F,yBAsDJ,CACEL,UAAW,UACXjL,KAAM,GACNoL,UAjEJ,SAAsBC,EAAMC,GAC1B,OACI,4BAAQ1f,KAAK,SAASU,UAAU,iBAAiBiH,QAAS,WAAOmhC,EAAmBppB,EAAK,kBAAzF,aAsFN,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACEU,WACEC,KAAkB1iB,KAxBP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aC5HT,SAASyoB,GAAgBnlC,GAC5B,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,kBACiD,CAC9ChG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASmlC,GAAgBnlC,OAUpCG,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASskC,MACTtkC,EAASmkC,MACTnkC,EAASwkC,MAET5jC,EAAKhG,KAAKypC,cAAcv6B,KAAI,SAAC3B,EAAU4B,GACnC,IAAI8d,EAAY1f,EAAIod,YAChBuC,EAAY3f,EAAIqd,YAChB6e,EAA8B,CAC9BroC,GAAImM,EAAInM,GACRmO,YAAahC,EAAIgC,YACjBwzB,WAAYx1B,EAAIw1B,WAChBpK,SAAUprB,EAAIorB,SACd9e,WAAYtM,EAAIsM,WAChBowB,eAAgB18B,EAAI08B,eACpB7oB,WAAY7T,EAAI6T,WAChBiG,YAAa9Z,EAAI8Z,YACjBmjB,sBAAuBj9B,EAAIi9B,sBAC3BC,wBAAyBl9B,EAAIk9B,wBAC7B/kC,OAAQ6H,EAAI7H,OACZ4hB,aAAc/Z,EAAI+Z,aAClBojB,aAAcn9B,EAAIm9B,aAClB/f,YAAasC,EAAUI,UAAU,EAAG,GACpCzC,YAAasC,EAAUG,UAAU,EAAG,IAGxC,OACWjoB,EADkB,aAAzBqkC,EAAc/jC,OACEikC,GAAsBF,GAER,iBAAzBA,EAAc/jC,OACH8jC,GAAsBC,GAGtBI,GAAUJ,UAIrCrjC,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCzE5B,IAgFe4sC,GAhFkB,WAC/B,IACM7iB,EAD+Bje,aAAY,SAACC,GAAD,OAAuBA,EAAMqgC,kBACpCG,OAAOvoC,OACzCsa,EAAsBC,+BAAtBD,kBAGFjX,EAA0BqD,cAChCrD,EAASmQ,GAAkB,qCAAoB,KAE/C,IAAIqI,EAAe1Y,aAAaC,QAAQ,gBAClCF,EAAgBC,aAAaC,QAAQ,iBA+B3C,OA9BEyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAOfuL,wBAAa08B,GAAgBnlC,OAGpC,CAACA,EAAUwY,EAAc3Y,IAG5BoX,EACE,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACT,kBAAC,IAAD,MACA,wBAAIxH,UAAU,yBAAd,sCAGA,yBAAKA,UAAU,OACb,kBAAC,GAAD,CAAS6K,MAAM,0BAAa6I,KAAI,UAAKmS,GAAoBjb,KAAK,MAAM6I,MAAM,aAG5E,yBAAKzT,UAAU,OAEb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAd,iCAEF,yBAAKA,UAAU,aACb,kBAAC,GAAD,YC9DP,SAAS2oC,GAA4CxlC,EAAehE,GACvE,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,2CACkElE,GAAM,CACrE9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GAEH,GADA1H,QAAQC,IAAIyH,GACPA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASwlC,GAA4CxlC,EAAUhE,OAU1EmE,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZZ,EAASpB,GAAiBgC,IAC1BZ,EAASghB,MACTtoB,QAAQC,IAAIiI,EAAKhG,KAAK6qC,UACtB/sC,QAAQC,IAAIiI,EAAKhG,KAAK8qC,cACtBhtC,QAAQC,IAAIiI,EAAKhG,KAAKmhB,kBACtBnb,EAAKhG,KAAK6qC,SAAS37B,KAAI,SAAC3B,EAAU4B,GAC9B,IAAIiY,EAA+D,CAC/DhmB,GAAImM,EAAInM,GACRggB,WAAY7T,EAAI6T,WAChBiG,YAAa9Z,EAAI8Z,YACjBC,aAAc/Z,EAAI+Z,aAClBC,UAAWha,EAAIga,UACf/S,YAAYjH,EAAIiH,YAChBgT,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBC,cAAena,EAAIma,cACnBC,iBAAkBpa,EAAIoa,iBACtBjiB,OAAQ6H,EAAI7H,QAGhB,OACWN,EADG,IAAV+J,EACgB+W,GAA4CkB,GAG5Cf,GAAwCe,OAIhEhiB,EAASshB,MAET1gB,EAAKhG,KAAK8qC,aAAa57B,KAAI,SAAC3B,EAAU4B,GAClC,IAAIiY,EAA+D,CAC/DhmB,GAAImM,EAAInM,GACRggB,WAAY7T,EAAI6T,WAChBiG,YAAa9Z,EAAI8Z,YACjBC,aAAc/Z,EAAI+Z,aAClBC,UAAWha,EAAIga,UACf/S,YAAYjH,EAAIiH,YAChBgT,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBC,cAAena,EAAIma,cACnBC,iBAAkBpa,EAAIoa,iBACtBjiB,OAAQ6H,EAAI7H,QAGhB,OACWN,EADG,IAAV+J,EACgBqX,GAA+CY,GAG/CT,GAA2CS,OAInEhiB,EAAS2hB,MACT/gB,EAAKhG,KAAKmhB,iBAAiBjS,KAAI,SAAC3B,EAAU4B,GACtC,IAAIiY,EAA+D,CAC/DhmB,GAAImM,EAAInM,GACRggB,WAAY7T,EAAI6T,WAChBiG,YAAa9Z,EAAI8Z,YACjBC,aAAc/Z,EAAI+Z,aAClBC,UAAWha,EAAIga,UACf/S,YAAYjH,EAAIiH,YAChBgT,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBC,cAAena,EAAIma,cACnBC,iBAAkBpa,EAAIoa,iBACtBjiB,OAAQ6H,EAAI7H,QAGhB,OACWN,EADG,IAAV+J,EACgB0X,GAAkDO,GAGlDJ,GAA8CI,UAIzEhhB,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YC5HrB,SAASgtC,GAA6B3pC,EAASggB,EAAoBF,EAAoB7R,GAC1F,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,yCACoElE,GAAM,CACnE9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAU0iB,KAG5B3b,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS2lC,GAA6B7pB,EAAcE,EAAYhgB,EAAIiO,OAU/E9J,MAAM,SAAAS,GACHkB,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,kGAAqD5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACpKpC,EAASpB,GAAiBkd,IAC1B0pB,GAA4CxlC,EAAUgc,GACtDtjB,QAAQC,IAAIiI,MAEfI,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,2GAA2D5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACxK1J,QAAQC,IAAI,aCqHbitC,OAtJf,SAAiCtqC,GAE/B,IAAM0E,EAAWqD,cACXgX,EAAmC5V,aAAY,SAACC,GAAD,OAAWA,EAAM2V,oCAChE/W,EAAUC,cACVmK,EAAc,SAACm4B,GAEnBviC,EAAQI,KAAK,CACXmB,SAFS,uCAGTH,MAAO,CAAEmhC,aAAcA,MA0BrBvrB,EAAQD,EAAiC0B,iBAEzCjiB,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KA4B3ByL,EAAU,CACd,CACEC,UAAW,eACXjL,KAAM,kBACNkL,OAAQC,yBAEV,CACEF,UAAW,cACXjL,KAAM,uBACNkL,OAAQC,yBAGV,CACEF,UAAW,GACXjL,KAAM,yBACNoL,UA/BJ,SAAoBC,EAAMC,GACxB,OACE,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,YA3D/D,SAA8BqE,GAC5B,IAAMnM,EAAK8F,IAAMgkC,KAAK,gEAAoC,CACxD7jC,SAAUH,IAAMI,SAASC,WACzBC,UAAW,MAEbpC,EAAS2lC,GAA6Bx9B,EAAInM,GAAImM,EAAI6T,WAAY,CAC5D1b,OAAQ,YACPtE,IAqDC+pC,CAAqBlqB,KADvB,yBA+BF,CACEL,UAAW,UACXjL,KAAM,GACNoL,UA5CJ,SAAsBC,EAAMC,GAC1B,OACE,4BAAQ1f,KAAK,SAASU,UAAU,iBAAiBiH,QAAS,YAzC9D,SAAiCqE,GAC/B,IAAMnM,EAAK8F,IAAMgkC,KAAK,yEAA0C,CAC9D7jC,SAAUH,IAAMI,SAASC,WACzBC,UAAW,MAEbpC,EAAS2lC,GAA6Bx9B,EAAInM,GAAImM,EAAI6T,WAAY,CAC5D1b,OAAQ,gBACPtE,IACHgE,EAASgd,GAAgB,yBAAD,UAAiB7U,EAAIiH,YAArB,6EAkCpB42B,CAAwBnqB,KAD1B,YA4CF,CACEL,UAAW,GACXjL,KAAM,GACNoL,UAjCJ,SAAsBC,EAAMC,GAC1B,OACE,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACzD4J,EAAYmO,EAAIgqB,gBADlB,oBAsDJ,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACEtpB,WACEC,KAAkB1iB,KAxBP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aCjCDupB,GAzFuB,WACpC,IACMvjB,EADwEje,aAAY,SAACC,GAAD,OAAuBA,EAAM2V,oCACrD0B,iBAAiBpf,OAE/EkM,EAAO/I,aAAaC,QAAQ,cAC5Bic,EAAqB,EACZ,OAATnT,IACFmT,EAAahP,SAASnE,IAPkB,IAUlCoO,EAAsBC,+BAAtBD,kBAEFjX,EAA0BqD,cAChCrD,EAASmQ,GAAkB,yDAA6B,KAExD,IAAIqI,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAmCzC,OAlCAyI,qBAAU,WACR,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAChH,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACxBD,EAA2BC,GAC7BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OASXuL,wBAAa+8B,GAA4CxlC,EAAUgc,IACnEvT,wBAAawU,GAAWjd,IACxByI,wBAAamc,GAAU5kB,QAG1B,CAACA,EAAUgc,EAAYxD,EAAc3Y,IAGtCoX,EACE,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACT,wBAAIxH,UAAU,yBAAd,0DAEA,kBAAC,IAAD,MACA,yBAAKA,UAAU,OACb,kBAAC,GAAD,CAAS6K,MAAM,0BAAa6I,KAAI,UAAKmS,GAAoBjb,KAAK,MAAM6I,MAAM,aAG5E,yBAAKzT,UAAU,OAEb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAd,iCAEF,yBAAKA,UAAU,aACb,kBAAC,GAAD,Y,oBCrFRqpC,GAAa,kBACjB,yBAAKC,QAAQ,aACX,6BAAStpC,UAAU,oBAAoBupC,OAAO,wBAC9C,0BACEvpC,UAAU,YACVwpC,EAAE,mDAMFC,GAAa,kBACjB,yBAAKH,QAAQ,aACX,6BAAStpC,UAAU,oBAAoBupC,OAAO,4BAC9C,0BACEvpC,UAAU,YACVwpC,EAAE,mDAcR,IAAME,GAAOC,SAAMC,OAAO,gBAC1BF,GAAKG,UAAY,CAAC,cAAe,QAAS,SAAU,SACpDF,SAAMxI,SAASuI,IAAM,GAGrB,IAAMI,GAAOH,SAAMC,OAAO,gBAC1BE,GAAKD,UAAY,CACf,QACA,aACA,cACA,UACA,YACA,UAEFF,SAAMxI,SAAS2I,IAAM,GAGd,IAAMC,GAAU,CACrBC,YAAa,CACXC,UAAWN,SAAMC,OAAO,aACxBG,QAAS,CAAC,SAAU,gBAEtBG,QAAS,CACPC,UAAW,WACXC,SAAU,CACRC,KAjCN,WACEC,KAAKC,MAAM9jC,QAAQ4jC,QAiCfG,KA/BN,WACEF,KAAKC,MAAM9jC,QAAQ+jC,UAiCnB/jC,QAAS,CACPgkC,MAAO,IACPC,SAAU,IACVC,UAAU,IAKDC,GAAU,CACrB,SACA,OACA,OACA,OACA,SACA,YACA,QACA,SACA,SACA,aACA,aACA,OACA,SACA,SACA,OACA,QACA,QACA,QACA,cAuEaC,GAnEa,kBAC1B,yBAAK1rC,GAAG,WACN,0BAAMa,UAAU,cACd,4BAAQA,UAAU,UAAU8qC,aAAa,SACvC,4BAAQzrC,MAAM,SAAd,SACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,UAAd,WAEF,4BAAQW,UAAU,UAAU8qC,aAAa,UACvC,4BAAQzrC,MAAM,eAAd,UACA,4BAAQA,MAAM,SAAd,UACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,WAEF,4BAAQW,UAAU,YAAY8qC,aAAa,KACzC,4BAAQzrC,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,cACA,4BAAQA,MAAM,KAAd,YAGJ,0BAAMW,UAAU,cACd,4BAAQA,UAAU,YAClB,4BAAQA,UAAU,cAClB,4BAAQA,UAAU,iBAClB,4BAAQA,UAAU,eAEpB,0BAAMA,UAAU,cACd,4BAAQA,UAAU,UAAUX,MAAM,YAClC,4BAAQW,UAAU,UAAUX,MAAM,WAClC,4BAAQW,UAAU,YAAYX,MAAM,OACpC,4BAAQW,UAAU,YAAYX,MAAM,QAEtC,0BAAMW,UAAU,cACd,4BAAQA,UAAU,YAAYX,MAAM,UACpC,4BAAQW,UAAU,YAAYX,MAAM,QACpC,4BAAQW,UAAU,kBAClB,4BAAQA,UAAU,kBAEpB,0BAAMA,UAAU,cACd,4BAAQA,UAAU,aAClB,4BAAQA,UAAU,aAClB,4BAAQA,UAAU,mBAEpB,0BAAMA,UAAU,cACd,4BAAQA,UAAU,YAClB,4BAAQA,UAAU,aAClB,4BAAQA,UAAU,cAEpB,0BAAMA,UAAU,cACd,4BAAQA,UAAU,eAClB,4BAAQA,UAAU,kBAClB,4BAAQA,UAAU,cAEpB,0BAAMA,UAAU,cACd,4BAAQA,UAAU,WAChB,kBAAC,GAAD,OAEF,4BAAQA,UAAU,WAChB,kBAAC,GAAD,U,oCCvJR2pC,SAAMxI,SAAS,sBAAuB4J,MAE/B,IAyCQC,GAzCO,SAACvsC,GACrB5C,QAAQC,IAAR,iBAAsB2C,EAAMQ,WAC5B,IAAMgsC,EAAgBC,iBAAO,MAC7BC,IAAMx/B,WAAU,WACVs/B,EAAcG,QAAQC,aAAkC,KAAnB5sC,EAAMiX,UAAsC,OAAnBjX,EAAMQ,UACtEgsC,EAAcG,QAAQC,YAAYC,UAAUC,qBAAqB9sC,EAAMQ,UAElD,KAAnBR,EAAMiX,UACR81B,EAAS,CAACnsC,MAAO,SAElB,CAAC4rC,EAAexsC,EAAMQ,SAAUR,EAAMiX,WAVV,MAiBLy1B,IAAMzsC,SAAS,CAAEW,MAAO,OAjBnB,mBAiBxBwI,EAjBwB,KAiBjB2jC,EAjBiB,KAyB/B,OADA3vC,QAAQC,IAAR,iBAAsB+L,EAAMxI,QAE1B,yBAAKW,UAAU,eACb,kBAACyrC,GAAD,MACA,kBAAC,KAAD,CACEC,IAAKT,EACLU,MAAM,OACNtsC,MAAOwI,EAAMxI,MACbE,SAde,SAAAF,GACnBmsC,EAAS,CAAEnsC,UACXZ,EAAMmtC,SAASvsC,IAaXa,YAAa,6BACb6pC,QAASA,GACTa,QAASA,OC3CJiB,GAAqC,6BACrCC,GAAsC,8BACtCC,GAAwC,gCAExCC,GAAqD,6CACrDC,GAAoD,4CACpDtqC,GAAiC,yBACjCrB,GAA6B,qBAC7BC,GAA6B,qBAC7BC,GAA2B,mBAC3B0rC,GAA4C,oCAC5CC,GAAyC,iCAQ/C,SAASpqC,GAAiBqqC,GAC7B,MAAO,CACH9sC,KAAMiB,GACN6rC,0BAID,SAASnqC,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAIZ,SAASwtC,GAA4BD,GACxC,MAAO,CAAE9sC,KAAM6sC,GAAgCC,uBAAwBA,GAGpE,SAASE,KACZ,MAAO,CAAEhtC,KAAM4sC,IC9BZ,SAASK,GAA4CptC,GACxD,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EDEG,CACH7D,KAAMgB,KCFN8C,MAAM,GAAD,OACMC,+BADN,qDACgFlE,GAAM,CAC/E9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASopC,GAA4CptC,OAUhEmE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASmpC,MAETvoC,EAAKhG,KAAKyuC,qBAAqBv/B,KAAI,SAAC3B,EAAU4B,GAC1C,IAAIk/B,EAA+C,CAC/CjtC,GAAImM,EAAInM,GACRstC,qBAAsBnhC,EAAImhC,qBAC1Bp/B,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB4d,OAAQ5f,EAAI4f,QAGhB,OACW/nB,EADG,IAAV+J,EACgBm/B,GAA4BD,GDX7D,SAAiCA,GACpC,MAAO,CAAE9sC,KAAMusC,GAA4BO,uBAAwBA,GCa/BM,CAAwBN,UAInDjoC,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aCzDrB,SAAS6wC,GAA0BC,EAA2Bx/B,GACjE,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,2BAC8D,CACvDhG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUqwC,KAG5BtpC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASwpC,GAA0BC,EAAsBx/B,OAUpE9J,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZZ,EAASopC,GAA4CK,EAAqBH,uBAC1ExnC,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,4DAAoC5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,SAEtJpB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,qEAA0C5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACvJpC,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,a,+NCf5B,ICNY+wC,GDqWGC,GA/Vc,WAC3B,IAAM3pC,EAA0BqD,cAC1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAE3E6F,EAD0BlR,aAAY,SAACC,GAAD,OAAuBA,EAAMmgB,WAClC4N,eAEjC5pB,EAAO/I,aAAaC,QAAQ,iBAC5B6pC,EAAwB,EACf,OAAT/gC,IACF+gC,EAAgB58B,SAASnE,IAItB8M,IACHA,EAAS,CAAE3Z,GAAI,EAAGkO,KAAM,GAAIC,YAAa,GAAI2a,gBAAiB,EAAGC,eAAgB,EAAGzV,MAAO,EAAG0V,UAAW,GAAIC,YAAY,EAAOC,WAAY,EAAGI,WAAY,EAAGF,aAAc,EAAGD,YAAa,EAAGI,YAAa,GAAIC,YAAa,GAAIpD,aAAc,GAAIC,eAAgB,GAAIC,cAAe,GAAI+C,iBAAiB,IAG7S,IAAIlD,EAAYriB,aAAaC,QAAQ,aAEjC8pC,EAAO/pC,aAAaC,QAAQ,wBAC5BupC,EAA+B,EACtB,OAATO,IACAP,EAAuBt8B,SAAS68B,IAGpC,IAAItyB,EAAOzX,aAAaC,QAAQ,kBAC5BglB,EAAyB,EAChB,OAATxN,IACFwN,EAAiB/X,SAASuK,IAG5B/O,qBAAU,WACRxI,EAASmQ,GAAkB,yBAAkB,8BAC5C,CAAClW,EAAK+V,KAAMhQ,EAAUmiB,IAjCQ,MAsC2B5mB,mBAAoC,IAtC/D,mBAsC1BuuC,EAtC0B,KAsCFC,EAtCE,OAuCqBxuC,mBAAwB,IAvC7C,mBAuC1ByuC,EAvC0B,KAuCLC,EAvCK,OAwCK1uC,mBAAiB,GAxCtB,mBAwC1B2uC,EAxC0B,KAwCbC,EAxCa,OAyCS5uC,mBAAiB,GAzC1B,mBAyC1B6uC,EAzC0B,KAyCXC,EAzCW,OA2CP9uC,mBAAS,GA3CF,mBA2C1BW,EA3C0B,KA2CnBJ,EA3CmB,OA4CTP,mBAAS,IA5CA,mBA4C1BgV,EA5C0B,KA4CpB+5B,EA5CoB,KA8CjC5xC,QAAQC,IAAIuD,GACZxD,QAAQC,IAAIuxC,GA/CqB,MAiDC3uC,mBAAS,CACzCgvC,WAAY,CAAE7uC,MAAO,GAAIQ,MAAO,KAlDD,mBAiD1BsH,EAjD0B,KAiDfC,EAjDe,KA2DjC/K,QAAQC,IAAIyxC,GACZ,IAAM9mC,EAAUC,cAOhB,SAASinC,IACP,IAAMvgC,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAChElC,SAAUH,IAAMI,SAASC,aAGvBioC,IAAkBrlB,GACpB/kB,EAASwpC,GAA0B,CACjCr/B,YAAajO,EACbgO,KAAMugC,GACNnB,qBAAsBA,EACtBvhB,OAAQmiB,GACPjgC,IAEH5H,YAAW,WAhBbiB,EAAQI,KADA,cAmBJ,MAGF1D,EAASwpC,GAA0B,CACjCr/B,YAAajO,EACbgO,KAAMugC,GACNnB,qBAAsBA,EACtBvhB,OAAQmiB,GACPjgC,IA1F0B,MA8FD1O,mBAAiB,IA9FhB,mBA8F1BmvC,EA9F0B,KA8FhBC,EA9FgB,KA+FjC,SAASlC,EAASvsC,GAChByuC,EAAYzuC,GAgBd,SAAS0uC,IACP,IAAIC,EAA2B,CAC7B/6B,KAAMo6B,EACNY,QAASJ,GAEXT,EAAuB,GAAD,oBAAKD,GAAL,CAA0Ba,KAEhDV,EADQD,EAAc,GAEtBS,EAAY,IACZL,EAAQ,IAIV,SAASS,IACP,GAAc,IAAV7uC,EAAa,CACf,IAAI2uC,EAA2B,CAC7B/6B,KAAMo6B,EACNY,QAASJ,GAEPM,EAA0C,CAC5CjjB,OAAQqiB,EACRlgC,KAAMugC,GACNQ,cAA0B,SAAXC,GACfC,SAAS,GAAD,oBAAMnB,GAAN,CAA2Ba,KAErCd,EAA0B,GAAD,oBAAKD,GAAL,CAA6BkB,KAGtDX,EADQD,EAAgB,GAGxBO,EAAY,IACZ7uC,EAAS,GACTsvC,GAAc,IACdC,GAAc,IACdC,GAAU,IACVC,GAAU,IACVpB,EAAe,GACfF,EAAuB,KArJM,OA2JL1uC,mBAAS,IA3JJ,qBA2J1BiwC,GA3J0B,MA2JlBC,GA3JkB,SA4JGlwC,mBAAS,IA5JZ,qBA4J1BmwC,GA5J0B,MA4JdN,GA5Jc,SA6JL7vC,mBAAS,IA7JJ,qBA6J1BkvC,GA7J0B,MA6JlBa,GA7JkB,aA4KL/vC,mBAAS,IA5KJ,qBA4K1BowC,GA5K0B,MA4KlBC,GA5KkB,SA6KGrwC,mBAAS,IA7KZ,qBA6K1BswC,GA7K0B,MA6KdR,GA7Kc,SA8KL9vC,mBAAS,IA9KJ,qBA8K1B2vC,GA9K0B,MA8KlBK,GA9KkB,MA6LjC,IAAMO,GAxF8B,CAClC,CACE,KAAQ,8BACR,MAAS,QAEX,CACE,KAAQ,yCACR,MAAS,UAiFgDhiC,KAAI,SAACqI,EAAapI,GAC7E,OACE,4BAAQ0D,IAAK1D,EAAO7N,MAAOiW,EAAOjW,OAAQiW,EAAOjI,SAIrD,SAAS6hC,MAIT,SAASC,MAIT,SAASC,MAKT,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,MACA,yBAAKpvC,UAAU,uBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAd,aAAsDutC,IAExD,yBAAKvtC,UAAU,aACb,8BACE,yBAAKA,UAAU,YACb,yBAAKA,UAAU,uBACb,6BACE,2BAAOd,QAAQ,cAAf,2CACA,2BACEG,MAAOuuC,GACPtuC,KAAK,OACLC,SAjEpB,SAAyBC,GAA6C,IAC/DmvC,EAAQU,EADsD,EACxB,CAAC,GAAI,GAAI7vC,EAAMC,OAAOJ,OAAvCiwC,EADyC,OAGzCA,EACkB,CAAC,GAAI,YAA/C,CAAC,wBAAyB,cAJuC,mBAGlEX,EAHkE,KAG1DU,EAH0D,KAMnET,GAAUD,GACVJ,GAAcc,GACdZ,GAAUa,IA0DQtvC,UAAS,uBAAkB6uC,IAC3B1vC,GAAE,6CACFe,YAAY,KACbyuC,GACC,yBAAK3uC,UAAU,oBACZ2uC,IACM,OAIf,yBAAK3uC,UAAU,uBACb,2BAAOd,QAAO,uBAAd,8BACA,4BACEG,MAAOgvC,GACPlvC,GAAE,sBACFa,UAAS,wBAAmBgvC,IAC5BzvC,SAjElB,SAAyBC,GAA8C,IAChEsvC,EAAQS,EADuD,EACzB,CAAC,GAAI,GAAI/vC,EAAMC,OAAOJ,OAAvCmwC,EAD0C,OAG1CA,EACqB,CAAC,GAAI,YAAlD,CAAC,2BAA4B,cAJqC,mBAGnEV,EAHmE,KAG3DS,EAH2D,KAMpER,GAAUD,GACVN,GAAce,GACdb,GAAUc,KA0DM,4BAAQnwC,MAAO,GAAf,aACC4vC,IAGFH,GACC,yBAAK9uC,UAAU,oBACZ8uC,IACM,OAIf,yBAAK9uC,UAAU,YACb,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CAAab,GAAG,cACZE,MAAOsH,EAAU+mC,WAAWruC,MAC5BU,MAAM,aACNR,SA9MtB,SAA6BwH,GAC3BH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UAC/EJ,EAAS8H,EAAM1H,QA6MKqrB,IAAK,IACLG,IAAK,EACLzrB,MAAM,6BAMRC,EAAQ,GAAKA,EAAQ,EAAIguC,EAEzB,oCACE,yBAAKrtC,UAAU,cACb,+DAAsBqtC,EAAc,EAApC,MAA0ChuC,GAC1C,kBAAC,GAAD,CAAQusC,SAAUA,EAAUl2B,SAAUm4B,EAAU5uC,SAAUyU,KAE5D,yBAAK1T,UAAU,YACX,yBAAKA,UAAU,8BACX,4BAAQV,KAAK,SAASU,UAAU,4BAA4BiH,QAASioC,IAArE,oBACA,4BAAQ5vC,KAAK,SAASU,UAAU,qCAAqCiH,QAAS0mC,GAA9E,qBACA,4BAAQruC,KAAK,SAASU,UAAU,qCAAqCiH,QAAS8mC,GAA9E,kCAEJ,yBAAK/tC,UAAU,8BACX,4BAAQV,KAAK,SAASU,UAAU,sDAAsDiH,QAASkoC,IAA/F,yBACA,4BAAQ7vC,KAAK,SAASU,UAAU,wCAAwCiH,QAASmoC,IAAjF,6BAOL/vC,EAAQ,IAAMguC,GAAyB,IAAVhuC,EAElC,oCACA,yBAAKW,UAAU,cACb,sDAAuBqtC,EAAc,GACrC,kBAAC,GAAD,CAAQzB,SAAUA,EAAUl2B,SAAUm4B,EAAU5uC,SAAUyU,KAE5D,yBAAK1T,UAAU,YACf,yBAAKA,UAAU,8BACL,4BAAQV,KAAK,SAASU,UAAU,qCAAqCiH,QAAS0mC,GAA9E,qBACA,4BAAQruC,KAAK,SAASU,UAAU,qCAAqCiH,QAAS8mC,GAA9E,kCAEJ,yBAAK/tC,UAAU,8BACX,4BAAQV,KAAK,SAASU,UAAU,wCAAwCiH,QAASmoC,IAAjF,kCAbT,EAyBDt2B,GAA4B,IAAlBy0B,EAEV,yBAAKvtC,UAAU,YACT,yBAAKA,UAAU,8BACf,4BAAQV,KAAK,SAASU,UAAU,gCAAgCiH,QAAS0mC,GAAzE,sBACI,4BAAQruC,KAAK,SAASU,UAAU,iCAAiCiH,QAASioC,IAA1E,qBAEJ,yBAAKlvC,UAAU,8BACX,4BAAQV,KAAK,SAASU,UAAU,wCAAwCiH,QAASinC,GAAjF,8BAKLp1B,GAAWy0B,GAAiBR,EAEjC,yBAAK/sC,UAAU,YACT,yBAAKA,UAAU,8BACf,4BAAQV,KAAK,SAASU,UAAU,qCAAqCiH,QAAS0mC,GAA9E,sBACI,4BAAQruC,KAAK,SAASU,UAAU,iCAAiCiH,QAASioC,IAA1E,qBAEJ,yBAAKlvC,UAAU,8BACX,4BAAQV,KAAK,SAASU,UAAU,wCAAwCiH,QAASinC,GAAjF,mCART,Q,OEpWhB,SAASuB,GAAaC,GACzB,OAAOA,EAAI9zC,WAAW+zC,SAAS,EAAG,KAG/B,SAASC,GAAWC,GACvB,MACE,CACEA,EAAK9M,cACL0M,GAAaI,EAAKC,WAAa,GAC/BL,GAAaI,EAAKE,YAClBC,KAAK,KACP,IACA,CACEP,GAAaI,EAAKI,YAClBR,GAAaI,EAAKlkB,cAClB8jB,GAAaI,EAAKK,eAClBF,KAAK,M,SDMDnD,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KE4IGsD,OAzJf,SAAyB1xC,GAErB,IAAM2xC,EAAWxoC,aAAY,SAACC,GAAD,OAAWA,EAAMuoC,YACxC3pC,EAAUC,cAEVmK,EAAc,SAAC1R,GACnB8D,aAAae,QAAQ,aAAc7E,GAEjCsH,EAAQI,KADG,qBAITgpC,GADS,IAAIr0C,MACC60C,cAEdnS,EAAW0R,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,EAAE,IAAM,IAAKwkB,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,GAAG,IAC3GvvB,QAAQC,IAAK8zC,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,EAAE,IAAM,IAAKwkB,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,GAAG,KAEzG,IAAM3N,EAAQ2yB,EAASA,SAASxxB,QAAO,SAACjF,EAASzM,GAC/C,IAAIojC,EAAW32B,EAAQ9B,WACnB04B,EAAW52B,EAAQ7B,SACvB,OAAK6B,GAAW22B,EAAWpS,GAAYA,EAAWqS,EACvC,KAGA52B,KAIP1c,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KA4B3ByL,EAAU,CACd,CACEC,UAAW,OACXjL,KAAM,SACNkL,OAAQC,yBAEV,CACEF,UAAW,gBACXjL,KAAM,qBACNkL,OAAQC,yBAEV,CACEF,UAAW,eACXjL,KAAM,yBACNkL,OAAQC,yBAEV,CACEF,UAAW,aACXjL,KAAM,wCACNoL,UAlCJ,SAAuBC,EAAMC,GAC3B,IAAIoN,EAAUpN,EAAInH,WAClB,OACI,8BAAOuU,EAAQhB,UAAU,EAAG,IAAM,IAAMgB,EAAQhB,UAAU,GAAG,OAiCjE,CACEzM,UAAW,WACXjL,KAAM,kCACNoL,UAhCJ,SAAqBC,EAAMC,GACzB,IAAIoN,EAAUpN,EAAInH,WAClB,OACI,8BAAOuU,EAAQhB,UAAU,EAAG,IAAM,IAAMgB,EAAQhB,UAAU,GAAG,OA+BjE,CACEzM,UAAW,yBACXjL,KAAM,mCAER,CACEiL,UAAW,kCACXjL,KAAM,uBAER,CACEiL,UAAW,GACXjL,KAAM,yBACNoL,UA7DJ,SAA0BC,EAAMC,GAC9B,OACE,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACtDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClCnO,EAAYmO,EAAI7f,MAFlB,0BAmFJ,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACEugB,WACEC,KAAkB1iB,KAzBP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aCuBD2wB,OAvJf,SAAwB/xC,GAEpB,IAAM2xC,EAAWxoC,aAAY,SAACC,GAAD,OAAWA,EAAMuoC,YACxC3pC,EAAUC,cAEVmK,EAAc,SAAC1R,GACnB8D,aAAae,QAAQ,aAAc7E,GAEjCsH,EAAQI,KADG,qBAITgpC,GADS,IAAIr0C,MACC60C,cAEdnS,EAAW0R,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,EAAE,IAAM,IAAKwkB,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,GAAG,IAC3GvvB,QAAQC,IAAK8zC,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,EAAE,IAAM,IAAKwkB,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,GAAG,KAEzG,IAAM3N,EAAQ2yB,EAASA,SAASxxB,QAAO,SAACjF,EAASzM,GAC/C,IAAIqjC,EAAW52B,EAAQ7B,SACvB,OAAK6B,GAAW42B,EAAWrS,EAChB,KAGAvkB,KAIP1c,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KA2B3ByL,EAAU,CACd,CACEC,UAAW,OACXjL,KAAM,SACNkL,OAAQC,yBAEV,CACEF,UAAW,gBACXjL,KAAM,qBACNkL,OAAQC,yBAEV,CACEF,UAAW,eACXjL,KAAM,yBACNkL,OAAQC,yBAEV,CACEF,UAAW,aACXjL,KAAM,wCACNoL,UAlCJ,SAAuBC,EAAMC,GAC3B,IAAIoN,EAAUpN,EAAInH,WAClB,OACI,8BAAOuU,EAAQhB,UAAU,EAAG,IAAM,IAAMgB,EAAQhB,UAAU,GAAG,OAiCjE,CACEzM,UAAW,WACXjL,KAAM,kCACNoL,UAhCJ,SAAqBC,EAAMC,GACzB,IAAIoN,EAAUpN,EAAInH,WAClB,OACI,8BAAOuU,EAAQhB,UAAU,EAAG,IAAM,IAAMgB,EAAQhB,UAAU,GAAG,OA+BjE,CACIzM,UAAW,yBACXjL,KAAM,mCAER,CACEiL,UAAW,kCACXjL,KAAM,uBAEV,CACEiL,UAAW,GACXjL,KAAM,yBACNoL,UA5DJ,SAA0BC,EAAMC,GAC9B,OACE,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACzD4J,EAAYmO,EAAI7f,MADlB,oBAkFJ,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACEugB,WACEC,KAAkB1iB,KAzBP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aCwDD4wB,OApLf,SAA6BhyC,GAE3B,IAAM0E,EAAWqD,cAET4pC,EAAWxoC,aAAY,SAACC,GAAD,OAAWA,EAAMuoC,YACxC3pC,EAAUC,cAEVgqC,EAA8B,SAACvxC,GACnC8D,aAAae,QAAQ,aAAc7E,GACjC,IAAMiO,EAAMnI,IAAMgkC,KAAK,4BAAkB,CACvC7jC,SAAUH,IAAMI,SAASC,WACzBC,UAAW,MAEbpC,ECnBD,SAASwtC,EAAqCxxC,EAAYiO,GAC7D,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,uCACkElE,GAAM,CACjE9B,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASwtC,EAAqCxxC,EAAIiO,OAU7D9J,MAAM,SAAAe,GACHxI,QAAQC,IAAIuI,GACZY,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,uCAA0B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAaC,UAAW,SAE7IpB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,gDAAgC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC7I1J,QAAQC,IAAI,aDhBX60C,CAAqCxxC,EAAIiO,KAGhDyD,EAAc,SAAC1R,GACjB8D,aAAae,QAAQ,aAAc7E,GAEnCsH,EAAQI,KADG,qBAITgpC,GADS,IAAIr0C,MACC60C,cAEdnS,EAAW0R,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,EAAE,IAAM,IAAKwkB,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,GAAG,IAC3GvvB,QAAQC,IAAK8zC,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,EAAE,IAAM,IAAKwkB,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,GAAG,KAEzG,IAAM3N,EAAQ2yB,EAASA,SAASxxB,QAAO,SAACjF,EAASzM,GAC/C,IAAIojC,EAAW32B,EAAQ9B,WACvB,OAAK8B,GAAW22B,EAAWpS,EAChB,KAGAvkB,KAIP1c,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KAwC3ByL,EAAU,CACd,CACEC,UAAW,OACXjL,KAAM,SACNkL,OAAQC,yBAEV,CACEF,UAAW,gBACXjL,KAAM,qBACNkL,OAAQC,yBAEV,CACEF,UAAW,eACXjL,KAAM,yBACNkL,OAAQC,yBAEV,CACEF,UAAW,aACXjL,KAAM,wCACNoL,UAlCJ,SAAuBC,EAAMC,GAC3B,IAAIoN,EAAUpN,EAAInH,WAClB,OACI,8BAAOuU,EAAQhB,UAAU,EAAG,IAAM,IAAMgB,EAAQhB,UAAU,GAAG,OAiCjE,CACEzM,UAAW,WACXjL,KAAM,kCACNoL,UAhCJ,SAAqBC,EAAMC,GACzB,IAAIoN,EAAUpN,EAAInH,WAClB,OACI,8BAAOuU,EAAQhB,UAAU,EAAG,IAAM,IAAMgB,EAAQhB,UAAU,GAAG,OA+BjE,CACEzM,UAAW,yBACXjL,KAAM,mCAER,CACEiL,UAAW,kCACXjL,KAAM,uBAER,CACEiL,UAAW,GACXjL,KAAM,yBACNoL,UAzEJ,SAA0BC,EAAMC,GAC9B,OACE,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACtDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClCnO,EAAYmO,EAAI7f,MAFlB,yBAyEF,CACEwf,UAAW,GACXjL,KAAM,GACNoL,UArEJ,SAAmCC,EAAMC,GACvC,MAAiD,SAA7C/b,aAAaC,QAAQ,oBAChB,KAGP,4BAAQ5D,KAAK,SAASU,UAAU,eAAeiH,QAAS,WACnDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClC0xB,EAA4B1xB,EAAI7f,MAFlC,6BAwFJ,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACEugB,WACEC,KAAkB1iB,KAzBP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aE/IT,SAAS+wB,GAAWztC,GACvB,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,0BAC0D,CACtDhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASytC,GAAWztC,OAU/BG,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EpJbL,CAAE7D,KAAMma,KoJcH5d,QAAQC,IAAIiI,EAAKhG,KAAKgX,SACtBhR,EAAKhG,KAAKgX,QAAQ9H,KAAI,SAAC3B,EAAU4B,GAC7B,IAAIojC,EAAWhlC,EAAIuM,WACf04B,EAAWjlC,EAAIwM,SACf+4B,EAAWvlC,EAAImuB,kBACf9f,EAAmB,CACnBxa,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrB6oB,gCAAiCxlC,EAAIwlC,gCACrCC,yBAA0BzlC,EAAIylC,yBAC9BC,uBAAwB1lC,EAAI0lC,uBAC5BvX,kBAAmBoX,EAASzlB,UAAU,EAAE,IACxCjD,UAAW7c,EAAI6c,UACftQ,WAAYy4B,EAASllB,UAAU,EAAE,IACjCtT,SAAUy4B,EAASnlB,UAAU,EAAE,IAC/BhD,WAAY9c,EAAI8c,WAChBC,WAAY/c,EAAI+c,WAChBC,YAAahd,EAAIgd,YACjBG,WAAYnd,EAAImd,WAChBlD,aAAcja,EAAIia,aAClBE,cAAena,EAAIma,cACnBiD,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAIrB,OADA9sB,QAAQC,IAAI6d,GAEDxW,EADG,IAAV+J,EpJ/CjB,SAAwByM,GAC3B,MAAO,CAAEra,KAAMoa,GAAiBC,QAASA,GoJ+CLs3B,CAAet3B,GAGfC,GAAWD,UAItCxV,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YChE5B,IA+Seo1C,GA/SW,WAAO,IAAD,EACIxyC,oBAAS,GADb,mBACrB+0B,EADqB,KACXC,EADW,OAEIh1B,oBAAS,GAFb,mBAErBi1B,EAFqB,KAEXC,EAFW,OAGIl1B,oBAAS,GAHb,mBAGrBm1B,EAHqB,KAGXC,EAHW,KAItB3wB,EAA0BqD,cAC1B4pC,EAA0BxoC,aAAY,SAACC,GAAD,OAAuBA,EAAMuoC,YACnEhzC,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QANnD,EAOAvU,oBAAS,GAPT,mBAOrB4b,EAPqB,KAObC,EAPa,KAQpBH,EAAsBC,+BAAtBD,kBAGFy1B,GADS,IAAIr0C,MACC60C,cACpBx0C,QAAQC,IAAI+zC,GACZ,IAAM3R,EAAW0R,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,EAAG,IAAM,IAAMwkB,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,GAAI,IAC1G+lB,EAAgCf,EAASA,SAASxxB,QAAO,SAACjF,GAC1D,IAAI42B,EAAW52B,EAAQ7B,SACvB,OAAO6B,GAAW42B,EAAWrS,EAGtB,KAFIvkB,KAGZ7Z,OAECsxC,EAA+BhB,EAASA,SAASxxB,QAAO,SAACjF,GACzD,IAAI22B,EAAW32B,EAAQ9B,WACnB04B,EAAW52B,EAAQ7B,SACvB,OAAO6B,GAAW22B,EAAWpS,GAAYA,EAAWqS,EAG7C,KAFI52B,KAGZ7Z,OAECuxC,EAAqCjB,EAASA,SAASxxB,QAAO,SAACjF,GAC/D,IAAI22B,EAAW32B,EAAQ9B,WACvB,OAAO8B,GAAW22B,EAAWpS,EAGtB,KAFIvkB,KAGZ7Z,OACH6L,qBAAU,WACNxI,EAAS6W,MACT7W,EAASmQ,GAAkB,gBAAY,mBACxC,CAAClW,EAAK+V,KAAMhQ,IAEf,IAAIwY,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBA+BzC,SAASouC,EAA4B33B,GACjCxW,EAAS4W,GAAsBJ,IAgB/BY,GAAU,GAdVpX,EAASL,GAAqB+pC,GAA0Bx2B,OAG5D,SAASk7B,EAAsB53B,GAC3BxW,EAAS4W,GAAsBJ,IAC/BxW,EAASL,GAAqB+pC,GAA0Bx2B,OAG5D,SAASm7B,EAAuB73B,GAC5BxW,EAAS4W,GAAsBJ,IAC/BxW,EAASL,GAAqB+pC,GAA0Bx2B,OA3C5D1K,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAaglC,GAAWztC,OAGjC,CAACA,EAAUwY,EAAc3Y,IAsB5B,IAAMyD,EAAUC,cAahB,OACI0T,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACH,kBAAC,IAAD,MACA,wBAAIxH,UAAU,yBAAd,iBACA,uBAAGA,UAAU,QAAb,sBACA,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,yBAAe6I,KAAI,UAAK09B,GAAwBxmC,KAAK,MAAM6I,MAAM,YAChF,kBAAC,GAAD,CAAS5I,MAAM,8BAAc6I,KAAI,UAAKy9B,GAAyBvmC,KAAK,MAAM6I,MAAM,YAChF,kBAAC,GAAD,CAAS5I,MAAM,yBAAe6I,KAAI,UAAK29B,GAA8BzmC,KAAK,MAAM6I,MAAM,aAI1F,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,WAAW8H,QAAS,YACvC,IAAbwsB,IACAC,GAAY,GACZE,GAAY,GACZE,GAAY,KAEjBvsB,MAAO,CACNC,MAAOisB,EAAW,UAAY,YAPlC,wCASA,yBAAKlsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBwJ,EAAW,UAAY,cAGhD,yBAAKzzB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACxC,IAAb0sB,IACAC,GAAY,GACZF,GAAY,GACZI,GAAY,KAGhBvsB,MAAO,CACHC,MAAOmsB,EAAW,UAAY,YARtC,wCAUA,yBAAKpsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiB0J,EAAW,UAAY,cAIhD,yBAAK3zB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACxC,IAAb4sB,IACAC,GAAY,GACZJ,GAAY,GACZE,GAAY,KAGhBrsB,MAAO,CACHC,MAAOqsB,EAAW,UAAY,YARtC,6CAUA,yBAAKtsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiB4J,EAAW,UAAY,gBAO3B,IAAbF,EAEI,kBAAC,WAAD,KACI,yBAAK3zB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,sDAEJ,yBAAKA,UAAU,aACX,kBAAC,GAAD,CACIuf,SAAUgyB,UASpB,IAAb9d,EAED,kBAAC,WAAD,KACI,yBAAKzzB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,qDACA,yBAAKA,UAAU,kBACX,4BAAQA,UAAU,4BAA4BiH,QAAS,WACnD9D,EAASL,GAAqB+pC,GAA0Bj3B,SA1HxGnP,EAAQI,KACJ,CACImB,SAHA,yBAIAH,MAAO,CAAE4pC,cAAe,UA0HgB,uBAAGzxC,UAAU,mBAJjB,2BASR,yBAAKA,UAAU,aACX,kBAAC,GAAD,CACIuf,SAAU+xB,QAQ1B,WACI,GAAKlB,EAASsB,iBAAqBtB,EAASz6B,oBAAsBk3B,GAA0BptB,OACxF,OACI,kBAAC,KAAD,CACIxhB,KAAMqc,EACN6B,QAAS,kBAAM5B,GAAU,IACzB6B,sBAAoB,GAEpB,yBAAKpc,UAAU,cAAcb,GAAG,eAC5B,yBAAKa,UAAU,eAAf,iBAGA,yBAAKA,UAAU,iBACX,4BAAQV,KAAK,SACTU,UAAU,iBACViH,QAAS,WACAmpC,EAASsB,kBAGdvuC,EC1R7D,SAASwuC,EAAcxyC,GAC1B,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACEC,+BADF,oBAC2ClE,GAAM,CAC9C9B,OAAQ,SACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI3CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASwuC,EAAcxyC,OAUlCmE,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZZ,EAAS2W,GAAc3a,OAE1BgF,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aDuPiD61C,CAAcvB,EAASsB,gBAAgBvyC,KAChDgE,EAASgd,GAAgB,oBAAD,UAAiBiwB,EAASsB,gBAAgBvyC,GAA1C,4CACxBgE,EAAS2W,GAAcs2B,EAASsB,gBAAgBvyC,KAChDgE,EAAS6W,MACTO,GAAU,MAVlB,aAbxB,KAqCM,IAAbsZ,EAED,kBAAC,WAAD,KACI,yBAAK7zB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,2DAEJ,yBAAKA,UAAU,aACX,kBAAC,GAAD,CACIuf,SAAUiyB,cAXrC,IErQVI,GArCe,WAEIprC,aAChCrD,CAASmQ,GAAkB,qBAAY,KAHL,IAK1BzL,EAAUohB,cAAVphB,MACJsP,EAAI,GAMR,YALqBkE,WAAVxT,IACTsP,EAAGtP,EAAMmhC,cAEXntC,QAAQC,IAAIqb,GAGV,kBAAC,WAAD,KACE,wBAAInX,UAAU,yBAAd,sBAGA,yBAAKA,UAAU,OAEb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAd,qBAEF,yBAAKA,UAAU,aACf,yBAAKkH,IAAKiQ,EAAGhQ,IAAI,WCgBd0qC,OA3Cf,SAAkBpzC,GAAoC,IAAD,EACrBC,oBAAS,GADY,mBAC1CC,EAD0C,KACjCC,EADiC,OAEvBF,mBAAS,IAFc,mBAE1CG,EAF0C,KAEnCC,EAFmC,OAGfJ,mBAAS,IAHM,mBAG1CK,EAH0C,KAG/BC,EAH+B,OAI5BN,oBAAS,GAArBO,EAJwC,oBAsBjD,OACI,yBAAKe,UAAU,cACX,2BACIA,UAAS,2BAAsBvB,EAAMwB,WAAaxB,EAAMwB,WAAa,GAA5D,YAAkElB,GAC3EO,KAAK,WACLH,GAAE,aAAQV,EAAMW,OAChB0pB,QAASrqB,EAAMY,MACfE,SAtBZ,SAAwBC,GAA6C,IAC5DX,EAAOa,EADoD,EACxB,CAAC,GAAI,GAAIF,EAAMC,OAAOqpB,SAAtCnpB,EADwC,QAGxCA,GAAgBlB,EAAMmB,SAC1C,CAAC,0BAA2B,cAAgB,CAAC,GAAI,YAJW,mBAG/Df,EAH+D,KAGxDa,EAHwD,KAOhEjB,EAAMc,SAAS,CAAEF,MAAOM,EAAcd,MAAOA,EAAOF,QAASA,EAASoB,MAAOtB,EAAMsB,QAEnFnB,GAAS,GACTE,EAASD,GACTG,EAAaU,GACbT,EAASU,MAWL,2BAAOK,UAAU,mBAAmBd,QAAST,EAAMU,GAAGvD,YACjD6C,EAAMW,OAGVP,EACG,yBAAKmB,UAAU,oBACVnB,GACI,OCjCzB8qC,SAAMxI,SAAS,sBAAuB4J,MAE/B,IAqCQC,GArCO,SAACvsC,GACrB5C,QAAQC,IAAI,UACZ,IAAMmvC,EAAgBC,iBAAO,MAC7BC,IAAMx/B,WAAU,WACVs/B,EAAcG,QAAQC,cAAgB5sC,EAAMiX,UAC5Cu1B,EAAcG,QAAQC,YAAYC,UAAUC,qBAAqB9sC,EAAMQ,YAE1E,CAACgsC,EAAexsC,EAAMiX,SAAUjX,EAAMQ,WAPV,MAaLksC,IAAMzsC,SAAS,CAAEW,MAAO,OAbnB,mBAaxBwI,EAbwB,KAajB2jC,EAbiB,KAqB/B,OADA3vC,QAAQC,IAAI+L,EAAMxI,OAEhB,yBAAKW,UAAU,eACb,kBAACyrC,GAAD,MACA,kBAAC,KAAD,CACEC,IAAKT,EACLU,MAAM,OACNtsC,MAAOwI,EAAMxI,MACbE,SAde,SAAAF,GACnBmsC,EAAS,CAAEnsC,UACXZ,EAAMmtC,SAASvsC,IAaXa,YAAa,6BACb6pC,QAASA,GACTa,QAASA,OCvCJkH,GAA+B,uBAC/BC,GAAgC,wBAChCC,GAAkC,0BAElCC,GAA+C,uCAC/CC,GAA8C,sCAC9CvwC,GAAiC,yBACjCrB,GAA6B,qBAC7BC,GAA6B,qBAC7BC,GAA2B,mBAC3B2xC,GAAsC,8BACtCC,GAAmC,2BAEzC,SAAStwC,KACZ,MAAO,CACHxC,KAAMgB,IAIP,SAASyB,GAAiBswC,GAC7B,MAAO,CACH/yC,KAAMiB,GACN8xC,oBAID,SAASpwC,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAIZ,SAASyzC,GAAuBD,GACnC,MAAO,CAAE/yC,KAAM8yC,GAA0BC,iBAAkBA,GAGxD,SAASE,KACZ,MAAO,CAAEjzC,KAAM6yC,IAGZ,SAASK,GAAmBH,GAC/B,MAAO,CAAE/yC,KAAMwyC,GAAsBO,iBAAkBA,GAmBpD,SAASI,GAAoCpzC,GAChD,MAAO,CAAEC,KAAMqC,GAAwBtC,MAAOA,GC9D3C,IAAMqzC,GAAgC,wBAChCC,GAAiC,yBACjCC,GAAmC,2BAEnCC,GAAgD,wCAChDC,GAA+C,uCAC/CnxC,GAAiC,yBACjCrB,GAA6B,qBAC7BC,GAA6B,qBAC7BC,GAA2B,mBAC3BuyC,GAAuC,+BACvCC,GAAoC,4BAE1C,SAASlxC,KACZ,MAAO,CACHxC,KAAMgB,IAWP,SAAS2B,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UC1BZ,SAASo0C,GAAsBlvC,GAClC,IAAIK,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,sBACyD,CAClDhG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS8vC,GAAsBlvC,OAU1CT,MAAM,SAAAyM,GACHlU,QAAQC,IAAIiU,GACZ5M,EChCT,SAAS+vC,EAAyBtG,GACrC,IAAIxoC,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,2BAC8D,CACvDhG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUqwC,KAG5BtpC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS+vC,EAAyBtG,OAU7CtpC,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZZ,EAASopC,GAA4CK,EAAqBH,0BAE7EtoC,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aDJHo3C,CAAyB,CAC9BzG,qBAAsB18B,EAAG5Q,GACzBkO,KAAM,GACNC,YAAa,GACb4d,OAAQ,QAGf/mB,OAAM,SAAAtF,GACHhD,QAAQC,IAAI,aE/BrB,SAASq3C,GAAmBhwC,GAC/B,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAOE,MAAM,GAAD,OACGC,+BADH,mCACmE,CAC/DhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASgwC,GAAmBhwC,OAUvCG,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASovC,MACT12C,QAAQC,IAAIiI,EAAKhG,KAAKq1C,iBACtBrvC,EAAKhG,KAAKq1C,gBAAgBnmC,KAAI,SAAC3B,EAAU4B,GACrC,IAAImlC,EAAoC,CACpClzC,GAAImM,EAAInM,GACRkpB,WAAY/c,EAAI+c,WAChB/C,UAAWha,EAAIga,UACfjY,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB4d,OAAQ5f,EAAI4f,OACZkjB,cAAe9iC,EAAI8iC,cACnB1lB,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAGrB,OACWxlB,EADG,IAAV+J,EACgBolC,GAAuBD,GAGvBG,GAAmBH,UAI9CluC,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YC9DrB,SAASu3C,GAAWv6B,EAAa1L,GACpC,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,WAC8C,CACvChG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUuc,KAG5BxV,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASkwC,GAAWv6B,EAAQ1L,OAUvC9J,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZkB,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,4CAA4B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC3IwiB,GAAU5kB,GACVA,ECnCT,SAASmwC,EAAqBvvC,EAAWmkB,GAC5C,IAAI9jB,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,qBACwD,CACjDhG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASmwC,EAAqBvvC,EAAMmkB,OAU/C5kB,MAAM,SAAAyM,GACHlU,QAAQC,IAAIiU,GACZojC,GAAmBhwC,GACnBA,EAAS8vC,GAAsB,CACvBM,oBAAqBxjC,EAAG5Q,GACxBkO,KAAMtJ,EAAKsJ,KACXgb,WAAYplB,aAAaC,QAAQ,SAErCa,EAAKmnB,OAAO,GAAKhD,GACjB/kB,EAASmwC,EAAqB,CAC1BjrB,WAAYplB,aAAaC,QAAQ,MACjCoiB,UAAWvhB,EAAKuhB,UAChBjY,KAAM,GACN6d,OAAQnnB,EAAKmnB,OAAS,EACtBkjB,cAAe,IAChBlmB,OAGV/jB,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aDhBHw3C,CAAqB,CAC1BjrB,WAAYplB,aAAaC,QAAQ,MACjCoiB,UAAWvhB,EAAK5E,GAChBkO,KAAM,GACN6d,OAAQ,EACRkjB,eAAe,GAChBrqC,EAAKmkB,oBAEX/jB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,qDAAkC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC/I1J,QAAQC,IAAI,aE7CrB,SAAS03C,GAAUr0C,EAAQ4E,EAAWqJ,GACzC,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,mBAC8ClE,GAAM,CAC7C9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASqwC,GAAUr0C,EAAI4E,EAAMqJ,OAUxC9J,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZlI,QAAQC,IAAIqD,GACZ8F,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,+CAA6B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC5IwiB,GAAU5kB,MAEbgB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,wDAAmC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAChJ1J,QAAQC,IAAI,a,+NCZ5B,IAmUe23C,GAnUmB,WAE9B,IAAMtwC,EAA0BqD,cAExB4T,EAAsBC,+BAAtBD,kBAEAvS,EAAUohB,cAAVphB,MACRhM,QAAQC,IAAI+L,GACZ,IAAIiR,EAAyB,KACT,oBAATjR,IACPiR,EAASjR,EAAM6tB,cAEnB,IAAMt4B,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAEzEyC,GAAoB,EAC1B/J,qBAAU,WACNxI,EAASmQ,GAAkB,mBAAY,OACxC,CAAClW,EAAK+V,KAAMhQ,IAEfwI,qBAAU,WACNC,wBAAaqkB,GAAW9sB,IACxByI,wBAAa0mB,GAAYnvB,IACzByI,wBAAaqnB,GAAU9vB,MAExB,CAACA,IAEC2V,IAAUpD,IACXoD,EAAS,CAAE3Z,GAAI,EAAGkO,KAAM,GAAIC,YAAa,GAAI2a,gBAAiB,EAAGC,eAAgB,EAAGzV,MAAO,EAAG0V,UAAW,GAAIC,YAAY,EAAOC,WAAY,EAAGI,WAAY,EAAGF,aAAc,EAAGD,YAAa,EAAGI,YAAa,GAAIC,YAAa,GAAIpD,aAAc,GAAIC,eAAgB,GAAIC,cAAe,GAAI+C,iBAAiB,IAG/S,IACMkrB,EADyB9rC,aAAY,SAACC,GAAD,OAAuBA,EAAM0pB,cAClCC,UAEhCmiB,EAAwB,GAC9BD,EAAUzmC,KAAI,SAAC3B,GACX,IAAIiF,EAAgB,CAAE,KAAQjF,EAAI+B,KAAM,MAAS/B,EAAInM,IACrD,OAAOw0C,EAAW9sC,KAAK0J,MAG3B,IACMqjC,EADyBhsC,aAAY,SAACC,GAAD,OAAuBA,EAAMqnB,aACjCC,SACjC0kB,EAAyB,GAC/BD,EAAW3mC,KAAI,SAAC3B,GACZ,IAAIiF,EAAgB,CAAE,KAAQjF,EAAI+B,KAAM,MAAS/B,EAAInM,IACrD,OAAO00C,EAAYhtC,KAAK0J,MAG5B,IACMujC,EADyBlsC,aAAY,SAACC,GAAD,OAAuBA,EAAMkrB,YACjCC,QACjC+gB,EAAyB,GAC/BD,EAAW7mC,KAAI,SAAC3B,GACZ,IAAIiF,EAAgB,CAAE,KAAQjF,EAAI+B,KAAM,MAAS/B,EAAInM,IACrD,OAAO40C,EAAYltC,KAAK0J,MAG5B,IAAM9J,EAAUC,cAQhB,IA/DoC,EAiENhI,mBAFlB,+IA/DwB,mBAiE7Bs1C,EAjE6B,KAiEpBC,EAjEoB,OAmEFv1C,mBAAS,CACvC2O,KAAM,CAAExO,MAAO,GAAIQ,MAAOyZ,EAAOzL,MACjCC,YAAa,CAAEzO,MAAO,GAAIQ,MAAOyZ,EAAOxL,aACxCgb,YAAa,CAAEzpB,MAAO,GAAIQ,MAAOyZ,EAAOwP,aACxCC,aAAc,CAAE1pB,MAAO,GAAIQ,MAAOyZ,EAAOyP,cACzCE,WAAY,CAAE5pB,MAAO,GAAIQ,MAAOyZ,EAAO2P,YACvCP,eAAgB,CAAErpB,MAAO,GAAIQ,MAAOyZ,EAAOoP,gBAC3CzV,MAAO,CAAE5T,MAAO,GAAIQ,MAAOyZ,EAAOrG,OAClC0V,UAAW,CAAEtpB,MAAO,GAAIQ,MAAOyZ,EAAOqP,WACtCC,WAAY,CAAEvpB,MAAO,GAAIQ,MAAOyZ,EAAOsP,YACvCC,WAAY,CAAExpB,MAAO,GAAIQ,MAAOyZ,EAAOuP,YACvCK,YAAa,CAAE7pB,MAAO,GAAIQ,MAAOyZ,EAAO4P,aACxCC,YAAa,CAAE9pB,MAAO,GAAIQ,MAAOyZ,EAAO6P,eA/ER,mBAmE7BhiB,EAnE6B,KAmElBC,EAnEkB,KAkFpC,SAASE,EAAoBC,GACzBH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UAnF/C,8CAsFpC,WAAwBjB,GAAxB,kBAAAw+B,EAAA,yDACIx+B,EAAEiJ,kBACEL,IAFR,wDAMU7H,EAAK8F,IAAMqC,QAAQ,uEAAwC,CAC7DlC,SAAUH,IAAMI,SAASC,aAPjC,SAUoB4uC,IAVpB,OAUQC,EAVR,OAaI79B,EAAS3P,EADmB+O,EAAYqD,GAAYC,GACpBm7B,EAAKh1C,GAbzC,4CAtFoC,sBAsGpC,SAASmX,EAAS3P,EAAkCoP,EAAkBo+B,EAAa/mC,GAC3E0L,IACI/C,IAAWgD,GACX5V,EAASkwC,GAAW,CAChBhmC,KAAM1G,EAAU0G,KAAKhO,MACrBiO,YAAaugC,EACb3lB,eAAgBvhB,EAAUuhB,eAAe7oB,MACzCoT,MAAO9L,EAAU8L,MAAMpT,MACvB8oB,UAAWgsB,EACX/rB,WAAYzhB,EAAUyhB,WAAW/oB,MACjCipB,YAAa3hB,EAAU2hB,YAAYjpB,MACnCopB,WAAY9hB,EAAU8hB,WAAWppB,MACjCkpB,aAAc5hB,EAAU4hB,aAAalpB,MACrCgpB,WAAYplB,aAAaC,QAAQ,OAClCkK,IAGE2I,IAAWiD,IAChB7V,EAASqwC,GAAU16B,EAAO3Z,GAAI,CAC1BkO,KAAM1G,EAAU0G,KAAKhO,MACrBiO,YAAaugC,EACb3lB,eAAgBvhB,EAAUuhB,eAAe7oB,MACzCoT,MAAO9L,EAAU8L,MAAMpT,MACvB8oB,UAAWgsB,EACX/rB,WAAYzhB,EAAUyhB,WAAW/oB,MACjCipB,YAAa3hB,EAAU2hB,YAAYjpB,MACnCopB,WAAY9hB,EAAU8hB,WAAWppB,MACjCkpB,aAAc5hB,EAAU4hB,aAAalpB,MACrCgpB,WAAYplB,aAAaC,QAAQ,OAClCkK,IAGPjK,EAAS+V,MACT/V,EAASL,GAAqBywB,GAAyBld,OACvD7Q,YAAW,WA9EfrC,EAASL,GAAqBywB,GAAyBld,OAEvD5P,EAAQI,KADA,cA+ED,MAaX,SAASG,IACL,OAAQL,EAAU2G,YAAYzO,OACvB8H,EAAU0G,KAAKxO,OAAS8H,EAAUuhB,eAAerpB,OAAS8H,EAAU8L,MAAM5T,OAC9D,gJAAZm1C,IAA8JrtC,EAAU0G,KAAKhO,QAAUsH,EAAUuhB,eAAe7oB,MA1JvL,MA6JJX,mBAAiB,IA7Jb,mBA6J7BmvC,EA7J6B,KA6JnBC,EA7JmB,WAkKVpvC,qBAlKU,mBAkK7B01C,EAlK6B,KAkKtBC,EAlKsB,cAkLrBH,IAlLqB,6EAkLpC,iCAAAtX,EAAA,6DACU0X,EAAW,IAAIC,UACZC,OACL,UACAJ,EAAMK,eAJd,SAOsBrxC,MAAM,GAAD,OAChBC,+BADgB,oBACiC,CAChDhG,OAAQ,OACRU,KAAMu2C,IAVlB,cAOU32C,EAPV,gBAauBA,EAAImG,OAb3B,cAaUC,EAbV,yBAcWA,EAAK2wC,WAdhB,4CAlLoC,sBAsMpC,OAtBA74C,QAAQC,IAAIs4C,GAuBRh6B,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACH,kBAAC,IAAD,MACA,yBAAKxH,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAoC0V,EAAW,WAAQ,WAArE,4BAEJ,yBAAK1V,UAAU,aACX,0BAAMoH,SAxNU,6CAyNZ,yBAAKpH,UAAU,YACX,yBAAKA,UAAU,uBACX,2BAAOd,QAAQ,iBAAf,uBACA,2BAAOI,KAAK,OAAOH,GAAG,gBAAgBkO,KAAK,gBAAgB9N,SAxDrE,SAACnB,GACnBi2C,EAAS,CAILM,eAAiBC,IAAIC,gBAAgBz2C,EAAEqB,OAAOijB,MAAM,IAEpD+xB,cAAgBr2C,EAAEqB,OAAOijB,MAAM,KAEnCuxB,EAAWW,IAAIC,gBAAgBz2C,EAAEqB,OAAOijB,MAAM,SAiDtB,yBAAK1iB,UAAU,uBACX,yBAAKkH,IAAK8sC,EAAS7sC,IAAI,UAAUhI,GAAG,aAI5C,yBAAKa,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,aACVY,MAAM,OACNV,MAAOsH,EAAU0G,KAAKhO,MACtBE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,0BACNc,YAAY,MAEpB,yBAAKF,UAAU,uBACX,kBAAC,GAAD,CAAab,GAAG,cACZE,MAAOsH,EAAU8L,MAAMpT,MACvBU,MAAM,QACNR,SAAUuH,EACV4jB,IAAK,IACLG,IAAK,EACLzrB,MAAM,aAIlB,yBAAKY,UAAU,YACX,yBAAKA,UAAU,uBACf,kBAAC,GAAD,CAAgBb,GAAG,oBACfY,MAAQ,cACRV,MAAOsH,EAAU2hB,YAAYjpB,MAC7BE,SAAUuH,EACVlH,UAAU,EACVR,MAAM,qBACNnC,QAAS42C,KAGb,yBAAK7zC,UAAU,uBACX,kBAAC,GAAD,CACIb,GAAG,qBACHY,MAAM,eACNX,MAAM,wBACNnC,QAAS02C,EACT/zC,UAAU,EACVL,SAAUuH,EACVzH,MAAOsH,EAAU4hB,aAAalpB,UAI1C,yBAAKW,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CACIb,GAAG,mBACHY,MAAM,aACNX,MAAM,wBACNnC,QAAS82C,EACTn0C,UAAU,EACVL,SAAUuH,EACVzH,MAAOsH,EAAU8hB,WAAWppB,SAGpC,yBAAKW,UAAU,uBACX,kBAAC,GAAD,CACIb,GAAG,mBACHY,MAAM,aACNV,MAAOsH,EAAUyhB,WAAW/oB,MAC5BE,SAAUuH,EACVlH,UAAU,EACVR,MAAM,cAIlB,yBAAKY,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CAAab,GAAG,uBACZE,MAAOsH,EAAUuhB,eAAe7oB,MAChCU,MAAM,iBACNR,SAAUuH,EACV4jB,IAAK,IACLG,IAAK,EACLzrB,MAAM,iCAKlB,yBAAKY,UAAU,cACX,kDACA,kBAAC,GAAD,CAAQ4rC,SAxJpC,SAAkBvsC,GACdyuC,EAAYzuC,IAuJwCqW,SAAUA,EAAUzW,SAAU0H,EAAU2G,YAAYjO,SAGpF,4BAAQW,UAAU,iBAAiBiH,QAAS,WA1KhE9D,EAASL,GAAqBywB,GAAyBld,SA0KnC,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCAvK5BgH,IACN,WAAa,KAsKV,kBCtVrB,SAAS8tC,GAAqB/wC,GACjC,IAAIK,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,uBAC0D,CACnDhG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS2xC,GAAqB/wC,OAUzCT,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,MAEfI,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aC/BrB,SAASi5C,GAAW51C,EAAQ4E,EAAWixC,EAAqB5nC,EAAU6nC,GACzE,IAAI7wC,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,oBAC+ClE,GAAM,CAC9C9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS4xC,GAAW51C,EAAG4E,EAAMixC,EAAc5nC,EAAK6nC,OAU3D3xC,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZlI,QAAQC,IAAIqD,GACZgE,ECrCT,SAAS+xC,EAAgC/1C,GAC5C,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,KACTsB,MAAM,GAAD,OACEC,+BADF,uCAC8DlE,GAAM,CACjE9B,OAAQ,SACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI3CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS+xC,EAAgC/1C,OAUpDmE,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,MAEfI,OAAM,SAAAtF,GACHsE,EAASlB,EAAepD,IACxBhD,QAAQC,IAAI,aDEHo5C,CAAgC/1C,IACzC61C,EAAa/nC,KAAI,SAAC5N,EAAO6N,GACrB,OAAO/J,EAAS2xC,GAAqB,CACjCK,WAAYh2C,EACZggB,WAAY9f,EAAMA,YAG1B4F,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,4CAA6B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC5IC,YAAW,WACPyvC,GAAU,KACX,KACHrE,GAAWztC,MAEdgB,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,qDAAmC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAChJ1J,QAAQC,IAAI,a,cErDb,SAASs5C,GAAY32C,GAAQ,IAAD,EACKC,mBAASD,EAAMY,OADpB,mBAChCg2C,EADgC,KAChBC,EADgB,KAOvC,OACI,yBAAKt1C,UAAU,OACX,kBAAC,KAAD,CACIu1C,SAAS,EACTzK,aAAcuK,EACd91C,SAVS,SAAC81C,GAClBC,EAAkBD,GAClB52C,EAAM+2C,YAAYH,IASVp4C,QAASwB,EAAMQ,YCfxB,IAAMyzC,GAAgC,wBAChCC,GAAiC,yBACjCC,GAAmC,2BAEnCC,GAAgD,wCAChDC,GAA+C,uCAC/CnxC,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBAC3BuyC,GAAuC,+BACvCC,GAAoC,4BCH1C,SAASyC,GAA+BtyC,EAAehE,GAC1D,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,uCAC8DlE,GAAM,CACjE9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASsyC,GAA+BtyC,EAAUhE,OAU7DmE,MAAM,SAAAS,GACHZ,EDjBL,CACH7D,KAAMiB,GACNm1C,mBCekC3xC,IAC1BZ,EDAL,CAAE7D,KAAMyzC,KCCHl3C,QAAQC,IAAIiI,EAAKhG,KAAK43C,uBACtB5xC,EAAKhG,KAAK43C,sBAAsB1oC,KAAI,SAAC3B,EAAU4B,GAC3C,IAAIwoC,EAAyC,CACzCv2C,GAAImM,EAAInM,GACRg2C,WAAY7pC,EAAI6pC,WAChBh2B,WAAY7T,EAAI6T,WAChBkG,aAAc/Z,EAAI+Z,aAClBuwB,aAActqC,EAAIsqC,cAGtB,OACWzyC,EADG,IAAV+J,EDhBjB,SAAiCwoC,GACpC,MAAO,CAAEp2C,KAAM0zC,GAA2B0C,mBAAoBA,GCgB1BG,CAAwBH,GDTzD,SAA6BA,GAChC,MAAO,CAAEp2C,KAAMozC,GAAuBgD,mBAAoBA,GCWtBI,CAAoBJ,UAI/CvxC,OAAM,SAAAtF,GACHsE,EDhCT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UC6BMoD,CAAepD,IACxBhD,QAAQC,IAAI,YCTbi6C,OAhDf,SAAoBt3C,GAAqC,IAAD,EACxBC,oBAAS,GADe,mBAC7CC,EAD6C,KACpCC,EADoC,OAE1BF,mBAAS,IAFiB,mBAE7CG,EAF6C,KAEtCC,EAFsC,OAGlBJ,mBAAS,IAHS,mBAG7CK,EAH6C,KAGlCC,EAHkC,OAI/BN,mBAAS,IAArBO,EAJ2C,oBA4BpD,OAFApD,QAAQC,IAAI2C,EAAMkM,QAGd,6BACI,2BAAOzL,QAAST,EAAMU,GAAGvD,YAAa6C,EAAMW,OAC5C,2BACIC,MAAOZ,EAAMY,MACbC,KAAMb,EAAMa,KACZC,SA3BZ,SAAwBC,GAA6C,IAAD,EACxB,CAAC,GAAI,GAAIA,EAAMC,OAAOJ,OAAzDR,EAD2D,KACpDa,EADoD,KACxCC,EADwC,QAGxCA,GAAgBlB,EAAMmB,SAC1C,CAAC,wBAAyB,cAAgB,CAAC,GAAI,YAJa,mBAMhE,GAHCf,EAH+D,KAGxDa,EAHwD,MAM3Db,EAAO,CAAC,IAAD,EACeJ,EAAMoB,WAAaF,GAAgBA,EAAgBlB,EAAMoB,UAChF,CAAC,8BAAD,OAA+BpB,EAAMoB,UAAUurB,UAAU,EAAE,IAA3D,YAAkE3sB,EAAMoB,UAAUurB,UAAU,GAAG,IAA/F,eAAiH,cAAgB,CAAC,GAAI,YAF9H,mBACPvsB,EADO,KACAa,EADA,KAKZjB,EAAMc,SAAS,CAAEF,MAAOM,EAAcd,MAAOA,EAAOF,QAASA,EAASoB,MAAOtB,EAAMsB,QAEnFnB,GAAS,GACTE,EAASD,GACTG,EAAaU,GACbT,EAASU,IAYDK,UAAS,uBAAkBvB,EAAMwB,WAAxB,YAAsClB,EAAtC,MACTusB,SAAU7sB,EAAMkM,OAChBxL,GAAE,aAAQV,EAAMW,OAChBc,YAAazB,EAAMyB,cACtBrB,EACG,yBAAKmB,UAAU,oBACVnB,GACI,O,+NCHzB,IA4Yem3C,GA5Ye,WAC5B,IAAM7yC,EAA0BqD,cAC1B4pC,EAAiCxoC,aAAY,SAACC,GAAD,OAAuBA,EAAMuoC,YAC5Ez2B,EAA2By2B,EAASsB,gBACpC1lC,EAAO/I,aAAaC,QAAQ,cAC5BiyC,EAAqB,EACZ,OAATnpC,IACFmpC,EAAahlC,SAASnE,IAPU,IAU1BoO,EAAsBC,+BAAtBD,kBAEF1E,EAAqB06B,EAASz6B,oBAAsBk3B,GAA0Bj3B,QAEhFF,GAAwB,OAAZiE,KACZA,EAAU,CAAExa,GAAI,EAAGkO,KAAM,GAAI0jC,yBAA0B,EAAGD,gCAAiC,EAAGE,uBAAwB,EAAI1jC,YAAa,GAAI2a,gBAAiB,EAAGI,WAAY,EAAGD,YAAY,EAAOqR,kBAAmB,GAAI5hB,WAAY,GAAIC,SAAU,GAAI4Q,YAAa,GAAIC,YAAa,GAAIR,UAAW,8IAA+IM,WAAY,EAAGH,YAAa,EAAG/C,aAAc,GAAIE,cAAe,KAEtf9Z,qBAAU,WACRC,wBAAaqkB,GAAW9sB,IACxByI,wBAAaqnB,GAAU9vB,IACvByI,wBAAawU,GAAWjd,IACxByI,wBAAa6pC,GAA+BtyC,EAAUgyC,MACrD,CAAChyC,EAAUgyC,IAGZ,IAAIx5B,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAUbuL,wBAAaqnB,GAAU9vB,IACvByI,wBAAaqkB,GAAW9sB,IACxByI,wBAAawU,GAAWjd,IACxByI,wBAAa6pC,GAA+BtyC,EAAUgyC,QAG/D,CAAChyC,EAAUwY,EAAc3Y,EAAemyC,IAG7C,IACMvB,EADyBhsC,aAAY,SAACC,GAAD,OAAuBA,EAAMqnB,aACjCC,SACjC0kB,EAAyB,GAC/BD,EAAW3mC,KAAI,SAAC3B,GACd,IAAIiF,EAAgB,CAAE,KAAQjF,EAAI+B,KAAM,MAAS/B,EAAInM,IACrD,OAAO00C,EAAYhtC,KAAK0J,MAG1B,IACM0lC,EADoBruC,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAChCG,SAC7Bw4B,EAA0B,GAChCD,EAAYhpC,KAAI,SAAC3B,GACf,IAAIiF,EAAgB,CAAE,MAASjF,EAAI/G,SAAU,MAAS+G,EAAInM,IAC1D,OAAO+2C,EAAarvC,KAAK0J,MAG3B,IACM4lC,EAD8CvuC,aAAY,SAACC,GAAD,OAAuBA,EAAMuuC,uBACpBC,kBACnEC,EAAsC,GAC5CH,EAAwBlpC,KAAI,SAAC3B,GAC3B,IAAIiF,EAAgB,CAAE,MAASjF,EAAI+Z,aAAc,MAAS/Z,EAAI6T,YAC9D,OAAOm3B,EAAyBzvC,KAAK0J,MAGvC1U,QAAQC,IAAIw6C,GACZ,IACMxC,EADyBlsC,aAAY,SAACC,GAAD,OAAuBA,EAAMkrB,YACjCC,QACjC+gB,EAAyB,GAC/BD,EAAW7mC,KAAI,SAAC3B,GACd,IAAIiF,EAAgB,CAAE,KAAQjF,EAAI+B,KAAM,MAAS/B,EAAInM,IACrD,OAAO40C,EAAYltC,KAAK0J,MAG1B,IAAMrJ,EAAMyS,EAAQwO,UAjGc,EAmGJzpB,mBAASwI,GAnGL,mBAmG3B8sC,EAnG2B,KAmGlBC,EAnGkB,OAqGAv1C,mBAAS,CACzC2O,KAAM,CAAExO,MAAO,GAAIQ,MAAOsa,EAAQtM,MAClCC,YAAa,CAAEzO,MAAO,GAAIQ,MAAOsa,EAAQrM,aACzC2a,gBAAiB,CAAEppB,MAAO,GAAIQ,MAAOsa,EAAQsO,iBAC7CwR,kBAAmB,CAAE56B,MAAO,GAAIQ,MAAOsa,EAAQ8f,mBAC/CrR,WAAY,CAAEvpB,MAAO,GAAIQ,MAAOsa,EAAQyO,YACxCD,UAAW,CAAEtpB,MAAO,GAAIQ,MAAOsa,EAAQwO,WACvCtQ,WAAY,CAAEhZ,MAAO,GAAIQ,MAAOsa,EAAQ9B,YACxCC,SAAU,CAAEjZ,MAAO,GAAIQ,MAAOsa,EAAQ7B,UACtCuQ,WAAY,CAAExpB,MAAO,GAAIQ,MAAOsa,EAAQ0O,YACxCK,YAAa,CAAE7pB,MAAO,GAAIQ,MAAOsa,EAAQ+O,aACzCC,YAAa,CAAE9pB,MAAO,GAAIQ,MAAOsa,EAAQgP,aACzCF,WAAY,CAAE5pB,MAAO,GAAIQ,MAAOsa,EAAQ8O,YACxCH,YAAa,CAAEzpB,MAAO,GAAIQ,MAAOsa,EAAQ2O,eAlHT,mBAqG3B3hB,EArG2B,KAqGhBC,EArGgB,KAqHlC,SAASE,EAAoBC,GAC3BH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UAtH/C,8CAyHlC,WAAwBjB,GAAxB,kBAAAw+B,EAAA,yDACEx+B,EAAEiJ,kBACEL,IAFN,wDAMQoG,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAChElC,SAAUH,IAAMI,SAASC,aAP7B,SAUkB4uC,IAVlB,OAUMC,EAVN,OAaE79B,EAAS3P,EADmB+O,EAAYkE,GAAaC,GACrBs6B,EAAK/mC,GAbvC,4CAzHkC,sBAyIlC,IAAM3G,EAAUC,cAEhB,SAASuuC,IAELxuC,EAAQI,KADA,aAIZ,SAASyP,EAAS3P,EAA8BoP,EAAkBo+B,EAAa/mC,GACzEuM,IACE5D,IAAW6D,GACbzW,ECvLD,SAASozC,EAAYzvB,EAAYnN,EAAcvM,EAAU6nC,GAC5D,IAAI7wC,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,YAC+C,CACxChG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUod,KAG5BrW,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASozC,EAAYzvB,EAAInN,EAAQvM,EAAK6nC,OAUjD3xC,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZ6sC,GAAWztC,GACX2jB,EAAI7Z,KAAI,SAAC5N,EAAO6N,GACZ,OAAO/J,EAAS2xC,GAAqB,CACjCK,WAAYpxC,EAAK5E,GACjBggB,WAAY9f,EAAMA,YAG1B4F,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,yCAA4B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC3IC,YAAW,WACPyvC,GAAU,KACX,QAEN9wC,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,kDAAkC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC/I1J,QAAQC,IAAI,aDwIXy6C,CAAYvB,GAAa,CAChC3nC,KAAM1G,EAAU0G,KAAKhO,MACrBiO,YAAaugC,EACbpU,kBAAmB9yB,EAAU8yB,kBAAkBp6B,MAC/C8oB,UAAWgsB,EACX/rB,WAAYzhB,EAAUyhB,WAAW/oB,MACjCgpB,WAAYplB,aAAaC,QAAQ,MACjC+kB,gBAAiBthB,EAAUshB,gBAAgB5oB,MAC3CwY,WAAYlR,EAAUkR,WAAWxY,MACjCyY,SAAUnR,EAAUmR,SAASzY,MAC7BopB,WAAY9hB,EAAU8hB,WAAWppB,MACjCipB,YAAa3hB,EAAU2hB,YAAYjpB,OAClC+N,EAAK6nC,IAGDl/B,IAAW8D,IAClB1W,EAAS4xC,GAAWp7B,EAAQxa,GAAI,CAC9BkO,KAAM1G,EAAU0G,KAAKhO,MACrBiO,YAAaugC,EACbpU,kBAAmB9yB,EAAU8yB,kBAAkBp6B,MAC/C8oB,UAAWgsB,EACX/rB,WAAYzhB,EAAUyhB,WAAW/oB,MACjCgpB,WAAYplB,aAAaC,QAAQ,MACjC+kB,gBAAiBthB,EAAUshB,gBAAgB5oB,MAC3CwY,WAAYlR,EAAUkR,WAAWxY,MACjCyY,SAAUnR,EAAUmR,SAASzY,MAC7BopB,WAAY9hB,EAAU8hB,WAAWppB,MACjCipB,YAAa3hB,EAAU2hB,YAAYjpB,OACnC21C,GAAe5nC,EAAK6nC,IAGxB9xC,EAAS6W,MACT7W,EAASL,GAAqB+pC,GAA0Bx2B,QAa5D,SAASrP,IACP,OAAQL,EAAUshB,gBAAgBppB,OAAS8H,EAAU2G,YAAYzO,OAC5D8H,EAAU0G,KAAKxO,OAAS8H,EAAU8yB,kBAAkB56B,OAAS8H,EAAUkR,WAAWhZ,OAClF8H,EAAUmR,SAASjZ,QAAU8H,EAAU8hB,WAAWppB,QAAUsH,EAAU2hB,YAAYjpB,QACjFsH,EAAU0G,KAAKhO,QAAUsH,EAAU8yB,kBAAkBp6B,QAAUsH,EAAUkR,WAAWxY,QACpFsH,EAAUmR,SAASzY,MArMO,MAwMFX,mBAAiB,IAxMf,mBAwM3BmvC,EAxM2B,KAwMjBC,EAxMiB,WA8MRpvC,qBA9MQ,mBA8M3B01C,EA9M2B,KA8MpBC,EA9MoB,cA4NnBH,IA5NmB,6EA4NlC,iCAAAtX,EAAA,6DACQ0X,EAAW,IAAIC,UACZC,OACP,UACAJ,EAAMK,eAJV,SAOoBrxC,MAAM,GAAD,OAClBC,+BADkB,oBAC+B,CACpDhG,OAAQ,OACRU,KAAMu2C,IAVV,cAOQ32C,EAPR,gBAaqBA,EAAImG,OAbzB,cAaQC,EAbR,yBAcSA,EAAK2wC,WAdd,4CA5NkC,4BA8OMh2C,mBAAgB,IA9OtB,mBA8O3Bs2C,GA9O2B,KA8ObwB,GA9Oa,KAoPlC,IAAIt6B,GAAM,IAAI1gB,KACd0gB,GAAIwP,WAAWxP,GAAIyP,aAAezP,GAAI0P,qBACtC,IAAIC,GAAW3P,GAAI4P,cAAchK,MAAM,EAAE,IAMzC,OAJAjmB,QAAQC,IAAI6K,EAAUkR,WAAWxY,OAEjCxD,QAAQC,IAAmC,OAA/B6K,EAAUkR,WAAWxY,OAAiD,KAA/BsH,EAAUkR,WAAWxY,OAGtE+a,EACE,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACT,kBAAC,IAAD,MACA,yBAAKxH,UAAU,uBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAoC0V,EAAW,WAAQ,WAArE,mBAEF,yBAAK1V,UAAU,aACb,0BAAMoH,SA9QkB,6CA+QtB,yBAAKpH,UAAU,YACb,yBAAKA,UAAU,uBACb,2BAAOd,QAAQ,iBAAf,uBACA,2BAAOI,KAAK,OAAOH,GAAG,gBAAgBkO,KAAK,gBAAgB9N,SAlErD,SAACnB,GACrBi2C,EAAS,CAIPM,eAAgBC,IAAIC,gBAAgBz2C,EAAEqB,OAAOijB,MAAM,IAEnD+xB,cAAer2C,EAAEqB,OAAOijB,MAAM,KAEhCuxB,EAAWW,IAAIC,gBAAgBz2C,EAAEqB,OAAOijB,MAAM,SA2DlC,yBAAK1iB,UAAU,uBACb,yBAAKkH,IAAK8sC,EAAS7sC,IAAI,UAAUhI,GAAG,aAIxC,yBAAKa,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,aACZY,MAAM,OACNV,MAAOsH,EAAU0G,KAAKhO,MACtBE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,0BACNc,YAAY,MAElB,yBAAKF,UAAU,YACb,yBAAKA,UAAU,uBACb,kBAAC,GAAD,CAAgBb,GAAG,oBACjBY,MAAM,cACNV,MAAOsH,EAAU2hB,YAAYjpB,MAC7BE,SAAUuH,EACVlH,UAAU,EACVR,MAAM,qBACNnC,QAAS42C,KAGb,yBAAK7zC,UAAU,uBACb,kBAAC,GAAD,CACEb,GAAG,mBACHY,MAAM,aACNX,MAAM,wBACNnC,QAAS82C,EACTn0C,UAAU,EACVL,SAAUuH,EACVzH,MAAOsH,EAAU8hB,WAAWppB,UAIlC,yBAAKW,UAAU,YACb,yBAAKA,UAAU,uBACb,kBAAC,GAAD,CACEb,GAAG,mBACHY,MAAM,aACNV,MAAOsH,EAAUyhB,WAAW/oB,MAC5BE,SAAUuH,EACVlH,UAAU,EACVR,MAAM,aAGR,yBAAKY,UAAU,uBACb,4DACA,kBAACo1C,GAAD,CAAan2C,SAAUi3C,EAAc72C,MAAOi3C,EAA0Bd,YAvFxF,SAA4Bn2C,GAC1Bm3C,GAAgBn3C,QAyFN,yBAAKW,UAAU,YACb,yBAAKA,UAAU,uBACb,kBAAC,GAAD,CAAab,GAAG,wBACdE,MAAOsH,EAAUshB,gBAAgB5oB,MACjCU,MAAM,kBACNR,SAAUuH,EACV4jB,IAAK,IACLG,IAAK,EACLzrB,MAAM,mEAEV,yBAAKY,UAAU,uBACb,kBAAC,GAAD,CAAWb,GAAG,0BACZY,MAAM,oBACNV,MAAOsH,EAAU8yB,kBAAkBp6B,MACnCE,SAAUuH,EACVxH,KAAK,iBACLqL,QAAQ,EACR/K,UAAU,EACVC,UAAWgsB,GACXzsB,MAAM,6DACNc,YAAY,OAIlB,yBAAKF,UAAU,YACb,yBAAKA,UAAU,uBACb,kBAAC,GAAD,CAAYb,GAAG,mBACbY,MAAM,aACNV,MAAOsH,EAAUkR,WAAWxY,MAC5BE,SAAUuH,EACVxH,KAAK,iBACLqL,OAA8C,OAAtChE,EAAU8yB,kBAAkBp6B,OAAwD,KAAtCsH,EAAU8yB,kBAAkBp6B,MAClFO,UAAU,EACVC,UAAW8G,EAAU8yB,kBAAkBp6B,MACvCD,MAAM,sDACNc,YAAY,MAEhB,yBAAKF,UAAU,uBACb,kBAAC,GAAD,CAAYb,GAAG,iBACbY,MAAM,WACNV,MAAOsH,EAAUmR,SAASzY,MAC1BE,SAAUuH,EACVxH,KAAK,iBACLqL,OAAuC,OAA/BhE,EAAUkR,WAAWxY,OAAiD,KAA/BsH,EAAUkR,WAAWxY,MACpEO,UAAU,EACVC,UAAW8G,EAAUkR,WAAWxY,MAChCD,MAAM,gDACNc,YAAY,OAIlB,yBAAKF,UAAU,cACb,kDACA,kBAAC,GAAD,CAAQ4rC,SAtLtB,SAAkBvsC,GAChByuC,EAAYzuC,IAqL4BqW,SAAUA,EAAUzW,SAAU0H,EAAU2G,YAAYjO,SAGlF,4BAAQW,UAAU,iBAAiBiH,QAAS,WA1MtD9D,EAASL,GAAqB+pC,GAA0Bx2B,SA0M9C,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCAvMlBgH,IACN,WAAa,KAsMpB,kB,+NE5Yd,IA4TeyvC,GA5TuB,WAClC,IAAMtzC,EAA0BqD,cAC1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzE+U,EAAwBpgB,aAAY,SAACC,GAAD,OAAuBA,EAAMmgB,WAE/D5N,EAAsBC,+BAAtBD,kBAEF1E,GAAoB,EACtBoD,EAAyBkP,EAAQ4N,eACrC/5B,QAAQC,IAAIgd,GACPA,IAAUpD,IACXoD,EAAS,CAAE3Z,GAAI,EAAGkO,KAAM,GAAIC,YAAa,GAAI2a,gBAAiB,EAAGC,eAAgB,EAAGzV,MAAO,EAAG0V,UAAW,GAAIC,YAAY,EAAOC,WAAY,EAAGI,WAAY,EAAGF,aAAc,EAAGD,YAAa,EAAGI,YAAa,GAAIC,YAAa,GAAIpD,aAAc,GAAIC,eAAe,GAAIC,cAAe,GAAI+C,iBAAiB,IAE9S7c,qBAAU,WACNxI,EAASmQ,GAAkB,mBAAY,OACxC,CAAClW,EAAK+V,KAAMhQ,IAEfwI,qBAAU,WACNC,wBAAamc,GAAU5kB,IACvByI,wBAAaqkB,GAAW9sB,IACxByI,wBAAa0mB,GAAYnvB,IACzByI,wBAAaqnB,GAAU9vB,MAExB,CAACA,IAEJ,IACMuwC,EADyB9rC,aAAY,SAACC,GAAD,OAAuBA,EAAM0pB,cAClCC,UAEhCmiB,EAAwB,GAC9BD,EAAUzmC,KAAI,SAAC3B,GACX,IAAIiF,EAAgB,CAAE,KAAQjF,EAAI+B,KAAM,MAAS/B,EAAInM,IACrD,OAAOw0C,EAAW9sC,KAAK0J,MAG3B,IACMqjC,EADyBhsC,aAAY,SAACC,GAAD,OAAuBA,EAAMqnB,aACjCC,SACjC0kB,EAAyB,GAC/BD,EAAW3mC,KAAI,SAAC3B,GACZ,IAAIiF,EAAgB,CAAE,KAAQjF,EAAI+B,KAAM,MAAS/B,EAAInM,IACrD,OAAO00C,EAAYhtC,KAAK0J,MAG5B,IACMujC,EADyBlsC,aAAY,SAACC,GAAD,OAAuBA,EAAMkrB,YACjCC,QACjC+gB,EAAyB,GAC/BD,EAAW7mC,KAAI,SAAC3B,GACZ,IAAIiF,EAAgB,CAAE,KAAQjF,EAAI+B,KAAM,MAAS/B,EAAInM,IACrD,OAAO40C,EAAYltC,KAAK0J,MAG5B,IAAMrJ,EAAM4R,EAAOqP,UAlDqB,EAoDNzpB,mBAAS,CACvC2O,KAAM,CAAExO,MAAO,GAAIQ,MAAOyZ,EAAOzL,MACjCC,YAAa,CAAEzO,MAAO,GAAIQ,MAAOyZ,EAAOxL,aACxCgb,YAAa,CAAEzpB,MAAO,GAAIQ,MAAOyZ,EAAOwP,aACxCC,aAAc,CAAE1pB,MAAO,GAAIQ,MAAOyZ,EAAOyP,cACzCE,WAAY,CAAE5pB,MAAO,GAAIQ,MAAOyZ,EAAO2P,YACvCP,eAAgB,CAAErpB,MAAO,GAAIQ,MAAOyZ,EAAOoP,gBAC3CzV,MAAO,CAAE5T,MAAO,GAAIQ,MAAOyZ,EAAOrG,OAClC0V,UAAW,CAAEtpB,MAAO,GAAIQ,MAAOyZ,EAAOqP,WACtCC,WAAY,CAAEvpB,MAAO,GAAIQ,MAAOyZ,EAAOsP,YACvCC,WAAY,CAAExpB,MAAO,GAAIQ,MAAOyZ,EAAOuP,YACvCK,YAAa,CAAE7pB,MAAO,GAAIQ,MAAOyZ,EAAO4P,aACxCC,YAAa,CAAE9pB,MAAO,GAAIQ,MAAOyZ,EAAO6P,eAhEJ,mBAoDjChiB,EApDiC,KAoDtBC,EApDsB,KAmElCH,EAAUC,cAQhB,SAASI,EAAoBC,GACzBH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UA5E3C,8CA+ExC,WAAwBjB,GAAxB,gBAAAw+B,EAAA,yDACIx+B,EAAEiJ,kBACEL,IAFR,iEAKoBktC,IALpB,OAKQC,EALR,OAQI79B,EAAS3P,EADmB+O,EAAYqD,GAAYC,GACpBm7B,GARpC,4CA/EwC,sBA0FxC,SAAS79B,EAAS3P,EAAkCoP,EAAkBo+B,GAClE,GAAIr7B,EAAQ,CACR,IAAM3Z,EAAK8F,IAAMqC,QAAQ,uEAAwC,CAC7DlC,SAAUH,IAAMI,SAASC,aAGzByQ,IAAWgD,GACX5V,EAASkwC,GAAW,CAChBhmC,KAAM1G,EAAU0G,KAAKhO,MACrBiO,YAAaugC,EACb3lB,eAAgBvhB,EAAUuhB,eAAe7oB,MACzCoT,MAAO9L,EAAU8L,MAAMpT,MACvB8oB,UAAWgsB,EACX/rB,WAAYzhB,EAAUyhB,WAAW/oB,MACjCipB,YAAa3hB,EAAU2hB,YAAYjpB,MACnCopB,WAAY9hB,EAAU8hB,WAAWppB,MACjCkpB,aAAc5hB,EAAU4hB,aAAalpB,MACrCgpB,WAAYplB,aAAaC,QAAQ,OAClC/D,IAGE4W,IAAWiD,IAChB7V,EAASqwC,GAAU16B,EAAO3Z,GAAI,CAC1BkO,KAAM1G,EAAU0G,KAAKhO,MACrBiO,YAAaugC,EACb3lB,eAAgBvhB,EAAUuhB,eAAe7oB,MACzCoT,MAAO9L,EAAU8L,MAAMpT,MACvB8oB,UAAWgsB,EACX/rB,WAAYzhB,EAAUyhB,WAAW/oB,MACjCipB,YAAa3hB,EAAU2hB,YAAYjpB,MACnCopB,WAAY9hB,EAAU8hB,WAAWppB,MACjCkpB,aAAc5hB,EAAU4hB,aAAalpB,MACrCgpB,WAAYplB,aAAaC,QAAQ,OAClC/D,IAGPgE,EAAS+V,MACT/V,EAASL,GAAqBywB,GAAyBld,OACvD7Q,YAAW,WA1DfrC,EAASL,GAAqBywB,GAAyBld,OAEvD5P,EAAQI,KADA,cA2DD,MAaX,SAASG,IACL,OAAQL,EAAU2G,YAAYzO,OACvB8H,EAAU0G,KAAKxO,OAAS8H,EAAUuhB,eAAerpB,OAAS8H,EAAU8L,MAAM5T,OAC1E8H,EAAUwhB,UAAUtpB,QAAU8H,EAAU0G,KAAKhO,QAAUsH,EAAUuhB,eAAe7oB,MAlJnD,MAqJRX,mBAAiB,IArJT,mBAqJjCmvC,EArJiC,KAqJvBC,EArJuB,WA0JdpvC,mBAAc,MA1JA,mBA0JjC01C,EA1JiC,KA0J1BC,EA1J0B,cAuKzBH,IAvKyB,6EAuKxC,iCAAAtX,EAAA,yDACkB,OAAVwX,IAAkBt7B,EAD1B,yCAEeA,EAAOqP,WAFtB,cAKcmsB,EAAW,IAAIC,UACZC,OACL,UACAJ,EAAMK,eARlB,SAW0BrxC,MAAM,GAAD,OAChBC,+BADgB,oBACiC,CAChDhG,OAAQ,OACRU,KAAMu2C,IAdtB,cAWc32C,EAXd,iBAiB2BA,EAAImG,OAjB/B,eAiBcC,EAjBd,yBAkBeA,EAAK2wC,WAlBpB,6CAvKwC,sBA+LxC,OACIt6B,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KAEH,yBAAKxH,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAoC0V,EAAW,WAAQ,WAArE,4BAEJ,yBAAK1V,UAAU,aACX,0BAAMoH,SAjNc,6CAkNhB,yBAAKpH,UAAU,YACX,yBAAKA,UAAU,uBACX,2BAAOd,QAAQ,iBAAf,uBACA,2BAAOI,KAAK,OAAOH,GAAG,gBAAgBkO,KAAK,gBAAgB9N,SAzDrE,SAACnB,GACnBi2C,EAAS,CAILM,eAAiBC,IAAIC,gBAAgBz2C,EAAEqB,OAAOijB,MAAM,IAEpD+xB,cAAgBr2C,EAAEqB,OAAOijB,MAAM,SAoDX,yBAAK1iB,UAAU,uBACX,yBAAKkH,IAAKA,EAAKC,IAAI,UAAUhI,GAAG,aAIxC,yBAAKa,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,aACVY,MAAM,OACNV,MAAOsH,EAAU0G,KAAKhO,MACtBE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,0BACNc,YAAY,MAEpB,yBAAKF,UAAU,uBACX,kBAAC,GAAD,CAAab,GAAG,cACZE,MAAOsH,EAAU8L,MAAMpT,MACvBU,MAAM,QACNR,SAAUuH,EACV4jB,IAAK,IACLG,IAAK,EACLzrB,MAAM,aAIlB,yBAAKY,UAAU,YACX,yBAAKA,UAAU,uBACf,kBAAC,GAAD,CAAgBb,GAAG,oBACfY,MAAQ,cACRV,MAAOsH,EAAU2hB,YAAYjpB,MAC7BE,SAAUuH,EACVlH,UAAU,EACVR,MAAM,qBACNnC,QAAS42C,KAGb,yBAAK7zC,UAAU,uBACX,kBAAC,GAAD,CACIb,GAAG,qBACHY,MAAM,eACNX,MAAM,wBACNnC,QAAS02C,EACT/zC,UAAU,EACVL,SAAUuH,EACVzH,MAAOsH,EAAU4hB,aAAalpB,UAI1C,yBAAKW,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CACIb,GAAG,mBACHY,MAAM,aACNX,MAAM,wBACNnC,QAAS82C,EACTn0C,UAAU,EACVL,SAAUuH,EACVzH,MAAOsH,EAAU8hB,WAAWppB,SAGpC,yBAAKW,UAAU,uBACX,kBAAC,GAAD,CACIb,GAAG,mBACHY,MAAM,aACNV,MAAOsH,EAAUyhB,WAAW/oB,MAC5BE,SAAUuH,EACVlH,UAAU,EACVR,MAAM,cAIlB,yBAAKY,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CAAab,GAAG,uBACZE,MAAOsH,EAAUuhB,eAAe7oB,MAChCU,MAAM,iBACNR,SAAUuH,EACV4jB,IAAK,IACLG,IAAK,EACLzrB,MAAM,iCAKlB,yBAAKY,UAAU,cACX,kDACA,kBAAC,GAAD,CAAQ4rC,SAzJpC,SAAkBvsC,GACdyuC,EAAYzuC,IAwJwCqW,SAAUA,EAAUzW,SAAU0H,EAAU2G,YAAYjO,SAGpF,4BAAQW,UAAU,iBAAiBiH,QAAS,WA3KhE9D,EAASL,GAAqBywB,GAAyBld,SA2KnC,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCAxK5BgH,IACN,WAAa,KAuKV,kBChSb0vC,OAjDf,SAAqBj4C,GAAkC,IAAD,EACtBC,oBAAS,GADa,mBAC3CC,EAD2C,KAClCC,EADkC,OAExBF,mBAAS,IAFe,mBAE3CG,EAF2C,KAEpCC,EAFoC,OAGhBJ,mBAAS,IAHO,mBAG3CK,EAH2C,KAGhCC,EAHgC,OAIxBN,mBAASD,EAAMY,OAJS,mBAI3CA,EAJ2C,KAIpCJ,EAJoC,KAsB5CoW,EAAqC5W,EAAMxB,QAAQgQ,KAAI,SAACqI,EAAapI,GACvE,OACI,4BAAQ0D,IAAK1D,EAAO7N,MAAK,UAAKiW,IAAWA,MAIjD,OACI,kBAAC,WAAD,KACI,2BAAOpW,QAAO,UAAKT,EAAMU,KAAOV,EAAMW,OACtC,4BACIC,MAAOA,EACPF,GAAE,UAAKV,EAAMU,IACba,UAAS,uBAAkBvB,EAAMwB,WAAaxB,EAAMwB,WAAa,GAAxD,YAA8DlB,GACvEQ,SA5BZ,SAAwBC,GAA8C,IAC7DX,EAAOa,EADqD,EACzB,CAAC,GAAI,GAAIF,EAAMC,OAAOJ,OAAtCM,EADyC,QAGzCA,GAAgBlB,EAAMmB,SAC1C,CAAC,2BAA4B,cAAgB,CAAC,GAAI,YAJW,mBAGhEf,EAHgE,KAGzDa,EAHyD,KAOjEjB,EAAMc,SAAS,CAAEF,MAAOM,EAAcd,MAAOA,EAAOF,QAASA,EAASoB,MAAOtB,EAAMsB,QAEnFnB,GAAS,GACTE,EAASD,GACTG,EAAaU,GACbT,EAASU,KAiBD,4BAAQN,MAAM,IAAd,aACCgW,GAGJxW,EACG,yBAAKmB,UAAU,oBACVnB,GACI,O,+NCzBzB,IA+Re83C,GA/RW,WACtB,IAAMxzC,EAA0BqD,cAC1BrH,EAAK8D,aAAaC,QAAQ,MACxBkX,EAAsBC,+BAAtBD,kBACRzO,qBAAU,WACNC,wBAAamV,GAAY5d,EAAUhE,MACpC,CAACgE,EAAUhE,IACd,IAAI2F,EAAiB7B,aAAaC,QAAQ,kBACtC4P,EAAqB,GACrB8jC,EAAgB,GACG,OAAnB9xC,IACAgO,EAAiBhO,EAAeuD,MAAM,KACtCuuC,EAAY9jC,EAAc,IAE9B,IAAIyK,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SACjE1hB,QAAQC,IAAIyhB,EAAMG,UAElB,IAAI1b,EAAQub,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAK,CAAEve,GAAI,EAAGoF,SAAU,GAAI8b,MAAO,GAAI5c,QAAQ,EAAM6c,UAAW,GAAIC,SAAU,GAAIE,IAAK,GAAIC,MAAO,GAAIC,QAAS,GAAIH,YAAa,GAAIzb,kBAAmB,GAAI8b,WAAY,GAAID,QAAS,GAE3O/kB,QAAQC,IAAIkG,GAnBgB,MAoBItD,mBAAS,CACrC6F,SAAU,CAAE1F,MAAO,GAAIQ,MAAO2C,EAAKuC,UACnC8b,MAAO,CAAExhB,MAAO,GAAIQ,MAAO2C,EAAKqe,OAChC7b,SAAU,CAAE3F,MAAO,GAAIQ,MAAO,IAC9BihB,UAAW,CAAEzhB,MAAO,GAAIQ,MAAO2C,EAAKse,WACpCC,SAAU,CAAE1hB,MAAO,GAAIQ,MAAO2C,EAAKue,UACnCC,YAAa,CAAE3hB,MAAO,GAAIQ,MAAO2C,EAAKwe,aACtCzb,kBAAmB,CAAElG,MAAO,GAAIQ,MAAO2C,EAAK+C,mBAC5C0b,IAAK,CAAE5hB,MAAO,GAAIQ,MAAO2C,EAAKye,KAC9BC,MAAO,CAAE7hB,MAAO,GAAIQ,MAAO2C,EAAK0e,OAChCC,QAAS,CAAE9hB,MAAO,GAAIQ,MAAO2C,EAAK2e,WA9BV,mBAoBvBha,EApBuB,KAoBZC,EApBY,KAiC5B,SAASE,EAAoBC,GACzBH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UAlCvD,8CAqC5B,WAAwBjB,GAAxB,kBAAAw+B,EAAA,yDACIx+B,EAAEiJ,kBACEL,IAFR,wDAKU7H,EAAK8F,IAAMqC,QAAQ,0EAA2C,CAChElC,SAAUH,IAAMI,SAASC,aANjC,SAQoB4uC,IARpB,OAQQC,EARR,OAUI79B,EAAS3P,EADiBjE,EACMyxC,EAAKh1C,GAVzC,4CArC4B,sBAkD5B,SAASmX,EAAS3P,EAA4BoP,EAAkBo+B,EAAah1C,GACzE,GAAI6C,EAAM,CAEN,IAAIuC,EAAwC,KAA7BoC,EAAUpC,SAASlF,MAAe2C,EAAKuC,SAAWoC,EAAUpC,SAASlF,MAChFghB,EAAkC,KAA1B1Z,EAAU0Z,MAAMhhB,MAAe2C,EAAKqe,MAAQ1Z,EAAU0Z,MAAMhhB,MACpEihB,EAA0C,KAA9B3Z,EAAU2Z,UAAUjhB,MAAe2C,EAAKse,UAAY3Z,EAAU2Z,UAAUjhB,MACpFkhB,EAAwC,KAA7B5Z,EAAU4Z,SAASlhB,MAAe2C,EAAKue,SAAW5Z,EAAU4Z,SAASlhB,MAChFmhB,EAA8C,KAAhC7Z,EAAU6Z,YAAYnhB,MAAe2C,EAAKwe,YAAc7Z,EAAU6Z,YAAYnhB,MAC5FohB,EAA8B,KAAxB9Z,EAAU8Z,IAAIphB,MAAe2C,EAAKye,IAAM9Z,EAAU8Z,IAAIphB,MAC5DqhB,EAAkC,KAA1B/Z,EAAU+Z,MAAMrhB,MAAe2C,EAAK0e,MAAQ/Z,EAAU+Z,MAAMrhB,MACpEshB,EAAsC,KAA5Bha,EAAUga,QAAQthB,MAAe2C,EAAK2e,QAAUha,EAAUga,QAAQthB,MAC5Ew3C,EAAgB,KAAR1C,EAAanyC,EAAK+C,kBAAoBovC,EAE9Cp+B,IAAWtT,EACXU,EAAS2d,GAAY,CACjBvc,SAAUA,EACV8b,MAAOA,EACP7b,SAAU,GACV8b,UAAWA,EACXC,SAAUA,EACVC,YAAaA,EACbzb,kBAAmB8xC,EACnBp2B,IAAKA,EACLC,MAAOA,EACPC,QAASA,EACTm2B,WAAY90C,EAAK4e,QACjBO,UAAW,CAACy1B,IACbz3C,IAGE4W,IAAWrT,GAChBS,EAAS6d,GAAWhf,EAAK7C,GAAI,CACzBoF,SAAUA,EACV8b,MAAOA,EACP7b,SAAU,GACV8b,UAAWA,EACXC,SAAUA,EACVC,YAAaA,EACbzb,kBAAmB8xC,EACnBp2B,IAAKA,EACLC,MAAOA,EACPC,QAASA,EACTm2B,WAAY90C,EAAK4e,QACjBO,UAAW,CAACy1B,IACbz3C,IAGPgE,EAASN,MACTM,EAASL,GAAqBoX,GAAuB7D,QAe7D,SAASrP,IACL,OAAUL,EAAU0Z,MAAMhhB,OAAwB,KAAf2C,EAAKqe,QAAmB1Z,EAAUpC,SAASlF,OAA2B,KAAlB2C,EAAKuC,SAZhG1I,QAAQC,IAAI6K,GAgBZ,IAAIO,EAAMlF,EAAK+C,kBAtHa,EAwHErG,mBAASwI,GAxHX,mBAwHrB8sC,EAxHqB,KAwHZC,EAxHY,OAyHFv1C,qBAzHE,mBAyHrB01C,EAzHqB,KAyHdC,EAzHc,cAuIbH,IAvIa,6EAuI5B,iCAAAtX,EAAA,yDACU0X,EAAW,IAAIC,cACPl5B,IAAV+4B,EAFR,yCAGe,IAHf,cAMQE,EAASE,OACL,UACAJ,EAAMK,eARlB,SAW0BrxC,MAAM,GAAD,OAChBC,+BADgB,oBACiC,CAChDhG,OAAQ,OACRU,KAAMu2C,IAdtB,cAWc32C,EAXd,iBAiB2BA,EAAImG,OAjB/B,eAiBcC,EAjBd,yBAkBeA,EAAK2wC,WAlBpB,6CAvI4B,sBA6J5B,OACIt6B,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACH,yBAAKxH,UAAU,iBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,0CAEJ,kBAAC,IAAD,MACA,yBAAKA,UAAU,aACX,0BAAMoH,SAhLF,6CAiLA,yBAAKpH,UAAU,YACX,yBAAKA,UAAU,uBACX,2BAAOd,QAAQ,iBAAf,uBACA,2BAAOI,KAAK,OAAOH,GAAG,gBAAgBkO,KAAK,gBAAgB9N,SAzDzE,SAACnB,GACnBi2C,EAAS,CAILM,eAAiBC,IAAIC,gBAAgBz2C,EAAEqB,OAAOijB,MAAM,IAEpD+xB,cAAgBr2C,EAAEqB,OAAOijB,MAAM,KAEnCuxB,EAAWW,IAAIC,gBAAgBz2C,EAAEqB,OAAOijB,MAAM,SAkDlB,yBAAK1iB,UAAU,uBACX,yBAAKkH,IAAiB,KAAZ8sC,EAAiBhyC,EAAK+C,kBAAoBivC,EAAS7sC,IAAI,UAAUhI,GAAG,aAGtF,yBAAKa,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,iBACVY,MAAM,WACNV,MAAoC,KAA7BsH,EAAUpC,SAASlF,MAAe2C,EAAKuC,SAAWoC,EAAUpC,SAASlF,MAC5EE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,kCACNc,YAAY,MAEpB,yBAAKF,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,cACVY,MAAM,QACNV,MAAiC,KAA1BsH,EAAU0Z,MAAMhhB,MAAe2C,EAAKqe,MAAQ1Z,EAAU0Z,MAAMhhB,MACnEE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,QACNc,YAAY,OAGxB,yBAAKF,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,kBACVY,MAAM,YACNV,MAAqC,KAA9BsH,EAAU2Z,UAAUjhB,MAAe2C,EAAKse,UAAY3Z,EAAU2Z,UAAUjhB,MAC/EE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,UACNc,YAAY,MAEpB,yBAAKF,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,iBACVY,MAAM,WACNV,MAAoC,KAA7BsH,EAAU4Z,SAASlhB,MAAe2C,EAAKue,SAAW5Z,EAAU4Z,SAASlhB,MAC5EE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,SACNc,YAAY,OAGxB,yBAAKF,UAAU,YACX,yBAAKA,UAAU,uBACf,kBAAC+2C,GAAD,CACI53C,GAAG,YACHY,MAAM,MACNX,MAAM,oBACNnC,QAAS,CAAC,MAAO,WACjB2C,UAAU,EACVL,SAAUuH,EACVzH,MAA+B,KAAxBsH,EAAU8Z,IAAIphB,MAAe2C,EAAKye,IAAM9Z,EAAU8Z,IAAIphB,SAGjE,yBAAKW,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,cACVY,MAAM,QACNV,MAAiC,KAA1BsH,EAAU+Z,MAAMrhB,MAAe2C,EAAK0e,MAAQ/Z,EAAU+Z,MAAMrhB,MACnEE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,oCACNc,YAAY,OAGxB,yBAAKF,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,gBACVY,MAAM,UACNV,MAAmC,KAA5BsH,EAAUga,QAAQthB,MAAe2C,EAAK2e,QAAUha,EAAUga,QAAQthB,MACzEE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,yBACNc,YAAY,MAEpB,yBAAKF,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,oBACVY,MAAM,cACNV,MAAuC,KAAhCsH,EAAU6Z,YAAYnhB,MAAe2C,EAAKwe,YAAc7Z,EAAU6Z,YAAYnhB,MACrFE,SAAUuH,EACVxH,KAAK,OACLM,UAAU,EACVC,UAAW,IACXT,MAAM,eACNc,YAAY,OAGxB,4BAAQF,UAAU,iBAAiBiH,QAAS,WA3KpE9D,EAASL,GAAqBoX,GAAuB7D,SA2K7B,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCAxKhCgH,IACN,WAAa,KAuKN,mB,+NC1JjBgwC,OA/Hf,WACI,IAAM7zC,EAA0BqD,cAC1B+W,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAE7Dpe,EAAK8D,aAAaC,QAAQ,MAC5B0L,EAAkB,EACX,OAAPzP,IACAyP,EAAUuB,SAAShR,IAEvBwM,qBAAU,WACNoV,GAAY5d,EAAUyL,KACvB,CAACzL,EAAUyL,IACd,IAAI5M,EAAcub,EAAMG,SAAS,GAC3BhI,EAAqB6H,EAAM5H,oBAAsBuE,GAAuBtE,OAEzE5T,IAAQ0T,IACT1T,EAAO,CAAE7C,GAAI,EAAGoF,SAAU,GAAI8b,MAAO,GAAI7b,SAAU,GAAIf,OAAQ,GAAI6c,UAAW,GAAIC,SAAU,GAAIE,IAAK,GAAIC,MAAO,GAAIC,QAAS,GAAIH,YAAa,GAAIzb,kBAAmB,GAAI8b,WAAY,GAAID,QAAS,IAhBnK,MAmBDliB,mBAAS,CACvC6F,SAAU,CAAE1F,MAAO,GAAIQ,MAAO2C,EAAKuC,UACnC8b,MAAO,CAAExhB,MAAO,GAAIQ,MAAO2C,EAAKqe,OAChC7b,SAAU,CAAE3F,MAAO,GAAIQ,MAAO,IAC9BihB,UAAW,CAAEzhB,MAAO,GAAIQ,MAAO2C,EAAKse,WACpCC,SAAU,CAAE1hB,MAAO,GAAIQ,MAAO2C,EAAKue,UACnCC,YAAa,CAAE3hB,MAAO,GAAIQ,MAAO2C,EAAKwe,aACtCzb,kBAAmB,CAAElG,MAAO,GAAIQ,MAAO2C,EAAK+C,mBAC5C0b,IAAK,CAAE5hB,MAAO,GAAIQ,MAAO2C,EAAKye,KAC9BC,MAAO,CAAE7hB,MAAO,GAAIQ,MAAO2C,EAAK0e,OAChCC,QAAS,CAAE9hB,MAAO,GAAIQ,MAAO2C,EAAK2e,WA7BH,mBAmB5Bha,EAnB4B,KAmBjBC,EAnBiB,KAiCnC,SAASE,EAAoBC,GACzBH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UAuCnF,SAAS2H,IACL,OAAQL,EAAUpC,SAAS1F,OAAS8H,EAAU+Z,MAAM7hB,QAC5C8H,EAAUpC,SAASlF,QAAUsH,EAAU+Z,MAAMrhB,MAMzD,OACI,kBAAC,WAAD,KACI,yBAAKW,UAAU,iBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,0CAEJ,kBAAC,IAAD,MACA,yBAAKA,UAAU,aACX,0BAAMoH,SAtD9B,SAAkBhJ,GAEd,GADAA,EAAEiJ,kBACEL,IAAJ,EAOJ,SAAkBL,EAA4BoP,GAC1C,GAAI/T,EAAM,CACN,IAAMoL,EAAMnI,IAAMqC,QAAQ,0EAA2C,CACjElC,SAAUH,IAAMI,SAASC,aAG7BnC,ECjEL,SAAS8zC,EAAY93C,EAAS4E,EAAWqJ,GAC5C,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,KACTsB,MAAM,GAAD,OACMC,+BADN,iCAC4DlE,GAAM,CAC3D9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS8zC,EAAY93C,EAAG4E,EAAMqJ,OAUzC9J,MAAM,SAAAe,GACHxI,QAAQC,IAAIuI,GACZxI,QAAQC,IAAIqD,GACZ8F,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,yDAAgC5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC/IpC,EAASpB,EAAiBgC,OAE7BI,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,kEAAsC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACnJpC,EAASlB,EAAepD,IACxBhD,QAAQC,IAAI,aDyBPm7C,CAAYj1C,EAAK7C,GAAI,CACtB+3C,aAAcvwC,EAAUpC,SAASlF,MACjC83C,aAAcxwC,EAAU+Z,MAAMrhB,OACnC+N,IAEHjK,EAASN,MACTM,EAASL,GAAqBoX,GAAuB7D,QAfzDC,CAAS3P,MAiDW,yBAAK3G,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,iBACVY,MAAM,WACNV,MAAOsH,EAAUpC,SAASlF,MAC1BE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,6BACNc,YAAY,OAGpB,yBAAKF,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,cACVY,MAAM,QACNV,MAAOsH,EAAU+Z,MAAMrhB,MACvBE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,8BACNc,YAAY,OAGxB,4BAAQF,UAAU,iBAAiBiH,QAAS,WAnDpE9D,EAASL,GAAqBoX,GAAuB7D,SAmD7B,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCAhDhCgH,IACN,WAAa,KA+CN,mBElFjBowC,OAxCf,SAAoB34C,GAChB,IAAM44C,EAAoEzvC,aAAY,SAACC,GAAD,OAAuBA,EAAMyvC,kCAC7G7wC,EAAUC,cAEVmK,EAAc,WAEhBpK,EAAQI,KADG,2BAKT0wC,EAAyDF,EAAgCG,4BAA4BvqC,KAAI,SAACiF,EAAwBhF,GACpJ,OAAKgF,EACG,wBAAIlS,UAAS,YACjB4Q,IAAG,iCAA4B1D,IAC/B,wBAAIya,MAAM,OAAOza,EAAQ,GACzB,wBAAIjG,QAAS4J,GAAcqB,EAAuBE,cAClD,wBAAInL,QAAS4J,GAAcqB,EAAuBulC,QALhB,QAU1C,OACI,yBAAKz3C,UAAU,4BACX,2BAAOA,UAAU,SACb,2BAAOA,UAAU,eACb,4BACI,wBAAI2nB,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,oBAGR,+BACK4vB,MCqBNG,OAtDf,SAAoBj5C,GAChB,IAAM23C,EAA8CxuC,aAAY,SAACC,GAAD,OAAuBA,EAAMuuC,uBACvFuB,EAA+C/vC,aAAY,SAACC,GAAD,OAAuBA,EAAM8vC,uBAExFlxC,EAAUC,cAEVmK,EAAc,WAEhBpK,EAAQI,KADG,2BAKXyJ,EAAQsnC,KAAKC,OAAOF,EAAoBG,gBAAgBh4C,OAAQ63C,EAAoBI,oBAAoBj4C,QAAUs2C,EAAoBC,kBAAkBv2C,QACtJk4C,EAAqD5B,EAAoBC,kBAAkBppC,KAAI,SAACyoC,EAAoBxoC,GACtH,OAAKwoC,EACDxoC,IAAUkpC,EAAoBC,kBAAkBv2C,OAAS,EACjD,wBAAIE,UAAS,aACjB4Q,IAAG,6BAAwB1D,IAC3B,wBAAIya,MAAM,OAAOza,EAAQ,GACzB,wBAAIjG,QAAS4J,GAAc6kC,EAAmBrwB,cAC9C,wBAAIsC,MAAM,OAAQgwB,EAAoBG,gBAAgBh4C,OAAQ63C,EAAoBI,oBAAoBj4C,OAAUwQ,EAAMpD,GACtH,wBAAIya,MAAM,SAGV,wBAAI3nB,UAAS,cACjB4Q,IAAG,6BAAwB1D,IAC3B,wBAAIya,MAAM,OAAOza,EAAQ,GACzB,wBAAIjG,QAAS4J,GAAc6kC,EAAmBrwB,cAC9C,wBAAIsC,MAAM,OAAOrX,GACjB,wBAAIqX,MAAM,SAfoB,QAoBtC,OACI,yBAAK3nB,UAAU,4BACX,2BAAOA,UAAU,SACb,2BAAOA,UAAU,eACb,4BACI,wBAAI2nB,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,2CACA,wBAAIA,MAAM,OAAV,0BAGR,+BACKqwB,MCxDRC,GAA4C,oCAC5CC,GAA6C,qCAC7CC,GAA+C,uCAE/CC,GAA4D,oDAC5DC,GAA2D,mDAC3D12C,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBAC3B83C,GAAmD,2CACnDC,GAAgD,wCAQtD,SAASx2C,GAAiBy2C,GAC7B,MAAO,CACHl5C,KAAMiB,GACNi4C,iCAID,SAASv2C,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAQZ,SAAS45C,KACZ,MAAO,CAAEn5C,KAAMg5C,IAGZ,SAASI,GAA8BF,GAC1C,MAAO,CAAEl5C,KAAM24C,GAAmCO,8BAA+BA,GC7B9E,SAASG,GAAyCx1C,EAAehE,GACpE,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,kDACyElE,GAAM,CAC5E9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASw1C,GAAyCx1C,EAAUhE,OAUvEmE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASs1C,MACT58C,QAAQC,IAAIiI,EAAKhG,KAAK66C,4BACtB70C,EAAKhG,KAAK66C,2BAA2B3rC,KAAI,SAAC3B,EAAU4B,GAChD,IAAIwoC,EAAyC,CACzCvjC,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClB+M,WAAY7T,EAAI6T,WAChBkG,aAAc/Z,EAAI+Z,aAClB8vB,WAAY7pC,EAAI6pC,WAChBS,aAActqC,EAAIsqC,aAClBiD,sBAAuBvtC,EAAIutC,sBAC3BC,SAAUxtC,EAAIwtC,SACdrB,MAAOnsC,EAAImsC,MACXlqC,KAAMjC,EAAIiC,MAGd,OAAOpK,EAASu1C,GAA8BhD,UAGrDvxC,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YC9DrB,IAAMi9C,GAA6C,qCAC7CC,GAA8C,sCAC9CC,GAAgD,wCAEhDC,GAA6D,qDAC7DC,GAA4D,oDAC5DC,GAAoD,4CACpDC,GAAiD,yCAGjDC,GAAyC,iCACzCC,GAA0C,kCAC1CC,GAA4C,oCAE5CC,GAAyD,iDACzDC,GAAwD,gDACxDC,GAAgD,wCAChDC,GAA6C,qCAG7Cj4C,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBCdjC,SAASq5C,GAA8B12C,EAAehE,GACzD,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,uCAC8DlE,GAAM,CACjE9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS02C,GAA8B12C,EAAUhE,OAU5DmE,MAAM,SAAAS,GACHZ,EDLL,CACH7D,KAAMiB,GACNu5C,mBCGkC/1C,IAC1BZ,EDyCL,CAAE7D,KAAMq6C,KCxCHx2C,EDWL,CAAE7D,KAAM85C,KCVHv9C,QAAQC,IAAIiI,EAAKhG,KAAKg8C,oBACtBh2C,EAAKhG,KAAKg8C,mBAAmB9sC,KAAI,SAAC3B,EAAU4B,GACxC,IAAI8d,EAAY1f,EAAIod,YAChBuC,EAAY3f,EAAIqd,YAChBmxB,EAAwC,CACxC36C,GAAImM,EAAInM,GACRgT,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClB+iC,WAAY7pC,EAAI6pC,WAChBS,aAActqC,EAAIsqC,aAClBztB,UAAW7c,EAAI6c,UACfO,YAAasC,EACbrC,YAAasC,GAEjB,OAAO9nB,EDDpB,SAA6B22C,GAChC,MAAO,CAAEx6C,KAAMy5C,GAAoCe,mBAAoBA,GCAvCE,CAAoBF,OAGxC/1C,EAAKhG,KAAKk8C,eAAehtC,KAAI,SAAC3B,EAAU4B,GACpC,IAAI8d,EAAY1f,EAAIod,YAChBuC,EAAY3f,EAAIqd,YAChBmxB,EAAwC,CACxC36C,GAAImM,EAAInM,GACRgT,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClB+iC,WAAY7pC,EAAI6pC,WAChBS,aAActqC,EAAIsqC,aAClBztB,UAAW7c,EAAI6c,UACfO,YAAasC,EAAUI,UAAU,EAAG,GACpCzC,YAAasC,EAAUG,UAAU,EAAG,IAExC,OAAOjoB,EDYpB,SAA0B22C,GAC7B,MAAO,CAAEx6C,KAAMg6C,GAAgCQ,mBAAoBA,GCbnCI,CAAiBJ,UAGxC31C,OAAM,SAAAtF,GACHsE,EDpCT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UCiCMoD,CAAepD,IACxBhD,QAAQC,IAAI,YCpD5B,ICfYq+C,GD8KGC,GA/JiB,WAC5B,IAAMj3C,EAA0BqD,cAC1B6wC,EAAoEzvC,aAAY,SAACC,GAAD,OAAuBA,EAAMyvC,kCAC7GlB,EAA8CxuC,aAAY,SAACC,GAAD,OAAuBA,EAAMuuC,uBACvFuB,EAA+C/vC,aAAY,SAACC,GAAD,OAAuBA,EAAM8vC,uBACxFv6C,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAG3EjH,EAAO/I,aAAaC,QAAQ,cAC5BiyC,EAAqB,EACZ,OAATnpC,IACAmpC,EAAahlC,SAASnE,IAXQ,IAc1BoO,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OASbuL,wBAAa+sC,GAAyCx1C,EAAUgyC,IAChEvpC,wBAAaiuC,GAA8B12C,EAAUgyC,IACrDvpC,wBAAa6pC,GAA+BtyC,EAAUgyC,QAG/D,CAAChyC,EAAUgyC,EAAYx5B,EAAc3Y,IAGxC2I,qBAAU,WACNxI,EAAS6W,MACT7W,EAASmQ,GAAkB,gBAAY,mBACxC,CAAClW,EAAK+V,KAAMhQ,IAEfwI,qBAAU,WACNC,wBAAawU,GAAWjd,IACxByI,wBAAaglC,GAAWztC,IACxByI,wBAAaqkB,GAAW9sB,IACxByI,wBAAa0mB,GAAYnvB,IACzByI,wBAAaqnB,GAAU9vB,MACxB,CAACA,IAEJ,IAAIq7B,EAAoB,GACpB6b,EAAmB,GACnBhD,EAAgCG,4BAA4B13C,OAAS,GACrEu3C,EAAgCG,4BAA4BvqC,KAAI,SAAA3B,GAG5D,OAFAkzB,EAAQ33B,KAAKyE,EAAI8G,cACjBioC,EAAOxzC,KAAKyE,EAAImsC,OACTnsC,KAIf,IACIvH,EAAO,CACPu+B,OAFW9D,EAGX+D,SAAU,CACN,CACInjC,MAAO,eACP2E,KAAMs2C,EACN7X,YAAa,oBACbvY,gBAAiB,6BAM7B,OACI7P,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACH,wBAAIxH,UAAU,yBAAd,iBACA,uBAAGA,UAAU,QAAb,sBACA,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,0BAAa6I,KAAI,UAAKikC,EAAoBG,gBAAgBh4C,OAAS63C,EAAoBI,oBAAoBj4C,QAAU8K,KAAK,MAAM6I,MAAM,YACrJ,kBAAC,GAAD,CAAS5I,MAAM,4BAAiB6I,KAAI,UAAK0iC,EAAoBC,kBAAkBv2C,QAAU8K,KAAK,MAAM6I,MAAM,YAC1G,kBAAC,GAAD,CAAS5I,MAAM,uBAAU6I,KAAI,UAAK2jC,EAAgCG,4BAA4B13C,QAAU8K,KAAK,MAAM6I,MAAM,aAgBjI,yBAAKzT,UAAU,OAEf,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAd,oCAEF,yBAAKA,UAAU,aACb,kBAAC,GAAD,SAMN,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAd,iCAEF,yBAAKA,UAAU,aACf,kBAAC,GAAD,SAKJ,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,8BACX,kBAAC4iC,GAAD,CAAW7+B,KAAMA,SE9K1B,SAASu2C,GAAsB14B,GAkBlC,OADAA,GADAA,GAFAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAMA,EAAIgF,QAAQ,+FAAkC,MAC1CA,QAAQ,kHAAsC,MAC9CA,QAAQ,6DAAuB,MAC/BA,QAAQ,0EAA0B,MAClCA,QAAQ,6BAAc,MACtBA,QAAQ,kCAAc,MACtBA,QAAQ,+FAAkC,MAC1CA,QAAQ,kHAAsC,MAC9CA,QAAQ,gEAAwB,MAChCA,QAAQ,4EAA0B,MAClCA,QAAQ,+BAAc,MACtBA,QAAQ,oCAAc,MACtBA,QAAQ,UAAM,MACdA,QAAQ,UAAM,MAEdA,QAAQ,sCAAuC,KAC/CA,QAAQ,wBAAyB,K,SDPnCuzB,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KE8GGI,OAzGf,SAA6B97C,GAC3B,IAAM0E,EAA0BqD,cAC1Bg0C,EAA2C5yC,aAAY,SAACC,GAAD,OAAuBA,EAAM2yC,qBACpFC,EAA6C7yC,aAAY,SAACC,GAAD,OAAuBA,EAAM4yC,sBACtFC,EAAsD9yC,aAAY,SAACC,GAAD,OAAuBA,EAAM6yC,2BACrG7+C,QAAQC,IAAI4+C,GACZ7+C,QAAQC,IAAI2+C,GAEZ,IAAMh0C,EAAUC,cAwCZsF,EAAO/I,aAAaC,QAAQ,eAC5BqP,EAAsB,GACb,OAATvG,IACFuG,EAAcvG,GAIhB,IAAM2uC,EAAmDH,EAAkBI,iBAAiBh8B,QAAO,SAACva,GAClG,MAAoB,KAAhB5F,EAAMY,MACDgF,EAEuB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACxKtiB,EAEF,QACN+5B,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQje,KAAI,SAAColC,EAAkBnlC,GAE5D,OAAKmlC,EACG,wBAAIryC,UAAS,oBAAgBw6C,EAAkBM,yBAA2BN,EAAkBM,wBAAwB37C,KAAOkzC,EAAiBlzC,GAAM,WAAa,IACrKyR,IAAG,2BAAsByhC,EAAiBlzC,KAC1C,wBAAIwoB,MAAM,OAAOza,EAAQ,GACzB,4BAAKmlC,EAAiBhlC,MACtB,4BAAKkF,GACL,6BAAwC,IAAnC8/B,EAAiBjE,cAAyB,8BAAwB,0CACvE,4BACE,4BAAQ9uC,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACrDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAAS8yB,GACnClvC,EAASsvC,GAAoC0H,GAAkC36B,OAlEnE,SAAC6yB,GAEnBpvC,aAAaY,WAAW,uBACxBZ,aAAae,QAAQ,sBAAuBquC,EAAiBlzC,GAAGvD,YAChEqH,aAAaY,WAAW,kBACxBZ,aAAae,QAAQ,iBAAkBquC,EAAiBnnB,OAAOtvB,YAC/DqH,aAAaY,WAAW,iBACxBZ,aAAae,QAAQ,gBAAiBquC,EAAiBjE,cAAcxyC,YACrE,IAAIm/C,EAAqC,GACzCN,EAAmBO,kBAAkB/tC,KAAI,SAAA3B,GAiBvC,OAhBIA,EAAIioC,sBAAwBlB,EAAiBlzC,KAC/C8D,aAAaY,WAAW,wBACxBZ,aAAae,QAAQ,uBAAwBsH,EAAInM,GAAGvD,YACpD8+C,EAAwBO,sBAAsBhuC,KAAI,SAAAmrB,GAUhD,OATIA,EAAQqU,uBAAyBnhC,EAAInM,IACvC47C,EAA4Bl0C,KAAK,CAC/ByG,YAAa8qB,EAAQ9qB,YACrBnO,GAAIi5B,EAAQj5B,GACZkO,KAAM+qB,EAAQ/qB,KACdo/B,qBAAsBrU,EAAQqU,qBAC9BvhB,OAAQkN,EAAQlN,SAGb,SAGJ,QAETrvB,QAAQC,IAAIi/C,GACZ93C,aAAaY,WAAW,2CACxBZ,aAAae,QAAQ,0CAA2C1H,KAAKC,UAAUw+C,EAA4B3c,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,YACvIzkB,EAAQI,KAAK,CACXmB,SA/BS,2BAkCX/E,aAAaY,WAAW,iBACxBZ,aAAae,QAAQ,gBAAiBquC,EAAiBhlC,MA+BjDwD,CAAYwhC,KAHd,yBAR4B,QAkBlC,OACE,kBAAC,WAAD,KACE,yBAAKryC,UAAU,4BACb,2BAAOA,UAAU,SACf,2BAAOA,UAAU,eACf,4BACE,wBAAI2nB,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,oBACA,wBAAIA,MAAM,OAAV,qBACA,wBAAIA,MAAM,OAAV,4BAGJ,+BACGgzB,O,OCpGN,SAASO,GAA6B/3C,EAAehE,GACxD,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,oCAC2DlE,GAAM,CAC9D9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS+3C,GAA6B/3C,EAAUhE,OAU3DmE,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZZ,EAASpB,GAAiBgC,IAC1BZ,EAASovC,MACT12C,QAAQC,IAAIiI,EAAKhG,KAAKq1C,iBACtBrvC,EAAKhG,KAAKq1C,gBAAgBnmC,KAAI,SAAC3B,EAAU4B,GACrC,IAAImlC,EAAoC,CACpClzC,GAAImM,EAAInM,GACRkpB,WAAY/c,EAAI+c,WAChB/C,UAAWha,EAAIga,UACfjY,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB4d,OAAQ5f,EAAI4f,OACZkjB,cAAe9iC,EAAI8iC,cACnB1lB,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAGrB,OACWxlB,EADG,IAAV+J,EACgBolC,GAAuBD,GAGvBG,GAAmBH,UAK9CluC,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YC5DrB,SAASq/C,GAAoBh4C,GAChC,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,sBACqD,CAClDhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASg4C,GAAoBh4C,OAUxCG,MAAM,SAAAS,GACHZ,EjCjBL,CACH7D,KAAMiB,GACN66C,kBiCekCr3C,IAC1BZ,EjCAL,CAAE7D,KAAMyzC,KiCEHhvC,EAAKhG,KAAKs9C,iBAAiBpuC,KAAI,SAAC3B,EAAU4B,GACtC,IAAIkuC,EAAsC,CACtCj8C,GAAImM,EAAInM,GACRo0C,oBAAqBjoC,EAAIioC,oBACzBlmC,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjBob,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAGrB,OACWxlB,EADG,IAAV+J,EjCjBjB,SAAiCkuC,GACpC,MAAO,CAAE97C,KAAM0zC,GAA2BoI,kBAAmBA,GiCiBzBE,CAAwBF,GjCVzD,SAA6BA,GAChC,MAAO,CAAE97C,KAAMozC,GAAuB0I,kBAAmBA,GiCYrBG,CAAoBH,UAI/Cj3C,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCpDrB,SAAS0/C,GAAwBr4C,GACpC,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,2BAC0D,CACvDhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASq4C,GAAwBr4C,OAU5CG,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASmpC,MACTzwC,QAAQC,IAAIiI,EAAKhG,KAAKyuC,sBACtBzoC,EAAKhG,KAAKyuC,qBAAqBv/B,KAAI,SAAC3B,EAAU4B,GAC1C,IAAIk/B,EAA+C,CAC/CjtC,GAAImM,EAAInM,GACRstC,qBAAsBnhC,EAAImhC,qBAC1Bp/B,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB4d,OAAQ5f,EAAI4f,QAGhB,OAAO/nB,EAASkpC,GAA4BD,UAGnDjoC,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YClC5B,IAoHes3C,GApHmB,WAC9B,IAAMjwC,EAA0BqD,cAC1Bi1C,EAA0C7zC,aAAY,SAACC,GAAD,OAAuBA,EAAM2yC,qBACnFp9C,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzE4S,EAA2B41B,EAAiBb,iBAAiB96C,OAJ/B,EAKApB,mBAAS,IALT,mBAK7B4tB,EAL6B,KAKjBC,EALiB,KAOhCvgB,EAAO/I,aAAaC,QAAQ,aAC5BoiB,EAAoB,EACZ,MAARtZ,IACAsZ,EAAYnV,SAASnE,IAVW,IAa5BoO,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBA+CzC,OA9CAyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,EACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAGTuL,wBAAasvC,GAA6B/3C,EAAUmiB,IACpD1Z,wBAAa4vC,GAAwBr4C,IACrCyI,wBAAauvC,GAAoBh4C,MAIrCyI,wBAAasvC,GAA6B/3C,EAAUmiB,IACpD1Z,wBAAauvC,GAAoBh4C,IACjCyI,wBAAa4vC,GAAwBr4C,QAG9C,CAACA,EAAUwY,EAAc3Y,EAAesiB,IAE3C3Z,qBAAU,WACNxI,EpCdG,CAAE7D,KAAM4yC,KoCeX/uC,EAASmQ,GAAkB,qBAAY,mBACxC,CAAClW,EAAK+V,KAAMhQ,IAUXiX,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACH,kBAAC,IAAD,MACA,wBAAIxH,UAAU,yBAAd,sBACA,uBAAGA,UAAU,QAAb,sBACA,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,6BAAc6I,KAAI,UAAKmS,GAAoBjb,KAAK,MAAM6I,MAAM,aAG/E,yBAAKzT,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,2BAAOV,KAAK,OAAOH,GAAG,QAAQa,UAAU,eAAeE,YAAY,mBAAWX,SAAU,SAACC,GACrF+sB,EAAc/sB,EAAMC,OAAOJ,OAC3BxD,QAAQC,IAAIwwB,OAGpB,4BAAQhtB,KAAK,SAASU,UAAU,mBAC5B,uBAAGA,UAAU,sBAM7B,yBAAKA,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,oCAEJ,yBAAKA,UAAU,aACX,kBAAC,GAAD,CACIuf,SAjD5B,SAAiC6zB,GAC7BjwC,EpCvBG,CAAE7D,KAAM2yC,GAAsCI,iBoCuBVe,IACvCjwC,EAASsvC,GAAoC0H,GAAkC9jC,QA+CpBhX,MAAOitB,UCvH1Eqd,SAAMxI,SAAS,sBAAuB4J,MAE/B,IAsCQC,GAtCO,SAACvsC,GACrB5C,QAAQC,IAAR,iBAAsB2C,EAAMQ,WAC5B,IAAMgsC,EAAgBC,iBAAO,MAC7BC,IAAMx/B,WAAU,WACVs/B,EAAcG,QAAQC,cAAkC,IAAnB5sC,EAAMiX,UAC3Cu1B,EAAcG,QAAQC,YAAYC,UAAUC,qBAAqB9sC,EAAMQ,YAE1E,CAACgsC,EAAexsC,EAAMQ,SAAUR,EAAMiX,WAPV,MAcLy1B,IAAMzsC,SAAS,CAAEW,MAAO,OAdnB,mBAcxBwI,EAdwB,KAcjB2jC,EAdiB,KAsB/B,OADA3vC,QAAQC,IAAR,iBAAsB+L,EAAMxI,QAE1B,yBAAKW,UAAU,eACb,kBAACyrC,GAAD,MACA,kBAAC,KAAD,CACEC,IAAKT,EACLU,MAAM,OACNtsC,MAAOwI,EAAMxI,MACbE,SAde,SAAAF,GACnBmsC,EAAS,CAAEnsC,UACXZ,EAAMmtC,SAASvsC,IAaXa,YAAa,6BACb6pC,QAASA,GACTa,QAASA,OCpCV,SAAS8Q,GAAwBv8C,EAASytC,EAA2Bx/B,GACxE,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,mCAC8DlE,GAAM,CAC7D9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUqwC,KAG5BtpC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASu4C,GAAwBv8C,EAAIytC,EAAsBx/B,OAUtE9J,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZZ,EAASopC,GAA4CK,EAAqBH,uBAC1ExnC,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,6CAAyB5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,SAE3IpB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,sDAA+B5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC5IpC,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aCxCrB,SAAS6/C,GAA2Bx8C,GACvC,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACEC,+BADF,mCAC0DlE,GAAM,CAC7D9B,OAAQ,SACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI3CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASw4C,GAA2Bx8C,OAU/CmE,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,MAEfI,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aChCrB,SAAS8/C,GAAyBz8C,EAASytC,GAC9C,IAAIxoC,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,mCAC8DlE,GAAM,CAC7D9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUqwC,KAG5BtpC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASy4C,GAAyBz8C,EAAIytC,OAUjDtpC,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZZ,EAASopC,GAA4CK,EAAqBH,0BAE7EtoC,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,a,+NCshBb+/C,OAnhBf,SAA6Bp9C,GACzB,IAAM0E,EAA0BqD,cAC1Bg0C,EAAkD5yC,aAAY,SAACC,GAAD,OAAuBA,EAAM2yC,qBAC3FE,EAA6D9yC,aAAY,SAACC,GAAD,OAAuBA,EAAM6yC,2BACtGt9C,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAC/EpX,QAAQC,IAAI4+C,EAAwBO,uBACpC,IAAI5I,EAA4CmI,EAAkBM,wBANK,EAQzCp8C,oBAAS,GARgC,mBAQhEoqB,EARgE,KAQvDC,EARuD,KAUnE/c,EAAO/I,aAAaC,QAAQ,uBAC5BqwC,EAA8B,EACrB,OAATvnC,IACAunC,EAAsBpjC,SAASnE,IAGnC,IAAI0O,EAAOzX,aAAaC,QAAQ,kBAC5B8kC,EAAyB,EAChB,OAATttB,IACAstB,EAAiB73B,SAASuK,IAG9B,IAAIE,EAAO3X,aAAaC,QAAQ,2CAC5B44C,EAA2C,GAC3CC,EAAe,GACN,OAATnhC,IAEAmhC,EAA2C,KAD3CD,EAAmBx/C,KAAK4B,MAAM0c,IACE9a,OAAeg8C,EAAiB,GAAGxuC,YAAc,IAIrF,IAAI0/B,EAAO/pC,aAAaC,QAAQ,wBAC5BupC,EAA+B,EACtB,OAATO,IACAP,EAAuBt8B,SAAS68B,IAGpC,IAAIgP,EAAO/4C,aAAaC,QAAQ,iBAC5B+4C,EAAwB,GACf,OAATD,IACAC,EAAgBD,GAGpB,IAAIlhC,EAAO7X,aAAaC,QAAQ,iBAC5BkrC,EAAwB,GACf,OAATtzB,IACAszB,EAAgBtzB,GAIpB,IAAIa,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAOb8C,EAASopC,GAA4CE,OAG9D,CAACtpC,EAAUwY,EAAc3Y,EAAeypC,IAhF4B,MAkFzC/tC,mBAASq9C,GAlFgC,mBAkFlElO,EAlFkE,KAkFxDC,EAlFwD,KAoFlEuE,IACDA,EAAmB,CAAElzC,GAAI,EAAGkO,KAAM,GAAIgb,WAAY,EAAG/C,UAAW,EAAG4F,OAAQ,EAAGkjB,eAAe,EAAO1lB,YAAa,GAAIC,YAAa,KAGtI9sB,QAAQC,IAAI4+C,EAAwBO,uBACyB,IAAzDP,EAAwBO,sBAAsBn7C,SAC9CuyC,EAAmB,CAAElzC,GAAI,EAAGkO,KAAM,GAAIgb,WAAY,EAAG/C,UAAW,EAAG4F,OAAQ,EAAGkjB,eAAe,EAAO1lB,YAAa,GAAIC,YAAa,KAItIhd,qBAAU,WACNxI,EAASmQ,GAAkB,yBAAkB,8BAC9C,CAAClW,EAAK+V,KAAMhQ,IAhGwD,MAmGrCzE,mBAAS,CACvC2O,KAAM,CAAExO,MAAO,GAAIQ,MAAOgzC,EAAiBhlC,MAC3C6d,OAAQ,CAAErsB,MAAO,GAAIQ,MAAOgzC,EAAiBnnB,QAC7CkjB,cAAe,CAAEvvC,MAAO,GAAIQ,MAAOgzC,EAAiBjE,eACpD9oB,UAAW,CAAEzmB,MAAO,GAAIQ,MAAOgzC,EAAiB/sB,WAChD+C,WAAY,CAAExpB,MAAO,GAAIQ,MAAOgzC,EAAiBhqB,YACjDK,YAAa,CAAE7pB,MAAO,GAAIQ,MAAOgzC,EAAiB3pB,aAClDC,YAAa,CAAE9pB,MAAO,GAAIQ,MAAOgzC,EAAiB1pB,eA1GiB,mBAmGhEhiB,EAnGgE,KAmGrDC,EAnGqD,OA4GrClI,mBAASo9C,EAAiBh8C,QA5GW,mBA4GhEo8C,EA5GgE,KA4GrDC,EA5GqD,OA6GjCz9C,mBAAiB,GA7GgB,mBA6GhE2uC,EA7GgE,KA6GnDC,EA7GmD,OA8G7C5uC,mBAAS,IA9GoC,mBA8GhEW,EA9GgE,KA8GzDJ,EA9GyD,QAgH3BP,oBAAS,GAhHkB,qBAgHhE09C,GAhHgE,MAgHhDC,GAhHgD,SAiHvB39C,oBAAS,GAjHc,qBAiHhE49C,GAjHgE,MAiH9CC,GAjH8C,MA+HvE,SAASpN,KACL,GAAgC,OAA5BuL,EACA,IAAuB,IAAnB0B,IAA4B/O,IAAgB6O,IAAkC,IAArBI,GACzDr3C,IAAMu3C,QAAQ,sFAA4C,CACtDp3C,SAAUH,IAAMI,SAASC,WACzBC,UAAW,WAGd,IAAuB,IAAnB62C,IAA4B/O,IAAgB6O,EACjDj3C,IAAMu3C,QAAQ,sFAA4C,CACtDp3C,SAAUH,IAAMI,SAASC,WACzBC,UAAW,UAGd,CACD,IAAMk3C,EAAIpP,EAEV8O,EADQD,EAAY,GAGpB,IAAM9uC,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAC9DlC,SAAUH,IAAMI,SAASC,aAE7B,GAAIm3C,IAAM/B,EAAwBO,sBAAsBn7C,OAEpDwtC,EADQmP,EAAI,GAEZt5C,EAASw4C,GAA2BjB,EAAwBO,sBAAsBwB,EAAI,GAAGt9C,KACzF+vC,UAGAwL,EAAwBO,sBAAsB7c,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQje,KAAI,SAAC3B,EAAK8B,GAYxF,OAXIqvC,EAAI,IAAMnxC,EAAI4f,OACd/nB,EAASw4C,GAA2BrwC,EAAInM,KAEnCmM,EAAI4f,OAASuxB,EAAI,GACtBt5C,EAASy4C,GAAyBtwC,EAAInM,GAAI,CACtCmO,YAAahC,EAAIgC,YACjBD,KAAM/B,EAAI+B,KACVo/B,qBAAsBA,EACtBvhB,OAAQ5f,EAAI4f,OAAS,KAGtB,KAEXgkB,KAEJjqC,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,yCAAuB5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,OAKlJ,SAASm3C,KACL,GAAgC,OAA5BhC,EAAkC,CAClC,IAAMttC,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAC9DlC,SAAUH,IAAMI,SAASC,aAEvBm3C,EAAIpP,EAEVlqC,EChOL,SAASw5C,EAAmBx9C,EAAS4E,GACxC,IAAIK,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,6BACwDlE,GAAM,CACvD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASw5C,EAAmBx9C,EAAG4E,OAU1CT,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZlI,QAAQC,IAAIqD,GACZg0C,GAAmBhwC,MAEtBgB,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aD2LP6gD,CAAmBpJ,EAAqB,CAC7ClmC,KAAM1G,EAAU0G,KAAKhO,MACrB+uC,cAA0B,SAAXC,GACfnjB,OAAQ8c,EACR3f,WAAYplB,aAAaC,QAAQ,MACjCoiB,UAAWriB,aAAaC,QAAQ,iBAGb,IAAnBk5C,IACIK,EAAI,IAAM/B,EAAwBO,sBAAsBn7C,OACxDqD,EAASwpC,GAA0B,CAC/Br/B,YAAajO,EACbgO,KAAM1G,EAAU0G,KAAKhO,MACrBotC,qBAAsBA,EACtBvhB,OAAQwvB,EAAwBO,sBAAsBn7C,QACvDsN,IAGHstC,EAAwBO,sBAAsB7c,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQje,KAAI,SAAC3B,EAAK8B,GAmCxF,OAlCI9B,EAAI4f,SAAWuxB,EAAI,GACnB5gD,QAAQC,IAAI,KACZqH,EAASy4C,GAAyBtwC,EAAInM,GAAI,CACtCmO,YAAahC,EAAIgC,YACjBD,KAAM/B,EAAI+B,KACVo/B,qBAAsBA,EACtBvhB,OAAQ5f,EAAI4f,OAAS,KAEzB/nB,EAASwpC,GAA0B,CAC/Br/B,YAAajO,EACbgO,KAAM1G,EAAU0G,KAAKhO,MACrBotC,qBAAsBA,EACtBvhB,OAAQ5f,EAAI4f,QACb9d,KAEE9B,EAAI4f,OAASuxB,EAAI,IAClBnxC,EAAI4f,OAASwvB,EAAwBO,sBAAsBn7C,OAAS,GACpEjE,QAAQC,IAAI,KACZqH,EAASy4C,GAAyBtwC,EAAInM,GAAI,CACtCmO,YAAahC,EAAIgC,YACjBD,KAAM/B,EAAI+B,KACVo/B,qBAAsBA,EACtBvhB,OAAQ5f,EAAI4f,OAAS,MAIzB/nB,EAASu4C,GAAwBpwC,EAAInM,GAAI,CACrCmO,YAAahC,EAAIgC,YACjBD,KAAM/B,EAAI+B,KACVo/B,qBAAsBA,EACtBvhB,OAAQ5f,EAAI4f,OAAS,GACtB9d,KAGJ,KAUfivC,IAAkB,IAGdI,EAAI/B,EAAwBO,sBAAsBn7C,OAAS,GAC3DqD,EAASu4C,GAAwBhB,EAAwBO,sBAAsB7c,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQuxB,EAAI,GAAGt9C,GAAI,CAC1HmO,YAAajO,EACbgO,KAAM4uC,EACNxP,qBAAsBA,EACtBvhB,OAAQuxB,EAAI,GACbrvC,IACHvR,QAAQC,IAAI,CACRwR,YAAajO,EACbgO,KAAM4uC,EACNxP,qBAAsBA,EACtBvhB,OAAQuxB,EAAI,MAIhBt5C,EAASwpC,GAA0B,CAC/Br/B,YAAajO,EACbgO,KAAM1G,EAAU0G,KAAKhO,MACrBotC,qBAAsBA,EACtBvhB,OAAQwvB,EAAwBO,sBAAsBn7C,QACvDsN,IAEHvR,QAAQC,IAAI,CACRwR,YAAajO,EACbgO,KAAM4uC,EACNxP,qBAAsBA,EACtBvhB,OAAQwvB,EAAwBO,sBAAsBn7C,UAIlEy8C,IAAoB,GAEpBt3C,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,6CAAyB5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,OAKhJ,SAASwoC,KACL,GAAgC,OAA5B2M,EACA,IAAuB,IAAnB0B,IAA4B/O,IAAgB6O,IAAkC,IAArBI,GACzDr3C,IAAMu3C,QAAQ,sFAA4C,CACtDp3C,SAAUH,IAAMI,SAASC,WACzBC,UAAW,WAIf,IAAyB,IAArB+2C,GAA2B,CAC3B,IAAInlC,EAAIk2B,EAAc,EACtBC,EAAen2B,GACftb,QAAQC,IAAI4+C,EAAwBO,sBAAsB7c,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,WACtF4iB,OAAyGzyB,IAA7Fq/B,EAAwBO,sBAAsB7c,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQ/T,EAAI,GAAmBujC,EAAwBO,sBAAsB7c,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQ/T,EAAI,GAAG7J,YAAc,IAC5Nyb,GAAW,GACX9pB,EAAS,IACTs9C,IAAoB,OAEnB,CACD,IAAIplC,EAAIk2B,EAAc,EACtBC,EAAen2B,GACftb,QAAQC,IAAI4+C,EAAwBO,sBAAsB7c,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,WACtF4iB,OAAyGzyB,IAA7Fq/B,EAAwBO,sBAAsB7c,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQ/T,EAAI,GAAmBujC,EAAwBO,sBAAsB7c,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQ/T,EAAI,GAAG7J,YAAc,IAC5Nyb,GAAW,GACX9pB,EAAS,KAezB,SAASiwC,KACL,GAAgC,OAA5BwL,EACA,IAAuB,IAAnB0B,IAA4B/O,IAAgB6O,IAAkC,IAArBI,GACzDr3C,IAAMu3C,QAAQ,sFAA4C,CACtDp3C,SAAUH,IAAMI,SAASC,WACzBC,UAAW,WAGd,IAAuB,IAAnB62C,IAA4B/O,IAAgB6O,EACjDj3C,IAAMu3C,QAAQ,sFAA4C,CACtDp3C,SAAUH,IAAMI,SAASC,WACzBC,UAAW,UAGd,CACD,IAAI4R,EAAIk2B,EAAc,EACtBC,EAAen2B,GACftb,QAAQC,IAAI4+C,EAAwBO,sBAAsB7c,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,WACtF4iB,EAAY4M,EAAwBO,sBAAsB7c,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQ/T,EAAI,GAAG7J,aACrGyb,GAAW,GACX9pB,EAAS,KAOrB,SAASmwC,KACL,IAAuB,IAAnBgN,IAA4B/O,IAAgB6O,IAAkC,IAArBI,GACzDr3C,IAAMu3C,QAAQ,sFAA4C,CACtDp3C,SAAUH,IAAMI,SAASC,WACzBC,UAAW,WAGd,IAAuB,IAAnB62C,IAA4B/O,IAAgB6O,EACjDj3C,IAAMu3C,QAAQ,sFAA4C,CACtDp3C,SAAUH,IAAMI,SAASC,WACzBC,UAAW,UAGd,CAED+nC,EADQD,EAAc,GAEtBgP,IAAkB,GAElBF,EADQD,EAAY,GAEpBrgD,QAAQC,IAAIuxC,EAAc,GAC1BtkB,GAAW,GACX+kB,EAAY,IACZ7uC,EAAS,KAnDjBpD,QAAQC,IAAIsgD,IACZvgD,QAAQC,IAAIwgD,IAqDZ,IA1XuE,GAqY3C59C,mBAAS,IArYkC,qBAqYhEowC,GArYgE,MAqYxDC,GArYwD,SAsYnCrwC,mBAAS,IAtY0B,qBAsYhEswC,GAtYgE,MAsYpDR,GAtYoD,SAuY3C9vC,mBAAS0vC,GAvYkC,qBAuYhEC,GAvYgE,MAuYxDK,GAvYwD,MAsZjEO,GA5B8B,CAChC,CACI,KAAQ,8BACR,MAAS,QAEb,CACI,KAAQ,yCACR,MAAS,UAqB4ChiC,KAAI,SAACqI,EAAapI,GAC3E,OACI,4BAAQ0D,IAAK1D,EAAO7N,MAAOiW,EAAOjW,OAAQiW,EAAOjI,SAKzD,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,MACA,yBAAKrN,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,aAAsDgoC,IAE1D,yBAAKhoC,UAAU,aACX,0BAAMoH,SA7S1B,SAAkBhJ,GACdA,EAAEiJ,iBAEFq1C,OA2SoB,yBAAK18C,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,aACVE,MAAOsH,EAAU0G,KAAKhO,MACtBU,MAAM,OACNR,SAzTpC,SAA6BwH,GACzBH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,WAyT/CO,UAAU,EACVC,UAAW,IACXT,MAAM,0BACNc,YAAY,MAEpB,yBAAKF,UAAU,uBACX,2BAAOd,QAAO,uBAAd,8BACA,4BACIG,MAAOgvC,GACPlvC,GAAE,sBACFa,UAAS,wBAAmBgvC,IAC5BzvC,SA9CpC,SAAyBC,GAA8C,IAC9DsvC,EAAQS,EADqD,EACvB,CAAC,GAAI,GAAI/vC,EAAMC,OAAOJ,OAAvCmwC,EADwC,OAGxCA,EACuB,CAAC,GAAI,YAAlD,CAAC,2BAA4B,cAJiC,mBAGjEV,EAHiE,KAGzDS,EAHyD,KAMlER,GAAUD,GACVN,GAAce,GACdb,GAAUc,KAuCsB,4BAAQnwC,MAAO,GAAf,aACC4vC,IAGJH,GACG,yBAAK9uC,UAAU,oBACV8uC,IACI,OAIrB,yBAAK9uC,UAAU,cACX,+DAAsBqtC,EAAtB,MAAsC6O,GACtC,kBAAC,GAAD,CAAQtQ,SAvIpC,SAAkBvsC,GACdJ,EAASI,GACT0pB,GAAW,IAqIyCrT,SAAUoT,EAAS7pB,SAAU4uC,KAGzD,WACI,GAAIR,EAAc6O,EACd,OAAoB,IAAhB7O,EAEI,yBAAKrtC,UAAU,OACX,yBAAKA,UAAU,8BACX,4BAAQV,KAAK,SAASU,UAAU,4BAA4BiH,QAASy1C,IAArE,YACA,4BAAQp9C,KAAK,SAASU,UAAU,qCAAqCiH,QAAS8mC,IAA9E,kCAEJ,yBAAK/tC,UAAU,8BACX,4BAAQV,KAAK,SAASU,UAAU,wCAAwCiH,QAASmoC,IAAjF,4BAOR,yBAAKpvC,UAAU,OACX,yBAAKA,UAAU,8BACX,4BAAQV,KAAK,SAASU,UAAU,4BAA4BiH,QAASioC,IAArE,oBACA,4BAAQ5vC,KAAK,SAASU,UAAU,qCAAqCiH,QAASy1C,IAA9E,YACA,4BAAQp9C,KAAK,SAASU,UAAU,qCAAqCiH,QAAS8mC,IAA9E,kCAEJ,yBAAK/tC,UAAU,8BACX,4BAAQV,KAAK,SAASU,UAAU,sDAAsDiH,QAASkoC,IAA/F,yBACA,4BAAQ7vC,KAAK,SAASU,UAAU,wCAAwCiH,QAASmoC,IAAjF,4BAzBxB,GAkCA,WACI,GAAI/B,IAAgB6O,EAChB,OAAkB,IAAdA,EAEI,yBAAKl8C,UAAU,OACX,yBAAKA,UAAU,8BACX,4BAAQV,KAAK,SAASU,UAAS,oCAA/B,qBAEJ,yBAAKA,UAAU,8BACX,4BAAQV,KAAK,SAASU,UAAU,wCAAwCiH,QAASmoC,IAAjF,4BASZ,yBAAKpvC,UAAU,OACX,yBAAKA,UAAU,8BACX,4BAAQV,KAAK,SAASU,UAAU,4BAA4BiH,QAASioC,IAArE,oBACA,4BAAQ5vC,KAAK,SAASU,UAAS,oCAA/B,qBAEJ,yBAAKA,UAAU,8BACX,4BAAQV,KAAK,SAASU,UAAU,sDAAsDiH,QAASkoC,IAA/F,yBACA,4BAAQ7vC,KAAK,SAASU,UAAU,wCAAwCiH,QAASmoC,IAAjF,4BAzBpB,SE/fjB77B,ICVHqpC,GDUGrpC,GArBf,SAAiB9U,GACb,OACI,yBAAKuB,UAAU,0BACX,yBAAKA,UAAS,2BAAsBvB,EAAMgV,MAA5B,sBAAuDtU,GAAG,mBACpE,yBAAKa,UAAU,aACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,2DAA2DvB,EAAMoM,OAChF,yBAAK7K,UAAU,0CAA0CvB,EAAMiV,OAEnE,yBAAK1T,UAAU,YACX,uBAAGA,UAAS,iBAAYvB,EAAMmM,KAAlB,wBAA8CzL,GAAG,wB,SCA7Ey9C,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,YC+BGC,OAtCf,SAAsBp+C,GAClB,IAAM0E,EAA0BqD,cAC1BC,EAAUC,cAShB,OACI,yBAAK1G,UAAU,2BAA2BiH,QAAS,WATnC,IAACsL,EAAqBgT,EAAsBC,EAAwBC,EAAuBC,EAA1FnT,EAUD9T,EAAM8T,YAVgBgT,EAUH9mB,EAAM8mB,aAVmBC,EAUL/mB,EAAM+mB,eAVuBC,EAUPhnB,EAAMgnB,cAVwBC,EAWnGjnB,EAAMinB,iBATdjf,EAAQI,KAAK,CACTmB,SAFO,wBAGPH,MAAO,CAAE0K,YAAaA,EAAagT,aAAcA,EAAcC,eAAgBA,EAAgBC,cAAeA,EAAeC,iBAAkBA,OAS/I,yBAAK1lB,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,2DAA2DvB,EAAM8T,cAEpF,yBAAKvS,UAAU,WAAWiH,QAAS,SAAC7I,GAChCA,EAAE0+C,kBACFjhD,QAAQC,IAAI,SACZqH,EAASkhB,GAAmD5lB,EAAMwgB,gBAClE9b,EAASL,GAAqB85C,GAAgDp9B,SAE9E,uBAAGxf,UAAS,iBAAYvB,EAAMmM,KAAlB,wBAA8CzL,GAAG,oBCE1E49C,OA1Bf,SAA2Ct+C,GACvC,IAEMu+C,EAFsEp1C,aAAY,SAACC,GAAD,OAAuBA,EAAM2V,oCAEhB4B,UAAUnS,KAAI,SAAC3B,EAAK4B,GACrH,OAAK5B,EAED,kBAAC,GAAD,CACIiH,YAAajH,EAAIiH,YACjB3H,KAAK,OAAO6I,MAAM,UAClB8R,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBC,cAAena,EAAIma,cACnBC,iBAAkBpa,EAAIoa,iBACtBzG,cAAe3T,IATJ,QAevB,OACI,oCACK0xC,ICwGEC,GAzHe,WAC1B,IAAM95C,EAA0BqD,cAC1B02C,EAAsEt1C,aAAY,SAACC,GAAD,OAAuBA,EAAM2V,oCAC/GD,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAC7D4/B,EAA8BD,EAA+B99B,UAAUtf,OACvEs9C,EAAoCF,EAA+Bh+B,iBAAiBpf,OACtFkM,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GATuB,IAYxBoO,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAsCzC,OArCAyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAQbuL,wBAAa+8B,GAA4CxlC,EAAUhE,IACnEyM,wBAAamV,GAAY5d,EAAUhE,QAG5C,CAACgE,EAAUwY,EAAc3Y,EAAe7D,IAQvCib,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KAIH,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,8CAAoB6I,KAAI,UAAKypC,GAAuBvyC,KAAK,OAAO6I,MAAM,YACrF,kBAAC,GAAD,CAAS5I,MAAM,6CAAsB6I,KAAI,UAAK0pC,GAA6BxyC,KAAK,OAAO6I,MAAM,YASjG,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,0BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,+CACA,kBAAC,GAAD,CACIogB,SAlCpB,SAA+C89B,GAC3Cl6C,EAASkhB,GAAmDg5B,IAC5Dl6C,EAASL,GAAqB85C,GAAgDvmC,WAsCtE,yBAAKrW,UAAU,0BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,8BACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,yBAAKA,UAAU,sDACX,uBAAGA,UAAS,qBAAwBb,GAAG,eAE3C,yBAAKa,UAAU,yCACX,wBAAIb,GAAG,aAAuC,IAA1Boe,EAAMG,SAAS5d,OAAe,GAAMyd,EAAMG,SAAS,GAAG4C,UAAY,IAAK/C,EAAMG,SAAS,GAAG6C,WAEjH,yBAAKvgB,UAAU,yCACX,uBAAGb,GAAG,oBAA8C,IAA1Boe,EAAMG,SAAS5d,OAAe,GAAKyd,EAAMG,SAAS,GAAGnZ,WAEnF,yBAAKvE,UAAU,kBACX,uBAAGA,UAAS,qBAAwBb,GAAG,eACvC,uBAAGA,GAAG,SAAmC,IAA1Boe,EAAMG,SAAS5d,OAAe,GAAKyd,EAAMG,SAAS,GAAGgD,QAGxE,yBAAK1gB,UAAU,kBACX,uBAAGA,UAAS,wBAA2Bb,GAAG,eAC1C,uBAAGA,GAAG,SAAmC,IAA1Boe,EAAMG,SAAS5d,OAAe,GAAKyd,EAAMG,SAAS,GAAG2C,eCJzFi9B,OAjHf,SAA8B7+C,GAET+H,cAAjB,IAOIiX,EALmB7V,aAAY,SAACC,GAAD,OAAWA,EAAMq1B,kBAKzBI,cAEvBrgC,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KA0B3ByL,EAAU,CACd,CACEC,UAAW,OACXjL,KAAM,qBACNkL,OAAQC,wBACRC,UAdJ,SAAqBC,EAAMC,EAAKsZ,GAC9B,OACI,2CAAYA,EAAW,KAc3B,CACE3Z,UAAW,aACXjL,KAAM,wCACNoL,UA/BJ,SAAuBC,EAAMC,GAC3B,OACI,8BAAOA,EAAInH,WAAW0lC,WAAW,IAAK,QA+B1C,CACI5+B,UAAW,WACXjL,KAAM,kCACNoL,UA9BN,SAAqBC,EAAMC,GACzB,OACI,8BAAOA,EAAIlH,SAASylC,WAAW,IAAK,SAoD1C,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACE79B,WACEC,KAAkB1iB,KAzBP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aC8BD29B,GAnGiB,WAC5B,IAAMr6C,EAA0BqD,cAC1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzEiqB,EAAqCt1B,aAAY,SAACC,GAAD,OAAuBA,EAAMq1B,kBAE5E9iB,EAAsBC,+BAAtBD,kBAEJrW,EAAiB,GAErBm5B,EAAeI,cAAcrwB,KAAI,SAAC3B,EAAU4B,GACxC,OAAOnJ,EAAK8C,KAAK,CACbyU,GAAIpO,EACJqO,QAAQ,sBAAD,OAAcrO,EAAQ,GAC7BsO,UAAW,IAAIhgB,KAAK8P,EAAIuM,YACxB4D,QAAS,IAAIjgB,KAAK8P,EAAIwM,UACtB4D,UAAU,OAIlB,IAAI1P,EAAO/I,aAAaC,QAAQ,YAC5BwzB,EAAmB,EACV,OAAT1qB,IACA0qB,EAAWvmB,SAASnE,IAIxB,IAAI0O,EAAOzX,aAAaC,QAAQ,cAC5B0U,EAAqB,GACZ,OAAT8C,IACA9C,EAAa8C,GAGjB,IAAIiB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAsCzC,OArCAyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAa0zB,GAAen8B,EAAUuzB,OAG/C,CAACvzB,EAAUuzB,EAAU/a,EAAc3Y,IAEtCnH,QAAQC,IAAI,IAAIN,KAAK,KAAM,EAAG,GAAI,GAAI,KAEtCmQ,qBAAU,WACNxI,EAASqkB,MACTrkB,EAASmQ,GAAkB,WAAM,OAClC,CAAClW,EAAK+V,KAAMhQ,IAGXiX,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI9B,kBAAC,WAAD,KACF,wBAAIxH,UAAU,yBAAyB4X,GACvC,yBAAK5X,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,qCAEJ,yBAAKA,UAAU,aACX,kBAAC,GAAD,YCnHfy9C,I,OAAiC,0BACjCC,GAAkC,0BAClCC,GAAoC,4BAEpCC,GAAiD,yCACjDC,GAAgD,wCAChDl8C,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBAC3Bs9C,GAAwC,gCACxCC,GAAqC,6BCa3C,SAASC,GAAoB76C,EAAehE,GAC/C,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,+BACuDlE,GAAM,CACzD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS66C,GAAoB76C,EAAUhE,OAUlDmE,MAAM,SAAAS,GACHZ,EDhCL,CACH7D,KAAMiB,GACN09C,mBC8BkCl6C,IAC1BZ,EDfL,CAAE7D,KAAMw+C,KCgBHjiD,QAAQC,IAAIiI,EAAKhG,KAAKiqB,SACtBjkB,EAAKhG,KAAKiqB,QAAQ/a,KAAI,SAAC3B,EAAU4B,GAC7B,IAAI4L,EAA2B,CAC3B3Z,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrBC,eAAgB5c,EAAI4c,eACpBzV,MAAOnH,EAAImH,MACX0V,UAAW7c,EAAI6c,UACfC,WAAY9c,EAAI8c,WAChBE,YAAahd,EAAIgd,YACjBC,aAAcjd,EAAIid,aAClBE,WAAYnd,EAAImd,WAChBlD,aAAcja,EAAIia,aAClBE,cAAena,EAAIma,cACnBD,eAAgBla,EAAIka,eACpBlV,MAAOhF,EAAIgF,MACX4tC,eAAgB5yC,EAAI4yC,eACpBC,sBAAuB7yC,EAAI6yC,sBAC3BC,wBAAyB9yC,EAAI8yC,wBAC7B11B,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAIrB,OADA9sB,QAAQC,IAAIgd,GAED3V,EADG,IAAV+J,ED/CjB,SAAiC+wC,GACpC,MAAO,CAAE3+C,KAAMy+C,GAA4BE,mBAAoBA,GC+C3BI,CAAwBvlC,GDxCzD,SAA6BmlC,GAChC,MAAO,CAAE3+C,KAAMm+C,GAAwBQ,mBAAoBA,GC0CvBK,CAAoBxlC,OAG5C3V,EAAS9C,QAEZ8D,OAAM,SAAAtF,GACHsE,EDhET,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UC6DMoD,CAAepD,IACxBhD,QAAQC,IAAI,Y,OCyHbyiD,OAxMf,SAA2B9/C,GACvB,IAAM+/C,EAA0C52C,aAAY,SAACC,GAAD,OAAuBA,EAAMo2C,sBACnF/uB,EAA2BtnB,aAAY,SAACC,GAAD,OAAuBA,EAAMqnB,aACpE6D,EAAyBnrB,aAAY,SAACC,GAAD,OAAuBA,EAAMkrB,YAClExB,EAA6B3pB,aAAY,SAACC,GAAD,OAAuBA,EAAM0pB,cAJd,EAM5B7yB,mBAAS,GANmB,mBAMvDw9C,EANuD,KAM5CC,EAN4C,OAOhCz9C,mBAA8B,IAPE,mBAOvD05B,EAPuD,KAO9CqmB,EAP8C,KAQxDh4C,EAAUC,cAUhBiF,qBAAU,WACN,IAAIwL,GAAKqnC,EAAgBx2B,QAAQloB,OAAS0+C,EAAgBx2B,QAAQloB,OAAS,GAAI,EAE3E2+C,EADM,IAANtnC,EACWqnC,EAAgBx2B,QAGhBw2B,EAAgBx2B,QAAQlG,MAAM,EAAE,IAG9Cq6B,EAAchlC,EAAE,KAClB,CAACqnC,EAAgBx2B,UAEpBnsB,QAAQC,IAAKogD,GA9BiD,MA0ClCx9C,mBAAS,GA1CyB,mBA0CvDkgB,EA1CuD,KA0C/C8/B,EA1C+C,OA2ChChgD,mBAAS,GA3CuB,mBA2CvDigD,EA3CuD,KA2C9CC,EA3C8C,OA4ChClgD,mBAAS,GA5CuB,mBA4CvDmgD,EA5CuD,KA4C9CC,EA5C8C,KAgF9D,OArBAjjD,QAAQC,IAAIs8B,GAsBR,kBAAC,WAAD,KACI,yBAAKp4B,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,sEACX,wBAAIA,UAAU,QAAd,SAAyBo4B,EAAQxZ,QAAO,SAACva,GACzC,MAAoB,KAAhB5F,EAAMY,MACDgF,EAEuB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACxKtiB,EAEF,QACNvE,OARD,sBASA,yBAAKE,UAAU,cACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,QAAhB,kBACA,4BAAQqN,KAAK,OAAOlO,GAAG,OACnBE,MAAOuf,EACPrf,SArDpC,SAAsBnB,GAClBsgD,EAAUtgD,EAAEqB,OAAOJ,SAuDiB6vB,EAAUC,SAASliB,KAAI,SAAC3B,EAAK8B,GACzB,OACI,4BAAQ/N,MAAOiM,EAAInM,IAAKmM,EAAI+B,UAK5C,4BAAQA,KAAK,OAAOlO,GAAG,OAAOa,UAAU,OACpCX,MAAOs/C,EACPp/C,SA7DpC,SAAuBnB,GACnBwgD,EAAWxgD,EAAEqB,OAAOJ,SA+DgB0zB,EAASC,QAAQ/lB,KAAI,SAAC3B,EAAK8B,GACvB,OACI,4BAAQ/N,MAAOiM,EAAInM,IAAKmM,EAAI+B,UAK5C,4BAAQA,KAAK,OAAOlO,GAAG,OAAOa,UAAU,OACpCX,MAAOw/C,EACPt/C,SArEpC,SAAuBnB,GACnB0gD,EAAW1gD,EAAEqB,OAAOJ,SAuEgBkyB,EAAWC,UAAUvkB,KAAI,SAAC3B,EAAK8B,GAC3B,OACI,4BAAQ/N,MAAOiM,EAAInM,IAAKmM,EAAI+B,UAK5C,4BAAQrN,UAAU,0CAA0CV,KAAK,SAAS2H,QAAS,kBAzEnH,WACIpL,QAAQC,IAAI8iB,GACZ/iB,QAAQC,IAAI6iD,GACZ9iD,QAAQC,IAAI+iD,GACZ,IAAIpC,EAAI+B,EAAgBx2B,QAAQpJ,QAAO,SAACtT,EAAK8B,GAAN,YAC/BiO,IAAR/P,GAAqBA,EAAIgd,aAAe1J,GAAUtT,EAAImd,YAAck2B,GAAWrzC,EAAIid,cAAgBs2B,KAG/F1nC,GAAKslC,EAAE38C,OAAU28C,EAAE38C,OAAU,GAAK,EAElC2+C,EADM,IAANtnC,EACWslC,EAGAA,EAAE36B,MAAM,EAAG,IAE1Bq6B,EAAchlC,EAAI,GA0DmG4nC,KAAzF,eAAkH,uBAAG/+C,UAAU,sBAMnJ,yBAAKA,UAAU,YAEPo4B,EAAQxZ,QAAO,SAACva,GACZ,MAAoB,KAAhB5F,EAAMY,MACDgF,EAEuB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACxKtiB,EAEF,QACN4I,KAAI,SAAC3B,EAAK4B,GACX,OACI,yBAAKlN,UAAU,WAAWiH,QAAS,YA/I3C,SAAC6R,GACjB7V,aAAaY,WAAW,aACxBZ,aAAae,QAAQ,YAAa8U,EAAO3Z,GAAGvD,YAE5C6K,EAAQI,KAAK,CACTmB,SAFO,8BA4IuD6I,CAAYvF,KAClD,yBAAKtL,UAAU,8CACX,yBAAKA,UAAU,qCAAoC,yBAAKkH,IAAKoE,EAAI6c,UAAWlQ,MAAM,OAAO9Q,IAAI,MAC7F,wBAAInH,UAAU,QAAQsL,EAAI+B,MAAU,0BAAMrN,UAAU,gCAAgCsL,EAAIma,cAApD,MAA0Ena,EAAIia,aAA9E,MAAmGja,EAAIka,gBAAsB,0BAAMxlB,UAAU,gBAAhB,+CAAqDsL,EAAIgF,MAAzD,cACjK,yBACItQ,UAAU,wCACV,6BAAK,uBAAGA,UAAU,qBAAuB,0BAAMA,UAAU,QAAhB,WAA6BsL,EAAImH,MAAjC,SACzC,yBAAKzS,UAAU,sCACX,yBAAKA,UAAU,YAAW,yBAAKA,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,mCAAmCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,QAAa,0BAAMjY,UAAU,QAAhB,cAQ/U,yBAAKA,UAAU,8CACX,6BACI,wBAAIA,UAAU,cACd,wBAAIA,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,WAAW1yC,KAAK,sBAAsBrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBACxF,0BAAM43C,cAAY,QAAlB,UAIAxjB,MAAMC,KAAKD,MAAOygB,GAAY3kC,QAAQtK,KAAI,SAAC3B,EAAK8B,GAC5C,OACI,wBAAIpN,UAAU,aAAY,uBAAGA,UAAU,YAAYsM,KAAK,sBAAsBrF,QAAS,SAAC7I,GAnJ5H,IAA0B8gD,EAoJc9gD,EAAEiJ,iBApJhB63C,EAqJ+B5zC,EApJrDzP,QAAQC,IAAIojD,GAERT,EADAS,IAAUhD,EACCsC,EAAgBx2B,QAAQlG,MAAY,EAANo9B,GAG9BV,EAAgBx2B,QAAQlG,MAAY,EAANo9B,EAAc,EAANA,EAAU,MA+IF5zC,EAAI,OAI7C,wBAAItL,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,OAAO1yC,KAAK,sBAAsBrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBACpF,0BAAM43C,cAAY,QAAlB,gBCpFrBE,GArGiB,WAC5B,IAAMh8C,EAA0BqD,cAE1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAC3EjH,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAPyB,IAU1BoO,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAUbuL,wBAAaoyC,GAAoB76C,EAAUhE,IAC3CyM,wBAAaqkB,GAAW9sB,IACxByI,wBAAaqnB,GAAU9vB,IACvByI,wBAAa0mB,GAAYnvB,QAGlC,CAACA,EAAUhE,EAAIwc,EAAc3Y,IAEhC2I,qBAAU,WACNxI,EAASmQ,GAAkB,iBAAY,OACxC,CAAClW,EAAK+V,KAAMhQ,IApDmB,MAuDEzE,mBAAS,IAvDX,mBAuD3B4tB,EAvD2B,KAuDfC,EAvDe,KAyDlC,OACInS,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KAKH,yBAAKxH,UAAU,MAAMb,GAAG,cAChB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,2BAAOV,KAAK,OAAOH,GAAG,QAAQa,UAAU,eAAeE,YAAY,mBAAWX,SAAU,SAACC,GACrF+sB,EAAc/sB,EAAMC,OAAOJ,OAC3BxD,QAAQC,IAAIwwB,OAGpB,4BAAQhtB,KAAK,SAASU,UAAU,mBAC5B,uBAAGA,UAAU,sBAMjC,yBAAKA,UAAU,OACX,kBAAC,GAAD,CACIX,MAAOitB,OCxGd8yB,GAAoC,4BACpCC,GAAqC,6BACrCC,GAAuC,+BAEvCC,GAAoD,4CACpDC,GAAmD,2CACnD79C,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBAC3Bi/C,GAA2C,mCAC3CC,GAAwC,gCCJ9C,SAASC,GAAmBx8C,EAAehE,GAC9C,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,4BACmDlE,GAAM,CACtD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASw8C,GAAmBx8C,EAAUhE,OAUjDmE,MAAM,SAAAS,GACHZ,EDhBL,CACH7D,KAAMiB,GACNq/C,sBCckC77C,IAC1BZ,EDCL,CAAE7D,KAAMmgD,KCCH17C,EAAKhG,KAAK8hD,cAAc5yC,KAAI,SAAC3B,EAAU4B,GACnC,IAAIiK,EAAIC,OAAOC,OAAO/L,GAClBgM,EAAIF,OAAOG,KAAKjM,GACpB,OAAO6L,EAAElK,KAAI,SAACuK,EAAYpK,GAEtB,OAAOgK,OAAOC,OAAOG,GAAOvK,KAAI,SAACwK,GAG7B,OADUL,OAAOC,OAAOI,GACbxK,KAAI,SAACyK,GACZ,OAAOA,EAAMzK,KAAI,SAAC0K,GAEd,GADA9b,QAAQC,IAAI6b,GACS,IAAjBA,EAAM7X,OAAa,CACnB,IAAIyN,EAA4B,CAC5BqK,WAAYN,EAAElK,GACdyK,WAAYF,EAAM,GAClBG,SAAUH,EAAM,IAEpBxU,EDfjC,SAAgCy8C,GACnC,MAAO,CAAEtgD,KAAM8/C,GAA2BQ,sBAAuBA,GCcpBE,CAAuBvyC,IAEpC,OAAOoK,oBAO9BxT,OAAM,SAAAtF,GACHsE,EDxCT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UCqCMoD,CAAepD,IACxBhD,QAAQC,IAAI,YC1C5B,IA2GeikD,GA3GmB,WAC9B,IAAM58C,EAA0BqD,cAC1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzE+sC,EAAqDp4C,aAAY,SAACC,GAAD,OAAuBA,EAAMo4C,0BAChGj0C,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAP2B,IAU5BoO,EAAsBC,+BAAtBD,kBAGJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAa+zC,GAAmBx8C,EAAUhE,OAGnD,CAACgE,EAAUwY,EAAc3Y,EAAe7D,IAC3C,IAAI4E,EAAiB,GAuBrB,OAnBAi8C,EAAwBE,qBAAqBjzC,KAAI,SAAC3B,EAAU4B,GAExD,YAAYmO,IAAR/P,GAA6B,OAARA,EACdvH,EAAK8C,KAAK,CACbyU,GAAIpO,EACJqO,QAAQ,YAAD,OAASjQ,EAAIsM,WAAb,iCAAsC1K,EAAQ,GACrDsO,UAAW,IAAIhgB,KAAK8P,EAAIuM,YACxB4D,QAAS,IAAIjgB,KAAK8P,EAAIwM,UACtB4D,UAAU,IAGX,KAGX/P,qBAAU,WACNxI,EAASqkB,MACTrkB,EAASmQ,GAAkB,8BAAkB,OAC9C,CAAClW,EAAK+V,KAAMhQ,IAGXiX,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACH,yBAAKxH,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,aACX,kBAAC,KAAD,CAAmBgY,OAAO,QAAQsE,aAAc,IAAI9gB,KAAQ+gB,cAAe,CACvEC,WAAYzY,EAAM0Y,OAAQ,CACtBtd,GAAI,KACJ+W,QAAS,CAAE7I,KAAM,WACjBqP,SAAU,CAAErP,KAAM,YAClBsP,UAAW,CAAEtP,KAAM,aACnBuP,QAAS,CAAEvP,KAAM,cAIrB,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAeiI,OAAO,WAAWuH,UAAU,QAAQC,QAAQ,UAC3D,kBAAC,KAAD,CAAexH,OAAO,OAAOuH,UAAU,QAAQC,QAAQ,UACvD,kBAAC,KAAD,CAAexH,OAAO,QAAQyH,aAAa,KAE/C,kBAAC,KAAD,CAAQC,SAAU,CAACC,KAAKC,KAAMC,KAAUC,KAAOC,SAhBvD,UCxGX8iC,I,OAA0C,mCAC1CC,GAA2C,mCAC3CC,GAA6C,qCAE7CC,GAA0D,kDAC1DC,GAAyD,iDACzDC,GAAiD,yCACjDC,GAA8C,sCAG9CC,GAAkC,0BAClCC,GAAmC,2BACnCC,GAAqC,6BAErCC,GAAkD,0CAClDC,GAAiD,yCACjDC,GAAyC,iCACzCC,GAAsC,8BAGtCr/C,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBAQjC,SAASuB,GAAiB+W,GAC7B,MAAO,CACHxZ,KAAMiB,GACNuY,UAID,SAAS7W,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAQZ,SAASoiD,KACZ,MAAO,CAAE3hD,KAAMkhD,IAGZ,SAASU,GAA6BpoC,GACzC,MAAO,CAAExZ,KAAM6gD,GAAiCrnC,OAAQA,GCrCrD,SAASqoC,GAAiBh+C,EAAehE,GAC5C,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,2BACkDlE,GAAM,CACrD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASg+C,GAAiBh+C,EAAUhE,OAU/CmE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EDiCL,CAAE7D,KAAMyhD,KChCH59C,EAAS89C,MACTplD,QAAQC,IAAIiI,EAAKhG,KAAKqjD,6BAA6BthD,QACnDiE,EAAKhG,KAAKqjD,6BAA6Bn0C,KAAI,SAAC3B,EAAU4B,GAClD,IAAI4L,EAAwB,CACxB3Z,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVkF,YAAajH,EAAIiH,YACjB+S,UAAWha,EAAIga,UACfqU,cAAeruB,EAAIquB,cACnBjnB,kBAAmBpH,EAAI+1C,iBACvB/zC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrBC,eAAgB5c,EAAI4c,eACpBzV,MAAOnH,EAAImH,MACX0V,UAAW7c,EAAI6c,UACf1C,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBuT,SAAUztB,EAAIytB,SACduoB,sBAAuBh2C,EAAIg2C,uBAI/B,OADAzlD,QAAQC,IAAIgd,GAED3V,EADG,IAAV+J,EDzBjB,SAA0C4L,GAC7C,MAAO,CAAExZ,KAAMmhD,GAAqC3nC,OAAQA,GCyBxByoC,CAAiCzoC,GAGjCooC,GAA6BpoC,OAIrDjd,QAAQC,IAAIiI,EAAKhG,KAAKyjD,qBAAqB1hD,QAC3CiE,EAAKhG,KAAKyjD,qBAAqBv0C,KAAI,SAAC3B,EAAU4B,GAC1C,IAAI4L,EAAwB,CACxB3Z,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVkF,YAAajH,EAAIiH,YACjB+S,UAAWha,EAAIga,UACfqU,cAAeruB,EAAIquB,cACnBjnB,kBAAmBpH,EAAI+1C,iBACvB/zC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrBC,eAAgB5c,EAAI4c,eACpBzV,MAAOnH,EAAImH,MACX0V,UAAW7c,EAAI6c,UACf1C,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBuT,SAAUztB,EAAIytB,SACduoB,sBAAuBh2C,EAAIg2C,uBAI/B,OADAzlD,QAAQC,IAAIgd,GAED3V,EADG,IAAV+J,ED1BjB,SAAkC4L,GACrC,MAAO,CAAExZ,KAAM0hD,GAA6BloC,OAAQA,GC0BhB2oC,CAAyB3oC,GDnB1D,SAA8BA,GACjC,MAAO,CAAExZ,KAAMohD,GAAyB5nC,OAAQA,GCqBZ4oC,CAAqB5oC,UAIhD3U,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,Y,aC8Fb6lD,GArMuB,WAClC,IAAMx+C,EAA0BqD,cAC1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAE/EtH,qBAAU,WACNxI,EAASmQ,GAAkB,mBAAY,OACxC,CAAClW,EAAK+V,KAAMhQ,IANyB,MAQVzE,oBAAS,GARC,mBAQjCoqB,EARiC,KAQxBC,EARwB,KAcxC,IAAMtiB,EAAUC,cAEZsF,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAGT,IAAI41C,EAAO3+C,aAAaC,QAAQ,sBAC5B2+C,EAA6B,GACpB,OAATD,IACAC,EAAqBD,GAGzB,IAAIE,EAAO7+C,aAAaC,QAAQ,eAC5BqP,EAAsB,GACb,OAATuvC,IACAvvC,EAAcuvC,GAGlB,IAAIC,EAAO9+C,aAAaC,QAAQ,gBAC5BqiB,EAAuB,GACd,OAATw8B,IACAx8B,EAAew8B,GAGnB,IAAIC,EAAO/+C,aAAaC,QAAQ,iBAC5BuiB,EAAwB,GACf,OAATu8B,IACAv8B,EAAgBu8B,GAGpB,IAAIC,EAAOh/C,aAAaC,QAAQ,kBAC5BglB,EAAyB,GAChB,OAAT+5B,IACA/5B,EAAiB+5B,GAGrB,IAAIjG,EAAO/4C,aAAaC,QAAQ,YAC5B61B,EAAmB,GACV,OAATijB,IACAjjB,EAAWijB,GAGf,IAAIlhC,EAAO7X,aAAaC,QAAQ,kBAC5BsiB,EAAyB,GAChB,OAAT1K,IACA0K,EAAiB1K,GAGrB,IAAIE,EAAO/X,aAAaC,QAAQ,uBAC5Bg/C,EAA8B,GACrB,OAATlnC,IACAknC,EAAsBlnC,GAG1B,IAAImnC,EAAOl/C,aAAaC,QAAQ,qBAC5BwP,EAA4B,EACnB,OAATyvC,IACAzvC,EAAoBvC,SAASgyC,IAGjC,IAAIC,EAAQn/C,aAAaC,QAAQ,UAC7BO,EAAiB,GAKrB,SAAS4+C,IACL,IAAMj1C,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAC9DlC,SAAUH,IAAMI,SAASC,aAE7BnC,EC3FD,SAASm/C,EAA0Bv+C,EAAWqJ,EAAS6nC,GAC1D,IAAI7wC,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,2BAC8D,CACvDhG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASm/C,EAA0Bv+C,EAAMqJ,EAAK6nC,OAUzD3xC,MAAM,SAAA6T,GACHtb,QAAQC,IAAIqb,GACZgqC,GAAiBh+C,EAAUY,EAAKob,YAChCla,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,wCAAsB5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACrIC,YAAW,WACPyvC,MACD,QAEN9wC,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,2EAA2C5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACxJpC,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aDkDXwmD,CAA0B,CAC/BnjC,WAAYhgB,EACZ85B,oBAAqBvmB,GACtBtF,EAAK6nC,IACRp5C,QAAQC,IAAI,CACRqjB,WAAYhgB,EACZ85B,oBAAqBvmB,IAK7B,SAASuiC,IAELxuC,EAAQI,KADG,YAIf,OAxBc,OAAVu7C,IACA3+C,EAAS2+C,GAwBT,kBAAC,WAAD,KACI,kBAAC,IAAD,MACA,yBAAKpiD,UAAU,uBACX,yBAAKA,UAAU,6BACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,uDACX,uBAAGA,UAAU,sBAAsBkiD,KAG3C,yBAAKliD,UAAU,OACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,YACX,uBAAGA,UAAU,iBAAb,qBAAwCuS,KAGhD,yBAAKvS,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,iBAAb,uBAAwCylB,KAGhD,yBAAKzlB,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,iBAAb,2BAAuCulB,KAG/C,yBAAKvlB,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,iBAAb,0BAAwCwlB,MAKpD,yBAAKxlB,UAAU,qBACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,gBACX,uBAAGA,UAAU,YAAb,uBAAmC+4B,KAG3C,yBAAK/4B,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,YAAb,+BAAsCkoB,OAOlD,WACI,GAAe,iBAAXzkB,EACA,OACI,yBAAKzD,UAAU,yCAAyCb,GAAG,uBACvD,4BAAQa,UAAU,4BAA4Bb,GAAG,6BAA6B8H,QAAS,kBAAMo7C,MACzF,uBAAGriD,UAAU,mBADjB,8BAJhB,KAgBZ,yBAAKA,UAAU,MAAMb,GAAG,uBACpB,yBAAKa,UAAU,oEACX,4BAAQA,UAAU,4BAA4Bb,GAAG,8BAA8B8H,QAAS,WA9JpG8hB,GAAYD,KA+JI,kBAAC,KAAD,CAAY3pB,GAAG,cAAcqI,MAAM,YADvC,yBAOJ,WACI,IAAgB,IAAZshB,EACA,OACI,yBAAK9oB,UAAU,uBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,kBAEJ,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,YAAYuiD,wBAAyB,CAAEC,OAAQX,OARlF,K,sOEcDY,OAlLf,SAA0BhkD,GACxB,IAAM0E,EAA0BqD,cAC1Bk8C,EAAiF96C,aAAY,SAACC,GAAD,OAAuBA,EAAM2V,oCAC5HmlC,EAAuED,EAAmCE,sCACxGltC,EAAqBgtC,EAAmC/sC,oBAAsBinC,GAAgDhnC,OAE9HitC,EADwBj7C,aAAY,SAACC,GAAD,OAAuBA,EAAMmgB,WACjCA,QAEhCmS,EAAyB,GAC/B0oB,EAAW51C,KAAI,SAAC3B,GACZ,IAAIiF,EAAgB,CAAE,KAAQjF,EAAI+B,KAAM,MAAS/B,EAAInM,IACrD,OAAOg7B,EAAYtzB,KAAK0J,MAE5B1U,QAAQC,IAAIq+B,GACPwoB,IAAiCjtC,IACpCitC,EAAgC,CAAExjD,GAAI,EAAGggB,WAAY,EAAEkG,aAAc,GAAID,YAAa,EAAGE,UAAW,EAAG/S,YAAa,GAAIgT,aAAc,GAAIC,eAAgB,GAAIC,cAAe,GAAIC,iBAAkB,GAAIjiB,OAAQ,qBAfpJ,MAkB3B/E,mBAAS,CACzCygB,WAAY,CAAEtgB,MAAO,GAAIQ,MAAOsjD,EAA8BxjC,YAC9DmG,UAAW,CAAEzmB,MAAO,GAAIQ,MAAOsjD,EAA8Br9B,WAC7DI,iBAAkB,CAAE7mB,MAAO,GAAIQ,MAAOsjD,EAA8Bj9B,kBACpEjiB,OAAQ,CAAE5E,MAAO,GAAIQ,MAAOsjD,EAA8Bl/C,UAtBC,mBAkBtDkD,EAlBsD,KAkB3CC,EAlB2C,mDA+B7D,WAAwBxI,GAAxB,oBAAAw+B,EAAA,yDACEx+B,EAAEiJ,kBACEL,IAFN,oDAKQ7H,EAAK8F,IAAMqC,QAAQ,sGAAmD,CAC1ElC,SAAUH,IAAMI,SAASC,aAG3B7G,EAAMqX,SAAQ,IAEViW,EAAwBrW,EAAYqP,GAAgDJ,MAErEI,GAbrB,iCAcoBmvB,IAdpB,OAcQC,EAdR,OAeI79B,EAAS3P,EAAWolB,EAAYooB,EAAKh1C,GAfzC,wBAkBImX,EAAS3P,EAAWolB,EAAYioB,EAAS70C,GAlB7C,6CA/B6D,sBAqD7D,SAASmX,EAAS3P,EAA2CoP,EAAkBo+B,EAAa/mC,GACtFu1C,IAGAx/C,EADE4S,IAAWgP,GCxEd,SAAS+9B,EAAgB7jC,EAAoB7R,GAChD,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9CrH,QAAQC,IAAImjB,GACZ,IAAIjT,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAK,EAIT,OAHa,OAAT6M,IACA7M,EAAKgR,SAASnE,IAEX,SAAC7I,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,2BAC8D,CACvDhG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAU0iB,KAG5B3b,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS2/C,EAAgB7jC,EAAe7R,OAUnD9J,MAAM,SAAAS,GACHZ,EAAS0kC,GAAa,CAClBx6B,KAAK,uEACLC,YAAY,wFACbnO,IACH8F,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,4CAA0B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACzIpC,EAASpB,GAAiBkd,IAC1B0pB,GAA4CxlC,EAAU8b,EAAcE,YACpEtjB,QAAQC,IAAIiI,MAEfI,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,qDAAgC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC7I1J,QAAQC,IAAI,aDyBXgnD,CAAgB,CACrB3jC,WAAYlc,aAAaC,QAAQ,MACjCoiB,UAAW3e,EAAU2e,UAAUjmB,MAC/BqmB,iBAAkByuB,EAClB1wC,OAAQ,oBACT2J,GE/EJ,SAAS21C,EAAwB5jD,EAAS8f,EAAoB7R,GACjE,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,mCAC8DlE,GAAM,CAC7D9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAU0iB,KAG5B3b,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS4/C,EAAwB5jD,EAAI8f,EAAe7R,OAU/D9J,MAAM,SAAAS,GACHkB,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,4CAA0B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACzIpC,EAASpB,GAAiBkd,IAC1B0pB,GAA4CxlC,EAAU8b,EAAcE,YACpEtjB,QAAQC,IAAIiI,MAEfI,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,qDAAgC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC7I1J,QAAQC,IAAI,aF2CXinD,CAAwBJ,EAA8BxjD,GAAI,CAC/DggB,WAAYlc,aAAaC,QAAQ,MACjCoiB,UAAW3e,EAAU2e,UAAUjmB,MAC/BqmB,iBAAkByuB,EAClB1wC,OAAQ,oBACT2J,IAGLvR,QAAQC,IAAIia,GAEZ5S,EAAS6hB,MACT7hB,EAASL,GAAqB85C,GAAgDvmC,QAclF,SAASrP,IACP,OAAQL,EAAU2e,UAAUzmB,QACtB8H,EAAU2e,UAAUjmB,MA5FiC,MA+FnCX,qBA/FmC,mBA+FtD01C,EA/FsD,KA+F/CC,EA/F+C,cA+G5CH,IA/G4C,6EA+G3D,iCAAAtX,EAAA,6DACU0X,EAAW,IAAIC,UACZC,OACL,UACAJ,EAAMK,eAJd,SAOsBrxC,MAAM,GAAD,OAChBC,+BADgB,oBACiC,CAChDhG,OAAQ,OACRU,KAAMu2C,IAVlB,cAOU32C,EAPV,gBAauBA,EAAImG,OAb3B,cAaUC,EAbV,yBAcWA,EAAK2wC,WAdhB,4CA/G2D,sBA6G3D74C,QAAQC,IAAIs4C,GAoBZ,IAjI2D,EAmI7B11C,mBAFlB,yFAjI+C,mBAmIpDs1C,EAnIoD,KAmI3CC,EAnI2C,KA0I7D,OANEtoC,qBAAU,YACS,IAAb+J,GAAwD,OAAlCitC,GACxB1O,EAAW0O,EAA8Bj9B,oBAE1C,CAAChQ,EAAUitC,IAGd,kBAAC,WAAD,KACE,yBAAK3iD,UAAU,iBACf,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,kCAAkCb,GAAG,6BAA8BuW,EAAW,uBAAY,aAAxG,2BAEF,yBAAK1V,UAAU,aACb,0BAAMoH,SAnJ6C,6CAoJjD,yBAAKpH,UAAU,cACT,kBAAC,GAAD,CAAgBb,GAAG,kBACjBY,MAAQ,YACRV,MAAOsH,EAAU2e,UAAUjmB,MAC3BE,SA/HpB,SAA6BwH,GAC3BH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UAE/ExD,QAAQC,IAAI6K,EAAU2e,YA6HJ1lB,UAAU,EACVR,MAAM,mBACNnC,QAASk9B,KAGf,yBAAKn6B,UAAU,YACC,yBAAKA,UAAU,uBACX,2BAAOd,QAAQ,iBAAf,4DACA,2BAAOI,KAAK,OAAOH,GAAG,gBAAgBkO,KAAK,gBAAgB9N,SAhErE,SAACnB,GACnBi2C,EAAS,CAILM,eAAiBC,IAAIC,gBAAgBz2C,EAAEqB,OAAOijB,MAAM,IAEpD+xB,cAAgBr2C,EAAEqB,OAAOijB,MAAM,KAEnCuxB,EAAWW,IAAIC,gBAAgBz2C,EAAEqB,OAAOijB,MAAM,SAyDtB,yBAAK1iB,UAAU,uBACX,yBAAKkH,IAAK8sC,EAAS7sC,IAAI,UAAUhI,GAAG,aAG1D,4BAAQa,UAAU,iBAAiBiH,QAAS,kBAtFtDxI,EAAMqX,SAAQ,QACd3S,EAASL,GAAqB85C,GAAgDvmC,SAqFpE,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCAlFlBgH,IACN,WAAa,KAiFpB,mBG/ICg8C,OApCf,SAA0BvkD,GACtB,IAEMu+C,EAFsEp1C,aAAY,SAACC,GAAD,OAAuBA,EAAM2V,oCAEhB4B,UAAUnS,KAAI,SAAC3B,EAAK4B,GACrH,OAAK5B,EAED,wBAAItL,UAAS,YAAe4Q,IAAG,yBAAoB1D,IACnD,kBAAC,GAAD,CACIqF,YAAajH,EAAIiH,YACjB3H,KAAK,OAAO6I,MAAM,UAClB8R,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBC,cAAena,EAAIma,cACnBC,iBAAkBpa,EAAIoa,iBACtBzG,cAAe3T,KAVJ,QAiBvB,OACK,yBAAKtL,UAAU,4BAClB,2BAAOA,UAAU,SACf,2BAAOA,UAAU,eACf,8BAGF,+BACCg9C,MCUMiG,IChCHC,GDgCGD,GAvCf,SAAwCxkD,GACpC,IAEMu+C,EAFsEp1C,aAAY,SAACC,GAAD,OAAuBA,EAAM2V,oCAEhB0B,iBAAiBjS,KAAI,SAAC3B,EAAK4B,GAC5H,OAAK5B,EAED,kBAAC,GAAD,CACIiH,YAAajH,EAAIiH,YACjB3H,KAAK,OAAO6I,MAAM,UAClB8R,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBC,cAAena,EAAIma,cACnBC,iBAAkBpa,EAAIoa,iBACtBzG,cAAe3T,IATJ,QAevB,OACI,oCAGiE,IAAjD0xC,EAAsCl9C,OAElC,yBAAKE,UAAU,4BACX,uBAAGb,GAAG,6BAAN,sCAKD69C,IEqIhBmG,GA3JgB,WAC3B,IAAMhgD,EAA0BqD,cAC1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzEiqC,EAAsEt1C,aAAY,SAACC,GAAD,OAAuBA,EAAM2V,oCAC/G2/B,EAA8BD,EAA+B99B,UAAUtf,OACvEs9C,EAAoCF,EAA+Bh+B,iBAAiBpf,OACpFsjD,EAAiClG,EAA+BmG,aAAavjD,OANlD,EAOPpB,oBAAS,GAPF,mBAO1BonB,EAP0B,KAOnBC,EAPmB,KAQ7B/Z,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAXwB,IAczBoO,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAiCzC,SAASogD,EAAsCjG,GAC3Cl6C,EAASkhB,GAAmDg5B,IAC5Dl6C,EAASL,GAAqB85C,GAAgDvmC,OAGlF,SAAS6P,EAAc7mB,GACnB0mB,GAAS,GAkBb,OAxDApa,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAQbuL,wBAAa+8B,GAA4CxlC,EAAUhE,IACnEyM,wBAAamc,GAAU5kB,QAGhC,CAACA,EAAUhE,EAAIwc,EAAc3Y,IAehC2I,qBAAU,WACFuxC,EAA+BvnC,oBAAsBinC,GAAgDp9B,MACrGuG,GAAS,KAEd,CAACm3B,EAA+BvnC,kBAAmBmQ,IAEtDna,qBAAU,WACNxI,EAASmQ,GAAkB,wBAAY,OACxC,CAAClW,EAAK+V,KAAMhQ,IAIXiX,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KAGH,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,8CAAoB6I,KAAI,UAAKypC,GAAuBvyC,KAAK,OAAO6I,MAAM,YACrF,kBAAC,GAAD,CAAS5I,MAAM,6CAAsB6I,KAAI,UAAK0pC,GAA6BxyC,KAAK,OAAO6I,MAAM,WAC7F,kBAAC,GAAD,CAAS5I,MAAM,gEAA4B6I,KAAI,UAAK0vC,GAA0Bx4C,KAAK,OAAO6I,MAAM,YASpG,kBAAC,IAAD,MACA,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,4BACX,4BAAQA,UAAU,4BAA4Bb,GAAG,2BAA2B8H,QAAS,WAE7E9D,EAASL,GAAqB85C,GAAgDhnC,SA5ClGmQ,GAAS,KA+CO,uBAAG/lB,UAAU,mBALjB,gDAUR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,0BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,+CACA,kBAAC,GAAD,CACIogB,SAAU+jC,KAMlB,yBAAKtjD,UAAU,0BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,kEACA,kBAAC,GAAD,CACIogB,SAAU+jC,MAOtB,kBAAC,KAAD,CACIrlD,KAAM6nB,EACN3J,QAAS,WACL4J,GAAS,GACT5iB,EAASL,GAAqB85C,GAAgDvmC,QAElF+F,sBAAoB,GAEpB,oCAEQ,WACI,GAAK8gC,EAA+BvnC,oBAAsBinC,GAAgDhnC,QAAasnC,EAA+BvnC,oBAAsBinC,GAAgDp9B,KACxN,OAAO,kBAAC,GAAD,CAAkB1J,QAASoQ,IAF1C,OCrGTq9B,GA9CsB,WACjC,IAAMpgD,EAA0BqD,cAC1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAEvEpL,EAAUohB,cAAVphB,MACJ9D,EAA2B,CAC3BwhB,aAAc,GACdC,eAAgB,GAChBC,cAAe,GACflT,YAAa,GACbmT,iBAAkB,IAWtB,YATcrK,IAAVxT,GAAiC,OAAVA,IACvB9D,EAAO8D,GAGX8D,qBAAU,WACNxI,EAAS6hB,MACT7hB,EAASmQ,GAAkB,6CAAoB,oBAChD,CAAClW,EAAK+V,KAAMhQ,IAGX,kBAAC,WAAD,KACI,yBAAKnD,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,yCACX,wBAAIb,GAAG,aAAa4E,EAAKwO,cAG7B,yBAAKvS,UAAU,OACX,uBAAGA,UAAU,QAAQb,GAAG,qBAAoB,0BAAMa,UAAU,8BAAhB,uBAA5C,IAA0G,0BAAMA,UAAU,oCAAoC+D,EAAK0hB,gBACnK,uBAAGzlB,UAAU,QAAQb,GAAG,sBAAqB,0BAAMa,UAAU,8BAAhB,0BAA7C,IAA2G,0BAAMA,UAAU,oCAAoC+D,EAAKyhB,iBACpK,uBAAGxlB,UAAU,QAAQb,GAAG,oBAAmB,0BAAMa,UAAU,8BAAhB,2BAA3C,IAAwG,0BAAMA,UAAU,oCAAoC+D,EAAKwhB,gBAErK,yBAAKvlB,UAAU,8BACX,yBAAKkH,IAAKnD,EAAK2hB,iBAAkBve,IAAI,kBChDpDq8C,GAA0B,kBAC1BC,GAA2B,mBAC3BC,GAA6B,qBAE7BC,GAA0C,kCAC1CC,GAAyC,iCACzCC,GAAiC,yBACjCC,GAA8B,sBAG9BC,GAAyB,iBACzBC,GAA0B,kBAC1BC,GAA4B,oBAE5BC,GAAyC,iCACzCC,GAAwC,gCACxCC,GAAgC,wBAChCC,GAA6B,qBAG7B1iD,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,oB,SHR5B0iD,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,YICL,SAASoB,GAAgBnhD,EAAehE,GAC3C,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,4BACmDlE,GAAM,CACtD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASmhD,GAAgBnhD,EAAUhE,OAU9CmE,MAAM,SAAAS,GACHZ,EDbL,CACH7D,KAAMiB,GACNgkD,cCWkCxgD,IAC1BZ,EDIL,CAAE7D,KAAMukD,KCHH1gD,EDgCL,CAAE7D,KAAM8kD,KC/BHvoD,QAAQC,IAAIiI,EAAKhG,KAAKymD,cACtB3oD,QAAQC,IAAIiI,EAAKhG,KAAK0mD,eACtB1gD,EAAKhG,KAAKymD,aAAav3C,KAAI,SAAC3B,EAAU4B,GAClC,IAAIq3C,EAA8B,CAC9BplD,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACViY,UAAWha,EAAIga,UACfqU,cAAeruB,EAAIquB,cACnBjnB,kBAAmBpH,EAAIoH,kBACvBL,SAAU/G,EAAI+G,SACd4kB,6BAA8B3rB,EAAI2rB,6BAClCD,cAAe1rB,EAAI0rB,cACnB0tB,cAAep5C,EAAIo5C,cACnBx8B,eAAgB5c,EAAI4c,eACpB6Q,SAAUztB,EAAIytB,SACdxmB,YAAajH,EAAIiH,YACjBgT,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBC,cAAena,EAAIma,eAGvB,OADA5pB,QAAQC,IAAIyoD,GAEDphD,EADG,IAAV+J,EDKjB,SAA0Bq3C,GAC7B,MAAO,CAAEjlD,KAAM+kD,GAAoBE,cAAeA,GCLdI,CAAiBJ,GDYlD,SAAsBA,GACzB,MAAO,CAAEjlD,KAAMykD,GAAgBQ,cAAeA,GCVVK,CAAaL,OAIrCxgD,EAAKhG,KAAK0mD,cAAcx3C,KAAI,SAAC3B,EAAU4B,GACnC,IAAIq3C,EAA8B,CAC9BplD,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVgF,SAAU/G,EAAI+G,SACdiT,UAAWha,EAAIga,UACfqU,cAAeruB,EAAIquB,cACnBjnB,kBAAmBpH,EAAIoH,kBACvBukB,6BAA8B3rB,EAAI2rB,6BAClCD,cAAe1rB,EAAI0rB,cACnB0tB,cAAep5C,EAAIo5C,cACnBx8B,eAAgB5c,EAAI4c,eACpB6Q,SAAUztB,EAAIytB,SACdxmB,YAAajH,EAAIiH,YACjBgT,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBC,cAAena,EAAIma,eAGvB,OADA5pB,QAAQC,IAAIyoD,GAEDphD,EADG,IAAV+J,EDnDjB,SAA4Bq3C,GAC/B,MAAO,CAAEjlD,KAAMwkD,GAAqBS,cAAeA,GCmDfM,CAAmBN,GD5CpD,SAAwBA,GAC3B,MAAO,CAAEjlD,KAAMkkD,GAAiBe,cAAeA,GC8CXO,CAAeP,UAI1CpgD,OAAM,SAAAtF,GACHsE,EDnET,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UCgEMoD,CAAepD,IACxBhD,QAAQC,IAAI,YCsDbipD,OAzJf,SAA+BtmD,GAEV+H,cAAjB,IAEMw+C,EAAiBp9C,aAAY,SAACC,GAAD,OAAWA,EAAMm9C,kBAE9Cv+C,EAAUC,cAGVmK,EAAc,SAAC0zC,GAEjBthD,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAYugD,EAAcplD,GAAGvD,YAClDqH,aAAaY,WAAW,aACxBZ,aAAae,QAAQ,YAAa,SAClCyC,EAAQI,KAAK,CACXmB,SANS,kBAOTH,MAAO,CAAE6uB,SAAU6tB,EAAcplD,OAKnCw3B,EAAoB,SAACD,EAAU9e,GACnC3U,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAY0yB,EAAS96B,YAC1CqH,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAc4T,GAEnCnR,EAAQI,KAAK,CACXmB,SAFS,kBAGTH,MAAO,CAAE6uB,SAAUA,MAKjBjZ,EAAQunC,EAAeC,YAEvBhoD,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KA0B3ByL,EAAU,CACd,CACEC,UAAW,OACXjL,KAAM,SACNkL,OAAQC,yBAEV,CACIF,UAAW,cACXjL,KAAM,8BACNkL,OAAQC,yBAEV,CACEF,UAAW,gBACXjL,KAAM,wBACNkL,OAAQC,yBAEV,CACEF,UAAW,iBACXjL,KAAM,6BACNkL,OAAQC,yBAEZ,CACEF,UAAW,GACXjL,KAAM,qBACNoL,UA5CJ,SAA4BC,EAAMC,GAChC,OACI,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACpDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClC2X,EAAkB3X,EAAI7f,GAAI6f,EAAI3R,QAFlC,mBA4CJ,CACEsR,UAAW,GACXjL,KAAM,yBACNoL,UAxCJ,SAA2BC,EAAMC,GAC/B,OACI,4BAAQ1f,KAAK,SAASU,UAAU,eAAeiH,QAAS,WACjDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClCnO,EAAYmO,KAFhB,sBA8DN,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACEU,WACEC,KAAkB1iB,KAzBP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aCADqlC,OAhIf,SAA6BzmD,GAER+H,cAAjB,IAEMw+C,EAAiBp9C,aAAY,SAACC,GAAD,OAAWA,EAAMm9C,kBAE9Cv+C,EAAUC,cAGVmK,EAAc,SAAC0zC,GAEjBthD,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAYugD,EAAcplD,GAAGvD,YAClDqH,aAAaY,WAAW,aACxBZ,aAAae,QAAQ,YAAa,QAClCyC,EAAQI,KAAK,CACXmB,SANS,sBAOTH,MAAO,CAAE6uB,SAAU6tB,EAAcplD,OAMnCse,EAAQunC,EAAeG,WAEvBloD,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KAkB3ByL,EAAU,CACd,CACEC,UAAW,OACXjL,KAAM,SACNkL,OAAQC,yBAEV,CACIF,UAAW,cACXjL,KAAM,8BACNkL,OAAQC,yBAEV,CACEF,UAAW,gBACXjL,KAAM,wBACNkL,OAAQC,yBAEV,CACEF,UAAW,iBACXjL,KAAM,6BACNkL,OAAQC,yBAEZ,CACEF,UAAW,GACXjL,KAAM,yBACNoL,UAnCJ,SAA2BC,EAAMC,GAC/B,OACI,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACpDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GAClCnO,EAAYmO,KAFhB,oBAyDN,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACEU,WACEC,KAAkB1iB,KAzBP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aCmFDulC,GA9KgB,WAC3B,IAAMjiD,EAA0BqD,cAC1Bw+C,EAAqCp9C,aAAY,SAACC,GAAD,OAAuBA,EAAMm9C,kBAC9E5nD,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzEoyC,EAAgCL,EAAeC,YAAYnlD,OAC3DwlD,EAA+BN,EAAeG,WAAWrlD,OAC3DkM,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GATwB,IAWzBoO,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAyCzC,SAASqiD,EAAqBhB,GJ4B3B,IAA8BllD,EI3B7B8D,EJVD,SAAmCohD,GACtC,MAAO,CAAEjlD,KAAMqkD,GAAiCY,cAAeA,GISlDiB,CAA0BjB,IACnCphD,GJ0B6B9D,EI1BC6jD,GAA+B7sC,KJ2B1D,CAAE/W,KAAMqC,GAAwBtC,MAAOA,KIrE9CsM,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAUbuL,wBAAamV,GAAY5d,EAAUhE,IACnCyM,wBAAa04C,GAAgBnhD,EAAShE,IACtCyM,wBAAamc,GAAU5kB,IACvByI,wBAAakf,GAAY3nB,QAGlC,CAACA,EAAUhE,EAAIwc,EAAc3Y,IAEhC2I,qBAAU,WACNxI,EAASmQ,GAAkB,mBAAY,OACxC,CAACnQ,EAAU/F,EAAK+V,OArDc,MA4DHzU,oBAAS,GA5DN,mBA4D1BoqB,EA5D0B,KA4DjBC,EA5DiB,KA6DjC,OACI3O,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KAIH,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,sCAAkB6I,KAAI,UAAK2xC,GAAyBz6C,KAAK,OAAO6I,MAAM,YACrF,kBAAC,GAAD,CAAS5I,MAAM,uCAAgB6I,KAAI,UAAK4xC,GAAwB16C,KAAK,OAAO6I,MAAM,aAUtF,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,WAAW8H,QAAS,YACxC,IAAZ6hB,GACAC,GAAW,IAEhBxhB,MAAO,CACNC,MAAOshB,EAAU,UAAY,YALjC,sBAOA,yBAAKvhB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBnB,EAAU,UAAY,cAG/C,yBAAK9oB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACzC,IAAZ6hB,GACAC,GAAW,IAGfxhB,MAAO,CACHC,MAAOshB,EAAU,UAAY,YANrC,uBAQA,yBAAKvhB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBnB,EAAU,UAAY,gBAQ3B,IAAZA,EAEI,kBAAC,WAAD,KACI,yBAAK9oB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,0BAEJ,yBAAKa,UAAU,aACX,kBAAC,GAAD,CACIuf,SAAUgmC,SAWlC,kBAAC,WAAD,KACI,yBAAKvlD,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,0BAEJ,yBAAKa,UAAU,aACX,kBAAC,GAAD,CACIuf,SAAUgmC,W,sOC9C/CE,OApHf,SAAkChnD,GAC9B,IAAM0E,EAA0BqD,cAC1BwG,EAAoDpF,aAAY,SAACC,GAAD,OAAuBA,EAAM2N,2BAC/FrI,EAA8CH,EAAcyI,8BAC1DC,EAAqB1I,EAAc2I,oBAAsBnC,GAAwCoC,OAElGzI,IAAgBuI,IACjBvI,EAAe,CAAEhO,GAAI,EAAGkO,KAAM,GAAIC,YAAa,GAAIC,KAAM,KAPM,MAUjC7O,mBAAS,CACvC2O,KAAM,CAAExO,MAAO,GAAIQ,MAAO8N,EAAaE,MACvCC,YAAa,CAAEzO,MAAO,GAAIQ,MAAO8N,EAAaG,aAC9CuI,UAAW,CAAEhX,MAAO,GAAIQ,MAAO,4BAbgC,mBAU5DsH,EAV4D,KAUjDC,EAViD,KAgBnE,SAASE,EAAoBC,GACzBH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UAqDnF,SAAS2H,IACL,OAAQL,EAAU0G,KAAKxO,QAAU8H,EAAU0G,KAAKhO,MAGpD,OACI,kBAAC,WAAD,KACI,yBAAKW,UAAU,iBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAoC0V,EAAW,WAAQ,WAArE,4BAEJ,yBAAK1V,UAAU,aACX,0BAAMoH,SA7D9B,SAAkBhJ,GACdA,EAAEiJ,iBACEL,MAGJvI,EAAMqX,SAAQ,GAKlB,SAAkBnP,EAA4CoP,GAC1D,GAAI5I,EAAc,CACd,IAAMhO,EAAK8F,IAAMqC,QAAQ,wFAAsD,CAC3ElC,SAAUH,IAAMI,SAASC,aAE7B,GAAIyQ,IAAW7B,GAA0B,CACrC,QAAmBmH,IAAf5c,EAAMsF,MAAqC,OAAftF,EAAMsF,KAClC,OAGAZ,ECvDb,SAASuiD,EAAwBvmD,EAAQ4E,EAAWqJ,GACvD,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACEC,+BADF,4BACmDlE,GAAM,CAC1D9B,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAGpBT,MAAK,SAAAC,GACF,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASuiD,EAAwBvmD,EAAG4E,EAAMqJ,OAUrD9J,MAAK,SAAAS,GACFkB,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,4CAA4B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC3I1J,QAAQC,IAAIiI,MAEfI,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,qDAAkC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC/I1J,QAAQC,IAAI,aDmBC4pD,CAAwBjnD,EAAMsF,KAAK2yB,SAAS,CACjDrpB,KAAM1G,EAAU0G,KAAKhO,MACrBiO,YAAa3G,EAAU2G,YAAYjO,OACpCF,IAEHtD,QAAQC,IAAI,CACRuR,KAAM1G,EAAU0G,KAAKhO,MACrBiO,YAAa3G,EAAU2G,YAAYjO,MACnCwW,UAAWpX,EAAMsF,KAAK2yB,WAKlCvzB,EAASkR,MACTlR,EAASmR,GAA0Cd,GAAwC6C,QA3B/FC,CAAS3P,EADmB+O,EAAYxB,GAA2BE,OAwD3C,yBAAKpU,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAOsH,EAAU0G,KAAKhO,MACtBU,MAAM,OACNR,SAAUuH,EACVlH,UAAU,EACVC,UAAW,GACXT,MAAM,SACNc,YAAY,MAEpB,yBAAKF,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,oBACVY,MAAM,cACNV,MAAOsH,EAAU2G,YAAYjO,MAC7BE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,kBACNc,YAAY,MAGpB,4BAAQF,UAAU,iBAAiBiH,QAAS,kBA5CpExI,EAAMqX,SAAQ,QACd3S,EAASmR,GAA0Cd,GAAwC6C,SA2CnE,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCAxChCgH,IACN,WAAa,KAuCN,mBE/CjBoiB,OAvEf,WAEI,IAAMC,EAAuBzhB,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAChE9W,EAAUC,cAEZsF,EAAO/I,aAAaC,QAAQ,aAC5ByiD,GAAY,EACH,OAAT35C,IAEI25C,EADS,SAAT35C,GASR,IAeMuyB,EAA0ClV,EAASA,SAASpc,KAAI,SAACuxB,EAASpxB,GAC5E,OAAKoxB,EACG,wBAAIx+B,UAAS,oBAAgBqpB,EAASnI,cAAgBmI,EAASnI,aAAa/hB,KAAOq/B,EAAQr/B,GAAM,WAAa,IAClHyR,IAAG,kBAAaxD,GAAOnG,QAAS,YAlBpB,SAACkL,EAAoByzC,GAKrC,GAJA3iD,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAcmO,EAAWvW,YAC9CqH,aAAaY,WAAW,aACxBZ,aAAae,QAAQ,YAAa4hD,EAAUhqD,aAC1B,IAAd+pD,EAAoB,CAEpBl/C,EAAQI,KADG,2BAET,CAEFJ,EAAQI,KADG,oBAS4BgK,CAAY2tB,EAAQr/B,GAAIq/B,EAAQ5d,WACvE,yBAAK5gB,UAAU,4BACf,yBAAKA,UAAS,iDAAoDb,GAAG,gBACjE,yBAAKa,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,OACX,uBAAGA,UAAU,SAAQ,0BAAMA,UAAU,6BAA6Bb,GAAG,+BAA+BiO,EAAM,IAC1G,uBAAGpN,UAAS,iCAAoCb,GAAG,cACnD,uBAAGa,UAAU,QAAOb,GAAG,qBAAoB,0BAAMa,UAAU,8BAA8Bw+B,EAAQj6B,kBAXlG,QAsB3B,OACI,yBAAKvE,UAAU,4BACX,2BAAOA,UAAU,SACb,2BAAOA,UAAU,eACb,8BAGJ,+BACKu+B,MCyGNsnB,GAzJsB,WACjC,IAAM1iD,EAA0BqD,cAC1B02C,EAAsEt1C,aAAY,SAACC,GAAD,OAAuBA,EAAM2V,oCAC/GhI,EAA8D5N,aAAY,SAACC,GAAD,OAAuBA,EAAM2N,2BAC7G3Z,QAAQC,IAAIohD,GACZ,IAAM9/C,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAEzEwH,EADuB7S,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SACzB8L,SAASvpB,OAClDkM,EAAO/I,aAAaC,QAAQ,YAC5BwzB,EAAmB,EACV,OAAT1qB,IACA0qB,EAAWvmB,SAASnE,IAXe,IAc/BoO,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WAEN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAQb8C,EAASmhB,MACT1Y,wBAAa0zB,GAAen8B,EAAUuzB,QAG/C,CAACvzB,EAAUuzB,EAAU/a,EAAc3Y,IAEtC2I,qBAAU,WACNxI,EAASmQ,GAAkB,WAAO,oBACnC,CAACnQ,EAAU/F,EAAK+V,OArDoB,MAwDXzU,oBAAS,GAxDE,mBAwDhC4b,EAxDgC,KAwDxBC,EAxDwB,KA+DvC,SAASC,EAAenb,GACpBkb,GAAU,GAGd,IAAM9T,EAAUC,cAQhB,OACI0T,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KAGH,kBAAC,IAAD,MACA,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,wCAAiB6I,KAAI,UAAK+G,GAAuB7P,KAAK,OAAO6I,MAAM,YAClF,kBAAC,GAAD,CAAS5I,MAAM,wBAAc6I,KAAI,UAAK+G,GAAuB7P,KAAK,OAAO6I,MAAM,WAC/E,yBAAKzT,UAAU,yBAAyBb,GAAG,uCACvC,4BACIa,UAAU,4BACVb,GAAG,2BACH8H,QAAS,WACL9D,EAASmR,GAA0Cd,GAAwCoC,SAtC/G2E,GAAU,KA0CM,uBAAGva,UAAU,mBARjB,8BAcR,kBAAC,KAAD,CACI/B,KAAMqc,EACN6B,QAAS,kBAAM5B,GAAU,IACzB6B,sBAAoB,GAEpB,oCAEQ,WACI,GAAK5G,EAAwBG,oBAAsBnC,GAAwCoC,OACvF,OAAO,kBAAC,GAAD,CAA0BE,QAAS0E,EAAgBzW,KAAM2yB,IAFxE,KASZ,yBAAK12B,UAAU,OAEX,yBAAKA,UAAU,0BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,8BACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,kBAAC,GAAD,UAMhB,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,8BACX,4BAAQA,UAAU,4BAA4Bb,GAAG,iBAAiB8H,QAAS,WApE3FR,EAAQI,KAAK,CACTmB,SAFO,0BAGPH,MAAO,CAAC6uB,SAAUA,OAkEN,kBAGI,uBAAG12B,UAAU,gCC9J5B8lD,I,OAAsC,+BACtCC,GAAuC,+BACvCC,GAAyC,iCAEzCC,GAAsD,8CACtDC,GAAqD,6CACrDC,GAA6C,qCAC7CC,GAA0C,kCAG1CC,GAAuD,+CACvDC,GAAwD,gDACxDC,GAA0D,kDAE1DC,GAAuE,+DACvEC,GAAsE,8DACtEC,GAA8D,sDAC9DC,GAA2D,mDAG3DC,GAAkC,0BAClCC,GAAmC,2BACnCC,GAAqC,6BAErCC,GAAkD,0CAClDC,GAAiD,yCACjDC,GAAyC,iCACzCC,GAAsC,8BAGtCC,GAA2C,mCAC3CC,GAA4C,oCAC5CC,GAA8C,sCAE9CC,GAA2D,mDAC3DC,GAA0D,kDAC1DC,GAAkD,0CAClDC,GAA+C,uCAE/C9lD,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBAQjC,SAASuB,GAAiB4X,GAC7B,MAAO,CACHra,KAAMiB,GACNoZ,WAID,SAAS1X,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAKZ,SAAS6oD,GAA6B/tC,GACzC,MAAO,CAAEra,KAAM8mD,GAAiCzsC,QAASA,GAGtD,SAASguC,KACZ,MAAO,CAAEroD,KAAM6mD,IAGZ,SAASyB,GAAyBjuC,GACrC,MAAO,CAAEra,KAAMwmD,GAA6BnsC,QAASA,GAwBlD,SAASkuC,KACZ,MAAO,CAAEvoD,KAAMonD,IAwBZ,SAASoB,GAAyBnuC,GACrC,MAAO,CAAEra,KAAM4nD,GAA6BvtC,QAASA,GAGlD,SAASouC,KACZ,MAAO,CAAEzoD,KAAM2nD,IAGZ,SAASe,GAAqBruC,GACjC,MAAO,CAAEra,KAAMsnD,GAAyBjtC,QAASA,GAoB9C,SAASsuC,GAAgCtuC,GAC5C,MAAO,CAAEra,KAAMmoD,GAAsC9tC,QAASA,GAG3D,SAASuuC,KACZ,MAAO,CAAE5oD,KAAMkoD,IAGZ,SAASW,GAA4BxuC,GACxC,MAAO,CAAEra,KAAM6nD,GAAkCxtC,QAASA,GC5IvD,SAASyuC,GAAkBjlD,EAAehE,GAC7C,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,4BACmDlE,GAAM,CACtD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASilD,GAAkBjlD,EAAUhE,OAUhDmE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAAS4kD,MACT5kD,EAAS+kD,MACT/kD,EAAS0kD,MACT1kD,EAASwkD,MACT9rD,QAAQC,IAAIiI,GACZA,EAAKhG,KAAKsqD,gBAAgBp7C,KAAI,SAAC3B,EAAU4B,GACrC,IAAIyM,EAA0B,CAC1Bxa,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrB6oB,gCAAiCxlC,EAAIwlC,gCACrCC,yBAA0BzlC,EAAIylC,yBAC9BC,uBAAwB1lC,EAAI0lC,uBAC5BvX,kBAAmBnuB,EAAImuB,kBACvBhU,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClB4C,UAAW7c,EAAI6c,UACftQ,WAAYvM,EAAIuM,WAChBC,SAAUxM,EAAIwM,SACdsQ,WAAY9c,EAAI8c,YAGpB,OADAvsB,QAAQC,IAAI6d,GAEDxW,EADG,IAAV+J,EACgBw6C,GAA6B/tC,GAG7BiuC,GAAyBjuC,OAIjD5V,EAAKhG,KAAKuqD,iCAAiCr7C,KAAI,SAAC3B,EAAU4B,GACtD,IAAIyM,EAA0B,CAC1Bxa,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrB6oB,gCAAiCxlC,EAAIwlC,gCACrCC,yBAA0BzlC,EAAIylC,yBAC9BC,uBAAwB1lC,EAAI0lC,uBAC5BvX,kBAAmBnuB,EAAImuB,kBACvBhU,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClB4C,UAAW7c,EAAI6c,UACftQ,WAAYvM,EAAIuM,WAChBC,SAAUxM,EAAIwM,SACdsQ,WAAY9c,EAAI8c,YAGpB,OADAvsB,QAAQC,IAAI6d,GAEDxW,EADG,IAAV+J,EDLjB,SAAmDyM,GACtD,MAAO,CAAEra,KAAMqnD,GAAkDhtC,QAASA,GCKtC4uC,CAA0C5uC,GDE3E,SAA+CA,GAClD,MAAO,CAAEra,KAAM+mD,GAA8C1sC,QAASA,GCAlC6uC,CAAsC7uC,OAK9D5V,EAAKhG,KAAK0qD,YAAYx7C,KAAI,SAAC3B,EAAU4B,GACjC,IAAIyM,EAA0B,CAC1Bxa,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrB6oB,gCAAiCxlC,EAAIwlC,gCACrCC,yBAA0BzlC,EAAIylC,yBAC9BC,uBAAwB1lC,EAAI0lC,uBAC5BvX,kBAAmBnuB,EAAImuB,kBACvBhU,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClB4C,UAAW7c,EAAI6c,UACftQ,WAAYvM,EAAIuM,WAChBC,SAAUxM,EAAIwM,SACdsQ,WAAY9c,EAAI8c,YAGpB,OADAvsB,QAAQC,IAAI6d,GAEDxW,EADG,IAAV+J,EACgB46C,GAAyBnuC,GAGzBquC,GAAqBruC,OAK7C5V,EAAKhG,KAAK2qD,qBAAqBz7C,KAAI,SAAC3B,EAAU4B,GAC1C,IAAIyM,EAA0B,CAC1Bxa,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrB6oB,gCAAiCxlC,EAAIwlC,gCACrCC,yBAA0BzlC,EAAIylC,yBAC9BC,uBAAwB1lC,EAAI0lC,uBAC5BvX,kBAAmBnuB,EAAImuB,kBACvBhU,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClB4C,UAAW7c,EAAI6c,UACftQ,WAAYvM,EAAIuM,WAChBC,SAAUxM,EAAIwM,SACdsQ,WAAY9c,EAAI8c,YAGpB,OADAvsB,QAAQC,IAAI6d,GAEDxW,EADG,IAAV+J,EACgB+6C,GAAgCtuC,GAGhCwuC,GAA4BxuC,UAIvDxV,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCgBb6sD,OA7Kf,SAAoClqD,GAEhC,IAAMmqD,EAAmBhhD,aAAY,SAACC,GAAD,OAAWA,EAAM+gD,oBAChDniD,EAAUC,cAEVmiD,EAAgB,SAACC,GACnB7lD,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAc8kD,EAAgB3pD,GAAGvD,YACtDqH,aAAaY,WAAW,gBACxBZ,aAAae,QAAQ,eAAgB8kD,EAAgBz7C,MACrDpK,aAAaY,WAAW,uBACxBZ,aAAae,QAAQ,sBAAuB8kD,EAAgBx7C,aAC5DrK,aAAaY,WAAW,mBACxBZ,aAAae,QAAQ,kBAAmB8kD,EAAgB7gC,gBAAgBrsB,YACxEqH,aAAaY,WAAW,oBACxBZ,aAAae,QAAQ,mBAAoB8kD,EAAgBrjC,eACzDxiB,aAAaY,WAAW,mBACxBZ,aAAae,QAAQ,kBAAmB8kD,EAAgBvjC,cACxDtiB,aAAaY,WAAW,qBACxBZ,aAAae,QAAQ,oBAAqB8kD,EAAgBrvB,mBAC1Dx2B,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAc8kD,EAAgBjxC,YACnD5U,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAY8kD,EAAgBhxC,UAEjDrR,EAAQI,KAAK,CACTmB,SAFO,8BAOT6nC,GADS,IAAIr0C,MACC60C,cAEdnS,EAAW0R,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,EAAG,IAAM,IAAMwkB,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,GAAI,IAC9GvvB,QAAQC,IAAI8zC,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,EAAG,IAAM,IAAMwkB,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,GAAI,KAEzG,IAAM3N,EAAQmrC,EAAiBF,qBAAqB9pC,QAAO,SAACjF,EAASzM,GACjE,IAAIojC,EAAW32B,EAAQ9B,WACvB,OAAK8B,GAAW22B,EAAWpS,EAChB,KAGAvkB,KAIT1c,EAAU,CACZ0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GAC/BpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAEjCwL,aAAc,SAACxL,EAAMuL,GACjB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KA6B/ByL,EAAU,CACZ,CACIC,UAAW,OACXjL,KAAM,SACNkL,OAAQC,yBAEZ,CACIF,UAAW,gBACXjL,KAAM,qBACNkL,OAAQC,yBAEZ,CACIF,UAAW,eACXjL,KAAM,yBACNkL,OAAQC,yBAEZ,CACIF,UAAW,aACXjL,KAAM,wCACNoL,UAlCR,SAAuBC,EAAMC,GACzB,IAAIoN,EAAUpN,EAAInH,WAClB,OACI,8BAAOuU,EAAQhB,UAAU,EAAG,IAAM,IAAMgB,EAAQhB,UAAU,GAAI,OAiClE,CACIzM,UAAW,WACXjL,KAAM,kCACNoL,UAhCR,SAAqBC,EAAMC,GACvB,IAAIoN,EAAUpN,EAAInH,WAClB,OACI,8BAAOuU,EAAQhB,UAAU,EAAG,IAAM,IAAMgB,EAAQhB,UAAU,GAAI,OA+BlE,CACIzM,UAAW,yBACXjL,KAAM,mCAEV,CACIiL,UAAW,kCACXjL,KAAM,uBAEV,CACIiL,UAAW,GACXjL,KAAM,yBACNoL,UA9DR,SAA0BC,EAAMC,GAC5B,OACI,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACnDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GACnC6pC,EAAc7pC,KAFlB,oBAoFR,OACI,kBAAC,WAAD,KACI,6BACI,kBAAC,sBAAD,CACIU,WACIC,KAAkB1iB,KAzBjB,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACjB,6BAEI,6BACI,6BACI,kBAAC,KAAD,eACIC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aCyBbkpC,OA7Kf,SAA+BtqD,GAE3B,IAAMmqD,EAAmBhhD,aAAY,SAACC,GAAD,OAAWA,EAAM+gD,oBAChDniD,EAAUC,cAEVmiD,EAAgB,SAACC,GACnB7lD,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAc8kD,EAAgB3pD,GAAGvD,YACtDqH,aAAaY,WAAW,gBACxBZ,aAAae,QAAQ,eAAgB8kD,EAAgBz7C,MACrDpK,aAAaY,WAAW,uBACxBZ,aAAae,QAAQ,sBAAuB8kD,EAAgBx7C,aAC5DrK,aAAaY,WAAW,mBACxBZ,aAAae,QAAQ,kBAAmB8kD,EAAgB7gC,gBAAgBrsB,YACxEqH,aAAaY,WAAW,oBACxBZ,aAAae,QAAQ,mBAAoB8kD,EAAgBrjC,eACzDxiB,aAAaY,WAAW,mBACxBZ,aAAae,QAAQ,kBAAmB8kD,EAAgBvjC,cACxDtiB,aAAaY,WAAW,qBACxBZ,aAAae,QAAQ,oBAAqB8kD,EAAgBrvB,mBAC1Dx2B,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAc8kD,EAAgBjxC,YACnD5U,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAY8kD,EAAgBhxC,UAEjDrR,EAAQI,KAAK,CACTmB,SAFO,sBAOT6nC,GADS,IAAIr0C,MACC60C,cAEdnS,EAAW0R,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,EAAG,IAAM,IAAMwkB,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,GAAI,IAC9GvvB,QAAQC,IAAI8zC,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,EAAG,IAAM,IAAMwkB,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,GAAI,KAEzG,IAAM3N,EAAQmrC,EAAiBH,YAAY7pC,QAAO,SAACjF,EAASzM,GACxD,IAAIqjC,EAAW52B,EAAQ7B,SACvB,OAAK6B,GAAW42B,EAAWrS,EAChB,KAGAvkB,KAIT1c,EAAU,CACZ0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GAC/BpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAEjCwL,aAAc,SAACxL,EAAMuL,GACjB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KA6B/ByL,EAAU,CACZ,CACIC,UAAW,OACXjL,KAAM,SACNkL,OAAQC,yBAEZ,CACIF,UAAW,gBACXjL,KAAM,qBACNkL,OAAQC,yBAEZ,CACIF,UAAW,eACXjL,KAAM,yBACNkL,OAAQC,yBAEZ,CACIF,UAAW,aACXjL,KAAM,wCACNoL,UAlCR,SAAuBC,EAAMC,GACzB,IAAIoN,EAAUpN,EAAInH,WAClB,OACI,8BAAOuU,EAAQhB,UAAU,EAAG,IAAM,IAAMgB,EAAQhB,UAAU,GAAI,OAiClE,CACIzM,UAAW,WACXjL,KAAM,kCACNoL,UAhCR,SAAqBC,EAAMC,GACvB,IAAIoN,EAAUpN,EAAInH,WAClB,OACI,8BAAOuU,EAAQhB,UAAU,EAAG,IAAM,IAAMgB,EAAQhB,UAAU,GAAI,OA+BlE,CACIzM,UAAW,yBACXjL,KAAM,mCAEV,CACIiL,UAAW,kCACXjL,KAAM,uBAEV,CACIiL,UAAW,GACXjL,KAAM,yBACNoL,UA9DR,SAA0BC,EAAMC,GAC5B,OACI,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACnDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GACnC6pC,EAAc7pC,KAFlB,oBAoFR,OACI,kBAAC,WAAD,KACI,6BACI,kBAAC,sBAAD,CACIU,WACIC,KAAkB1iB,KAzBjB,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACjB,6BAEI,6BACI,6BACI,kBAAC,KAAD,eACIC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aC0BbmpC,OA9Kf,SAAiCvqD,GAE7B,IAAMmqD,EAAmBhhD,aAAY,SAACC,GAAD,OAAWA,EAAM+gD,oBAChDniD,EAAUC,cAEVmiD,EAAgB,SAACC,GACnB7lD,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAc8kD,EAAgB3pD,GAAGvD,YACtDqH,aAAaY,WAAW,gBACxBZ,aAAae,QAAQ,eAAgB8kD,EAAgBz7C,MACrDpK,aAAaY,WAAW,uBACxBZ,aAAae,QAAQ,sBAAuB8kD,EAAgBx7C,aAC5DrK,aAAaY,WAAW,mBACxBZ,aAAae,QAAQ,kBAAmB8kD,EAAgB7gC,gBAAgBrsB,YACxEqH,aAAaY,WAAW,oBACxBZ,aAAae,QAAQ,mBAAoB8kD,EAAgBrjC,eACzDxiB,aAAaY,WAAW,mBACxBZ,aAAae,QAAQ,kBAAmB8kD,EAAgBvjC,cACxDtiB,aAAaY,WAAW,qBACxBZ,aAAae,QAAQ,oBAAqB8kD,EAAgBrvB,mBAC1Dx2B,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAc8kD,EAAgBjxC,YACnD5U,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAY8kD,EAAgBhxC,UAEjDrR,EAAQI,KAAK,CACTmB,SAFO,8BAOT6nC,GADS,IAAIr0C,MACC60C,cAEdnS,EAAW0R,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,EAAG,IAAM,IAAMwkB,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,GAAI,IAC9GvvB,QAAQC,IAAI8zC,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,EAAG,IAAM,IAAMwkB,GAAW,IAAIp0C,KAAKq0C,IAAOzkB,UAAU,GAAI,KAEzG,IAAM3N,EAAQmrC,EAAiBP,gBAAgBzpC,QAAO,SAACjF,EAASzM,GAC5D,IAAIojC,EAAW32B,EAAQ9B,WACnB04B,EAAW52B,EAAQ7B,SACvB,OAAK6B,GAAW22B,EAAWpS,GAAYA,EAAWqS,EACvC,KAGA52B,KAIT1c,EAAU,CACZ0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GAC/BpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAEjCwL,aAAc,SAACxL,EAAMuL,GACjB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KA6B/ByL,EAAU,CACZ,CACIC,UAAW,OACXjL,KAAM,SACNkL,OAAQC,yBAEZ,CACIF,UAAW,gBACXjL,KAAM,qBACNkL,OAAQC,yBAEZ,CACIF,UAAW,eACXjL,KAAM,yBACNkL,OAAQC,yBAEZ,CACIF,UAAW,aACXjL,KAAM,wCACNoL,UAlCR,SAAuBC,EAAMC,GACzB,IAAIoN,EAAUpN,EAAInH,WAClB,OACI,8BAAOuU,EAAQhB,UAAU,EAAG,IAAM,IAAMgB,EAAQhB,UAAU,GAAI,OAiClE,CACIzM,UAAW,WACXjL,KAAM,kCACNoL,UAhCR,SAAqBC,EAAMC,GACvB,IAAIoN,EAAUpN,EAAInH,WAClB,OACI,8BAAOuU,EAAQhB,UAAU,EAAG,IAAM,IAAMgB,EAAQhB,UAAU,GAAI,OA+BlE,CACIzM,UAAW,yBACXjL,KAAM,mCAEV,CACIiL,UAAW,kCACXjL,KAAM,uBAEV,CACIiL,UAAW,GACXjL,KAAM,yBACNoL,UA9DR,SAA0BC,EAAMC,GAC5B,OACI,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACnDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GACnC6pC,EAAc7pC,KAFlB,oBAoFR,OACI,kBAAC,WAAD,KACI,6BACI,kBAAC,sBAAD,CACIU,WACIC,KAAkB1iB,KAzBjB,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACjB,6BAEI,6BACI,6BACI,kBAAC,KAAD,eACIC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aCyEbopC,GArNkB,WAC7B,IAAM9lD,EAA0BqD,cAC1BoiD,EAAyChhD,aAAY,SAACC,GAAD,OAAuBA,EAAM+gD,oBAClFxrD,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzEi2C,EAAoCN,EAAiBP,gBAAgBvoD,OACrEqxC,EAAgCyX,EAAiBH,YAAY3oD,OAC7DqpD,EAAuCP,EAAiBF,qBAAqB5oD,OAC/EkM,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAV0B,IAY3BoO,EAAsBC,+BAAtBD,kBACRve,QAAQC,IAAI8sD,GACZ,IAAIjtC,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OASbuL,wBAAa+8B,GAA4CxlC,EAAUhE,IACnEyM,wBAAamV,GAAY5d,EAAUhE,IACnCyM,wBAAaw8C,GAAkBjlD,EAAUhE,QAIlD,CAACgE,EAAUhE,EAAIwc,EAAc3Y,IAEhC2I,qBAAU,WACNxI,EAASmQ,GAAkB,gBAAY,OACxC,CAAClW,EAAK+V,KAAMhQ,IArDoB,MAwDHzE,oBAAS,GAxDN,mBAwD5B+0B,EAxD4B,KAwDlBC,EAxDkB,OAyDHh1B,oBAAS,GAzDN,mBAyD5Bi1B,EAzD4B,KAyDlBC,EAzDkB,OA0DHl1B,oBAAS,GA1DN,mBA0D5Bm1B,EA1D4B,KA0DlBC,EA1DkB,KA2DnC,OACI1Z,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KAIH,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,yBAAe6I,KAAI,UAAKy1C,GAAgCv+C,KAAK,OAAO6I,MAAM,YACzF,kBAAC,GAAD,CAAS5I,MAAM,yBAAe6I,KAAI,UAAKw1C,GAA6Bt+C,KAAK,OAAO6I,MAAM,YACtF,kBAAC,GAAD,CAAS5I,MAAM,8BAAc6I,KAAI,UAAKy9B,GAAyBvmC,KAAK,OAAO6I,MAAM,aAUrF,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,WAAW8H,QAAS,YACvC,IAAbwsB,IACAC,GAAY,GACZE,GAAY,GACZE,GAAY,KAEjBvsB,MAAO,CACNC,MAAOisB,EAAW,UAAY,YAPlC,0BAUA,yBAAKlsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBwJ,EAAW,UAAY,cAGhD,yBAAKzzB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACxC,IAAb0sB,IACAC,GAAY,GACZF,GAAY,GACZI,GAAY,KAGhBvsB,MAAO,CACHC,MAAOmsB,EAAW,UAAY,YARtC,0BAUA,yBAAKpsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiB0J,EAAW,UAAY,cAIhD,yBAAK3zB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACxC,IAAb4sB,IACAC,GAAY,GACZJ,GAAY,GACZE,GAAY,KAGhBrsB,MAAO,CACHC,MAAOqsB,EAAW,UAAY,YARtC,+BAUA,yBAAKtsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiB4J,EAAW,UAAY,gBAQ3B,IAAbJ,EAEI,kBAAC,WAAD,KACI,yBAAKzzB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,+BAEJ,yBAAKa,UAAU,aACX,kBAAC,GAAD,YAQL,IAAb2zB,EAEF,kBAAC,WAAD,KACI,yBAAK3zB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,+BAEJ,yBAAKa,UAAU,aACX,kBAAC,GAAD,YASL,IAAb6zB,EAEF,kBAAC,WAAD,KACI,yBAAK7zB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,+BAEJ,yBAAKa,UAAU,aACX,kBAAC,GAAD,gBAVvB,IC1MZopD,GAAkC,0BAClCC,GAAmC,2BACnCC,GAAqC,6BAIrCC,GAAyC,iCACzCC,GAAsC,8BAGtCC,GAA0C,kCAC1CC,GAA2C,mCAC3CC,GAA6C,qCAI7CC,GAAiD,yCACjDC,GAA8C,sCAI9CC,GAAuC,+BACvCC,GAAwC,gCACxCC,GAA0C,kCAI1CC,GAA8C,sCAC9CC,GAA2C,mCAG3CvoD,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBAQjC,SAASuB,GAAiBooD,GAC7B,MAAO,CACH7qD,KAAMiB,GACN4pD,oBAID,SAASloD,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAQZ,SAASurD,KACZ,MAAO,CAAE9qD,KAAMiqD,IAGZ,SAASc,GAAqBF,GACjC,MAAO,CAAE7qD,KAAM8pD,GAAyBe,iBAAkBA,GAwBvD,SAASG,KACZ,MAAO,CAAEhrD,KAAMsqD,IAGZ,SAASW,GAA0BJ,GACtC,MAAO,CAAE7qD,KAAMmqD,GAAiCU,iBAAkBA,GChF/D,SAASK,GAA2BrnD,EAAeuzB,EAAkBvkB,GACxE,IAAI/N,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,oCAC2DqzB,EAD3D,YACuEvkB,GAAc,CAClF9U,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASqnD,GAA2BrnD,EAAUuzB,EAAUvkB,OAUnE7O,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASinD,MACTjnD,EAASmnD,MACTzuD,QAAQC,IAAIiI,EAAKhG,KAAK0sD,qBACtB1mD,EAAKhG,KAAK0sD,oBAAoBx9C,KAAI,SAAC3B,EAAU4B,GACzC,IAAI8d,EAAY1f,EAAIod,YAChBuC,EAAY3f,EAAIqd,YAChB+hC,EAAqB,CACrBvrD,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjBwzB,WAAYx1B,EAAIw1B,WAChB6pB,SAAUr/C,EAAIq/C,SACdC,uBAAwBt/C,EAAIs/C,uBAC5BvlC,aAAc/Z,EAAI+Z,aAClBwlC,YAAav/C,EAAIu/C,YACjBC,SAAUx/C,EAAIw/C,SACdC,WAAYz/C,EAAIy/C,WAChBtiB,aAAcn9B,EAAIm9B,aAClB/f,YAAasC,EAAUI,UAAU,EAAG,GACpCzC,YAAasC,EAAUG,UAAU,EAAG,IAGxC,OAAOjoB,EAASknD,GAAqBK,OAGzC3mD,EAAKhG,KAAKitD,mBAAmB/9C,KAAI,SAAC3B,EAAU4B,GACxC,IAAI8d,EAAY1f,EAAIod,YAChBuC,EAAY3f,EAAIqd,YAChB+hC,EAAqB,CACrBvrD,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjBwzB,WAAYx1B,EAAIw1B,WAChB6pB,SAAUr/C,EAAIq/C,SACdC,uBAAwBt/C,EAAIs/C,uBAC5BvlC,aAAc/Z,EAAI+Z,aAClBwlC,YAAav/C,EAAIu/C,YACjBC,SAAUx/C,EAAIw/C,SACdC,WAAYz/C,EAAIy/C,WAChBtiB,aAAcn9B,EAAIm9B,aAClB/f,YAAasC,EAAUI,UAAU,EAAG,GACpCzC,YAAasC,EAAUG,UAAU,EAAG,IAGxC,OAAOjoB,EAASonD,GAA0BG,UAGjDvmD,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YC7ErB,SAASmvD,GAAc9nD,EAAehE,GACzC,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,iBACwClE,GAAM,CAC3C9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS8nD,GAAc9nD,EAAUhE,OAU5CmE,MAAM,SAAAS,GACHZ,EAASpB,EAAiBgC,IAC1BZ,EAASX,KACT,IAAIR,EAAa,CACb7C,GAAI4E,EAAK5E,GACToF,SAAUR,EAAKQ,SACf8b,MAAOtc,EAAKsc,MACZ7b,SAAU,GACVf,OAAQM,EAAKN,OACb6c,UAAWvc,EAAKuc,UAChBC,SAAUxc,EAAKwc,SACfC,YAAazc,EAAKyc,YAClBzb,kBAAmBhB,EAAKgB,kBACxB0b,IAAK1c,EAAK0c,IACVC,MAAO3c,EAAK2c,MACZC,QAAS5c,EAAK4c,QACdC,QAAS7c,EAAK6c,QACdC,WAAY9c,EAAK8c,YAErB,OAAO1d,EAASZ,EAAcP,OAEjCmC,OAAM,SAAAtF,GACHsE,EAASlB,EAAepD,IACxBhD,QAAQC,IAAI,YCjErB,IAAMovD,GAA6C,qCAC7CC,GAA8C,sCAC9CC,GAAgD,wCAEhDC,GAA6D,qDAC7DC,GAA4D,oDAC5DC,GAAoD,4CACpDC,GAAiD,yCAGjDC,GAAqC,6BACrCC,GAAsC,8BACtCC,GAAwC,gCAIxCC,GAA4C,oCAC5CC,GAAyC,iCAIzCC,GAAyC,iCACzCC,GAA0C,kCAC1CC,GAA4C,oCAI5CC,GAAgD,wCAChDC,GAA6C,qCAG7CvqD,GAAiC,yBACjCrB,GAA6B,qBAC7BC,GAA6B,qBAC7BC,GAA2B,mBAEjC,SAASsB,KACZ,MAAO,CACHxC,KAAMgB,IAIP,SAASyB,GAAiBoqD,GAC7B,MAAO,CACH7sD,KAAMiB,GACN4rD,iBAID,SAASlqD,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAQZ,SAASutD,KACZ,MAAO,CAAE9sD,KAAMisD,IAGZ,SAASc,GAA8BF,GAC1C,MAAO,CAAE7sD,KAAM4rD,GAAoCiB,cAAeA,GAwB/D,SAASG,KACZ,MAAO,CAAEhtD,KAAMssD,IAGZ,SAASW,GAAwBJ,GACpC,MAAO,CAAE7sD,KAAMmsD,GAA4BU,cAAeA,GA6BvD,SAASK,KACZ,MAAO,CAAEltD,KAAM2sD,IAGZ,SAASQ,GAA2BN,GACvC,MAAO,CAAE7sD,KAAMwsD,GAAgCK,cAAeA,GClH3D,SAASO,GAAiCvpD,EAAeuzB,EAAkBvkB,GAC9E,IAAI/N,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,wCAC+DqzB,EAD/D,YAC2EvkB,GAAc,CACtF9U,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASupD,GAAiCvpD,EAAUuzB,EAAUvkB,OAUzE7O,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASmpD,MACTnpD,EAASipD,MACTjpD,EAASqpD,MACT3wD,QAAQC,IAAIiI,EAAKhG,KAAKouD,eACtBpoD,EAAKhG,KAAKouD,cAAcl/C,KAAI,SAAC3B,EAAU4B,GACnC,IAAI8d,EAAY1f,EAAIod,YAChBuC,EAAY3f,EAAIqd,YAChBwjC,EAA8B,CAC9BhtD,GAAImM,EAAInM,GACRmO,YAAahC,EAAIgC,YACjBwzB,WAAYx1B,EAAIw1B,WAChBpK,SAAUprB,EAAIorB,SACd9e,WAAYtM,EAAIsM,WAChBzF,WAAY7G,EAAI6G,WAChBiT,YAAa9Z,EAAI8Z,YACjB3hB,OAAQ6H,EAAI7H,OACZukC,eAAgB18B,EAAI08B,eACpB51B,aAAc9G,EAAI8G,aAClBq2B,aAAcn9B,EAAIm9B,aAClB/f,YAAasC,EACbrC,YAAasC,GAGjB,OACW9nB,EADkB,aAAzBgpD,EAAc1oD,OACE8oD,GAAwBJ,GAEV,iBAAzBA,EAAc1oD,OACHgpD,GAA2BN,GAG3BE,GAA8BF,UAIzDhoD,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCjFrB,IAAM6wD,GAA6C,qCAC7CC,GAA8C,sCAC9CC,GAAgD,wCAEhDC,GAA6D,qDAC7DC,GAA4D,oDAC5DprD,GAAiC,yBACjCrB,GAA6B,qBAC7BC,GAA6B,qBAC7BC,GAA2B,mBAC3BwsD,GAAoD,4CACpDC,GAAiD,yCAQvD,SAASlrD,GAAiBmrD,GAC7B,MAAO,CACH5tD,KAAMiB,GACN2sD,kCAID,SAASjrD,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAQZ,SAASsuD,KACZ,MAAO,CAAE7tD,KAAM0tD,IAGZ,SAASI,GAA+BF,GAC3C,MAAO,CAAE5tD,KAAMqtD,GAAoCO,+BAAgCA,GC5BhF,SAASG,GAAsClqD,EAAeuzB,EAAkBvkB,GACnF,IAAI/N,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,yDACgFqzB,EADhF,YAC4FvkB,GAAc,CACvG9U,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASkqD,GAAsClqD,EAAUuzB,EAAUvkB,OAU9E7O,MAAM,SAAAS,GACHZ,EAASgqD,MACTtxD,QAAQC,IAAIiI,EAAKhG,KAAKuvD,6BACtBvpD,EAAKhG,KAAKuvD,4BAA4BrgD,KAAI,SAAC3B,EAAU4B,GACjD,IAAIwoC,EAAyC,CACzCvjC,WAAY7G,EAAI6G,WAChBo7C,cAAejiD,EAAIiiD,cACnB1C,YAAav/C,EAAIu/C,YACjBv9C,YAAahC,EAAIgC,YACjBw9C,SAAUx/C,EAAIw/C,SACd3iC,UAAW7c,EAAI6c,UACfyiC,uBAAwBt/C,EAAIs/C,uBAC5Bx4C,aAAc9G,EAAI8G,aAClB0mC,SAAUxtC,EAAIwtC,SACdrB,MAAOnsC,EAAImsC,MACXlqC,KAAMjC,EAAIiC,MAGd,OAAOpK,EAASiqD,GAA+B1X,UAGtDvxC,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,Y,UC6Kb0xD,GA9NiB,WAC5B,IAAMrqD,EAA0BqD,cAC1B+W,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAC7DkwC,EAA2C7lD,aAAY,SAACC,GAAD,OAAuBA,EAAM4lD,qBACpFtB,EAAoCvkD,aAAY,SAACC,GAAD,OAAuBA,EAAM6lD,kBAC7ER,EAAoEtlD,aAAY,SAACC,GAAD,OAAuBA,EAAM8lD,mCAC7GC,EAA+BH,EAAkBI,6BAA6B/tD,OAAS2tD,EAAkBK,0BAA0BhuD,OACnIiuD,EAAkCN,EAAkBhD,oBAAoB3qD,OACxEkuD,EAAkC7B,EAAc8B,aAAanuD,OAC3Dsa,EAAsBC,+BAAtBD,kBAGJQ,EAAO3X,aAAaC,QAAQ,aAC5B0iD,EAAoB,EACX,OAAThrC,IACAgrC,EAAYz1C,SAASyK,IAGzB,IAAIF,EAAOzX,aAAaC,QAAQ,cAC5BiP,EAAoB,EACX,OAATuI,IACAvI,EAAahC,SAASuK,IAG1B,IAAIsyB,EAAO/pC,aAAaC,QAAQ,YAC5BwzB,EAAmB,EACV,OAATsW,IACAtW,EAAWvmB,SAAS68B,IAExB,IAAIrxB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAWbuL,wBAAamV,GAAY5d,EAAUgP,IACnCvG,wBAAaq/C,GAAc9nD,EAAUyiD,IACrCh6C,wBAAa4+C,GAA2BrnD,EAAUuzB,EAAUvkB,IAC5DvG,wBAAa8gD,GAAiCvpD,EAAUuzB,EAAUvkB,IAClEvG,wBAAayhD,GAAsClqD,EAAUuzB,EAASvkB,QAG/E,CAAChP,EAAUwY,EAAc3Y,EAAemP,EAAYyzC,EAAWlvB,IAElE,IAAIw3B,EAA4C,GAC5CC,EAA2C,GAC/CjB,EAA+BS,gCAAgC1gD,KAAI,SAAC3B,EAAK8B,GAGrE,OAFA8gD,EAA+BrnD,KAAKyE,EAAImsC,OACxC0W,EAA8BtnD,KAAKyE,EAAIiiD,eAChCjiD,KAIX,IACMvH,EAAO,CACTu+B,OAFW6rB,EAGX5rB,SAAU,CACN,CACInjC,MAAO,+BACP2E,KAAMmqD,EACN1rB,YAAa,oBACbvY,gBAAiB,6BAKvBxjB,EAAUC,cAQhB,OACI0T,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KAIH,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,sCAAiB6I,KAAI,UAAKk6C,GAAwBhjD,KAAK,OAAO6I,MAAM,YACnF,kBAAC,GAAD,CAAS5I,MAAM,qCAAmB6I,KAAI,UAAKq6C,GAA2BnjD,KAAK,OAAO6I,MAAM,WACxF,kBAAC,GAAD,CAAS5I,MAAM,8BAAe6I,KAAI,UAAKs6C,GAA2BpjD,KAAK,OAAO6I,MAAM,YASxF,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,8BACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,yBAAKA,UAAU,yCACX,wBAAIb,GAAG,aAAP,YAA0Boe,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAGnZ,SAAW,KAEvF,yBAAKvE,UAAU,yCACX,uBAAGb,GAAG,oBAAN,sBAAqCoe,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAG+C,IAAM,KAE7F,yBAAKzgB,UAAU,kBACX,uBAAGA,UAAS,qBAAwBb,GAAG,eACvC,uBAAGA,GAAG,SAAN,sCAA8Boe,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAGgD,MAAQ,KAGxF,yBAAK1gB,UAAU,kBACX,uBAAGA,UAAS,wBAA2Bb,GAAG,eAC1C,uBAAGA,GAAG,SAAN,iBAA0Boe,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAG8C,YAAc,KAG1F,yBAAKxgB,UAAU,kBACX,uBAAGA,UAAS,wBAA2Bb,GAAG,eAC1C,uBAAGA,GAAG,SAAN,UAAsBoe,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAG2C,MAAQ,UAOpG,yBAAKrgB,UAAU,OACX,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,+BACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,yBAAKA,UAAU,yCACX,wBAAIb,GAAG,aAAP,YAA0Boe,EAAMqD,QAAQ9gB,OAAS,EAAIyd,EAAMqD,QAAQ,GAAGrc,SAAW,KAErF,yBAAKvE,UAAU,yCACX,uBAAGb,GAAG,oBAAN,sBAAqCoe,EAAMqD,QAAQ9gB,OAAS,EAAIyd,EAAMqD,QAAQ,GAAGH,IAAM,KAE3F,yBAAKzgB,UAAU,kBACX,uBAAGA,UAAS,qBAAwBb,GAAG,eACvC,uBAAGA,GAAG,SAAN,sCAA8Boe,EAAMqD,QAAQ9gB,OAAS,EAAIyd,EAAMqD,QAAQ,GAAGF,MAAQ,KAGtF,yBAAK1gB,UAAU,kBACX,uBAAGA,UAAS,wBAA2Bb,GAAG,eAC1C,uBAAGA,GAAG,SAAN,iBAA0Boe,EAAMqD,QAAQ9gB,OAAS,EAAIyd,EAAMqD,QAAQ,GAAGJ,YAAc,KAGxF,yBAAKxgB,UAAU,kBACX,uBAAGA,UAAS,wBAA2Bb,GAAG,eAC1C,uBAAGA,GAAG,SAAN,UAAsBoe,EAAMqD,QAAQ9gB,OAAS,EAAIyd,EAAMqD,QAAQ,GAAGP,MAAQ,WAYtG,yBAAKrgB,UAAU,0BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,mCACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,yBAAKA,UAAU,kBACX,kBAAC4iC,GAAD,CAAW7+B,KAAMA,KAErB,yBAAK/D,UAAU,8BACX,4BACIA,UAAU,4BACVb,GAAG,yBACH8H,QAAS,WAhHzCR,EAAQI,KAAK,CACTmB,SAFO,8BA8GiB,oBAMI,uBAAGhI,UAAS,2BAA8Bb,GAAG,8BCxFtEivD,OAhIf,SAA6B3vD,GAEzB,IAAMyuD,EAAiCtlD,aAAY,SAACC,GAAD,OAAWA,EAAM8lD,mCAC9DlnD,EAAUC,cAKVmiD,GAJWriD,cAIK,SAACkkD,GACrBznD,aAAaY,WAAW,sBACxBZ,aAAae,QAAQ,qBAAsB0mD,EAASviC,WACpDllB,aAAaY,WAAW,SACxBZ,aAAae,QAAQ,QAAS0mD,EAASjT,MAAM77C,YAC7CqH,aAAaY,WAAW,eACxBZ,aAAae,QAAQ,cAAe0mD,EAASp9C,aAC7CrK,aAAaY,WAAW,eACxBZ,aAAae,QAAQ,cAAe0mD,EAASG,aAC7C5nD,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAY0mD,EAAS5R,UAE1CryC,EAAQI,KAAK,CACTmB,SAFO,uBAOTyV,EAAQyvC,EAA+BS,gCAEvC1wD,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KAe3ByL,EAAU,CACd,CACEC,UAAW,gBACXjL,KAAM,SACNkL,OAAQC,yBAEV,CACEF,UAAW,WACXjL,KAAM,8BACNkL,OAAQC,yBAEV,CACEF,UAAW,cACXjL,KAAM,0BACNkL,OAAQC,yBAEV,CACEF,UAAW,QACXjL,KAAM,iBACNkL,OAAQC,yBAEV,CACEF,UAAW,GACXjL,KAAM,yBACNoL,UAlCJ,SAAoBC,EAAMC,GACxB,OACI,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACnDxI,EAAM8gB,UAAU9gB,EAAM8gB,SAASP,GACnC6pC,EAAc7pC,KAFlB,oBAwDN,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACEU,WACEC,KAAkB1iB,KAzBP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aCLDuuC,GAhGuB,WAClC,IAAMjrD,EAA0BqD,cAC1BinD,EAA2C7lD,aAAY,SAACC,GAAD,OAAuBA,EAAM4lD,qBACpFG,EAA+BH,EAAkBK,0BAA0BhuD,OAAS2tD,EAAkBI,6BAA6B/tD,OACnIiuD,EAAkCN,EAAkBhD,oBAAoB3qD,OACtEsa,EAAsBC,+BAAtBD,kBAEJM,EAAOzX,aAAaC,QAAQ,cAC5BiP,EAAoB,EACX,OAATuI,IACAvI,EAAahC,SAASuK,IAG1B,IAAIE,EAAO3X,aAAaC,QAAQ,YAC5BwzB,EAAkB,EACT,OAAT9b,IACA8b,EAAWvmB,SAASyK,IAGxB,IAAIe,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAgCzC,OA/BAyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,EACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAGT8C,EAAS9C,KACTuL,wBAAayhD,GAAsClqD,EAAUuzB,EAASvkB,KAI1EvG,wBAAayhD,GAAsClqD,EAAUuzB,EAASvkB,OAG/E,CAAChP,EAAUwY,EAAc3Y,EAAemP,EAAYukB,IAGnDtc,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KAIH,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,sCAAiB6I,KAAI,UAAKk6C,GAAwBhjD,KAAK,OAAO6I,MAAM,YACnF,kBAAC,GAAD,CAAS5I,MAAM,qCAAmB6I,KAAI,UAAKq6C,GAA2BnjD,KAAK,OAAO6I,MAAM,YAW5F,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAmCb,GAAG,iBAApD,qCAEJ,yBAAKa,UAAU,aACX,kBAACquD,GAAD,YCXbC,I,MA/EyB,WACpC,IAAMnrD,EAA0BqD,cAC1B02C,EAAsEt1C,aAAY,SAACC,GAAD,OAAuBA,EAAM2V,oCAC/GD,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SACnE1hB,QAAQC,IAAIyhB,EAAMG,UAClB7hB,QAAQC,IAAIohD,GACZ,IAAM9/C,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAE3EyH,EAAOzX,aAAaC,QAAQ,sBAC5BqrD,EAA6B,GACpB,OAAT7zC,IACA6zC,EAAqB7zC,GAGzB,IAAIE,EAAO3X,aAAaC,QAAQ,SAEnB,OAAT0X,GACQzK,SAASyK,GAGrB,IAAIoyB,EAAO/pC,aAAaC,QAAQ,eAMhC,IAAI84C,EAAO/4C,aAAaC,QAAQ,eAMhC,IAAI4X,EAAO7X,aAAaC,QAAQ,YAC5B41C,EAAmB,GACV,OAATh+B,IACAg+B,EAAWh+B,GAWf,OALAnP,qBAAU,WACNxI,EAASmQ,GAAkB,kBAAW,oBACvC,CAAClW,EAAK+V,KAAMhQ,IAIX,kBAAC,WAAD,KAEI,yBAAKnD,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAmCb,GAAG,iBAApD,qBAEJ,yBAAKa,UAAU,aACV84C,MAMjB,yBAAK94C,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAmCb,GAAG,iBAApD,iCAEJ,yBAAKa,UAAU,aACX,yBAAKA,UAAU,eAAekH,IAAKqnD,EAAoBpnD,IAAI,YC1E1E4xC,GAA6C,qCAC7CC,GAA8C,sCAC9CC,GAAgD,wCAEhDC,GAA6D,qDAC7DC,GAA4D,oDAC5DC,GAAoD,4CACpDC,GAAiD,yCAGjDC,GAAyC,iCACzCC,GAA0C,kCAC1CC,GAA4C,oCAE5CC,GAAyD,iDACzDC,GAAwD,gDACxDC,GAAgD,wCAChDC,GAA6C,qCAG7Cj4C,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBAQjC,SAASuB,GAAiBysD,GAC7B,MAAO,CACHlvD,KAAMiB,GACNiuD,uBAID,SAASvsD,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAQZ,SAAS4vD,KACZ,MAAO,CAAEnvD,KAAM85C,IAGZ,SAASsV,GAAqBF,GACjC,MAAO,CAAElvD,KAAMy5C,GAAoCyV,oBAAqBA,GAwBrE,SAASG,KACZ,MAAO,CAAErvD,KAAMq6C,IAGZ,SAASiV,GAAkBJ,GAC9B,MAAO,CAAElvD,KAAMg6C,GAAgCkV,oBAAqBA,GC1EjE,SAASK,GAA6B1rD,EAAehE,GACxD,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,sCAC6DlE,GAAM,CAChE9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS0rD,GAA6B1rD,EAAUhE,OAU3DmE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASwrD,MACTxrD,EAASsrD,MACT5yD,QAAQC,IAAIiI,EAAKhG,KAAK+wD,qBACtB/qD,EAAKhG,KAAK+wD,oBAAoB7hD,KAAI,SAAC3B,EAAU4B,GACzC,IAAI8d,EAAY1f,EAAIod,YAChBuC,EAAY3f,EAAIqd,YAChB6lC,EAA0C,CAC1CrvD,GAAImM,EAAInM,GACRgT,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClB28C,YAAazjD,EAAIyjD,YACjBxB,cAAejiD,EAAIiiD,cACnBplC,UAAW7c,EAAI6c,UACfO,YAAasC,EACbrC,YAAasC,GAEjB,OAAO9nB,EAASurD,GAAqBF,OAGzCzqD,EAAKhG,KAAKixD,gBAAgB/hD,KAAI,SAAC3B,EAAU4B,GACrC,IAAI8d,EAAY1f,EAAIod,YAChBuC,EAAY3f,EAAIqd,YAChB6lC,EAA0C,CAC1CrvD,GAAImM,EAAInM,GACRgT,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClB28C,YAAazjD,EAAIyjD,YACjBxB,cAAejiD,EAAIiiD,cACnBplC,UAAW7c,EAAI6c,UACfO,YAAasC,EAAUI,UAAU,EAAG,GACpCzC,YAAasC,EAAUG,UAAU,EAAG,IAExC,OAAOjoB,EAASyrD,GAAkBJ,UAGzCrqD,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YC3DrB,SAASmzD,GAAyB9rD,EAAehE,GACpD,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,kCACyDlE,GAAM,CAC5D9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS8rD,GAAyB9rD,EAAUhE,OAUvDmE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASskC,MACTtkC,EAASmkC,MACTnkC,EAASwkC,MAET5jC,EAAKhG,KAAKypC,cAAcv6B,KAAI,SAAC3B,EAAU4B,GACnC,IAAI8d,EAAY1f,EAAIod,YAChBuC,EAAY3f,EAAIqd,YAChB6e,EAA8B,CAC9BroC,GAAImM,EAAInM,GACRmO,YAAahC,EAAIgC,YACjBwzB,WAAYx1B,EAAIw1B,WAChBpK,SAAUprB,EAAIorB,SACd9e,WAAYtM,EAAIsM,WAChBowB,eAAgB18B,EAAI08B,eACpB7oB,WAAY7T,EAAI6T,WAChBiG,YAAa9Z,EAAI8Z,YACjBmjB,sBAAuBj9B,EAAIi9B,sBAC3BC,wBAAyBl9B,EAAIk9B,wBAC7B/kC,OAAQ6H,EAAI7H,OACZ4hB,aAAc/Z,EAAI+Z,aAClBojB,aAAcn9B,EAAIm9B,aAClB/f,YAAasC,EAAUI,UAAU,EAAG,GACpCzC,YAAasC,EAAUG,UAAU,EAAG,IAGxC,OACWjoB,EADkB,aAAzBqkC,EAAc/jC,OACEikC,GAAsBF,GAER,iBAAzBA,EAAc/jC,OACH8jC,GAAsBC,GAGtBI,GAAUJ,UAIrCrjC,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,Y,sOC+HbozD,OA5Lf,SAA+BzwD,GAC3B,IAAM0E,EAA0BqD,cAE5BghC,EAD6C5/B,aAAY,SAACC,GAAD,OAAuBA,EAAMqgC,kBAClCinB,qBAElDz5C,EAD8D9N,aAAY,SAACC,GAAD,OAAuBA,EAAM2N,2BAC1DG,oBAAsBnC,GAAwCoC,OAE7G8E,EAAOzX,aAAaC,QAAQ,YAC5BwzB,EAAW,EACF,OAAThc,IACAgc,EAAWvmB,SAASuK,IAGxB,IAAI1O,EAAO/I,aAAaC,QAAQ,MAC5Bic,EAAqB,EACZ,OAATnT,IACAmT,EAAahP,SAASnE,IAG1B,IAAI4O,EAAO3X,aAAaC,QAAQ,cAC5B49B,EAAqB,EACZ,OAATlmB,IACAkmB,EAAa3wB,SAASyK,IAG1B,IACIotB,EAAyB,EAChB,QAFTltB,EAAO7X,aAAaC,QAAQ,qBAG5B8kC,EAAiB73B,SAAS2K,IAG9B,IAAIkhC,EAAO/4C,aAAaC,QAAQ,yBAC5BqlC,EAAgC,EACvB,OAATyT,IACAzT,EAAwBp4B,SAAS6rC,IAGrC,IAAIlhC,EACAs0C,EAA2B,EAClB,QAFTt0C,EAAO7X,aAAaC,QAAQ,uBAG5BksD,EAAmBj/C,SAAS2K,IAGhC,IAAIkyB,EAAO/pC,aAAaC,QAAQ,eAC5BoK,EAAc,GACL,OAAT0/B,IACA1/B,EAAc0/B,GAIdxF,EADA9xB,EACgB,CAAEvW,GAAI,EAAG2hC,WAAY,EAAGpK,SAAU,EAAGsR,eAAgB,EAAG7oB,WAAY,EAAGopB,sBAAuB,EAAGj7B,YAAa,GAAIm7B,aAAc,GAAI7wB,WAAY,GAAIyN,aAAc,GAAID,YAAa,EAAG3hB,OAAQ,GAAI+kC,wBAAyB,GAAI9f,YAAa,GAAIC,YAAa,IAE7P,CAAExpB,GAAIiwD,EAAkBtuB,WAAYA,EAAYpK,SAAUA,EAAUsR,eAAgBA,EAAgB7oB,WAAYA,EAAYopB,sBAAuBA,EAAuBj7B,YAAaA,EAAam7B,aAAc,GAAI7wB,WAAY,GAAIyN,aAAc,GAAID,YAAa,EAAG3hB,OAAQ,GAAI+kC,wBAAyB,GAAI9f,YAAa,GAAIC,YAAa,IAEnW,IACMstB,EADoBruC,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAChCG,SAC7Bw4B,EAA0B,GAC1B/Y,EAAiCv1B,aAAY,SAACC,GAAD,OAAuBA,EAAMs1B,YAEhF8Y,EAAYhpC,KAAI,SAAC3B,GACb,IAAIiF,EAAgB,CAAE,KAAQjF,EAAI/G,SAAU,MAAS+G,EAAInM,IACzD,OAAO+2C,EAAarvC,KAAK0J,MAG7B,IAAM8+C,EAA0B,GAChClyB,EAASA,SAASlwB,KAAI,SAAC3B,GACnB,IAAIiF,EAAgB,CAAE,KAAQjF,EAAI+B,KAAM,MAAS/B,EAAInM,IACrD,OAAOkwD,EAAaxoD,KAAK0J,MAnEmC,MAuE9B7R,mBAAS,CACvCoiC,WAAY,CAAEjiC,MAAO,GAAIQ,MAAOmoC,EAAc1G,YAC9CyH,sBAAuB,CAAE1pC,MAAO,GAAIQ,MAAOmoC,EAAce,uBACzDj7B,YAAa,CAAEzO,MAAO,GAAIQ,MAAOmoC,EAAcl6B,eA1Ea,mBAuEzD3G,EAvEyD,KAuE9CC,EAvE8C,KA6EhE,SAASE,EAAoBC,GACzBH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UAiDnF,SAAS2H,IACL,OAAQL,EAAU2G,YAAYzO,QAAU8H,EAAU2G,YAAYjO,MAGlE,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,MACA,yBAAKW,UAAU,iBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,gDAEJ,yBAAKA,UAAU,aACX,0BAAMoH,SA1D9B,SAAkBhJ,GAEd,GADAA,EAAEiJ,kBACEL,IAAJ,CAGAvI,EAAMqX,SAAQ,IAKlB,SAAkBnP,EAAmCoP,GACjD,GAAIyxB,EAAe,CACf,IAAMroC,EAAK8F,IAAMqC,QAAQ,wFAAoD,CACzElC,SAAUH,IAAMI,SAASC,WACzBC,UAAW,MAGfpC,ECvHL,SAASmsD,EAAiBvrD,EAAWqJ,GACxC,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,kBACqD,CAC9ChG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASmsD,EAAiBvrD,EAAMqJ,OAU3C9J,MAAM,SAAAe,GACHxI,QAAQC,IAAIuI,GACZlB,EAAS0kC,GAAa,CAClBx6B,KAAK,kEAAD,OAAmChJ,EAAI2jC,eAAvC,qBAA6D3jC,EAAIuT,WAAjE,KACJtK,YAAY,sFAAD,OAA0CjJ,EAAI2jC,eAA9C,qBAAoE3jC,EAAIuT,WAAxE,MACZ,IACHq3C,GAAyB9rD,EAAUY,EAAKob,YACxCla,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,8FAA2C5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,SAE7JpB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,uGAAiD5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,UD8EzJ+pD,CAAiB,CACtBxuB,WAAYn6B,EAAUm6B,WAAWzhC,MACjCkpC,sBAAuB5hC,EAAU4hC,sBAAsBlpC,MACvD8f,WAAYA,EACZowC,WAAY74B,EACZppB,YAAa3G,EAAU2G,YAAYjO,OACpCF,IAEHtD,QAAQC,IAAI,CACRglC,WAAYn6B,EAAUm6B,WAAWzhC,MACjCkpC,sBAAuB5hC,EAAU4hC,sBAAsBlpC,MACvD8f,WAAYA,EACZowC,WAAY74B,EACZppB,YAAa3G,EAAU2G,YAAYjO,SAvB3CiX,CAAS3P,MAoDe,yBAAK3G,UAAU,cACX,kBAAC,GAAD,CACIb,GAAG,mBACHY,MAAM,aACNX,MAAM,qBACNnC,QAASoyD,EACTzvD,UAAU,EACVL,SAAUuH,EACVzH,MAAOsH,EAAUm6B,WAAWzhC,SAGpC,yBAAKW,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CACIb,GAAG,8BACHY,MAAM,wBACNX,MAAM,gCACNnC,QAASi5C,EACTt2C,UAAU,EACVL,SAAUuH,EACVzH,MAAOsH,EAAU4hC,sBAAsBlpC,UAInD,yBAAKW,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,oBACVY,MAAM,cACNV,MAAOsH,EAAU2G,YAAYjO,MAC7BE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,WACNc,YAAY,MAGpB,4BAAQF,UAAU,iBAAiBiH,QAAS,WA1DpExI,EAAMqX,SAAQ,KA0DU,YACA,4BAAQxW,KAAK,SAASU,UAAS,sCAvDhCgH,IACN,WAAa,KAsDN,mBEuUjBwoD,GAzfsB,WACjC,IAAMrsD,EAA0BqD,cAC1B22B,EAA0Bv1B,aAAY,SAACC,GAAD,OAAuBA,EAAMs1B,YACnED,EAAqCt1B,aAAY,SAACC,GAAD,OAAuBA,EAAMq1B,kBAC9EuyB,EAAqC7nD,aAAY,SAACC,GAAD,OAAuBA,EAAM4nD,kBAC9Ej6C,EAA8D5N,aAAY,SAACC,GAAD,OAAuBA,EAAM2N,2BACvG0yB,EAAqCtgC,aAAY,SAACC,GAAD,OAAuBA,EAAMqgC,kBAC9EwnB,EAAiD9nD,aAAY,SAACC,GAAD,OAAuBA,EAAM6nD,wBAChG7zD,QAAQC,IAAI2zD,GAR2B,IAS/Br1C,EAAsBC,+BAAtBD,kBAEFhd,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzEmqC,EAAoCsS,EAAqBC,qBAAqB7vD,OAChFkM,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAGT,IAAI0O,EAAOzX,aAAaC,QAAQ,YAE5BwzB,EAAmB,EAEV,OAAThc,IACAgc,EAAWvmB,SAASuK,IAxBe,MA2BPhc,oBAAS,GA3BF,mBA2BhC+0B,EA3BgC,KA2BtBC,EA3BsB,OA4BPh1B,oBAAS,GA5BF,mBA4BhCi1B,EA5BgC,KA4BtBC,EA5BsB,OA6BPl1B,oBAAS,GA7BF,mBA6BhCm1B,EA7BgC,KA6BtBC,EA7BsB,KA+BnCnY,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAWbuL,wBAAa0zB,GAAen8B,EAAUuzB,IACtC9qB,wBAAau0B,GAAkBh9B,EAAUuzB,IACzC9qB,wBAAawU,GAAWjd,IACxByI,wBAAaijD,GAA6B1rD,EAAUuzB,IACpD9qB,wBAAaqjD,GAAyB9rD,EAAUhE,QAGzD,CAACgE,EAAUwY,EAAc3Y,EAAe0zB,EAAUv3B,IAErDwM,qBAAU,WACNxI,EAASmQ,GAAkB,oBAAW,yBACvC,CAAClW,EAAK+V,KAAMhQ,IAzEwB,MA2EXzE,oBAAS,GA3EE,mBA2EhC4b,EA3EgC,KA2ExBC,EA3EwB,KA6EvC,SAASq1C,IACLr1C,GAAU,GAGd,SAASC,EAAenb,GACpBkb,GAAU,GAGd,IAAM9T,EAAUC,cAqEZ3C,EAAiB,GACjB8rD,EAAa,GACbxyB,EAAyB,GAE7B,GAAIH,EAAeI,cAAcx9B,OAAS,IAA2B,IAAtBsa,QACHiB,IAApC6hB,EAAeI,cAAc,IAAwD,OAApCJ,EAAeI,cAAc,GAAa,CAC3F,IAAIC,EAAeL,EAAeI,cAAc,GAAGzlB,WAAWxP,MAAM,KAChEm1B,EAAaN,EAAeI,cAAc,GAAGxlB,SAASzP,MAAM,KAC5Do1B,EAAattB,SAASotB,EAAa,GAAGnS,UAAU,EAAG,IACnDsS,EAAavtB,SAASotB,EAAa,GAAGnS,UAAU,EAAG,IACnDuS,EAAextB,SAASotB,EAAa,GAAGnS,UAAU,EAAG,IACrDwS,EAAWztB,SAASqtB,EAAW,GAAGpS,UAAU,EAAG,IAC/CyS,EAAY1tB,SAASqtB,EAAW,GAAGpS,UAAU,EAAG,IAChD0S,EAAa3tB,SAASqtB,EAAW,GAAGpS,UAAU,EAAG,IAErDykC,GAAcjyB,EAAWH,GAAY7hC,WAAa,cAAWiiC,EAAYH,GAAY9hC,WAAa,aAAYkiC,EAAaH,GAAc/hC,WAAa,WACtJshC,EAAeI,cAAcrwB,KAAI,SAAC3B,EAAK4B,GACnC,IAAI6wB,EAAa,IAAIviC,KAAK8P,EAAIuM,YAC1BmmB,EAAW,IAAIxiC,KAAK8P,EAAIwM,UAExBomB,EAAW,IAAI1iC,MAEd0iC,EAASziC,UAAYsiC,EAAWtiC,WAAa,IAAO,EACrD4hC,EAAax2B,KAAK,2BAEZq3B,EAASziC,UAAYsiC,EAAWtiC,WAAa,IAAO,IAAMuiC,EAASviC,UAAYyiC,EAASziC,WAAa,IAAO,EAClH4hC,EAAax2B,KAAK,0BAGlBw2B,EAAax2B,KAAK,2BAGtB,IAAIgR,EAAavM,EAAIuM,WAAWxP,MAAM,KAClCyP,EAAWxM,EAAIwM,SAASzP,MAAM,KAClC,OAAOtE,EAAK8C,KAAK,WAAQgR,EAAW,GAAK,IAAMA,EAAW,GAAK,OAASC,EAAS,GAAK,IAAMA,EAAS,OAKjH,SAASqmB,EAAYjxB,GACjB,MAA4B,2BAAxBmwB,EAAanwB,GACN,iBAEsB,2BAAxBmwB,EAAanwB,GACX,aAGA,aAIf,OACIkN,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KAIL,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,wCAAiB6I,KAAI,UAAK2pB,EAAaze,QAAO,SAACtT,EAAK4B,GAAN,MAAwB,4BAAR5B,KAAsBxL,QAAU8K,KAAK,OAAO6I,MAAM,YAC/H,kBAAC,GAAD,CAAS5I,MAAM,mDAA4B6I,KAAI,UAAK0pC,GAA6BxyC,KAAK,OAAO6I,MAAM,WACnG,yBAAKzT,UAAU,yBAAyBb,GAAG,uCACvC,4BACIa,UAAU,4BACVb,GAAG,2BACH8H,QAAS,WACL9D,EAASmR,GAA0Cd,GAAwCoC,SAC3Fg6C,MAGJ,uBAAG5vD,UAAU,mBARjB,6CAcR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,WAAW8H,QAAS,YACvC,IAAbwsB,IACAC,GAAY,GACZE,GAAY,GACZE,GAAY,KAEjBvsB,MAAO,CACNC,MAAOisB,EAAW,UAAY,YAPlC,sBAUA,yBAAKlsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBwJ,EAAW,UAAY,cAGhD,yBAAKzzB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACxC,IAAb0sB,IACAC,GAAY,GACZF,GAAY,GACZI,GAAY,KAGhBvsB,MAAO,CACHC,MAAOmsB,EAAW,UAAY,YARtC,uCAUA,yBAAKpsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiB0J,EAAW,UAAY,cAIhD,yBAAK3zB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACxC,IAAb4sB,IACAC,GAAY,GACZJ,GAAY,GACZE,GAAY,KAGhBrsB,MAAO,CACHC,MAAOqsB,EAAW,UAAY,YARtC,sBAUA,yBAAKtsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiB4J,EAAW,UAAY,eAKpD,kBAAC,KAAD,CACI51B,KAAMqc,EACN6B,QAAS,kBAAM5B,GAAU,IACzB6B,sBAAoB,GAEpB,oCAEQ,WACI,GAAK5G,EAAwBG,oBAAsBnC,GAAwCoC,QAAUJ,EAAwBG,oBAAsBnC,GAAwCgM,KACvL,OAAO,kBAAC,GAAD,CAAuB1J,QAAS0E,IAF/C,MAWa,IAAbiZ,EAEI,yBAAKzzB,UAAU,OAEPm9B,EAASA,SAASiB,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQje,KAAI,SAAC3B,EAAK4B,GAC5D,OACI,yBAAKlN,UAAU,oCAGX,yBAAKA,UAAS,2CAAsCm+B,EAAYjxB,IAAUjG,QAAS,WAjN7G,IAACq3B,IAiNkIhzB,EA/MrJrI,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAcs6B,EAAQn/B,GAAGvD,YAC9CqH,aAAaY,WAAW,kBACxBZ,aAAae,QAAQ,iBAAkBs6B,EAAQpT,OAAOtvB,YACtDqH,aAAaY,WAAW,aACxBZ,aAAae,QAAQ,iBAAmCqX,IAAtBijB,EAAQgC,UAA0BhC,EAAQgC,UAAY,IA0BxF75B,EAAQI,KAAK,CACTmB,SAjCO,uBAiNqC,yBAAKhI,UAAU,wCACX,yBAAKA,UAAU,WAAWkH,IAAI,wFAAwFC,IAAI,MAE9H,yBAAKnH,UAAU,uBACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YAAf,aACUsL,EAAI4f,QAEd,yBAAKlrB,UAAU,YACVsL,EAAI+B,OAGb,yBAAKrN,UAAU,OACX,yBAAKA,UAAU,YAAf,uBAGA,yBAAKA,UAAU,YACV+D,EAAKmJ,KAGd,yBAAKlN,UAAU,OACX,yBAAKA,UAAU,YAAf,8BAGA,yBAAKA,UAAU,YACV6vD,IAGT,yBAAK7vD,UAAU,OACX,yBAAKA,UAAU,YAAf,sBAGA,yBAAKA,UAAU,aACS,IAAnBsL,EAAI+0B,WAAsB,2BAAmB,6CAGtD,yBAAKrgC,UAAU,YACX,yBAAKA,UAAU,YAAf,oBAGA,yBAAKA,UAAU,YACVsL,EAAI+Z,uBAc3B,IAAbsO,EAED,yBAAK3zB,UAAU,YACX,yBAAKA,UAAU,qBACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,2CACA,yBAAKa,UAAU,0CACX,2BAAOA,UAAU,SACb,2BAAOA,UAAU,eACb,8BAGJ,+BAEQ0vD,EAAqBC,qBAAqB1iD,KAAI,SAAC3B,EAAK4B,GAChD,OACI,wBAAIlN,UAAS,YAAe4Q,IAAG,yBAAoB1D,IAC/C,yBAAKlN,UAAU,iCAAiCiH,QAAS,WAtTpG,IAACunD,IAsTwHljD,EApT1IrI,aAAae,QAAQ,eAAgBwqD,EAAoBp8C,cACzDnP,aAAae,QAAQ,aAAcwqD,EAAoBr8C,WAAWvW,YAClEqH,aAAae,QAAQ,yBAA0BwqD,EAAoBrvD,GAAGvD,YACtEqH,aAAae,QAAQ,gBAAiBwqD,EAAoBjB,eAC1DtqD,aAAae,QAAQ,cAAewqD,EAAoBO,YAAYnzD,YACpEqH,aAAae,QAAQ,gCAAiCwqD,EAAoBrmC,WAC1EllB,aAAae,QAAQ,cAAewqD,EAAoB7lC,aACxDliB,EAAQI,KAAK,CACTmB,SATO,sBAsTqD,yBAAKhI,UAAU,8BACX,yBAAKA,UAAU,WAAWkH,IAAI,wFAAwFC,IAAI,MAE9H,yBAAKnH,UAAU,0BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YAAf,WAGA,yBAAKA,UAAU,YACVsL,EAAIiiD,gBAGb,yBAAKvtD,UAAU,OACX,yBAAKA,UAAU,YAAf,kBAGA,yBAAKA,UAAU,YACVsL,EAAI8G,eAGb,yBAAKpS,UAAU,OACX,yBAAKA,UAAU,YAAf,mCAGA,yBAAKA,UAAU,YACVsL,EAAIqd,YAAY40B,WAAW,IAAK,mBAiBvE,IAAb1pB,EAED,yBAAK7zB,UAAU,OACX,yBAAKA,UAAU,0BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,sCACA,yBAAKa,UAAU,0CACX,2BAAOA,UAAU,SACb,2BAAOA,UAAU,gBACb,8BAGJ,+BAEQkoC,EAAeG,OAAOp7B,KAAI,SAAC3B,EAAK4B,GAC5B,OACI,wBAAIlN,UAAS,YAAe4Q,IAAG,yBAAoB1D,IAC/C,yBAAKlN,UAAU,iCAAiCiH,QAAS,WAnWpG,IAACugC,IAmWwHl8B,EAlW1IrI,aAAae,QAAQ,eAAgBwjC,EAAciB,cACnDxlC,aAAae,QAAQ,iBAAkBwjC,EAAcQ,eAAepsC,YACpEqH,aAAae,QAAQ,aAAcwjC,EAAc1G,WAAWllC,YAC5DqH,aAAae,QAAQ,eAAgBwjC,EAAcniB,aAAazpB,YAChEqH,aAAae,QAAQ,wBAAyBwjC,EAAce,sBAAsB3sC,YAClFqH,aAAae,QAAQ,0BAA2BwjC,EAAcgB,wBAAwB5sC,YACtFqH,aAAae,QAAQ,cAAewjC,EAAcl6B,YAAY1R,YAC9DqH,aAAae,QAAQ,cAAewjC,EAAc7e,aAClD1lB,aAAae,QAAQ,aAAcwjC,EAAc5vB,YACjD3U,aAAae,QAAQ,mBAAoBwjC,EAAcroC,GAAGvD,YAC1DuH,EAASmR,GAA0Cd,GAAwCgM,OAC3FowC,MAwVgE,yBAAK5vD,UAAU,8BACX,yBAAKA,UAAU,qBAAqBkH,IAAI,wFAAwFC,IAAI,MAExI,yBAAKnH,UAAU,0BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YAAf,cAGA,yBAAKA,UAAU,YACVsL,EAAI08B,iBAGb,yBAAKhoC,UAAU,OACX,yBAAKA,UAAU,YAAf,yBAGA,yBAAKA,UAAU,YACVsL,EAAIk9B,0BAGb,yBAAKxoC,UAAU,OACX,yBAAKA,UAAU,YAAf,uBAGA,yBAAKA,UAAU,YACVsL,EAAI7H,yBA1C5D,I,OC7ctB,SAASqsD,GAAsB/rD,EAAWqJ,GAC7C,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,mCACsE,CAC/DhG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS2sD,GAAsB/rD,EAAMqJ,OAUhD9J,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZkB,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,4DAAgC5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,SAElJpB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,qEAAsC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACnJ1J,QAAQC,IAAI,aC5BrB,SAASi0D,GAAgC5sD,EAAehE,GAC3D,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,yCACgElE,GAAM,CACnE9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS4sD,GAAgC5sD,EAAUhE,OAU9DmE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASwrD,MACTxrD,EAASsrD,MACT5yD,QAAQC,IAAIiI,EAAKhG,KAAK+wD,qBACtB/qD,EAAKhG,KAAK+wD,oBAAoB7hD,KAAI,SAAC3B,EAAU4B,GACzC,IAAI8d,EAAY1f,EAAIod,YAChBuC,EAAY3f,EAAIqd,YAChB6lC,EAA0C,CAC1CrvD,GAAImM,EAAInM,GACRgT,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClB28C,YAAazjD,EAAIyjD,YACjBxB,cAAejiD,EAAIiiD,cACnBplC,UAAW7c,EAAI6c,UACfO,YAAasC,EACbrC,YAAasC,GAEjB,OAAO9nB,EAASurD,GAAqBF,OAGzCzqD,EAAKhG,KAAKixD,gBAAgB/hD,KAAI,SAAC3B,EAAU4B,GACrC,IAAI8d,EAAY1f,EAAIod,YAChBuC,EAAY3f,EAAIqd,YAChB6lC,EAA0C,CAC1CrvD,GAAImM,EAAInM,GACRgT,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClB28C,YAAazjD,EAAIyjD,YACjBxB,cAAejiD,EAAIiiD,cACnBplC,UAAW7c,EAAI6c,UACfO,YAAasC,EAAUI,UAAU,EAAG,GACpCzC,YAAasC,EAAUG,UAAU,EAAG,IAExC,OAAOjoB,EAASyrD,GAAkBJ,UAGzCrqD,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,Y,mPC1D5B,IA4Qek0D,GA5QoB,WAC/B,IAAM7sD,EAA0BqD,cAC1BkpD,EAAiD9nD,aAAY,SAACC,GAAD,OAAuBA,EAAM6nD,wBAC1FtyD,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAC3Ei6C,EACU,GADVA,EAEO,EAGH9yC,EAAsBC,+BAAtBD,kBAT6B,EAWH1b,mBAAS,CACvCo6C,SAAU,CAAEj6C,MAAO,GAAIQ,MAAO6tD,GAC9BzV,MAAO,CAAE54C,MAAO,GAAIQ,MAAO6tD,KAbM,mBAW9BvmD,EAX8B,KAWnBC,EAXmB,KAgBrC,SAASE,EAAoBC,GACzBH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UAkCnF,IAAIqb,EAAOzX,aAAaC,QAAQ,eAC5B6rD,EAAc,EAEL,OAATr0C,IACAq0C,EAAc5+C,SAASuK,IAG3B,IAAIiB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAamkD,GAAgC5sD,EAAU4rD,OAGhE,CAAC5rD,EAAUwY,EAAc3Y,EAAe+rD,IAE3CpjD,qBAAU,WACNxI,EAASmQ,GAAkB,kBAAW,oBACvC,CAAClW,EAAK+V,KAAMhQ,IAEf,IAAMsD,EAAUC,cA9FqB,EAuHXhI,mBAAS,GAvHE,mBAuH9BwgD,EAvH8B,KAuHvB+Q,EAvHuB,OAwHJvxD,mBAAS,IAxHL,mBAwH9BypB,EAxH8B,KAwHnB+nC,EAxHmB,OAyHExxD,mBAAS,IAzHX,mBAyH9B0T,EAzH8B,KAyHhB+9C,EAzHgB,OA0HFzxD,mBAAS,GA1HP,mBA0H9ByT,EA1H8B,KA0HlBi+C,EA1HkB,OA2HqB1xD,mBAAS,GA3H9B,mBA2H9BksD,EA3H8B,KA2HNyF,EA3HM,OA4HA3xD,mBAAS,IA5HT,mBA4H9BmsD,EA5H8B,KA4HjByF,EA5HiB,KA6HrC,OACIl2C,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KACL,kBAAC,IAAD,MACA,yBAAKxH,UAAU,OACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,iCAEJ,yBAAKa,UAAU,qBAGHk/C,EAAQ,EAEJ,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAWh4C,IAAKihB,GACZ,yBAAKjhB,IAAKihB,EAAWhhB,IAAI,GAAGnH,UAAU,eAK9C0vD,EAAqBC,qBAAqB7vD,OAAS,EAE/C,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAWoH,IAAKwoD,EAAqBC,qBAAqB,GAAGxnC,WACzD,yBAAKjhB,IAAKwoD,EAAqBC,qBAAqB,GAAGxnC,UAAWnoB,UAAU,WAAWmH,IAAI,YAJ3G,IAgBhB,yBAAKnH,UAAU,qBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAS,mCAAsCb,GAAG,gBAGvC+/C,EAAQ,EAEJ,yBAAKl/C,UAAU,aACX,yBAAKA,UAAU,uCACX,wBAAIb,GAAG,aAAP,iCAEJ,yBAAKa,UAAU,uCACX,uBAAGb,GAAG,oBAAN,yBAAwCiT,IAE5C,yBAAKpS,UAAU,uCACX,uBAAGb,GAAG,oBAAN,4BAAyC0rD,EAAYtN,WAAW,IAAK,QAK7EmS,EAAqBC,qBAAqB7vD,OAAS,EAE/C,yBAAKE,UAAU,aACX,yBAAKA,UAAU,uCACX,wBAAIb,GAAG,aAAP,iCAEJ,yBAAKa,UAAU,uCACX,uBAAGb,GAAG,oBAAN,yBAAwCuwD,EAAqBC,qBAAqB,GAAGv9C,eAEzF,yBAAKpS,UAAU,uCACX,uBAAGb,GAAG,oBAAN,4BAAyCuwD,EAAqBC,qBAAqB,GAAGhnC,YAAY40B,WAAW,IAAK,aAVlI,IAoBpB,yBAAKv9C,UAAU,iBACX,kBAAC,GAAD,CACIb,GAAG,cACHE,MAAOsH,EAAU8wC,MAAMp4C,MACvBU,MAAM,QACNR,SAAUuH,EACV4jB,IAAK,GACLG,IAAK,EACLzrB,MAAM,gCAOtB,yBAAKY,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,qBAEJ,yBAAKa,UAAU,aACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,iBACVY,MAAM,WACNV,MAAOsH,EAAUmyC,SAASz5C,MAC1BE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,GACNc,YAAY,MAGpB,4BAAQF,UAAU,kBAAkBiH,QAAS,YA/NzE,WACI,IAAM9H,EAAK8F,IAAMqC,QAAQ,uEAAwC,CAC7DlC,SAAUH,IAAMI,SAASC,aAG7B,GAAmB,IAAf6M,GAA+C,IAA3By4C,EAA8B,CAClD,IAAItzC,EAAIo4C,EAAqBC,qBAAqB,GAAGxwD,GACrDtD,QAAQC,IAAI,CACRqjB,WAAYlc,aAAaC,QAAQ,MACjC0nD,uBAAwBtzC,EACxBmgC,MAAO9wC,EAAU8wC,MAAMp4C,MACvBy5C,SAAUnyC,EAAUmyC,SAASz5C,QAGjC8D,EAAS2sD,GAAsB,CAC3B3wC,WAAYlc,aAAaC,QAAQ,MACjC0nD,uBAAwBtzC,EACxBmgC,MAAO9wC,EAAU8wC,MAAMp4C,MACvBy5C,SAAUnyC,EAAUmyC,SAASz5C,OAC9BF,SAGHgE,EAAS2sD,GAAsB,CAC3B3wC,WAAYlc,aAAaC,QAAQ,MACjC0nD,uBAAwBA,EACxBnT,MAAO9wC,EAAU8wC,MAAMp4C,MACvBy5C,SAAUnyC,EAAUmyC,SAASz5C,OAC9BF,IAoMsEmX,KAArD,YAGY4oC,IAAUwQ,EAAqBC,qBAAqB7vD,OAAS,EAEzD,4BAAQE,UAAS,8BAAiCiH,QAAS,WAtInGR,EAAQI,KAAK,CACTmB,SAFO,6BAuI6B,oBAKA,4BAAQhI,UAAS,8BAAiCiH,QAAS,YA9JnF,WAChB,IAAIkQ,EAAI+nC,EAAQ,EAEhB,GADA+Q,EAAS94C,GACLA,EAAIu4C,EAAqBC,qBAAqB7vD,OAAQ,CACtD,IAAIywD,EAAab,EAAqBC,qBAAqBx4C,GAAGgR,UAC1DqoC,EAAgBd,EAAqBC,qBAAqBx4C,GAAG/E,aAC7Dq+C,EAAef,EAAqBC,qBAAqBx4C,GAAGwR,YAC5D+nC,EAAchB,EAAqBC,qBAAqBx4C,GAAGhF,WAC3Dw+C,EAA0BjB,EAAqBC,qBAAqBx4C,GAAGhY,GAC3E+wD,EAAYK,GACZJ,EAAeK,GACfF,EAAcG,GACdL,EAAaM,GACbL,EAAwBM,IAiJ+E9/C,KAAnE,0BClQzC,SAAS+/C,GAAuC7B,EAAqBr4B,GACxE,IAAItyB,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EfJG,CACH7D,KAAMgB,KeIN8C,MAAM,GAAD,OACMC,+BADN,0DACqF0rD,EADrF,YACoGr4B,GAAY,CACzGr5B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASytD,GAAuC7B,EAAar4B,OAUxEpzB,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASgqD,MACTtxD,QAAQC,IAAIiI,EAAKhG,KAAKuvD,6BACtBvpD,EAAKhG,KAAKuvD,4BAA4BrgD,KAAI,SAAC3B,EAAU4B,GACjD,IAAIwoC,EAAyC,CACzCvjC,WAAY7G,EAAI6G,WAChBo7C,cAAejiD,EAAIiiD,cACnB1C,YAAav/C,EAAIu/C,YACjBC,SAAUx/C,EAAIw/C,SACdx9C,YAAahC,EAAIgC,YACjB6a,UAAW7c,EAAI6c,UACfyiC,uBAAwBt/C,EAAIs/C,uBAC5Bx4C,aAAc9G,EAAI8G,aAClB0mC,SAAUxtC,EAAIwtC,SACdrB,MAAOnsC,EAAImsC,MACXlqC,KAAMjC,EAAIiC,MAGd,OAAOpK,EAASiqD,GAA+B1X,UAGtDvxC,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aCFb+0D,OA7Df,WAEI,IAAMlD,EAAsE/lD,aAAY,SAACC,GAAD,OAAuBA,EAAM8lD,mCAC/GlnD,EAAUC,cAehB7K,QAAQC,IAAI6xD,EAAgCA,iCAG5C,IAAMpvB,EAA0CovB,EAAgCA,gCAAgC1gD,KAAI,SAACuxB,EAASpxB,GAC1H,OAAKoxB,EACG,wBAAIx+B,UAAS,YACjB4Q,IAAG,kBAAaxD,GAAOnG,QAAS,kBAlBnBimD,EAkBqC1uB,EAhBtDv7B,aAAae,QAAQ,WAAYkpD,EAA+BpU,UAChE71C,aAAae,QAAQ,iBAAkBkpD,EAA+BzV,MAAM77C,YAC5EqH,aAAae,QAAQ,eAAgBkpD,EAA+B96C,cACpEnP,aAAae,QAAQ,gCAAiCkpD,EAA+B/kC,WACrFllB,aAAae,QAAQ,gBAAiBkpD,EAA+BK,eACrEtqD,aAAae,QAAQ,yBAA0BkpD,EAA+BtC,uBAAuBhvD,YACrGqH,aAAae,QAAQ,cAAekpD,EAA+BrC,kBACnEpkD,EAAQI,KARG,qBADK,IAACqmD,IAmBb,yBAAKltD,UAAU,4BACf,yBAAKA,UAAS,iDAAoDb,GAAG,gBACjE,yBAAKa,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,OACX,uBAAGA,UAAU,8BAA6B,0BAAMA,UAAU,6BAA6Bb,GAAG,+BAA+BiO,EAAM,IAC/H,uBAAGpN,UAAS,sDAAyDb,GAAG,cACxE,uBAAGa,UAAU,6BAA4Bb,GAAG,qBAAoB,0BAAMa,UAAU,8BAA8Bw+B,EAAQpsB,eACtH,uBAAGpS,UAAU,6BAA4Bb,GAAG,qBAAoB,0BAAMa,UAAU,8BAA8Bw+B,EAAQiZ,eAZvH,QAuB3B,OACI,yBAAKz3C,UAAU,4BACX,2BAAOA,UAAU,SACb,2BAAOA,UAAU,eACb,8BAGJ,+BACKu+B,MCuDNuyB,GAvG0B,WACrC,IAAM3tD,EAA0BqD,cAC1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzE06C,EAAsE/lD,aAAY,SAACC,GAAD,OAAuBA,EAAM8lD,mCAC/GjjC,EAAMijC,EAAgCA,gCAAgCxrC,QAAO,SAACya,EAAGyB,GAAJ,OAAUuZ,KAAKltB,IAAIkS,EAAGyB,EAAEoZ,UAASsZ,KAC9GlmC,EAAM8iC,EAAgCA,gCAAgCxrC,QAAO,SAACya,EAAGyB,GAAJ,OAAUuZ,KAAK/sB,IAAI+R,EAAGyB,EAAEoZ,SAAQ,GAC/G/gB,EAAWzzB,aAAaC,QAAQ,YAChC8tD,EAAoB,EACP,OAAbt6B,IACAs6B,EAAY7gD,SAASumB,IAGzB,IAAIhc,EAAOzX,aAAaC,QAAQ,eAC5B6rD,EAAc,EAEL,OAATr0C,IACAq0C,EAAc5+C,SAASuK,IAI3B,IAAIiB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WAEN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAOb8C,EAASytD,GAAuC7B,EAAaiC,OAGtE,CAAC7tD,EAAUwY,EAAc3Y,EAAeguD,EAAWjC,IAEtDpjD,qBAAU,WACNxI,EAASmQ,GAAkB,WAAO,oBACnC,CAACnQ,EAAU/F,EAAK+V,OAGnB,IAAM1M,EAAUC,cAOhB,OACI,kBAAC,WAAD,KAEI,yBAAK1G,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,+BAAgB6I,KAAI,UAAKgX,GAAO9f,KAAK,OAAO6I,MAAM,YACjE,kBAAC,GAAD,CAAS5I,MAAM,qCAAiB6I,KAAI,UAAKmX,GAAOjgB,KAAK,OAAO6I,MAAM,YAGtE,yBAAKzT,UAAU,OAEX,yBAAKA,UAAU,0BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,8BACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,kBAAC,GAAD,UAMhB,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,8BACX,4BAAQA,UAAU,4BAA4Bb,GAAG,iBAAiB8H,QAAS,WA3B3FR,EAAQI,KAAK,CACTmB,SAFO,gCA4BK,aAGI,uBAAGhI,UAAU,gCC0B1BixD,GAnHkC,WAC7C,IAAM9tD,EAA0BqD,cAC1BmnD,EAAsE/lD,aAAY,SAACC,GAAD,OAAuBA,EAAM8lD,mCAC/GjjC,EAAMijC,EAAgCA,gCAAgCxrC,QAAO,SAACya,EAAGyB,GAAJ,OAAUuZ,KAAKltB,IAAIkS,EAAGyB,EAAEoZ,UAASsZ,KAC9GlmC,EAAM8iC,EAAgCA,gCAAgCxrC,QAAO,SAACya,EAAGyB,GAAJ,OAAUuZ,KAAK/sB,IAAI+R,EAAGyB,EAAEoZ,SAAQ,GAC7Gr6C,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAE3EurB,EAAoB,GACpB6b,EAAmB,GACnBsT,EAAgCA,gCAAgC7tD,OAAS,GACzE6tD,EAAgCA,gCAAgC1gD,KAAI,SAAA3B,GAGhE,OAFAkzB,EAAQ33B,KAAKyE,EAAI8G,cACjBioC,EAAOxzC,KAAKyE,EAAImsC,OACTnsC,KAIf,IAAIU,EAAO/I,aAAaC,QAAQ,YAC5BwzB,EAAmB,EACV,OAAT1qB,IACA0qB,EAAWvmB,SAASnE,IAGxB,IAAI0O,EAAOzX,aAAaC,QAAQ,eAC5B6rD,EAAc,EAEL,OAATr0C,IACAq0C,EAAc5+C,SAASuK,IAG3B,IACI3W,EAAO,CACPu+B,OAFW9D,EAGX+D,SAAU,CACN,CACInjC,MAAO,eACP2E,KAAMs2C,EACN7X,YAAa,oBACbvY,gBAAiB,6BAKzBtO,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAqCzC,OApCAyI,qBAAU,WAEN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAOb8C,EAASytD,GAAuC7B,EAAar4B,OAItE,CAACvzB,EAAU4rD,EAAar4B,EAAU/a,EAAc3Y,IAEnD2I,qBAAU,WACNxI,EAASmQ,GAAkB,WAAO,oBACnC,CAAClW,EAAK+V,KAAMhQ,IAGX,kBAAC,WAAD,KAII,yBAAKnD,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,+BAAgB6I,KAAI,UAAKgX,GAAO9f,KAAK,OAAO6I,MAAM,YACjE,kBAAC,GAAD,CAAS5I,MAAM,qCAAiB6I,KAAI,UAAKmX,GAAOjgB,KAAK,OAAO6I,MAAM,YAGtE,yBAAKzT,UAAU,OAEX,yBAAKA,UAAU,0BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,8BACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,kBAAC,GAAD,UAMhB,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,8BACX,kBAAC4iC,GAAD,CAAW7+B,KAAMA,SCtH5BmtD,GAAuB,eACvBC,GAAwB,gBACxBC,GAA0B,kBAE1BC,GAAuC,+BACvCC,GAAsC,8BACtC3vD,GAAiC,yBACjCrB,GAA6B,qBAC7BC,GAA6B,qBAC7BC,GAA2B,mBAC3B+wD,GAA8B,sBAC9BC,GAA2B,mBAEjC,SAAS1vD,KACZ,MAAO,CACHxC,KAAMgB,IAIP,SAASyB,GAAiB2oD,GAC7B,MAAO,CACHprD,KAAMiB,GACNmqD,YAmBD,SAAS+G,GAAY/G,GACxB,MAAO,CAAEprD,KAAM4xD,GAAcxG,SAAUA,GAGpC,SAASgH,GAAahH,GACzB,MAAO,CAAEprD,KAAM6xD,GAAezG,SAAUA,GAerC,SAAS5nD,GAAqBzD,GACjC,MAAO,CAAEC,KAAMqC,GAAwBtC,MAAOA,GCjD3C,SAASsyD,GAAqBxuD,EAAehE,GAChD,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,8BACqDlE,GAAM,CACxD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASwuD,GAAqBxuD,EAAShE,OAUlDmE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EDJL,CAAE7D,KAAMiyD,KCMHxtD,EAAKhG,KAAK6zD,SAAS3kD,KAAI,SAAC3B,EAAU4B,GAC9B,IAAI8d,EAAY1f,EAAIod,YAChBuC,EAAY3f,EAAIqd,YAChB+hC,EAAqB,CACrBvrD,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjBwzB,WAAYx1B,EAAIw1B,WAChB6pB,SAAUr/C,EAAIq/C,SACdG,SAAUx/C,EAAIw/C,SACdC,WAAYz/C,EAAIy/C,WAChBtiB,aAAcn9B,EAAIm9B,aAClB/f,YAAasC,EAAUI,UAAU,EAAG,GACpCzC,YAAasC,EAAUG,UAAU,EAAG,IAGxC,OACWjoB,EADG,IAAV+J,ED3BjB,SAAyBw9C,GAC5B,MAAO,CAAEprD,KAAMkyD,GAAkB9G,SAAUA,GC2BPmH,CAAgBnH,GAGhB+G,GAAY/G,UAIvCvmD,OAAM,SAAAtF,GACHsE,ED3CT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UCwCMoD,CAAepD,IACxBhD,QAAQC,IAAI,YCtErB,ICYKg2D,GDZCC,GAA6B,qBAC7BC,GAA8B,sBAC9BC,GAAgC,wBAEhCC,GAA6C,qCAC7CC,GAA4C,oCAC5CxwD,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBAC3B4xD,GAAoC,4BACpCC,GAAiC,yBEJvC,SAASC,GAAiBnvD,GAC7B,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,mBACkD,CAC/ChG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASmvD,GAAiBnvD,OAUrCG,MAAM,SAAAS,GACHZ,EFfL,CACH7D,KAAMiB,GACNgyD,eEakCxuD,IAC1BZ,EFEL,CAAE7D,KAAM8yD,KEAHruD,EAAKhG,KAAKy0D,cAAcvlD,KAAI,SAAC3B,EAAU4B,GACnC,IAAIqlD,EAAgC,CAChCpzD,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjBmlD,OAAQnnD,EAAImnD,QAGhB,OAAOtvD,EFLpB,SAA0BovD,GAC7B,MAAO,CAAEjzD,KAAMyyD,GAAoBQ,eAAgBA,GEInBG,CAAiBH,UAGxCpuD,OAAM,SAAAtF,GACHsE,EFxBT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UEqBMoD,CAAepD,IACxBhD,QAAQC,IAAI,YCvCrB,SAAS62D,GAAexvD,EAAehE,GAC1C,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,oBAC2ClE,GAAM,CAC9C9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASwvD,GAAexvD,EAAUhE,OAU7CmE,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZZ,EAASpB,GAAiBgC,IAC1BZ,EAAS88B,MACT,IAAI3B,EAAmB,CACnBn/B,GAAI4E,EAAK5E,GACTu3B,SAAU3yB,EAAK2yB,SACfrpB,KAAMtJ,EAAKsJ,KACXgY,aAActhB,EAAKshB,aACnB/X,YAAavJ,EAAKuJ,YAClB4d,OAAQnnB,EAAKmnB,OACbmV,WAAYt8B,EAAKs8B,WACjBC,UAAWv8B,EAAKu8B,UAChBjiC,QAAS0F,EAAK1F,SAElB,OAAO8E,EAAS+8B,GAAW5B,OAE9Bn6B,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,Y,yOF/ChBg2D,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,2BAAAA,I,sBAAAA,Q,KGuKGc,OA3Jf,SAAsBn0D,GAClB,IAAM0E,EAA0BqD,cAC1BqsD,EAAmCjrD,aAAY,SAACC,GAAD,OAAuBA,EAAMgrD,aAC5EC,EAA8ClrD,aAAY,SAACC,GAAD,OAAuBA,EAAMirD,mBACzFpI,EAA6BmI,EAAUE,iBACrCr9C,EAAqBm9C,EAAUl9C,oBAAsBm8C,GAA2Bl8C,OAEjF80C,IAAYh1C,IACbg1C,EAAW,CAAEvrD,GAAI,EAAGkO,KAAM,GAAIy9C,SAAU,GAAIx9C,YAAa,GAAIwzB,WAAY,EAAG2H,aAAc,GAAIkiB,SAAU,EAAGI,WAAY,GAAIriC,YAAa,GAAIC,YAAa,KAG7J,IAAIjO,EAAOzX,aAAaC,QAAQ,cAE5B49B,EAAa,EAEJ,OAATpmB,IACAomB,EAAa3wB,SAASuK,IAG1B,IAAMs4C,EAAsCF,EAAgBA,gBACtDG,EAAgC,GACtCD,EAAkB/lD,KAAI,SAAC3B,GACnB,IAAIiF,EAAgB,CAAE,KAAQjF,EAAImnD,OAAO72D,WAAa,IAAK,MAAS0P,EAAInM,IACxE,OAAO8zD,EAAmBpsD,KAAK0J,MAvBsB,MA0BvB7R,mBAAS,CACvCoiC,WAAY,CAAEjiC,MAAO,GAAIQ,MAAOqrD,EAAS5pB,YACzC6pB,SAAU,CAAE9rD,MAAO,GAAIQ,MAAOqrD,EAASC,UACvCt9C,KAAM,CAAExO,MAAO,GAAIQ,MAAOqrD,EAASr9C,MACnCC,YAAa,CAAEzO,MAAO,GAAIQ,MAAOqrD,EAASp9C,aAC1Cw9C,SAAU,CAAEjsD,MAAO,GAAIQ,MAAOqrD,EAASI,YA/Bc,mBA0BlDnkD,EA1BkD,KA0BvCC,EA1BuC,KAkCzD,SAASE,EAAoBC,GACzBH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UA6CnF,SAAS2H,IACL,OAAQL,EAAU0G,KAAKxO,QAAU8H,EAAU0G,KAAKhO,MAGpD,IAAI6c,EAAM,IAAI1gB,KAChB0gB,EAAIwP,WAAWxP,EAAIyP,aAAezP,EAAI0P,qBACtC,IAAIC,EAAW3P,EAAI4P,cAAchK,MAAM,EAAE,IAEvC,OACI,kBAAC,WAAD,KACI,yBAAK9hB,UAAU,iBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAoC0V,EAAW,WAAQ,WAArE,4BAEJ,yBAAK1V,UAAU,aACX,0BAAMoH,SAzD9B,SAAkBhJ,GACdA,EAAEiJ,iBACEL,MAGJvI,EAAMqX,SAAQ,GAKlB,SAAkBnP,EAA+BoP,GAC7C,GAAI20C,EAAU,CACV,IAAMvrD,EAAK8F,IAAMqC,QAAQ,uEAAwC,CAC7DlC,SAAUH,IAAMI,SAASC,aAEzByQ,IAAW07C,IACXtuD,EC3ET,SAAS+vD,EAAanvD,EAAWqJ,GACpC,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC1C8I,EAAO/I,aAAaC,QAAQ,cAC5B49B,EAAqB,EAIzB,OAHY,OAAT90B,IACC80B,EAAa3wB,SAASnE,IAEnB,SAAC7I,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,cACiD,CAC1ChG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS+vD,EAAanvD,EAAMqJ,OAUvC9J,MAAM,SAAAe,GACHxI,QAAQC,IAAIuI,GACZY,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,2CAA2B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAaC,UAAW,MAC3IosD,GAAqBxuD,EAAU29B,MAElC38B,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,oDAAiC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC9I1J,QAAQC,IAAI,aDiCHo3D,CAAa,CAClBpyB,WAAYA,EACZ6pB,SAAUhkD,EAAUgkD,SAAStrD,MAC7BgO,KAAM1G,EAAU0G,KAAKhO,MACrBiO,YAAa3G,EAAU2G,YAAYjO,MACnCyrD,SAAUnkD,EAAUmkD,SAASzrD,OAC9BF,IAGPgE,EN/BD,CAAE7D,KAAMgyD,KMgCPnuD,EAASL,GAAqBgvD,GAA2Bz7C,QAnB7DC,CAAS3P,EADmB+O,EAAY+7C,GAAcC,OAoD9B,yBAAK1xD,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,cACVE,MAAOsH,EAAU0G,KAAKhO,MACtBU,MAAM,OACNR,SAAUuH,EACVlH,UAAU,EACVC,UAAW,GACXT,MAAM,SACNc,YAAY,MAEpB,yBAAKF,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,oBACVY,MAAM,cACNV,MAAOsH,EAAU2G,YAAYjO,MAC7BE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,kBACNc,YAAY,MAGpB,yBAAKF,UAAU,cACX,kBAAC,GAAD,CACIb,GAAG,iBACHY,MAAM,WACNX,MAAM,wBACNnC,QAASg2D,EACTrzD,UAAU,EACVL,SAAUuH,EACVzH,MAAOsH,EAAUgkD,SAAStrD,SAIlC,yBAAKW,UAAU,cACX,kBAAC,GAAD,CAAWb,GAAG,iBACVY,MAAM,WACNV,MAAOsH,EAAUmkD,SAASzrD,MAC1BE,SAAUuH,EACVlH,UAAU,EACVC,UAAWgsB,EACXlhB,QAAQ,EACRrL,KAAK,iBACLF,MAAM,oBACNc,YAAY,MAGpB,4BAAQF,UAAU,iBAAiBiH,QAAS,kBAzEpExI,EAAMqX,SAAQ,QACd3S,EAASL,GAAqBgvD,GAA2Bz7C,SAwEjC,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCArEhCgH,IACN,WAAa,KAoEN,mBEzKnBmsD,I,OAA4B,qBAC5BC,GAA6B,qBAC7BC,GAA+B,uBAC/BC,GAAyC,iCAEzCC,GAA4C,oCAC5CC,GAA2C,mCAC3C7xD,GAAiC,yBACjCrB,GAA6B,qBAC7BC,GAA6B,qBAC7BC,GAA2B,mBAC3BizD,GAAmC,2BACnCC,GAAgC,wBAQtC,SAAS3xD,GAAiB4xD,GAC7B,MAAO,CACHr0D,KAAMiB,GACNozD,iBAID,SAAS1xD,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAIZ,SAAS+0D,GAAoBD,GAChC,MAAO,CAAEr0D,KAAMo0D,GAAuBC,cAAeA,GAGlD,SAASE,KACZ,MAAO,CAAEv0D,KAAMm0D,IAGZ,SAASK,GAAgBH,GAC5B,MAAO,CAAEr0D,KAAM6zD,GAAmBQ,cAAeA,GAG9C,SAASI,GAAiBJ,GAC7B,MAAO,CAAEr0D,KAAM8zD,GAAoBO,cAAeA,GAG/C,SAASK,GAAmB70D,GAC/B,MAAO,CAAEG,KAAM+zD,GAAsBl0D,GAAIA,GC3CtC,SAAS80D,GAAyB9wD,EAAehE,GACpD,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,kCACyDlE,GAAM,CAC5D9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS8wD,GAAyB9wD,EAAUhE,OAUvDmE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAAS0wD,MACTh4D,QAAQC,IAAIiI,EAAKhG,KAAKm2D,cACtBnwD,EAAKhG,KAAKm2D,aAAajnD,KAAI,SAAC3B,EAAU4B,GAClC,IAAIymD,EAA8B,CAC9Bx0D,GAAImM,EAAInM,GACRg1D,YAAa7oD,EAAI6oD,YACjB9mD,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB4d,OAAQ5f,EAAI4f,QAGhB,OACW/nB,EADG,IAAV+J,EACgB0mD,GAAoBD,GAGpBG,GAAgBH,UAI3CxvD,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCzDrB,IAAMs4D,GAAuB,eACvBC,GAAwB,gBACxBC,GAA0B,kBAE1BC,GAAuC,+BACvCC,GAAsC,8BACtCC,GAA8B,sBAC9BC,GAA2B,mBAG3B/yD,GAAiC,yBACjCrB,GAA6B,qBAC7BC,GAA6B,qBAC7BC,GAA2B,mBCFjC,SAASm0D,GAAqBxxD,EAAehE,GAChD,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,6BACoDlE,GAAM,CACvD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASwxD,GAAqBxxD,EAAUhE,OAUnDmE,MAAM,SAAAgI,GACHnI,EDlBT,SAA0BmrC,GAC7B,MAAO,CACHhvC,KAAMiB,GACN+tC,YCeiBvsC,CAAiBuJ,IAC1BnI,EDAL,CAAE7D,KAAMm1D,KCEH,IAAInmB,EAAqB,CACrBnvC,GAAImM,EAAInM,GACR2hC,WAAYx1B,EAAIw1B,WAChBzzB,KAAM/B,EAAI+B,KACVgb,WAAY/c,EAAI+c,WAChBusC,aAActpD,EAAIspD,aAClBl+B,SAAUprB,EAAIorB,SACd9e,WAAYtM,EAAIsM,WAChBowB,eAAgB18B,EAAI08B,eACpBtf,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAErB,OAAOxlB,EDXhB,SAAqBmrC,GACxB,MAAO,CAAEhvC,KAAM80D,GAAc9lB,SAAUA,GCUXumB,CAAYvmB,OAE/BnqC,OAAM,SAAAtF,GACHsE,ED7BT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UC0BMoD,CAAepD,IACxBhD,QAAQC,IAAI,YCzDrB,SAASg5D,GAAW31D,EAAS4E,EAAWqJ,GAC3C,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,4BACuDlE,GAAM,CACtD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS2xD,GAAW31D,EAAG4E,EAAMqJ,OAUxC9J,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZlI,QAAQC,IAAIqD,GACZ8F,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,mCAAyB5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,SAE3IpB,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,4CAA+B5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC5I1J,QAAQC,IAAI,aCiEbi5D,OA7Ff,SAA0Bt2D,GACtB,IAAM0E,EAA0BqD,cAgB5BwF,EAAO/I,aAAaC,QAAQ,cAC5B49B,EAAa,EACJ,OAAT90B,IACA80B,EAAa3wB,SAASnE,IApBiC,MAuBnBtN,qBAvBmB,mBAuBpDs2D,EAvBoD,KAuBtCC,EAvBsC,OAwBnBv2D,oBAAS,GAxBU,mBAwBpDw2D,EAxBoD,KAwBtCC,EAxBsC,KA+BrDC,EAAgB,yCAAG,mCAAAx4B,EAAA,6DACf0X,EAAW,IAAIC,UAEZC,OAAO,UAAWwgB,GAErB5nD,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAC9DlC,SAAUH,IAAMI,SAASC,aANR,SASHlC,MAAM,GAAD,OAChBC,+BADgB,0BACuC,CACtDhG,OAAQ,OACRU,KAAMu2C,IAZO,cASf32C,EATe,gBAeFA,EAAImG,OAfF,OAefC,EAfe,OAgBrBlI,QAAQC,IAAIiI,GACZZ,EAAS2xD,GAAWh0B,EAAY,CAACR,UAAWv8B,EAAKsxD,WAAYjoD,IAjBxC,4CAAH,qDAoBtB,OACI,kBAAC,WAAD,KACI,yBAAKpN,UAAU,iBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,6BAAnD,oBAEJ,yBAAKa,UAAU,aACX,8BACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,uBACX,2BAAOd,QAAQ,iBAAf,4CACA,2BAAOI,KAAK,OAAOH,GAAG,gBAAgBkO,KAAK,gBAAgB9N,SAtCzE,SAACC,GACnBy1D,EAAgBz1D,EAAMC,OAAOijB,MAAM,IACnCyyC,GAAgB,OAsCY,yBAAKn1D,UAAU,uBACVk1D,EACG,6BACI,wCAAcF,EAAa3nD,MAC3B,wCAAc2nD,EAAa11D,MAC3B,6CAAmB01D,EAAaM,MAChC,+CACsB,IACjBN,EAAaO,iBAAiBC,uBAIvC,8DAIZ,4BAAQx1D,UAAU,iBAAiBiH,QAAS,kBA9EpExI,EAAMqX,SAAQ,QACd3S,EAASL,GAAqB85C,GAAgDvmC,SA6EtD,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCArE9Ck1D,EAJqB,GAAb,YAyE6FjuD,QAASmuD,GAA/F,mBC2WjBK,GAtbkB,WAC7B,IAAMtyD,EAA0BqD,cAC1B22B,EAA0Bv1B,aAAY,SAACC,GAAD,OAAuBA,EAAMs1B,YACnE01B,EAA4BjrD,aAAY,SAACC,GAAD,OAAuBA,EAAMgrD,aACrEt1C,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAC7DkyC,EAA4C7nD,aAAY,SAACC,GAAD,OAAuBA,EAAM4nD,kBACrFiG,EAAmC9tD,aAAY,SAACC,GAAD,OAAuBA,EAAM6tD,aAC5E1Q,EAAqCp9C,aAAY,SAACC,GAAD,OAAuBA,EAAMm9C,kBACpFnpD,QAAQC,IAAIyhB,EAAMG,UARiB,MAUThf,oBAAS,GAVA,mBAU5BonB,EAV4B,KAUrBC,EAVqB,OAWPrnB,oBAAS,GAXF,mBAW5B4b,EAX4B,KAWpBC,EAXoB,KAa3BH,EAAsBC,+BAAtBD,kBAER,SAASu7C,IACL5vC,GAAS,GAOb,SAASG,EAAc7mB,GACnB0mB,GAAS,GAGb,SAASvL,EAAenb,GACpBkb,GAAU,GAGd,IAAIG,EAAOzX,aAAaC,QAAQ,cAE5B49B,EAAa,EAEJ,OAATpmB,IACAomB,EAAa3wB,SAASuK,IAG1B,IAAI1O,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAIT,IAAI4O,EAAO3X,aAAaC,QAAQ,YAC5BwzB,EAAmB,EACV,OAAT9b,IACA8b,EAAWvmB,SAASyK,IAGxB,IAAIg7C,EAAa,GACb5Q,EAAeC,YAAYnlD,OAAS,GACpCklD,EAAeC,YAAYh4C,KAAI,SAAC3B,EAAK8B,GAIjC,OAHI9B,EAAInM,KAAOu3B,IACXk/B,EAAatqD,EAAI+G,UAEd/G,KAIf,IAAIqQ,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAYbuL,wBAAa04C,GAAgBnhD,EAAUhE,IACvCyM,wBAAa+mD,GAAexvD,EAAU29B,IACtCl1B,wBAAa+lD,GAAqBxuD,EAAU29B,IAC5Cl1B,wBAAa0mD,GAAiBnvD,IAC9ByI,wBAAaqoD,GAAyB9wD,EAAU29B,IAChDl1B,wBAAa+oD,GAAqBxxD,EAAU29B,QAGrD,CAAC39B,EAAUwY,EAAc3Y,EAAe89B,EAAY3hC,IAEvD,IAAMsH,EAAUC,cASVmvD,EAAe,WACE,OAAfD,GACA53D,OAAOC,KAAK23D,EAAY,WAI1BE,EAAe,WAEjBrvD,EAAQI,KAAK,CACTmB,SAFO,iBAMT+tD,EAAiB,WACnB9yD,aAAaY,WAAW,kCACxBZ,aAAae,QAAQ,iCAAkC1H,KAAKC,UAAUkzD,EAAeuG,cAAc53B,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,YAE7G,OAAdwqC,GAAsBA,EAAUA,UAAU51D,OAAS,IACnDmD,aAAae,QAAQ,gBAAiB0xD,EAAUA,UAAU,GAAGroD,MAC7DpK,aAAae,QAAQ,cAAe0xD,EAAUA,UAAU,GAAGv2D,GAAGvD,aAElE6K,EAAQI,KAAK,CACTmB,SANO,gBAOPH,MAAO,CAAEi5B,WAAYA,MAmB7B,OACI1mB,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KACL,kBAAC,IAAD,MAGY21B,EAASA,SAASr9B,QAAU,EACrB,GAGgC,KAAnCq9B,EAASA,SAAS,GAAGmD,UACd,yBAAKtgC,UAAU,YAClB,yBAAKA,UAAU,oCACX,4BACIA,UAAU,uBACVb,GAAG,oBACH8H,QAAS8uD,GAET,uBAAG/1D,UAAU,gBALjB,6BAUJ,yBAAKA,UAAU,mCACX,4BACIA,UAAU,uBACVb,GAAG,mBACH8H,QAAS,WACL9D,EAASL,GAAqBgvD,GAA2Bl8C,SACzD+/C,MAGJ,uBAAG31D,UAAU,mBARjB,4BAaJ,yBAAKA,UAAU,mCACX,4BACIA,UAAU,oBACVb,GAAG,oBACH8H,QAAS,WACL9D,EAASL,GAAqBgvD,GAA2BmE,UAzLjG17C,GAAU,KA6L0B,uBAAGva,UAAU,mBARjB,qBAeD,yBAAKA,UAAU,YAClB,yBAAKA,UAAU,oCACX,4BACIA,UAAU,uBACVb,GAAG,oBACH8H,QAAS8uD,GAET,uBAAG/1D,UAAU,gBALjB,6BAUJ,yBAAKA,UAAU,mCACX,4BACIA,UAAU,uBACVb,GAAG,mBACH8H,QAAS,WACL9D,EAASL,GAAqBgvD,GAA2Bl8C,SACzD+/C,MAGJ,uBAAG31D,UAAU,mBARjB,6BAmBxB,kBAAC,KAAD,CACI/B,KAAM6nB,EACN3J,QAAS,kBAAM4J,GAAS,IACxB3J,sBAAoB,GAEpB,oCAEQ,WACI,GAAKy2C,EAAUl9C,oBAAsBm8C,GAA2Bl8C,QAAYi9C,EAAUl9C,oBAAsBm8C,GAA2BtyC,KACnI,OAAO,kBAAC,GAAD,CAAc1J,QAASoQ,IAFtC,KASZ,kBAAC,KAAD,CACIjoB,KAAMqc,EACN6B,QAAS,kBAAM5B,GAAU,IACzB6B,sBAAoB,GAEpB,oCAEQ,WACI,GAAKy2C,EAAUl9C,oBAAsBm8C,GAA2BmE,QAC5D,OAAO,kBAAC,GAAD,CAAkBngD,QAAS0E,IAF1C,KASZ,yBAAKxa,UAAU,OACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,mBACzC,yBAAKa,UAAU,aACX,yBAAKA,UAAU,uCACX,wBAAIb,GAAG,aAAP,wBAEJ,yBAAKa,UAAU,kBACX,uBAAGb,GAAG,SAAN,WAEYg+B,EAASA,SAASr9B,QAAU,EACrB,GAGAq9B,EAASA,SAAS,GAAG9vB,OAM5C,yBAAKrN,UAAU,kBACX,uBAAGb,GAAG,SAAN,oBAGJ,yBAAKa,UAAU,+BACX,4BACIA,UAAU,uBACVb,GAAG,oBACH8H,QA9M3B,WAEjBR,EAAQI,KAAK,CACTmB,SAFO,gBAGPH,MAAO,CAAEi5B,WAAYA,OAuMe,sBASJ,yBAAK9gC,UAAU,kBACX,uBAAGb,GAAG,SAAN,qBAGgBg+B,EAASA,SAASr9B,QAAU,EACrB,IAGiC,IAApCq9B,EAASA,SAAS,GAAGkD,WACd,2BAGA,wCAO/B,yBAAKrgC,UAAU,OACX,yBAAKA,UAAU,8BAGCm9B,EAASA,SAASr9B,QAAU,EACrB,IAGiC,IAApCq9B,EAASA,SAAS,GAAGkD,WAEjB,4BACIrgC,UAAU,uBACVb,GAAG,gBACH8H,QAAS4uD,GAHb,4BAFR,GAehB,yBAAK71D,UAAU,8BAGCm9B,EAASA,SAASr9B,QAAU,EACrB,IAGiC,IAApCq9B,EAASA,SAAS,GAAGkD,WAEjB,4BACIrgC,UAAU,uBACVb,GAAG,sBACH8H,QAAS6uD,GAHb,4BAFR,UAwB5C,yBAAK91D,UAAU,0BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAS,0BACV,yBAAKA,UAAU,aACX,yBAAKA,UAAU,uCACX,wBAAIb,GAAG,aAAP,mBACA,yBAAKa,UAAU,4BACX,2BAAOA,UAAU,SACb,2BAAOA,UAAU,eACb,8BAGJ,+BAEQ6yD,EAAUA,UAAU5lD,KAAI,SAAC3B,EAAK4B,GAC1B,OACI,wBAAIlN,UAAS,YAAe4Q,IAAG,yBAAoB1D,IAC/C,yBAAKlN,UAAU,6CAA6CiH,QAAS,YA7QxH,SAACqG,EAAqBD,EAAc09C,EAAoB5rD,GAEzE8D,aAAaY,WAAW,wBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,uBACxBZ,aAAaY,WAAW,eACxBZ,aAAae,QAAQ,uBAAwBsJ,GAC7CrK,aAAae,QAAQ,gBAAiBqJ,GACtCpK,aAAae,QAAQ,sBAAuB+mD,GAC5C9nD,aAAae,QAAQ,cAAe7E,EAAGvD,YACvC6K,EAAQI,KAAK,CACTmB,SAVO,cA4QsIkuD,CAAa5qD,EAAIgC,YAAahC,EAAI+B,KAAM/B,EAAIy/C,WAAYz/C,EAAInM,MACrI,yBAAKa,UAAU,wCACX,yBAAKA,UAAU,WAAWkH,IAAI,wFAAwFC,IAAI,MAE9H,yBAAKnH,UAAU,0BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAiBmM,EAAI+B,MAC9C,wBAAIrN,UAAU,QAAQb,GAAG,iBAAzB,4CAA8DmM,EAAIy/C,+BC5a/I,SAASoL,GAA4Bh3D,GACxC,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EPGG,CACH7D,KAAMgB,KOHN8C,MAAM,GAAD,OACMC,+BADN,mCAC8DlE,GAAM,CAC7D9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASgzD,GAA4Bh3D,OAUhDmE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAAS0wD,MAET9vD,EAAKhG,KAAKm2D,aAAajnD,KAAI,SAAC3B,EAAU4B,GAClC,IAAIymD,EAA8B,CAC9Bx0D,GAAImM,EAAInM,GACRg1D,YAAa7oD,EAAI6oD,YACjB9mD,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB4d,OAAQ5f,EAAI4f,QAGhB,OACW/nB,EADG,IAAV+J,EACgB0mD,GAAoBD,GAGpBG,GAAgBH,UAI3CxvD,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aCtDrB,SAASs6D,GAAyB9nB,EAA2BvqC,EAAWqJ,EAAU6nC,GACrF,IAAI7wC,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,ENQG,CACH7D,KAAMgB,KMRN8C,MAAM,GAAD,OACMC,+BADN,2BAC8D,CACvDhG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASizD,GAAyB9nB,EAAUvqC,EAAMqJ,EAAK6nC,OAUlE3xC,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZ,IAAIuM,EAAQg+B,EAASxuC,OACrBjE,QAAQC,IAAIwU,GACZg+B,EAASrhC,KAAI,SAAC5N,EAAO6N,GACjB,OAAIA,IAAUoD,EAAQ,GAClB2kC,IACO9xC,ECzCxB,SAASkzD,EAAkCzpB,EAA2Bx/B,GACzE,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,gCACmE,CAC5DhG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUqwC,KAG5BtpC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASkzD,EAAkCzpB,EAAsBx/B,OAU5E9J,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZkB,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,kGAAmD5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,SAErKpB,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aDKYu6D,CAAkC,CAC9CC,0BAA2BvyD,EAAK5E,GAChCkO,KAAMtJ,EAAKsJ,KACXC,YAAajO,EAAMiO,YACnB4d,OAAQ7rB,EAAM6rB,QACf9d,KAEAjK,EEjDpB,SAASozD,EAA6B3pB,GACzC,IAAIxoC,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,gCACmE,CAC5DhG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUqwC,KAG5BtpC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAET,OADAN,EAASJ,MACFI,EAASozD,EAA6B3pB,IAG7C,MAAMlpC,MAAMH,EAASI,eAOhCL,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,MAEfI,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aFcQy6D,CAA6B,CACzCD,0BAA2BvyD,EAAK5E,GAChCkO,KAAMtJ,EAAKsJ,KACXC,YAAajO,EAAMiO,YACnB4d,OAAQ7rB,EAAM6rB,gBAIzB/mB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,kGAAmD5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAChK1J,QAAQC,IAAI,a,+NG0eb06D,OAjgBf,SAA4B/3D,GACxB,IAAM0E,EAA0BqD,cAC1B22B,EAAiCv1B,aAAY,SAACC,GAAD,OAAuBA,EAAMs1B,YAC1EsyB,EAA4C7nD,aAAY,SAACC,GAAD,OAAuBA,EAAM4nD,kBACrFryD,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAC/EpX,QAAQC,IAAI2zD,EAAeuG,eAC3B,IAAI13B,EAA2BnB,EAASs5B,gBANsB,EAQhC/3D,oBAAS,GARuB,mBAQvDoqB,EARuD,KAQ9CC,EAR8C,KAU1D/c,EAAO/I,aAAaC,QAAQ,cAC5B49B,EAAqB,EACZ,OAAT90B,IACA80B,EAAa3wB,SAASnE,IAG1B,IAAI0O,EAAOzX,aAAaC,QAAQ,kBAC5B8kC,EAAyB,EAChB,OAATttB,IACAstB,EAAiB73B,SAASuK,IAG9B,IAAIE,EAAO3X,aAAaC,QAAQ,kCAC5B44C,EAAmC,GACnCC,EAAe,GACN,OAATnhC,IAEAmhC,EAA2C,KAD3CD,EAAmBx/C,KAAK4B,MAAM0c,IACE9a,OAAeg8C,EAAiB,GAAGxuC,YAAa,IAIpF,IAAI0/B,EAAO/pC,aAAaC,QAAQ,eAC5BixD,EAAsB,EACb,OAATnnB,IACAmnB,EAAchkD,SAAS68B,IAG3B,IAAIgP,EAAO/4C,aAAaC,QAAQ,iBAC5B+4C,EAAwB,GACf,OAATD,IACAC,EAAgBD,GAGpB,IAAIlhC,EAAO7X,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT2b,IACA3b,EAAK2b,GAIT,IAAIa,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAOb8C,EAASgzD,GAA4BhC,OAG9C,CAAChxD,EAAUwY,EAAc3Y,EAAemxD,IAE3C,IAAM1tD,EAAUC,cAChB,SAASuuC,IAELxuC,EAAQI,KADA,oBApFkD,MAwFhCnI,mBAASq9C,GAxFuB,mBAwFzDlO,EAxFyD,KAwF/CC,EAxF+C,KA0FzDxP,IACDA,EAAU,CAAEn/B,GAAI,EAAGkO,KAAM,GAAI6d,OAAQ,EAAIwL,SAAU,EAAG2J,YAAY,EAAOC,UAAW,GAAIjiC,QAAS,GAAIgnB,aAAc,KAGvHxpB,QAAQC,IAAI2zD,EAAeuG,eACiB,IAAxCvG,EAAeuG,cAAcl2D,SAC7Bw+B,EAAU,CAAEn/B,GAAI,EAAGkO,KAAM,GAAI6d,OAAQ,EAAIwL,SAAU,EAAG2J,YAAY,EAAOC,UAAW,GAAIjiC,QAAS,GAAIgnB,aAAc,KAIvH1Z,qBAAU,WACNxI,EAASmQ,GAAkB,yBAAkB,8BAC9C,CAAClW,EAAK+V,KAAMhQ,IAtG+C,MAyG5BzE,mBAAS,CACvC2O,KAAM,CAAExO,MAAO,GAAIQ,MAAO48C,GAC1B/wB,OAAQ,CAAErsB,MAAO,GAAIQ,MAAOi/B,EAAQpT,QACpCmV,WAAY,CAAExhC,MAAO,GAAIQ,MAAOi/B,EAAQ+B,YACxC3J,SAAU,CAAE73B,MAAO,GAAIQ,MAAOi/B,EAAQ5H,UACtC4J,UAAW,CAAEzhC,MAAO,GAAIQ,MAAOi/B,EAAQgC,WACvCjiC,QAAS,CAAEQ,MAAO,GAAIQ,MAAOi/B,EAAQjgC,WA/GqB,mBAyGvDsI,EAzGuD,KAyG5CC,EAzG4C,OAkH5BlI,mBAASo9C,EAAiBh8C,QAlHE,mBAkHvDo8C,EAlHuD,KAkH5CC,EAlH4C,OAmHxBz9C,mBAAiB,GAnHO,mBAmHvD2uC,EAnHuD,KAmH1CC,EAnH0C,OAoHlB5uC,mBAAiB,GApHC,oBAoHvDg4D,GApHuD,MAoHvCC,GApHuC,SAsHlBj4D,oBAAS,GAtHS,qBAsHvD09C,GAtHuD,MAsHvCC,GAtHuC,SAuHd39C,oBAAS,GAvHK,qBAuHvD49C,GAvHuD,MAuHrCC,GAvHqC,MAmI9D,SAASjmC,KACL,GAAIgoB,EACA,IAAuB,IAAnB8d,IAA4B/O,IAAgB6O,IAAkC,IAArBI,GACzDr3C,IAAMu3C,QAAQ,sFAA4C,CACtDp3C,SAAUH,IAAMI,SAASC,WACzBC,UAAW,UAId,CACD,IAAM6H,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAC9DlC,SAAUH,IAAMI,SAASC,aAON,OAAnBmqD,GACIA,EAAeuG,cAAcl2D,OAAS,GACtCqD,EAASizD,GAAyB3G,EAAeuG,cAAe,CAC5Dl1B,WAAYA,EACZzY,WAAYlpB,EACZkO,KAAM1G,EAAU0G,KAAKhO,MACrBoE,OAAQ,oBACT2J,EAAK6nC,KAQ5B,SAASlH,KACL,GAAuB,OAAnB0hB,EACA,IAAuB,IAAnBrT,IAA4B/O,IAAgB6O,IAAkC,IAArBI,GACzDr3C,IAAMu3C,QAAQ,sFAA4C,CACtDp3C,SAAUH,IAAMI,SAASC,WACzBC,UAAW,WAIf,IAAyB,IAArB+2C,GAA2B,CAC3B,IAAInlC,EAAIk2B,EAAc,EACtBspB,GAAkBx/C,EAAE,GACpBm2B,EAAen2B,GACftb,QAAQC,IAAI2zD,EAAeuG,cAAc53B,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,WACrE4iB,OAAsFzyB,IAA1Eo0C,EAAeuG,cAAc53B,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQ/T,EAAE,GAAmBs4C,EAAeuG,cAAc53B,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQ/T,EAAE,GAAG7J,YAAc,IACtLyb,GAAW,GACX9pB,GAAS,IACTs9C,IAAoB,OAEnB,CACD,IAAIplC,EAAIk2B,EAAc,EACtBC,EAAen2B,GACftb,QAAQC,IAAI2zD,EAAeuG,cAAc53B,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,WACrE4iB,OAAsFzyB,IAA1Eo0C,EAAeuG,cAAc53B,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQ/T,EAAE,GAAmBs4C,EAAeuG,cAAc53B,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQ/T,EAAE,GAAG7J,YAAc,IACtLyb,GAAW,GACX9pB,GAAS,KAMzB,SAASiwC,KACL,GAAuB,OAAnBugB,EACA,IAAuB,IAAnBrT,IAA4B/O,IAAgB6O,IAAkC,IAArBI,GACzDr3C,IAAMu3C,QAAQ,sFAA4C,CACtDp3C,SAAUH,IAAMI,SAASC,WACzBC,UAAW,WAGd,IAAuB,IAAnB62C,IAA4B/O,IAAgB6O,EACjDj3C,IAAMu3C,QAAQ,sFAA4C,CACtDp3C,SAAUH,IAAMI,SAASC,WACzBC,UAAW,UAGd,CACD,IAAI4R,EAAIk2B,EAAc,EACtBspB,GAAkBx/C,EAAE,GACpBm2B,EAAen2B,GACftb,QAAQC,IAAI2zD,EAAeuG,cAAc53B,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,WACrE4iB,EAAY2hB,EAAeuG,cAAc53B,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQ/T,EAAE,GAAG7J,aAClFyb,GAAW,GACX9pB,GAAS,KAMrB,SAASkwC,KACL,GAAuB,OAAnBsgB,EACA,IAAuB,IAAnBrT,IAA4B/O,IAAgB6O,IAAkC,IAArBI,GACzDr3C,IAAMu3C,QAAQ,sFAA4C,CACtDp3C,SAAUH,IAAMI,SAASC,WACzBC,UAAW,WAGd,IAAuB,IAAnB62C,IAA4B/O,IAAgB6O,EACjDj3C,IAAMu3C,QAAQ,sFAA4C,CACtDp3C,SAAUH,IAAMI,SAASC,WACzBC,UAAW,UAGd,CACD,IAAMk3C,EAAIpP,EAEV8O,EADQD,EAAY,GAGpBya,GAAkBla,EAAE,GAEpB,IAAMrvC,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAC9DlC,SAAUH,IAAMI,SAASC,aAE7B,GAAIm3C,IAAMgT,EAAeuG,cAAcl2D,OAEnCwtC,EADQmP,EAAI,GAEZt5C,EAAS6wD,GAAmBvE,EAAeuG,cAAcvZ,EAAE,GAAGt9C,KAC9D+vC,UAGAugB,EAAeuG,cAAc53B,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQje,KAAI,SAAC3B,EAAK8B,GAavE,OAZIqvC,EAAG,IAAMnxC,EAAI4f,OACb/nB,EAAS6wD,GAAmB1oD,EAAInM,KAE3BmM,EAAI4f,OAASuxB,EAAI,GACtBt5C,EAAS4wD,GAAiB,CACtB50D,GAAImM,EAAInM,GACRmO,YAAahC,EAAIgC,YACjBD,KAAM/B,EAAI+B,KACV8mD,YAAaA,EACbjpC,OAAQ5f,EAAI4f,OAAS,KAGtB,KAEXgkB,KAEJjqC,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,yCAAuB5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,OAUlJ,SAAS6pC,KACL,IAAuB,IAAnBgN,IAA4B/O,IAAgB6O,IAAkC,IAArBI,GACzDr3C,IAAMu3C,QAAQ,sFAA4C,CACtDp3C,SAAUH,IAAMI,SAASC,WACzBC,UAAW,WAGd,IAAuB,IAAnB62C,IAA4B/O,IAAgB6O,EACjDj3C,IAAMu3C,QAAQ,sFAA4C,CACtDp3C,SAAUH,IAAMI,SAASC,WACzBC,UAAW,UAGd,CACD,IAAI4R,EAAIk2B,EAAc,EACtBspB,GAAkBx/C,EAAE,GACpBm2B,EAAen2B,GACfklC,IAAkB,GAElBF,EADQD,EAAY,GAEpBrgD,QAAQC,IAAIuxC,EAAc,GAC1BtkB,GAAW,GACX+kB,EAAY,IACZ7uC,GAAS,KA5BjBpD,QAAQC,IAAI,cAAeuxC,GAC3BxxC,QAAQC,IAAI,UAAW46D,IApRuC,OAmTpCh4D,mBAAS,IAnT2B,qBAmTvDW,GAnTuD,MAmThDJ,GAnTgD,MA2T9D,SAASy9C,KACL,GAAuB,OAAnB+S,EAAwB,CACxB,IAAMriD,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAC9DlC,SAAUH,IAAMI,SAASC,aAEvBm3C,EAAIpP,GAEa,IAAnB+O,IACIK,EAAI,IAAMgT,EAAeuG,cAAcl2D,QACvCjE,QAAQC,IAAI,OACZqH,EAAS2wD,GAAgB,CACrBxmD,YAAajO,GACbgO,KAAM1G,EAAU0G,KAAKhO,MACrB80D,YAAaA,EACbjpC,OAAQukC,EAAeuG,cAAcl2D,OACrCX,IAAKswD,EAAeuG,cAAcl2D,OAAS,GAAGlE,gBAIlDC,QAAQC,IAAI,OACZ2zD,EAAeuG,cAAc53B,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQje,KAAI,SAAC3B,EAAK8B,GAuCvE,OAtCI9B,EAAI4f,SAAWuxB,EAAG,GAClB5gD,QAAQC,IAAI,KACZqH,EAAS4wD,GAAiB,CACtBzmD,YAAahC,EAAIgC,YACjBD,KAAM/B,EAAI+B,KACV8mD,YAAaA,EACbjpC,OAAQ5f,EAAI4f,OAAS,EACrB/rB,GAAImM,EAAInM,MAEZgE,EAAS2wD,GAAgB,CACrBxmD,YAAajO,GACbgO,KAAM1G,EAAU0G,KAAKhO,MACrB80D,YAAaA,EACbjpC,OAAQ5f,EAAI4f,OACZ/rB,IAAKswD,EAAeuG,cAAcl2D,OAAS,GAAGlE,eAG7C0P,EAAI4f,OAASuxB,EAAI,IACtB5gD,QAAQC,IAAI,KACRwP,EAAI4f,OAASukC,EAAeuG,cAAcl2D,OAC1CqD,EAAS4wD,GAAiB,CACtBzmD,YAAahC,EAAIgC,YACjBD,KAAM/B,EAAI+B,KACV8mD,YAAaA,EACbjpC,OAAQ5f,EAAI4f,OAAS,EACrB/rB,GAAImM,EAAInM,OAab,MAWfk9C,IAAkB,IAGdI,EAAIgT,EAAeuG,cAAcl2D,OAAS,GAC1CqD,EAAS4wD,GAAiB,CACtBzmD,YAAajO,GACbgO,KAAM4uC,EACNkY,YAAaA,EACbjpC,OAAQuxB,EAAE,EACVt9C,GAAIswD,EAAeuG,cAAc53B,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQuxB,EAAE,GAAGt9C,MAE/EtD,QAAQC,IAAI,CACPwR,YAAajO,GACbgO,KAAM4uC,EACNkY,YAAaA,EACbjpC,OAAQuxB,EAAE,MAIdt5C,EAAS2wD,GAAgB,CACrBxmD,YAAajO,GACbgO,KAAM1G,EAAU0G,KAAKhO,MACrB80D,YAAaA,EACbjpC,OAAQukC,EAAeuG,cAAcl2D,OACrCX,IAAKswD,EAAeuG,cAAcl2D,OAAS,GAAGlE,cAGlDC,QAAQC,IAAI,CACRwR,YAAajO,GACbgO,KAAM4uC,EACNkY,YAAaA,EACbjpC,OAAQukC,EAAeuG,cAAcl2D,UAIjDjE,QAAQC,IAAI2zD,EAAeuG,eAC3BzZ,IAAoB,GAEpBt3C,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,6CAAyB5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,OAKhJ,OAxHA1J,QAAQC,IAAI,QAASuD,IAyHjB,kBAAC,WAAD,KACI,kBAAC,IAAD,MACA,yBAAKW,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,aAAsDgoC,IAE1D,yBAAKhoC,UAAU,aACX,0BAAMoH,SAtT1B,SAAkBhJ,GACdA,EAAEiJ,mBAsTkB,yBAAKrH,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,EAAD,CAAWb,GAAG,aACVE,MAAOsH,EAAU0G,KAAKhO,MACtBU,MAAM,OACNR,SAlUpC,SAA6BwH,GACzBH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,WAkU/CO,UAAU,EACVC,UAAW,IACXT,MAAM,0BACNc,YAAY,OAGxB,yBAAKF,UAAU,cACX,+DAAsBqtC,EAAtB,MAAsC6O,GACtC,kBAAC,GAAD,CAAQtQ,SA9IpC,SAAkBvsC,GACdJ,GAASI,GACT0pB,GAAW,IA4IyCrT,SAAUoT,EAAS7pB,SAAU4uC,KAGzD,WACI,GAAIR,EAAc6O,EACd,OAAoB,IAAhB7O,EAEI,yBAAKrtC,UAAU,OACf,yBAAKA,UAAU,8BACX,4BAAQV,KAAK,SAASU,UAAU,4BAA4BiH,QAASy1C,IAArE,qBACA,4BAAQp9C,KAAK,SAASU,UAAU,qCAAqCiH,QAAS8mC,IAA9E,kCAEJ,yBAAK/tC,UAAU,8BACX,4BAAQV,KAAK,SAASU,UAAU,wCAAwCiH,QAASmoC,IAAjF,4BAOJ,yBAAKpvC,UAAU,OACX,yBAAKA,UAAU,8BACX,4BAAQV,KAAK,SAASU,UAAU,4BAA4BiH,QAASioC,IAArE,oBACA,4BAAQ5vC,KAAK,SAASU,UAAU,qCAAqCiH,QAASy1C,IAA9E,qBACA,4BAAQp9C,KAAK,SAASU,UAAU,qCAAqCiH,QAAS8mC,IAA9E,kCAEJ,yBAAK/tC,UAAU,8BACX,4BAAQV,KAAK,SAASU,UAAU,sDAAsDiH,QAASkoC,IAA/F,yBACA,4BAAQ7vC,KAAK,SAASU,UAAU,wCAAwCiH,QAASmoC,IAAjF,4BAzBxB,GAkCA,WACI,GAAI/B,IAAgB6O,EAChB,OACI,yBAAKl8C,UAAU,OACX,yBAAKA,UAAU,8BACX,4BAAQV,KAAK,SAASU,UAAU,4BAA4BiH,QAASy1C,IAArE,qBACA,4BAAQp9C,KAAK,SAASU,UAAS,iDAAoDiH,QAASqP,IAA5F,qBAEJ,yBAAKtW,UAAU,8BACX,4BAAQV,KAAK,SAASU,UAAU,wCAAwCiH,QAASmoC,IAAjF,4BATpB,SC5XjBwnB,GA3IsB,WACjC,IAAMzzD,EAA0BqD,cAC1BqwD,EAAoCjvD,aAAY,SAACC,GAAD,OAAuBA,EAAM4nD,kBAE/E/0C,EAAOzX,aAAaC,QAAQ,cAE5B49B,EAAa,EAEJ,OAATpmB,IACAomB,EAAa3wB,SAASuK,IATa,MAYbhc,mBAAS,GAZI,mBAYhCwgD,EAZgC,KAYzB+Q,EAZyB,KAc/B71C,EAAsBC,+BAAtBD,kBAER,SAAS08C,IACL,IACIx/C,EADI4nC,EACI,EADJA,EAEA2X,EAAcb,cAAcl2D,SAChCjE,QAAQC,IAAI,SACZm0D,EAAS34C,IAEbzb,QAAQC,IAAIojD,GAGhB,SAAS6X,IACG7X,EAEA,GACJ+Q,EAHI/Q,EACI,GAMhB,IAAIvjC,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBA+BzC,OA9BAyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAaqoD,GAAyB9wD,EAAU29B,OAGzD,CAAC39B,EAAUwY,EAAc3Y,EAAe89B,IAGvC1mB,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI5B,kBAAC,WAAD,KACJ,yBAAKxH,UAAU,OACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAS,0BACV,yBAAKA,UAAU,aACX,yBAAKA,UAAU,uCACX,wBAAIb,GAAG,aAAoD,IAAvC03D,EAAcb,cAAcl2D,OAAe+2D,EAAcb,cAAc,GAAG3oD,KAAO,KAEzG,yBAAKrN,UAAU,kBAGC62D,EAAcb,cAAcl2D,OAAS,EAC9B,GAGA,yBAAKE,UAAU,YAAYuiD,wBAAyB,CAAEC,OAAQqU,EAAcb,cAAc53B,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQg0B,EAAM,GAAG5xC,gBAM9J,yBAAKtN,UAAU,wCAGCk/C,EAAQ2X,EAAcb,cAAcl2D,OACtB,IAAVo/C,EAEI,4BAAQl/C,UAAS,8BAAiCiH,QAAS,WAAO6vD,MAAlE,mBAGC5X,EAAQ,EAET,oCACI,4BAAQl/C,UAAS,8BAAiCiH,QAAS,WAAO8vD,MAAlE,oBACA,4BAAQ/2D,UAAS,8BAAiCiH,QAAS,WAAO6vD,MAAlE,yBAJP,EAYD,4BAAQ92D,UAAS,8BAAiCiH,QAAS,WAAO8vD,MAAlE,8B,OCjHrD,SAASC,GAAyB7zD,EAAehE,GACpD,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,kCACyDlE,GAAM,CAC5D9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS6zD,GAAyB7zD,EAAUhE,OAUvDmE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASmpD,MACTnpD,EAASqpD,MACTrpD,EAASipD,MAETroD,EAAKhG,KAAKouD,cAAcl/C,KAAI,SAAC3B,EAAU4B,GACnC,IAAI8d,EAAY1f,EAAIod,YAChBuC,EAAY3f,EAAIqd,YAChBwjC,EAA8B,CAC9BhtD,GAAImM,EAAInM,GACRmO,YAAahC,EAAIgC,YACjBwzB,WAAYx1B,EAAIw1B,WAChBpK,SAAUprB,EAAIorB,SACdsR,eAAgB18B,EAAI08B,eACpBpwB,WAAYtM,EAAIsM,WAChBzF,WAAY7G,EAAI6G,WAChBiT,YAAa9Z,EAAI8Z,YACjB3hB,OAAQ6H,EAAI7H,OACZ2O,aAAc9G,EAAI8G,aAClBq2B,aAAcn9B,EAAIm9B,aAClB/f,YAAasC,EACbrC,YAAasC,GAGjB,OACW9nB,EADkB,aAAzBgpD,EAAc1oD,OACE8oD,GAAwBJ,GAEV,iBAAzBA,EAAc1oD,OACHgpD,GAA2BN,GAG3BE,GAA8BF,UAIzDhoD,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YC+Ebm7D,OAvJf,SAA0Bx4D,GAEtB,IAAM0E,EAAWqD,cAEXknD,EAAiB9lD,aAAY,SAACC,GAAD,OAAWA,EAAM6lD,kBAC9CjnD,EAAUC,cAEVmiD,EAAgB,SAACsD,GACnBlpD,aAAaY,WAAW,iBACxBZ,aAAae,QAAQ,gBAAiBmoD,EAAc7+C,aAEpD7G,EAAQI,KAAK,CACTmB,SAFO,2BAMTkvD,EAAqB,SAAC/K,EAAe1oD,GACvC,IAAMtE,EAAK8F,IAAMqC,QAAQ,0EAA2C,CAChElC,SAAUH,IAAMI,SAASC,aAE7BnC,EC3BD,SAASg0D,EAAsBh4D,EAAS4E,EAAWqJ,GACtD,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,gCAC2DlE,GAAM,CAC1D9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASg0D,EAAsBh4D,EAAI4E,EAAMqJ,OAUpD9J,MAAM,SAAAe,GACHxI,QAAQC,IAAIuI,GACZY,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,mCAAsB5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,SAExIpB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,4BAAoB5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,UDThI4xD,CAAsBhL,EAAchtD,GAAI,CAC7CsE,OAAQA,GACTtE,KAGHse,EAAQiwC,EAAerlB,OAEvBprC,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KA6B3ByL,EAAU,CACd,CACEC,UAAW,aACXjL,KAAM,WACNkL,OAAQC,yBAEV,CACEF,UAAW,eACXjL,KAAM,qBACNkL,OAAQC,yBAEV,CACEF,UAAW,eACXjL,KAAM,gBACNkL,OAAQC,yBAEV,CACEF,UAAW,iBACXjL,KAAM,qBACNkL,OAAQC,yBAEV,CACEF,UAAW,GACXjL,KAAM,yBACNoL,UAjDJ,SAA0BC,EAAMC,GAC9B,OACE,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACzD4hD,EAAc7pC,KADhB,mBAiDF,CACEL,UAAW,GACXjL,KAAM,GACNoL,UA9CJ,SAA2BC,EAAMC,GAC/B,OACE,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACzDiwD,EAAmBl4C,EAAK,cAD1B,yBA8CF,CACEL,UAAW,GACXjL,KAAM,GACNoL,UA3CJ,SAA2BC,EAAMC,GAC/B,OACE,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACzDiwD,EAAmBl4C,EAAK,kBAD1B,cAiEJ,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACEU,WACEC,KAAkB1iB,KAzBP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aE1BDu3C,GAhGkB,WAC7B,IAAMj0D,EAA0BqD,cAC1BknD,EAAqC9lD,aAAY,SAACC,GAAD,OAAuBA,EAAM6lD,kBAC9ExlB,EAAqCtgC,aAAY,SAACC,GAAD,OAAuBA,EAAMqgC,kBACpFrsC,QAAQC,IAAI4xD,GACZ7xD,QAAQC,IAAIosC,GALuB,IAM3B9tB,EAAsBC,+BAAtBD,kBACFhd,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzEokD,EAAgD3J,EAAerlB,OAAOvoC,OACxEkM,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAGT,IAAI2P,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAoCzC,OAnCAyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAaorD,GAAyB7zD,EAAUhE,OAIzD,CAACgE,EAAUwY,EAAc3Y,EAAe7D,IAE3CwM,qBAAU,WACNxI,EAASmQ,GAAkB,kBAAW,oBACvC,CAAClW,EAAK+V,KAAMhQ,IAGXiX,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KAGL,kBAAC,IAAD,MACA,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,6CAAsB6I,KAAI,UAAK2jD,GAAyCzsD,KAAK,OAAO6I,MAAM,aAW7G,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,oDAEJ,yBAAKa,UAAU,aACX,kBAAC,GAAD,YCkFjBs3D,GA1Ke,WAC1B,IAAMn0D,EAA0BqD,cAC1BkpD,EAAiD9nD,aAAY,SAACC,GAAD,OAAuBA,EAAM6nD,wBAC1FvS,EAA8BuS,EAAqB6H,iBAAiBz3D,OACpEs9C,EAAoCsS,EAAqBC,qBAAqB7vD,OAC9E03D,EAA4B9H,EAAqB6H,iBAAiBz3D,OAEhEsa,EAAsBC,+BAAtBD,kBAEJq9C,EAAuBx0D,aAAaC,QAAQ,wBAC5Cw0D,EAAgC,GACP,OAAzBD,IACAC,EAAwBD,GAG5B,IAAIlK,EAAgBtqD,aAAaC,QAAQ,iBACrCy0D,EAAyB,GACP,OAAlBpK,IACAoK,EAAiBpK,GAGrB,IAAIqK,EAAsB30D,aAAaC,QAAQ,uBAC3C20D,EAA+B,GACP,OAAxBD,IACAC,EAAuBD,GAG3B,IAAIl9C,EAAOzX,aAAaC,QAAQ,eAC5B6rD,EAAc,EAEL,OAATr0C,IACAq0C,EAAc5+C,SAASuK,IAK3B,IAAIiB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAamkD,GAAgC5sD,EAAU4rD,OAGhE,CAAC5rD,EAAUwY,EAAc3Y,EAAe+rD,IAI3C,IAAMtoD,EAAUC,cAehB,OACI0T,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KAIH,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,sCAAiB6I,KAAI,UAAKypC,GAAuBvyC,KAAK,OAAO6I,MAAM,YAClF,kBAAC,GAAD,CAAS5I,MAAM,sBAAY6I,KAAI,UAAK0pC,GAA6BxyC,KAAK,OAAO6I,MAAM,YAEvF,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,yBAAKA,UAAU,uCACX,wBAAIb,GAAG,aAAP,wBAEJ,yBAAKa,UAAU,kBACX,uBAAGb,GAAG,SAASw4D,IAEnB,yBAAK33D,UAAU,iBAAiBuiD,wBAAyB,CAAEC,OAAQkV,KACnE,yBAAK13D,UAAU,OACX,uBAAGA,UAAU,8BAA8B,0BAAMA,UAAU,8BAAhB,4CAA3C,IAAmH,0BAAMA,UAAU,oCAAoC63D,EAApD,cAW/I,WACI,GAAIL,EAAoB,EACpB,OACI,yBAAKx3D,UAAU,mCACX,4BACIA,UAAU,4BACVb,GAAG,sBACH8H,QAAS,WAxDrCR,EAAQI,KAAK,CACTmB,SAFO,6BAsDa,qBAMI,uBAAGhI,UAAS,2BAA8Bb,GAAG,uBAVjE,GAmBA,WACI,GAAIi+C,EAA4B,EAC5B,OACI,yBAAKp9C,UAAU,mCACX,4BACIA,UAAU,4BACVb,GAAG,yBACH8H,QAAS,WAlFrCR,EAAQI,KAAK,CACTmB,SAFO,sBAgFa,mBAMI,uBAAGhI,UAAS,2BAA8Bb,GAAG,uBAVjE,KClFD24D,GArEsB,WACjC,IAAM30D,EAA0BqD,cAC1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAC3EyH,EAAOzX,aAAaC,QAAQ,iBAC5B60D,EAAwB,GACf,OAATr9C,IACAq9C,EAAgBr9C,GAGpB,IAAIiB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAqCzC,OApCAyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,IAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,SAUtB,CAAC8C,EAAUwY,EAAc3Y,IAG5B2I,qBAAU,WACNxI,EAASmQ,GAAkB,qCAAoB,oBAChD,CAAClW,EAAK+V,KAAMhQ,IAIX,kBAAC,WAAD,KAEI,yBAAKnD,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAmCb,GAAG,iBAApD,aAEJ,yBAAKa,UAAU,aACX,2BACK+3D,SC5BlBC,GAlCwB,WAEHxxD,aAChCrD,CAASmQ,GAAkB,qBAAY,KACvC,IAAItH,EAAO/I,aAAaC,QAAQ,sBAC5BoK,EAAc,GAKlB,OAJa,OAATtB,IACAsB,EAActB,GAId,kBAAC,WAAD,KACI,wBAAIhM,UAAU,yBAAd,0BAGA,yBAAKA,UAAU,OAEX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,kBAEJ,yBAAKA,UAAU,YAAYuiD,wBAAyB,CAAEC,OAAQl1C,UCvBzE2qD,GAAsD,8CACtDC,GAAuD,+CACvDC,GAAyD,iDAEzDC,GAAsE,8DACtEC,GAAqE,6DACrEC,GAA6D,qDAC7DC,GAA0D,kDAG1DC,GAA8C,sCAC9CC,GAA+C,uCAC/CC,GAAiD,yCAIjDC,GAAqD,6CACrDC,GAAkD,0CAIlDC,GAAmE,2DACnEC,GAAoE,4DACpEC,GAAsE,8DAItEC,GAA0E,kEAC1EC,GAAuE,+DAIvEC,GAAkD,0CAClDC,GAAmD,2CACnDC,GAAqD,6CAIrDC,GAAyD,iDACzDC,GAAsD,8CAGtD33D,GAAiC,yBACjCrB,GAA6B,qBAC7BC,GAA6B,qBAC7BC,GAA2B,mBAQjC,SAASuB,GAAiBw3D,GAC7B,MAAO,CACHj6D,KAAMiB,GACNg5D,0BC3CD,SAASC,GAAwBr2D,GACpC,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,2BAC0D,CACvDhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASq2D,GAAwBr2D,OAU5CG,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,ED0DL,CAAE7D,KAAMq5D,KCzDHx1D,ED4BL,CAAE7D,KAAMg5D,KC3BHn1D,EDyHL,CAAE7D,KAAM+5D,KCxHHx9D,QAAQC,IAAIiI,EAAKhG,KAAKw7D,wBACtBx1D,EAAKhG,KAAKw7D,uBAAuBtsD,KAAI,SAAC3B,EAAU4B,GAC5C,IAAIusD,EAA6C,CAC7Ct6D,GAAImM,EAAInM,GACR2hC,WAAYx1B,EAAIw1B,WAChB2H,aAAcn9B,EAAIm9B,aAClBmsB,aAActpD,EAAIspD,aAClBvsC,WAAY/c,EAAI+c,WAChBqO,SAAUprB,EAAIorB,SACd9e,WAAYtM,EAAIsM,WAChBowB,eAAe18B,EAAI08B,eACnB36B,KAAM/B,EAAI+B,KACV5J,OAAQ6H,EAAI7H,OACZilB,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAGrB,MAAmB,aAAfrd,EAAI7H,OAEON,EADG,IAAV+J,EDiCjB,CAAE5N,KAAMs5D,GAAyCW,uBChCoBE,GDuCzE,SAAyCF,GAC5C,MAAO,CAAEj6D,KAAMk5D,GAAqCe,uBAAwBA,GCrCpCG,CAAgCD,IAGhC,qBAAfnuD,EAAI7H,OAEEN,EADG,IAAV+J,EDLrB,SAAmDqsD,GACtD,MAAO,CAAEj6D,KAAMi5D,GAAiDgB,uBAAwBA,GCKhDI,CAA0CF,GDE/E,SAA+CF,GAClD,MAAO,CAAEj6D,KAAM24D,GAA6CsB,uBAAwBA,GCA5CK,CAAsCH,IAGtC,kCAAfnuD,EAAI7H,OAEEN,EADG,IAAV+J,EDmDrB,SAA+DqsD,GAClE,MAAO,CAAEj6D,KAAM25D,GAA8DM,uBAAwBA,GCnD7DM,CAAsDJ,GD0D3F,SAA2DF,GAC9D,MAAO,CAAEj6D,KAAMk5D,GAAqCe,uBAAwBA,GCxDpCO,CAAkDL,IAK3Dt2D,EADG,IAAV+J,EDyErB,SAAgDqsD,GACnD,MAAO,CAAEj6D,KAAMg6D,GAA6CC,uBAAwBA,GCzE5CQ,CAAuCN,GDgF5E,SAA4CF,GAC/C,MAAO,CAAEj6D,KAAM45D,GAAyCK,uBAAwBA,GC9ExCS,CAAmCP,UAKlEt1D,OAAM,SAAAtF,GACHsE,EDtCT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UCmCMoD,CAAepD,IACxBhD,QAAQC,IAAI,YChGrB,SAASm+D,GAAwB96D,EAASmvC,EAAelhC,GAC5D,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EFyCG,CACH7D,KAAMgB,KEzCN8C,MAAM,GAAD,OACMC,+BADN,mCAC8DlE,GAAM,CAC7D9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAU+xC,KAG5BhrC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS82D,GAAwB96D,EAAImvC,EAAUlhC,OAU1D9J,MAAM,SAAAS,GACHZ,EAAS0kC,GAAa,CAClBx6B,KAAM,qDACNC,YAAY,sGAAD,OAAsDghC,EAASjhC,KAA/D,+BACZihC,EAASjmB,aACZpjB,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,kGAAqD5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACpKpC,EAASpB,GAAiBusC,IAC1BkrB,GAAwBr2D,GACxBtH,QAAQC,IAAIiI,MAEfI,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,2GAA2D5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACxK1J,QAAQC,IAAI,aCqHbo+D,OA7Jf,SAAiCz7D,GAE7B,IAAM0E,EAAWqD,cA+BbiX,EA7B4B7V,aAAY,SAACC,GAAD,OAAWA,EAAMsyD,2BA6BzBC,yCAEhCn9D,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KA2B3ByL,EAAU,CACd,CACEC,UAAW,OACXjL,KAAM,uBACNkL,OAAQC,yBAEV,CACEF,UAAW,aACXjL,KAAM,WACNkL,OAAQC,yBAEV,CACIF,UAAW,iBACXjL,KAAM,YACNkL,OAAQC,yBAEV,CACEF,UAAW,eACXjL,KAAM,kBACNkL,OAAQC,yBAEV,CACEF,UAAW,cACXjL,KAAM,iBACNoL,UA/BN,SAAuBC,EAAMC,GAC3B,IAAIoN,EAAUpN,EAAI0J,YAClB,OACI,8BAAO0D,EAAQhB,UAAU,EAAG,IAAM,IAAMgB,EAAQhB,UAAU,GAAG,OA+BjE,CACEzM,UAAW,GACXjL,KAAM,yBACNoL,UA7CJ,SAAoBC,EAAMC,GACxB,OACI,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,YAhE/D,SAA0BqE,GACxB,IAAMnM,EAAK8F,IAAMgkC,KAAK,qDAAgC,CACpD7jC,SAAUH,IAAMI,SAASC,WACzBC,UAAW,MAEbpC,EAAS82D,GAAwB3uD,EAAInM,GAAI,CACvCsE,OAAQ,WACRq9B,WAAYx1B,EAAIw1B,WAChBzzB,KAAM/B,EAAI+B,KACVgb,WAAY/c,EAAI+c,YACflpB,IAuDGk7D,CAAiBr7C,KADrB,yBA6CJ,CACEL,UAAW,UACXjL,KAAM,GACNoL,UA1DJ,SAAsBC,EAAMC,GAC1B,OACI,4BAAQ1f,KAAK,SAASU,UAAU,iBAAiBiH,QAAS,YA3C9D,SAA6BqE,GAC3B,IAAMnM,EAAK8F,IAAMgkC,KAAK,qDAAgC,CACpD7jC,SAAUH,IAAMI,SAASC,WACzBC,UAAW,MAEbpC,EAAS82D,GAAwB3uD,EAAInM,GAAI,CACvCsE,OAAQ,eACRq9B,WAAYx1B,EAAIw1B,WAChBzzB,KAAM/B,EAAI+B,KACVgb,WAAY/c,EAAI+c,YACflpB,IAkCGm7D,CAAoBt7C,KADxB,aA+EN,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACEU,WACEC,KAAkB1iB,KAxBP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aCvED06C,OA3Df,SAA6C97D,GAC3C,IAAM0E,EAA0BqD,cAE1B2zD,EAAsDvyD,aAAY,SAACC,GAAD,OAAuBA,EAAMsyD,2BAe/F57B,EAA0C47B,EAAwBK,iCAAiCvtD,KAAI,SAACuxB,EAAStxB,GACrH,OAAKsxB,EACG,wBAAIx+B,UAAS,oBAAgBm6D,EAAwBM,8BAAgCN,EAAwBM,6BAA6Bt7D,KAAOq/B,EAAQr/B,GAAM,WAAa,IAClLyR,IAAG,kBAAa4tB,EAAQr/B,KACxB,wBAAIwoB,MAAM,OAAOza,EAAQ,GACzB,4BAAKsxB,EAAQnxB,MACb,4BAAKmxB,EAAQwJ,gBACb,4BAAKxJ,EAAQo2B,cACb,4BAAKp2B,EAAQ9V,aACb,4BACE,4BAAQppB,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,YAvBjE,SAA0BqE,GACxB,IAAMnM,EAAK8F,IAAMgkC,KAAK,6EAAkD,CACtE7jC,SAAUH,IAAMI,SAASC,WACzBC,UAAW,MAEbpC,EAAS82D,GAAwB3uD,EAAInM,GAAI,CACvCsE,OAAQ,gCACRq9B,WAAYx1B,EAAIw1B,WAChBzzB,KAAM/B,EAAI+B,KACVgb,WAAY/c,EAAI+c,YACflpB,IAcGk7D,CAAiB77B,KADnB,yBATmB,QAiBzB,OACE,yBAAKx+B,UAAU,4BACb,2BAAOA,UAAU,SACf,2BAAOA,UAAU,eACf,4BACE,wBAAI2nB,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,wBACA,wBAAIA,MAAM,OAAV,aACA,wBAAIA,MAAM,OAAV,mBACA,wBAAIA,MAAM,OAAV,kBACA,wBAAIA,MAAM,OAAV,iCACA,wBAAIA,MAAM,UAGd,+BACG4W,MCiGIm8B,GAlJuB,WACpC,IAAMP,EAAsDvyD,aAAY,SAACC,GAAD,OAAuBA,EAAMsyD,2BAC/Ft0C,EAA2Bs0C,EAAwBC,yCAAyCt6D,OAC5F66D,EAAmCR,EAAwBK,iCAAiC16D,OAE5FqD,EAA0BqD,cAChCrD,EAASmQ,GAAkB,2CAAyB,KANV,IAOlC8G,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACR,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAChH,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACxBD,EAA2BC,GAC7BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAOXuL,wBAAa4tD,GAAwBr2D,OAGxC,CAACA,EAAUwY,EAAc3Y,IAvCc,MAyCZtE,oBAAS,GAzCG,mBAyCnCoqB,EAzCmC,KAyC1BC,EAzC0B,KA2C1C,OACE3O,EACE,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACT,kBAAC,IAAD,MACA,wBAAIxH,UAAU,yBAAd,4CAGA,yBAAKA,UAAU,OACb,kBAAC,GAAD,CAAS6K,MAAM,+CAAwB6I,KAAI,UAAKmS,GAAoBjb,KAAK,MAAM6I,MAAM,YACrF,kBAAC,GAAD,CAAS5I,MAAM,gDAAsB6I,KAAI,UAAKinD,GAA4B/vD,KAAK,MAAM6I,MAAM,aAG7F,yBAAKzT,UAAU,OACb,yBAAKA,UAAU,+CACb,wBAAIA,UAAU,uBAAuBb,GAAG,WAAW8H,QAAS,YAC1C,IAAZ6hB,GACFC,GAAW,IAEZxhB,MAAO,CACRC,MAAOshB,EAAU,UAAY,YAL/B,wBAOA,yBAAKvhB,MAAO,CACVyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBnB,EAAU,UAAY,cAG3C,yBAAK9oB,UAAU,+CACb,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YAC3C,IAAZ6hB,GACFC,GAAW,IAGbxhB,MAAO,CACLC,MAAOshB,EAAU,UAAY,YANjC,yBAQA,yBAAKvhB,MAAO,CACVyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBnB,EAAU,UAAY,gBAQzB,IAAZA,EAEA,yBAAK9oB,UAAU,OAEb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAd,iCAEF,yBAAKA,UAAU,aACb,kBAAC,GAAD,UAWR,yBAAKA,UAAU,OACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAd,iCAEF,yBAAKA,UAAU,aACb,kBAAC,GAAD,YC7IT46D,GAAoD,4CACpDC,GAAqD,6CACrDC,GAAuD,+CAEvDC,GAAoE,4DACpEC,GAAmE,2DACnEC,GAA2D,mDAC3DC,GAAwD,gDAGxDC,GAAgD,wCAChDC,GAAiD,yCACjDC,GAAmD,2CAEnDC,GAAgE,wDAChEC,GAA+D,uDAC/DC,GAAuD,+CACvDC,GAAoD,4CAGpD95D,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBCdjC,SAASk7D,GAAwCv4D,EAAegyC,EAAoBh2B,GACvF,IAAI/a,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,+CACsE8xC,EADtE,YACoFh2B,GAAc,CAC/F9hB,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASu4D,GAAwCv4D,EAAUgyC,EAAYh2B,OAUlF7b,MAAM,SAAAS,GACHZ,EDLL,CACH7D,KAAMiB,GACNo7D,2BCGkC53D,IAC1BZ,EDyCL,CAAE7D,KAAMk8D,KCxCHr4D,EDWL,CAAE7D,KAAM27D,KCVHp/D,QAAQC,IAAIiI,EAAKhG,KAAK69D,8BACtB73D,EAAKhG,KAAK69D,6BAA6B3uD,KAAI,SAAC3B,EAAU4B,GAClD,IAAI8d,EAAY1f,EAAIod,YAChBuC,EAAY3f,EAAIqd,YAChBgzC,EAAgD,CAChDx8D,GAAImM,EAAInM,GACRgT,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClB+iC,WAAY7pC,EAAI6pC,WAChBS,aAActqC,EAAIsqC,aAClBztB,UAAW7c,EAAI6c,UACfO,YAAasC,EACbrC,YAAasC,GAEjB,OAAO9nB,EDDpB,SAAsCw4D,GACzC,MAAO,CAAEr8D,KAAMs7D,GAA2Ce,2BAA4BA,GCAtDE,CAA6BF,OAGjD53D,EAAKhG,KAAK+9D,yBAAyB7uD,KAAI,SAAC3B,EAAU4B,GAC9C,IAAI8d,EAAY1f,EAAIod,YAChBuC,EAAY3f,EAAIqd,YAChBgzC,EAAgD,CAChDx8D,GAAImM,EAAInM,GACRgT,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClB+iC,WAAY7pC,EAAI6pC,WAChBS,aAActqC,EAAIsqC,aAClBztB,UAAW7c,EAAI6c,UACfO,YAAasC,EAAUI,UAAU,EAAG,GACpCzC,YAAasC,EAAUG,UAAU,EAAG,IAExC,OAAOjoB,EDYpB,SAAmCw4D,GACtC,MAAO,CAAEr8D,KAAM67D,GAAuCQ,2BAA4BA,GCblDI,CAA0BJ,UAGjDx3D,OAAM,SAAAtF,GACHsE,EDpCT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UCiCMoD,CAAepD,IACxBhD,QAAQC,IAAI,YClE5B,IAwQekgE,GAxQwB,WACnC,IAAM74D,EAA0BqD,cAC1BmxC,EAAsD/vC,aAAY,SAACC,GAAD,OAAuBA,EAAM8zD,8BAC/FM,EAA+BtkB,EAAoBikB,6BAA6B97D,OAChF03D,EAA4B7f,EAAoBmkB,yBAAyBh8D,OAG3Eo8D,EAAsBj5D,aAAaC,QAAQ,uBAC3Ci5D,EAA+B,GACP,OAAxBD,IACAC,EAAuBD,GAG3B,IAAItmB,EAAe3yC,aAAaC,QAAQ,gBAMxC,IAAIwX,EAAOzX,aAAaC,QAAQ,cAC5BiyC,EAAa,EAEJ,OAATz6B,IACAy6B,EAAahlC,SAASuK,IAG1B,IAAI1O,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAK,EAEI,OAAT6M,IACA7M,EAAKgR,SAASnE,IAGlB,IAAI4O,EAAO3X,aAAaC,QAAQ,mBAC5B+kB,EAAkB,EAET,OAATrN,IACAqN,EAAkB9X,SAASyK,IAG/B,IAAIoyB,EAAO/pC,aAAaC,QAAQ,oBAC5Bk5D,EAA2B,GAElB,OAATpvB,IACAovB,EAAmBpvB,GAGvB,IAAIgP,EAAO/4C,aAAaC,QAAQ,mBAC5Bm5D,EAA0B,GAEjB,OAATrgB,IACAqgB,EAAkBrgB,GAGtB,IAAIlhC,EAAO7X,aAAaC,QAAQ,qBAC5Bu2B,EAA4B,GAEnB,OAAT3e,IACA2e,EAAoB3e,GAGxB,IAAIE,EAAO/X,aAAaC,QAAQ,cAC5B2U,EAAqB,GAEZ,OAATmD,IACAnD,EAAamD,GAGjB,IAAIE,EAAOjY,aAAaC,QAAQ,YAC5B4U,EAAmB,GAEV,OAAToD,IACApD,EAAWoD,GAxE0B,IA2EjCd,EAAsBC,+BAAtBD,kBAGJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAa8vD,GAAwCv4D,EAAUgyC,EAAYh2C,OAGpF,CAACgE,EAAUwY,EAAc3Y,EAAemyC,EAAYh2C,IAIvD,IAAMsH,EAAUC,cAhHyB,EA+HXhI,oBAAS,GA/HE,mBA+HlCoqB,EA/HkC,KA+HzBC,EA/HyB,KAqIzC,OACI3O,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KAIL,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,sCAAiB6I,KAAI,UAAK8jD,GAAqB5sD,KAAK,OAAO6I,MAAM,YAChF,kBAAC,GAAD,CAAS5I,MAAM,sBAAY6I,KAAI,UAAKuoD,GAAwBrxD,KAAK,OAAO6I,MAAM,YAElF,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,uDACX,uBAAGA,UAAU,sBAAsB41C,KAG3C,yBAAK51C,UAAU,OACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,YACX,uBAAGA,UAAU,iBAAb,gDAA+Cq8D,KAGvD,yBAAKr8D,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,iBAAb,uBAAwCo8D,KAGhD,yBAAKp8D,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,iBAAb,wCAAiDy5B,EAAkB8jB,WAAW,IAAK,SAK/F,yBAAKv9C,UAAU,qBACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,YACX,uBAAGA,UAAU,YAAb,0CAA4C6X,EAAW0lC,WAAW,IAAK,QAG/E,yBAAKv9C,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,YAAb,oCAA6C8X,EAASylC,WAAW,IAAK,QAG9E,yBAAKv9C,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,YAAb,sDAAmDioB,UAU/E,yBAAKjoB,UAAU,MAAMb,GAAG,uBACpB,yBAAKa,UAAU,oEACX,4BAAQA,UAAU,4BAA4Bb,GAAG,8BAA8B8H,QAAS,WAzExG8hB,GAAYD,KA0EQ,kBAAC,KAAD,CAAY3pB,GAAG,cAAcqI,MAAM,YADvC,yBAOJ,WACI,IAAgB,IAAZshB,EACA,OACI,yBAAK9oB,UAAU,uBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,kBAEJ,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,YAAYuiD,wBAAyB,CAAEC,OAAQ2Z,OARlF,GAmBiC,IAAzBF,EAEI,yBAAKj8D,UAAU,mCACX,4BACIA,UAAU,4BACVb,GAAG,yBACH8H,QAAS,WAjHzCR,EAAQI,KAAK,CACTmB,SAFO,4BA+GiB,qBAMI,uBAAGhI,UAAS,2BAA8Bb,GAAG,uBAOrD,yBAAKa,UAAU,mCACX,4BACIA,UAAU,4BACVb,GAAG,yBACH8H,QAAS,WAtIzCR,EAAQI,KAAK,CACTmB,SAFO,qBAoIiB,mBAMI,uBAAGhI,UAAS,2BAA8Bb,GAAG,yB,OCpQ9E,SAASm9D,GAA+Bv4D,EAAWqJ,GACtD,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,kCACqE,CAC9DhG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASm5D,GAA+Bv4D,EAAMqJ,OAUzD9J,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZkB,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,4DAAgC5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,SAElJpB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,qEAAsC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACnJ1J,QAAQC,IAAI,a,+NCrB5B,IAkQeygE,GAlQuB,WAClC,IAAMp5D,EAA0BqD,cAC1BmxC,EAAsD/vC,aAAY,SAACC,GAAD,OAAuBA,EAAM8zD,8BAC/Fv+D,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACvEmH,EAAsBC,+BAAtBD,kBACJo+B,EACU,GADVA,EAEO,EAP6B,EAUN95C,mBAAS,CACvCo6C,SAAU,CAAEj6C,MAAO,GAAIQ,MAAOm5C,GAC9Bf,MAAO,CAAE54C,MAAO,GAAIQ,MAAOm5C,KAZS,mBAUjC7xC,EAViC,KAUtBC,EAVsB,KAexC,SAASE,EAAoBC,GACzBH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UAGnF,IAAI2M,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAkCT,IAAI0O,EAAOzX,aAAaC,QAAQ,cAC5BiyC,EAAa,EAEJ,OAATz6B,IACAy6B,EAAahlC,SAASuK,IAG1B,IAAIiB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAa8vD,GAAwCv4D,EAAUgyC,EAAYh2C,OAGpF,CAACgE,EAAUwY,EAAc3Y,EAAemyC,EAAYh2C,IAEvDwM,qBAAU,WACNxI,EAASmQ,GAAkB,kBAAW,oBACvC,CAAClW,EAAK+V,KAAMhQ,IAEf,IAAMsD,EAAUC,cAnGwB,EA0HdhI,mBAAS,GA1HK,mBA0HjCwgD,EA1HiC,KA0H1B+Q,EA1H0B,OA2HPvxD,mBAAS,IA3HF,mBA2HjCypB,EA3HiC,KA2HtB+nC,EA3HsB,OA4HDxxD,mBAAS,IA5HR,mBA4HjC0T,EA5HiC,KA4HnB+9C,EA5HmB,OA6HuBzxD,mBAAS,IA7HhC,mBA6HjCm6C,EA7HiC,KA6HV2jB,EA7HU,OA8HH99D,mBAAS,IA9HN,mBA8HjCmsD,EA9HiC,KA8HpByF,EA9HoB,KA+HxC,OACIl2C,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACH,kBAAC,IAAD,MACA,yBAAKxH,UAAU,OACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,iCAIQ+/C,EAAQ,EAEJ,yBAAKl/C,UAAU,eAAekH,IAAKihB,EAAWhhB,IAAI,KAGlDwwC,EAAoBikB,6BAA6B97D,OAAS,EAEtD,yBAAKE,UAAU,eAAekH,IAAKywC,EAAoBikB,6BAA6B,GAAGzzC,UAAWhhB,IAAI,UAF9G,GAShB,yBAAKnH,UAAU,qBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAS,mCAAsCb,GAAG,gBAGvC+/C,EAAQ,EAEJ,yBAAKl/C,UAAU,aACX,yBAAKA,UAAU,uCACX,wBAAIb,GAAG,aAAP,iCAEJ,yBAAKa,UAAU,uCACX,uBAAGb,GAAG,oBAAN,yBAAwCiT,IAE5C,yBAAKpS,UAAU,uCACX,uBAAGb,GAAG,oBAAN,4BAAyC0rD,KAKjDlT,EAAoBikB,6BAA6B97D,OAAS,EAEtD,yBAAKE,UAAU,aACX,yBAAKA,UAAU,uCACX,wBAAIb,GAAG,aAAP,iCAEJ,yBAAKa,UAAU,uCACX,uBAAGb,GAAG,oBAAN,yBAAwCw4C,EAAoBikB,6BAA6B,GAAGxpD,eAEhG,yBAAKpS,UAAU,uCACX,uBAAGb,GAAG,oBAAN,4BAAyCw4C,EAAoBikB,6BAA6B,GAAGjzC,oBAV7G,IAoBpB,yBAAK3oB,UAAU,iBACX,kBAAC,GAAD,CACIb,GAAG,cACHE,MAAOsH,EAAU8wC,MAAMp4C,MACvBU,MAAM,QACNR,SAAUuH,EACV4jB,IAAK,GACLG,IAAK,EACLzrB,MAAM,gCAOtB,yBAAKY,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,qBAEJ,yBAAKa,UAAU,aACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,iBACVY,MAAM,WACNV,MAAOsH,EAAUmyC,SAASz5C,MAC1BE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,GACNc,YAAY,MAGpB,4BAAQF,UAAU,kBAAkBiH,QAAS,YAhNrE,WACI,IAAMmG,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAC9DlC,SAAUH,IAAMI,SAASC,aAG7B,GAA8B,KAA1BuzC,EAA6B,CAC7B,IAAIvhC,EAAIqgC,EAAoBikB,6BAA6B,GAAGz8D,GAC5DtD,QAAQC,IAAI,CACRqjB,WAAYhgB,EACZ05C,sBAAuBvhC,EACvBmgC,MAAO9wC,EAAU8wC,MAAMp4C,MACvBy5C,SAAUnyC,EAAUmyC,SAASz5C,QAGjC8D,EAASm5D,GAA+B,CACpCn9C,WAAYhgB,EACZ05C,sBAAuBvhC,EACvBmgC,MAAO9wC,EAAU8wC,MAAMp4C,MACvBy5C,SAAUnyC,EAAUmyC,SAASz5C,OAC9B+N,SAGHjK,EAASm5D,GAA+B,CACpCn9C,WAAYhgB,EACZ05C,sBAAuBA,EACvBpB,MAAO9wC,EAAU8wC,MAAMp4C,MACvBy5C,SAAUnyC,EAAUmyC,SAASz5C,OAC9B+N,IAqLiEkJ,KAApD,YAGY4oC,IAAUvH,EAAoBikB,6BAA6B97D,OAAS,EAEhE,4BAAQE,UAAS,8BAAiCiH,QAAS,WAzH/FR,EAAQI,KAAK,CACTmB,SAFO,4BA0HyB,oBAKA,4BAAQhI,UAAS,8BAAiCiH,QAAS,YA/I/E,WAChB,IAAIkQ,EAAI+nC,EAAQ,EAEhB,GADA+Q,EAAS94C,GACLA,EAAIwgC,EAAoBikB,6BAA6B97D,OAAO,CAC5D,IAAIywD,EAAa5Y,EAAoBikB,6BAA6BzkD,GAAGgR,UACjEqoC,EAAgB7Y,EAAoBikB,6BAA6BzkD,GAAG/E,aACpEq+C,EAAe9Y,EAAoBikB,6BAA6BzkD,GAAGwR,YACnE8zC,EAAyB9kB,EAAoBikB,6BAA6BzkD,GAAGhY,GACjF+wD,EAAYK,GACZJ,EAAeK,GACfF,EAAcG,GACd+L,EAA8BC,IAoIqE5rD,KAAnE,0BCnE7B6rD,OA7Lf,WAEI,IAAMplB,EAAmE1vC,aAAY,SAACC,GAAD,OAAuBA,EAAMyvC,kCAC5G/5B,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAC/Do/C,EAAwC,GAC5Cp/C,EAAM8L,SAASpc,KAAI,SAAC3B,EAAK8B,GACrB,OAAOkqC,EAA+BE,4BAA4BvqC,KAAI,SAACmrB,EAAShrB,GAI5E,OAHI9B,EAAInM,KAAOi5B,EAAQjmB,YACnBwqD,EAAO91D,KAAKuxB,GAETA,QAGf,IAAM3xB,EAAUC,cAEZ5B,EAAiB7B,aAAaC,QAAQ,kBACtC4P,EAA0B,GAC1B1K,EAAmB,GACA,OAAnBtD,IACAgO,EAAgBhO,EAAeuD,MAAM,KACrCD,EAAW0K,EAAc,IAG7B,IAAI9G,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAa,EACJ,OAAT6M,IACA7M,EAAKgR,SAASnE,IAIlB,IAAM6E,EAAc,SAAC2tB,GACjBv7B,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAYw6B,EAAQrsB,WAAWvW,YACpDqH,aAAae,QAAQ,gBAAiBw6B,EAAQiZ,MAAM77C,YACpDqH,aAAae,QAAQ,mBAAoBw6B,EAAQsa,SAASl9C,YAE1D6K,EAAQI,KADG,oBAIfhL,QAAQC,IAAIw7C,EAA+BE,6BAG3C,IAAMolB,EAAyCtlB,EAA+BE,4BAA4BpZ,MAAK,SAACxB,EAAGyB,GAAJ,OAAUA,EAAEoZ,MAAQ7a,EAAE6a,SAAOxqC,KAAI,SAACuxB,EAASpxB,GACtJ,OAAKoxB,EACIm+B,EAAO9hB,SAASrc,GAEjB,wBAAIx+B,UAAU,YACV4Q,IAAG,kBAAaxD,GAAOnG,QAAS,WAAO4J,EAAY2tB,KACnD,yBAAKx+B,UAAU,4BACX,yBAAKA,UAAS,oCACV,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,OACX,uBAAGA,UAAU,8BAA6B,0BAAMA,UAAU,6BAA6Bb,GAAG,+BAA+BiO,EAAM,IAC/H,uBAAGpN,UAAS,sDAAyDb,GAAG,cACxE,uBAAGa,UAAU,6BAA6Bb,GAAG,qBAAoB,0BAAMa,UAAU,8BAA8Bw+B,EAAQpsB,eACvH,uBAAGpS,UAAU,6BAA6Bb,GAAG,qBAAoB,0BAAMa,UAAU,8BAA8Bw+B,EAAQiZ,eAUnJ,wBAAIz3C,UAAS,YACjB4Q,IAAG,kBAAaxD,IAChB,yBAAKpN,UAAU,4BACX,yBAAKA,UAAS,iDAAoDb,GAAG,gBACjE,yBAAKa,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,OACX,uBAAGA,UAAU,8BAA6B,0BAAMA,UAAU,6BAA6Bb,GAAG,+BAA+BiO,EAAM,IAC/H,uBAAGpN,UAAS,sDAAyDb,GAAG,cACxE,uBAAGa,UAAU,6BAA6Bb,GAAG,qBAAoB,0BAAMa,UAAU,8BAA8Bw+B,EAAQpsB,eACvH,uBAAGpS,UAAU,6BAA6Bb,GAAG,qBAAoB,0BAAMa,UAAU,8BAA8Bw+B,EAAQiZ,eAnC5H,QA8CrBlZ,EAA0C+Y,EAA+BE,4BAA4BpZ,MAAK,SAACxB,EAAGyB,GAAJ,OAAUA,EAAEoZ,MAAQ7a,EAAE6a,SAAOxqC,KAAI,SAACuxB,EAASpxB,GACvJ,OAAKoxB,EACIA,EAAQrsB,aAAehT,EAExB,wBAAIa,UAAU,YACV4Q,IAAG,kBAAaxD,GAAOnG,QAAS,WAAO4J,EAAY2tB,KACnD,yBAAKx+B,UAAU,4BACX,yBAAKA,UAAS,oCACV,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,OACX,uBAAGA,UAAU,8BAA6B,0BAAMA,UAAU,6BAA6Bb,GAAG,+BAA+BiO,EAAM,IAC/H,uBAAGpN,UAAS,sDAAyDb,GAAG,cACxE,uBAAGa,UAAU,6BAA6Bb,GAAG,qBAAoB,0BAAMa,UAAU,8BAA8Bw+B,EAAQpsB,eACvH,uBAAGpS,UAAU,6BAA6Bb,GAAG,qBAAoB,0BAAMa,UAAU,8BAA8Bw+B,EAAQiZ,eAUnJ,wBAAIz3C,UAAS,YACjB4Q,IAAG,kBAAaxD,IAChB,yBAAKpN,UAAU,4BACX,yBAAKA,UAAS,iDAAoDb,GAAG,gBACjE,yBAAKa,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,OACX,uBAAGA,UAAU,8BAA6B,0BAAMA,UAAU,6BAA6Bb,GAAG,+BAA+BiO,EAAM,IAC/H,uBAAGpN,UAAS,sDAAyDb,GAAG,cACxE,uBAAGa,UAAU,6BAA6Bb,GAAG,qBAAoB,0BAAMa,UAAU,8BAA8Bw+B,EAAQpsB,eACvH,uBAAGpS,UAAU,6BAA6Bb,GAAG,qBAAoB,0BAAMa,UAAU,8BAA8Bw+B,EAAQiZ,eAnC5H,QA6CrBolB,EAA0CvlB,EAA+BE,4BAA4BpZ,MAAK,SAACxB,EAAGyB,GAAJ,OAAUA,EAAEoZ,MAAQ7a,EAAE6a,SAAOxqC,KAAI,SAACuxB,EAASpxB,GACvJ,OAAKoxB,EAEG,wBAAIx+B,UAAU,YACV4Q,IAAG,kBAAaxD,GAAOnG,QAAS,WAAO4J,EAAY2tB,KACnD,yBAAKx+B,UAAU,4BACX,yBAAKA,UAAS,sCACV,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,OACX,uBAAGA,UAAU,8BAA6B,0BAAMA,UAAU,6BAA6Bb,GAAG,+BAA+BiO,EAAM,IAC/H,uBAAGpN,UAAS,sDAAyDb,GAAG,cACxE,uBAAGa,UAAU,6BAA6Bb,GAAG,qBAAoB,0BAAMa,UAAU,8BAA8Bw+B,EAAQpsB,eACvH,uBAAGpS,UAAU,6BAA6Bb,GAAG,qBAAoB,0BAAMa,UAAU,8BAA8Bw+B,EAAQiZ,eAbpI,QAyB3B,OACI,yBAAKz3C,UAAU,4BACX,2BAAOA,UAAU,SACb,2BAAOA,UAAU,eACb,8BAGJ,+BAG6B,iBAAboI,EACOm2B,EAEW,gBAAbn2B,EACEw0D,EAGAC,MCtKhC,SAASC,GAAmB35D,EAAehE,GAC9C,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,wBAC+ClE,GAAM,CAClD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBZ,KACA+5D,GAAmB35D,EAAUhE,MAUxCmE,MAAM,SAAAS,GACHZ,EAASpB,EAAiBgC,IAC1BZ,EAASb,KACTzG,QAAQC,IAAIiI,EAAKhG,KAAK4+D,QACtB54D,EAAKhG,KAAK4+D,OAAO1vD,KAAK,SAAC3B,GACnB,IAAItJ,EAAa,CACb7C,GAAImM,EAAInM,GACRoF,SAAU+G,EAAI/G,SACd8b,MAAO/U,EAAI+U,MACX7b,SAAU,GACVf,OAAQ6H,EAAI7H,OACZ6c,UAAWhV,EAAIgV,UACfC,SAAUjV,EAAIiV,SACdC,YAAalV,EAAIkV,YACjBzb,kBAAmBuG,EAAIvG,kBACvB0b,IAAKnV,EAAImV,IACTC,MAAOpV,EAAIoV,MACXC,QAASrV,EAAIqV,QACbC,QAAStV,EAAIsV,QACbC,WAAYvV,EAAIuV,YAEpB,OAAO1d,EAASd,EAAeL,UAGtCmC,OAAM,SAAAtF,GACHsE,EAASlB,EAAepD,IACxBhD,QAAQC,IAAI,YCxD5B,IA0KeihE,GA1K6B,WACxC,IAAM55D,EAA0BqD,cAC1B8wC,EAAmE1vC,aAAY,SAACC,GAAD,OAAuBA,EAAMyvC,kCAC5G5sB,EAAM4sB,EAA+BE,4BAA4Br1B,QAAO,SAACya,EAAGyB,GAAJ,OAAUuZ,KAAKltB,IAAIkS,EAAGyB,EAAEoZ,UAASsZ,KACzGlmC,EAAMysB,EAA+BE,4BAA4Br1B,QAAO,SAACya,EAAGyB,GAAJ,OAAUuZ,KAAK/sB,IAAI+R,EAAGyB,EAAEoZ,SAAQ,GAE1G3yC,EAAiB7B,aAAaC,QAAQ,kBACtC4P,EAA0B,GAC1B1K,EAAmB,GACA,OAAnBtD,IACAgO,EAAgBhO,EAAeuD,MAAM,KACrCD,EAAW0K,EAAc,IAXiB,IActCsH,EAAsBC,+BAAtBD,kBAEJM,EAAOzX,aAAaC,QAAQ,cAC5BiyC,EAAa,EAEJ,OAATz6B,IACAy6B,EAAahlC,SAASuK,IAG1B,IAAI1O,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAIT,IAAI2P,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WAEN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAQbuL,wBAAakxD,GAAmB35D,EAAUhE,IAC1CyM,wBAAa+sC,GAAyCx1C,EAAUgyC,KAGxEhyC,EAASmQ,GAAkB,WAAY,oBACxC,CAACnQ,EAAUwY,EAAc3Y,EAAemyC,EAAYh2C,IAGvD,IAAMsH,EAAUC,cAQhB,OACI0T,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KAEL,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,+BAAgB6I,KAAI,UAAKgX,GAAO9f,KAAK,OAAO6I,MAAM,YACjE,kBAAC,GAAD,CAAS5I,MAAM,qCAAiB6I,KAAI,UAAKmX,GAAOjgB,KAAK,OAAO6I,MAAM,YAGtE,yBAAKzT,UAAU,OAIc,iBAAboI,EAEI,yBAAKpI,UAAU,0BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,8BACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,kBAAC,GAAD,UAQF,gBAAboI,EAED,yBAAKpI,UAAU,4BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,gCACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,kBAAC,GAAD,UAQF,iBAAboI,EAED,yBAAKpI,UAAU,4BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,gCACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,kBAAC,GAAD,eAPnB,EAmBT,WACI,GAAiB,iBAAboI,EACA,OACI,yBAAKpI,UAAU,0BACX,yBAAKA,UAAU,8BACX,4BAAQA,UAAU,4BAA4Bb,GAAG,iBAAiB8H,QAAS,WAhF/GR,EAAQI,KAAK,CACTmB,SAFO,+BAiFyB,aAII,uBAAGhI,UAAU,6BATrC,MCrBTg9D,GA7HqC,WAChD,IAAM75D,EAA0BqD,cAC1B8wC,EAAoE1vC,aAAY,SAACC,GAAD,OAAuBA,EAAMyvC,kCAC7G5sB,EAAM4sB,EAA+BE,4BAA4Br1B,QAAO,SAACya,EAAGyB,GAAJ,OAAUuZ,KAAKltB,IAAIkS,EAAGyB,EAAEoZ,UAASsZ,KACzGlmC,EAAMysB,EAA+BE,4BAA4Br1B,QAAO,SAACya,EAAGyB,GAAJ,OAAUuZ,KAAK/sB,IAAI+R,EAAGyB,EAAEoZ,SAAQ,GACxGr6C,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAE3EurB,EAAoB,GACpB6b,EAAmB,GACnB/C,EAA+BE,4BAA4B13C,OAAS,GACpEw3C,EAA+BE,4BAA4BvqC,KAAI,SAAA3B,GAG3D,OAFAkzB,EAAQ33B,KAAKyE,EAAI8G,cACjBioC,EAAOxzC,KAAKyE,EAAImsC,OACTnsC,KAbuC,IAiB9C8O,EAAsBC,+BAAtBD,kBAEJpO,EAAO/I,aAAaC,QAAQ,YAC5BwzB,EAAmB,EACV,OAAT1qB,IACA0qB,EAAWvmB,SAASnE,IAGxB,IAAI0O,EAAOzX,aAAaC,QAAQ,cAC5BiyC,EAAa,EAEJ,OAATz6B,IACAy6B,EAAahlC,SAASuK,IAG1B,IACI3W,EAAO,CACPu+B,OAFW9D,EAGX+D,SAAU,CACN,CACInjC,MAAO,eACP2E,KAAMs2C,EACN7X,YAAa,oBACbvY,gBAAiB,6BAKzBtO,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAoCzC,OAnCAyI,qBAAU,WAEN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAa6pC,GAA+BtyC,EAAUgyC,OAG/D,CAAChyC,EAAUgyC,EAAYze,EAAU/a,EAAc3Y,IAElD2I,qBAAU,WACNxI,EAASmQ,GAAkB,WAAO,oBACnC,CAAClW,EAAK+V,KAAMhQ,IAGXiX,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KAIH,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,+BAAgB6I,KAAI,UAAKgX,GAAO9f,KAAK,OAAO6I,MAAM,YACjE,kBAAC,GAAD,CAAS5I,MAAM,qCAAiB6I,KAAI,UAAKmX,GAAOjgB,KAAK,OAAO6I,MAAM,YAGtE,yBAAKzT,UAAU,OAEX,yBAAKA,UAAU,0BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,8BACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,kBAAC,GAAD,UAMhB,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,8BACX,kBAAC4iC,GAAD,CAAW7+B,KAAMA,SCkG1Bk5D,GAzNwB,WACnC,IAAM95D,EAA0BqD,cAC1BmxC,EAAsD/vC,aAAY,SAACC,GAAD,OAAuBA,EAAM8zD,8BAC/FM,EAA+BtkB,EAAoBikB,6BAA6B97D,OAChF03D,EAA4B7f,EAAoBmkB,yBAAyBh8D,OAEvEsa,EAAsBC,+BAAtBD,kBAGJ8hD,EAAsBj5D,aAAaC,QAAQ,uBAC3Ci5D,EAA+B,GACP,OAAxBD,IACAC,EAAuBD,GAG3B,IAAItmB,EAAe3yC,aAAaC,QAAQ,gBAMxC,IAAIwX,EAAOzX,aAAaC,QAAQ,cAC5BiyC,EAAa,EAEJ,OAATz6B,IACAy6B,EAAahlC,SAASuK,IAG1B,IAAI1O,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAK,EAEI,OAAT6M,IACA7M,EAAKgR,SAASnE,IAIlB,IAAI4O,EAAO3X,aAAaC,QAAQ,mBAC5B+kB,EAAkB,EAET,OAATrN,IACAqN,EAAkB9X,SAASyK,IAG/B,IAAIoyB,EAAO/pC,aAAaC,QAAQ,oBAC5Bk5D,EAA2B,GAElB,OAATpvB,IACAovB,EAAmBpvB,GAGvB,IAAIgP,EAAO/4C,aAAaC,QAAQ,mBAC5Bm5D,EAA0B,GAEjB,OAATrgB,IACAqgB,EAAkBrgB,GAGtB,IAAIlhC,EAAO7X,aAAaC,QAAQ,qBAC5Bu2B,EAA4B,GAEnB,OAAT3e,IACA2e,EAAoB3e,GAGxB,IAAIE,EAAO/X,aAAaC,QAAQ,cAC5B2U,EAAqB,GAEZ,OAATmD,IACAnD,EAAamD,GAGjB,IAAIE,EAAOjY,aAAaC,QAAQ,YAC5B4U,EAAmB,GAEV,OAAToD,IACApD,EAAWoD,GA3E0B,MA8EXxc,oBAAS,GA9EE,mBA8ElCoqB,EA9EkC,KA8EzBC,EA9EyB,KAsFzC,IAAIpN,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAgCzC,OA/BAyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAa8vD,GAAwCv4D,EAAUgyC,EAAYh2C,OAGpF,CAACgE,EAAUwY,EAAc3Y,EAAemyC,EAAYh2C,IAInDib,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KAIL,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,qCAAgB6I,KAAI,UAAK8jD,EAAoByE,GAAwBrxD,KAAK,OAAO6I,MAAM,YACtG,kBAAC,GAAD,CAAS5I,MAAM,sCAAiB6I,KAAI,UAAK8jD,GAAqB5sD,KAAK,OAAO6I,MAAM,aAEpF,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,uDACX,uBAAGA,UAAU,sBAAsB41C,KAG3C,yBAAK51C,UAAU,OACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,YACX,uBAAGA,UAAU,iBAAb,gDAA+Cq8D,KAGvD,yBAAKr8D,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,iBAAb,uBAAwCo8D,KAGhD,yBAAKp8D,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,iBAAb,wCAAiDy5B,MAK7D,yBAAKz5B,UAAU,qBACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,YACX,uBAAGA,UAAU,YAAb,0CAA4C6X,KAGpD,yBAAK7X,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,YAAb,oCAA6C8X,KAGrD,yBAAK9X,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,YAAb,sDAAmDioB,UAU/E,yBAAKjoB,UAAU,MAAMb,GAAG,uBACpB,yBAAKa,UAAU,oEACX,4BAAQA,UAAU,4BAA4Bb,GAAG,8BAA8B8H,QAAS,WA5GxG8hB,GAAYD,KA6GQ,kBAAC,KAAD,CAAY3pB,GAAG,cAAcqI,MAAM,YADvC,yBAOJ,WACI,IAAgB,IAAZshB,EACA,OACI,yBAAK9oB,UAAU,uBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,kBAEJ,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,YAAYuiD,wBAAyB,CAAEC,OAAQ2Z,OARlF,KC7JLe,GA9CsB,WAGH12D,aAChCrD,CAASmQ,GAAkB,kBAAa,kBAExC,IAAItH,EAAO/I,aAAaC,QAAQ,qBAC5BsN,EAAoB,GACX,OAATxE,IACFwE,EAAoBxE,GAGtB,IAAI0O,EAAOzX,aAAaC,QAAQ,2BAC5BwN,EAA0B,GACjB,OAATgK,IACFhK,EAA0BgK,GAG5B,IAAIE,EAAO3X,aAAaC,QAAQ,qBAC5BuN,EAAoB,GAKxB,OAJa,OAATmK,IACFnK,EAAoBmK,GAIpB,kBAAC,WAAD,KAEE,yBAAK5a,UAAU,OACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,mCAAmCwQ,GACjD,yBAAKxQ,UAAU,oBAGjB,yBAAKA,UAAU,aACX,2BAAI0Q,GACJ,2BAAID,SCxCP0sD,GAAwB,gBACxBC,GAAyB,iBACzBC,GAA2B,mBAE3BC,GAAwC,gCACxCC,GAAuC,+BACvC57D,GAAiC,yBACjCrB,GAA6B,qBAE7BE,GAA2B,mBAC3Bg9D,GAA+B,uBAC/BC,GAA4B,oBCJlC,SAASC,KACZ,IAAIt5D,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EDIG,CACH7D,KAAMgB,KCJN8C,MAAM,GAAD,OACMC,+BADN,0BAC6D,CACtDhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASu6D,SAUpBp6D,MAAM,SAAAS,GACHZ,EDCL,CAAE7D,KAAMk+D,KCAH3hE,QAAQC,IAAIiI,EAAKhG,KAAKiP,eACtBjJ,EAAKhG,KAAKiP,cAAcC,KAAI,SAAC3B,EAAU4B,GACnC,IAAIywD,EAA2B,CAC3Bx+D,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjBC,KAAMjC,EAAIiC,MAGd,OADA1R,QAAQC,IAAIwP,GACLnI,EDbhB,CAAE7D,KAAMm+D,GAAmBG,UCacD,UAGvCx5D,OAAM,SAAAtF,GACHsE,EDzBT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UCsBMoD,CAAepD,IACxBhD,QAAQC,IAAI,a,WClChB+hE,GCiIGC,GAjIgB,WAE3B,IAAM36D,EAA0BqD,cAChCrD,EAASmQ,GAAkB,kBAAa,iBAExC,IAAMyqD,EAAkCn2D,aAAY,SAACC,GAAD,OAAuBA,EAAMm2D,cAC3E9tD,EAAsDtI,aAAY,SAACC,GAAD,OAAuBA,EAAMqI,2BAEjGlE,EAAO/I,aAAaC,QAAQ,MAC5B0L,EAAkB,EACT,OAAT5C,IACA4C,EAAUuB,SAASnE,IAGvBL,qBAAU,WACNxI,EAASu6D,MACTv6D,EAASoL,GAAwBK,MAClC,CAACzL,EAAUyL,IAEd,IAAIyB,EAA2B,GAC/BH,EAAwBE,8BAA8BnD,KAAI,SAAC3B,EAAK8B,GAC5D,IAAID,EAAe4wD,EAAgBC,WAAWp0C,MAAK,SAAAq0C,GAAC,OAAIA,EAAE9+D,GAAKmM,EAAIqD,mBACnE,QAAqB0M,IAAjBlO,EAA4B,CAC5B,IAAIoD,EAAgB,CAChB5B,gBAAiBrD,EAAIqD,gBACrB6B,kBAAmBrD,EAAaE,KAChCuB,QAAStD,EAAIsD,QACb6B,kBAAmBtD,EAAaI,KAChCmD,wBAAyBvD,EAAaG,YACtCuB,QAASvD,EAAIuD,SAEjB,OAAOwB,EAAcxJ,KAAK0J,GAE9B,OAAOnD,KAGX,IAAI8wD,EAAyB,GAC7BhuD,EAAwBS,0BAA0B1D,KAAI,SAAC3B,EAAK8B,GACxD,IAAID,EAAe4wD,EAAgBC,WAAWp0C,MAAK,SAAAq0C,GAAC,OAAIA,EAAE9+D,GAAKmM,EAAIqD,mBACnE,QAAqB0M,IAAjBlO,EAA4B,CAC5B,IAAIoD,EAAgB,CAChB5B,gBAAiBrD,EAAIqD,gBACrB6B,kBAAmBrD,EAAaE,KAChCuB,QAAStD,EAAIsD,QACb6B,kBAAmBtD,EAAaI,KAChCmD,wBAAyBvD,EAAaG,YACtCuB,QAASvD,EAAIuD,SAEjB,OAAOqvD,EAAYr3D,KAAK0J,GAE5B,OAAOnD,KAGX,IAAM3G,EAAUC,cACVmK,EAAc,SAACpS,GACjB0E,EAAS2M,GAAwB,CAC7BlB,QAASA,EACTD,gBAAiBlQ,EAAMkQ,gBACvBE,SAAS,KAEb5L,aAAaY,WAAW,mBACxBZ,aAAae,QAAQ,kBAAmBvF,EAAMkQ,gBAAgB/S,YAC9DqH,aAAaY,WAAW,WACxBZ,aAAae,QAAQ,UAAWvF,EAAMmQ,QAAQhT,YAC9CqH,aAAaY,WAAW,qBACxBZ,aAAae,QAAQ,oBAAqBvF,EAAM+R,mBAChDvN,aAAaY,WAAW,2BACxBZ,aAAae,QAAQ,0BAA2BvF,EAAMiS,yBACtDzN,aAAaY,WAAW,qBACxBZ,aAAae,QAAQ,oBAAqBvF,EAAMgS,mBAEhDhK,EAAQI,KAAK,CACTmB,SAFO,0BAMf,OACI,kBAAC,WAAD,KACI,wBAAIhI,UAAU,yBAAd,gCAEIqQ,EAAcpD,KAAI,SAAC3B,EAAK8B,GACpB,OACI,yBAAKpN,UAAU,MAAMiH,QAAS,WAC1B4J,EAAYvF,KAEZ,yBAAKtL,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAmCsL,EAAIkF,mBACrD,yBAAKxQ,UAAU,oBAGnB,yBAAKA,UAAU,sBACX,2BAAIsL,EAAImF,0BAWhCytD,EAAYjxD,KAAI,SAAC3B,EAAK8B,GAClB,OACI,yBAAKpN,UAAU,MAAMiH,QAAS,WAC1B4J,EAAYvF,KAEZ,yBAAKtL,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAmCsL,EAAIkF,mBACrD,yBAAKxQ,UAAU,oBAGnB,yBAAKA,UAAU,aACX,2BAAIsL,EAAImF,4BCvInC0tD,GAAoB,YACpBC,GAAqB,aACrBC,GAAuB,eAEvBC,GAAoC,4BACpCC,GAAmC,2BACnC58D,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBAC3Bg+D,GAA2B,mBAC3BC,GAAwB,gBA8B9B,SAASC,GAASC,GACrB,MAAO,CAAEr/D,KAAM6+D,GAAWQ,MAAOA,GAG9B,SAASC,GAAUD,GACtB,MAAO,CAAEr/D,KAAM8+D,GAAYO,MAAOA,GAe/B,SAAS77D,GAAqBzD,GACjC,MAAO,CAAEC,KAAMqC,GAAwBtC,MAAOA,I,SF5CtCw+D,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,2BAAAA,I,4BAAAA,Q,2OGmJGgB,OAlJf,SAA0BpgE,GACtB,IAAM0E,EAA0BqD,cAC1Bm2D,EAA6B/0D,aAAY,SAACC,GAAD,OAAuBA,EAAM80D,UACxE36D,EAAsB26D,EAAOmC,cAC3BppD,EAAqBinD,EAAOhnD,oBAAsBkoD,GAAwBjoD,OAE3E5T,IAAQ0T,IACT1T,EAAO,CAAE7C,GAAI,EAAG4/D,cAAe,EAAGC,aAAc,EAAIz6D,SAAU,GAAI8b,MAAO,GAAI5c,OAAQ,GAAIe,SAAU,GAAI8b,UAAW,GAAIC,SAAU,GAAIE,IAAK,GAAIC,MAAO,GAAIC,QAAS,GAAIH,YAAa,GAAIzb,kBAAmB,GAAI8b,WAAY,GAAID,QAAS,IAP/K,MAUzBliB,mBAAS,CACvC6F,SAAU,CAAE1F,MAAO,GAAIQ,MAAO2C,EAAKuC,UACnC8b,MAAO,CAAExhB,MAAO,GAAIQ,MAAO2C,EAAKqe,OAChC7b,SAAU,CAAE3F,MAAO,GAAIQ,MAAO2C,EAAKwC,UACnCy6D,SAAU,CAAEpgE,MAAO,GAAIQ,MAAO2C,EAAKwe,eAdoB,mBAUpD7Z,EAVoD,KAUzCC,EAVyC,KAiB3D,SAASE,EAAoBC,GACzBH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UAuDnF,SAAS2H,IACL,OAAQL,EAAUpC,SAAS1F,OAAS8H,EAAU0Z,MAAMxhB,OAAS8H,EAAUnC,SAAS3F,QACxE8H,EAAUpC,SAASlF,QAAUsH,EAAU0Z,MAAMhhB,QAAUsH,EAAUnC,SAASnF,MAGtF,OACI,kBAAC,WAAD,KACI,yBAAKW,UAAU,iBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,6BAAnD,+CAEJ,yBAAKa,UAAU,aACX,0BAAMoH,SAlE9B,SAAkBhJ,GACdA,EAAEiJ,iBACEL,MAGJvI,EAAMqX,SAAQ,GAMlB,SAAkBnP,EAAgBoP,GAC9B,GAAI/T,EAAM,CAEN,IAAMoL,EAAMnI,IAAMqC,QAAQ,sGAAmD,CACzElC,SAAUH,IAAMI,SAASC,aAGzByQ,IAAW2oD,IACXv7D,ECvDT,SAAS+7D,EAASn7D,EAAWqJ,GAChC,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,KACTsB,MAAM,GAAD,OACMC,+BADN,iBACoD,CAC7ChG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS+7D,EAASn7D,EAAMqJ,OAUnC9J,MAAM,SAAAe,GACHxI,QAAQC,IAAIuI,GACZy4D,GAAmB35D,EAAUF,aAAaC,QAAQ,OAClD+B,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,iDAAiC5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAChJpC,EAASpB,EAAiBgC,OAE7BI,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,0DAAuC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACpJpC,EAASlB,EAAepD,IACxBhD,QAAQC,IAAI,aDeHojE,CAAS,CACd36D,SAAUoC,EAAUpC,SAASlF,MAC7BmF,SAAUmC,EAAUnC,SAASnF,MAC7BghB,MAAO1Z,EAAU0Z,MAAMhhB,MACvBihB,UAAW,KACXC,SAAU,KACVC,YAAa7Z,EAAUs4D,SAAS5/D,MAChC0F,kBAAmB,KACnB0b,IAAK,KACLC,MAAO,KACPC,QAAS,KACTilC,UAAW3iD,aAAaC,QAAQ,MAChCie,UAAW,CAAC,iBACb/T,IAGPvR,QAAQC,IAAIia,GAEZ5S,EDnBD,CAAE7D,KAAMi/D,KCoBPp7D,EAASL,GAAqB+6D,GAAwBxnD,QA9B1DC,CAAS3P,EADmB+O,EAAYgpD,GAAWE,OA4D3B,yBAAK5+D,UAAU,cAEX,kBAAC,EAAD,CAAWb,GAAG,iBACVY,MAAM,WACNV,MAAOsH,EAAUpC,SAASlF,MAC1BE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,kCACNc,YAAY,MAGpB,yBAAKF,UAAU,cAEX,kBAAC,EAAD,CAAWb,GAAG,cACVY,MAAM,QACNV,MAAOsH,EAAU0Z,MAAMhhB,MACvBE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,QACNc,YAAY,MAGpB,yBAAKF,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,iBACVY,MAAM,WACNV,MAAOsH,EAAUnC,SAASnF,MAC1BE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXP,KAAK,WACLF,MAAM,qBACNc,YAAY,MAEpB,yBAAKF,UAAU,cAEX,kBAAC,EAAD,CAAWb,GAAG,iBACVY,MAAM,WACNV,MAAOsH,EAAUs4D,SAAS5/D,MAC1BE,SAAUuH,EACVxH,KAAK,OACLM,UAAU,EACVC,UAAW,IACXT,MAAM,eACNc,YAAY,MAEpB,4BAAQF,UAAU,iBAAiBiH,QAAS,kBAvEpExI,EAAMqX,SAAQ,QACd3S,EAASL,GAAqB+6D,GAAwBxnD,SAsE9B,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCAnEhCgH,IACN,WAAa,KAkEN,mBEpJzB,SAASm4D,GAAwBh8D,EAAeyiD,GACnD,IAAIxhD,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAOE,MAAM,GAAD,OACGC,+BADH,sCAC8DuiD,GAAa,CACvEvoD,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASg8D,GAAwBh8D,EAAUyiD,OAUtDtiD,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAAS4T,MAEThT,EAAKhG,KAAKmZ,UAAUjK,KAAI,SAAC3B,EAAU4B,GAC3B,IAAIuvC,EAAIrlC,OAAOC,OAAO/L,GAClB8zD,EAAOhoD,OAAOG,KAAKjM,GAEvB,OADAzP,QAAQC,IAAIsjE,GACL3iB,EAAExvC,KAAI,SAACwK,GACV,OAAOL,OAAOC,OAAOI,GAAOxK,KAAI,SAACyK,GAE7B,IAAI2nD,EAAMjoD,OAAOC,OAAOK,GACpB4nD,EAAMloD,OAAOG,KAAKG,GAEtB,OADA7b,QAAQC,IAAIwjE,GACLD,EAAIpyD,KAAI,SAAC0K,GACZ,OAAOA,EAAM1K,KAAI,SAACsyD,GAGd,OAFA1jE,QAAQC,IAAIyjE,GACHnoD,OAAOC,OAAOkoD,GACbtyD,KAAI,SAACuyD,GACX,OAAOA,EAAMvyD,KAAI,SAACwyD,GACd,GAAIA,EAAM3/D,OAAS,EAAE,CACjB,IAAIyN,EAA0B,CAC1BqK,WAAY0nD,EAAI,GAAK,KAAOF,EAAK,GAAK,KACtCvnD,WAAY4nD,EAAM,GAClB3nD,SAAU2nD,EAAM,IAEpBt8D,EAAS6T,GAAqBzJ,IAElC,OAAOkyD,0BAU1Ct7D,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,Y,OC6Db4jE,OA7Hf,SAA2BjhE,GACvB,IAAMk+D,EAAsB/0D,aAAY,SAACC,GAAD,OAAuBA,EAAM80D,UAE/Dl2D,EAAUC,cAUhB,OACI,oCAGQi2D,EAAOA,OAAO1vD,KAAI,SAAC3B,EAAK4B,GACpB,OAAK5B,EAED,yBAAKtL,UAAU,qCAAqCiH,QAAS,WAhB7D,IAACkL,IAgB+E7G,EAAInM,GAdpG8D,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAcmO,EAAWvW,YAC9C6K,EAAQI,KAAK,CACTmB,SAJO,uBAmBS,yBAAKhI,UAAU,iBACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,OACf,yBAAKA,UAAU,kCACX,yBAAKiY,MAAM,MAAMD,OAAO,MAAMsxB,QAAQ,cAAcq2B,MAAM,6BAA6B1zD,KAAK,MAAMI,kBAAgB,aAAarM,UAAU,eACrI,2BAAOb,GAAG,SAAV,WACA,0BAAMA,GAAG,QAAT,iIACA,gCAEA,8BACI,8BAAUA,GAAG,SACT,4BAAQygE,GAAG,MAAMC,GAAG,MAAMC,EAAE,SAEhC,8BAAU3gE,GAAG,QACT,0BAAMqqC,EAAE,uHAGhB,4BAAQo2B,GAAG,MAAMC,GAAG,MAAMC,EAAE,MAAMC,KAAK,qBACvC,uBAAGC,OAAO,OAAOC,eAAa,IAAIC,YAAU,eACxC,0BAAM/oD,EAAE,IAAIG,EAAE,IAAIW,MAAM,MAAMD,OAAO,MAAM+nD,KAAK,YAChD,uBAAG5gE,GAAG,QACF,0BAAM4gE,KAAK,OAAOC,OAAO,UAAUC,eAAa,IAAIz2B,EAAE,sBACtD,0BAAMxpC,UAAU,OAAO+/D,KAAK,UAAUv2B,EAAE,0GACxC,4BAAQo2B,GAAG,MAAMC,GAAG,MAAMC,EAAE,KAAK9/D,UAAU,OAAO+/D,KAAK,YACvD,6BAASH,GAAG,MAAMC,GAAG,MAAMM,GAAG,IAAIC,GAAG,IAAIpgE,UAAU,OAAO+/D,KAAK,UAAU5gE,GAAG,aAC5E,6BAASygE,GAAG,MAAMC,GAAG,MAAMM,GAAG,IAAIC,GAAG,IAAIpgE,UAAU,OAAO+/D,KAAK,UAAU5gE,GAAG,cAC5E,0BAAMgY,EAAE,MAAMG,EAAE,MAAMW,MAAM,KAAKD,OAAO,KAAKhY,UAAU,OAAO+/D,KAAK,YACnE,0BAAM//D,UAAU,eAAe+/D,KAAK,OAAOC,OAAO,UAAUC,eAAa,MAAMz2B,EAAE,gCAAgCrqC,GAAG,iBACpH,0BAAMa,UAAU,eAAe+/D,KAAK,OAAOC,OAAO,UAAUC,eAAa,MAAMz2B,EAAE,kCAAkCrqC,GAAG,kBACtH,0BAAM6gE,OAAO,UAAUC,eAAa,IAAIz2B,EAAE,sBAC1C,0BAAMw2B,OAAO,UAAUC,eAAa,IAAIz2B,EAAE,wBAC1C,0BAAMw2B,OAAO,UAAUC,eAAa,IAAIF,KAAK,OAAOv2B,EAAE,sCACtD,0BAAMu2B,KAAK,UAAUv2B,EAAE,sDACvB,0BAAMu2B,KAAK,UAAUv2B,EAAE,6DACvB,0BAAMw2B,OAAO,UAAUC,eAAa,IAAIF,KAAK,wBAAwBv2B,EAAE,uGACvE,0BAAMw2B,OAAO,UAAUC,eAAa,IAAIF,KAAK,wBAAwBv2B,EAAE,6GACvE,0BAAMxpC,UAAU,OAAO+/D,KAAK,UAAUv2B,EAAE,yIACxC,0BAAMrqC,GAAG,QAAQ4gE,KAAK,UAAUv2B,EAAE,qHAClC,0BAAMrqC,GAAG,QAAQ4gE,KAAK,QAAQv2B,EAAE,qHAAqH02B,YAAU,gBAEnK,uBAAG/gE,GAAG,SACF,0BAAM4gE,KAAK,UAAUv2B,EAAE,oLACvB,0BAAMrqC,GAAG,WAAWa,UAAU,MAAMggE,OAAO,UAAUD,KAAK,OAAOE,eAAa,KAAKz2B,EAAE,qCACrF,0BAAMrqC,GAAG,YAAYa,UAAU,MAAMggE,OAAO,UAAUD,KAAK,OAAOE,eAAa,KAAKz2B,EAAE,wCACtF,0BAAMu2B,KAAK,QAAQv2B,EAAE,kEACrB,0BAAMu2B,KAAK,QAAQv2B,EAAE,kEACrB,4BAAQo2B,GAAG,MAAMC,GAAG,MAAMC,EAAE,IAAIC,KAAK,YACrC,4BAAQH,GAAG,MAAMC,GAAG,MAAMC,EAAE,IAAIC,KAAK,YACrC,4BAAQH,GAAG,MAAMC,GAAG,MAAMC,EAAE,IAAIC,KAAK,YACrC,4BAAQH,GAAG,MAAMC,GAAG,MAAMC,EAAE,IAAIC,KAAK,YACrC,4BAAQH,GAAG,MAAMC,GAAG,MAAMC,EAAE,IAAIC,KAAK,YACrC,0BAAMC,OAAO,UAAUC,eAAa,IAAIjgE,UAAU,YAAY+/D,KAAK,UAAU5gE,GAAG,YAAYqqC,EAAE,uLAC9F,0BAAMw2B,OAAO,UAAUC,eAAa,IAAIjgE,UAAU,YAAY+/D,KAAK,UAAU5gE,GAAG,aAAaqqC,EAAE,oNAK/G,yBAAKxpC,UAAU,uCACX,4BAAKsL,EAAI/G,UACT,yBAAKvE,UAAU,eACX,mDAAsBsL,EAAIuV,WAAWuK,UAAU,EAAG,IAAM,IAAM9f,EAAIuV,WAAWuK,UAAU,GAAG,MAE9F,yBAAKprB,UAAU,eACX,+CAAkBsL,EAAIkV,cAE1B,yBAAKxgB,UAAU,eACX,oDAAkBsL,EAAImV,MAE1B,yBAAKzgB,UAAU,eACX,qDAAmBsL,EAAI7H,SAE3B,yBAAKzD,UAAU,SACX,6BACI,yBAAKA,UAAU,SAAf,wCACA,uBAAGA,UAAU,iBACb,yBAAKA,UAAU,SAASsL,EAAI0zD,eAEhC,6BACI,yBAAKh/D,UAAU,SAAf,qCACA,uBAAGA,UAAU,kBACb,yBAAKA,UAAU,SAASsL,EAAIyzD,oBAM5C,yBAAK/+D,UAAU,WACX,4BAAKsL,EAAI/G,UACT,4KACA,0BAAMvE,UAAU,QAAhB,2CA/FG,UCVhC,SAASqgE,GAAsBl9D,EAAehE,GACjD,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,wBAC+ClE,GAAM,CAClD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBZ,KACAs9D,GAAsBl9D,EAAUhE,MAU3CmE,MAAM,SAAAS,GACHZ,EL3BL,CACH7D,KAAMiB,GACNo+D,MKyBkC56D,IAC1BZ,ELVL,CAAE7D,KAAMk/D,KKWH3iE,QAAQC,IAAIiI,EAAKhG,KAAK4+D,QACtB54D,EAAKhG,KAAK4+D,OAAO1vD,KAAK,SAAC3B,GACnB,IAAItJ,EAAa,CACb7C,GAAImM,EAAInM,GACRoF,SAAU+G,EAAI/G,SACd8b,MAAO/U,EAAI+U,MACX7b,SAAU,GACVu6D,cAAezzD,EAAIyzD,cACnBC,aAAc1zD,EAAI0zD,aAClBv7D,OAAQ6H,EAAI7H,OACZ6c,UAAWhV,EAAIgV,UACfC,SAAUjV,EAAIiV,SACdC,YAAalV,EAAIkV,YACjBzb,kBAAmBuG,EAAIvG,kBACvB0b,IAAKnV,EAAImV,IACTC,MAAOpV,EAAIoV,MACXC,QAASrV,EAAIqV,QACbC,QAAStV,EAAIsV,QACbC,WAAYvV,EAAIuV,YAEpB,OAAO1d,ELpCpB,SAAsBw7D,GACzB,MAAO,CAAEr/D,KAAMm/D,GAAeE,MAAOA,GKmCL2B,CAAat+D,UAGpCmC,OAAM,SAAAtF,GACHsE,EL/CT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UK4CMoD,CAAepD,IACxBhD,QAAQC,IAAI,YC1C5B,IAkPeykE,GAlPc,WACzB,IAAMp9D,EAA0BqD,cAC1Bm2D,EAAsB/0D,aAAY,SAACC,GAAD,OAAuBA,EAAM80D,UAC/DvhD,EAAiDxT,aAAY,SAACC,GAAD,OAAuBA,EAAMuT,yBAC1FvI,EAA+DjL,aAAY,SAACC,GAAD,OAAuBA,EAAMgL,gCACxG2tD,EAA2B7D,EAAOA,OAAO78D,OACzC2gE,EAAqB5tD,EAA6B4yB,UAAUtjB,QAAO,SAAC2jB,EAAMC,GAAP,OAAgBD,GAAsB,EAAbC,EAAKtzB,OAAc,KAAI,GACrHzG,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAVsB,MAaDtN,oBAAS,GAbR,mBAaxBoqB,EAbwB,KAafC,EAbe,KAe/BltB,QAAQC,IAAIsf,EAAsBA,uBAfH,MAiBL1c,oBAAS,GAjBJ,mBAiBxBonB,EAjBwB,KAiBjBC,EAjBiB,KAmB/B,SAAS+D,EAAaoD,GAClB/pB,ENEG,CAAE7D,KAAMg/D,GAA2BK,MMFTzxC,IAC7BjH,IACA9iB,EAASL,GAAqB+6D,GAAwBxnD,OAG1D,SAAS4P,IACLF,GAAS,GAGb,SAASG,EAAc7mB,GACnB0mB,GAAS,GAGb5iB,EAASmQ,GAAkB,iBAAa,KAjCT,MAmCK5U,mBAAS,IAnCd,mBAmCxB4tB,EAnCwB,KAmCZC,EAnCY,KAqCvBnS,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OASbuL,wBAAay0D,GAAsBl9D,EAAUhE,IAC7CyM,wBAAauzD,GAAwBh8D,EAAUhE,IAC/CyM,wBAAaqG,GAAmC9O,EAAUhE,QAGnE,CAACgE,EAAUwY,EAAc3Y,EAAe7D,IAE3C,IAAI4E,EAAiB,GAerB,OAbAqX,EAAsBA,sBAAsBnO,KAAI,SAAC3B,EAAK4B,GAClD,YAAYmO,IAAR/P,EACOvH,EAAK8C,KAAK,CACbyU,GAAIpO,EACJqO,aAA4BF,IAAnB/P,EAAIsM,YAA+C,OAAnBtM,EAAIsM,WAAsBtM,EAAIsM,WAAa,GACpF4D,UAAW,IAAIhgB,KAAK8P,EAAIuM,YACxB4D,QAAS,IAAIjgB,KAAK8P,EAAIwM,UACtB4D,UAAU,IAGX,KAIPtB,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KAGL,kBAAC,IAAD,MACA,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,wBAAgB6I,KAAI,UAAK8sD,GAAoB51D,KAAK,OAAO6I,MAAM,YAC9E,kBAAC,GAAD,CAAS5I,MAAM,oBAAU6I,KAAI,UAAK+sD,GAAc71D,KAAK,SAAS6I,MAAM,YACpE,yBAAKzT,UAAU,yBAAyBb,GAAG,uCACvC,4BAAQa,UAAU,iCAAiCb,GAAG,2BAA2B8H,QAAS,WACtF9D,EAASL,GAAqB+6D,GAAwBjoD,SACtDqQ,MAEA,uBAAGjmB,UAAU,mBAJjB,mCAUR,yBAAKA,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,2BAAOV,KAAK,OAAOH,GAAG,QAAQa,UAAU,eAAeE,YAAY,mBAAWX,SAAU,SAACC,GACrF+sB,EAAc/sB,EAAMC,OAAOJ,OAC3BxD,QAAQC,IAAIwwB,OAGpB,4BAAQhtB,KAAK,SAASU,UAAU,mBAC5B,uBAAGA,UAAU,sBAM7B,kBAAC,KAAD,CACI/B,KAAM6nB,EACN3J,QAAS,kBAAM4J,GAAS,IACxB3J,sBAAoB,GAEpB,oCAEQ,WACI,GAAKugD,EAAOhnD,oBAAsBkoD,GAAwBjoD,QAAa+mD,EAAOmC,eAAmBnC,EAAOhnD,oBAAsBkoD,GAAwBr+C,KAClJ,OAAO,kBAAC,GAAD,CAAkB1J,QAASoQ,IAF1C,KASZ,yBAAKlmB,UAAU,OACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,WAAW8H,QAAS,YACxC,IAAZ6hB,GACAC,GAAW,IAEhBxhB,MAAO,CACNC,MAAOshB,EAAU,UAAY,YALjC,yBAOA,yBAAKvhB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBnB,EAAU,UAAY,cAG/C,yBAAK9oB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACzC,IAAZ6hB,GACAC,GAAW,IAGfxhB,MAAO,CACHC,MAAOshB,EAAU,UAAY,YANrC,2BAQA,yBAAKvhB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBnB,EAAU,UAAY,gBAO3B,IAAZA,EAEI,kBAAC,WAAD,KACI,yBAAK9oB,UAAU,OACX,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,sCACA,kBAAC,GAAD,CACIogB,SAAUuK,OAU1B,kBAAC,WAAD,KACI,yBAAK9pB,UAAU,OACX,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,2BACA,yBAAKa,UAAU,oBACX,yBAAKA,UAAU,aACX,kBAAC,KAAD,CAAmBgY,OAAO,QAAQsE,aAAc,IAAI9gB,KAAQ+gB,cAAe,CACvEC,WAAYzY,EAAM0Y,OAAQ,CACtBtd,GAAI,KACJ+W,QAAS,CAAE7I,KAAM,WACjBqP,SAAU,CAAErP,KAAM,YAClBsP,UAAW,CAAEtP,KAAM,aACnBuP,QAAS,CAAEvP,KAAM,cAIrB,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAeiI,OAAO,MAAMuH,UAAU,QAAQC,QAAQ,WAE1D,kBAAC,KAAD,CAAQE,SAAU,CAACC,gB,wZCzP3E,IAAMyjD,GAAgBC,KAAOt+C,OAAV,MAMH,SAAC5jB,GAAD,OACZA,EAAMmiE,QAAUniE,EAAMoiE,YAAc,uBA8BzB54D,GAdiB,SAAC,GAAqC,IAAnC24D,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,YAC1C,OACE,kBAACH,GAAD,CAAeE,QAASA,EAASC,YAAaA,GAC5C,6BACE,mDACA,6D,6ZCxBR,IAAMC,GAAcH,aAAOI,KAAOC,IAAdL,CAAH,MAMD,SAACliE,GAAD,OAAWA,EAAM+I,SACjB,SAAC/I,GAAD,OAAWA,EAAMwiE,WAuClBC,GAxBqB,SAAC,GAKvB,IAJZ15D,EAIW,EAJXA,MACAo5D,EAGW,EAHXA,QACAC,EAEW,EAFXA,YACAM,EACW,EADXA,WACW,EACsBziE,mBAAS,WAD/B,mBACJuiE,EADI,KACKG,EADL,KAOX,OAJAz1D,qBAAU,WACRy1D,EAAc,aACb,CAAC55D,IAGF,kBAACs5D,GAAD,CACEO,WAAY,CAAEC,SAAU,IACxBC,WAAY,CAAEC,MAAO,IAAKC,OAAQ,GAAInqD,GAAI,IAC1CoqD,SAAU,CAAEF,MAAO,GAAKC,QAAS,GAAIE,aAAc,QACnDn6D,MAAOA,EACPy5D,QAASA,EACTh6D,QAAS,kBAAO25D,GAAWQ,EAAcD,EAAW35D,EAAOq5D,Q,ihBCtCjE,IAAMe,GAAcjB,KAAOriC,QAAV,MAkBXujC,GAAYlB,KAAOK,IAAV,MA8EAc,GAzEe,SAAC,GASjB,IARZC,EAQW,EARXA,OACAnB,EAOW,EAPXA,QACAoB,EAMW,EANXA,WACAnB,EAKW,EALXA,YACAoB,EAIW,EAJXA,cACAC,EAGW,EAHXA,iBACAC,EAEW,EAFXA,cACAC,EACW,EADXA,oBAUMjB,EAAa,SAACkB,EAAkBC,GACpC,GAAID,IAAaC,EAAc,EATZ,SAAC96D,GACpBu6D,EAAS,GACT,IAAK,IAAIz/C,EAAI,EAAGA,EAAI0/C,EAAY1/C,IAC9By/C,EAAOl7D,KAAKW,GAEd06D,EAAiBH,GAKfQ,CAAaD,GACbL,GAAc,GACdE,EAAc,YACdC,EAAoB,eAEpB,IAAII,EAAwB,GACxBx2D,EAAO/I,aAAaC,QAAQ,YAEnB,OAAT8I,IACFw2D,EAAcx2D,EAAK3D,MAAM,MACbxB,KAAK,KAEnB5D,aAAae,QAAQ,WAAYw+D,EAAY5mE,YAE7C,IAAI6mE,EAAiC,GACjC/nD,EAAOzX,aAAaC,QAAQ,qBAWhC,OATc,OAATwX,IACH+nD,EAAuB/nD,EAAKrS,MAAM,MACbxB,KAAKm7D,EAAWpmE,YAEvCqH,aAAae,QACX,oBACAy+D,EAAqB7mE,YAGhB,UAGP,OADAumE,EAAc,aACP,UAIX,OACE,kBAACP,GAAD,KACE,kBAACC,GAAD,KACGE,EAAO90D,KAAI,SAACzF,EAAe0F,GAC1B,OACE,kBAAC,GAAD,CACE0D,IAAK1D,EACL1F,MAAOA,EACPo5D,QAASA,EACTC,YAAaA,EACbM,WAAYA,EACZF,QAAS,kB,m0DC/FvB,IAAMyB,GAAW/B,KAAOriC,QAAV,MAWRqkC,GAAsBhC,KAAOK,IAAV,MAcnB4B,GAAkBjC,KAAOkC,GAAV,MAoBfC,GAAWnC,KAAOK,IAAV,MAKR+B,GAAYpC,KAAOqC,EAAV,MAcTC,GAAYtC,KAAOqC,EAAV,MA+GAE,GAjGI,SAAC,GAAwB,IAAtBtC,EAAqB,EAArBA,QAAqB,EACTliE,mBAAS,GADA,mBAClCykE,EADkC,KACxBC,EADwB,OAES1kE,mBAAS,KAFlB,mBAElC2kE,EAFkC,KAEfC,EAFe,KAIzC33D,qBAAU,WACR,IAAgB,IAAZi1D,EAAkB,CACpB,IAAI2C,EAAiB,GACjBv3D,EAAO/I,aAAaC,QAAQ,YACnB,OAAT8I,IACFu3D,EAAOv3D,EAAK3D,MAAM,MAEpB+6D,EAAYG,EAAKzjE,OAAS,GAE1B,IAAI0jE,EAA0B,GAC1B9oD,EAAOzX,aAAaC,QAAQ,qBAChC,GAAa,OAATwX,EAAe,CACjB8oD,EAAgB9oD,EAAKrS,MAAM,KAC3B,IAAMo7D,EAAiBC,EAAKF,GACxBC,GACFH,EAAqBG,OAI1B,CAAC7C,IAEJ,IAAM8C,EAAO,SAACC,GACZ,OAAOA,EACJvlC,MACC,SAACxB,EAAGyB,GAAJ,OACEslC,EAAI/kD,QAAO,SAACglD,GAAD,OAAOA,IAAMhnC,KAAG98B,OAAS6jE,EAAI/kD,QAAO,SAACglD,GAAD,OAAOA,IAAMvlC,KAAGv+B,UAElE+jE,OAwBLl4D,qBAAU,YArBG,WACX,IAAI43D,EAAiB,GACjBv3D,EAAO/I,aAAaC,QAAQ,YAClB,OAAT8I,IACHu3D,EAAOv3D,EAAK3D,MAAM,MAEpB+6D,EAA4B,IAAhBG,EAAKzjE,OAAe,EAAIyjE,EAAKzjE,OAAS,GAElD,IAAI0jE,EAA0B,GAC1B9oD,EAAOzX,aAAaC,QAAQ,qBAChC,GAAY,MAARwX,EAAc,CAChB8oD,EAAgB9oD,EAAKrS,MAAM,KAC3B,IAAMo7D,EAAiBC,EAAKF,GACxBC,GACFH,EAAqBG,QAGvBH,EAAqBE,EAAc1jE,OAAOlE,YAK5CkoE,MAGF,IAAMC,EAAgBC,mBAAQ,WAC5B,MAA0B,MAAtBX,EACK,OACwB,MAAtBA,EACF,SACwB,MAAtBA,EACF,YADF,IAGN,CAACA,IAEEY,EAA4B,CAChC,CACEp5D,MAAO,YACPxL,MAAO8jE,GAET,CACEt4D,MAAO,sBACPxL,MAAO0kE,GAAgC,WAI3C,OACE,kBAACrB,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,mBACCqB,EAAgBh3D,KAAI,SAACi3D,GACpB,OACE,kBAACpB,GAAD,KACE,kBAACC,GAAD,KAAYmB,EAAKr5D,OACjB,kBAACo4D,GAAD,KAAYiB,EAAK7kE,c,yhCC/J/B,IAAM8kE,GAAUxD,KAAOriC,QAAV,MAaP8lC,GAAazD,aAAOI,KAAOsD,OAAd1D,CAAH,MAmBV2D,GAAmB3D,aAAOyD,GAAPzD,CAAH,MAGN,SAACliE,GAAD,OACZA,EAAM8lE,mBAAqB9lE,EAAM+lE,gBAAkB,WAE5C,SAAC/lE,GAAD,OACPA,EAAM8lE,mBAAqB9lE,EAAM+lE,eAC7B,kBACA,WAGFC,GAAU9D,KAAO+D,KAAV,MA8IEC,GAtII,WACen+D,aAChCrD,CAASmQ,GAAkB,mBAAY,KAFhB,MAGa5U,mBAAS,GAHtB,mBAGhBsjE,EAHgB,KAGJ4C,EAHI,OAIalmE,mBAAS,CAC3C,kBACA,oBACA,kBACA,qBACA,oBACA,oBAVqB,mBAIhBmmE,EAJgB,KAIJC,EAJI,OAYepmE,mBAAS,qBAZxB,mBAYhBmiE,EAZgB,KAYHkE,EAZG,OAaOrmE,oBAAS,GAbhB,mBAahBkiE,EAbgB,KAaPoE,EAbO,OAcOtmE,mBAAS,IAdhB,mBAchBL,EAdgB,KAcP4mE,EAdO,OAe2BvmE,mBAAS,cAfpC,mBAehBwmE,EAfgB,KAeGC,EAfH,KAiBjBC,EAAc,WAClB,IAAMtF,EAAIloB,KAAKytB,MAAsB,IAAhBztB,KAAK0tB,UACpBC,EAAI3tB,KAAKytB,MAAsB,IAAhBztB,KAAK0tB,UACpBjnC,EAAIuZ,KAAKytB,MAAsB,IAAhBztB,KAAK0tB,UAC1B,MAAM,OAAN,OAAcxF,EAAd,aAAoByF,EAApB,aAA0BlnC,EAA1B,MAGImnC,EAAuBC,uBAAY,SAAC/1B,GAExC,IADA,IAAIqyB,EAAS,GACJz/C,EAAI,EAAGA,EAAIotB,EAAKptB,IACvBy/C,EAAOl7D,KAAKu+D,KAGd,IAAMM,EAAc9tB,KAAKytB,MAAMztB,KAAK0tB,SAAWvD,EAAOjiE,QAGtD,OAFAilE,EAAehD,EAAO2D,IAEf3D,IACN,IAEG4D,EAAYF,uBAAY,WAC5BT,GAAW,GACXF,EAAcU,EAAqBxD,IACnCmD,EAAqB,cACrBF,EAAW,MACV,CAACO,EAAsBxD,IAkBpB8B,EAAO2B,uBAAY,WACvBX,EAAcU,EAAqBxD,IAjBX,WACxB,IAAImB,EAAqB,GACrBn3D,EAAO/I,aAAaC,QAAQ,YACnB,OAAT8I,IACFm3D,EAAWn3D,EAAK3D,MAAM,MAExBpF,aAAae,QAAQ,WAAYm/D,EAASvnE,YAE1C,IAAIynE,EAA8B,GAC9B3oD,EAAOzX,aAAaC,QAAQ,qBAClB,OAATwX,IACH2oD,EAAoB3oD,EAAKrS,MAAM,MAEjCpF,aAAae,QAAQ,oBAAqBq/D,EAAkBznE,YAK5DgqE,KACC,CAACJ,EAAsBxD,IAE1Br2D,qBAAU,WACRm4D,MACC,CAACA,IAEJn4D,qBAAU,WACRg6D,MACC,CAACA,EAAW3D,IAiBf,OACE,oCACE,kBAAC,GAAD,CAAQnB,YAAaA,EAAaD,QAASA,IAC3C,yBAAK5gE,UAAU,mGACb,yBAAKA,UAAU,+BAA+BuH,MAAO,CAAC0iB,gBAAiB42C,EAAa7oD,OAAQ,QAASC,MAAO,QAAS4tD,OAAQ,0BAA2BlE,aAAc,WAIxK,kBAACwC,GAAD,KACE,kBAACC,GAAD,CACEn9D,QAAS,kBAAM0+D,KACfpE,WAAY,CAAEC,MAAO,IAAKH,WAAY,CAAEC,SAAU,MAClDI,SAAU,CAAEF,MAAO,IAElB0D,GAEH,kBAACT,GAAD,KAAUpmE,GA/BU,CACxB,CACE2jE,WAAY,EACZtuD,KAAM,QAER,CACEsuD,WAAY,EACZtuD,KAAM,UAER,CACEsuD,WAAY,EACZtuD,KAAM,SAqBezG,KAAI,SAACo3D,GACtB,OACE,kBAACC,GAAD,CACE1zD,IAAKyzD,EAAOrC,WACZ/6D,QAAS,kBAAM29D,EAAcP,EAAOrC,aACpCuC,iBAAkBF,EAAOrC,WACzBwC,eAAgBxC,EAChBT,WAAY,CAAEC,MAAO,IAAKH,WAAY,CAAEC,SAAU,MAClDI,SAAU,CAAEF,MAAO,IAElB6C,EAAO3wD,UAKhB,kBAAC,GAAD,CACEmtD,YAAaA,EACbkB,OAAQ8C,EACR7C,WAAYA,EACZpB,QAASA,EACTsB,iBAAkB4C,EAClB7C,cAAe+C,EACf7C,cAAe8C,EACf7C,oBAAqB+C,IAEvB,kBAAC,GAAD,CAAYvE,QAASA,MChMdkF,GAA2B,mBAC3BC,GAA4B,oBAC5BC,GAA8B,sBAE9BC,GAA2C,mCAC3CC,GAA0C,kCAC1CC,GAAkC,0BAClCC,GAA+B,uBAG/BC,GAA0B,kBAC1BC,GAA2B,mBAC3BC,GAA6B,qBAE7BC,GAA0C,kCAC1CC,GAAyC,iCACzCC,GAAiC,yBACjCC,GAA8B,sBAG9BhlE,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBCLjC,SAASomE,GAAgBzjE,EAAehE,GAC3C,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,0BACiDlE,GAAM,CACpD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASyjE,GAAgBzjE,EAAUhE,OAU9CmE,MAAM,SAAAS,GACHZ,EDfL,CACH7D,KAAMiB,GACNsmE,cCakC9iE,IAC1BZ,EDEL,CAAE7D,KAAM6mE,KCDHhjE,ED8BL,CAAE7D,KAAMonE,KC7BH7qE,QAAQC,IAAIiI,EAAKhG,KAAK+oE,kBACtBjrE,QAAQC,IAAIiI,EAAKhG,KAAKgpE,0BACtBhjE,EAAKhG,KAAK+oE,iBAAiB75D,KAAI,SAAC3B,EAAU4B,GACtC,IAAI85D,EAA+B,CAC/B7nE,GAAImM,EAAInM,GACRipB,WAAY9c,EAAI8c,WAChBC,WAAY/c,EAAI+c,WAChBhb,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrBC,eAAgB5c,EAAI4c,eACpBzV,MAAOnH,EAAImH,MACX0V,UAAW7c,EAAI6c,UACfM,WAAYnd,EAAImd,WAChBF,aAAcjd,EAAIid,aAClBD,YAAahd,EAAIgd,YACjB/C,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBC,cAAena,EAAIma,cACnBiD,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAGrB,OADA9sB,QAAQC,IAAIkrE,GACL7jE,EDSpB,SAA2B0jE,GAC9B,MAAO,CAAEvnE,KAAM+mE,GAAiBQ,cAAeA,GCVfI,CAAkBD,OAGtCjjE,EAAKhG,KAAKgpE,yBAAyB95D,KAAI,SAAC3B,EAAU4B,GAC9C,IAAI85D,EAA+B,CAC/B7nE,GAAImM,EAAInM,GACRipB,WAAY9c,EAAI8c,WAChBC,WAAY/c,EAAI+c,WAChBhb,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrBC,eAAgB5c,EAAI4c,eACpBzV,MAAOnH,EAAImH,MACX0V,UAAW7c,EAAI6c,UACfM,WAAYnd,EAAImd,WAChBF,aAAcjd,EAAIid,aAClBD,YAAahd,EAAIgd,YACjB/C,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBC,cAAena,EAAIma,cACnBiD,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAGrB,OADA9sB,QAAQC,IAAIkrE,GACL7jE,ED5CpB,SAAiC0jE,GACpC,MAAO,CAAEvnE,KAAMwmE,GAAkBe,cAAeA,GC2ChBK,CAAwBF,UAG/C7iE,OAAM,SAAAtF,GACHsE,ED/DT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UC4DMoD,CAAepD,IACxBhD,QAAQC,IAAI,YC7F5B,IA+JeqrE,GA/JgB,WAC3B,IAAMhkE,EAA0BqD,cAC1Bg4C,EAAsC52C,aAAY,SAACC,GAAD,OAAuBA,EAAMu/D,kBAC/EhqE,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzEo0D,EAA+C7oB,EAAgBsoB,iBAAiBhnE,OAClFkM,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAGTnQ,QAAQC,IAAI0iD,GAXqB,IAazBpkC,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAag7D,GAAgBzjE,EAAUhE,OAGhD,CAACgE,EAAUhE,EAAIwc,EAAc3Y,IAEhC2I,qBAAU,WACNxI,EAASmQ,GAAkB,mBAAY,OACxC,CAAClW,EAAK+V,KAAMhQ,IAjDkB,MAmDHzE,oBAAS,GAnDN,mBAmD1BoqB,EAnD0B,KAmDjBC,EAnDiB,KAoDjC,OACI3O,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KAIH,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,kCAAa6I,KAAI,UAAK2zD,GAAwCz8D,KAAK,OAAO6I,MAAM,aAUnG,yBAAKzT,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,2BAAOV,KAAK,SAASH,GAAG,QAAQa,UAAU,eAAeE,YAAY,sBAEzE,4BAAQZ,KAAK,SAASU,UAAU,mBAC5B,uBAAGA,UAAU,sBAM7B,yBAAKA,UAAU,OACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,WAAW8H,QAAS,YACxC,IAAZ6hB,GACAC,GAAW,IAEhBxhB,MAAO,CACNC,MAAOshB,EAAU,UAAY,YALjC,kBAOA,yBAAKvhB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBnB,EAAU,UAAY,cAG/C,yBAAK9oB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACzC,IAAZ6hB,GACAC,GAAW,IAGfxhB,MAAO,CACHC,MAAOshB,EAAU,UAAY,YANrC,mCAQA,yBAAKvhB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBnB,EAAU,UAAY,eAUnC,kBAAC,WAAD,KACI,yBAAK9oB,UAAU,WC7IlCsnE,GAAsC,8BACtCC,GAAuC,+BACvCC,GAAyC,iCAEzCC,GAAsD,8CACtDC,GAAqD,6CACrDC,GAA6C,qCAC7CC,GAA0C,kCAG1CC,GAAkC,0BAClCC,GAAmC,2BACnCC,GAAqC,6BAErCC,GAAkD,0CAClDC,GAAiD,yCACjDC,GAAyC,iCACzCC,GAAsC,8BAGtCC,GAAkC,0BAClCC,GAAmC,2BACnCC,GAAqC,6BAErCC,GAAkD,0CAClDC,GAAiD,yCACjDC,GAAyC,iCACzCC,GAAsC,8BAGtCC,GAA2C,mCAC3CC,GAA4C,oCAC5CC,GAA8C,sCAE9CC,GAA2D,mDAC3DC,GAA0D,kDAC1DC,GAAkD,0CAClDC,GAA+C,uCAE/CtnE,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBAQjC,SAASuB,GAAiB4X,GAC7B,MAAO,CACHra,KAAMiB,GACNoZ,WAID,SAAS1X,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAKZ,SAASqqE,GAA6BvvD,GACzC,MAAO,CAAEra,KAAMsoE,GAAiCjuD,QAASA,GAGtD,SAASwvD,KACZ,MAAO,CAAE7pE,KAAMqoE,IAGZ,SAASyB,GAAyBzvD,GACrC,MAAO,CAAEra,KAAMgoE,GAA6B3tD,QAASA,GAoBlD,SAAS0vD,GAAyB1vD,GACrC,MAAO,CAAEra,KAAM6oE,GAA6BxuD,QAASA,GAGlD,SAAS2vD,KACZ,MAAO,CAAEhqE,KAAM4oE,IAGZ,SAASqB,GAAqB5vD,GACjC,MAAO,CAAEra,KAAMuoE,GAAyBluD,QAASA,GAoB9C,SAAS6vD,GAAyB7vD,GACrC,MAAO,CAAEra,KAAMopE,GAA6B/uD,QAASA,GAGlD,SAAS8vD,KACZ,MAAO,CAAEnqE,KAAMmpE,IAGZ,SAASiB,GAAqB/vD,GACjC,MAAO,CAAEra,KAAM8oE,GAAyBzuD,QAASA,GAoB9C,SAASgwD,GAAgChwD,GAC5C,MAAO,CAAEra,KAAM2pE,GAAsCtvD,QAASA,GAG3D,SAASiwD,KACZ,MAAO,CAAEtqE,KAAM0pE,IAGZ,SAASa,GAA4BlwD,GACxC,MAAO,CAAEra,KAAMqpE,GAAkChvD,QAASA,GCrIvD,SAASmwD,GAA0B3mE,EAAehE,GACrD,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,2BACkDlE,GAAM,CACrD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS2mE,GAA0B3mE,EAAUhE,OAUxDmE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASsmE,MACTtmE,EAASymE,MACTzmE,EAASmmE,MACTnmE,EAASgmE,MACTttE,QAAQC,IAAIiI,GACZA,EAAKhG,KAAKsqD,gBAAgBp7C,KAAI,SAAC3B,EAAU4B,GACrC,IAAIyM,EAA0B,CAC1Bxa,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrB6oB,gCAAiCxlC,EAAIwlC,gCACrCC,yBAA0BzlC,EAAIylC,yBAC9BC,uBAAwB1lC,EAAI0lC,uBAC5BvX,kBAAmBnuB,EAAImuB,kBACvBhU,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClB4C,UAAW7c,EAAI6c,UACftQ,WAAYvM,EAAIuM,WAChBC,SAAUxM,EAAIwM,SACdsQ,WAAY9c,EAAI8c,WAChBK,WAAYnd,EAAImd,WAChBH,YAAahd,EAAIgd,YACjBnW,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClBiW,WAAY/c,EAAI+c,WAChBK,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAGrB,OADA9sB,QAAQC,IAAI6d,GAEDxW,EADG,IAAV+J,EACgBg8D,GAA6BvvD,GAG7ByvD,GAAyBzvD,OAIjD5V,EAAKhG,KAAKgsE,YAAY98D,KAAI,SAAC3B,EAAU4B,GACjC,IAAIyM,EAA0B,CAC1Bxa,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrB6oB,gCAAiCxlC,EAAIwlC,gCACrCC,yBAA0BzlC,EAAIylC,yBAC9BC,uBAAwB1lC,EAAI0lC,uBAC5BvX,kBAAmBnuB,EAAImuB,kBACvBhU,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClB4C,UAAW7c,EAAI6c,UACftQ,WAAYvM,EAAIuM,WAChBC,SAAUxM,EAAIwM,SACdsQ,WAAY9c,EAAI8c,WAChBK,WAAYnd,EAAImd,WAChBH,YAAahd,EAAIgd,YACjBnW,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClBiW,WAAY/c,EAAI+c,WAChBK,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAGrB,OADA9sB,QAAQC,IAAI6d,GAEDxW,EADG,IAAV+J,EACgBm8D,GAAyB1vD,GAGzB4vD,GAAqB5vD,OAK7C5V,EAAKhG,KAAK0qD,YAAYx7C,KAAI,SAAC3B,EAAU4B,GACjC,IAAIyM,EAA0B,CAC1Bxa,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrB6oB,gCAAiCxlC,EAAIwlC,gCACrCC,yBAA0BzlC,EAAIylC,yBAC9BC,uBAAwB1lC,EAAI0lC,uBAC5BvX,kBAAmBnuB,EAAImuB,kBACvBhU,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClB4C,UAAW7c,EAAI6c,UACftQ,WAAYvM,EAAIuM,WAChBC,SAAUxM,EAAIwM,SACdsQ,WAAY9c,EAAI8c,WAChBK,WAAYnd,EAAImd,WAChBH,YAAahd,EAAIgd,YACjBnW,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClBiW,WAAY/c,EAAI+c,WAChBK,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAGrB,OADA9sB,QAAQC,IAAI6d,GAEDxW,EADG,IAAV+J,EACgBs8D,GAAyB7vD,GAGzB+vD,GAAqB/vD,OAK7C5V,EAAKhG,KAAK2qD,qBAAqBz7C,KAAI,SAAC3B,EAAU4B,GAC1C,IAAIyM,EAA0B,CAC1Bxa,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrB6oB,gCAAiCxlC,EAAIwlC,gCACrCC,yBAA0BzlC,EAAIylC,yBAC9BC,uBAAwB1lC,EAAI0lC,uBAC5BvX,kBAAmBnuB,EAAImuB,kBACvBhU,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClB4C,UAAW7c,EAAI6c,UACftQ,WAAYvM,EAAIuM,WAChBC,SAAUxM,EAAIwM,SACdsQ,WAAY9c,EAAI8c,WAChBK,WAAYnd,EAAImd,WAChBH,YAAahd,EAAIgd,YACjBnW,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClBiW,WAAY/c,EAAI+c,WAChBK,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAGrB,OADA9sB,QAAQC,IAAI6d,GAEDxW,EADG,IAAV+J,EACgBy8D,GAAgChwD,GAGhCkwD,GAA4BlwD,UAIvDxV,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCJbkuE,OAvLf,SAAsCvrE,GAClC,IAAMwrE,EAAyCriE,aAAY,SAACC,GAAD,OAAuBA,EAAMoiE,oBADjB,EAErCvrE,mBAAS,GAF4B,mBAEhEw9C,EAFgE,KAErDC,EAFqD,OAGzCz9C,mBAA4B,IAHa,mBAGhE05B,EAHgE,KAGvDqmB,EAHuD,KAKjEh4C,EAAUC,cA0BhBiF,qBAAU,WACN,IAAIwL,GAAK8yD,EAAiBvhB,qBAAqB5oD,OAASmqE,EAAiBvhB,qBAAqB5oD,OAAS,IAAK,GAExG2+C,EADM,IAANtnC,EACW8yD,EAAiBvhB,qBAGjBuhB,EAAiBvhB,qBAAqB5mC,MAAM,EAAE,KAG5Dq6B,EAAchlC,EAAE,KAClB,CAAC8yD,EAAiBvhB,uBAErB7sD,QAAQC,IAAKogD,GA3C0D,MAuD3Cx9C,mBAAS,KAvDkC,mBAuDhEkgB,EAvDgE,KAuDxD8/B,EAvDwD,KA0DvE,SAASwrB,EAAa9rE,GAClBsgD,EAAUtgD,EAAEqB,OAAOJ,OASvB,OAHAxD,QAAQC,IAAIs8B,GAIR,kBAAC,WAAD,KACI,yBAAKp4B,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,sEACX,wBAAIA,UAAU,QAAd,SAAyBo4B,EAAQxZ,QAAO,SAACva,GACrC,MAAoB,KAAhB5F,EAAMY,MACCgF,EAEqB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACtKtiB,EAEJ,QACRvE,OARH,sBASA,yBAAKE,UAAU,cACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,QAAhB,kBACA,4BAAQqN,KAAK,OAAOlO,GAAG,OACnBE,MAAOuf,EACPrf,SAAU2qE,GAEV,4BAAQ7qE,MAAM,IAAd,0BACA,4BAAQA,MAAM,KAAd,iBACA,4BAAQA,MAAM,KAAd,sBAEJ,4BAAQgO,KAAK,OAAOlO,GAAG,OAAOa,UAAU,OACpCX,MAAOuf,EACPrf,SAAU2qE,GAEV,4BAAQ7qE,MAAM,IAAd,8BACA,4BAAQA,MAAM,KAAd,iBACA,4BAAQA,MAAM,KAAd,oBAEJ,4BAAQgO,KAAK,OAAOlO,GAAG,OAAOa,UAAU,OACpCX,MAAOuf,EACPrf,SAAU2qE,GAEV,4BAAQ7qE,MAAM,IAAd,aACA,4BAAQA,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,aAEJ,4BAAQW,UAAU,0CAA0CV,KAAK,SAAS2H,QAAS,cAAnF,eAAoH,uBAAGjH,UAAU,sBAKrJ,yBAAKA,UAAU,YAEPo4B,EAAQxZ,QAAO,SAACva,GACZ,MAAoB,KAAhB5F,EAAMY,MACCgF,EAEqB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACtKtiB,EAEJ,QACR4I,KAAI,SAAC3B,EAAK4B,GACT,YAAYmO,IAAR/P,EACO,KAGP,yBAAKtL,UAAU,WAAWiH,QAAS,YA5H3C,SAACkjE,GACjBlnE,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAcmmE,EAAgBhrE,GAAGvD,YACtDqH,aAAaY,WAAW,gBACxBZ,aAAae,QAAQ,eAAgBmmE,EAAgB98D,MACrDpK,aAAaY,WAAW,uBACxBZ,aAAae,QAAQ,sBAAuBmmE,EAAgB78D,aAC5DrK,aAAaY,WAAW,mBACxBZ,aAAae,QAAQ,kBAAmBmmE,EAAgBliD,gBAAgBrsB,YACxEqH,aAAaY,WAAW,oBACxBZ,aAAae,QAAQ,mBAAoBmmE,EAAgB1kD,eACzDxiB,aAAaY,WAAW,mBACxBZ,aAAae,QAAQ,kBAAmBmmE,EAAgB5kD,cACxDtiB,aAAaY,WAAW,qBACxBZ,aAAae,QAAQ,oBAAqBmmE,EAAgB1wC,mBAC1Dx2B,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAcmmE,EAAgBtyD,YACnD5U,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAYmmE,EAAgBryD,UAEjDrR,EAAQI,KAAK,CACTmB,SAFO,6BAyGwD6I,CAAYvF,KACnD,yBAAKtL,UAAU,8CACX,yBAAKA,UAAU,qCAAoC,yBAAKkH,IAAKoE,EAAI6c,UAAWlQ,MAAM,OAAO9Q,IAAI,MAC7F,wBAAInH,UAAU,QAAQsL,EAAI+B,MAAU,0BAAMrN,UAAU,gCAAgCsL,EAAIma,cAApD,MAA0Ena,EAAIia,cAClH,0BAAMvlB,UAAU,WAAhB,kBAAqCsL,EAAI8G,cACzC,0BAAMpS,UAAU,WAAhB,mCAAyCsL,EAAIuM,WAAW0lC,WAAW,IAAK,MACxE,0BAAMv9C,UAAU,WAAhB,2CAA8CsL,EAAIwM,SAASylC,WAAW,IAAK,MAC3E,0BAAMv9C,UAAU,WAAhB,kDAA8CsL,EAAI2c,iBAClD,0BAAMjoB,UAAU,gBAAhB,mDAAsDsL,EAAImuB,kBAAkB8jB,WAAW,IAAK,MAC5F,yBACIv9C,UAAU,wCACN,6BAAK,uBAAGA,UAAU,qBAAuB,0BAAMA,UAAU,UAC7D,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,YAAW,yBAAKA,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,mCAAmCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,QAAa,0BAAMjY,UAAU,QAC1TsL,EAAI0lC,gCASzC,yBAAKhxC,UAAU,8CACX,6BACI,wBAAIA,UAAU,cACV,wBAAIA,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,WAAW1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBACtE,0BAAM43C,cAAY,QAAlB,UAIJxjB,MAAMC,KAAKD,MAAOygB,GAAY3kC,QAAQtK,KAAI,SAAC3B,EAAK8B,GAC5C,OACI,wBAAIpN,UAAU,aAAY,uBAAGA,UAAU,YAAYsM,KAAK,IAAIrF,QAAS,SAAC7I,GAvH1G,IAA0B8gD,EAwHc9gD,EAAEiJ,iBAxHhB63C,EAyH+B5zC,EAxHrDzP,QAAQC,IAAIojD,GAERT,EADAS,IAAUhD,EACC+tB,EAAiBvhB,qBAAqB5mC,MAAY,GAANo9B,GAG5C+qB,EAAiBvhB,qBAAqB5mC,MAAY,GAANo9B,EAAe,GAANA,EAAW,OAmHjB5zC,EAAM,OAIhD,wBAAItL,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,OAAO1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBAClE,0BAAM43C,cAAY,QAAlB,gBCWrBmrB,OAvLf,SAAiC3rE,GAC7B,IAAMwrE,EAAyCriE,aAAY,SAACC,GAAD,OAAuBA,EAAMoiE,oBADtB,EAEhCvrE,mBAAS,GAFuB,mBAE3Dw9C,EAF2D,KAEhDC,EAFgD,OAGpCz9C,mBAA4B,IAHQ,mBAG3D05B,EAH2D,KAGlDqmB,EAHkD,KAK5Dh4C,EAAUC,cA0BhBiF,qBAAU,WACN,IAAIwL,GAAK8yD,EAAiB5hB,gBAAgBvoD,OAASmqE,EAAiB5hB,gBAAgBvoD,OAAS,IAAK,GAE9F2+C,EADM,IAANtnC,EACW8yD,EAAiB5hB,gBAGjB4hB,EAAiB5hB,gBAAgBvmC,MAAM,EAAE,KAGvDq6B,EAAchlC,EAAE,KAClB,CAAC8yD,EAAiB5hB,kBAErBxsD,QAAQC,IAAKogD,GA3CqD,MAuDtCx9C,mBAAS,KAvD6B,mBAuD3DkgB,EAvD2D,KAuDnD8/B,EAvDmD,KA0DlE,SAASwrB,EAAa9rE,GAClBsgD,EAAUtgD,EAAEqB,OAAOJ,OASvB,OAHAxD,QAAQC,IAAIs8B,GAIR,kBAAC,WAAD,KACI,yBAAKp4B,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,sEACX,wBAAIA,UAAU,QAAd,SAAyBo4B,EAAQxZ,QAAO,SAACva,GACrC,MAAoB,KAAhB5F,EAAMY,MACCgF,EAEqB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACtKtiB,EAEJ,QACRvE,OARH,sBASA,yBAAKE,UAAU,cACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,QAAhB,kBACA,4BAAQqN,KAAK,OAAOlO,GAAG,OACnBE,MAAOuf,EACPrf,SAAU2qE,GAEV,4BAAQ7qE,MAAM,IAAd,0BACA,4BAAQA,MAAM,KAAd,iBACA,4BAAQA,MAAM,KAAd,sBAEJ,4BAAQgO,KAAK,OAAOlO,GAAG,OAAOa,UAAU,OACpCX,MAAOuf,EACPrf,SAAU2qE,GAEV,4BAAQ7qE,MAAM,IAAd,8BACA,4BAAQA,MAAM,KAAd,iBACA,4BAAQA,MAAM,KAAd,oBAEJ,4BAAQgO,KAAK,OAAOlO,GAAG,OAAOa,UAAU,OACpCX,MAAOuf,EACPrf,SAAU2qE,GAEV,4BAAQ7qE,MAAM,IAAd,aACA,4BAAQA,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,aAEJ,4BAAQW,UAAU,0CAA0CV,KAAK,SAAS2H,QAAS,cAAnF,eAAoH,uBAAGjH,UAAU,sBAKrJ,yBAAKA,UAAU,YAEPo4B,EAAQxZ,QAAO,SAACva,GACZ,MAAoB,KAAhB5F,EAAMY,MACCgF,EAEqB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACtKtiB,EAEJ,QACR4I,KAAI,SAAC3B,EAAK4B,GACT,YAAYmO,IAAR/P,EACO,KAGP,yBAAKtL,UAAU,WAAWiH,QAAS,YA5H3C,SAACkjE,GACjBlnE,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAcmmE,EAAgBhrE,GAAGvD,YACtDqH,aAAaY,WAAW,gBACxBZ,aAAae,QAAQ,eAAgBmmE,EAAgB98D,MACrDpK,aAAaY,WAAW,uBACxBZ,aAAae,QAAQ,sBAAuBmmE,EAAgB78D,aAC5DrK,aAAaY,WAAW,mBACxBZ,aAAae,QAAQ,kBAAmBmmE,EAAgBliD,gBAAgBrsB,YACxEqH,aAAaY,WAAW,oBACxBZ,aAAae,QAAQ,mBAAoBmmE,EAAgB1kD,eACzDxiB,aAAaY,WAAW,mBACxBZ,aAAae,QAAQ,kBAAmBmmE,EAAgB5kD,cACxDtiB,aAAaY,WAAW,qBACxBZ,aAAae,QAAQ,oBAAqBmmE,EAAgB1wC,mBAC1Dx2B,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAcmmE,EAAgBtyD,YACnD5U,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAYmmE,EAAgBryD,UAEjDrR,EAAQI,KAAK,CACTmB,SAFO,6BAyGwD6I,CAAYvF,KACnD,yBAAKtL,UAAU,8CACX,yBAAKA,UAAU,qCAAoC,yBAAKkH,IAAKoE,EAAI6c,UAAWlQ,MAAM,OAAO9Q,IAAI,MAC7F,wBAAInH,UAAU,QAAQsL,EAAI+B,MAAU,0BAAMrN,UAAU,gCAAgCsL,EAAIma,cAApD,MAA0Ena,EAAIia,cAClH,0BAAMvlB,UAAU,WAAhB,kBAAqCsL,EAAI8G,cACzC,0BAAMpS,UAAU,WAAhB,mCAAyCsL,EAAIuM,WAAW0lC,WAAW,IAAK,MACxE,0BAAMv9C,UAAU,WAAhB,2CAA8CsL,EAAIwM,SAASylC,WAAW,IAAK,MAC3E,0BAAMv9C,UAAU,WAAhB,kDAA8CsL,EAAI2c,iBAClD,0BAAMjoB,UAAU,gBAAhB,mDAAsDsL,EAAImuB,kBAAkB8jB,WAAW,IAAK,MAC5F,yBACIv9C,UAAU,wCACN,6BAAK,uBAAGA,UAAU,qBAAuB,0BAAMA,UAAU,UAC7D,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,YAAW,yBAAKA,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,mCAAmCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,QAAa,0BAAMjY,UAAU,QAC1TsL,EAAI0lC,gCASzC,yBAAKhxC,UAAU,8CACX,6BACI,wBAAIA,UAAU,cACV,wBAAIA,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,WAAW1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBACtE,0BAAM43C,cAAY,QAAlB,UAIJxjB,MAAMC,KAAKD,MAAOygB,GAAY3kC,QAAQtK,KAAI,SAAC3B,EAAK8B,GAC5C,OACI,wBAAIpN,UAAU,aAAY,uBAAGA,UAAU,YAAYsM,KAAK,IAAIrF,QAAS,SAAC7I,GAvH1G,IAA0B8gD,EAwHc9gD,EAAEiJ,iBAxHhB63C,EAyH+B5zC,EAxHrDzP,QAAQC,IAAIojD,GAERT,EADAS,IAAUhD,EACC+tB,EAAiB5hB,gBAAgBvmC,MAAY,GAANo9B,GAGvC+qB,EAAiB5hB,gBAAgBvmC,MAAY,GAANo9B,EAAe,GAANA,EAAW,OAmHZ5zC,EAAM,OAIhD,wBAAItL,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,OAAO1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBAClE,0BAAM43C,cAAY,QAAlB,gBCFrBorB,OA1Kf,SAA+B5rE,GAC3B,IAAMwrE,EAAyCriE,aAAY,SAACC,GAAD,OAAuBA,EAAMoiE,oBADxB,EAE9BvrE,mBAAS,GAFqB,mBAEzDw9C,EAFyD,KAE9CC,EAF8C,OAGlCz9C,mBAA4B,IAHM,mBAGzD05B,EAHyD,KAGhDqmB,EAHgD,KAK1Dh4C,EAAUC,cAahBiF,qBAAU,WACN,IAAIwL,GAAK8yD,EAAiBxhB,YAAY3oD,OAASmqE,EAAiBxhB,YAAY3oD,OAAS,IAAK,GAEtF2+C,EADM,IAANtnC,EACW8yD,EAAiBxhB,YAGjBwhB,EAAiBxhB,YAAY3mC,MAAM,EAAE,KAGnDq6B,EAAchlC,EAAE,KAClB,CAAC8yD,EAAiBxhB,cAErB5sD,QAAQC,IAAKogD,GA9BmD,MA0CpCx9C,mBAAS,KA1C2B,mBA0CzDkgB,EA1CyD,KA0CjD8/B,EA1CiD,KA6ChE,SAASwrB,EAAa9rE,GAClBsgD,EAAUtgD,EAAEqB,OAAOJ,OASvB,OAHAxD,QAAQC,IAAIs8B,GAIJ,kBAAC,WAAD,KACA,yBAAKp4B,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,sEACX,wBAAIA,UAAU,QAAd,SAAyBo4B,EAAQxZ,QAAO,SAACva,GACrC,MAAoB,KAAhB5F,EAAMY,MACCgF,EAEqB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACtKtiB,EAEJ,QACRvE,OARH,sBASA,yBAAKE,UAAU,cACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,QAAhB,kBACA,4BAAQqN,KAAK,OAAOlO,GAAG,OACnBE,MAAOuf,EACPrf,SAAU2qE,GAEV,4BAAQ7qE,MAAM,IAAd,0BACA,4BAAQA,MAAM,KAAd,iBACA,4BAAQA,MAAM,KAAd,sBAEJ,4BAAQgO,KAAK,OAAOlO,GAAG,OAAOa,UAAU,OACpCX,MAAOuf,EACPrf,SAAU2qE,GAEV,4BAAQ7qE,MAAM,IAAd,8BACA,4BAAQA,MAAM,KAAd,iBACA,4BAAQA,MAAM,KAAd,oBAEJ,4BAAQgO,KAAK,OAAOlO,GAAG,OAAOa,UAAU,OACpCX,MAAOuf,EACPrf,SAAU2qE,GAEV,4BAAQ7qE,MAAM,IAAd,aACA,4BAAQA,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,aAEJ,4BAAQW,UAAU,0CAA0CV,KAAK,SAAS2H,QAAS,cAAnF,eAAoH,uBAAGjH,UAAU,sBAKrJ,yBAAKA,UAAU,YAEPo4B,EAAQxZ,QAAO,SAACva,GACZ,MAAoB,KAAhB5F,EAAMY,MACCgF,EAEqB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACtKtiB,EAEJ,QACR4I,KAAI,SAAC3B,EAAK4B,GACT,YAAYmO,IAAR/P,EACO,KAGP,yBAAKtL,UAAU,WAAWiH,QAAS,WA9G3C,IAAC0S,IA8G8DrO,EA5G/ErI,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAc2V,EAAQxa,GAAGvD,YAC9CqH,aAAaY,WAAW,gBACxBZ,aAAae,QAAQ,eAAgB2V,EAAQtM,MAC7C5G,EAAQI,KAAK,CACTmB,SANO,4BA8GiB,yBAAKhI,UAAU,8CACX,yBAAKA,UAAU,qCAAoC,yBAAKkH,IAAKoE,EAAI6c,UAAWlQ,MAAM,OAAO9Q,IAAI,MAC7F,wBAAInH,UAAU,QAAQsL,EAAI+B,MAAU,0BAAMrN,UAAU,gCAAgCsL,EAAIma,cAApD,MAA0Ena,EAAIia,cAClH,0BAAMvlB,UAAU,WAAhB,kBAAqCsL,EAAI8G,cACzC,0BAAMpS,UAAU,WAAhB,mCAAyCsL,EAAIuM,WAAW0lC,WAAW,IAAK,MACxE,0BAAMv9C,UAAU,WAAhB,2CAA8CsL,EAAIwM,SAASylC,WAAW,IAAK,MAC3E,0BAAMv9C,UAAU,WAAhB,kDAA8CsL,EAAI2c,iBAClD,0BAAMjoB,UAAU,gBAAhB,mDAAsDsL,EAAImuB,kBAAkB8jB,WAAW,IAAK,MAC5F,yBACIv9C,UAAU,wCACN,6BAAK,uBAAGA,UAAU,qBAAuB,0BAAMA,UAAU,UAC7D,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,YAAW,yBAAKA,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,mCAAmCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,QAAa,0BAAMjY,UAAU,QAC1TsL,EAAI0lC,gCASzC,yBAAKhxC,UAAU,8CACX,6BACI,wBAAIA,UAAU,cACV,wBAAIA,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,WAAW1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBACtE,0BAAM43C,cAAY,QAAlB,UAIJxjB,MAAMC,KAAKD,MAAOygB,GAAY3kC,QAAQtK,KAAI,SAAC3B,EAAK8B,GAC5C,OACI,wBAAIpN,UAAU,aAAY,uBAAGA,UAAU,YAAYsM,KAAK,IAAIrF,QAAS,SAAC7I,GAvH1G,IAA0B8gD,EAwHU9gD,EAAEiJ,iBAxHZ63C,EAyH2B5zC,EAxHjDzP,QAAQC,IAAIojD,GAERT,EADAS,IAAUhD,EACC+tB,EAAiBxhB,YAAY3mC,MAAY,GAANo9B,GAGnC+qB,EAAiBxhB,YAAY3mC,MAAY,GAANo9B,EAAe,GAANA,EAAW,OAmHZ5zC,EAAM,OAI5C,wBAAItL,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,OAAO1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBAClE,0BAAM43C,cAAY,QAAlB,gBCkErBqrB,GAjOiB,WAAO,IAAD,EACF5rE,oBAAS,GADP,mBAC3B+0B,EAD2B,KACjBC,EADiB,OAEFh1B,oBAAS,GAFP,mBAE3Bi1B,EAF2B,KAEjBC,EAFiB,OAGFl1B,oBAAS,GAHP,mBAG3Bm1B,EAH2B,KAGjBC,EAHiB,KAI5B3wB,EAA0BqD,cAC1B2jE,EAAwCviE,aAAY,SAACC,GAAD,OAAuBA,EAAMoiE,oBACjF7sE,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzEs3D,EAAgCJ,EAAgBzhB,qBAAqB5oD,OACrEqxC,EAAgCg5B,EAAgB1hB,YAAY3oD,OAC5DopD,EAAoCihB,EAAgB9hB,gBAAgBvoD,OACtEkM,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAbyB,IAgB1BoO,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAak+D,GAA0B3mE,EAAUhE,OAG1D,CAACgE,EAAUhE,EAAIwc,EAAc3Y,IAEhC2I,qBAAU,WACNxI,EAASmQ,GAAkB,+BAAmB,OAC/C,CAAClW,EAAK+V,KAAMhQ,IApDmB,MAsDEzE,mBAAS,IAtDX,mBAsD3B4tB,EAtD2B,KAsDfC,EAtDe,KAwDlC,OACInS,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KAIL,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,yBAAe6I,KAAI,UAAK62D,GAAyB3/D,KAAK,OAAO6I,MAAM,YAClF,kBAAC,GAAD,CAAS5I,MAAM,yBAAe6I,KAAI,UAAKw1C,GAA6Bt+C,KAAK,OAAO6I,MAAM,YACtF,kBAAC,GAAD,CAAS5I,MAAM,8BAAc6I,KAAI,UAAKy9B,GAAyBvmC,KAAK,OAAO6I,MAAM,aAUrF,yBAAKzT,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,2BAAOV,KAAK,OAAOH,GAAG,QAAQa,UAAU,eAAeE,YAAY,mBAAWX,SAAU,SAACC,GACrF+sB,EAAc/sB,EAAMC,OAAOJ,OAC3BxD,QAAQC,IAAIwwB,OAGpB,4BAAQhtB,KAAK,SAASU,UAAU,mBAC5B,uBAAGA,UAAU,sBAM7B,yBAAKA,UAAU,OACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,WAAW8H,QAAS,YACvC,IAAbwsB,IACAC,GAAY,GACZE,GAAY,GACZE,GAAY,KAEjBvsB,MAAO,CACNC,MAAOisB,EAAW,UAAY,YAPlC,wCASA,yBAAKlsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBwJ,EAAW,UAAY,cAGhD,yBAAKzzB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACxC,IAAb0sB,IACAC,GAAY,GACZF,GAAY,GACZI,GAAY,KAGhBvsB,MAAO,CACHC,MAAOmsB,EAAW,UAAY,YARtC,wCAUA,yBAAKpsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiB0J,EAAW,UAAY,cAIhD,yBAAK3zB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACxC,IAAb4sB,IACAC,GAAY,GACZJ,GAAY,GACZE,GAAY,KAGhBrsB,MAAO,CACHC,MAAOqsB,EAAW,UAAY,YARtC,6CAUA,yBAAKtsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiB4J,EAAW,UAAY,gBAO3B,IAAbF,EAEI,kBAAC,WAAD,KACI,yBAAK3zB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,+BAEJ,yBAAKa,UAAU,aACX,kBAAC,GAAD,YAQN,IAAbyzB,EAED,kBAAC,WAAD,KACI,yBAAKzzB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,+BAEJ,yBAAKa,UAAU,aACX,kBAAC,GAAD,CAA8BX,MAAOitB,UAU3C,IAAbuH,EAED,kBAAC,WAAD,KACI,yBAAK7zB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,+BAEJ,yBAAKa,UAAU,aACX,kBAAC,GAAD,CAAuBX,MAAOitB,cAVrD,IC9Edk+C,GA1GkB,WAC7B,IAAMrnE,EAA0BqD,cAC1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzEmI,EAAiDxT,aAAY,SAACC,GAAD,OAAuBA,EAAMuT,yBAC5FpP,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAP0B,IAU3BoO,EAAsBC,+BAAtBD,kBAGJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAauzD,GAAwBh8D,EAAUhE,OAGxD,CAACgE,EAAUwY,EAAc3Y,EAAe7D,IAE3C,IAAI4E,EAAiB,GAoBrB,OAlBFqX,EAAsBA,sBAAsBnO,KAAI,SAAC3B,EAAK4B,GACpD,YAAYmO,IAAR/P,GAA6B,OAARA,EAChBvH,EAAK8C,KAAK,CACfyU,GAAIpO,EACJqO,aAA4BF,IAAnB/P,EAAIsM,YAA+C,OAAnBtM,EAAIsM,WAAsBtM,EAAIsM,WAAa,GACpF4D,UAAW,IAAIhgB,KAAK8P,EAAIuM,YACxB4D,QAAS,IAAIjgB,KAAK8P,EAAIwM,UACtB4D,UAAU,IAGP,KAGP/P,qBAAU,WACNxI,EAASqkB,MACTrkB,EAASmQ,GAAkB,8BAAkB,OAC9C,CAAClW,EAAK+V,KAAMhQ,IAGXiX,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACH,yBAAKxH,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,aACf,kBAAC,KAAD,CAAmBgY,OAAO,QAAQsE,aAAc,IAAI9gB,KAAQ+gB,cAAe,CACjFC,WAAYzY,EAAM0Y,OAAQ,CACxBtd,GAAI,KACJ+W,QAAS,CAAE7I,KAAM,WACjBqP,SAAU,CAAErP,KAAM,YAClBsP,UAAW,CAAEtP,KAAM,aACnBuP,QAAS,CAAEvP,KAAM,cAInB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAeiI,OAAO,WAAWuH,UAAU,QAAQC,QAAQ,UAC3D,kBAAC,KAAD,CAAexH,OAAO,OAAOuH,UAAU,QAAQC,QAAQ,UACvD,kBAAC,KAAD,CAAexH,OAAO,QAAQyH,aAAa,KAE7C,kBAAC,KAAD,CAAQC,SAAU,CAACC,KAAKC,KAAMC,KAAUC,KAAOC,SAhBzC,UC+DT8pD,GA/JgB,WAC3B,IAAMhkE,EAA0BqD,cAC1Bg4C,EAAsC52C,aAAY,SAACC,GAAD,OAAuBA,EAAMu/D,kBAC/EhqE,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzEo0D,EAA+C7oB,EAAgBsoB,iBAAiBhnE,OAClFkM,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAGTnQ,QAAQC,IAAI0iD,GAXqB,IAazBpkC,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAag7D,GAAgBzjE,EAAUhE,OAGhD,CAACgE,EAAUhE,EAAIwc,EAAc3Y,IAEhC2I,qBAAU,WACNxI,EAASmQ,GAAkB,mBAAY,OACxC,CAAClW,EAAK+V,KAAMhQ,IAjDkB,MAmDHzE,oBAAS,GAnDN,mBAmD1BoqB,EAnD0B,KAmDjBC,EAnDiB,KAoDjC,OACI3O,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KAIH,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,kCAAa6I,KAAI,UAAK2zD,GAAwCz8D,KAAK,OAAO6I,MAAM,aAUnG,yBAAKzT,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,2BAAOV,KAAK,SAASH,GAAG,QAAQa,UAAU,eAAeE,YAAY,sBAEzE,4BAAQZ,KAAK,SAASU,UAAU,mBAC5B,uBAAGA,UAAU,sBAM7B,yBAAKA,UAAU,OACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,WAAW8H,QAAS,YACxC,IAAZ6hB,GACAC,GAAW,IAEhBxhB,MAAO,CACNC,MAAOshB,EAAU,UAAY,YALjC,kBAOA,yBAAKvhB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBnB,EAAU,UAAY,cAG/C,yBAAK9oB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACzC,IAAZ6hB,GACAC,GAAW,IAGfxhB,MAAO,CACHC,MAAOshB,EAAU,UAAY,YANrC,mCAQA,yBAAKvhB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBnB,EAAU,UAAY,eAUnC,kBAAC,WAAD,KACI,yBAAK9oB,UAAU,WCxIxC,SAASyqE,GAAuBtnE,EAAeunE,GAClD,IAAItmE,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAOE,MAAM,GAAD,OACGC,+BADH,mCAC2DqnE,GAAY,CACnErtE,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASsnE,GAAuBtnE,EAAUunE,OAUrDpnE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAAS4T,MAEThT,EAAKhG,KAAKmZ,UAAUjK,KAAI,SAAC3B,EAAU4B,GAC3B,IAAIuvC,EAAIrlC,OAAOC,OAAO/L,GAClB8zD,EAAOhoD,OAAOG,KAAKjM,GAEvB,OADAzP,QAAQC,IAAIsjE,GACL3iB,EAAExvC,KAAI,SAACwK,GACV,OAAOL,OAAOC,OAAOI,GAAOxK,KAAI,SAACyK,GAE7B,IAAI2nD,EAAMjoD,OAAOC,OAAOK,GACpB4nD,EAAMloD,OAAOG,KAAKG,GAGtB,OAFA7b,QAAQC,IAAIwjE,GACZzjE,QAAQC,IAAIujE,GACLA,EAAIpyD,KAAI,SAAC0K,GACZ,OAAOA,EAAM1K,KAAI,SAACsyD,GAEN,GADR1jE,QAAQC,IAAIyjE,GACAA,EAAMz/D,OAAS,EAAE,CACjB,IAAIyN,EAA0B,CAC1BqK,WAAYwnD,EAAK,GACjBvnD,WAAY0nD,EAAM,GAClBznD,SAAUynD,EAAM,IAEpBp8D,EAAS6T,GAAqBzJ,IAElC,OAAOgyD,oBAQ1Cp7D,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YC1C5B,IA+Ge6uE,GA/GmB,WAC9B,IAAMxnE,EAA0BqD,cAC1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzEmI,EAAiDxT,aAAY,SAACC,GAAD,OAAuBA,EAAMuT,yBAC5FpP,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAGTnQ,QAAQC,IAAIsf,EAAsBA,uBAVE,IAY5BhB,EAAsBC,+BAAtBD,kBAGJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAa6+D,GAAuBtnE,EAAUhE,OAGvD,CAACgE,EAAUwY,EAAc3Y,EAAe7D,IAE3C,IAAI4E,EAAiB,GAsBrB,OApBIqX,EAAsBA,sBAAsBtb,OAAS,IAA2B,IAAtBsa,GAC1DgB,EAAsBA,sBAAsBnO,KAAI,SAAC3B,EAAK4B,GAClD,YAAYmO,IAAR/P,GAA6B,OAARA,EACdvH,EAAK8C,KAAK,CACbyU,GAAIpO,EACJqO,aAA6BF,IAAnB/P,EAAIsM,YAA+C,OAAnBtM,EAAIsM,WAAuBtM,EAAIsM,WAAa,GACtF4D,UAAW,IAAIhgB,KAAK8P,EAAIuM,YACxB4D,QAAS,IAAIjgB,KAAK8P,EAAIwM,UACtB4D,UAAU,IAGX,KAIf/P,qBAAU,WACNxI,EAASqkB,MACTrkB,EAASmQ,GAAkB,8BAAkB,OAC9C,CAAClW,EAAK+V,KAAMhQ,IAGXiX,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KACL,yBAAKxH,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,aACX,kBAAC,KAAD,CAAmBgY,OAAO,QAAQsE,aAAc,IAAI9gB,KAAQ+gB,cAAe,CACvEC,WAAYzY,EAAM0Y,OAAQ,CACtBtd,GAAI,KACJ+W,QAAS,CAAE7I,KAAM,WACjBqP,SAAU,CAAErP,KAAM,YAClBsP,UAAW,CAAEtP,KAAM,aACnBuP,QAAS,CAAEvP,KAAM,cAIrB,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAeiI,OAAO,WAAWuH,UAAU,QAAQC,QAAQ,UAC3D,kBAAC,KAAD,CAAexH,OAAO,OAAOuH,UAAU,QAAQC,QAAQ,UACvD,kBAAC,KAAD,CAAexH,OAAO,QAAQyH,aAAa,KAE/C,kBAAC,KAAD,CAAQC,SAAU,CAACC,KAAKC,KAAMC,KAAUC,KAAOC,eClG5E,SAASutD,GAA2BznE,EAAehE,GACtD,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,4BACmDlE,GAAM,CACtD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASynE,GAA2BznE,EAAUhE,OAUzDmE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASsmE,MACTtmE,EAASymE,MACTzmE,EAASmmE,MACTnmE,EAASgmE,MACTttE,QAAQC,IAAIiI,GACZA,EAAKhG,KAAKsqD,gBAAgBp7C,KAAI,SAAC3B,EAAU4B,GACrC,IAAIyM,EAA0B,CAC1Bxa,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrB6oB,gCAAiCxlC,EAAIwlC,gCACrCC,yBAA0BzlC,EAAIylC,yBAC9BC,uBAAwB1lC,EAAI0lC,uBAC5BvX,kBAAmBnuB,EAAImuB,kBACvBhU,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClB4C,UAAW7c,EAAI6c,UACftQ,WAAYvM,EAAIuM,WAChBC,SAAUxM,EAAIwM,SACdsQ,WAAY9c,EAAI8c,WAChBK,WAAYnd,EAAImd,WAChBH,YAAahd,EAAIgd,YACjBnW,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClBiW,WAAY/c,EAAI+c,WAChBK,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAGrB,OADA9sB,QAAQC,IAAI6d,GAEDxW,EADG,IAAV+J,EACgBg8D,GAA6BvvD,GAG7ByvD,GAAyBzvD,OAIjD5V,EAAKhG,KAAKgsE,YAAY98D,KAAI,SAAC3B,EAAU4B,GACjC,IAAIyM,EAA0B,CAC1Bxa,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrB6oB,gCAAiCxlC,EAAIwlC,gCACrCC,yBAA0BzlC,EAAIylC,yBAC9BC,uBAAwB1lC,EAAI0lC,uBAC5BvX,kBAAmBnuB,EAAImuB,kBACvBhU,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClB4C,UAAW7c,EAAI6c,UACftQ,WAAYvM,EAAIuM,WAChBC,SAAUxM,EAAIwM,SACdsQ,WAAY9c,EAAI8c,WAChBK,WAAYnd,EAAImd,WAChBH,YAAahd,EAAIgd,YACjBnW,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClBiW,WAAY/c,EAAI+c,WAChBK,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAGrB,OADA9sB,QAAQC,IAAI6d,GAEDxW,EADG,IAAV+J,EACgBm8D,GAAyB1vD,GAGzB4vD,GAAqB5vD,OAK7C5V,EAAKhG,KAAK0qD,YAAYx7C,KAAI,SAAC3B,EAAU4B,GACjC,IAAIyM,EAA0B,CAC1Bxa,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrB6oB,gCAAiCxlC,EAAIwlC,gCACrCC,yBAA0BzlC,EAAIylC,yBAC9BC,uBAAwB1lC,EAAI0lC,uBAC5BvX,kBAAmBnuB,EAAImuB,kBACvBhU,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClB4C,UAAW7c,EAAI6c,UACftQ,WAAYvM,EAAIuM,WAChBC,SAAUxM,EAAIwM,SACdsQ,WAAY9c,EAAI8c,WAChBK,WAAYnd,EAAImd,WAChBH,YAAahd,EAAIgd,YACjBnW,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClBiW,WAAY/c,EAAI+c,WAChBK,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAGrB,OADA9sB,QAAQC,IAAI6d,GAEDxW,EADG,IAAV+J,EACgBs8D,GAAyB7vD,GAGzB+vD,GAAqB/vD,OAK7C5V,EAAKhG,KAAK2qD,qBAAqBz7C,KAAI,SAAC3B,EAAU4B,GAC1C,IAAIyM,EAA0B,CAC1Bxa,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrB6oB,gCAAiCxlC,EAAIwlC,gCACrCC,yBAA0BzlC,EAAIylC,yBAC9BC,uBAAwB1lC,EAAI0lC,uBAC5BvX,kBAAmBnuB,EAAImuB,kBACvBhU,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClB4C,UAAW7c,EAAI6c,UACftQ,WAAYvM,EAAIuM,WAChBC,SAAUxM,EAAIwM,SACdsQ,WAAY9c,EAAI8c,WAChBK,WAAYnd,EAAImd,WAChBH,YAAahd,EAAIgd,YACjBnW,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClBiW,WAAY/c,EAAI+c,WAChBK,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAGrB,OADA9sB,QAAQC,IAAI6d,GAEDxW,EADG,IAAV+J,EACgBy8D,GAAgChwD,GAGhCkwD,GAA4BlwD,UAIvDxV,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCJb+uE,OAvLf,SAAkCpsE,GAC9B,IAAMwrE,EAAyCriE,aAAY,SAACC,GAAD,OAAuBA,EAAMoiE,oBADrB,EAEjCvrE,mBAAS,GAFwB,mBAE5Dw9C,EAF4D,KAEjDC,EAFiD,OAGrCz9C,mBAA4B,IAHS,mBAG5D05B,EAH4D,KAGnDqmB,EAHmD,KAK7Dh4C,EAAUC,cA0BhBiF,qBAAU,WACN,IAAIwL,GAAK8yD,EAAiB5hB,gBAAgBvoD,OAASmqE,EAAiB5hB,gBAAgBvoD,OAAS,IAAK,GAE9F2+C,EADM,IAANtnC,EACW8yD,EAAiB5hB,gBAGjB4hB,EAAiB5hB,gBAAgBvmC,MAAM,EAAE,KAGvDq6B,EAAchlC,EAAE,KAClB,CAAC8yD,EAAiB5hB,kBAErBxsD,QAAQC,IAAKogD,GA3CsD,MAuDvCx9C,mBAAS,KAvD8B,mBAuD5DkgB,EAvD4D,KAuDpD8/B,EAvDoD,KA0DnE,SAASwrB,EAAa9rE,GAClBsgD,EAAUtgD,EAAEqB,OAAOJ,OASvB,OAHAxD,QAAQC,IAAIs8B,GAIR,kBAAC,WAAD,KACI,yBAAKp4B,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,sEACX,wBAAIA,UAAU,QAAd,SAAyBo4B,EAAQxZ,QAAO,SAACva,GACrC,MAAoB,KAAhB5F,EAAMY,MACCgF,EAEqB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACtKtiB,EAEJ,QACRvE,OARH,sBASA,yBAAKE,UAAU,cACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,QAAhB,kBACA,4BAAQqN,KAAK,OAAOlO,GAAG,OACnBE,MAAOuf,EACPrf,SAAU2qE,GAEV,4BAAQ7qE,MAAM,IAAd,0BACA,4BAAQA,MAAM,KAAd,iBACA,4BAAQA,MAAM,KAAd,sBAEJ,4BAAQgO,KAAK,OAAOlO,GAAG,OAAOa,UAAU,OACpCX,MAAOuf,EACPrf,SAAU2qE,GAEV,4BAAQ7qE,MAAM,IAAd,8BACA,4BAAQA,MAAM,KAAd,iBACA,4BAAQA,MAAM,KAAd,oBAEJ,4BAAQgO,KAAK,OAAOlO,GAAG,OAAOa,UAAU,OACpCX,MAAOuf,EACPrf,SAAU2qE,GAEV,4BAAQ7qE,MAAM,IAAd,aACA,4BAAQA,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,aAEJ,4BAAQW,UAAU,0CAA0CV,KAAK,SAAS2H,QAAS,cAAnF,eAAoH,uBAAGjH,UAAU,sBAKrJ,yBAAKA,UAAU,YAEPo4B,EAAQxZ,QAAO,SAACva,GACZ,MAAoB,KAAhB5F,EAAMY,MACCgF,EAEqB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACtKtiB,EAEJ,QACR4I,KAAI,SAAC3B,EAAK4B,GACT,YAAYmO,IAAR/P,EACO,KAGP,yBAAKtL,UAAU,WAAWiH,QAAS,YA5H3C,SAACkjE,GACjBlnE,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAcmmE,EAAgBhrE,GAAGvD,YACtDqH,aAAaY,WAAW,gBACxBZ,aAAae,QAAQ,eAAgBmmE,EAAgB98D,MACrDpK,aAAaY,WAAW,uBACxBZ,aAAae,QAAQ,sBAAuBmmE,EAAgB78D,aAC5DrK,aAAaY,WAAW,mBACxBZ,aAAae,QAAQ,kBAAmBmmE,EAAgBliD,gBAAgBrsB,YACxEqH,aAAaY,WAAW,oBACxBZ,aAAae,QAAQ,mBAAoBmmE,EAAgB1kD,eACzDxiB,aAAaY,WAAW,mBACxBZ,aAAae,QAAQ,kBAAmBmmE,EAAgB5kD,cACxDtiB,aAAaY,WAAW,qBACxBZ,aAAae,QAAQ,oBAAqBmmE,EAAgB1wC,mBAC1Dx2B,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAcmmE,EAAgBtyD,YACnD5U,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAYmmE,EAAgBryD,UAEjDrR,EAAQI,KAAK,CACTmB,SAFO,6BAyGwD6I,CAAYvF,KACnD,yBAAKtL,UAAU,8CACX,yBAAKA,UAAU,qCAAoC,yBAAKkH,IAAKoE,EAAI6c,UAAWlQ,MAAM,OAAO9Q,IAAI,MAC7F,wBAAInH,UAAU,QAAQsL,EAAI+B,MAAU,0BAAMrN,UAAU,gCAAgCsL,EAAIma,cAApD,MAA0Ena,EAAIia,cAClH,0BAAMvlB,UAAU,WAAhB,kBAAqCsL,EAAI8G,cACzC,0BAAMpS,UAAU,WAAhB,mCAAyCsL,EAAIuM,WAAW0lC,WAAW,IAAK,MACxE,0BAAMv9C,UAAU,WAAhB,2CAA8CsL,EAAIwM,SAASylC,WAAW,IAAK,MAC3E,0BAAMv9C,UAAU,WAAhB,kDAA8CsL,EAAI2c,iBAClD,0BAAMjoB,UAAU,gBAAhB,mDAAsDsL,EAAImuB,kBAAkB8jB,WAAW,IAAK,MAC5F,yBACIv9C,UAAU,wCACN,6BAAK,uBAAGA,UAAU,qBAAuB,0BAAMA,UAAU,UAC7D,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,YAAW,yBAAKA,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,mCAAmCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,QAAa,0BAAMjY,UAAU,QAC1TsL,EAAI0lC,gCASzC,yBAAKhxC,UAAU,8CACX,6BACI,wBAAIA,UAAU,cACV,wBAAIA,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,WAAW1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBACtE,0BAAM43C,cAAY,QAAlB,UAIJxjB,MAAMC,KAAKD,MAAOygB,GAAY3kC,QAAQtK,KAAI,SAAC3B,EAAK8B,GAC5C,OACI,wBAAIpN,UAAU,aAAY,uBAAGA,UAAU,YAAYsM,KAAK,IAAIrF,QAAS,SAAC7I,GAvH1G,IAA0B8gD,EAwHc9gD,EAAEiJ,iBAxHhB63C,EAyH+B5zC,EAxHrDzP,QAAQC,IAAIojD,GAERT,EADAS,IAAUhD,EACC+tB,EAAiB5hB,gBAAgBvmC,MAAY,GAANo9B,GAGvC+qB,EAAiB5hB,gBAAgBvmC,MAAY,GAANo9B,EAAe,GAANA,EAAW,OAmHZ5zC,EAAM,OAIhD,wBAAItL,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,OAAO1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBAClE,0BAAM43C,cAAY,QAAlB,gBCqDrB6rB,GAjOkB,WAAO,IAAD,EACHpsE,oBAAS,GADN,mBAC5B+0B,EAD4B,KAClBC,EADkB,OAEHh1B,oBAAS,GAFN,mBAE5Bi1B,EAF4B,KAElBC,EAFkB,OAGHl1B,oBAAS,GAHN,mBAG5Bm1B,EAH4B,KAGlBC,EAHkB,KAI7B3wB,EAA0BqD,cAC1B2jE,EAAwCviE,aAAY,SAACC,GAAD,OAAuBA,EAAMoiE,oBACjF7sE,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzEs3D,EAAgCJ,EAAgBzhB,qBAAqB5oD,OACrEqxC,EAAgCg5B,EAAgB1hB,YAAY3oD,OAC5DopD,EAAoCihB,EAAgB9hB,gBAAgBvoD,OACtEkM,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAb0B,IAgB3BoO,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAag/D,GAA2BznE,EAAUhE,OAG3D,CAACgE,EAAUhE,EAAIwc,EAAc3Y,IAEhC2I,qBAAU,WACNxI,EAASmQ,GAAkB,+BAAmB,OAC/C,CAAClW,EAAK+V,KAAMhQ,IApDoB,MAsDCzE,mBAAS,IAtDV,mBAsD5B4tB,EAtD4B,KAsDhBC,EAtDgB,KAwDnC,OACInS,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KAIL,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,yBAAe6I,KAAI,UAAK62D,GAAyB3/D,KAAK,OAAO6I,MAAM,YAClF,kBAAC,GAAD,CAAS5I,MAAM,yBAAe6I,KAAI,UAAKw1C,GAA6Bt+C,KAAK,OAAO6I,MAAM,YACtF,kBAAC,GAAD,CAAS5I,MAAM,8BAAc6I,KAAI,UAAKy9B,GAAyBvmC,KAAK,OAAO6I,MAAM,aAUrG,yBAAKzT,UAAU,MAAMb,GAAG,cACxB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,2BAAOV,KAAK,OAAOH,GAAG,QAAQa,UAAU,eAAeE,YAAY,mBAAWX,SAAU,SAACC,GACrF+sB,EAAc/sB,EAAMC,OAAOJ,OAC3BxD,QAAQC,IAAIwwB,OAGpB,4BAAQhtB,KAAK,SAASU,UAAU,mBAC5B,uBAAGA,UAAU,sBAMT,yBAAKA,UAAU,OACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,WAAW8H,QAAS,YACvC,IAAbwsB,IACAC,GAAY,GACZE,GAAY,GACZE,GAAY,KAEjBvsB,MAAO,CACNC,MAAOisB,EAAW,UAAY,YAPlC,wCASA,yBAAKlsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBwJ,EAAW,UAAY,cAGhD,yBAAKzzB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACxC,IAAb0sB,IACAC,GAAY,GACZF,GAAY,GACZI,GAAY,KAGhBvsB,MAAO,CACHC,MAAOmsB,EAAW,UAAY,YARtC,wCAUA,yBAAKpsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiB0J,EAAW,UAAY,cAIhD,yBAAK3zB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACxC,IAAb4sB,IACAC,GAAY,GACZJ,GAAY,GACZE,GAAY,KAGhBrsB,MAAO,CACHC,MAAOqsB,EAAW,UAAY,YARtC,6CAUA,yBAAKtsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiB4J,EAAW,UAAY,gBAO3B,IAAbF,EAEI,kBAAC,WAAD,KACI,yBAAK3zB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,+BAEJ,yBAAKa,UAAU,aACX,kBAAC,GAAD,CAA0BX,MAAOitB,UAQvC,IAAbmH,EAED,kBAAC,WAAD,KACI,yBAAKzzB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,+BAEJ,yBAAKa,UAAU,aACX,kBAAC,GAAD,CAA8BX,MAAOitB,UAU3C,IAAbuH,EAED,kBAAC,WAAD,KACI,yBAAK7zB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,+BAEJ,yBAAKa,UAAU,aACX,kBAAC,GAAD,CAAuBX,MAAOitB,cAVrD,IClNtB,SAASy+C,GAAyB5nE,EAAehE,GACpD,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,iCACyDlE,GAAM,CAC3D9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS4nE,GAAyB5nE,EAAUhE,OAUvDmE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1Bd,aAAaY,WAAW,wBACxBZ,aAAae,QAAQ,uBAAwBD,EAAKhG,KAAK+a,WAE1D3U,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YClCrB,SAASkvE,GAA0B7nE,EAAehE,GACrD,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,kCAC0DlE,GAAM,CAC5D9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS6nE,GAA0B7nE,EAAUhE,OAUxDmE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1Bd,aAAaY,WAAW,yBACxBZ,aAAae,QAAQ,wBAAyBD,EAAKhG,KAAK4b,YAE3DxV,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCX5B,IAoIemvE,GApIe,WAC1B,IAAM9nE,EAA0BqD,cAC1B4U,EAAiDxT,aAAY,SAACC,GAAD,OAAuBA,EAAMuT,yBAC5F8vD,EAAgC,EAChCC,EAA+B,EAC/Bn/D,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAGT,IAAI0O,EAAOzX,aAAaC,QAAQ,yBACnB,OAATwX,IACAwwD,EAAwB/6D,SAASuK,IAGrC,IAAIE,EAAO3X,aAAaC,QAAQ,wBACnB,OAAT0X,IACAuwD,EAAuBh7D,SAASyK,IAGpC/e,QAAQC,IAAIsf,EAAsBA,uBArBF,IAuBxBhB,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAQbuL,wBAAao/D,GAA0B7nE,EAAUhE,IACjDyM,wBAAam/D,GAAyB5nE,EAAUhE,QAGzD,CAACgE,EAAUwY,EAAc3Y,EAAe7D,IAE3C,IAAM/B,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAE/EtH,qBAAU,WACNxI,EAASmQ,GAAkB,iBAAa,OACzC,CAAClW,EAAK+V,KAAMhQ,IAEf,IAAIY,EAAiB,GAerB,OAbAqX,EAAsBA,sBAAsBnO,KAAI,SAAC3B,EAAK4B,GAClD,YAAYmO,IAAR/P,EACOvH,EAAK8C,KAAK,CACbyU,GAAIpO,EACJqO,aAA4BF,IAAnB/P,EAAIsM,YAA+C,OAAnBtM,EAAIsM,WAAsBtM,EAAIsM,WAAa,GACpF4D,UAAW,IAAIhgB,KAAK8P,EAAIuM,YACxB4D,QAAS,IAAIjgB,KAAK8P,EAAIwM,UACtB4D,UAAU,IAGX,KAIPtB,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KAIL,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,mBAAW6I,KAAI,UAAKy3D,GAAwBvgE,KAAK,OAAO6I,MAAM,YAC7E,kBAAC,GAAD,CAAS5I,MAAM,gBAAW6I,KAAI,UAAKw3D,GAAyBtgE,KAAK,OAAO6I,MAAM,aAGlF,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,2BACA,yBAAKa,UAAU,oBACX,yBAAKA,UAAU,aACX,kBAAC,KAAD,CAAmBgY,OAAO,QAAQsE,aAAc,IAAI9gB,KAAQ+gB,cAAe,CACvEC,WAAYzY,EAAM0Y,OAAQ,CACtBtd,GAAI,KACJ+W,QAAS,CAAE7I,KAAM,WACjBqP,SAAU,CAAErP,KAAM,YAClBsP,UAAW,CAAEtP,KAAM,aACnBuP,QAAS,CAAEvP,KAAM,cAIrB,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAeiI,OAAO,MAAMuH,UAAU,QAAQC,QAAQ,WAE1D,kBAAC,KAAD,CAAQE,SAAU,CAACC,e,OCzHhD,SAASmuD,GAAoBjoE,EAAehE,GAC/C,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,4BACmDlE,GAAM,CACtD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASioE,GAAoBjoE,EAAUhE,OAUlDmE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAAS4kD,MACT5kD,EAAS+kD,MACT/kD,EAAS0kD,MACT1kD,EAASwkD,MACT9rD,QAAQC,IAAIiI,EAAKhG,KAAKsqD,iBACtBtkD,EAAKhG,KAAKsqD,gBAAgBp7C,KAAI,SAAC3B,EAAU4B,GACrC,IAAIyM,EAA0B,CAC1Bxa,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrB6oB,gCAAiCxlC,EAAIwlC,gCACrCC,yBAA0BzlC,EAAIylC,yBAC9BC,uBAAwB1lC,EAAI0lC,uBAC5BvX,kBAAmBnuB,EAAImuB,kBACvBhU,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClB4C,UAAW7c,EAAI6c,UACftQ,WAAYvM,EAAIuM,WAChBC,SAAUxM,EAAIwM,SACdsQ,WAAY9c,EAAI8c,YAGpB,OADAvsB,QAAQC,IAAI6d,GAEDxW,EADG,IAAV+J,EACgBw6C,GAA6B/tC,GAG7BiuC,GAAyBjuC,OAKjD5V,EAAKhG,KAAK0qD,YAAYx7C,KAAI,SAAC3B,EAAU4B,GACjC,IAAIyM,EAA0B,CAC1Bxa,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrB6oB,gCAAiCxlC,EAAIwlC,gCACrCC,yBAA0BzlC,EAAIylC,yBAC9BC,uBAAwB1lC,EAAI0lC,uBAC5BvX,kBAAmBnuB,EAAImuB,kBACvBhU,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClB4C,UAAW7c,EAAI6c,UACftQ,WAAYvM,EAAIuM,WAChBC,SAAUxM,EAAIwM,SACdsQ,WAAY9c,EAAI8c,YAGpB,OADAvsB,QAAQC,IAAI6d,GAEDxW,EADG,IAAV+J,EACgB46C,GAAyBnuC,GAGzBquC,GAAqBruC,OAK7C5V,EAAKhG,KAAK2qD,qBAAqBz7C,KAAI,SAAC3B,EAAU4B,GAC1C,IAAIyM,EAA0B,CAC1Bxa,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrB6oB,gCAAiCxlC,EAAIwlC,gCACrCC,yBAA0BzlC,EAAIylC,yBAC9BC,uBAAwB1lC,EAAI0lC,uBAC5BvX,kBAAmBnuB,EAAImuB,kBACvBhU,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClB4C,UAAW7c,EAAI6c,UACftQ,WAAYvM,EAAIuM,WAChBC,SAAUxM,EAAIwM,SACdsQ,WAAY9c,EAAI8c,YAGpB,OADAvsB,QAAQC,IAAI6d,GAEDxW,EADG,IAAV+J,EACgB+6C,GAAgCtuC,GAGhCwuC,GAA4BxuC,OAIpD5V,EAAKhG,KAAKgsE,YAAY98D,KAAI,SAAC3B,EAAU4B,GACjC,IAAIyM,EAA0B,CAC1Bxa,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrB6oB,gCAAiCxlC,EAAIwlC,gCACrCC,yBAA0BzlC,EAAIylC,yBAC9BC,uBAAwB1lC,EAAI0lC,uBAC5BvX,kBAAmBnuB,EAAImuB,kBACvBhU,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClB4C,UAAW7c,EAAI6c,UACftQ,WAAYvM,EAAIuM,WAChBC,SAAUxM,EAAIwM,SACdsQ,WAAY9c,EAAI8c,YAGpB,OADAvsB,QAAQC,IAAI6d,GAEDxW,EADG,IAAV+J,EACgB+6C,GAAgCtuC,GAGhCwuC,GAA4BxuC,UAIvDxV,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCjKrB,IAAM0nD,GAA0B,kBAC1BC,GAA2B,mBAC3BC,GAA6B,qBAE7BC,GAA0C,kCAC1CC,GAAyC,iCACzCC,GAAiC,yBACjCC,GAA8B,sBAG9BC,GAAyB,iBACzBC,GAA0B,kBAC1BC,GAA4B,oBAE5BC,GAAyC,iCACzCC,GAAwC,gCACxCC,GAAgC,wBAChCC,GAA6B,qBAG7B1iD,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBCGjC,SAAS6qE,GAAkBloE,EAAehE,GAC7C,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,4BACmDlE,GAAM,CACtD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASkoE,GAAkBloE,EAAUhE,OAUhDmE,MAAM,SAAAS,GACHZ,EDvBL,CACH7D,KAAMiB,GACN+qE,gBCqBkCvnE,IAC1BZ,EDNL,CAAE7D,KAAMukD,KCOH1gD,EDsBL,CAAE7D,KAAM8kD,KCrBHvoD,QAAQC,IAAIiI,EAAKhG,KAAKymD,cACtB3oD,QAAQC,IAAIiI,EAAKhG,KAAK0mD,eACtB1gD,EAAKhG,KAAKymD,aAAav3C,KAAI,SAAC3B,EAAU4B,GAClC,IAAIo+D,EAAkC,CAClCnsE,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACV60C,oBAAqB52C,EAAI42C,oBACzB/vC,WAAY7G,EAAI6G,WAChBo5D,sBAAuBjgE,EAAIigE,sBAC3BC,+BAAgClgE,EAAIkgE,+BACpCp5D,aAAc9G,EAAI8G,aAClB+M,WAAY7T,EAAI6T,WAChBkG,aAAc/Z,EAAI+Z,aAClBC,UAAWha,EAAIga,UACfqU,cAAeruB,EAAIquB,cACnBjnB,kBAAmBpH,EAAIoH,kBACvBukB,6BAA8B3rB,EAAI2rB,6BAClCD,cAAe1rB,EAAI0rB,cACnB0tB,cAAep5C,EAAIo5C,cACnB+mB,cAAengE,EAAImgE,cACnBC,sBAAuBpgE,EAAIogE,sBAC3Br5D,SAAU/G,EAAI+G,SACdoW,WAAYnd,EAAImd,WAChBF,aAAcjd,EAAIid,aAClBD,YAAahd,EAAIgd,YACjB/V,YAAajH,EAAIiH,YACjBgT,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBC,cAAena,EAAIma,eAGvB,OADA5pB,QAAQC,IAAIwvE,GAEDnoE,EADG,IAAV+J,EDfjB,SAA0Bo+D,GAC7B,MAAO,CAAEhsE,KAAM+kD,GAAoBinB,gBAAiBA,GCehB3mB,CAAiB2mB,GDRlD,SAAsBA,GACzB,MAAO,CAAEhsE,KAAMykD,GAAgBunB,gBAAiBA,GCUZ1mB,CAAa0mB,OAIrCvnE,EAAKhG,KAAK0mD,cAAcx3C,KAAI,SAAC3B,EAAU4B,GACnC,IAAIo+D,EAAkC,CAClCnsE,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACV8E,WAAY7G,EAAI6G,WAChB+vC,oBAAqB52C,EAAI42C,oBACzB9vC,aAAc9G,EAAI8G,aAClB+M,WAAY7T,EAAI6T,WAChBkG,aAAc/Z,EAAI+Z,aAClBC,UAAWha,EAAIga,UACfimD,sBAAuBjgE,EAAIigE,sBAC3B5xC,cAAeruB,EAAIquB,cACnBjnB,kBAAmBpH,EAAIoH,kBACvBukB,6BAA8B3rB,EAAI2rB,6BAClCD,cAAe1rB,EAAI0rB,cACnBw0C,+BAAgClgE,EAAIkgE,+BACpC9mB,cAAep5C,EAAIo5C,cACnB+mB,cAAengE,EAAImgE,cACnBp5D,SAAU/G,EAAI+G,SACdoW,WAAYnd,EAAImd,WAChBF,aAAcjd,EAAIid,aAClBmjD,sBAAuBpgE,EAAIogE,sBAC3BpjD,YAAahd,EAAIgd,YACjB/V,YAAajH,EAAIiH,YACjBgT,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBC,cAAena,EAAIma,eAGvB,OADA5pB,QAAQC,IAAIwvE,GAEDnoE,EADG,IAAV+J,EDjFjB,SAA4Bo+D,GAC/B,MAAO,CAAEhsE,KAAMwkD,GAAqBwnB,gBAAiBA,GCiFjBzmB,CAAmBymB,GD1EpD,SAAwBA,GAC3B,MAAO,CAAEhsE,KAAMkkD,GAAiB8nB,gBAAiBA,GC4EbxmB,CAAewmB,UAI1CnnE,OAAM,SAAAtF,GACHsE,EDjGT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UC8FMoD,CAAepD,IACxBhD,QAAQC,IAAI,YC6Ib6vE,OAhQf,SAA0BltE,GACU+H,cAAhC,IADiE,EAEnC9H,oBAAkB,GAFiB,mBAE1DoqB,EAF0D,KAI3D8iD,GAJ2D,KAIlBhkE,aAAY,SAACC,GAAD,OAAuBA,EAAM+jE,qBAClFhjB,EAAyChhD,aAAY,SAACC,GAAD,OAAuBA,EAAM+gD,oBAClFijB,EAAiEjkE,aAAY,SAACC,GAAD,OAAuBA,EAAMyvC,kCAC1Gw0B,EAA4ClkE,aAAY,SAACC,GAAD,OAAuBA,EAAMikE,sBAEvF9/D,EAAO/I,aAAaC,QAAQ,cAEnB,OAAT8I,GACamE,SAASnE,GAZuC,MAevCtN,mBAAiB,GAfsB,mBAe1DW,EAf0D,KAenDJ,EAfmD,OAgBrCP,mBAAiB,GAhBoB,6BAiBjE7C,QAAQC,IAAIgtB,GACZjtB,QAAQC,IAAIuD,GACZ,IAWM0sE,EAAyB,GAC/BH,EAAiBnnB,cAAcx3C,KAAI,SAAC3B,EAAK8B,GACrC,QAAYiO,IAAR/P,GAA6B,OAARA,EAAc,CACnC,IAAIiF,EAAgB,CAChBlD,KAAM/B,EAAI+B,KACVhO,MAAOiM,EAAInM,IAEf,OAAO4sE,EAAYllE,KAAK0J,GAE5B,OAAO,QAOX,IAAIy7D,EAA6B,GAC7BC,EAA4B,GAChCH,EAAmBA,mBAAmB7+D,KAAI,SAAC3B,EAAK8B,GAC5C,YAAYiO,IAAR/P,GAA6B,OAARA,GACrB0gE,EAAiBnlE,KAAuB,GAAlByE,EAAI4gE,aAC1BD,EAAgBplE,KAAKyE,EAAIiH,aAClBjH,GAEJ,QAGX,IAAI6gE,EAA0C,GAC1CC,EAAyC,GAC7CvwE,QAAQC,IAAI+vE,EAA6Br0B,6BACzCq0B,EAA6Br0B,4BAA4BvqC,KAAI,SAAC3B,EAAK8B,GAC/D,YAAYiO,IAAR/P,GAA6B,OAARA,GACrB6gE,EAA8BtlE,KAAKyE,EAAImsC,OACvC20B,EAA6BvlE,KAAKyE,EAAIsqC,cAC/BtqC,GAEJ,QAlEsD,MAqE/B5M,mBAAS,GArEsB,mBAqE/Cy9C,GArE+C,aAsEnCz9C,mBAA4B,IAtEO,mBAsEjD+/C,GAtEiD,WAuEjE9yC,qBAAU,WACN,IAAIwL,GAAKy0D,EAAiBpnB,aAAa1kD,OAAS8rE,EAAiBpnB,aAAa1kD,OAAS,IAAM,GAEzF2+C,EADM,IAANtnC,EACWy0D,EAAiBpnB,aAGjBonB,EAAiBpnB,aAAa1iC,MAAM,EAAG,KAGtDq6B,EAAchlC,EAAI,KACnB,CAACy0D,EAAiBpnB,eAjF4C,MA6F7B9lD,mBAAS,GA7FoB,gCA8FjCA,mBAA4B,KA9FK,mBA8FhD2tE,GA9FgD,WA+FjE1gE,qBAAU,WACN,IAAIwL,GAAKyxC,EAAiBH,YAAY3oD,OAAS8oD,EAAiBH,YAAY3oD,OAAS,IAAM,GAEvFusE,EADM,IAANl1D,EACYyxC,EAAiBH,YAGjBG,EAAiBH,YAAY3mC,MAAM,EAAG,KAGtDq6B,EAAchlC,EAAI,KACnB,CAACyxC,EAAiBH,cAWL/hD,cAAhB,IA2BM4lE,EAAQ,CACVhqC,OAFW2pC,EAGX1pC,SAAU,CACN,CACInjC,MAAO,mDACP2E,KAAMioE,EACNxpC,YAAa,oBACbvY,gBAAiB,6BAMvBsiD,EAAU,CACZjqC,OAFa8pC,EAGb7pC,SAAU,CACN,CACInjC,MAAO,qBACP2E,KAAMooE,EACN3pC,YAAa,oBACbvY,gBAAiB,6BAoB7B,OAfApuB,QAAQC,IAAIywE,GAEZ1wE,QAAQC,IAAIqwE,GAcR,kBAAC,WAAD,KACI,yBAAKnsE,UAAU,OACX,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,qDACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,iBACzC,yBAAKa,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,0CACZ,yBAAKA,UAAU,OACV,wBAAIA,UAAU,QAAd,wBAEJ,kBAAC,GAAD,CACIX,MAAOA,EACPF,GAAG,mBACHc,WAAW,oBACXV,SA9JxC,SAAqCwH,GACjC9H,EAAS8H,EAAM1H,QA8JqBO,UAAU,EACVR,MAAM,IACNnC,QAxLT,CAC3B,CACIoQ,KAAM,mBACNhO,MAAO,GAEX,CACIgO,KAAM,gBACNhO,MAAO,SAwLqBxD,QAAQC,IAAIgtB,GACZjtB,QAAQC,WAAYuD,GACK,MAArBA,EAAMzD,WAEF,oCACI,yBAAKoE,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,wBACX,kBAAC4iC,GAAD,CAAW7+B,KAAMuoE,SASf,MAArBjtE,EAAMzD,WAEP,yBAAKoE,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,wBACX,kBAAC4iC,GAAD,CAAW7+B,KAAMwoE,aANpC,UCtL9BC,OA/Cf,SAA0B/tE,GACtB,IAAM2c,EAAiDxT,aAAY,SAACC,GAAD,OAAuBA,EAAMuT,yBAG5FrX,EAAiB,GAarB,OAXAqX,EAAsBA,sBAAsBnO,KAAI,SAAC3B,EAAK4B,GAClD,OAAOnJ,EAAK8C,KAAK,CACbyU,GAAIpO,EACJqO,aAA4BF,IAAnB/P,EAAIsM,YAA+C,OAAnBtM,EAAIsM,WAAsBtM,EAAIsM,WAAa,GACpF4D,UAAW,IAAIhgB,KAAK8P,EAAIuM,YACxB4D,QAAS,IAAIjgB,KAAK8P,EAAIwM,UACtB4D,UAAU,OAMd,kBAAC,WAAD,KACI,yBAAK1b,UAAU,OACX,yBAAKA,UAAU,2CACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,qCACA,yBAAKa,UAAU,oBACX,yBAAKA,UAAU,aACX,kBAAC,KAAD,CAAmBgY,OAAO,QAAQsE,aAAc,IAAI9gB,KAAQ+gB,cAAe,CACvEC,WAAYzY,EAAM0Y,OAAQ,CACtBtd,GAAI,KACJ+W,QAAS,CAAE7I,KAAM,WACjBqP,SAAU,CAAErP,KAAM,YAClBsP,UAAW,CAAEtP,KAAM,aACnBuP,QAAS,CAAEvP,KAAM,cAIrB,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAeiI,OAAO,MAAMuH,UAAU,QAAQC,QAAQ,WAE1D,kBAAC,KAAD,CAAQE,SAAU,CAACC,eC9C5C,SAASwvD,GAAuCtpE,EAAehE,GAClE,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,kDACyElE,GAAM,CAC5E9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASspE,GAAuCtpE,EAAUhE,OAUrEmE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASs1C,MACT58C,QAAQC,IAAIiI,EAAKhG,KAAK66C,4BACtB70C,EAAKhG,KAAK66C,2BAA2B3rC,KAAI,SAAC3B,EAAU4B,GAChD,IAAIwoC,EAAyC,CACzCvjC,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClB+M,WAAY7T,EAAI6T,WAChBkG,aAAc/Z,EAAI+Z,aAClB8vB,WAAY7pC,EAAI6pC,WAChBS,aAActqC,EAAIsqC,aAClBiD,sBAAuBvtC,EAAIutC,sBAC3BC,SAAUxtC,EAAIwtC,SACdrB,MAAOnsC,EAAImsC,MACXlqC,KAAMjC,EAAIiC,MAGd,OAAOpK,EAASu1C,GAA8BhD,UAGrDvxC,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YChErB,IAAM4wE,GAAgC,wBAChCC,GAAiC,yBACjCC,GAAmC,2BAEnCC,GAAgD,wCAChDC,GAA+C,uCAC/CnrE,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBAC3BusE,GAAuC,+BACvCC,GAAoC,4BCL1C,SAASC,GAAmB9pE,EAAehE,GAC9C,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,iCACwDlE,GAAM,CAC3D9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS8pE,GAAmB9pE,EAAUhE,OAUjDmE,MAAM,SAAAS,GACHZ,EDfL,CACH7D,KAAMiB,GACN2sE,kBCakCnpE,IAC1BZ,EDEL,CAAE7D,KAAMytE,KCDHhpE,EAAKhG,KAAKovE,YAAYlgE,KAAI,SAAC3B,EAAU4B,GACjC,IAAI7I,EAAuB,CACvBihB,UAAWha,EAAIga,UACf/S,YAAajH,EAAIiH,YACjB25D,YAAa5gE,EAAI4gE,aAGrB,OAAO/oE,EDHpB,SAA4B+pE,GAC/B,MAAO,CAAE5tE,KAAMotE,GAAuBQ,kBAAmBA,GCEzBE,CAAmB/oE,UAG1CF,OAAM,SAAAtF,GACHsE,EDtBT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UCmBMoD,CAAepD,IACxBhD,QAAQC,IAAI,YC/B5B,IAiIeuxE,GAjIe,WAC1B,IAAMlqE,EAA0BqD,cADA,EAEF9H,oBAAkB,GAFhB,mBAEzBoqB,EAFyB,KAEhBC,EAFgB,KAG1B6iD,EAAyChkE,aAAY,SAACC,GAAD,OAAuBA,EAAM+jE,oBAClFhjB,EAAyChhD,aAAY,SAACC,GAAD,OAAuBA,EAAM+gD,oBAClFzL,EAA8ByuB,EAAiBpnB,aAAa1kD,OAAS8rE,EAAiBnnB,cAAc3kD,OACpGs9C,EAAoCwL,EAAiBH,YAAY3oD,OAAS8oD,EAAiBF,qBAAqB5oD,OAAS8oD,EAAiBP,gBAAgBvoD,OAC5JkM,EAAO/I,aAAaC,QAAQ,cAC5BiP,EAAqB,EACZ,OAATnG,IACAmG,EAAahC,SAASnE,IAVM,IAaxBoO,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBA0CzC,OAzCAyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAYbuL,wBAAamV,GAAY5d,EAAUgP,IACnCvG,wBAAa6+D,GAAuBtnE,EAAUgP,IAC9CvG,wBAAaw/D,GAAoBjoE,EAAUgP,IAC3CvG,wBAAay/D,GAAkBloE,EAAUgP,IACzCvG,wBAAa6gE,GAAuCtpE,EAAUgP,IAC9DvG,wBAAaqhE,GAAmB9pE,EAAUgP,QAGnD,CAAChP,EAAUwY,EAAc3Y,EAAemP,IAIvCiI,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KACL,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,mBAAW6I,KAAI,UAAKypC,GAAuBvyC,KAAK,OAAO6I,MAAM,YAC5E,kBAAC,GAAD,CAAS5I,MAAM,gBAAW6I,KAAI,UAAK0pC,GAA6BxyC,KAAK,OAAO6I,MAAM,YAGtF,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,WAAW8H,QAAS,YACxC,IAAZ6hB,GACAC,GAAW,IAEhBxhB,MAAO,CACNC,MAAOshB,EAAU,UAAY,YALjC,qBAOA,yBAAKvhB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBnB,EAAU,UAAY,cAG/C,yBAAK9oB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACzC,IAAZ6hB,GACAC,GAAW,IAGfxhB,MAAO,CACHC,MAAOshB,EAAU,UAAY,YANrC,+BAQA,yBAAKvhB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBnB,EAAU,UAAY,gBAO3B,IAAZA,EAEI,kBAAC,GAAD,MAKA,kBAAC,GAAD,Q,6BCtIzB,SAASwkD,GAAwBvpE,EAAWqJ,GAC/C,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,6CACgF,CACzEhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASmqE,GAAwBvpE,EAAMqJ,OAUlD9J,MAAM,SAAA3F,GACHsH,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,6CAA2B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,SAE7IpB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,sDAAiC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC9I1J,QAAQC,IAAI,a,+NC8FbyxE,IC3GHC,GD2GGD,GAtHf,SAAyB9uE,GACrB,IAAM0E,EAA0BqD,cAD0B,EAGxB9H,mBAAS,CACvC+uE,aAAc,CAAE5uE,MAAO,GAAIQ,MAAO,GAClCquE,OAAQ,CAAE7uE,MAAO,GAAIQ,MAAO,MAL0B,mBAGnDsH,EAHmD,KAGxCC,EAHwC,KAsBtDoF,EAAO/I,aAAaC,QAAQ,YAC5BwzB,EAAW,EACF,OAAT1qB,IACA0qB,EAAWvmB,SAASnE,IAGxB,IAAI0O,EAAOzX,aAAaC,QAAQ,cAC5BiP,EAAa,EAoCjB,SAASnL,IACL,OAAmB,OAAX6gB,QAA8BxM,IAAXwM,GACpBlhB,EAAU+mE,OAAO7uE,QAAU8H,EAAU+mE,OAAOruE,MArC1C,OAATqb,IACAvI,EAAahC,SAASuK,IA/BgC,MAsE9Bhc,mBAAS,GAtEqB,mBAsEnDmpB,EAtEmD,KAsE3C8lD,EAtE2C,KA8E1D,OACI,kBAAC,WAAD,KACI,yBAAK3tE,UAAU,iBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,uCAEJ,yBAAKA,UAAU,aACX,0BAAMoH,SA3E9B,SAAkBhJ,GACdA,EAAEiJ,iBACEL,MAGJvI,EAAMqX,SAAQ,GAiBlB,SAAkBC,GACV,IAAM3I,EAAMnI,IAAMqC,QAAQ,uFAAgD,CACtElC,SAAUH,IAAMI,SAASC,aAG7B,GAAIyQ,IAAW7B,GAA0B,CACrCrY,QAAQC,IAAIsR,GACZ,IAAI+J,EAAI,CACJo4C,WAAY74B,EACZvkB,WAAYA,EACZy7D,iBAAkBjnE,EAAU+mE,OAAOruE,MACnCwuE,YAAahmD,GAGjB1kB,EAASmqE,GAAwBn2D,EAAG/J,IAGxCjK,EAASkR,MACTlR,EAASmR,GAA0Cd,GAAwC6C,OAjC/FC,CAD4BpC,OAsEJ,yBAAKlU,UAAU,cACX,sDACA,kBAAC,UAAD,CACEiH,QAlBb,SAAC6mE,GACpBH,EAAUG,IAkBsBC,YAAalmD,EACbmmD,aAAW,EACXC,aAAc,CAAC,WAAY,MAAO,UAAW,QAAS,cAG5D,yBAAKjuE,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,eACVE,MAAOsH,EAAU+mE,OAAOruE,MACxBU,MAAM,SACNR,SA7FpC,SAA6BwH,GACzBH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,WA6F/CO,UAAU,EACVC,UAAW,IACXT,MAAM,mBACNc,YAAY,MAEpB,4BAAQF,UAAU,iBAAiBiH,QAAS,kBAnDpExI,EAAMqX,SAAQ,QACd3S,EAASmR,GAA0Cd,GAAwC6C,SAkDnE,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCA/ChCgH,IACN,WAAa,KA8CN,mBEyKjBknE,GA9QqB,WAChC,IAAM/qE,EAA0BqD,cAC1B+W,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAC7DkwC,EAA2C7lD,aAAY,SAACC,GAAD,OAAuBA,EAAM4lD,qBACpFtB,EAAoCvkD,aAAY,SAACC,GAAD,OAAuBA,EAAM6lD,kBAC7ER,EAAoEtlD,aAAY,SAACC,GAAD,OAAuBA,EAAM8lD,mCAC7GC,EAA+BH,EAAkBI,6BAA6B/tD,OAAS2tD,EAAkBK,0BAA0BhuD,OACnIiuD,EAAkCN,EAAkBhD,oBAAoB3qD,OACxEkuD,EAAkC7B,EAAc8B,aAAanuD,OAC3Dsa,EAAsBC,+BAAtBD,kBAGJQ,EAAO3X,aAAaC,QAAQ,cAC5Bic,EAAqB,EACZ,OAATvE,IACAuE,EAAahP,SAASyK,IAG1B,IAAIF,EAAOzX,aAAaC,QAAQ,cAC5BiP,EAAoB,EACX,OAATuI,IACAvI,EAAahC,SAASuK,IAG1B,IAAIsyB,EAAO/pC,aAAaC,QAAQ,YAC5BwzB,EAAmB,EACV,OAATsW,IACAtW,EAAWvmB,SAAS68B,IAExB,IAAIrxB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAWbuL,wBAAamV,GAAY5d,EAAUgP,IACnCvG,wBAAaq/C,GAAc9nD,EAAUgc,IACrCvT,wBAAa4+C,GAA2BrnD,EAAUuzB,EAAUvkB,IAC5DvG,wBAAa8gD,GAAiCvpD,EAAUuzB,EAAUvkB,IAClEvG,wBAAayhD,GAAsClqD,EAAUuzB,EAASvkB,QAG/E,CAAChP,EAAUwY,EAAc3Y,EAAemP,EAAYgN,EAAYuX,IAEnE,IAAIw3B,EAA4C,GAC5CC,EAA2C,GAC/CjB,EAA+BS,gCAAgC1gD,KAAI,SAAC3B,EAAK8B,GAGrE,OAFA8gD,EAA+BrnD,KAAKyE,EAAImsC,OACxC0W,EAA8BtnD,KAAKyE,EAAIiiD,eAChCjiD,KAIX,IACMvH,EAAO,CACTu+B,OAFW6rB,EAGX5rB,SAAU,CACN,CACInjC,MAAO,+BACP2E,KAAMmqD,EACN1rB,YAAa,oBACbvY,gBAAiB,6BAKvB0D,EAAwB/lB,aAAY,SAACC,GAAD,OAAuBA,EAAM8lB,WAEjElnB,EAAUC,cA7FsB,EAqGZhI,oBAAS,GArGG,mBAqG/BonB,EArG+B,KAqGxBC,EArGwB,KA2GtC,SAASG,EAAc7mB,GACnB0mB,GAAS,GAGb,OACI3L,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACT,kBAAC,IAAD,MAIM,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,sCAAiB6I,KAAI,UAAKk6C,GAAwBhjD,KAAK,OAAO6I,MAAM,YACnF,kBAAC,GAAD,CAAS5I,MAAM,qCAAmB6I,KAAI,UAAKq6C,GAA2BnjD,KAAK,OAAO6I,MAAM,WACxF,kBAAC,GAAD,CAAS5I,MAAM,8BAAe6I,KAAI,UAAKs6C,GAA2BpjD,KAAK,OAAO6I,MAAM,YASxF,kBAAC,KAAD,CACAxV,KAAM6nB,EACN3J,QAAS,kBAAM4J,GAAS,IACxB3J,sBAAoB,GAEpB,oCAEQ,WACI,GAAKuR,EAAQhY,oBAAsBwW,GAAyBvW,QAAa+X,EAAQC,gBAAoBD,EAAQhY,oBAAsBwW,GAAyB3M,KACxJ,OAAO,kBAAC,GAAD,CAAiB1J,QAASoQ,IAFzC,KAQR,yBAAKlmB,UAAU,OACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,8BACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,yBAAKA,UAAU,yCACX,wBAAIb,GAAG,aAAP,YAA0Boe,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAGnZ,SAAW,KAEvF,yBAAKvE,UAAU,yCACX,uBAAGb,GAAG,oBAAN,sBAAqCoe,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAG+C,IAAM,KAE7F,yBAAKzgB,UAAU,kBACX,uBAAGA,UAAS,qBAAwBb,GAAG,eACvC,uBAAGA,GAAG,SAAN,sCAA8Boe,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAGgD,MAAQ,KAGxF,yBAAK1gB,UAAU,kBACX,uBAAGA,UAAS,wBAA2Bb,GAAG,eAC1C,uBAAGA,GAAG,SAAN,iBAA0Boe,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAG8C,YAAc,KAG1F,yBAAKxgB,UAAU,kBACX,uBAAGA,UAAS,wBAA2Bb,GAAG,eAC1C,uBAAGA,GAAG,SAAN,UAAsBoe,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAG2C,MAAQ,UAOpG,yBAAKrgB,UAAU,OACX,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,gCACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,yBAAKA,UAAU,yCACX,wBAAIb,GAAG,aAAP,YAA0Boe,EAAMqD,QAAQ9gB,OAAS,EAAIyd,EAAMqD,QAAQ,GAAGrc,SAAW,KAErF,yBAAKvE,UAAU,yCACX,uBAAGb,GAAG,oBAAN,sBAAqCoe,EAAMqD,QAAQ9gB,OAAS,EAAIyd,EAAMqD,QAAQ,GAAGH,IAAM,KAE3F,yBAAKzgB,UAAU,kBACX,uBAAGA,UAAS,qBAAwBb,GAAG,eACvC,uBAAGA,GAAG,SAAN,sCAA8Boe,EAAMqD,QAAQ9gB,OAAS,EAAIyd,EAAMqD,QAAQ,GAAGF,MAAQ,KAGtF,yBAAK1gB,UAAU,kBACX,uBAAGA,UAAS,wBAA2Bb,GAAG,eAC1C,uBAAGA,GAAG,SAAN,iBAA0Boe,EAAMqD,QAAQ9gB,OAAS,EAAIyd,EAAMqD,QAAQ,GAAGJ,YAAc,KAGxF,yBAAKxgB,UAAU,kBACX,uBAAGA,UAAS,wBAA2Bb,GAAG,eAC1C,uBAAGA,GAAG,SAAN,UAAsBoe,EAAMqD,QAAQ9gB,OAAS,EAAIyd,EAAMqD,QAAQ,GAAGP,MAAQ,WAYtG,yBAAKrgB,UAAU,0BACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,mCACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,yBAAKA,UAAU,kBACX,kBAAC4iC,GAAD,CAAW7+B,KAAMA,KAErB,yBAAK/D,UAAU,8BACX,4BACIA,UAAU,4BACVb,GAAG,yBACH8H,QAAS,WA3I7CR,EAAQI,KAAK,CACTmB,SAFO,8BAyIqB,oBAMI,uBAAGhI,UAAS,2BAA8Bb,GAAG,2BAOrE,yBAAKa,UAAU,OACf,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,8BACX,4BACIA,UAAU,4BACVb,GAAG,wBACH8H,QAAS,WACL9D,EAASL,GAAqBqpB,GAAyBvW,SApJnFmQ,GAAS,KAgJW,mBASI,kBAAC,KAAD,cCrRnBy9B,GAA0B,kBAC1BC,GAA2B,mBAC3BC,GAA6B,qBAE7BC,GAA0C,kCAC1CC,GAAyC,iCACzCC,GAAiC,yBACjCC,GAA8B,sBAG9BC,GAAyB,iBACzBC,GAA0B,kBAC1BC,GAA4B,oBAE5BC,GAAyC,iCACzCC,GAAwC,gCACxCC,GAAgC,wBAChCC,GAA6B,qBAG7B1iD,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,oB,SFC5BgtE,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,YGCL,SAASW,GAAiBhrE,EAAehE,GAC5C,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,2BACkDlE,GAAM,CACrD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASgrE,GAAiBhrE,EAAUhE,OAU/CmE,MAAM,SAAAS,GACHZ,EDtBL,CACH7D,KAAMiB,GACNymE,eCoBkCjjE,IAC1BZ,EDLL,CAAE7D,KAAMukD,KCMH1gD,EDuBL,CAAE7D,KAAM8kD,KCtBHvoD,QAAQC,IAAIiI,EAAKhG,KAAKymD,cACtB3oD,QAAQC,IAAIiI,EAAKhG,KAAK0mD,eACtB1gD,EAAKhG,KAAKymD,aAAav3C,KAAI,SAAC3B,EAAU4B,GAClC,IAAI85D,EAAgC,CAChC7nE,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACV60C,oBAAqB52C,EAAI42C,oBACzB/vC,WAAY7G,EAAI6G,WAChBC,aAAc9G,EAAI8G,aAClB+M,WAAY7T,EAAI6T,WAChBkG,aAAc/Z,EAAI+Z,aAClBC,UAAWha,EAAIga,UACfqU,cAAeruB,EAAIquB,cACnBjnB,kBAAmBpH,EAAIoH,kBACvBukB,6BAA8B3rB,EAAI2rB,6BAClCD,cAAe1rB,EAAI0rB,cACnBu0C,sBAAuBjgE,EAAIigE,sBAC3B7mB,cAAep5C,EAAIo5C,cACnB+mB,cAAengE,EAAImgE,cACnBC,sBAAuBpgE,EAAIogE,sBAC3Br5D,SAAU/G,EAAI+G,SACdoW,WAAYnd,EAAImd,WAChBF,aAAcjd,EAAIid,aAClBD,YAAahd,EAAIgd,YACjB/V,YAAajH,EAAIiH,YACjBgT,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBC,cAAena,EAAIma,eAGvB,OADA5pB,QAAQC,IAAIkrE,GAED7jE,EADG,IAAV+J,EDbjB,SAA0B85D,GAC7B,MAAO,CAAE1nE,KAAM+kD,GAAoB2iB,eAAgBA,GCafriB,CAAiBqiB,GDNlD,SAAsBA,GACzB,MAAO,CAAE1nE,KAAMykD,GAAgBijB,eAAgBA,GCQXpiB,CAAaoiB,OAIrCjjE,EAAKhG,KAAK0mD,cAAcx3C,KAAI,SAAC3B,EAAU4B,GACnC,IAAI85D,EAAgC,CAChC7nE,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACV8E,WAAY7G,EAAI6G,WAChB+vC,oBAAqB52C,EAAI42C,oBACzB9vC,aAAc9G,EAAI8G,aAClB+M,WAAY7T,EAAI6T,WAChBkG,aAAc/Z,EAAI+Z,aAClBC,UAAWha,EAAIga,UACfimD,sBAAuBjgE,EAAIigE,sBAC3B5xC,cAAeruB,EAAIquB,cACnBjnB,kBAAmBpH,EAAIoH,kBACvBukB,6BAA8B3rB,EAAI2rB,6BAClCD,cAAe1rB,EAAI0rB,cACnB0tB,cAAep5C,EAAIo5C,cACnBgnB,sBAAuBpgE,EAAIogE,sBAC3BD,cAAengE,EAAImgE,cACnBp5D,SAAU/G,EAAI+G,SACdoW,WAAYnd,EAAImd,WAChBF,aAAcjd,EAAIid,aAClBD,YAAahd,EAAIgd,YACjB/V,YAAajH,EAAIiH,YACjBgT,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBC,cAAena,EAAIma,eAGvB,OADA5pB,QAAQC,IAAIkrE,GAED7jE,EADG,IAAV+J,ED9EjB,SAA4B85D,GAC/B,MAAO,CAAE1nE,KAAMwkD,GAAqBkjB,eAAgBA,GC8EhBniB,CAAmBmiB,GDvEpD,SAAwBA,GAC3B,MAAO,CAAE1nE,KAAMkkD,GAAiBwjB,eAAgBA,GCyEZliB,CAAekiB,UAI1C7iE,OAAM,SAAAtF,GACHsE,ED9FT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UC2FMoD,CAAepD,IACxBhD,QAAQC,IAAI,Y,OCiDbsyE,OA1Kf,SAAyB3vE,GACrB,IAAM4vE,EAAuCzmE,aAAY,SAACC,GAAD,OAAuBA,EAAMwmE,mBAChF9wD,EAAqB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAFJ,EAG9B7e,mBAAS,GAHqB,mBAGzDw9C,EAHyD,KAG9CC,EAH8C,OAIlCz9C,mBAA2B,IAJO,mBAIzD05B,EAJyD,KAIhDqmB,EAJgD,KAKhE9yC,qBAAU,WACN,IAAIwL,GAAKk3D,EAAgB5pB,cAAc3kD,OAASuuE,EAAgB5pB,cAAc3kD,OAAS,IAAM,GAEzF2+C,EADM,IAANtnC,EACWk3D,EAAgB5pB,cAGhB4pB,EAAgB5pB,cAAc3iC,MAAM,EAAG,KAGtDq6B,EAAchlC,EAAI,KACnB,CAACk3D,EAAgB5pB,gBAapB,IAAMh+C,EAAUC,cACVmK,EAAc,SAACm2D,GAEjB/jE,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAcgjE,EAAe7nD,WAAWvjB,YAC7DqH,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAcgjE,EAAe70D,WAAWvW,YAC7DqH,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAYgjE,EAAe7nE,GAAGvD,YACnD6K,EAAQI,KAAK,CACTmB,SARO,4BA9BiD,EA0CpCtJ,mBAAS,GA1C2B,mBA0CzDkgB,EA1CyD,KA0CjD8/B,EA1CiD,KAiEhE,OACI,kBAAC,WAAD,KACI,yBAAK1+C,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,sEACX,wBAAIA,UAAU,QAAd,SAAyBo4B,EAAQxZ,QAAO,SAACva,GACzC,MAAoB,KAAhB5F,EAAMY,MACDgF,EAEuB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACxKtiB,EAEF,QACNvE,OARD,sBASA,yBAAKE,UAAU,cACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,QAAhB,kBACA,4BAAQqN,KAAK,OAAOlO,GAAG,OACnBE,MAAOuf,EACPrf,SAzCpC,SAAsBnB,GAClBsgD,EAAUtgD,EAAEqB,OAAOJ,SA2CiBke,EAAM8L,SAASpc,KAAI,SAAC3B,EAAK8B,GACrB,OACI,4BAAQ/N,MAAOiM,EAAInM,IAAKmM,EAAI/G,cAK5C,4BAAQvE,UAAU,0CAA0CV,KAAK,SAAS2H,QAAS,kBA/CnH,WACIpL,QAAQC,IAAI8iB,GAEZ,IAAI69B,EAAI4xB,EAAgB5pB,cAAc7lC,QAAO,SAACtT,EAAK8B,GAAN,OACzC9B,EAAI6G,YAAcyM,KAGlBzH,GAAKslC,EAAE38C,OAAU28C,EAAE38C,OAAU,IAAM,GAEnC2+C,EADM,IAANtnC,EACWslC,EAGAA,EAAE36B,MAAM,EAAG,KAE1Bq6B,EAAchlC,EAAI,GAiCmG4nC,KAAzF,eAAkH,uBAAG/+C,UAAU,sBAMnJ,yBAAKA,UAAU,YAEPo4B,EAAQxZ,QAAO,SAACva,GACZ,MAAoB,KAAhB5F,EAAMY,MACDgF,EAEuB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACxKtiB,EAEF,QACN4I,KAAI,SAAC3B,EAAK4B,GACX,OACI,yBAAKlN,UAAU,oBAAoB4Q,IAAG,iBAAYtF,EAAInM,IAAM8H,QAAS,WAAQ4J,EAAYvF,KACrF,yBAAKtL,UAAU,UACX,yBAAKA,UAAU,kBACX,gDACA,4BAAKsL,EAAIiH,aACT,uBAAGjG,KAAK,MAAR,iCAA8B,uBAAGtM,UAAU,2BAE/C,yBAAKA,UAAU,eACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,aACf,0BAAMA,UAAU,iBACXsL,EAAIogE,sBADT,IACiCpgE,EAAImgE,cADrC,eAIJ,4BAAKngE,EAAI8G,cACT,wBAAIpS,UAAU,QAAd,oBAAiCsL,EAAI+Z,cACrC,wBAAIrlB,UAAU,QAAd,yCAAwCsL,EAAIigE,sBAAsBhuB,WAAW,IAAK,MAClF,4BAAQv9C,UAAU,QAAQiH,QAAS,WAAQ4J,EAAYvF,KAAvD,wBAQ5B,yBAAKtL,UAAU,8CACX,6BACI,wBAAIA,UAAU,cACd,wBAAIA,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,WAAW1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBACtE,0BAAM43C,cAAY,QAAlB,UAIAxjB,MAAMC,KAAKD,MAAOygB,GAAY3kC,QAAQtK,KAAI,SAAC3B,EAAK8B,GAC5C,OACI,wBAAIpN,UAAU,aAAY,uBAAGA,UAAU,YAAYsM,KAAK,IAAIrF,QAAS,SAAC7I,GApI1G,IAA0B8gD,EAqIc9gD,EAAEiJ,iBArIhB63C,EAsI+B5zC,EArIrDzP,QAAQC,IAAIojD,GAERT,EADAS,IAAUhD,EACCmyB,EAAgB5pB,cAAc3iC,MAAc,GAARo9B,GAGpCmvB,EAAgB5pB,cAAc3iC,MAAc,GAARo9B,EAAoB,GAARA,EAAa,OAgIf5zC,EAAI,OAI7C,wBAAItL,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,OAAO1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBAClE,0BAAM43C,cAAY,QAAlB,gBCYrBqvB,OA1Kf,SAAwB7vE,GACpB,IAAM4vE,EAAuCzmE,aAAY,SAACC,GAAD,OAAuBA,EAAMwmE,mBAChF9wD,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAFJ,EAI7B7e,mBAAS,GAJoB,mBAIxDw9C,EAJwD,KAI7CC,EAJ6C,OAKjCz9C,mBAA2B,IALM,mBAKxD05B,EALwD,KAK/CqmB,EAL+C,KAM/D9yC,qBAAU,WACN,IAAIwL,GAAKk3D,EAAgB7pB,aAAa1kD,OAASuuE,EAAgB7pB,aAAa1kD,OAAS,IAAM,GAEvF2+C,EADM,IAANtnC,EACWk3D,EAAgB7pB,aAGhB6pB,EAAgB7pB,aAAa1iC,MAAM,EAAG,KAGrDq6B,EAAchlC,EAAI,KACnB,CAACk3D,EAAgB7pB,eAYpB,IAAM/9C,EAAUC,cA5B+C,EA0CnChI,mBAAS,GA1C0B,mBA0CxDkgB,EA1CwD,KA0ChD8/B,EA1CgD,KAkE/D,OACI,kBAAC,WAAD,KACI,yBAAK1+C,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,sEACX,wBAAIA,UAAU,QAAd,SAAyBo4B,EAAQxZ,QAAO,SAACva,GACrC,MAAoB,KAAhB5F,EAAMY,MACCgF,EAEqB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACtKtiB,EAEJ,QACRvE,OARH,sBASA,yBAAKE,UAAU,cACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,QAAhB,kBACA,4BAAQqN,KAAK,OAAOlO,GAAG,OACnBE,MAAOuf,EACPrf,SA1CpC,SAAsBnB,GAClBsgD,EAAUtgD,EAAEqB,OAAOJ,SA4CiBke,EAAM8L,SAASpc,KAAI,SAAC3B,EAAK8B,GACrB,OACI,4BAAQ/N,MAAOiM,EAAInM,IAAKmM,EAAI/G,cAK5C,4BAAQvE,UAAU,0CAA0CV,KAAK,SAAS2H,QAAS,kBAhDnH,WACIpL,QAAQC,IAAI8iB,GAEZ,IAAI69B,EAAI4xB,EAAgB7pB,aAAa5lC,QAAO,SAACtT,EAAK8B,GAAN,OACxC9B,EAAI6G,YAAcyM,KAGlBzH,GAAKslC,EAAE38C,OAAU28C,EAAE38C,OAAU,IAAM,GAEnC2+C,EADM,IAANtnC,EACWslC,EAGAA,EAAE36B,MAAM,EAAG,KAE1Bq6B,EAAchlC,EAAI,GAkCmG4nC,KAAzF,eAAkH,uBAAG/+C,UAAU,sBAMnJ,yBAAKA,UAAU,YAEPo4B,EAAQxZ,QAAO,SAACva,GACZ,MAAoB,KAAhB5F,EAAMY,MACCgF,EAEqB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACtKtiB,EAEJ,QACR4I,KAAI,SAAC3B,EAAK4B,GACT,OACI,yBAAKlN,UAAU,oBAAoB4Q,IAAG,iBAAYtF,EAAInM,KAClD,yBAAKa,UAAU,UACX,yBAAKA,UAAU,kBACX,gDACA,4BAAKsL,EAAIiH,aACT,uBAAGjG,KAAK,MAAR,iCAA8B,uBAAGtM,UAAU,2BAE/C,yBAAKA,UAAU,eACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,aACf,0BAAMA,UAAU,iBACXsL,EAAImgE,cADT,IACyBngE,EAAImgE,cAD7B,eAIJ,4BAAKngE,EAAI8G,cACT,gDAAgB9G,EAAI+Z,cACpB,4BAAQrlB,UAAU,QAAQiH,QAAS,WArGvD,IAAC+/D,IAqG0E17D,EAnG3FrI,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAcgjE,EAAe7nD,WAAWvjB,YAC7DqH,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAcgjE,EAAe70D,WAAWvW,YAC7DqH,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAYgjE,EAAe7nE,GAAGvD,YACnD6K,EAAQI,KAAK,CACTmB,SARO,qBAoGyB,wBAQ5B,yBAAKhI,UAAU,8CACX,6BACI,wBAAIA,UAAU,cACV,wBAAIA,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,WAAW1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBACtE,0BAAM43C,cAAY,QAAlB,UAIJxjB,MAAMC,KAAKD,MAAOygB,GAAY3kC,QAAQtK,KAAI,SAAC3B,EAAK8B,GAC5C,OACI,wBAAIpN,UAAU,aAAY,uBAAGA,UAAU,YAAYsM,KAAK,IAAIrF,QAAS,SAAC7I,GAnI1G,IAA0B8gD,EAoIU9gD,EAAEiJ,iBApIZ63C,EAqI2B5zC,EApIjDzP,QAAQC,IAAIojD,GAERT,EADAS,IAAUhD,EACCmyB,EAAgB7pB,aAAa1iC,MAAc,GAARo9B,GAGnCmvB,EAAgB7pB,aAAa1iC,MAAc,GAARo9B,EAAoB,GAARA,EAAa,OA+HjB5zC,EAAM,OAI5C,wBAAItL,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,OAAO1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBAClE,0BAAM43C,cAAY,QAAlB,gBCmCrBsvB,GA7Le,WAC1B,IAAMprE,EAA0BqD,cAC1B6nE,EAAuCzmE,aAAY,SAACC,GAAD,OAAuBA,EAAMwmE,mBAChFjxE,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzEoyC,EAAgCgpB,EAAgB5pB,cAAc3kD,OAC9DwlD,EAA+B+oB,EAAgB7pB,aAAa1kD,OAC9DkM,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GATuB,IAWxBoO,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAsCzC,SAASsrE,EAAsBxH,GJoC5B,IAA8B3nE,EInC7B8D,EJFD,SAAmC6jE,GACtC,MAAO,CAAE1nE,KAAMqkD,GAAiCqjB,eAAgBA,GICnDxhB,CAA0BwhB,IACnC7jE,GJkC6B9D,EIlCCmuE,GAAgCn3D,KJmC3D,CAAE/W,KAAMqC,GAAwBtC,MAAOA,KI1E9CsM,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAQbuL,wBAAauiE,GAAiBhrE,EAAUhE,IACxCyM,wBAAakxD,GAAmB35D,EAAUhE,QAGnD,CAACgE,EAAUhE,EAAIwc,EAAc3Y,IAGhC2I,qBAAU,WACNxI,EAASmQ,GAAkB,mBAAY,OACxC,CAAClW,EAAK+V,KAAMhQ,IAlDiB,MAyDIzE,mBAAS,IAzDb,mBAyDzB4tB,EAzDyB,KAyDbC,EAzDa,OA2DF7tB,oBAAS,GA3DP,mBA2DzBoqB,EA3DyB,KA2DhBC,EA3DgB,KA4DhC,OACI3O,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KAIL,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,mBAAW6I,KAAI,UAAK2xC,GAAyBz6C,KAAK,OAAO6I,MAAM,YAC9E,kBAAC,GAAD,CAAS5I,MAAM,uCAAkB6I,KAAI,UAAK4xC,GAAwB16C,KAAK,OAAO6I,MAAM,aAUxF,yBAAKzT,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,2BAAOV,KAAK,OAAOH,GAAG,QAAQa,UAAU,eAAeE,YAAY,mBAAWX,SAAU,SAACC,GACrF+sB,EAAc/sB,EAAMC,OAAOJ,OAC3BxD,QAAQC,IAAIwwB,OAGpB,4BAAQhtB,KAAK,SAASU,UAAU,mBAC5B,uBAAGA,UAAU,sBAM7B,yBAAKA,UAAU,OACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,WAAW8H,QAAS,YACxC,IAAZ6hB,GACAC,GAAW,IAEhBxhB,MAAO,CACNC,MAAOshB,EAAU,UAAY,YALjC,sBAOA,yBAAKvhB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBnB,EAAU,UAAY,cAG/C,yBAAK9oB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACzC,IAAZ6hB,GACAC,GAAW,IAGfxhB,MAAO,CACHC,MAAOshB,EAAU,UAAY,YANrC,uBAQA,yBAAKvhB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBnB,EAAU,UAAY,gBAQ3B,IAAZA,EAEI,kBAAC,WAAD,KACI,yBAAK9oB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,0BAEJ,yBAAKa,UAAU,aACX,kBAAC,GAAD,CACIuf,SAAUivD,EAAuBnvE,MAAOitB,SAWhE,kBAAC,WAAD,KACI,yBAAKtsB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,0BAEJ,yBAAKa,UAAU,aACX,kBAAC,GAAD,CACIuf,SAAUivD,EAAuBnvE,MAAOitB,WCqDjFmiD,GAjOsB,WACjC,IAAMtrE,EAA0BqD,cAC1B+W,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAC7DkwC,EAA2C7lD,aAAY,SAACC,GAAD,OAAuBA,EAAM4lD,qBACpFtB,EAAoCvkD,aAAY,SAACC,GAAD,OAAuBA,EAAM6lD,kBAC7ER,EAAoEtlD,aAAY,SAACC,GAAD,OAAuBA,EAAM8lD,mCAC7GC,EAA+BH,EAAkBK,0BAA0BhuD,OAAS2tD,EAAkBI,6BAA6B/tD,OACnIiuD,EAAkCN,EAAkBhD,oBAAoB3qD,OACxEkuD,EAAkC7B,EAAc8B,aAAanuD,OAC3Dsa,EAAsBC,+BAAtBD,kBAGJQ,EAAO3X,aAAaC,QAAQ,cAC5Bic,EAAqB,EACZ,OAATvE,IACAuE,EAAahP,SAASyK,IAG1B,IAAIF,EAAOzX,aAAaC,QAAQ,cAC5BiP,EAAoB,EACX,OAATuI,IACAvI,EAAahC,SAASuK,IAG1B,IAAIsyB,EAAO/pC,aAAaC,QAAQ,YAC5BwzB,EAAmB,EACV,OAATsW,IACAtW,EAAWvmB,SAAS68B,IAExB,IAAIrxB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAWbuL,wBAAamV,GAAY5d,EAAUgP,IACnCvG,wBAAaq/C,GAAc9nD,EAAUgc,IACrCvT,wBAAa4+C,GAA2BrnD,EAAUuzB,EAAUvkB,IAC5DvG,wBAAa8gD,GAAiCvpD,EAAUuzB,EAAUvkB,IAClEvG,wBAAayhD,GAAsClqD,EAAUuzB,EAASvkB,QAG/E,CAAChP,EAAUwY,EAAc3Y,EAAemP,EAAYgN,EAAYuX,IAEnE,IAAIw3B,EAA4C,GAC5CC,EAA2C,GAC/CjB,EAA+BS,gCAAgC1gD,KAAI,SAAC3B,EAAK8B,GAGrE,OAFA8gD,EAA+BrnD,KAAKyE,EAAImsC,OACxC0W,EAA8BtnD,KAAKyE,EAAIiiD,eAChCjiD,KAIX,IACMvH,EAAO,CACTu+B,OAFW6rB,EAGX5rB,SAAU,CACN,CACInjC,MAAO,+BACP2E,KAAMmqD,EACN1rB,YAAa,oBACbvY,gBAAiB,6BAKvBxjB,EAAUC,cAShB,OACI0T,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KAIH,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,sCAAiB6I,KAAI,UAAKk6C,GAAwBhjD,KAAK,OAAO6I,MAAM,YACnF,kBAAC,GAAD,CAAS5I,MAAM,qCAAmB6I,KAAI,UAAKq6C,GAA2BnjD,KAAK,OAAO6I,MAAM,WACxF,kBAAC,GAAD,CAAS5I,MAAM,8BAAe6I,KAAI,UAAKs6C,GAA2BpjD,KAAK,OAAO6I,MAAM,YASxF,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,8BACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,yBAAKA,UAAU,yCACX,wBAAIb,GAAG,aAAP,YAA0Boe,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAGnZ,SAAW,KAEvF,yBAAKvE,UAAU,yCACX,uBAAGb,GAAG,oBAAN,sBAAqCoe,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAG+C,IAAM,KAE7F,yBAAKzgB,UAAU,kBACX,uBAAGA,UAAS,qBAAwBb,GAAG,eACvC,uBAAGA,GAAG,SAAN,sCAA8Boe,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAGgD,MAAQ,KAGxF,yBAAK1gB,UAAU,kBACX,uBAAGA,UAAS,wBAA2Bb,GAAG,eAC1C,uBAAGA,GAAG,SAAN,iBAA0Boe,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAG8C,YAAc,KAG1F,yBAAKxgB,UAAU,kBACX,uBAAGA,UAAS,wBAA2Bb,GAAG,eAC1C,uBAAGA,GAAG,SAAN,UAAsBoe,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAG2C,MAAQ,UAOpG,yBAAKrgB,UAAU,OACX,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,gCACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,yBAAKA,UAAU,yCACX,wBAAIb,GAAG,aAAP,YAA0Boe,EAAMqD,QAAQ9gB,OAAS,EAAIyd,EAAMqD,QAAQ,GAAGrc,SAAW,KAErF,yBAAKvE,UAAU,yCACX,uBAAGb,GAAG,oBAAN,sBAAqCoe,EAAMqD,QAAQ9gB,OAAS,EAAIyd,EAAMqD,QAAQ,GAAGH,IAAM,KAE3F,yBAAKzgB,UAAU,kBACX,uBAAGA,UAAS,qBAAwBb,GAAG,eACvC,uBAAGA,GAAG,SAAN,sCAA8Boe,EAAMqD,QAAQ9gB,OAAS,EAAIyd,EAAMqD,QAAQ,GAAGF,MAAQ,KAGtF,yBAAK1gB,UAAU,kBACX,uBAAGA,UAAS,wBAA2Bb,GAAG,eAC1C,uBAAGA,GAAG,SAAN,iBAA0Boe,EAAMqD,QAAQ9gB,OAAS,EAAIyd,EAAMqD,QAAQ,GAAGJ,YAAc,KAGxF,yBAAKxgB,UAAU,kBACX,uBAAGA,UAAS,wBAA2Bb,GAAG,eAC1C,uBAAGA,GAAG,SAAN,UAAsBoe,EAAMqD,QAAQ9gB,OAAS,EAAIyd,EAAMqD,QAAQ,GAAGP,MAAQ,WAYtG,yBAAKrgB,UAAU,0BACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,mCACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,yBAAKA,UAAU,kBACX,kBAAC4iC,GAAD,CAAW7+B,KAAMA,KAErB,yBAAK/D,UAAU,8BACX,4BACIA,UAAU,4BACVb,GAAG,yBACH8H,QAAS,WAlH7CR,EAAQI,KAAK,CACTmB,SAFO,8BAgHqB,oBAMI,uBAAGhI,UAAS,2BAA8Bb,GAAG,+B,OChNlF,SAASuvE,GAAoBvrE,GAChC,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAOE,MAAM,GAAD,OACGC,+BADH,uBACuD,CACnDhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASurE,GAAoBvrE,OAUxCG,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAAS89C,MAETl9C,EAAKhG,KAAKk6B,iBAAiBhrB,KAAI,SAAC3B,EAAU4B,GACtC,IAAI4L,EAAwB,CACxB3Z,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVkF,YAAajH,EAAIiH,YACjB+S,UAAWha,EAAIga,UACfqU,cAAeruB,EAAIquB,cACnBjnB,kBAAmBpH,EAAI+1C,iBACvB/zC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrBC,eAAgB5c,EAAI4c,eACpBzV,MAAOnH,EAAImH,MACX0V,UAAW7c,EAAI6c,UACf1C,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBuT,SAAUztB,EAAIytB,SACduoB,sBAAuBh2C,EAAIg2C,uBAI/B,OADAzlD,QAAQC,IAAIgd,GACL3V,EAAS+9C,GAA6BpoC,UAGpD3U,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YC7ErB,IAAM6yE,GAAmB,WACnBC,GAAoB,YACpBC,GAAsB,cACtBC,GAA4B,oBAC5BC,GAA4B,oBAE5BC,GAAmC,2BACnCC,GAAkC,0BAClCttE,GAAiC,yBAmCvC,SAASutE,GAAQC,GACpB,MAAO,CAAE7vE,KAAMqvE,GAAUQ,KAAMA,GCzC5B,SAASC,GAA6BrrE,EAAWqJ,EAAU6nC,GAC9D,IAAI7wC,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EjYsBG,CACH7D,KAAMgB,KiYtBN8C,MAAM,GAAD,OACMC,+BADN,gCACmE,CAC5DhG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASisE,GAA6BrrE,EAAMqJ,EAAK6nC,OAU5D3xC,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZkB,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,wCAAsB5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACrIC,YAAW,WACPyvC,MACD,QAEN9wC,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,2EAA2C5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACxJ1J,QAAQC,IAAI,aCxCrB,SAASuzE,GAA8BtrE,EAAWqJ,GACrD,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,gCACmE,CAC5DhG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASksE,GAA8BtrE,EAAMqJ,OAUxD9J,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,MAEfI,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,2EAA2C5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACxJ1J,QAAQC,IAAI,aCd5B,IAuWewzE,GAvWuB,WAClC,IAAMnsE,EAA0BqD,cAC1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAGzEgjC,EADoBruC,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAChC8L,SAC7B6sB,EAA0B,GANQ,EAOVx3C,oBAAS,GAPC,mBAOjCoqB,EAPiC,KAOxBC,EAPwB,KAaxCktB,EAAYhpC,KAAI,SAAC3B,GACb,IAAIiF,EAAgB,CAAE,MAASjF,EAAI/G,SAAU,MAAS+G,EAAInM,IAC1D,OAAO+2C,EAAarvC,KAAK0J,MAG7B,IAAIvE,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAGT,IAAI41C,EAAO3+C,aAAaC,QAAQ,sBAC5B2+C,EAA6B,GACpB,OAATD,IACAC,EAAqBD,GAGzB,IAAI2tB,EAAOtsE,aAAaC,QAAQ,aAC5BoiB,EAAoB,EACX,OAATiqD,IACAjqD,EAAYnV,SAASo/D,IAGzB,IAAIztB,EAAO7+C,aAAaC,QAAQ,eAC5BqP,EAAsB,GACb,OAATuvC,IACAvvC,EAAcuvC,GAGlB,IAAIC,EAAO9+C,aAAaC,QAAQ,gBAC5BqiB,EAAuB,GACd,OAATw8B,IACAx8B,EAAew8B,GAGnB,IAAIC,EAAO/+C,aAAaC,QAAQ,iBAC5BuiB,EAAwB,GACf,OAATu8B,IACAv8B,EAAgBu8B,GAGpB,IAAIC,EAAOh/C,aAAaC,QAAQ,kBAC5BglB,EAAyB,GAChB,OAAT+5B,IACA/5B,EAAiB+5B,GAGrB,IAAIjG,EAAO/4C,aAAaC,QAAQ,YAC5B61B,EAAmB,GACV,OAATijB,IACAjjB,EAAWijB,GAGf,IAAIlhC,EAAO7X,aAAaC,QAAQ,kBAC5BsiB,EAAyB,GAChB,OAAT1K,IACA0K,EAAiB1K,GAGrB,IAAIE,EAAO/X,aAAaC,QAAQ,uBAC5Bg/C,EAA8B,GACrB,OAATlnC,IACAknC,EAAsBlnC,GAG1B,IAAIE,EAAOjY,aAAaC,QAAQ,SAC5BuP,EAAgB,GACP,OAATyI,IACAzI,EAAQyI,GAGZ,IAAIinC,EAAOl/C,aAAaC,QAAQ,qBAC5BwP,EAA4B,EACnB,OAATyvC,IACAzvC,EAAoBvC,SAASgyC,IAGjC,IAAIC,EAAQn/C,aAAaC,QAAQ,aAC7BwxC,EAAoB,GACV,OAAV0N,IACA1N,EAAY0N,GAGhBvmD,QAAQC,IAAIwpB,GACZzpB,QAAQC,IAAI4W,GAjG4B,IAmGhC0H,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAQbuL,wBAAa8iE,GAAoBvrE,IACjCyI,wBAAakxD,GAAmB35D,EAAUhE,QAInD,CAACgE,EAAUhE,EAAIwc,EAAc3Y,IAEhC2I,qBAAU,WACNxI,EAASmQ,GAAkB,WAAO,OACnC,CAAClW,EAAK+V,KAAMhQ,IA8Cf,IAAMsD,EAAUC,cAiDhB,SAASuuC,IAELxuC,EAAQI,KADG,oBA1OyB,MA8OAnI,mBAAgB,IA9OhB,mBA8OjCs2C,EA9OiC,KA8OnBwB,EA9OmB,KAsPxC,OANA36C,QAAQC,IAAIk5C,GAOR56B,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KACL,kBAAC,IAAD,MACA,yBAAKxH,UAAU,uBACX,yBAAKA,UAAU,wDACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,uDACX,uBAAGA,UAAU,sBAAsBkiD,KAG3C,yBAAKliD,UAAU,OACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,YACX,uBAAGA,UAAU,iBAAb,qBAAwCuS,KAGhD,yBAAKvS,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,iBAAb,uBAAwCylB,KAGhD,yBAAKzlB,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,iBAAb,2BAAuCulB,KAG/C,yBAAKvlB,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,iBAAb,0BAAwCwlB,MAKpD,yBAAKxlB,UAAU,qBACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,gBACX,uBAAGA,UAAU,YAAb,uBAAmC+4B,KAG3C,yBAAK/4B,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,YAAb,+BAAsCkoB,KAG9C,yBAAKloB,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,YAAb,WAA8ByS,OAK9C,yBAAKzS,UAAU,OACX,yBAAKA,UAAU,4BACX,wCACA,kBAACo1C,GAAD,CAAan2C,SAAUi3C,EAAc72C,MAAO,GAAIm2C,YApE5E,SAA4Bn2C,GACxBm3C,EAAgBn3C,QAsEA,yBAAKW,UAAU,MAAMb,GAAG,uBACpB,yBAAKa,UAAU,iEACX,4BAAQA,UAAU,4BAA4Bb,GAAG,8BAA8B8H,QAAS,kBA/KpH,WACI,GAA4B,IAAxB+tC,EAAal1C,OACbmF,IAAMpG,MAAM,wDAAiC,CACzCuG,SAAUH,IAAMI,SAASC,WACzBC,UAAW,UAGd,CACD,IAAMiqE,EAAOvqE,IAAMqC,QAAQ,uEAAwC,CAC/DlC,SAAUH,IAAMI,SAASC,aAG7B0vC,EAAa/nC,KAAI,SAAC3B,EAAK8B,GAmBnB,OAlBIA,IAAQ4nC,EAAal1C,OAAS,EAC9BqD,EAASksE,GAA8B,CACnC,WAAc/jE,EAAIjM,MAClB,oBAAuBqT,EACvB,SAAYvT,EACZ,MAASsT,EACT,OAAU,WACX+8D,IAGHrsE,EAASisE,GAA6B,CAClC,WAAc9jE,EAAIjM,MAClB,oBAAuBqT,EACvB,SAAYvT,EACZ,MAASsT,EACT,OAAU,WACX+8D,EAAMv6B,IAEN9xC,EAAS+rE,GAAQ,CACpB/vE,GAAIuT,EACJrF,KAAM60C,EACN9N,MAAOM,EACPviC,WAAY7G,EAAIjM,MAChB+S,aAAc9G,EAAIlM,MAClBqwE,SAAU,EACVh9D,MAAOtC,SAASsC,UAyI0F4vC,KAC1F,kBAAC,KAAD,MADJ,oCAKJ,yBAAKriD,UAAU,iEACX,4BAAQA,UAAU,4BAA4Bb,GAAG,8BAA8B8H,QAAS,kBAxIpH,WACI,GAA4B,IAAxB+tC,EAAal1C,OACbmF,IAAMpG,MAAM,wDAAiC,CACzCuG,SAAUH,IAAMI,SAASC,WACzBC,UAAW,UAGd,CACD,IAAMiqE,EAAOvqE,IAAMqC,QAAQ,uEAAwC,CAC/DlC,SAAUH,IAAMI,SAASC,aAG7B0vC,EAAa/nC,KAAI,SAAC3B,EAAK8B,GAmBnB,OAlBIA,IAAQ4nC,EAAal1C,OAAS,EAC9BqD,EAASksE,GAA8B,CACnC,WAAc/jE,EAAIjM,MAClB,oBAAuBqT,EACvB,SAAYvT,EACZ,MAASsT,EACT,OAAU,WACX+8D,IAGHrsE,EAASisE,GAA6B,CAClC,WAAc9jE,EAAIjM,MAClB,oBAAuBqT,EACvB,SAAYvT,EACZ,MAASsT,EACT,OAAU,WACX+8D,EAAMv6B,IAEN9xC,EAAS+rE,GAAQ,CACpB/vE,GAAIuT,EACJrF,KAAM60C,EACN9N,MAAOM,EACPviC,WAAY7G,EAAIjM,MAChB+S,aAAc9G,EAAIlM,MAClBqwE,SAAU,EACVh9D,MAAOtC,SAASsC,SAIxBhM,EAAQI,KAAK,CACTmB,SAFO,WA+FuG0nE,KAC1F,kBAAC,KAAD,CAAYvwE,GAAG,cAAcqI,MAAM,YADvC,0BAQpB,yBAAKxH,UAAU,MAAMb,GAAG,uBACpB,yBAAKa,UAAU,oEACX,4BAAQA,UAAU,4BAA4Bb,GAAG,8BAA8B8H,QAAS,WAjUpG8hB,GAAYD,KAkUA,kBAAC,KAAD,CAAY3pB,GAAG,cAAcqI,MAAM,YADnC,yBAOJ,WACI,IAAgB,IAAZshB,EACA,OACI,yBAAK9oB,UAAU,uBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,kBAEJ,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,YAAYuiD,wBAAyB,CAAEC,OAAQX,OARlF,K,OCvVhB,IA8Pe8tB,GA9PuB,WAClC,IAAMxsE,EAA0BqD,cAC1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAGzEgjC,EADoBruC,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAChC8L,SAC7B6sB,EAA0B,GAChCD,EAAYhpC,KAAI,SAAC3B,GACb,IAAIiF,EAAgB,CAAE,MAASjF,EAAI/G,SAAU,MAAS+G,EAAInM,IAC1D,OAAO+2C,EAAarvC,KAAK0J,MATW,MAYV7R,oBAAS,GAZC,mBAYjCoqB,EAZiC,KAYxBC,EAZwB,KAkBxC,IAAI/c,EAAO/I,aAAaC,QAAQ,cAC5BiyC,EAAqB,EACZ,OAATnpC,IACAmpC,EAAahlC,SAASnE,IAG1BnQ,QAAQC,IAAIq5C,GAEZ,IAAIz6B,EAAOzX,aAAaC,QAAQ,uBAC5B0sE,EAA8B,GACrB,OAATl1D,IACAk1D,EAAsBl1D,GAG1B,IAAIE,EAAO3X,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAATyb,IACAzb,EAAKyb,GAGT,IAAIgnC,EAAO3+C,aAAaC,QAAQ,gBAC5BqiB,EAAuB,GACd,OAATq8B,IACAr8B,EAAeq8B,GAGnB,IAAI2tB,EAAOtsE,aAAaC,QAAQ,iBAC5BuiB,EAAwB,GACf,OAAT8pD,IACA9pD,EAAgB8pD,GAGpB,IAAIztB,EAAO7+C,aAAaC,QAAQ,qBAC5Bu2B,EAA4B,GACnB,OAATqoB,IACAroB,EAAoBqoB,GAGxB,IAAIC,EAAO9+C,aAAaC,QAAQ,cAC5B2U,EAAqB,GACZ,OAATkqC,IACAlqC,EAAakqC,GAGjB,IAAIC,EAAO/+C,aAAaC,QAAQ,YAC5B4U,EAAmB,GACV,OAATkqC,IACAlqC,EAAWkqC,GAGf,IAAIC,EAAOh/C,aAAaC,QAAQ,gBAC5B0yC,EAAuB,GACd,OAATqM,IACArM,EAAeqM,GAGnB,IAAIjG,EAAO/4C,aAAaC,QAAQ,mBAC5B+kB,EAA0B,GACjB,OAAT+zB,IACA/zB,EAAkB+zB,GA7EkB,IAiFhC5hC,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAakxD,GAAmB35D,EAAUhE,OAInD,CAACgE,EAAUhE,EAAIwc,EAAc3Y,IAGhC2I,qBAAU,WACNxI,EAASmQ,GAAkB,gBAAY,OACxC,CAAClW,EAAK+V,KAAMhQ,IAEf,IAAMsD,EAAUC,cAMhB,SAAS27C,IACL,IAAMljD,EAAK8F,IAAMqC,QAAQ,uEAAwC,CAC7DlC,SAAUH,IAAMI,SAASC,aAE7B0vC,EAAa/nC,KAAI,SAAC3B,EAAK8B,GACnB,OAAOjK,ECtJZ,SAAS0sE,EAAwB9rE,GACpC,IAAIK,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,+BACkE,CAC3DhG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS0sE,EAAwB9rE,OAU5CT,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,MAEfI,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aDmHA+zE,CAAwB,CACpC19D,WAAY7G,EAAIjM,MAChB81C,WAAYA,QAIpBlwC,IAAM9I,OAAOgD,EAAI,CAAE+F,OAAQ,gEAAsC5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACpJC,YAAW,WAfXiB,EAAQI,KADA,eAkBL,KA7IiC,MAgJAnI,mBAAgB,IAhJhB,mBAgJjCs2C,EAhJiC,KAgJnBwB,EAhJmB,KAwJxC,OANA36C,QAAQC,IAAIk5C,GAOR56B,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KACL,kBAAC,IAAD,MACA,yBAAKxH,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,uDACX,uBAAGA,UAAU,sBAAsB41C,KAG3C,yBAAK51C,UAAU,OACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,YACX,uBAAGA,UAAU,iBAAb,gDAA+CulB,KAGvD,yBAAKvlB,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,iBAAb,uBAAwCylB,KAGhD,yBAAKzlB,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,iBAAb,wCAAiDy5B,MAK7D,yBAAKz5B,UAAU,qBACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,YACX,uBAAGA,UAAU,YAAb,0CAA4C6X,KAGpD,yBAAK7X,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,YAAb,oCAA6C8X,KAGrD,yBAAK9X,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,YAAb,sDAAmDioB,OAKnE,yBAAKjoB,UAAU,OACX,yBAAKA,UAAU,4BACX,wCACA,kBAACo1C,GAAD,CAAan2C,SAAUi3C,EAAc72C,MAAO,GAAIm2C,YA/D5E,SAA4Bn2C,GACxBm3C,EAAgBn3C,QAiEA,yBAAKW,UAAU,yCAAyCb,GAAG,uBACvD,4BAAQa,UAAU,4BAA4Bb,GAAG,6BAA6B8H,QAAS,kBAAMo7C,MACzF,uBAAGriD,UAAU,mBADjB,gCASZ,yBAAKA,UAAU,MAAMb,GAAG,uBACpB,yBAAKa,UAAU,oEACX,4BAAQA,UAAU,4BAA4Bb,GAAG,8BAA8B8H,QAAS,WAnNxG8hB,GAAYD,KAoNQ,kBAAC,KAAD,CAAY3pB,GAAG,cAAcqI,MAAM,YADvC,yBAOJ,WACI,IAAgB,IAAZshB,EACA,OACI,yBAAK9oB,UAAU,uBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,kBAEJ,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,YAAYuiD,wBAAyB,CAAEC,OAAQotB,OARlF,K,UEzPb,SAASE,GAAgC3wE,EAAYiO,GACxD,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,wCACmElE,GAAM,CAClE9B,OAAQ,SACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS2sE,GAAgC3wE,EAAIiO,OAUxD9J,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZkB,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,2EAA2C5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,SAG7JpB,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,2EAA2C5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACxJ1J,QAAQC,IAAI,aCzB5B,IAuNei0E,GAvNY,WACvB,IAAM5sE,EAA0BqD,cAC1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzEJ,EAA+DjL,aAAY,SAACC,GAAD,OAAuBA,EAAMgL,gCAC1G7G,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAGT,IAAIlH,EAAiB7B,aAAaC,QAAQ,kBACtC4P,EAA0B,GAC1B1K,EAAmB,GACA,OAAnBtD,IACAgO,EAAgBhO,EAAeuD,MAAM,KACrCD,EAAW0K,EAAc,IAfA,IAkBrBsH,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAqDzC,OApDAyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAWI,gBAAb+H,EACAwD,wBAAaqG,GAAmC9O,EAAUhE,IAE1DyM,wBAAa+G,GAAqCxP,EAAUhE,OAKzE,CAACgE,EAAUhE,EAAIwc,EAAc3Y,EAAeoF,IAE/CuD,qBAAU,WACNxI,EAASmQ,GAAkB,mBAAY,OACxC,CAAClW,EAAK+V,KAAMhQ,IAWE,gBAAbiF,EAEIgS,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACH,kBAAC,IAAD,MACA,yBAAKxH,UAAU,OACf,yBAAKA,UAAU,aACf,2BAAOA,UAAU,SACb,+BACI,4BACI,6BACA,sCACA,wCACA,qCACA,sCACA,uDACA,2CAGR,+BAEI6S,EAA6BE,QAAQ9F,KAAI,SAACsD,EAAKK,GAC3C,OACI,wBAAIA,IAAKA,GACT,4BAAI,uBAAG5Q,UAAU,qBAAqBiH,QAAS,WAC3C,IAAMmG,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAC9DlC,SAAUH,IAAMI,SAASC,aAE7BnC,EAAS2sE,GAAgCv/D,EAAKpR,GAAIiO,MAJlD,MAMJ,4BAAKmD,EAAKgC,aACV,4BAAI,yBAAKrL,IAAKqJ,EAAK8B,SAAU9K,MAAO,CAAC0Q,MAAM,QAAQD,OAAO,QAAS7Q,IAAI,MACvE,4BAAKoJ,EAAK6B,cACV,4BAAK7B,EAAKkC,MAAV,QACA,4BACQ,0BAAMzS,UAAU,gBAAhB,MAER,4BAAkB,EAAbuQ,EAAKkC,MAAV,YAMZ,4BACI,wBAAIu9D,QAAS,GAAb,uBACA,4BAAKn9D,EAA6BE,QAAQoP,QAAO,SAAC2jB,EAAMC,GAAP,OAAgBD,GAAsB,EAAbC,EAAKtzB,OAAc,KAAI,GAAjG,OAEJ,4BACI,wBAAIu9D,QAAS,IACb,4BACI,4BAAQhwE,UAAU,4BAA4Bb,GAAG,8BAA8B8H,QAAS,YAnEhH,WACI,IAAI3L,EAAgB,GACpBuX,EAA6BE,QAAQ9F,KAAI,SAAC3B,EAAK8B,GAC3C,OAAO9R,EAAIuL,KAAKyE,EAAInM,OAExBtD,QAAQC,IAAI,MAAOR,GACnBF,aAASyX,EAA6BE,QAAQoP,QAAO,SAAC2jB,EAAMC,GAAP,OAAgBD,GAAsB,EAAbC,EAAKtzB,OAAc,KAAI,GAAInX,GA6DU20E,KAC3F,kBAAC,KAAD,CAAY9wE,GAAG,cAAcqI,MAAM,YADvC,wBAkBhB4S,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KACH,kBAAC,IAAD,MACA,yBAAKxH,UAAU,OACf,yBAAKA,UAAU,aACf,2BAAOA,UAAU,SACb,+BACI,4BACI,6BACA,sCACA,wCACA,qCACA,sCACA,uDACA,2CAGR,+BAEI6S,EAA6BE,QAAQ9F,KAAI,SAACsD,EAAKK,GAC3C,OACI,wBAAIA,IAAKA,GACT,4BAAI,uBAAG5Q,UAAU,qBAAqBiH,QAAS,WAC3C,IAAMmG,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAC9DlC,SAAUH,IAAMI,SAASC,aAE7BnC,EAAS2sE,GAAgCv/D,EAAKpR,GAAIiO,MAJlD,MAMJ,4BAAKmD,EAAKgC,aACV,4BAAI,yBAAKrL,IAAKqJ,EAAK8B,SAAU9K,MAAO,CAAC0Q,MAAM,QAAQD,OAAO,QAAS7Q,IAAI,MACvE,4BAAKoJ,EAAK6B,cACV,4BAAK7B,EAAKkC,MAAV,QACA,4BACQ,0BAAMzS,UAAU,gBAAhB,MAER,4BAAkB,EAAbuQ,EAAKkC,MAAV,YAMZ,4BACI,wBAAIu9D,QAAS,GAAb,uBACA,4BAAKn9D,EAA6BE,QAAQoP,QAAO,SAAC2jB,EAAMC,GAAP,OAAgBD,GAAsB,EAAbC,EAAKtzB,OAAc,KAAI,GAAjG,a,SCtBTy9D,GAnLwB,WACnC,IAAM/sE,EAA0BqD,cAC1B8wC,EAAmE1vC,aAAY,SAACC,GAAD,OAAuBA,EAAMyvC,kCAC5GK,EAA+C/vC,aAAY,SAACC,GAAD,OAAuBA,EAAM8vC,uBACxFp6B,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SACnE1hB,QAAQC,IAAIyhB,EAAM8L,UAClBxtB,QAAQC,IAAI67C,EAAoBG,iBAChC,IAAM16C,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAE3E6H,EAAO7X,aAAaC,QAAQ,YAC5BwnE,EAAmB,EACV,OAAT5vD,IACA4vD,EAAWv6D,SAAS2K,IAGxB,IAAI6hD,EAAsC,CACtCxqD,WAAY,EACZC,aAAc,GACd+M,WAAY,EACZkG,aAAc,GACd8vB,WAAY,EACZS,aAAc,GACdiD,sBAAuB,EACvBC,SAAU,GACVrB,MAAO,EACPlqC,KAAM,IAEVgQ,EAAM8L,SAASpc,KAAI,SAAC3B,EAAK8B,GACrB,OAAOkqC,EAA+BE,4BAA4BvqC,KAAI,SAACmrB,EAAShrB,GAI5E,OAHIgrB,EAAQjmB,aAAeu4D,IACvB/N,EAASvkC,GAENA,QAIf,IAAI+3C,EAAkC,CAClChxE,GAAI,EACJgT,WAAY,EACZC,aAAc,GACd+iC,WAAY,EACZS,aAAc,GACdztB,UAAW,GACXO,YAAa,GACbC,YAAa,IAEjBgvB,EAAoBG,gBAAgB7qC,KAAI,SAACmrB,EAAShrB,GAI9C,OAHIgrB,EAAQjmB,aAAeu4D,IACvByF,EAAc/3C,GAEXA,KAlD8B,IAqDjChe,EAAsBC,+BAAtBD,kBAEJM,EAAOzX,aAAaC,QAAQ,cAC5BiyC,EAAa,EAEJ,OAATz6B,IACAy6B,EAAahlC,SAASuK,IAG1B,IAAIE,EAAO3X,aAAaC,QAAQ,gBAOhC,IAAI8I,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAGT,IACIokE,EAAwB,EACf,QAFTt1D,EAAO7X,aAAaC,QAAQ,oBAG5BktE,EAAgBj1D,WAAWL,IAG/B,IAAIknC,EAAO/+C,aAAaC,QAAQ,oBAC5BmtE,EAA2B,GAClB,OAATruB,IACAquB,EAAmBruB,GAIvB,IAAIrmC,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBA2CzC,OA1CAyI,qBAAU,WAEN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OASbuL,wBAAakxD,GAAmB35D,EAAUhE,IAC1CyM,wBAAaiuC,GAA8B12C,EAAUgyC,IACrDvpC,wBAAa+sC,GAAyCx1C,EAAUgyC,KAGxEhyC,EAASmQ,GAAkB,WAAY,oBACxC,CAACnQ,EAAUwY,EAAc3Y,EAAemyC,EAAYh2C,IAGvDwM,qBAAU,WACNxI,EAASmQ,GAAkB,gBAAY,oBACxC,CAAClW,EAAK+V,KAAMhQ,IAIXiX,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KAEL,yBAAKxH,UAAU,OACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,iCAAoFw9D,EAAOvqD,eAE/F,yBAAKpS,UAAU,eAAekH,IAAKipE,EAAYhoD,UAAWhhB,IAAI,MAElE,yBAAKnH,UAAU,qBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,kCAEJ,yBAAKa,UAAU,aACX,kBAAC,KAAD,CAAqBX,MAAuB,GAAhB+wE,EAAoB18D,KAAI,UAAK08D,KAD7D,QAMZ,yBAAKpwE,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,qBAEJ,yBAAKa,UAAU,aACVqwE,QCzLpBC,I,OAAyB,kBACzBC,GAA0B,kBAC1BC,GAA4B,oBAE5BC,GAAyC,iCACzCC,GAAwC,gCACxC/uE,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBAC3BmwE,GAAgC,wBAChCC,GAA6B,qBAQnC,SAAS7uE,GAAiB8uE,GAC7B,MAAO,CACHvxE,KAAMiB,GACNswE,cAID,SAAS5uE,GAAepD,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UAIZ,SAASiyE,GAAkBD,GAC9B,MAAO,CAAEvxE,KAAMsxE,GAAoBC,WAAYA,GAG5C,SAASE,KACZ,MAAO,CAAEzxE,KAAMqxE,IAGZ,SAASK,GAAcH,GAC1B,MAAO,CAAEvxE,KAAMgxE,GAAgBO,WAAYA,GCvCxC,SAASI,GAAcltE,EAAW5E,GACrC,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,4BACuDlE,GAAM,CACtD9B,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS8tE,GAAcltE,EAAM5E,OAUxCmE,MAAM,SAAAyM,ICnBZ,SAASmhE,EAAc/tE,GAC1B,IAAIiB,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,oBACmD,CAChDhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS+tE,EAAc/tE,OAUlCG,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAAS4tE,MACTl1E,QAAQC,IAAIiI,EAAKhG,KAAKozE,gBACtBptE,EAAKhG,KAAKozE,eAAelkE,KAAI,SAAC3B,EAAU4B,GACpC,IAAI2jE,EAAyB,CACzB1xE,GAAImM,EAAInM,GACRkhB,MAAO/U,EAAI+U,MACXlO,WAAY7G,EAAI6G,WAChB61B,eAAgB18B,EAAI08B,eACpB1iB,UAAWha,EAAIga,UACf/S,YAAajH,EAAIiH,YACjBH,aAAc9G,EAAI8G,aAClB0uB,WAAYx1B,EAAIw1B,WAChB2H,aAAcn9B,EAAIm9B,aAClBhlC,OAAQ6H,EAAI7H,OACZilB,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAGrB,OACWxlB,EADG,IAAV+J,EACgB4jE,GAAkBD,GAGlBG,GAAcH,UAIzC1sE,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YDtCZo1E,CAAc/tE,MAEjBgB,OAAM,SAAAtF,GACHhD,QAAQC,IAAI,aEyGbs1E,OA9Ff,SAAwB3yE,GACpB,IAAM0E,EAA0BqD,cAC1B6qE,EAAgCzpE,aAAY,SAACC,GAAD,OAAuBA,EAAMwpE,eAE3EvqD,EAAiB,GAEjBuqD,EAAYA,YAAYvxE,OAAS,GACjCuxE,EAAYA,YAAYpkE,KAAI,SAAC3B,EAAK8B,GAC9B,OAAO0Z,EAAIjgB,KAAK,CACZ1H,GAAImM,EAAInM,GACRgT,WAAY7G,EAAI6G,WAChB2uB,WAAYx1B,EAAIw1B,WAChBr9B,QAAQ,OAgBpB5H,QAAQC,IAAIgrB,GAEZ,IAAMwqD,EAAyCD,EAAYA,YAAYpkE,KAAI,SAACy9C,EAAUx9C,GAElF,OAAKw9C,EACG,wBAAI1qD,UAAS,aACjB4Q,IAAG,iBAAY1D,IACf,wBAAIya,MAAM,MAAM3nB,UAAU,cAAckN,EAAQ,GAChD,wBAAIlN,UAAU,cAAc0qD,EAASt4C,cACrC,wBAAIpS,UAAU,cAAc0qD,EAASrqC,OACrC,wBAAIrgB,UAAU,cAAc0qD,EAASn4C,aACrC,wBAAIvS,UAAU,cAAc0qD,EAAS1iB,gBACrC,4BACI,2BAAO1oC,KAAK,WAAWC,SAAU,SAACnB,GAxB9C,IAA8De,IAwBSurD,EAASvrD,GAvB5E2nB,EAAI7Z,KAAI,SAAC3B,EAAK8B,GAIV,OAHI9B,EAAInM,KAAOA,IACXmM,EAAI7H,QAAU6H,EAAI7H,QAEf6H,KAGXzP,QAAQC,IAAIgrB,QAOY,QA8B5B,OACI,kBAAC,WAAD,KACI,yBAAK9mB,UAAU,4BACX,2BAAOA,UAAU,SACb,2BAAOb,GAAG,iCACN,4BACI,wBAAIwoB,MAAM,MAAM3nB,UAAU,kBAA1B,KACA,wBAAI2nB,MAAM,MAAM3nB,UAAU,kBAA1B,wBACA,wBAAI2nB,MAAM,MAAM3nB,UAAU,kBAA1B,SACA,wBAAI2nB,MAAM,MAAM3nB,UAAU,kBAA1B,oBACA,wBAAI2nB,MAAM,MAAM3nB,UAAU,kBAA1B,aACA,wBAAI2nB,MAAM,MAAM3nB,UAAU,kBAA1B,yBAGR,+BACKsxE,EACD,wBAAItxE,UAAS,cACT,4BACIA,UAAU,uBACVb,GAAG,gBACH8H,QAAS,WAnCjC6f,EAAI7Z,KAAI,SAAC3B,EAAK8B,GACV,OAAOjK,EAAS8tE,GAAc,CAC1B9+D,WAAY7G,EAAI6G,WAChB2uB,WAAYx1B,EAAIw1B,WAChBr9B,OAAQ6H,EAAI7H,QACb6H,EAAInM,QAGX8F,IAAMssE,QAAQ,wCAAyB,CACnCnsE,SAAUH,IAAMI,SAASC,WACzBC,UAAW,QAsBK,kBCjHrB,SAASisE,GAAuBruE,EAAehE,GAClD,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,oCAC2DlE,GAAM,CAC9D9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASquE,GAAuBruE,EAAUhE,OAUrDmE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAAS4tE,MACTl1E,QAAQC,IAAIiI,EAAKhG,KAAKozE,gBACtBptE,EAAKhG,KAAKozE,eAAelkE,KAAI,SAAC3B,EAAU4B,GACpC,IAAI2jE,EAAyB,CACzB1xE,GAAImM,EAAInM,GACRgT,WAAY7G,EAAI6G,WAChBkO,MAAO/U,EAAI+U,MACX2nB,eAAgB18B,EAAI08B,eACpB1iB,UAAWha,EAAIga,UACf/S,YAAajH,EAAIiH,YACjBH,aAAc9G,EAAI8G,aAClB0uB,WAAYx1B,EAAIw1B,WAChB2H,aAAcn9B,EAAIm9B,aAClBhlC,OAAQ6H,EAAI7H,OACZilB,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAGrB,OACWxlB,EADG,IAAV+J,EACgB4jE,GAAkBD,GAGlBG,GAAcH,UAIzC1sE,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YC5D5B,ICcY21E,GD4EGC,GA1Fc,WAAO,IAC1Bt3D,EAAsBC,+BAAtBD,kBAEFjX,EAA0BqD,cAE5BwF,EAAO/I,aAAaC,QAAQ,cAC5B49B,EAAqB,EACZ,OAAT90B,IACF80B,EAAa3wB,SAASnE,IAGxB,IAAI2P,EAAe1Y,aAAaC,QAAQ,gBAClCF,EAAgBC,aAAaC,QAAQ,iBAgC3C,OA/BEyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAOfuL,wBAAa4lE,GAAuBruE,EAAU29B,IAGpD39B,EAASmQ,GAAkB,sBAAa,OACzC,CAACnQ,EAAUwY,EAAc3Y,EAAe89B,IAG3C1mB,EACE,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KAGP,kBAAC,IAAD,MACA,yBAAKxH,UAAU,OACb,kBAAC,GAAD,CAAS6K,MAAM,gBAAW6I,KAAI,GAAM9I,KAAK,OAAO6I,MAAM,YACtD,kBAAC,GAAD,CAAS5I,MAAM,yBAAoB6I,KAAI,GAAM9I,KAAK,OAAO6I,MAAM,aAWjE,yBAAKzT,UAAU,OACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,mBAAmBb,GAAG,gBACnC,yBAAKa,UAAU,oBACb,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,+BAEF,yBAAKa,UAAU,aACb,kBAAC,GAAD,a,SChEJyxE,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,mBC0FGnD,OAzGf,SAAwB7vE,GACpB,IAAMmtE,EAAyChkE,aAAY,SAACC,GAAD,OAAuBA,EAAM+jE,oBADzB,EAG7BltE,mBAAS,GAHoB,mBAGxDw9C,EAHwD,KAG7CC,EAH6C,OAIjCz9C,mBAA4B,IAJK,mBAI/C+/C,GAJ+C,WAK/D9yC,qBAAU,WACN,IAAIwL,GAAKy0D,EAAiBpnB,aAAa1kD,OAAS8rE,EAAiBpnB,aAAa1kD,OAAS,IAAK,GAExF2+C,EADM,IAANtnC,EACWy0D,EAAiBpnB,aAGjBonB,EAAiBpnB,aAAa1iC,MAAM,EAAE,KAGpDq6B,EAAchlC,EAAE,KAClB,CAACy0D,EAAiBpnB,eAYrB,IAAM/9C,EAAUC,cACVmK,EAAc,SAACy6D,GAEnBroE,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAcsnE,EAAgBnsD,WAAWvjB,YAC9DqH,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAcsnE,EAAgBn5D,WAAWvW,YAC9DqH,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAYsnE,EAAgBnsE,GAAGvD,YACpDqH,aAAaY,WAAW,eACxBZ,aAAae,QAAQ,cAAesnE,EAAgB/4D,aACpDtP,aAAaY,WAAW,kCACxBZ,aAAae,QAAQ,iCAAkCsnE,EAAgBE,+BAA+B5vE,YACtG6K,EAAQI,KAAK,CACTmB,SAZO,qBAgBf,OACE,kBAAC,WAAD,KAEQ4jE,EAAiBpnB,aAAav3C,KAAI,SAAC0M,EAASzM,GACxC,OACI,oCACI,yBAAKlN,UAAU,oBAAoB4Q,IAAG,iBAAY+I,EAAQxa,IAAM8H,QAAS,WAAQ4J,EAAY8I,KACzF,yBAAK3Z,UAAU,UACX,yBAAKA,UAAU,kBACX,gDACA,4BAAK2Z,EAAQpH,aACb,uBAAGjG,KAAK,MAAR,iCAA8B,uBAAGtM,UAAU,2BAE/C,yBAAKA,UAAU,eACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,aACf,0BAAMA,UAAU,iBACX2Z,EAAQ8xD,cADb,IAC6B9xD,EAAQ8xD,cADrC,eAIJ,4BAAK9xD,EAAQvH,cACb,gDAAgBuH,EAAQ0L,cACxB,4BAAQrlB,UAAU,QAAQiH,QAAS,WAAQ4J,EAAY8I,KAAvD,oBAKZ,yBAAK3Z,UAAU,8CACnB,6BACI,wBAAIA,UAAU,cACd,wBAAIA,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,WAAW1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBACtE,0BAAM43C,cAAY,QAAlB,UAIAxjB,MAAMC,KAAKD,MAAOygB,GAAY3kC,QAAQtK,KAAI,SAAC3B,EAAK8B,GAC5C,OACI,wBAAIpN,UAAU,aAAY,uBAAGA,UAAU,YAAYsM,KAAK,IAAIrF,QAAS,SAAC7I,GAlE1G,IAA0B8gD,EAmEc9gD,EAAEiJ,iBAnEhB63C,EAoE+B5zC,EAnErDzP,QAAQC,IAAIojD,GAERT,EADAS,IAAUhD,EACC0vB,EAAiBpnB,aAAa1iC,MAAY,GAANo9B,GAGpC0sB,EAAiBpnB,aAAa1iC,MAAY,GAANo9B,EAAe,GAANA,EAAW,OA8DV5zC,EAAI,OAI7C,wBAAItL,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,OAAO1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBAClE,0BAAM43C,cAAY,QAAlB,mBC8BrBmvB,OAzHf,SAAyB3vE,GACvB,IAAMmtE,EAAyChkE,aAAY,SAACC,GAAD,OAAuBA,EAAM+jE,oBADtB,EAG9BltE,mBAAS,GAHqB,mBAGzDw9C,EAHyD,KAG9CC,EAH8C,OAIlCz9C,mBAA4B,IAJM,mBAIhD+/C,GAJgD,WAKhE9yC,qBAAU,WACN,IAAIwL,GAAKy0D,EAAiBnnB,cAAc3kD,OAAS8rE,EAAiBnnB,cAAc3kD,OAAS,IAAK,GAE1F2+C,EADM,IAANtnC,EACWy0D,EAAiBnnB,cAGjBmnB,EAAiBnnB,cAAc3iC,MAAM,EAAE,KAGrDq6B,EAAchlC,EAAE,KAClB,CAACy0D,EAAiBnnB,gBAYvB,IAAMh+C,EAAUC,cACVmK,EAAc,SAACy6D,GAEnBroE,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAcsnE,EAAgBnsD,WAAWvjB,YAC9DqH,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAcsnE,EAAgBn5D,WAAWvW,YAC9DqH,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAYsnE,EAAgBnsE,GAAGvD,YACpD6K,EAAQI,KAAK,CACTmB,SARO,6BA4Bb,OACE,kBAAC,WAAD,KAEQ4jE,EAAiBnnB,cAAcx3C,KAAI,SAAC0M,EAASzM,GACzC,OAAgB,OAAZyM,QAAgC0B,IAAZ1B,EACb,KAGP,oCACI,yBAAK3Z,UAAU,oBAAoB4Q,IAAG,iBAAY+I,EAAQxa,IAAM8H,QAAS,WAAQ4J,EAAY8I,KACzF,yBAAK3Z,UAAU,UACX,yBAAKA,UAAU,kBACX,gDACA,4BAAK2Z,EAAQpH,aACb,uBAAGjG,KAAK,MAAR,iCAA8B,uBAAGtM,UAAU,2BAE/C,yBAAKA,UAAU,eACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,aACf,0BAAMA,UAAU,iBACX2Z,EAAQ+xD,sBADb,IACqC/xD,EAAQ8xD,cAD7C,eAIJ,4BAAK9xD,EAAQvH,cACb,gDAAgBuH,EAAQ0L,cACxB,uBAAGrlB,UAAU,QAAb,yCAAuC2Z,EAAQ4xD,sBAAsBhuB,WAAW,IAAK,MACrF,4BAAQv9C,UAAU,QAAQiH,QAAS,WAAQ4J,EAAY8I,KAAvD,oBAKZ,yBAAK3Z,UAAU,8CACnB,6BACI,wBAAIA,UAAU,cACd,wBAAIA,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,WAAW1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBACtE,0BAAM43C,cAAY,QAAlB,UAIAxjB,MAAMC,KAAKD,MAAOygB,GAAY3kC,QAAQtK,KAAI,SAAC3B,EAAK8B,GAC5C,OACI,wBAAIpN,UAAU,aAAY,uBAAGA,UAAU,YAAYsM,KAAK,IAAIrF,QAAS,SAAC7I,GAlF1G,IAA0B8gD,EAmFc9gD,EAAEiJ,iBAnFhB63C,EAoF+B5zC,EAnFrDzP,QAAQC,IAAIojD,GAERT,EADAS,IAAUhD,EACC0vB,EAAiBnnB,cAAc3iC,MAAY,GAANo9B,GAGrC0sB,EAAiBnnB,cAAc3iC,MAAY,GAANo9B,EAAe,GAANA,EAAW,OA8EX5zC,EAAI,OAI7C,wBAAItL,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,OAAO1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBAClE,0BAAM43C,cAAY,QAAlB,mBCoFrB0yB,GA1LgB,WAC3B,IAAMxuE,EAA0BqD,cAC1BolE,EAAyChkE,aAAY,SAACC,GAAD,OAAuBA,EAAM+jE,oBAClFxuE,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzEoyC,EAAgCumB,EAAiBnnB,cAAc3kD,OAC/DwlD,EAA+BsmB,EAAiBpnB,aAAa1kD,OAC/DkM,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GATwB,IAWzBoO,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAmCzC,SAAS0uE,EAAuBtG,GrCsC7B,IAA8BjsE,EqCrC7B8D,ErCAD,SAAmCmoE,GACtC,MAAO,CAAEhsE,KAAMqkD,GAAiC2nB,gBAAiBA,GqCDpD9lB,CAA0B8lB,IACnCnoE,GrCoC6B9D,EqCpCCoyE,GAAiCp7D,KrCqC5D,CAAE/W,KAAMqC,GAAwBtC,MAAOA,KqCzE9CsM,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAay/D,GAAkBloE,EAAShE,OAGjD,CAACgE,EAAUhE,EAAIwc,EAAc3Y,IAEhC2I,qBAAU,WACNxI,EAASmQ,GAAkB,mBAAY,OACxC,CAAClW,EAAK+V,KAAMhQ,IA/CkB,MAsDHzE,oBAAS,GAtDN,mBAsD1BoqB,EAtD0B,KAsDjBC,EAtDiB,OAuDGrqB,mBAAS,IAvDZ,mBAuD1B4tB,EAvD0B,KAuDdC,EAvDc,KAyDjC,OACInS,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KAIH,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,sCAAoB6I,KAAI,UAAK2xC,GAAyBz6C,KAAK,OAAO6I,MAAM,YACvF,kBAAC,GAAD,CAAS5I,MAAM,uCAAkB6I,KAAI,UAAK4xC,GAAwB16C,KAAK,OAAO6I,MAAM,aAUpG,yBAAKzT,UAAU,MAAMb,GAAG,cACxB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,2BAAOV,KAAK,OAAOH,GAAG,QAAQa,UAAU,eAAeE,YAAY,mBAAWX,SAAU,SAACC,GACrF+sB,EAAc/sB,EAAMC,OAAOJ,OAC3BxD,QAAQC,IAAIwwB,OAGpB,4BAAQhtB,KAAK,SAASU,UAAU,mBAC5B,uBAAGA,UAAU,sBAMb,yBAAKA,UAAU,OACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,WAAW8H,QAAS,YACxC,IAAZ6hB,GACAC,GAAW,IAEhBxhB,MAAO,CACNC,MAAOshB,EAAU,UAAY,YALjC,sBAOA,yBAAKvhB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBnB,EAAU,UAAY,cAG/C,yBAAK9oB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACzC,IAAZ6hB,GACAC,GAAW,IAGfxhB,MAAO,CACHC,MAAOshB,EAAU,UAAY,YANrC,uBAQA,yBAAKvhB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBnB,EAAU,UAAY,gBAQ3B,IAAZA,EAEI,kBAAC,WAAD,KACI,yBAAK9oB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oCACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,kCAEJ,yBAAKa,UAAU,aACX,kBAAC,GAAD,CACIuf,SAAUqyD,EAAwBvyE,MAAOitB,SAWjE,kBAAC,WAAD,KACI,yBAAKtsB,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,kCAEJ,yBAAKa,UAAU,aACX,kBAAC,GAAD,CACIuf,SAAUqyD,EAAwBvyE,MAAOitB,WC1LhFulD,I,OAAyB,kBACzBC,GAA0B,kBAC1BC,GAA4B,oBAE5BC,GAAyC,iCACzCC,GAAwC,gCACxCtwE,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBAC3B0xE,GAAgC,wBAChCC,GAA6B,qBCWnC,SAASC,GAAajvE,EAAehE,GACxC,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,+BACuDlE,GAAM,CACzD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASivE,GAAajvE,EAAUhE,OAU3CmE,MAAM,SAAAS,GACHZ,ED9BL,CACH7D,KAAMiB,GACN8xE,WC4BkCtuE,IAC1BZ,EDbL,CAAE7D,KAAM4yE,KCcHr2E,QAAQC,IAAIiI,EAAKhG,KAAKiqB,SACtBjkB,EAAKhG,KAAKiqB,QAAQ/a,KAAI,SAAC3B,EAAU4B,GAC7B,IAAI4L,EAAoB,CACpB3Z,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrBC,eAAgB5c,EAAI4c,eACpBzV,MAAOnH,EAAImH,MACX0V,UAAW7c,EAAI6c,UACfC,WAAY9c,EAAI8c,WAChBC,WAAY/c,EAAI+c,WAChBC,YAAahd,EAAIgd,YACjBC,aAAcjd,EAAIid,aAClBE,WAAYnd,EAAImd,WAChBlD,aAAcja,EAAIia,aAClBE,cAAena,EAAIma,cACnBD,eAAgBla,EAAIka,eACpBlV,MAAOhF,EAAIgF,MACXoY,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAIrB,OADA9sB,QAAQC,IAAIgd,GAED3V,EADG,IAAV+J,ED3CjB,SAA0BmlE,GAC7B,MAAO,CAAE/yE,KAAM6yE,GAAoBE,WAAYA,GC2CXC,CAAiBx5D,GDpClD,SAAsBu5D,GACzB,MAAO,CAAE/yE,KAAMuyE,GAAgBQ,WAAYA,GCsCPE,CAAaz5D,OAGrC3V,EAAS9C,QAEZ8D,OAAM,SAAAtF,GACHsE,ED5DT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UCyDMoD,CAAepD,IACxBhD,QAAQC,IAAI,Y,OC6Hb02E,ICrMHC,GDqMGD,GAxMf,SAAuB/zE,GACnB,IAAMi0E,EAA+B9qE,aAAY,SAACC,GAAD,OAAuBA,EAAM6qE,eACxExjD,EAA2BtnB,aAAY,SAACC,GAAD,OAAuBA,EAAMqnB,aACpE6D,EAAyBnrB,aAAY,SAACC,GAAD,OAAuBA,EAAMkrB,YAClExB,EAA6B3pB,aAAY,SAACC,GAAD,OAAuBA,EAAM0pB,cAJlB,EAMxB7yB,mBAAS,GANe,mBAMnDw9C,EANmD,KAMxCC,EANwC,OAO5Bz9C,mBAAuB,IAPK,mBAOnD05B,EAPmD,KAO1CqmB,EAP0C,KAQpDh4C,EAAUC,cAUhBiF,qBAAU,WACN,IAAIwL,GAAKu7D,EAAYA,YAAY5yE,OAAS4yE,EAAYA,YAAY5yE,OAAS,GAAI,EAE3E2+C,EADM,IAANtnC,EACWu7D,EAAYA,YAGZA,EAAYA,YAAY5wD,MAAM,EAAE,IAG9Cq6B,EAAchlC,EAAE,KAClB,CAACu7D,EAAYA,cAEhB72E,QAAQC,IAAKogD,GA9B6C,MA0C9Bx9C,mBAAS,GA1CqB,mBA0CnDkgB,EA1CmD,KA0C3C8/B,EA1C2C,OA2C5BhgD,mBAAS,GA3CmB,mBA2CnDigD,EA3CmD,KA2C1CC,EA3C0C,OA4C5BlgD,mBAAS,GA5CmB,mBA4CnDmgD,EA5CmD,KA4C1CC,EA5C0C,KAgF1D,OArBAjjD,QAAQC,IAAIs8B,GAsBR,kBAAC,WAAD,KACI,yBAAKp4B,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,sEACX,wBAAIA,UAAU,QAAd,SAAyBo4B,EAAQxZ,QAAO,SAACva,GACzC,MAAoB,KAAhB5F,EAAMY,MACDgF,EAEuB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACxKtiB,EAEF,QACNvE,OARD,sBASA,yBAAKE,UAAU,cACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,QAAhB,kBACA,4BAAQqN,KAAK,OAAOlO,GAAG,OACnBE,MAAOuf,EACPrf,SArDpC,SAAsBnB,GAClBsgD,EAAUtgD,EAAEqB,OAAOJ,SAuDiB6vB,EAAUC,SAASliB,KAAI,SAAC3B,EAAK8B,GACzB,OACI,4BAAQ/N,MAAOiM,EAAInM,IAAKmM,EAAI+B,UAK5C,4BAAQA,KAAK,OAAOlO,GAAG,OAAOa,UAAU,OACpCX,MAAOs/C,EACPp/C,SA7DpC,SAAuBnB,GACnBwgD,EAAWxgD,EAAEqB,OAAOJ,SA+DgB0zB,EAASC,QAAQ/lB,KAAI,SAAC3B,EAAK8B,GACvB,OACI,4BAAQ/N,MAAOiM,EAAInM,IAAKmM,EAAI+B,UAK5C,4BAAQA,KAAK,OAAOlO,GAAG,OAAOa,UAAU,OACpCX,MAAOw/C,EACPt/C,SArEpC,SAAuBnB,GACnB0gD,EAAW1gD,EAAEqB,OAAOJ,SAuEgBkyB,EAAWC,UAAUvkB,KAAI,SAAC3B,EAAK8B,GAC3B,OACI,4BAAQ/N,MAAOiM,EAAInM,IAAKmM,EAAI+B,UAK5C,4BAAQrN,UAAU,0CAA0CV,KAAK,SAAS2H,QAAS,kBAzEnH,WACIpL,QAAQC,IAAI8iB,GACZ/iB,QAAQC,IAAI6iD,GACZ9iD,QAAQC,IAAI+iD,GACZ,IAAIpC,EAAIi2B,EAAYA,YAAY9zD,QAAO,SAACtT,EAAK8B,GAAN,YAC/BiO,IAAR/P,GAAqBA,EAAIgd,aAAe1J,GAAUtT,EAAImd,YAAck2B,GAAWrzC,EAAIid,cAAgBs2B,KAG/F1nC,GAAKslC,EAAE38C,OAAU28C,EAAE38C,OAAU,GAAK,EAElC2+C,EADM,IAANtnC,EACWslC,EAGAA,EAAE36B,MAAM,EAAG,IAE1Bq6B,EAAchlC,EAAI,GA0DmG4nC,KAAzF,eAAkH,uBAAG/+C,UAAU,sBAMnJ,yBAAKA,UAAU,YAEPo4B,EAAQxZ,QAAO,SAACva,GACZ,MAAoB,KAAhB5F,EAAMY,MACDgF,EAEuB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACxKtiB,EAEF,QACN4I,KAAI,SAAC3B,EAAK4B,GACX,OACI,yBAAKlN,UAAU,WAAWiH,QAAS,YA/I3C,SAAC6R,GACjB7V,aAAaY,WAAW,aACxBZ,aAAae,QAAQ,YAAa8U,EAAO3Z,GAAGvD,YAE5C6K,EAAQI,KAAK,CACTmB,SAFO,8BA4IuD6I,CAAYvF,KAClD,yBAAKtL,UAAU,8CACX,yBAAKA,UAAU,qCAAoC,yBAAKkH,IAAKoE,EAAI6c,UAAWlQ,MAAM,OAAO9Q,IAAI,MAC7F,wBAAInH,UAAU,QAAQsL,EAAI+B,MAAU,0BAAMrN,UAAU,gCAAgCsL,EAAIma,cAApD,MAA0Ena,EAAIia,aAA9E,MAAmGja,EAAIka,gBAAsB,0BAAMxlB,UAAU,gBAAhB,+CAAqDsL,EAAIgF,MAAzD,cACjK,yBACItQ,UAAU,wCACV,6BAAK,uBAAGA,UAAU,qBAAuB,0BAAMA,UAAU,QAAhB,WAA6BsL,EAAImH,MAAjC,SACzC,yBAAKzS,UAAU,sCACX,yBAAKA,UAAU,YAAW,yBAAKA,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,mCAAmCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,QAAa,0BAAMjY,UAAU,QAAhB,cAQ/U,yBAAKA,UAAU,8CACX,6BACI,wBAAIA,UAAU,cACd,wBAAIA,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,WAAW1yC,KAAK,sBAAsBrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBACxF,0BAAM43C,cAAY,QAAlB,UAIAxjB,MAAMC,KAAKD,MAAOygB,GAAY3kC,QAAQtK,KAAI,SAAC3B,EAAK8B,GAC5C,OACI,wBAAIpN,UAAU,aAAY,uBAAGA,UAAU,YAAYsM,KAAK,sBAAsBrF,QAAS,SAAC7I,GAnJ5H,IAA0B8gD,EAoJc9gD,EAAEiJ,iBApJhB63C,EAqJ+B5zC,EApJrDzP,QAAQC,IAAIojD,GAERT,EADAS,IAAUhD,EACCw2B,EAAYA,YAAY5wD,MAAY,EAANo9B,GAG9BwzB,EAAYA,YAAY5wD,MAAY,EAANo9B,EAAc,EAANA,EAAU,MA+IF5zC,EAAI,OAI7C,wBAAItL,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,OAAO1yC,KAAK,sBAAsBrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBACpF,0BAAM43C,cAAY,QAAlB,gBEnFrB0zB,GAtGoB,WAC/B,IAAMxvE,EAA0BqD,cAE1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAC3EjH,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAP4B,IAU7BoO,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAUbuL,wBAAawmE,GAAajvE,EAAUhE,IACpCyM,wBAAaqkB,GAAW9sB,IACxByI,wBAAaqnB,GAAU9vB,IACvByI,wBAAa0mB,GAAYnvB,QAIlC,CAACA,EAAUhE,EAAIwc,EAAc3Y,IAEhC2I,qBAAU,WACNxI,EAASmQ,GAAkB,iBAAY,OACxC,CAAClW,EAAK+V,KAAMhQ,IArDsB,MAwDPzE,oBAAS,GAxDF,gCAyDDA,mBAAS,KAzDR,mBAyD9B4tB,EAzD8B,KAyDlBC,EAzDkB,KA2DrC,OACInS,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KAQL,yBAAKxH,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,2BAAOV,KAAK,OAAOH,GAAG,QAAQa,UAAU,eAAeE,YAAY,mBAAWX,SAAU,SAACC,GACrF+sB,EAAc/sB,EAAMC,OAAOJ,OAC3BxD,QAAQC,IAAIwwB,OAGpB,4BAAQhtB,KAAK,SAASU,UAAU,mBAC5B,uBAAGA,UAAU,sBAM7B,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAeX,MAAOitB,OC2J3BsmD,I,OAvP8B,WACzC,IAAMzvE,EAA0BqD,cAC1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzEsK,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAHpB,EAIjB7e,oBAAS,GAJQ,mBAIxCoqB,EAJwC,KAI/BC,EAJ+B,KAM3C/c,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAGT,IAAI41C,EAAO3+C,aAAaC,QAAQ,sBAC5B2+C,EAA6B,GACpB,OAATD,IACAC,EAAqBD,GAGzB,IAAI2tB,EAAOtsE,aAAaC,QAAQ,aAC5BoiB,EAAoB,EACX,OAATiqD,IACAjqD,EAAYnV,SAASo/D,IAGzB,IAAIztB,EAAO7+C,aAAaC,QAAQ,eAC5BqP,EAAsB,GACb,OAATuvC,IACAvvC,EAAcuvC,GAGlB,IAAIC,EAAO9+C,aAAaC,QAAQ,gBAC5BqiB,EAAuB,GACd,OAATw8B,IACAx8B,EAAew8B,GAGnB,IAAIC,EAAO/+C,aAAaC,QAAQ,iBAC5BuiB,EAAwB,GACf,OAATu8B,IACAv8B,EAAgBu8B,GAGpB,IAAIC,EAAOh/C,aAAaC,QAAQ,kBAC5BglB,EAAyB,GAChB,OAAT+5B,IACA/5B,EAAiB+5B,GAGrB,IAAIjG,EAAO/4C,aAAaC,QAAQ,YAC5B61B,EAAmB,GACV,OAATijB,IACAjjB,EAAWijB,GAGf,IAAIlhC,EAAO7X,aAAaC,QAAQ,kBAC5BsiB,EAAyB,GAChB,OAAT1K,IACA0K,EAAiB1K,GAGrB,IAAIE,EAAO/X,aAAaC,QAAQ,uBAC5Bg/C,EAA8B,GACrB,OAATlnC,IACAknC,EAAsBlnC,GAG1B,IAAIE,EAAOjY,aAAaC,QAAQ,SAC5BuP,EAAgB,GACP,OAATyI,IACAzI,EAAQyI,GAGZ,IAAIinC,EAAOl/C,aAAaC,QAAQ,qBAC5BwP,EAA4B,EACnB,OAATyvC,IACAzvC,EAAoBvC,SAASgyC,IAQjCtmD,QAAQC,IAAIwpB,GACZzpB,QAAQC,IAAI4W,GApFmC,IAsFvC0H,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAQbuL,wBAAa8iE,GAAoBvrE,IACjCyI,wBAAamV,GAAY5d,EAAUhE,QAG5C,CAACgE,EAAUhE,EAAIwc,EAAc3Y,IAGhC2I,qBAAU,WACNxI,EAASmQ,GAAkB,WAAO,OACnC,CAAClW,EAAK+V,KAAMhQ,IAef,IAAMsD,EAAUC,cAChB,SAASuuC,IAELxuC,EAAQI,KADG,aAIf,OACIuT,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KACL,kBAAC,IAAD,MACA,yBAAKxH,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,YACjC,yBAAKa,UAAU,qCACX,yBAAKA,UAAU,kEACX,uBAAGA,UAAU,kCAAkCkiD,KAGvD,yBAAKliD,UAAU,OACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,YACX,uBAAGA,UAAU,iBAAb,qBAAwCuS,KAGhD,yBAAKvS,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,iBAAb,uBAAwCylB,KAGhD,yBAAKzlB,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,iBAAb,2BAAuCulB,KAG/C,yBAAKvlB,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,iBAAb,0BAAwCwlB,MAKpD,yBAAKxlB,UAAU,qBACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,gBACX,uBAAGA,UAAU,YAAb,uBAAmC+4B,KAG3C,yBAAK/4B,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,YAAb,+BAAsCkoB,KAG9C,yBAAKloB,UAAU,qCACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,YAAb,WAA8ByS,OAK9C,yBAAKzS,UAAU,MAAMb,GAAG,uBACpB,yBAAKa,UAAU,oEACX,4BAAQA,UAAU,4BAA4Bb,GAAG,8BAA8B8H,QAAS,kBAlFpH,WACI,IAAMmG,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAC9DlC,SAAUH,IAAMI,SAASC,aAE7BnC,EAASisE,GAA6B,CAClC,WAAcjwE,EACd,oBAAuBuT,EACvB,SAAY6K,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAGkD,QAAU,EACpE,MAASnO,EACT,OAAU,WACXrF,EAAK6nC,IAwE8GoN,KAC1F,kBAAC,KAAD,CAAYljD,GAAG,cAAcqI,MAAM,YADvC,iCAQhB,yBAAKxH,UAAU,MAAMb,GAAG,uBACpB,yBAAKa,UAAU,oEACX,4BAAQA,UAAU,4BAA4Bb,GAAG,8BAA8B8H,QAAS,WA5IxG8hB,GAAYD,KA6II,kBAAC,KAAD,CAAY3pB,GAAG,cAAcqI,MAAM,YADnC,yBAOJ,WACI,IAAgB,IAAZshB,EACA,OACI,yBAAK9oB,UAAU,uBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,kBAEJ,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,YAAYuiD,wBAAyB,CAAEC,OAAQX,OARlF,M,OC7Ob,SAASgxB,GAAiB9uE,EAAWqJ,GACxC,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,kBACqD,CAC9ChG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS0vE,GAAiB9uE,EAAMqJ,OAU3C9J,MAAM,SAAAe,GACHxI,QAAQC,IAAIuI,GACZlB,ECtBT,SAAS2vE,IACZ,IAAI1uE,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,kBACqD,CAC9ChG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS2vE,QAUpBxvE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASmpD,MACTnpD,EAASqpD,MACTrpD,EAASipD,MACTvwD,QAAQC,IAAIiI,EAAKhG,KAAK2vD,gBACtB3pD,EAAKhG,KAAKouD,cAAcl/C,KAAI,SAAC3B,EAAU4B,GACnC,IAAI8d,EAAY1f,EAAIod,YAChBuC,EAAY3f,EAAIqd,YAChBwjC,EAA8B,CAC9BhtD,GAAImM,EAAInM,GACRmO,YAAahC,EAAIgC,YACjBwzB,WAAYx1B,EAAIw1B,WAChBpK,SAAUprB,EAAIorB,SACdsR,eAAgB18B,EAAI08B,eACpBpwB,WAAYtM,EAAIsM,WAChBzF,WAAY7G,EAAI6G,WAChBiT,YAAa9Z,EAAI8Z,YACjB3hB,OAAQ6H,EAAI7H,OACZ2O,aAAc9G,EAAI8G,aAClBq2B,aAAcn9B,EAAIm9B,aAClB/f,YAAasC,EACbrC,YAAasC,GAGjB,OACW9nB,EADkB,aAAzBgpD,EAAc1oD,OACE8oD,GAAwBJ,GAEV,iBAAzBA,EAAc1oD,OACHgpD,GAA2BN,GAG3BE,GAA8BF,UAIzDhoD,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aD7CHg3E,IACT7tE,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,8FAA2C5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,SAE7JpB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,uGAAiD5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,U,yOH3BlKktE,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KKmJGvjB,OA3If,SAA+BzwD,GAC3B,IAAM0E,EAA0BqD,cAC1BusE,EAA2CnrE,aAAY,SAACC,GAAD,OAAuBA,EAAM6lD,kBACtFvB,EAAsC4mB,EAAcC,qBAClDt9D,EAAqBq9D,EAAcp9D,oBAAsB88D,GAA+B78D,OAEzFu2C,IAAiBz2C,IAClBy2C,EAAgB,CAAEhtD,GAAI,EAAG2hC,WAAY,EAAGpK,SAAU,EAAGsR,eAAgB,EAAG71B,WAAY,EAAG7E,YAAa,GAAIm7B,aAAc,GAAI7wB,WAAY,GAAIxF,aAAc,GAAIgT,YAAa,EAAG3hB,OAAQ,GAAIilB,YAAa,GAAIC,YAAa,KAE1N,IACMsqD,EADoBrrE,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAChC8L,SAC7B6pD,EAA0B,GAC1B/1C,EAAiCv1B,aAAY,SAACC,GAAD,OAAuBA,EAAMs1B,YAEhF81C,EAAYhmE,KAAI,SAAC3B,GACb,IAAIiF,EAAgB,CAAE,KAAQjF,EAAI/G,SAAU,MAAS+G,EAAInM,IACzD,OAAO+zE,EAAarsE,KAAK0J,MAG7B,IAAM8+C,EAA0B,GAChClyB,EAASA,SAASlwB,KAAI,SAAC3B,GACnB,IAAIiF,EAAgB,CAAE,KAAQ,aAAUjF,EAAI4f,OAAQ,MAAS5f,EAAInM,IACjE,OAAOkwD,EAAaxoD,KAAK0J,MAG7B,IAAImK,EAAOzX,aAAaC,QAAQ,YAC5BwzB,EAAW,EACF,OAAThc,IACAgc,EAAWvmB,SAASuK,IAGxB,IAAI1O,EAAO/I,aAAaC,QAAQ,MAC5BiP,EAAqB,EACZ,OAATnG,IACAmG,EAAahC,SAASnE,IAlCsC,MAsC9BtN,mBAAS,CACvCoiC,WAAY,CAAEjiC,MAAO,GAAIQ,MAAO8sD,EAAcrrB,YAC9CxzB,YAAa,CAAEzO,MAAO,GAAIQ,MAAO8sD,EAAc7+C,eAxCa,mBAsCzD3G,EAtCyD,KAsC9CC,EAtC8C,KA2ChE,SAASE,EAAoBC,GACzBH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UA+CnF,SAAS2H,IACL,OAAQL,EAAU2G,YAAYzO,QAAU8H,EAAU2G,YAAYjO,MAGlE,OACI,kBAAC,WAAD,KACI,yBAAKW,UAAU,iBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,OAAOb,GAAG,gBACrB,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,gDAEJ,yBAAKa,UAAU,aACX,0BAAMoH,SAvD9B,SAAkBhJ,GAEd,GADAA,EAAEiJ,kBACEL,IAAJ,CAGAvI,EAAMqX,SAAQ,IAKlB,SAAkBnP,EAAmCoP,GACjD,GAAIo2C,EAAe,CACf,IAAMhtD,EAAK8F,IAAMqC,QAAQ,wFAAoD,CACzElC,SAAUH,IAAMI,SAASC,WACzBC,UAAW,MAGfpC,EAAS0vE,GAAiB,CACtB/xC,WAAYn6B,EAAUm6B,WAAWzhC,MACjC8S,WAAYA,EACZo9C,WAAY74B,EACZppB,YAAa3G,EAAU2G,YAAYjO,OACpCF,IAEHtD,QAAQC,IAAI,CACRglC,WAAYn6B,EAAUm6B,WAAWzhC,MACjC8S,WAAYA,EACZo9C,WAAY74B,EACZppB,YAAa3G,EAAU2G,YAAYjO,SArB3CiX,CAAS3P,MAiDe,yBAAK3G,UAAU,cACX,kBAAC,GAAD,CACIb,GAAG,mBACHY,MAAM,aACNX,MAAM,qBACNnC,QAASoyD,EACTzvD,UAAU,EACVL,SAAUuH,EACVzH,MAAOsH,EAAUm6B,WAAWzhC,SAGpC,yBAAKW,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,oBACVY,MAAM,cACNV,MAAOsH,EAAU2G,YAAYjO,MAC7BE,SAAUuH,EACVlH,UAAU,EACVN,KAAK,WACLO,UAAW,IACXT,MAAM,WACNc,YAAY,MAGpB,4BAAQF,UAAU,iBAAiBiH,QAAS,WA7CpExI,EAAMqX,SAAQ,KA6CU,YACA,4BAAQxW,KAAK,SAASU,UAAS,sCA1ChCgH,IACN,WAAa,KAyCN,mBCwlBjBmsE,GAztBsB,WACjC,IAAMhwE,EAA0BqD,cAC1B22B,EAA0Bv1B,aAAY,SAACC,GAAD,OAAuBA,EAAMs1B,YACnEu4B,EAA4B9tD,aAAY,SAACC,GAAD,OAAuBA,EAAM6tD,aACrEx4B,EAAqCt1B,aAAY,SAACC,GAAD,OAAuBA,EAAMq1B,kBAC9EuyB,EAAqC7nD,aAAY,SAACC,GAAD,OAAuBA,EAAM4nD,kBAC9Ej6C,EAA8D5N,aAAY,SAACC,GAAD,OAAuBA,EAAM2N,2BACvGk4C,EAAqC9lD,aAAY,SAACC,GAAD,OAAuBA,EAAM6lD,kBAC9EvD,EAA0CviD,aAAY,SAACC,GAAD,OAAuBA,EAAM4lD,qBACjFrzC,EAAsBC,+BAAtBD,kBAGFhd,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzEmgE,EAA6Bj2C,EAASA,SAASr9B,OAC/CiuD,EAAkC5D,EAAiBM,oBAAoB3qD,OACzEkM,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAGT,IAAI0O,EAAOzX,aAAaC,QAAQ,YAE5BwzB,EAAW,EAEF,OAAThc,IACAgc,EAAWvmB,SAASuK,IA1Be,MA6BPhc,oBAAS,GA7BF,mBA6BhC+0B,EA7BgC,KA6BtBC,EA7BsB,OA8BPh1B,oBAAS,GA9BF,mBA8BhCi1B,EA9BgC,KA8BtBC,EA9BsB,OA+BPl1B,oBAAS,GA/BF,mBA+BhCm1B,EA/BgC,KA+BtBC,EA/BsB,KAiCnCnY,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,EACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAGTuL,wBAAa0zB,GAAen8B,EAAUuzB,IACtC9qB,wBAAau0B,GAAkBh9B,EAAUuzB,IACzC9qB,wBAAa8gD,GAAiCvpD,EAAUuzB,EAAUv3B,IAClEyM,wBAAa4+C,GAA2BrnD,EAAUuzB,EAAUv3B,MAIhEyM,wBAAa0zB,GAAen8B,EAAUuzB,IACtC9qB,wBAAau0B,GAAkBh9B,EAAUuzB,IACzC9qB,wBAAa4+C,GAA2BrnD,EAAUuzB,EAAUv3B,IAC5DyM,wBAAa8gD,GAAiCvpD,EAAUuzB,EAAUv3B,QAG3E,CAACgE,EAAUwY,EAAc3Y,EAAe0zB,EAAUv3B,IAErDwM,qBAAU,WACNxI,EAASmQ,GAAkB,oBAAW,yBACvC,CAAClW,EAAK+V,KAAMhQ,IAzEwB,MA2EXzE,oBAAS,GA3EE,mBA2EhC4b,EA3EgC,KA2ExBC,EA3EwB,KAiFvC,SAASC,EAAenb,GACpBkb,GAAU,GAGd,IAAM9T,EAAUC,cAgChB,IAAMmiD,EAAgB,SAACvqB,EAAmB+0C,EAAmBC,GAEzDrwE,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAcs6B,EAAQn/B,GAAGvD,YAC9CqH,aAAaY,WAAW,kBACxBZ,aAAae,QAAQ,iBAAkBs6B,EAAQpT,OAAOtvB,YACtD,IAAI23E,EAA4B,GAChCtwE,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,eACxBZ,aAAae,QAAQ,YAAaqvE,GAClCpwE,aAAaY,WAAW,eACxBZ,aAAae,QAAQ,cAAesvE,GACpC5d,EAAUA,UAAUzoD,KAAI,SAAA3B,GAiBpB,OAhBIA,EAAIw1B,aAAexC,EAAQn/B,KAC3B8D,aAAae,QAAQ,cAAesH,EAAInM,GAAGvD,YAC3CqH,aAAae,QAAQ,gBAAiBsH,EAAI+B,KAAKzR,YAC/C6zD,EAAeuG,cAAc/oD,KAAI,SAAAmrB,GAU7B,OATIA,EAAQ+7B,cAAgB7oD,EAAInM,IAC5Bo0E,EAAmB1sE,KAAK,CACpByG,YAAa8qB,EAAQ9qB,YACrBnO,GAAIi5B,EAAQj5B,GACZkO,KAAM+qB,EAAQ/qB,KACd8mD,YAAa/7B,EAAQ+7B,YACrBjpC,OAAQkN,EAAQlN,SAGjB,SAGR,QAEXrvB,QAAQC,IAAIy3E,GACZtwE,aAAaY,WAAW,kCACxBZ,aAAae,QAAQ,iCAAkC1H,KAAKC,UAAUg3E,EAAmBn1C,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,YACrHzkB,EAAQI,KAAK,CACTmB,SAlCO,sBAuCXjE,EAAiB,GACjBq5B,EAA6B,GAC7ByyB,EAAa,GACbxyB,EAAyB,GAE7B,GAAIH,EAAeI,cAAcx9B,OAAS,IAA2B,IAAtBsa,QACCiB,IAApC6hB,EAAeI,cAAc,IAAwD,OAApCJ,EAAeI,cAAc,GAAY,CAC1F,IAAIC,EAAeL,EAAeI,cAAc,GAAGzlB,WAAWxP,MAAM,KAChEm1B,EAAaN,EAAeI,cAAc,GAAGxlB,SAASzP,MAAM,KAC5Do1B,EAAattB,SAASotB,EAAa,GAAGnS,UAAU,EAAG,IACnDsS,EAAavtB,SAASotB,EAAa,GAAGnS,UAAU,EAAG,IACnDuS,EAAextB,SAASotB,EAAa,GAAGnS,UAAU,EAAG,IACrDwS,GAAWztB,SAASqtB,EAAW,GAAGpS,UAAU,EAAG,IAC/CyS,GAAY1tB,SAASqtB,EAAW,GAAGpS,UAAU,EAAG,IAChD0S,GAAa3tB,SAASqtB,EAAW,GAAGpS,UAAU,EAAG,IAErDykC,GAAcjyB,GAAWH,GAAY7hC,WAAa,cAAWiiC,GAAYH,GAAY9hC,WAAa,aAAYkiC,GAAaH,GAAc/hC,WAAa,WACtJshC,EAAeI,cAAcrwB,KAAI,SAAC3B,EAAK4B,GACnC,IAAI6wB,EAAa,IAAIviC,KAAK8P,EAAIuM,YAC1BmmB,EAAW,IAAIxiC,KAAK8P,EAAIwM,UAGtBmmB,EAAO3yB,EAAIwM,SACb8J,EAHS,2EACI,GAEShmB,WAAa,IAAMqiC,EAAKnc,MAAM,EAAE,IAAM,OAChEsb,EAAiBv2B,KAAK+a,GAEtB,IAAIsc,EAAa,IAAI1iC,MAEfuiC,EAAWtiC,UAAYyiC,EAASziC,WAAa,IAAO,MACtD4hC,EAAax2B,KAAK,2BAEZk3B,EAAWtiC,UAAYyiC,EAASziC,WAAa,IAAO,QAAUyiC,EAASziC,UAAYsiC,EAAWtiC,WAAa,IAAO,EACxH4hC,EAAax2B,KAAK,oCAEZq3B,EAASziC,UAAYsiC,EAAWtiC,WAAa,IAAO,IAAMuiC,EAASviC,UAAYyiC,EAASziC,WAAa,IAAO,EAClH4hC,EAAax2B,KAAK,0BAGlBw2B,EAAax2B,KAAK,2BAGtB,IAAIgR,EAAavM,EAAIuM,WAAWxP,MAAM,KAClCyP,EAAWxM,EAAIwM,SAASzP,MAAM,KAClC,OAAOtE,EAAK8C,KAAK,WAAQgR,EAAW,GAAK,IAAMA,EAAW,GAAK,OAASC,EAAS,GAAK,IAAMA,EAAS,OAKrH,SAASqmB,GAAYjxB,GACjB,MAA4B,2BAAxBmwB,EAAanwB,GACN,iBAEsB,oCAAxBmwB,EAAanwB,GACX,iBAEsB,2BAAxBmwB,EAAanwB,GACX,aAGA,aAKf,OACIkN,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KAGL,kBAAC,IAAD,MAEA,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,wCAAiB6I,KAAI,UAAK2pB,EAAaze,QAAO,SAACtT,EAAK4B,GAAN,MAAwB,4BAAR5B,KAAsBxL,OAA/D,YAAyEszE,GAAsBxoE,KAAK,OAAO6I,MAAM,YACrJ,kBAAC,GAAD,CAAS5I,MAAM,gDAA2B6I,KAAI,UAAKq6C,GAA2BnjD,KAAK,OAAO6I,MAAM,WAChG,kBAAC,GAAD,CAAS5I,MAAM,qBAAW6I,KAAI,UAAKg6C,EAAerlB,OAAOvoC,QAAU8K,KAAK,OAAO6I,MAAM,WACrF,yBAAKzT,UAAU,yBAAyBb,GAAG,uCACvC,4BACIa,UAAU,4BACVb,GAAG,2BACH8H,QAAS,WACL9D,EAASmR,GAA0Cd,GAAwCoC,SAvKnH2E,GAAU,KA2KU,uBAAGva,UAAU,mBARjB,6CAcR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,WAAW8H,QAAS,YACvC,IAAbwsB,IACAC,GAAY,GACZE,GAAY,GACZE,GAAY,KAEjBvsB,MAAO,CACNC,MAAOisB,EAAW,UAAY,YAPlC,sBAUA,yBAAKlsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiBwJ,EAAW,UAAY,cAGhD,yBAAKzzB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACxC,IAAb0sB,IACAC,GAAY,GACZF,GAAY,GACZI,GAAY,KAGhBvsB,MAAO,CACHC,MAAOmsB,EAAW,UAAY,YARtC,mBAUA,yBAAKpsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiB0J,EAAW,UAAY,cAIhD,yBAAK3zB,UAAU,+CACX,wBAAIA,UAAU,uBAAuBb,GAAG,YAAY8H,QAAS,YACxC,IAAb4sB,IACAC,GAAY,GACZJ,GAAY,GACZE,GAAY,KAGhBrsB,MAAO,CACHC,MAAOqsB,EAAW,UAAY,YARtC,sBAUA,yBAAKtsB,MAAO,CACRyQ,OAAQ,MACR+R,UAAW,SACXC,OAAQ,OACR/R,MAAO,MACPgS,gBAAiB4J,EAAW,UAAY,eAKpD,kBAAC,KAAD,CACI51B,KAAMqc,EACN6B,QAAS,kBAAM5B,GAAU,IACzB6B,sBAAoB,GAEpB,oCAEQ,WACI,GAAK5G,EAAwBG,oBAAsBnC,GAAwCoC,OACvF,OAAO,kBAAC,GAAD,CAAuBE,QAAS0E,IAF/C,MAWa,IAAbiZ,EAEI,yBAAKzzB,UAAU,OACX,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,sBACA,yBAAKa,UAAU,0CACX,2BAAOA,UAAU,SACb,2BAAOA,UAAU,eACb,8BAGJ,+BAEQm9B,EAASA,SAASiB,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQje,KAAI,SAAC3B,EAAK4B,GAC5D,MAA2B,mBAAvBixB,GAAYjxB,GAER,wBAAIlN,UAAS,YAAe4Q,IAAG,yBAAoB1D,IACnD,yBAAKlN,UAAS,yCAAoCm+B,GAAYjxB,KAC1D,yBAAKlN,UAAU,qBACX,yBAAKA,UAAU,2BAA2BkH,IAAI,wFAAwFC,IAAI,MAE9I,yBAAKnH,UAAU,qBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAb,aAA0CsL,EAAI4f,OAA9C,OAEJ,yBAAKlrB,UAAU,qBACX,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,gBAAhB,IAAiCsL,EAAI+B,MAAzE,OAGR,yBAAKrN,UAAU,OACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAb,yBAEJ,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,gBAAgB+D,EAAKmJ,IAAzE,OAGR,yBAAKlN,UAAU,OACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAb,wCAEJ,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,gBAAgB6vD,GAApE,OAGR,yBAAK7vD,UAAU,OACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAb,iCAEJ,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,iBAAmC,IAAnBsL,EAAI+0B,WAAsB,2BAAmB,4CAAjH,OAGR,yBAAKrgC,UAAU,OACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAb,sBAEJ,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,gBAAgBsL,EAAI+Z,cAAxE,UAQQ,mBAAvB8Y,GAAYjxB,GAEb,wBAAIlN,UAAS,YAAe4Q,IAAG,yBAAoB1D,IACnD,yBAAKlN,UAAS,yCAAoCm+B,GAAYjxB,IAAUjG,QAAS,WAAQ4hD,EAAcv9C,EAAK6yB,GAAYjxB,GAAQ,MAC5H,yBAAKlN,UAAU,qBACX,yBAAKA,UAAU,2BAA2BkH,IAAI,wFAAwFC,IAAI,MAE9I,yBAAKnH,UAAU,qBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAb,aAA0CsL,EAAI4f,OAA9C,OAEJ,yBAAKlrB,UAAU,qBACX,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,gBAAhB,IAAiCsL,EAAI+B,MAAzE,OAGR,yBAAKrN,UAAU,OACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAb,yBAEJ,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,gBAAgB+D,EAAKmJ,IAAzE,OAGR,yBAAKlN,UAAU,OACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAb,wCAEJ,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,gBAAgB6vD,GAApE,OAGR,yBAAK7vD,UAAU,OACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAb,iCAEJ,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,iBAAmC,IAAnBsL,EAAI+0B,WAAsB,2BAAmB,4CAAjH,OAGR,yBAAKrgC,UAAU,OACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAb,sBAEJ,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,gBAAgBsL,EAAI+Z,cAAxE,UAQQ,eAAvB8Y,GAAYjxB,GAEb,wBAAIlN,UAAS,YAAe4Q,IAAG,yBAAoB1D,IACnD,yBAAKlN,UAAS,yCAAoCm+B,GAAYjxB,IAAUjG,QAAS,WAAQ4hD,EAAcv9C,EAAK6yB,GAAYjxB,GAAQ,MAC5H,yBAAKlN,UAAU,qBACX,yBAAKA,UAAU,2BAA2BkH,IAAI,wFAAwFC,IAAI,MAE9I,yBAAKnH,UAAU,qBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAb,aAA0CsL,EAAI4f,OAA9C,OAEJ,yBAAKlrB,UAAU,qBACX,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,gBAAhB,IAAiCsL,EAAI+B,MAAzE,OAGR,yBAAKrN,UAAU,OACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAb,yBAEJ,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,gBAAgB+D,EAAKmJ,IAAzE,OAGR,yBAAKlN,UAAU,OACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAb,wCAEJ,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,gBAAgB6vD,GAApE,OAGR,yBAAK7vD,UAAU,OACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAb,iCAEJ,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,iBAAmC,IAAnBsL,EAAI+0B,WAAsB,2BAAmB,4CAAjH,OAGR,yBAAKrgC,UAAU,OACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAb,sBAEJ,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,gBAAgBsL,EAAI+Z,cAAxE,UASpB,wBAAIrlB,UAAS,YAAe4Q,IAAG,yBAAoB1D,IAC/C,yBAAKlN,UAAS,yCAAoCm+B,GAAYjxB,IAAUjG,QAAS,WAAQ4hD,EAAcv9C,EAAK6yB,GAAYjxB,GAAQkwB,EAAiBlwB,MAC7I,yBAAKlN,UAAU,qBACX,yBAAKA,UAAU,2BAA2BkH,IAAI,wFAAwFC,IAAI,MAE9I,yBAAKnH,UAAU,qBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAb,aAA0CsL,EAAI4f,OAA9C,OAEJ,yBAAKlrB,UAAU,qBACX,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,gBAAhB,IAAiCsL,EAAI+B,MAAzE,OAGR,yBAAKrN,UAAU,OACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAb,yBAEJ,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,gBAAgB+D,EAAKmJ,IAAzE,OAGR,yBAAKlN,UAAU,OACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAb,gCAEJ,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,gBAAgB6vD,GAApE,OAGR,yBAAK7vD,UAAU,OACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAb,iCAEJ,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,iBAAmC,IAAnBsL,EAAI+0B,WAAsB,2BAAmB,4CAAjH,OAGR,yBAAKrgC,UAAU,OACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAb,sBAEJ,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,wBAAuB,0BAAMA,UAAU,gBAAgBsL,EAAI+Z,cAAxE,mBAgBtC,IAAbsO,EAED,yBAAK3zB,UAAU,OACX,yBAAKA,UAAU,0BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,wCACA,yBAAKa,UAAU,0CACX,2BAAOA,UAAU,SACb,2BAAOA,UAAU,eACb,8BAGJ,+BAEQmqD,EAAiBM,oBAAoBx9C,KAAI,SAAC3B,EAAK4B,GAC3C,OACI,wBAAIlN,UAAS,YAAe4Q,IAAG,yBAAoB1D,IAC/C,yBAAKlN,UAAU,iCAAiCiH,QAAS,YAvepG,SAACqE,GAClBrI,aAAae,QAAQ,cAAesH,EAAInM,IAExCsH,EAAQI,KAAK,CACTmB,SAFO,qBAqekHmgC,CAAa78B,KAC9E,yBAAKtL,UAAU,8BACX,yBAAKA,UAAU,WAAWkH,IAAI,wFAAwFC,IAAI,MAE1H,yBAAKnH,UAAU,0BACX,uBAAGA,UAAU,wBAAb,WAAyC,0BAAMA,UAAU,qBAAhB,IAAsCsL,EAAI+B,MAAnF,KACA,uBAAGrN,UAAU,wBAAb,sBAA6C,0BAAMA,UAAU,qBAAqBsL,EAAIw/C,UAAtF,KACA,uBAAG9qD,UAAU,wBAAb,4CAAwD,0BAAMA,UAAU,qBAAqBsL,EAAIy/C,YAAjG,eAYxC,yBAAK/qD,UAAU,0BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,4CACA,yBAAKa,UAAU,0CACX,2BAAOA,UAAU,SACb,2BAAOA,UAAU,eACb,8BAGJ,+BAEQmqD,EAAiB2D,0BAA0B7gD,KAAI,SAAC3B,EAAK4B,GACjD,OACI,wBAAIlN,UAAS,YAAe4Q,IAAG,yBAAoB1D,IAC/C,yBAAKlN,UAAU,mCAAmCiH,QAAS,YAhhBtG,SAACkjD,GAElBlnD,aAAaY,WAAW,eACxBZ,aAAae,QAAQ,cAAemmD,EAAiBhrD,GAAGvD,YACxD6K,EAAQI,KAAK,CACTmB,SAJO,qBA+gBoHwrE,CAAaloE,KAC5E,yBAAKtL,UAAU,8BACX,yBAAKA,UAAU,WAAWkH,IAAI,wFAAwFC,IAAI,MAE9H,yBAAKnH,UAAU,0BACX,uBAAGA,UAAU,wBAAb,WAAyC,0BAAMA,UAAU,qBAAhB,IAAsCsL,EAAI+B,MAAnF,KACA,uBAAGrN,UAAU,wBAAb,sBAA6C,0BAAMA,UAAU,qBAAqBsL,EAAIw/C,UAAtF,KACA,uBAAG9qD,UAAU,wBAAb,4CAAwD,0BAAMA,UAAU,qBAAqBsL,EAAIy/C,YAAjG,WAUpBZ,EAAiB0D,6BAA6B5gD,KAAI,SAAC3B,EAAK4B,GACpD,OACI,wBAAIlN,UAAS,YAAe4Q,IAAG,yBAAoB1D,IAC/C,yBAAKlN,UAAU,iCAAiCiH,QAAS,YAnhBzH,SAA2CkjD,GAEvClnD,aAAaY,WAAW,0BACxBZ,aAAae,QAAQ,yBAA0BmmD,EAAiBS,uBAAuBhvD,YACvFqH,aAAaY,WAAW,eACxBZ,aAAae,QAAQ,cAAemmD,EAAiBU,YAAYjvD,YACjEqH,aAAaY,WAAW,eACxBZ,aAAae,QAAQ,cAAemmD,EAAiB78C,YAAY1R,YACjE6K,EAAQI,KAAK,CACTmB,SARO,8BAkhBkHyrE,CAAkCnoE,KAC/F,yBAAKtL,UAAU,8BACX,yBAAKA,UAAU,WAAWkH,IAAI,wFAAwFC,IAAI,MAE9H,yBAAKnH,UAAU,0BACX,uBAAGA,UAAU,wBAAb,WAAyC,0BAAMA,UAAU,qBAAhB,IAAsCsL,EAAI+B,MAAnF,KACA,uBAAGrN,UAAU,wBAAb,sBAA6C,0BAAMA,UAAU,qBAAqBsL,EAAIw/C,SAASvN,WAAW,IAAK,MAA/G,KACA,uBAAGv9C,UAAU,wBAAb,4CAAwD,0BAAMA,UAAU,qBAAqBsL,EAAIy/C,YAAjG,iBAc9B,IAAbl3B,EAED,yBAAK7zB,UAAU,OACX,yBAAKA,UAAU,0BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,wBACA,yBAAKa,UAAU,0CACX,2BAAOA,UAAU,SACb,2BAAOA,UAAU,gBACb,8BAGJ,+BAEQ0tD,EAAerlB,OAAOp7B,KAAI,SAAC3B,EAAK4B,GAC5B,OACI,wBAAIlN,UAAS,YAAe4Q,IAAG,yBAAoB1D,IAC/C,yBAAKlN,UAAU,iCAAiCiH,QAAS,cACrD,yBAAKjH,UAAU,qBACX,yBAAKA,UAAU,2BAA2BkH,IAAI,wFAAwFC,IAAI,MAE9I,yBAAKnH,UAAU,qBACX,uBAAGA,UAAU,wBAAb,aAA0CsL,EAAI08B,gBAC9C,uBAAGhoC,UAAU,wBAAb,4BAAmD,0BAAMA,UAAU,gBAAgBsL,EAAIqd,wBAY/H,yBAAK3oB,UAAU,0BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,yBACA,yBAAKa,UAAU,0CACX,2BAAOA,UAAU,SACb,2BAAOA,UAAU,gBACb,8BAGJ,+BAEQ0tD,EAAeO,aAAahhD,KAAI,SAAC3B,EAAK4B,GAClC,OACI,wBAAIlN,UAAS,YAAe4Q,IAAG,yBAAoB1D,IAC/C,yBAAKlN,UAAU,mCAAmCiH,QAAS,cACvD,yBAAKjH,UAAU,qBACX,yBAAKA,UAAU,2BAA2BkH,IAAI,wFAAwFC,IAAI,MAE9I,yBAAKnH,UAAU,qBACX,uBAAGA,UAAU,wBAAb,aAA0CsL,EAAI08B,gBAC9C,uBAAGhoC,UAAU,wBAAb,8BAAqD,0BAAMA,UAAU,qBAAqBsL,EAAIqd,8BArD7I,I,OCvpBtB,SAAS+qD,GAA6BvwE,EAAe29B,EAAoB3uB,GAC5E,IAAI/N,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,sCAC6Dy9B,EAD7D,YAC2E3uB,GAAc,CACtF9U,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASuwE,GAA6BvwE,EAAU29B,EAAY3uB,OAUvE7O,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASinD,MACTjnD,EzJgFL,CAAE7D,KAAM2qD,KyJ/EH9mD,EAASmnD,MACTzuD,QAAQC,IAAIiI,EAAKhG,KAAK0sD,qBACtB5uD,QAAQC,IAAIiI,EAAKhG,KAAK8vD,8BACtBhyD,QAAQC,IAAIiI,EAAKhG,KAAK+vD,2BACtB/pD,EAAKhG,KAAK0sD,oBAAoBx9C,KAAI,SAAC3B,EAAU4B,GACzC,IAAI8d,EAAY1f,EAAIod,YAChBuC,EAAY3f,EAAIqd,YAChB+hC,EAAqB,CACrBvrD,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVgY,aAAc/Z,EAAI+Z,aAClBwlC,YAAav/C,EAAIu/C,YACjBD,uBAAwBt/C,EAAIs/C,uBAC5BE,SAAUx/C,EAAIw/C,SACdx9C,YAAahC,EAAIgC,YACjBwzB,WAAYx1B,EAAIw1B,WAChB6pB,SAAUr/C,EAAIq/C,SACdI,WAAYz/C,EAAIy/C,WAChBtiB,aAAcn9B,EAAIm9B,aAClB/f,YAAasC,EAAUI,UAAU,EAAG,GACpCzC,YAAasC,EAAUG,UAAU,EAAG,IAGxC,OAAOjoB,EAASknD,GAAqBK,OAGzC3mD,EAAKhG,KAAK8vD,6BAA6B5gD,KAAI,SAAC3B,EAAU4B,GAClD,IAAI8d,EAAY1f,EAAIod,YAChBuC,EAAY3f,EAAIqd,YAChB+hC,EAAqB,CACrBvrD,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjBwzB,WAAYx1B,EAAIw1B,WAChB6pB,SAAUr/C,EAAIq/C,SACdC,uBAAwBt/C,EAAIs/C,uBAC5BvlC,aAAc/Z,EAAI+Z,aAClBwlC,YAAav/C,EAAIu/C,YACjBC,SAAUx/C,EAAIw/C,SACdC,WAAYz/C,EAAIy/C,WAChBtiB,aAAcn9B,EAAIm9B,aAClB/f,YAAasC,EAAUI,UAAU,EAAG,GACpCzC,YAAasC,EAAUG,UAAU,EAAG,IAGxC,OAAOjoB,EAASonD,GAA0BG,OAG9C3mD,EAAKhG,KAAK+vD,0BAA0B7gD,KAAI,SAAC3B,EAAU4B,GAC/C,IAAI8d,EAAY1f,EAAIod,YAChBuC,EAAY3f,EAAIqd,YAChB+hC,EAAqB,CACrBvrD,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjBwzB,WAAYx1B,EAAIw1B,WAChB6pB,SAAUr/C,EAAIq/C,SACdC,uBAAwBt/C,EAAIs/C,uBAC5BvlC,aAAc/Z,EAAI+Z,aAClBwlC,YAAav/C,EAAIu/C,YACjBC,SAAUx/C,EAAIw/C,SACdC,WAAYz/C,EAAIy/C,WAChBtiB,aAAcn9B,EAAIm9B,aAClB/f,YAAasC,EAAUI,UAAU,EAAG,GACpCzC,YAAasC,EAAUG,UAAU,EAAG,IAGxC,OAAOjoB,EzJgBhB,CAAE7D,KAAMwqD,GAA8BK,iByJhBWO,UAG/CvmD,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCxG5B,IAuWe63E,GAvWkB,WAC7B,IAAMxwE,EAA0BqD,cAC1B22B,EAA0Bv1B,aAAY,SAACC,GAAD,OAAuBA,EAAMs1B,YACnEgtB,EAA0CviD,aAAY,SAACC,GAAD,OAAuBA,EAAM4lD,qBACnFmmB,EAAuChsE,aAAY,SAACC,GAAD,OAAuBA,EAAM+jE,oBAG9ExxD,EAAsBC,+BAAtBD,kBAGJM,EAAOzX,aAAaC,QAAQ,cAE5B49B,EAAa,EAEJ,OAATpmB,IACAomB,EAAa3wB,SAASuK,IAI1B,IAAI1O,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAIT,IAAI4O,EAAO3X,aAAaC,QAAQ,YAC5BwzB,EAAmB,EACV,OAAT9b,IACA8b,EAAWvmB,SAASyK,IAGxB,IAAIoyB,EAAO/pC,aAAaC,QAAQ,aAC5BmwE,EAAY,GACH,OAATrmC,IACAqmC,EAAYrmC,GAGhB,IAAI6mC,EAAQ5wE,aAAaC,QAAQ,eAC7BowE,EAAc,GACJ,OAAVO,IACAP,EAAcO,GAGlBh4E,QAAQC,IAAI46B,GACZ76B,QAAQC,IAAI83E,EAAenvB,eAE3B,IAAImR,EAAa,GACbge,EAAenvB,cAAc3kD,OAAS,GACtC8zE,EAAenvB,cAAcx3C,KAAI,SAAC3B,EAAK8B,GAInC,OAHI9B,EAAInM,KAAOu3B,IACXk/B,EAAatqD,EAAI+G,UAEd/G,KAIfzP,QAAQC,IAAI85D,GAEZ,IAAIj6C,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAUbuL,wBAAay/D,GAAkBloE,EAAUhE,IACzCyM,wBAAa+mD,GAAexvD,EAAU29B,IACtCl1B,wBAAa8nE,GAA6BvwE,EAAU29B,EAAY3hC,IAChEyM,wBAAa0mD,GAAiBnvD,QAGvC,CAACA,EAAUwY,EAAc3Y,EAAe89B,EAAY3hC,IAEvD,IAAMsH,EAAUC,cACV8sE,EAAe,WAEjB/sE,EAAQI,KAAK,CACTmB,SAFO,gBAGPH,MAAO,CAAEi5B,WAAYA,MAIvB+0B,EAAe,WACE,OAAfD,GACA53D,OAAOC,KAAK23D,EAAY,WAiDhC,OACIx7C,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KACL,kBAAC,IAAD,MACA,yBAAKxH,UAAU,OACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,mBACzC,yBAAKa,UAAU,aACX,yBAAKA,UAAU,uCACX,wBAAIb,GAAG,aAAP,oCAEJ,yBAAKa,UAAU,kBACX,uBAAGb,GAAG,SAAN,WAEYg+B,EAASA,SAASr9B,QAAU,EACrB,GAGAq9B,EAASA,SAAS,GAAG9vB,OAM5C,yBAAKrN,UAAU,kBACX,uBAAGb,GAAG,SAAN,qBAGgBg+B,EAASA,SAASr9B,QAAU,EACrB,IAGiC,IAApCq9B,EAASA,SAAS,GAAGkD,WACd,2BAGA,wCAO/B,yBAAKrgC,UAAU,OACX,yBAAKA,UAAU,8BAGCm9B,EAASA,SAASr9B,QAAU,EACrB,IAGiC,IAApCq9B,EAASA,SAAS,GAAGkD,WAiBjB,4BACIrgC,UAAU,uBACVb,GAAG,oBACH8H,QAASusE,GAHb,qBAhBc,mBAAdH,GAAgD,eAAdA,EAE9B,4BACIrzE,UAAU,uBACVb,GAAG,gBACH8H,QAAS4uD,GAHb,4BAFR,UAqChD,yBAAK71D,UAAU,0BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAS,oBACV,yBAAKA,UAAU,aACX,yBAAKA,UAAU,qDACX,wBAAIb,GAAG,aAAP,mBACA,yBAAKa,UAAU,2CACX,2BAAOA,UAAU,SACb,2BAAOA,UAAU,eACb,8BAGJ,+BAEQmqD,EAAiBM,oBAAoBx9C,KAAI,SAAC3B,EAAK4B,GAC3C,OACI,wBAAIlN,UAAS,YAAe4Q,IAAG,yBAAoB1D,IAC/C,yBAAKlN,UAAU,gDAAgDiH,QAAS,YArIvH,SAACqG,EAAqBD,EAAc09C,EAAoB5rD,GAEzE8D,aAAaY,WAAW,wBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,uBACxBZ,aAAaY,WAAW,eACxBZ,aAAae,QAAQ,uBAAwBsJ,GAC7CrK,aAAae,QAAQ,gBAAiBqJ,GACtCpK,aAAae,QAAQ,sBAAuB+mD,GAC5C9nD,aAAae,QAAQ,cAAe7E,EAAGvD,YACvC6K,EAAQI,KAAK,CACTmB,SAVO,qBAoIqI8tD,CAAaxqD,EAAIgC,YAAahC,EAAI+B,KAAM/B,EAAIy/C,WAAYz/C,EAAInM,MACxI,yBAAKa,UAAU,0BACX,yBAAKA,UAAU,WAAWkH,IAAI,wFAAwFC,IAAI,MAE9H,yBAAKnH,UAAU,0BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAiBmM,EAAI+B,MAC9C,wBAAIrN,UAAU,QAAQb,GAAG,iBAAzB,4CAA8DmM,EAAIy/C,kBAStFZ,EAAiB2D,0BAA0B7gD,KAAI,SAAC3B,EAAK4B,GACjD,OACI,wBAAIlN,UAAS,YAAe4Q,IAAG,yBAAoB1D,IAC/C,yBAAKlN,UAAU,mCAAmCiH,QAAS,YApL1G,SAACqG,EAAqBD,EAAc09C,EAAoB5rD,GAEzE8D,aAAaY,WAAW,wBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,uBACxBZ,aAAaY,WAAW,eACxBZ,aAAae,QAAQ,uBAAwBsJ,GAC7CrK,aAAae,QAAQ,gBAAiBqJ,GACtCpK,aAAae,QAAQ,sBAAuB+mD,GAC5C9nD,aAAae,QAAQ,cAAe7E,EAAGvD,YACvC6K,EAAQI,KAAK,CACTmB,SAVO,qBAmLwHkuD,CAAa5qD,EAAIgC,YAAahC,EAAI+B,KAAM/B,EAAIy/C,WAAYz/C,EAAInM,MAC3H,yBAAKa,UAAU,0BACX,yBAAKA,UAAU,WAAWkH,IAAI,wFAAwFC,IAAI,MAE9H,yBAAKnH,UAAU,0BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAiBmM,EAAI+B,MAC9C,wBAAIrN,UAAU,QAAQb,GAAG,iBAAzB,4CAA8DmM,EAAIy/C,kBAStFZ,EAAiB0D,6BAA6B5gD,KAAI,SAAC3B,EAAK4B,GACpD,OACI,wBAAIlN,UAAS,YAAe4Q,IAAG,yBAAoB1D,IAC/C,yBAAKlN,UAAU,iCAAiCiH,QAAS,YAtL7H,SAA2CkjD,GAEvClnD,aAAaY,WAAW,0BACxBZ,aAAae,QAAQ,yBAA0BmmD,EAAiBS,uBAAuBhvD,YACvFqH,aAAaY,WAAW,eACxBZ,aAAae,QAAQ,cAAemmD,EAAiBU,YAAYjvD,YACjEqH,aAAaY,WAAW,eACxBZ,aAAae,QAAQ,cAAemmD,EAAiB78C,YAAY1R,YACjE6K,EAAQI,KAAK,CACTmB,SARO,8BAqLsHyrE,CAAkCnoE,KAC/F,yBAAKtL,UAAU,0BACX,yBAAKA,UAAU,WAAWkH,IAAI,wFAAwFC,IAAI,MAE9H,yBAAKnH,UAAU,0BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAiBmM,EAAI+B,MAC9C,wBAAIrN,UAAU,QAAQb,GAAG,iBAAzB,4CAA8DmM,EAAIy/C,4BAiBlI,yBAAK/qD,UAAU,OACX,yBAAKA,UAAU,uBAGHm9B,EAASA,SAASr9B,QAAU,EACrB,IAGiC,IAApCq9B,EAASA,SAAS,GAAGkD,YACH,eAAdgzC,EAEI,4BAAQp7D,MAAM,OAAOD,OAAO,MAAM9Q,IAAKosE,EAAazoE,MAAM,uBAAuBk2B,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,SAH7N,MC3VhC,IAsKe6yC,GAtKsB,WACjC,IAAM3wE,EAA0BqD,cAC1BqwD,EAAoCjvD,aAAY,SAACC,GAAD,OAAuBA,EAAM4nD,kBAE/E/0C,EAAOzX,aAAaC,QAAQ,cAE5B49B,EAAa,EAEJ,OAATpmB,IACAomB,EAAa3wB,SAASuK,IAG1B,IAAI1O,EAAO/I,aAAaC,QAAQ,MAE5B/D,EAAK,EAEI,OAAT6M,IACA7M,EAAKgR,SAASnE,IAjBqB,MAoBbtN,mBAAS,GApBI,mBAoBhCwgD,EApBgC,KAoBzB+Q,EApByB,KAsB/B71C,EAAsBC,+BAAtBD,kBAER,SAAS08C,IACL,IACIx/C,EADI4nC,EACI,EADJA,EAEA2X,EAAcb,cAAcl2D,SAChCjE,QAAQC,IAAI,SACZm0D,EAAS34C,IAEbzb,QAAQC,IAAIojD,GAGhB,SAAS6X,IACG7X,EAEA,GACJ+Q,EAHI/Q,EACI,GAMhB,SAAS60B,IACL,IAAM3mE,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAC9DlC,SAAUH,IAAMI,SAASC,aAE7BnC,ECrDD,SAAS6wE,EAA+BlzC,EAAoB3uB,EAAmB/E,GAClF,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,4CACuEy9B,EADvE,YACqF3uB,GAAc,CAC5F9U,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS6wE,EAA8BlzC,EAAW3uB,EAAa/E,OAU1E9J,MAAM,SAAAyM,GACH9K,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,uCAAwB5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,SAE1IpB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,gDAA8B5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC3I1J,QAAQC,IAAI,aDkBXk4E,CAA8BlzC,EAAW3hC,EAAIiO,IAG1D,IAAIuO,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBA+BzC,OA9BAyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAaqoD,GAAyB9wD,EAAU29B,OAGzD,CAAC39B,EAAUwY,EAAc3Y,EAAe89B,IAGvC1mB,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI5B,kBAAC,WAAD,KACJ,kBAAC,IAAD,MACA,yBAAKxH,UAAU,OACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAS,0BACV,yBAAKA,UAAU,aACX,yBAAKA,UAAU,uCACX,wBAAIb,GAAG,aAAoD,IAAvC03D,EAAcb,cAAcl2D,OAAe+2D,EAAcb,cAAc,GAAG3oD,KAAO,KAEzG,yBAAKrN,UAAU,kBAGC62D,EAAcb,cAAcl2D,OAAS,EAC9B,GAGA,yBAAKE,UAAU,YAAYuiD,wBAAyB,CAAEC,OAAQqU,EAAcb,cAAc53B,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAE1R,OAASmT,EAAEnT,UAAQg0B,EAAM,GAAG5xC,gBAM9J,yBAAKtN,UAAU,wCAGCk/C,EAAQ2X,EAAcb,cAAcl2D,OACtB,IAAVo/C,EAEI,4BAAQl/C,UAAS,8BAAiCiH,QAAS,WAAO6vD,MAAlE,mBAGC5X,EAAQ,EAET,oCACI,4BAAQl/C,UAAS,8BAAiCiH,QAAS,WAAO8vD,MAAlE,oBACA,4BAAQ/2D,UAAS,8BAAiCiH,QAAS,WAAO6vD,MAAlE,yBAJP,EAYD,4BAAQ92D,UAAS,8BAAiCiH,QAAS,WAAO8vD,MAAlE,qBAMpB,yBAAK/2D,UAAU,wCAEP,WACI,GAAIk/C,IAAU2X,EAAcb,cAAcl2D,OACtC,OACI,4BAAQE,UAAS,mCAAsCiH,QAAS,WAAO8sE,MAAvE,uBAHZ,aE7IzC,SAASE,GAAyC9wE,EAAe4rD,EAAqB58C,GACzF,IAAI/N,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,4DACmF0rD,EADnF,YACkG58C,GAAc,CAC7G9U,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS8wE,GAAyC9wE,EAAU4rD,EAAa58C,OAUpF7O,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASgqD,MACTtxD,QAAQC,IAAIiI,EAAKhG,KAAKuvD,6BACtBvpD,EAAKhG,KAAKuvD,4BAA4BrgD,KAAI,SAAC3B,EAAU4B,GACjD,IAAIwoC,EAAyC,CACzCvjC,WAAY7G,EAAI6G,WAChBo7C,cAAejiD,EAAIiiD,cACnB1C,YAAav/C,EAAIu/C,YACjBC,SAAUx/C,EAAIw/C,SACdx9C,YAAahC,EAAIgC,YACjB6a,UAAW7c,EAAI6c,UACfyiC,uBAAwBt/C,EAAIs/C,uBAC5Bx4C,aAAc9G,EAAI8G,aAClB0mC,SAAUxtC,EAAIwtC,SACdrB,MAAOnsC,EAAImsC,MACXlqC,KAAMjC,EAAIiC,MAGd,OAAOpK,EAASiqD,GAA+B1X,UAGtDvxC,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCtD5B,IA+Heo4E,GA/H0B,WACrC,IAAM/wE,EAA0BqD,cAC1B02C,EAAsEt1C,aAAY,SAACC,GAAD,OAAuBA,EAAM2V,oCAC/GD,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAC7DowC,EAAqE/lD,aAAY,SAACC,GAAD,OAAuBA,EAAM8lD,mCACpH9xD,QAAQC,IAAIyhB,EAAMG,UAClB7hB,QAAQC,IAAIohD,GACZ,IAAM9/C,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAEvEmH,EAAsBC,+BAAtBD,kBAEJM,EAAOzX,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAATub,IACAvb,EAAKub,GAGT,IAAII,EAAO7X,aAAaC,QAAQ,eAC5B6rD,EAAsB,EACb,OAATj0C,IACAi0C,EAAc5+C,SAAS2K,IAG3B,IAAIa,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACrCixE,EAAaxmB,EAAgCA,gCAAgC7tD,OAAS,EAAI6tD,EAAgCA,gCAAgC,GAAGlW,MAAQ,EAqCzK,OApCA9rC,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAaqoE,GAAyC9wE,EAAU4rD,EAAY5vD,OAGrF,CAACgE,EAAUwY,EAAc3Y,EAAe+rD,EAAa5vD,IAGxDwM,qBAAU,WACNxI,EAASmQ,GAAkB,kBAAW,oBACvC,CAAClW,EAAK+V,KAAMhQ,IAIXiX,EACA,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KAEL,yBAAKxH,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAmCb,GAAG,iBAApD,wBAEJ,yBAAKa,UAAU,aACX,uBAAGuiD,wBAAyB,CAAEC,OAAQmL,EAAgCA,gCAAgC7tD,OAAS,EAAI6tD,EAAgCA,gCAAgC,GAAGrgD,YAAc,MAGpM,wBAAItN,UAAU,kCAAmCb,GAAG,iBAApD,4BAAmF,kCAAQwuD,EAAgCA,gCAAgC7tD,OAAS,EAAI6tD,EAAgCA,gCAAgC,GAAG9C,YAAc,SAMzQ,yBAAK7qD,UAAU,OACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAmCb,GAAG,iBAApD,iCAEJ,yBAAKa,UAAU,eAAekH,IAAKymD,EAAgCA,gCAAgC7tD,OAAS,EAAI6tD,EAAgCA,gCAAgC,GAAGxlC,UAAY,GAAIhhB,IAAI,MAE3M,yBAAKnH,UAAU,qBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAmCb,GAAG,iBAApD,kCAEJ,yBAAKa,UAAU,aACX,kBAAC,KAAD,CAAqBX,MAAO80E,EAAYzgE,KAAI,UAAKygE,KADrD,QAQZ,yBAAKn0E,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAmCb,GAAG,iBAApD,qBAEJ,yBAAKa,UAAU,aACV2tD,EAAgCA,gCAAgC7tD,OAAS,EAAI6tD,EAAgCA,gCAAgC,GAAG7U,SAAW,SCgBzKs7B,OAzIf,WACI,IAAMjxE,EAA0BqD,cAE5B+W,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAC7Dvb,EAAqBub,EAAM2D,aAEzBxL,EAAqB6H,EAAM5H,oBAAsBuE,GAAuBtE,OAEzE5T,IAAQ0T,IACT1T,EAAO,CAAE7C,GAAI,EAAGoF,SAAU,GAAI8b,MAAO,GAAI5c,OAAQ,GAAIe,SAAU,GAAI8b,UAAW,GAAIC,SAAU,GAAIE,IAAK,GAAIC,MAAO,GAAIC,QAAS,GAAIH,YAAa,GAAIzb,kBAAmB,GAAI8b,WAAY,GAAID,QAAS,IAGtM,IAAI5U,EAAO/I,aAAaC,QAAQ,wBAC5Bu0D,EAA+B,GACtB,OAATzrD,IACAyrD,EAAuBzrD,GAG3B,IAAI0O,EAAOzX,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAATub,IACAvb,EAAKub,GAGT,IAAIE,EAAO3X,aAAaC,QAAQ,eAC5B6rD,EAAsB,EAzBK,8CA+B/B,WAAwB3wD,GAAxB,kBAAAw+B,EAAA,yDACIx+B,EAAEiJ,kBACEL,IAFR,wDAKUoG,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAC9DlC,SAAUH,IAAMI,SAASC,aANjC,SAQoB4uC,IARpB,OAQQC,EARR,OAUI79B,EAD2B5T,EACNyxC,EAAK/mC,GAV9B,4CA/B+B,sBA4C/B,SAASkJ,EAASP,EAAkBo+B,EAAa/mC,GACzCpL,GACAmB,EClDL,SAASkxE,EAAuBtwE,EAAWqJ,GAC9C,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,wBAC2D,CACpDhG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASkxE,EAAuBtwE,EAAMqJ,OAUjD9J,MAAM,SAAAe,GACHxI,QAAQC,IAAIuI,GACZlB,EAASpB,GAAiBgC,IAC1BkB,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,4CAA0B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAaC,UAAW,SAE7IpB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,qDAAgC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC7I1J,QAAQC,IAAI,aDaPu4E,CAAuB,CAC5BliE,WAAYhT,EACZ4vD,YAAaA,EACb5mC,UAAWgsB,GACZ/mC,IAaX,SAASpG,IACL,OAAkB,OAAVotC,EAtCC,OAATx5B,IACAm0C,EAAc5+C,SAASyK,IAwC3B,IAAM1T,EAAMlF,EAAK+C,kBAnEc,EAqEDrG,mBAASwI,GArER,mBAqExB8sC,EArEwB,KAqEfC,EArEe,OAuELv1C,qBAvEK,mBAuExB01C,EAvEwB,KAuEjBC,EAvEiB,cAqFhBH,IArFgB,6EAqF/B,iCAAAtX,EAAA,6DACU0X,EAAW,IAAIC,UACZC,OACL,UACAJ,EAAMK,eAJd,SAOsBrxC,MAAM,GAAD,OAChBC,+BADgB,oBACiC,CACpDhG,OAAQ,OACRU,KAAMu2C,IAVd,cAOU32C,EAPV,gBAauBA,EAAImG,OAb3B,cAaUC,EAbV,yBAcWA,EAAK2wC,WAdhB,4CArF+B,sBAuG/B,OACI,kBAAC,WAAD,KACI,yBAAK10C,UAAU,iBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,wBAEJ,kBAAC,IAAD,MACA,yBAAKA,UAAU,aACX,yBAAKA,UAAU,gCAAgCuiD,wBAAyB,CAAEC,OAAQiV,KAGlF,0BAAMrwD,SApHC,6CAqHH,yBAAKpH,UAAU,YACX,yBAAKA,UAAU,uBACX,2BAAOd,QAAQ,iBAAf,uBACA,2BAAOI,KAAK,OAAOH,GAAG,gBAAgBkO,KAAK,gBAAgB9N,SA/CzE,SAACnB,GACnBi2C,EAAS,CAILM,eAAgBC,IAAIC,gBAAgBz2C,EAAEqB,OAAOijB,MAAM,IAEnD+xB,cAAer2C,EAAEqB,OAAOijB,MAAM,KAElCuxB,EAAWW,IAAIC,gBAAgBz2C,EAAEqB,OAAOijB,MAAM,SAwClB,yBAAK1iB,UAAU,uBACX,yBAAKkH,IAAK8sC,EAAS7sC,IAAI,UAAUhI,GAAG,aAG5C,4BAAQa,UAAU,iBAAiBiH,QAAS,WAvEpE9D,EAASL,GAAqBoX,GAAuB7D,SAuE7B,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCApEhCgH,IACN,WAAa,KAmEN,mBEYjBstE,OA3If,WACI,IAAMnxE,EAA0BqD,cAE5B+W,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAC7Dvb,EAAqBub,EAAM2D,aAEzBxL,EAAqB6H,EAAM5H,oBAAsBuE,GAAuBtE,OAEzE5T,IAAQ0T,IACT1T,EAAO,CAAE7C,GAAI,EAAGoF,SAAU,GAAI8b,MAAO,GAAI5c,OAAQ,GAAIe,SAAU,GAAI8b,UAAW,GAAIC,SAAU,GAAIE,IAAK,GAAIC,MAAO,GAAIC,QAAS,GAAIH,YAAa,GAAIzb,kBAAmB,GAAI8b,WAAY,GAAID,QAAS,IAGtM,IAAI5U,EAAO/I,aAAaC,QAAQ,uBAC5Bg5D,EAA8B,GACrB,OAATlwD,IACAkwD,EAAsBlwD,GAG1B,IAAI0O,EAAOzX,aAAaC,QAAQ,cAC5BiyC,EAAqB,EACZ,OAATz6B,IACAy6B,EAAahlC,SAASuK,IAG1B,IAAIE,EAAO3X,aAAaC,QAAQ,MAC5B/D,EAAU,GAzB+B,8CA+B7C,WAAwBf,GAAxB,kBAAAw+B,EAAA,yDACIx+B,EAAEiJ,kBACEL,IAFR,wDAKUoG,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAC9DlC,SAAUH,IAAMI,SAASC,aANjC,SASoB4uC,IATpB,OASQC,EATR,OAWI79B,EAD2B5T,EACNyxC,EAAK/mC,GAX9B,4CA/B6C,sBA6C7C,SAASkJ,EAASP,EAAkBo+B,EAAa/mC,GACzCpL,GACAmB,ECnDL,SAASoxE,EAAsBxwE,EAAWqJ,GAC7C,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,uBAC0D,CACnDhG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASoxE,EAAsBxwE,EAAMqJ,OAUhD9J,MAAM,SAAAe,GACHxI,QAAQC,IAAIuI,GACZlB,EAASpB,GAAiBgC,IAC1BkB,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,uCAA0B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAaC,UAAW,SAE7IpB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,gDAAgC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC7I1J,QAAQC,IAAI,aDcPy4E,CAAsB,CAC3BpiE,WAAYhT,EACZg2C,WAAYA,EACZhtB,UAAWgsB,GACZ/mC,IAcX,SAASpG,IACL,OAAkB,OAAVotC,EAxCC,OAATx5B,IACAzb,EAAKyb,GA0CT,IAAM1T,EAAMlF,EAAK+C,kBArE4B,EAuEfrG,mBAASwI,GAvEM,mBAuEtC8sC,EAvEsC,KAuE7BC,EAvE6B,OAyEnBv1C,qBAzEmB,mBAyEtC01C,EAzEsC,KAyE/BC,EAzE+B,cAuF9BH,IAvF8B,6EAuF7C,iCAAAtX,EAAA,6DACU0X,EAAW,IAAIC,UACZC,OACL,UACAJ,EAAMK,eAJd,SAOsBrxC,MAAM,GAAD,OAChBC,+BADgB,oBACiC,CACpDhG,OAAQ,OACRU,KAAMu2C,IAVd,cAOU32C,EAPV,gBAauBA,EAAImG,OAb3B,cAaUC,EAbV,yBAcWA,EAAK2wC,WAdhB,4CAvF6C,sBAyG7C,OACI,kBAAC,WAAD,KACI,yBAAK10C,UAAU,iBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,wBAEJ,kBAAC,IAAD,MACA,yBAAKA,UAAU,aACX,yBAAKA,UAAU,gCAAgCuiD,wBAAyB,CAAEC,OAAQ0Z,KAGlF,0BAAM90D,SAtHe,6CAuHjB,yBAAKpH,UAAU,YACX,yBAAKA,UAAU,uBACX,2BAAOd,QAAQ,iBAAf,uBACA,2BAAOI,KAAK,OAAOH,GAAG,gBAAgBkO,KAAK,gBAAgB9N,SA/CzE,SAACnB,GACnBi2C,EAAS,CAILM,eAAgBC,IAAIC,gBAAgBz2C,EAAEqB,OAAOijB,MAAM,IAEnD+xB,cAAer2C,EAAEqB,OAAOijB,MAAM,KAElCuxB,EAAWW,IAAIC,gBAAgBz2C,EAAEqB,OAAOijB,MAAM,SAwClB,yBAAK1iB,UAAU,uBACX,yBAAKkH,IAAK8sC,EAAS7sC,IAAI,UAAUhI,GAAG,aAG5C,4BAAQa,UAAU,iBAAiBiH,QAAS,WAvEpE9D,EAASL,GAAqBoX,GAAuB7D,SAuE7B,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCApEhCgH,IACN,WAAa,KAmEN,mBEIjBwtE,GArHwB,WACnC,IAAMrxE,EAA0BqD,cAC1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzEiqB,EAAqCt1B,aAAY,SAACC,GAAD,OAAuBA,EAAMq1B,kBAE5E9iB,EAAsBC,+BAAtBD,kBAEJrW,EAAiB,GAErBm5B,EAAeI,cAAcrwB,KAAI,SAAC3B,EAAU4B,GAUxC,OATY,OAAR5B,QAAwB+P,IAAR/P,GAChBvH,EAAK8C,KAAK,CACNyU,GAAIpO,EACJqO,QAAQ,sBAAD,OAAcrO,EAAQ,GAC7BsO,UAAW,IAAIhgB,KAAK8P,EAAIuM,YACxB4D,QAAS,IAAIjgB,KAAK8P,EAAIwM,UACtB4D,UAAU,IAGX,KAGX,IAAI1P,EAAO/I,aAAaC,QAAQ,YAC5BwzB,EAAmB,EACV,OAAT1qB,IACA0qB,EAAWvmB,SAASnE,IAIxB,IAAI0O,EAAOzX,aAAaC,QAAQ,eAC5BqP,EAAsB,GACb,OAATmI,IACAnI,EAAcmI,GAGlB,IAAIiB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAsCzC,OArCAyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAa0zB,GAAen8B,EAAUuzB,OAG/C,CAACvzB,EAAUuzB,EAAU/a,EAAc3Y,IAEtCnH,QAAQC,IAAI,IAAIN,KAAK,KAAM,EAAG,GAAI,GAAI,KAEtCmQ,qBAAU,WACNxI,EAASqkB,MACTrkB,EAASmQ,GAAkB,qBAAYf,MACxC,CAACnV,EAAK+V,KAAMhQ,EAAUoP,IAGrB6H,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI9B,kBAAC,WAAD,KACF,yBAAKxH,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,qCAEJ,yBAAKa,UAAU,aACX,kBAAC,KAAD,CAAmBgY,OAAO,QAAQsE,aAAc,IAAI9gB,KAAQ+gB,cAAe,CACvEC,WAAYzY,EAAM0Y,OAAQ,CACtBtd,GAAI,KACJ+W,QAAS,CAAE7I,KAAM,WACjBqP,SAAU,CAAErP,KAAM,YAClBsP,UAAW,CAAEtP,KAAM,aACnBuP,QAAS,CAAEvP,KAAM,cAIrB,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAeiI,OAAO,WAAWuH,UAAU,QAAQC,QAAQ,UAC3D,kBAAC,KAAD,CAAexH,OAAO,OAAOuH,UAAU,QAAQC,QAAQ,UACvD,kBAAC,KAAD,CAAexH,OAAO,QAAQyH,aAAa,KAE/C,kBAAC,KAAD,CAAQC,SAAU,CAACC,KAAKC,KAAMC,KAAUC,KAAOC,SAhBvD,U,OCxGjB,SAASo3D,GAA0BtxE,EAAehE,GACrD,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,gCACuDlE,GAAM,CAC1D9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASsxE,GAA0BtxE,EAAUhE,OAUxDmE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASwrD,MACTxrD,EAASsrD,MACL,IAAIzjC,EAAYjnB,EAAK2kB,YACjBuC,EAAYlnB,EAAK4kB,YACjB6lC,EAA0C,CAC1CrvD,GAAI4E,EAAK5E,GACTgT,WAAYpO,EAAKoO,WACjBC,aAAcrO,EAAKqO,aACnB28C,YAAahrD,EAAKgrD,YAClBxB,cAAexpD,EAAKwpD,cACpBplC,UAAWpkB,EAAKokB,UAChBO,YAAasC,EACbrC,YAAasC,GAEjB,OAAO9nB,EAASurD,GAAqBF,OAE5CrqD,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YC5C5B,IA2Le44E,GA3L0B,WACrC,IAAMvxE,EAA0BqD,cAC1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QACzEy8C,EAAiD9nD,aAAY,SAACC,GAAD,OAAuBA,EAAM6nD,wBAE5Fh1C,EAAOzX,aAAaC,QAAQ,0BAC5B0nD,EAAiC,EACxB,OAATlwC,IACAkwC,EAAyBz6C,SAASuK,IARK,IAWnCN,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAEzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAa6oE,GAA0BtxE,EAAUynD,OAG1D,CAACznD,EAAUwY,EAAc3Y,EAAe4nD,IAG3Cj/C,qBAAU,WACNxI,EAASmQ,GAAkB,kBAAW,oBACvC,CAAClW,EAAK+V,KAAMhQ,IAEf,IAAIoa,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAC7Dvb,EAAqBub,EAAM2D,aAEzBxL,EAAqB6H,EAAM5H,oBAAsBuE,GAAuBtE,OAtDnC,8CA4D3C,WAAwBxX,GAAxB,gBAAAw+B,EAAA,yDACIx+B,EAAEiJ,kBACEL,IAFR,iEAKoBktC,IALpB,OAKQC,EALR,OAOI79B,EAD2B5T,EACNyxC,GAPzB,4CA5D2C,sBAsE3C,SAAS79B,EAASP,EAAkBo+B,GAC5BnyC,GAMJiD,IAAMgkC,KAAK,uCAAwB,CAC/B7jC,SAAUH,IAAMI,SAASC,WACzBC,UAAW,MAanB,SAASyB,IACL,OAAkB,OAAVotC,EArCPpyC,IAAQ0T,IACT1T,EAAO,CAAE7C,GAAI,EAAGoF,SAAU,GAAI8b,MAAO,GAAI5c,OAAQ,GAAIe,SAAU,GAAI8b,UAAW,GAAIC,SAAU,GAAIE,IAAK,GAAIC,MAAO,GAAIC,QAAS,GAAIH,YAAa,GAAIzb,kBAAmB,GAAI8b,WAAY,GAAID,QAAS,IAuCtM,IAAM1Z,EAAMlF,EAAK+C,kBAhG0B,EAkGbrG,mBAASwI,GAlGI,mBAkGpC8sC,EAlGoC,KAkG3BC,EAlG2B,OAoGjBv1C,qBApGiB,mBAoGpC01C,EApGoC,KAoG7BC,EApG6B,cAkH5BH,IAlH4B,6EAkH3C,iCAAAtX,EAAA,6DACU0X,EAAW,IAAIC,UACZC,OACL,UACAJ,EAAMK,eAJd,SAOsBrxC,MAAM,GAAD,OAChBC,+BADgB,oBACiC,CACpDhG,OAAQ,OACRU,KAAMu2C,IAVd,cAOU32C,EAPV,gBAauBA,EAAImG,OAb3B,cAaUC,EAbV,yBAcWA,EAAK2wC,WAdhB,4CAlH2C,sBAqI3C,OACIt6B,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KACT,kBAAC,IAAD,MACA,yBAAKxH,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAmCb,GAAG,iBAApD,oBAEJ,yBAAKa,UAAU,aACX,yBAAKA,UAAU,YACX,0BAAMoH,SAzJS,6CA0JX,yBAAKpH,UAAU,YACX,yBAAKA,UAAU,uBACX,2BAAOd,QAAQ,iBAAf,uBACA,2BAAOI,KAAK,OAAOH,GAAG,gBAAgBkO,KAAK,gBAAgB9N,SAvD7E,SAACnB,GACnBi2C,EAAS,CAILM,eAAgBC,IAAIC,gBAAgBz2C,EAAEqB,OAAOijB,MAAM,IAEnD+xB,cAAer2C,EAAEqB,OAAOijB,MAAM,KAElCuxB,EAAWW,IAAIC,gBAAgBz2C,EAAEqB,OAAOijB,MAAM,SAgDd,yBAAK1iB,UAAU,uBACX,yBAAKkH,IAAK8sC,EAAS7sC,IAAI,UAAUhI,GAAG,aAG5C,4BAAQa,UAAU,iBAAiBiH,QAAS,WA/ExE9D,EAASL,GAAqBoX,GAAuB7D,SA+EzB,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCA5EpCgH,IACN,WAAa,KA2EF,kBAQxB,yBAAKhH,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAmCb,GAAG,iBAApD,iCAEJ,yBAAKa,UAAU,aACX,yBAAKA,UAAU,0BAA0BkH,IAAKwoD,EAAqBC,qBAAqB7vD,OAAS,EAAI4vD,EAAqBC,qBAAqB,GAAGxnC,UAAY,GAAIhhB,IAAI,UC9LjLwtE,GAA4B,oBAC5BC,GAA6B,qBAC7BC,GAA+B,uBAE/BC,GAA4C,oCAC5CC,GAA2C,mCAC3CC,GAAmC,2BACnCC,GAAgC,wBAGhCC,GAAoB,YACpBC,GAAqB,aACrBC,GAAuB,eAIvBC,GAA2B,mBAC3BC,GAAwB,gBAIxBC,GAAwB,gBACxBC,GAAyB,iBACzBC,GAA2B,mBAI3BC,GAA+B,uBAC/BC,GAA4B,oBAG5Bh0E,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBCbjC,SAASo1E,GAAwBzyE,EAAegP,EAAoBmT,GACvE,IAAIlhB,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAOE,MAAM,GAAD,OACGC,+BADH,0CACkE8O,EADlE,YACgFmT,GAAa,CACzFjoB,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASyyE,GAAwBzyE,EAAUgP,EAAYmT,OAUlEhiB,MAAM,SAAAS,GACHZ,EDPL,CACH7D,KAAMiB,GACNs1E,uBCKkC9xE,IAC1BZ,EDyEL,CAAE7D,KAAMo2E,KCxEHvyE,EDSL,CAAE7D,KAAM01E,KCRH7xE,EDqCL,CAAE7D,KAAM+1E,KCpCHx5E,QAAQC,IAAIiI,EAAKhG,KAAKk6B,kBACtBl0B,EAAKhG,KAAKk6B,iBAAiBhrB,KAAI,SAAC3B,EAAU4B,GACtC,IAAI7I,EAA4B,CAC5BlF,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVkF,YAAajH,EAAIiH,YACjB+S,UAAWha,EAAIga,UACfqU,cAAeruB,EAAIquB,cACnBjnB,kBAAmBpH,EAAI+1C,iBACvB/zC,YAAahC,EAAIgC,YACjBosB,6BAA8BpuB,EAAIouB,6BAClCqE,WAAYzyB,EAAIyyB,WAChB9V,gBAAiB3c,EAAI2c,gBACrBC,eAAgB5c,EAAI4c,eACpBzV,MAAOnH,EAAImH,MACX0V,UAAW7c,EAAI6c,UACf1C,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBuT,SAAUztB,EAAIytB,SACdS,YAAaluB,EAAIkuB,YACjB/1B,OAAQ6H,EAAI7H,OACZ69C,sBAAuBh2C,EAAImuB,mBAY/B,MATmB,aAAfnuB,EAAI7H,OACJN,EDajB,SAAsC0yE,GACzC,MAAO,CAAEv2E,KAAM41E,GAAWW,uBAAwBA,GCdrBC,CAA6BzxE,IAElB,iBAAfiH,EAAI7H,OACTN,ED4CjB,SAAyC0yE,GAC5C,MAAO,CAAEv2E,KAAMi2E,GAAeM,uBAAwBA,GC7CzBE,CAAgC1xE,IAGzClB,EDtBjB,SAA4C0yE,GAC/C,MAAO,CAAEv2E,KAAMq1E,GAAmBkB,uBAAwBA,GCqB7BG,CAAmC3xE,IAEzC,QAGdF,OAAM,SAAAtF,GACHsE,ED3CT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UCwCMoD,CAAepD,IACxBhD,QAAQC,IAAI,YCgJbm6E,OAnOf,SAA8Bx3E,GAC1B,IAAMo3E,EAAqDjuE,aAAY,SAACC,GAAD,OAAuBA,EAAMguE,0BADnC,EAE/Bn3E,mBAAS,GAFsB,mBAE1Dw9C,EAF0D,KAE/CC,EAF+C,OAGnCz9C,mBAAkC,IAHC,mBAG1D05B,EAH0D,KAGjDqmB,EAHiD,OAIrC//C,mBAAS,KAJ4B,mBAI1DkgB,EAJ0D,KAIlD8/B,EAJkD,KAMjE7iD,QAAQC,IAAI+5E,EAAuBK,OAEnCvqE,qBAAU,WACN,IAAIwL,GAAK0+D,EAAuBM,UAAUr2E,OAAU+1E,EAAuBM,UAAUr2E,OAAU,GAAK,EAEhG2+C,EADM,IAANtnC,EACW0+D,EAAuBM,UAGvBN,EAAuBM,UAAUr0D,MAAM,EAAG,IAGzDq6B,EAAchlC,EAAI,KACnB,CAAC0+D,EAAuBM,YAE3Bt6E,QAAQC,IAAKogD,GA+Bb,IAAMz1C,EAAUC,cA2EhB,OAHA7K,QAAQC,IAAI8iB,GAIR,kBAAC,WAAD,KACI,yBAAK5e,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,sEACX,wBAAIA,UAAU,QAAd,SAAyBo4B,EAAQxZ,QAAO,SAACva,GACrC,MAAoB,KAAhB5F,EAAMY,MACCgF,EAEqB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACtKtiB,EAEJ,QACRvE,OARH,sBASA,yBAAKE,UAAU,cACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,QAAhB,kBACA,4BAAQqN,KAAK,OAAOlO,GAAG,OACnBE,MAAOuf,EACPrf,SA/DpC,SAAsBnB,GAClBsgD,EAAUtgD,EAAEqB,OAAOJ,SAgEa,4BAAQA,MAAM,KAAd,kCACA,4BAAQA,MAAM,KAAd,mCACA,4BAAQA,MAAM,KAAd,4BAEJ,4BAAQW,UAAU,0CAA0CV,KAAK,SAAS2H,QAAS,YAjEnH,WACI,GAAe,MAAX2X,EAAgB,CAChB,IAAIzH,GAAK0+D,EAAuBM,UAAUr2E,OAAU+1E,EAAuBM,UAAUr2E,OAAU,GAAK,EAEhG2+C,EADM,IAANtnC,EACW0+D,EAAuBM,UAGvBN,EAAuBM,UAAUr0D,MAAM,EAAG,IAGzDq6B,EAAchlC,EAAI,QAEjB,GAAe,MAAXyH,EAAgB,CACrB,IAAIzH,GAAK0+D,EAAuBM,UAAUr2E,OAAU+1E,EAAuBM,UAAUr2E,OAAU,GAAK,EAEhG2+C,EADM,IAANtnC,EACW0+D,EAAuBK,MAGvBL,EAAuBK,MAAMp0D,MAAM,EAAG,IAGrDq6B,EAAchlC,EAAI,QAEjB,GAAe,MAAXyH,EAAgB,CACrB,IAAIzH,GAAK0+D,EAAuBM,UAAUr2E,OAAU+1E,EAAuBM,UAAUr2E,OAAU,GAAK,EAEhG2+C,EADM,IAANtnC,EACW0+D,EAAuBO,cAGvBP,EAAuBO,cAAct0D,MAAM,EAAG,IAG7Dq6B,EAAchlC,EAAI,IAiCiG4nC,KAA3F,eAAsH,uBAAG/+C,UAAU,sBAKvJ,yBAAKA,UAAU,YAEPo4B,EAAQxZ,QAAO,SAACva,GACZ,MAAoB,KAAhB5F,EAAMY,MACCgF,EAEqB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACtKtiB,EAEJ,QACR4I,KAAI,SAAC3B,EAAK4B,GACT,YAAYmO,IAAR/P,EACO,KAGP,yBAAKtL,UAAU,WAAWiH,QAAS,YAxH3C,SAAC6R,GACjB7V,aAAaY,WAAW,sBACxBZ,aAAae,QAAQ,qBAAsB8U,EAAOxL,aAClDrK,aAAaY,WAAW,aACxBZ,aAAae,QAAQ,YAAa8U,EAAOwM,UAAU1pB,YACnDqH,aAAaY,WAAW,eACxBZ,aAAae,QAAQ,cAAe8U,EAAOvG,aAC3CtP,aAAaY,WAAW,gBACxBZ,aAAae,QAAQ,eAAgB8U,EAAOyM,aAAa3pB,YACzDqH,aAAaY,WAAW,iBACxBZ,aAAae,QAAQ,gBAAiB8U,EAAO2M,cAAc7pB,YAC3DqH,aAAaY,WAAW,kBACxBZ,aAAae,QAAQ,iBAAkB8U,EAAOoP,eAAetsB,YAC7DqH,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAY8U,EAAOigB,SAASn9B,YACjDqH,aAAaY,WAAW,kBACxBZ,aAAae,QAAQ,iBAAkB8U,EAAO0M,eAAe5pB,YAC7DqH,aAAaY,WAAW,uBACxBZ,aAAae,QAAQ,sBAAuB8U,EAAOzL,KAAKzR,YACxDqH,aAAaY,WAAW,SACxBZ,aAAae,QAAQ,QAAS8U,EAAOrG,MAAM7W,YAC3CqH,aAAaY,WAAW,qBACxBZ,aAAae,QAAQ,oBAAqB8U,EAAO3Z,GAAGvD,YACpDqH,aAAaY,WAAW,aACxBZ,aAAae,QAAQ,YAAa8U,EAAOqP,UAAUvsB,YAEnD6K,EAAQI,KAAK,CACTmB,SAFO,2BA+FwD6I,CAAYvF,KACnD,yBAAKtL,UAAU,8CACX,yBAAKA,UAAU,qCAAoC,yBAAKkH,IAAKoE,EAAI6c,UAAWlQ,MAAM,OAAO9Q,IAAI,MAC7F,wBAAInH,UAAU,QAAQsL,EAAI+B,MAAU,0BAAMrN,UAAU,gCAAgCsL,EAAIma,cAApD,MAA0Ena,EAAIia,aAA9E,MAAmGja,EAAIka,gBAC3I,0BAAMxlB,UAAU,sBAAhB,uBAAgDsL,EAAIytB,UACpD,0BAAM/4B,UAAU,WAAhB,4CAA6CsL,EAAIyyB,YACjD,0BAAM/9B,UAAU,WAAhB,kDAA8CsL,EAAI2c,iBAClD,0BAAMjoB,UAAU,WAAhB,wDAAiDsL,EAAIg2C,sBAAsBl2B,UAAU,EAAG,IAAM,IAAM9f,EAAIg2C,sBAAsBl2B,UAAU,GAAI,KAC5I,0BAAMprB,UAAU,gBAAhB,mDAAsDsL,EAAIouB,6BAA6BtO,UAAU,EAAG,IAAM,IAAM9f,EAAIouB,6BAA6BtO,UAAU,GAAI,KAC/J,yBACIprB,UAAU,wCACV,6BAAK,uBAAGA,UAAU,qBAAuB,0BAAMA,UAAU,QAAhB,WAA6BsL,EAAImH,MAAjC,SACzC,yBAAKzS,UAAU,sCACX,yBAAKA,UAAU,YAAW,yBAAKA,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,mCAAmCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,QAAa,0BAAMjY,UAAU,iBAU/V,yBAAKA,UAAU,8CACX,6BACI,wBAAIA,UAAU,cACV,wBAAIA,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,WAAW1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBACtE,0BAAM43C,cAAY,QAAlB,UAIJxjB,MAAMC,KAAKD,MAAOygB,GAAY3kC,QAAQtK,KAAI,SAAC3B,EAAK8B,GAC5C,OACI,wBAAIpN,UAAU,aAAY,uBAAGA,UAAU,YAAYsM,KAAK,IAAIrF,QAAS,SAAC7I,GAxL1G,IAA0B8gD,EAyLc9gD,EAAEiJ,iBAzLhB63C,EA0L+B5zC,EAzLrDzP,QAAQC,IAAIojD,GACG,MAAXtgC,EAEI6/B,EADAS,IAAUhD,EACC25B,EAAuBM,UAAUr0D,MAAc,EAARo9B,GAGvC22B,EAAuBM,UAAUr0D,MAAc,EAARo9B,EAAmB,EAARA,EAAY,IAG7D,MAAXtgC,EAED6/B,EADAS,IAAUhD,EACC25B,EAAuBO,cAAct0D,MAAc,EAARo9B,GAG3C22B,EAAuBO,cAAct0D,MAAc,EAARo9B,EAAmB,EAARA,EAAY,IAGjE,MAAXtgC,GAED6/B,EADAS,IAAUhD,EACC25B,EAAuBK,MAAMp0D,MAAc,EAARo9B,GAGnC22B,EAAuBK,MAAMp0D,MAAc,EAARo9B,EAAmB,EAARA,EAAY,MAmKf5zC,EAAM,OAIhD,wBAAItL,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,OAAO1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBAClE,0BAAM43C,cAAY,QAAlB,gBCrHrBo3B,GAlG2B,WACtC,IAAMlzE,EAA0BqD,cAE1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAC3EjH,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAGT,IAAI0O,EAAOzX,aAAaC,QAAQ,aAC5BoiB,EAAoB,EACX,OAAT5K,IACA4K,EAAYnV,SAASuK,IAbmB,IAgBpCN,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAagqE,GAAwBzyE,EAAUhE,EAAImmB,OAG5D,CAACniB,EAAUhE,EAAIwc,EAAc3Y,EAAesiB,IAE/C3Z,qBAAU,WACNxI,EAASmQ,GAAkB,mBAAU,OACtC,CAACnQ,EAAU/F,EAAK+V,OApDyB,MAsDRzU,mBAAS,IAtDD,mBAsDrC4tB,EAtDqC,KAsDzBC,EAtDyB,KAwD5C,OACInS,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KAQL,yBAAKxH,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,2BAAOV,KAAK,OAAOH,GAAG,QAAQa,UAAU,eAAeE,YAAY,mBAAWX,SAAU,SAACC,GACrF+sB,EAAc/sB,EAAMC,OAAOJ,OAC3BxD,QAAQC,IAAIwwB,OAGpB,4BAAQhtB,KAAK,SAASU,UAAU,mBAC5B,uBAAGA,UAAU,sBAK7B,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAsBX,MAAOitB,OCvF1C,SAASgqD,GAAmBnzE,EAAegP,EAAoBo9C,GAClE,IAAInrD,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,yBACgD8O,EADhD,YAC8Do9C,GAAc,CACzElyD,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASmzE,GAAmBnzE,EAAUgP,EAAYo9C,OAU7DjsD,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASgqD,MACTtxD,QAAQC,IAAIiI,EAAKhG,KAAKuvD,6BACtBrqD,aAAaY,WAAW,eACxBZ,aAAae,QAAQ,cAAeD,EAAKhG,KAAKovE,aAC9CppE,EAAKhG,KAAKuvD,4BAA4BrgD,KAAI,SAAC3B,EAAU4B,GACjD,IAAIwoC,EAAyC,CACzCvjC,WAAY7G,EAAI6G,WAChBo7C,cAAejiD,EAAIiiD,cACnB1C,YAAav/C,EAAIu/C,YACjBC,SAAUx/C,EAAIw/C,SACdx9C,YAAahC,EAAIgC,YACjB6a,UAAW7c,EAAI6c,UACfyiC,uBAAwBt/C,EAAIs/C,uBAC5Bx4C,aAAc9G,EAAI8G,aAClB0mC,SAAUxtC,EAAIwtC,SACdrB,MAAOnsC,EAAImsC,MACXlqC,KAAMjC,EAAIiC,MAGd,OAAOpK,EAASiqD,GAA+B1X,UAGtDvxC,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCpErB,IAAMy6E,GAA+C,uCAC/CC,GAAgD,wCAChDC,GAAkD,0CAElDC,GAA+D,uDAC/DC,GAA8D,sDAC9Dh1E,GAAiC,yBAGjCnB,GAA2B,mBAC3Bo2E,GAAsD,8CACtDC,GAAmD,2CCHzD,SAASC,GAAqC3zE,EAAeosD,EAAoBp9C,GACpF,IAAI/N,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAQE,MAAM,GAAD,OACEC,+BADF,6CACoEksD,EADpE,YACkFp9C,GAAc,CAC7F9U,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS2zE,GAAqC3zE,EAAUosD,EAAYp9C,OAU/E7O,MAAM,SAAAS,GACHZ,EDCL,CAAE7D,KAAMs3E,KCAH,IAAIG,EAAiE,CACjExnB,WAAYxrD,EAAKwrD,WACjBqe,iBAAkB7pE,EAAK6pE,iBACvBpC,+BAAgCznE,EAAKynE,+BACrCwL,iBAAkBjzE,EAAKizE,iBACvBnJ,YAAa9pE,EAAK8pE,aAEtB1qE,EDJT,SAAyC4zE,GAC5C,MAAO,CAAEz3E,KAAMi3E,GAAsCQ,iCAAkCA,GCGlEE,CAAgCF,OAE5C5yE,OAAM,SAAAtF,GACHsE,EDtBT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UCmBMoD,CAAepD,IACxBhD,QAAQC,IAAI,YCpC5B,IA4Meo7E,GA5MmB,WAC9B,IAAM/zE,EAA0BqD,cAC1B0mD,EAAoEtlD,aAAY,SAACC,GAAD,OAAuBA,EAAM8lD,mCAC7GopB,EAAuEnvE,aAAY,SAACC,GAAD,OAAuBA,EAAMsvE,qCAC9G/8D,EAAsBC,+BAAtBD,kBAEJM,EAAOzX,aAAaC,QAAQ,MAC5BiP,EAAoB,EACX,OAATuI,IACAvI,EAAahC,SAASuK,IAG1B,IAAIsyB,EAAO/pC,aAAaC,QAAQ,YAC5BwzB,EAAmB,EACV,OAATsW,IACAtW,EAAWvmB,SAAS68B,IAGxB,IAAIhhC,EAAO/I,aAAaC,QAAQ,eAC5BiqE,EAAc,EACL,OAATnhE,IACAmhE,EAAchyD,WAAWnP,IAG7B,IAAI8O,EAAO7X,aAAaC,QAAQ,eAC5BqP,EAAc,GACL,OAATuI,IACAvI,EAAcuI,GAGlB,IAAIq5D,EAAyB,GAAZhH,EACbxxD,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAQbuL,wBAAa0qE,GAAmBnzE,EAAUgP,EAAYukB,IACtD9qB,wBAAakrE,GAAqC3zE,EAAUuzB,EAAUvkB,QAG/E,CAAChP,EAAUwY,EAAc3Y,EAAemP,EAAYukB,IAEvD,IAAMt5B,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAE/EtH,qBAAU,WACNxI,EAASmQ,GAAkBf,EAAa,yBACzC,CAACnV,EAAK+V,KAAMhQ,EAAUoP,IAEzB,IAAI27C,EAA2C,GAC3CC,EAA0C,GAC9CjB,EAA+BS,gCAAgC1gD,KAAI,SAAC3B,EAAK8B,GAGrE,OAFA8gD,EAA+BrnD,KAAKyE,EAAImsC,OACxC0W,EAA8BtnD,KAAKyE,EAAIiiD,eAChCjiD,KAGX,IASMvH,EAAO,CACTu+B,OAFW6rB,EAGX5rB,SAAU,CACN,CACInjC,MAAO,+BACP2E,KAAMmqD,EACN1rB,YAAa,oBACbvY,gBAAiB,6BAKvBxjB,EAAUC,cAQhB,OACI0T,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KACL,yBAAKxH,UAAU,OACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,yBAAKA,UAAU,kBACX,kBAAC4iC,GAAD,CAAW7+B,KAAMA,KAErB,yBAAK/D,UAAU,8BACX,4BACIA,UAAU,4BACVb,GAAG,yBACH8H,QAAS,WA3BzCR,EAAQI,KAAK,CACTmB,SAFO,gCAyBiB,oBAMI,uBAAGhI,UAAS,2BAA8Bb,GAAG,0BAMjE,yBAAKa,UAAU,0BACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAmCb,GAAG,iBAApD,sCAEJ,yBAAKa,UAAU,aACX,kBAAC,KAAD,CAAqBX,MAAO80E,EAAYzgE,KAAI,UAAKygE,KADrD,QAQhB,yBAAKn0E,UAAU,OACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAmCb,GAAG,iBAApD,qBAEJ,yBAAKa,UAAU,aAEP+2E,EAAiCI,kCAAkClqE,KAAI,SAAC3B,EAAK8B,GACzE,OACI,uBAAGm1C,wBAAyB,CAACC,OAAQl3C,EAAI0rE,gCAWzDD,EAAiCI,kCAAkCr3E,OAAS,GAC5Ei3E,EAAiCI,kCAAkClqE,KAAI,SAAC3B,EAAK8B,GACzE,YAAYiO,IAAR/P,GACwB,IAApBA,EAAIuiE,YAEA,yBAAK7tE,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,4BACIV,KAAK,SACLU,UAAU,kBACViH,QAAS,WAvGzDR,EAAQI,KAAK,CACXmB,SAFS,2BAqGiC,uCAahB,+CC7HrBovE,OArEf,SAA8B34E,GAC1B,IAAMyuD,EAAoEtlD,aAAY,SAACC,GAAD,OAAuBA,EAAM8lD,mCAE7GlnD,EAAUC,cAkBV4qE,EAAyCpkB,EAA+BS,gCAAgC1gD,KAAI,SAACy9C,EAAUx9C,GAEzH,OAAKw9C,EACG,wBAAI1qD,UAAS,YACjB4Q,IAAG,iBAAY1D,IACf,wBAAIya,MAAM,MAAM3nB,UAAU,cAAckN,EAAQ,GAChD,wBAAIlN,UAAU,cAAc0qD,EAAS6C,eACrC,wBAAIvtD,UAAU,cAAc0qD,EAASI,UACrC,wBAAI9qD,UAAU,cAAc0qD,EAASG,aACrC,wBAAI7qD,UAAU,cAAc0qD,EAASjT,OACrC,4BACI,4BACIn4C,KAAK,SACLU,UAAU,kBACViH,QAAS,YA/BH,SAACyjD,GACnBznD,aAAaY,WAAW,sBACxBZ,aAAae,QAAQ,qBAAsB0mD,EAASviC,WACpDllB,aAAaY,WAAW,SACxBZ,aAAae,QAAQ,QAAS0mD,EAASjT,MAAM77C,YAC7CqH,aAAaY,WAAW,eACxBZ,aAAae,QAAQ,cAAe0mD,EAASp9C,aAC7CrK,aAAaY,WAAW,eACxBZ,aAAae,QAAQ,cAAe0mD,EAASG,aAC7C5nD,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAY0mD,EAAS5R,UAE1CryC,EAAQI,KAAK,CACTmB,SAFO,oBAqBK6gD,CAAc6B,KAJtB,mBATgB,QAuB5B,OACI,kBAAC,WAAD,KACI,yBAAK1qD,UAAU,4BACX,2BAAOA,UAAU,SACb,2BAAOb,GAAG,iCACN,4BACI,wBAAIwoB,MAAM,MAAM3nB,UAAU,kBAA1B,KACA,wBAAI2nB,MAAM,MAAM3nB,UAAU,kBAA1B,UACA,wBAAI2nB,MAAM,MAAM3nB,UAAU,kBAA1B,+BACA,wBAAI2nB,MAAM,MAAM3nB,UAAU,kBAA1B,2BACA,wBAAI2nB,MAAM,MAAM3nB,UAAU,kBAA1B,kBACA,wBAAI2nB,MAAM,UAGlB,+BACK2pD,OCmCV+F,I,OApGwB,WACnC,IAAMl0E,EAA0BqD,cACxB4T,EAAsBC,+BAAtBD,kBAEJM,EAAOzX,aAAaC,QAAQ,cAC5BiP,EAAoB,EACX,OAATuI,IACAvI,EAAahC,SAASuK,IAG1B,IAAIE,EAAO3X,aAAaC,QAAQ,YAC5BwzB,EAAkB,EACT,OAAT9b,IACA8b,EAAWvmB,SAASyK,IAGxB,IAAIe,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAgCzC,OA/BAyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,EACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAGT8C,EAAS9C,KACTuL,wBAAayhD,GAAsClqD,EAAUuzB,EAASvkB,KAI1EvG,wBAAayhD,GAAsClqD,EAAUuzB,EAASvkB,OAG/E,CAAChP,EAAUwY,EAAc3Y,EAAemP,EAAYukB,IAGnDtc,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KAIH,yBAAKxH,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,uBACf,yBAAKA,UAAU,cAAcb,GAAG,kBAChC,yBAAKa,UAAU,gBACX,2BAAOV,KAAK,SAASH,GAAG,QAAQa,UAAU,eAAeE,YAAY,sBAEzE,4BAAQZ,KAAK,SAASU,UAAU,mBAC5B,uBAAGA,UAAU,sBAKrB,gCAMR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAmCb,GAAG,iBAApD,oBAEJ,yBAAKa,UAAU,aACX,kBAAC,GAAD,a,+NC4Bbs3E,OAlHf,WACI,IAAMn0E,EAA0BqD,cADA,EAGE9H,mBAAS,CACvCgvE,OAAQ,CAAE7uE,MAAO,GAAIQ,MAAO,MAJA,mBAGzBsH,EAHyB,KAGdC,EAHc,KAO1BxJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAgD/E,SAASjM,IACL,OAAQL,EAAU+mE,OAAO7uE,QAAU8H,EAAU+mE,OAAOruE,MA/CxDsM,qBAAU,WACNxI,EAASmQ,GAAkB,sBAAY,OACxC,CAAClW,EAAK+V,KAAMhQ,IAXiB,MA2DJzE,mBAAS,GA3DL,mBA2DzBmpB,EA3DyB,KA2DjB8lD,EA3DiB,KAmE1BlnE,EAAUC,cAMhB,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,MACA,yBAAK1G,UAAU,iBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAd,uCAEJ,yBAAKA,UAAU,aACX,0BAAMoH,SAlE9B,SAAkBhJ,GAEd,GADAA,EAAEiJ,kBACEL,IAAJ,EAOJ,SAAkB+O,GACV,IAAM3I,EAAMnI,IAAMqC,QAAQ,uFAAgD,CACtElC,SAAUH,IAAMI,SAASC,aAE7BzJ,QAAQC,IAAIsR,GACZjK,EAASmqE,GAAwB,CAC7B/d,WAAYtsD,aAAaC,QAAQ,YACjCsoE,+BAAgCvoE,aAAaC,QAAQ,kCACrD0qE,iBAAkBjnE,EAAU+mE,OAAOruE,MACnCwuE,YAAahmD,GACdza,IAEH5H,YAAW,WAgCfiB,EAAQI,KADA,cA7BD,KAEH1D,EAASkR,MACTlR,EAASmR,GAA0Cd,GAAwC6C,OApB/FC,MA6DwB,yBAAKtW,UAAU,cACX,sDACA,kBAAC,UAAD,CACEiH,QAzBb,SAAC6mE,GACpBH,EAAUG,IAyBsBC,YAAalmD,EACbmmD,aAAW,EACXC,aAAc,CAAC,WAAY,MAAO,UAAW,QAAS,cAG5D,yBAAKjuE,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,eACVE,MAAOsH,EAAU+mE,OAAOruE,MACxBU,MAAM,SACNR,SApFpC,SAA6BwH,GACzBH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,WAoF/CO,UAAU,EACVC,UAAW,IACXT,MAAM,mBACNc,YAAY,MAEpB,4BAAQF,UAAU,iBAAiBiH,QAAS,WAxDpE9D,EAASmR,GAA0Cd,GAAwC6C,SAwDnE,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCArDhCgH,IACN,WAAa,KAoDN,mBCnHnB2tE,I,OAA4B,qBAC5BC,GAA6B,qBAC7BC,GAA+B,uBAE/BC,GAA4C,oCAC5CC,GAA2C,mCAC3CC,GAAmC,2BACnCC,GAAgC,wBAGhCC,GAAoB,YACpBC,GAAqB,aACrBC,GAAuB,eAIvBC,GAA2B,mBAC3BC,GAAwB,gBAIxBC,GAAwB,gBACxBC,GAAyB,iBACzBC,GAA2B,mBAI3BC,GAA+B,uBAC/BC,GAA4B,oBAG5Bh0E,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBCXjC,SAAS+2E,GAA+Bp0E,EAAeyiD,EAAmBtgC,GAC7E,IAAIlhB,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAOE,MAAM,GAAD,OACGC,+BADH,yCACiEuiD,EADjE,YAC8EtgC,GAAa,CACvFjoB,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASo0E,GAA+Bp0E,EAAUyiD,EAAWtgC,OAUxEhiB,MAAM,SAAAS,GACHZ,EDTL,CACH7D,KAAMiB,GACNi3E,sBCOkCzzE,IAC1BZ,EDuEL,CAAE7D,KAAMo2E,KCtEHvyE,EDOL,CAAE7D,KAAM01E,KCNH7xE,EDmCL,CAAE7D,KAAM+1E,KClCHx5E,QAAQC,IAAIiI,EAAKhG,KAAKk6B,kBACtBl0B,EAAKhG,KAAKk6B,iBAAiBhrB,KAAI,SAAC3B,EAAU4B,GACtC,IAAI7I,EAA2B,CAC3BlF,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVkF,YAAajH,EAAIiH,YACjB+S,UAAWha,EAAIga,UACfqU,cAAeruB,EAAIquB,cACnBjnB,kBAAmBpH,EAAI+1C,iBACvB/zC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrBC,eAAgB5c,EAAI4c,eACpBzV,MAAOnH,EAAImH,MACX0V,UAAW7c,EAAI6c,UACf4V,WAAYzyB,EAAIyyB,WAChBrE,6BAA8BpuB,EAAIouB,6BAClCjU,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBuT,SAAUztB,EAAIytB,SACdS,YAAaluB,EAAIkuB,YACjB/1B,OAAQ6H,EAAI7H,OACZ69C,sBAAuBh2C,EAAImuB,kBAC3B0kB,sBAAuB7yC,EAAI6yC,sBAC3BC,wBAAyB9yC,EAAI8yC,yBAYjC,MATmB,UAAf9yC,EAAI7H,OACJN,EDSjB,SAAqCq0E,GACxC,MAAO,CAAEl4E,KAAM41E,GAAWsC,sBAAuBA,GCVpBC,CAA4BpzE,IAEjB,cAAfiH,EAAI7H,OACTN,EDwCjB,SAAwCq0E,GAC3C,MAAO,CAAEl4E,KAAMi2E,GAAeiC,sBAAuBA,GCzCxBE,CAA+BrzE,IAGxClB,ED1BjB,SAA2Cq0E,GAC9C,MAAO,CAAEl4E,KAAMq1E,GAAmB6C,sBAAuBA,GCyB5BG,CAAkCtzE,IAExC,QAGdF,OAAM,SAAAtF,GACHsE,ED/CT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UC4CMoD,CAAepD,IACxBhD,QAAQC,IAAI,Y,OC+Jb87E,OAtPf,SAA8Bn5E,GAC1B,IAAM+4E,EAAmD5vE,aAAY,SAACC,GAAD,OAAuBA,EAAM2vE,yBADjC,EAE/B94E,mBAAS,GAFsB,mBAE1Dw9C,EAF0D,KAE/CC,EAF+C,OAGnCz9C,mBAAiC,IAHE,mBAG1D05B,EAH0D,KAGjDqmB,EAHiD,OAIrC//C,mBAAS,KAJ4B,mBAI1DkgB,EAJ0D,KAIlD8/B,EAJkD,KAMjE/yC,qBAAU,WACN,IAAIwL,GAAKqgE,EAAsBrB,UAAUr2E,OAAU03E,EAAsBrB,UAAUr2E,OAAU,IAAM,GAE/F2+C,EADM,IAANtnC,EACWqgE,EAAsBrB,UAGtBqB,EAAsBrB,UAAUr0D,MAAM,EAAG,KAGxDq6B,EAAchlC,EAAI,KACnB,CAACqgE,EAAsBrB,YAE1Bt6E,QAAQC,IAAKogD,GA+Bb,IAAMz1C,EAAUC,cA2EhB,OAHA7K,QAAQC,IAAI8iB,GAIR,kBAAC,WAAD,KACI,yBAAK5e,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,sEACX,wBAAIA,UAAU,QAAd,SAAyBo4B,EAAQxZ,QAAO,SAACva,GACrC,MAAoB,KAAhB5F,EAAMY,MACCgF,EAEqB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACtKtiB,EAEJ,QACRvE,OARH,sBASA,yBAAKE,UAAU,cACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,QAAhB,kBACA,4BAAQqN,KAAK,OAAOlO,GAAG,OACnBE,MAAOuf,EACPrf,SA/DpC,SAAsBnB,GAClBsgD,EAAUtgD,EAAEqB,OAAOJ,SAgEa,4BAAQA,MAAM,KAAd,kCACA,4BAAQA,MAAM,KAAd,mCACA,4BAAQA,MAAM,KAAd,4BAEJ,4BAAQW,UAAU,0CAA0CV,KAAK,SAAS2H,QAAS,YAjEnH,WACI,GAAe,MAAX2X,EAAgB,CAChB,IAAIzH,GAAKqgE,EAAsBrB,UAAUr2E,OAAU03E,EAAsBrB,UAAUr2E,OAAU,IAAM,GAE/F2+C,EADM,IAANtnC,EACWqgE,EAAsBrB,UAGtBqB,EAAsBrB,UAAUr0D,MAAM,EAAG,KAGxDq6B,EAAchlC,EAAI,QAEjB,GAAe,MAAXyH,EAAgB,CACrB,IAAIzH,GAAKqgE,EAAsBrB,UAAUr2E,OAAU03E,EAAsBrB,UAAUr2E,OAAU,IAAM,GAE/F2+C,EADM,IAANtnC,EACWqgE,EAAsBtB,MAGtBsB,EAAsBtB,MAAMp0D,MAAM,EAAG,KAGpDq6B,EAAchlC,EAAI,QAEjB,GAAe,MAAXyH,EAAgB,CACrB,IAAIzH,GAAKqgE,EAAsBrB,UAAUr2E,OAAU03E,EAAsBrB,UAAUr2E,OAAU,IAAM,GAE/F2+C,EADM,IAANtnC,EACWqgE,EAAsBpB,cAGtBoB,EAAsBpB,cAAct0D,MAAM,EAAG,KAG5Dq6B,EAAchlC,EAAI,IAiCiG4nC,KAA3F,eAAsH,uBAAG/+C,UAAU,sBAKvJ,yBAAKA,UAAU,YAEPo4B,EAAQxZ,QAAO,SAACva,GACZ,MAAoB,KAAhB5F,EAAMY,MACCgF,EAEqB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACtKtiB,EAEJ,QACR4I,KAAI,SAAC3B,EAAK4B,GACT,YAAYmO,IAAR/P,EACO,KAGP,yBAAKtL,UAAU,WAAWiH,QAAS,YAxH3C,SAAC6R,GACjB7V,aAAaY,WAAW,sBACxBZ,aAAae,QAAQ,qBAAsB8U,EAAOxL,aAClDrK,aAAaY,WAAW,aACxBZ,aAAae,QAAQ,YAAa8U,EAAOwM,UAAU1pB,YACnDqH,aAAaY,WAAW,eACxBZ,aAAae,QAAQ,cAAe8U,EAAOvG,aAC3CtP,aAAaY,WAAW,gBACxBZ,aAAae,QAAQ,eAAgB8U,EAAOyM,aAAa3pB,YACzDqH,aAAaY,WAAW,iBACxBZ,aAAae,QAAQ,gBAAiB8U,EAAO2M,cAAc7pB,YAC3DqH,aAAaY,WAAW,kBACxBZ,aAAae,QAAQ,iBAAkB8U,EAAOoP,eAAetsB,YAC7DqH,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAY8U,EAAOigB,SAASn9B,YACjDqH,aAAaY,WAAW,kBACxBZ,aAAae,QAAQ,iBAAkB8U,EAAO0M,eAAe5pB,YAC7DqH,aAAaY,WAAW,uBACxBZ,aAAae,QAAQ,sBAAuB8U,EAAOzL,KAAKzR,YACxDqH,aAAaY,WAAW,SACxBZ,aAAae,QAAQ,QAAS8U,EAAOrG,MAAM7W,YAC3CqH,aAAaY,WAAW,qBACxBZ,aAAae,QAAQ,oBAAqB8U,EAAO3Z,GAAGvD,YACpDqH,aAAaY,WAAW,aACxBZ,aAAae,QAAQ,YAAa8U,EAAOqP,UAAUvsB,YAEnD6K,EAAQI,KAAK,CACTmB,SAFO,2BA+FwD6I,CAAYvF,KACnD,yBAAKtL,UAAU,8CACX,yBAAKA,UAAU,qCAAoC,yBAAKkH,IAAKoE,EAAI6c,UAAWlQ,MAAM,OAAO9Q,IAAI,MAC7F,wBAAInH,UAAU,QAAQsL,EAAI+B,MAAU,0BAAMrN,UAAU,gCAAgCsL,EAAIma,cAApD,MAA0Ena,EAAIia,aAA9E,MAAmGja,EAAIka,gBAC3I,0BAAMxlB,UAAU,sBAAhB,uBAAgDsL,EAAIytB,UACpD,0BAAM/4B,UAAU,WAAhB,4CAA6CsL,EAAIyyB,YACjD,0BAAM/9B,UAAU,WAAhB,kDAA8CsL,EAAI2c,iBAClD,0BAAMjoB,UAAU,WAAhB,wDAAiDsL,EAAIg2C,sBAAsBl2B,UAAU,EAAG,IAAM,IAAM9f,EAAIg2C,sBAAsBl2B,UAAU,GAAI,KAC5I,0BAAMprB,UAAU,gBAAhB,mDAAsDsL,EAAIouB,6BAA6BtO,UAAU,EAAG,IAAM,IAAM9f,EAAIouB,6BAA6BtO,UAAU,GAAI,KAC/J,yBACIprB,UAAU,wCACV,6BAAK,uBAAGA,UAAU,qBAAuB,0BAAMA,UAAU,QAAhB,WAA6BsL,EAAImH,MAAjC,SACzC,yBAAKzS,UAAU,sCACX,yBAAKA,UAAU,YAAW,yBAAKA,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,mCAAmCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,QAAa,0BAAMjY,UAAU,QAEvT,WACI,GAAe,MAAX4e,EAAgB,CAChB,QAAkCvD,IAA9B/P,EAAI6yC,uBAAqE,OAA9B7yC,EAAI6yC,sBAAgC,CAC/E,IAAIpuC,EAAK,GAUT,OATAzE,EAAI8yC,wBAAwBnxC,KAAI,SAAC4qE,EAAMrI,GAOnC,OANIA,EAAOlkE,EAAI6yC,sBAAsBr+C,OAAS,EAC1CiQ,GAAQ8nE,EAAO,IAGf9nE,GAAMzE,EAEH,QAEJyE,EAGP,OAAO,GAhBnB,YA6BxC,yBAAK/P,UAAU,8CACX,6BACI,wBAAIA,UAAU,cACV,wBAAIA,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,WAAW1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBACtE,0BAAM43C,cAAY,QAAlB,UAIJxjB,MAAMC,KAAKD,MAAOygB,GAAY3kC,QAAQtK,KAAI,SAAC3B,EAAK8B,GAC5C,OACI,wBAAIpN,UAAU,aAAY,uBAAGA,UAAU,YAAYsM,KAAK,IAAIrF,QAAS,SAAC7I,GA7M1G,IAA0B8gD,EA8Mc9gD,EAAEiJ,iBA9MhB63C,EA+M+B5zC,EA9MrDzP,QAAQC,IAAIojD,GACG,MAAXtgC,EAEI6/B,EADAS,IAAUhD,EACCs7B,EAAsBrB,UAAUr0D,MAAc,GAARo9B,GAGtCs4B,EAAsBrB,UAAUr0D,MAAc,GAARo9B,EAAoB,GAARA,EAAa,KAG9D,MAAXtgC,EAED6/B,EADAS,IAAUhD,EACCs7B,EAAsBpB,cAAct0D,MAAc,GAARo9B,GAG1Cs4B,EAAsBpB,cAAct0D,MAAc,GAARo9B,EAAoB,GAARA,EAAa,KAGlE,MAAXtgC,GAED6/B,EADAS,IAAUhD,EACCs7B,EAAsBtB,MAAMp0D,MAAc,GAARo9B,GAGlCs4B,EAAsBtB,MAAMp0D,MAAc,GAARo9B,EAAoB,GAARA,EAAa,OAwLhB5zC,EAAM,OAIhD,wBAAItL,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,OAAO1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBAClE,0BAAM43C,cAAY,QAAlB,gBCvIrB64B,GAnG0B,WACrC,IAAM30E,EAA0BqD,cAE1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAC3EjH,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAGT,IAAI0O,EAAOzX,aAAaC,QAAQ,aAC5BoiB,EAAoB,EACX,OAAT5K,IACA4K,EAAYnV,SAASuK,IAbkB,IAgBnCN,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAa2rE,GAA+Bp0E,EAAUhE,EAAImmB,OAGnE,CAACniB,EAAUhE,EAAIwc,EAAc3Y,EAAesiB,IAE/C3Z,qBAAU,WACNxI,EAASmQ,GAAkB,mBAAU,OACtC,CAACnQ,EAAU/F,EAAK+V,OApDwB,MAsDPzU,mBAAS,IAtDF,mBAsDpC4tB,EAtDoC,KAsDxBC,EAtDwB,KAwD3C,OACInS,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KAQT,yBAAKxH,UAAU,MAAMb,GAAG,cACxB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,2BAAOV,KAAK,OAAOH,GAAG,QAAQa,UAAU,eAAeE,YAAY,mBAAWX,SAAU,SAACC,GACrF+sB,EAAc/sB,EAAMC,OAAOJ,OAC3BxD,QAAQC,IAAIwwB,OAGpB,4BAAQhtB,KAAK,SAASU,UAAU,mBAC5B,uBAAGA,UAAU,sBAKrB,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAsBX,MAAOitB,OCpClCyrD,OA9Df,SAAqCt5E,GACjC,IAAMgI,EAAUC,cAkChB,OACI,yBAAK1G,UAAU,yBAAyBiH,QAAS,YAlCjC,SAAC6R,GACjB7V,aAAaY,WAAW,sBACxBZ,aAAae,QAAQ,qBAAsB8U,EAAOxL,aAClDrK,aAAaY,WAAW,aACxBZ,aAAae,QAAQ,YAAa8U,EAAOwM,UAAU1pB,YACnDqH,aAAaY,WAAW,eACxBZ,aAAae,QAAQ,cAAe8U,EAAOvG,aAC3CtP,aAAaY,WAAW,gBACxBZ,aAAae,QAAQ,eAAgB8U,EAAOyM,aAAa3pB,YACzDqH,aAAaY,WAAW,iBACxBZ,aAAae,QAAQ,gBAAiB8U,EAAO2M,cAAc7pB,YAC3DqH,aAAaY,WAAW,kBACxBZ,aAAae,QAAQ,iBAAkB8U,EAAOoP,eAAetsB,YAC7DqH,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAY8U,EAAOigB,SAASn9B,YACjDqH,aAAaY,WAAW,kBACxBZ,aAAae,QAAQ,iBAAkB8U,EAAO0M,eAAe5pB,YAC7DqH,aAAaY,WAAW,uBACxBZ,aAAae,QAAQ,sBAAuB8U,EAAOzL,KAAKzR,YACxDqH,aAAaY,WAAW,SACxBZ,aAAae,QAAQ,QAAS8U,EAAOrG,MAAM7W,YAC3CqH,aAAaY,WAAW,qBACxBZ,aAAae,QAAQ,oBAAqB8U,EAAO3Z,GAAGvD,YACpDqH,aAAaY,WAAW,aACxBZ,aAAae,QAAQ,YAAa8U,EAAO47B,UAAU94C,YACnDqH,aAAaY,WAAW,UACxBZ,aAAae,QAAQ,SAAU8U,EAAOrV,OAAO7H,YAE7C6K,EAAQI,KAAK,CACTmB,SAFO,2BAO6C6I,CAAYpS,KAChE,yBAAKuB,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,eAAekH,IAAKzI,EAAMi2C,UAAWvtC,IAAI,KACxD,yBAAKnH,UAAU,aACX,wBAAIA,UAAU,cAAcvB,EAAM4O,MAClC,yBAAKrN,UAAU,OACX,uBAAGA,UAAU,8BAA8B,0BAAMA,UAAU,8BAAhB,uBAA3C,IAAyG,0BAAMA,UAAU,oCAAoCvB,EAAMgnB,gBACnK,uBAAGzlB,UAAU,8BAA8B,0BAAMA,UAAU,8BAAhB,0BAA3C,IAAyG,0BAAMA,UAAU,oCAAoCvB,EAAM+mB,kBAEvK,yBAAKxlB,UAAU,OACX,uBAAGA,UAAU,8BAA8B,0BAAMA,UAAU,8BAAhB,2BAA3C,IAAwG,0BAAMA,UAAU,oCAAoCvB,EAAM8mB,eAClK,uBAAGvlB,UAAU,8BAA8B,0BAAMA,UAAU,8BAAhB,sBAA3C,IAAwG,0BAAMA,UAAU,oCAAoCvB,EAAMypB,kBAEtK,yBAAKloB,UAAU,OACX,uBAAGA,UAAU,UAAU,0BAAMA,UAAU,8BAAhB,uBAAvB,IAAqF,0BAAMA,UAAU,oCAAoCvB,EAAMs6B,YAEnJ,yBAAK/4B,UAAU,OACX,uBAAGA,UAAU,iCAAiC,0BAAMA,UAAU,8BAAhB,uBAA9C,IAA8G,0BAAMA,UAAU,oCAAoCvB,EAAMgF,cCgBjLu0E,OAnEf,WACE,IAAMC,EAAqDrwE,aAAY,SAACC,GAAD,OAAuBA,EAAMqwE,2BAG9Fl7B,EAAgEi7B,EAAuBC,wBAAwBt5D,QAAO,SAACtT,EAAK8B,GAAN,MAA6B,aAAf9B,EAAI7H,UAAuBwJ,KAAI,SAAC3B,EAAK4B,GAC7K,OACE,kBAAC,GAAD,CACE/N,GAAMmM,EAAInM,GACVkO,KAAM/B,EAAI+B,KACVkF,YAAajH,EAAIiH,YACjB3H,KAAK,OACL6I,MAAM,UACNhQ,OAAQ6H,EAAI7H,OACZ+1B,YAAaluB,EAAIkuB,YACjBkb,UAAWppC,EAAI6c,UACf5C,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBC,cAAena,EAAIma,cACnBwC,gBAAiB3c,EAAI2c,gBACrBC,eAAgB5c,EAAI4c,eACpByR,cAAeruB,EAAIquB,cACnBrsB,YAAahC,EAAIgC,YACjBgY,UAAWha,EAAIga,UACfyT,SAAUztB,EAAIytB,SACdtmB,MAAOnH,EAAImH,MACX6uC,sBAAuBh2C,EAAIg2C,2BAM3B62B,EAAiEF,EAAuBC,wBAAwBt5D,QAAO,SAACtT,EAAK8B,GAAN,MAA6B,iBAAf9B,EAAI7H,UAA2BwJ,KAAI,SAAC3B,EAAK4B,GAClL,OACE,kBAAC,GAAD,CACE/N,GAAMmM,EAAInM,GACVkO,KAAM/B,EAAI+B,KACVkF,YAAajH,EAAIiH,YACjB3H,KAAK,OACL6I,MAAM,UACNhQ,OAAQ6H,EAAI7H,OACZ+1B,YAAaluB,EAAIkuB,YACjBkb,UAAWppC,EAAI6c,UACf5C,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBC,cAAena,EAAIma,cACnBwC,gBAAiB3c,EAAI2c,gBACrBC,eAAgB5c,EAAI4c,eACpByR,cAAeruB,EAAIquB,cACnBrsB,YAAahC,EAAIgC,YACjBgY,UAAWha,EAAIga,UACfyT,SAAUztB,EAAIytB,SACdtmB,MAAOnH,EAAImH,MACX6uC,sBAAuBh2C,EAAIg2C,2BAOjC,OACE,kBAAC,WAAD,KACGtE,EACAm7B,ICnEMC,GAAqC,6BACrCC,GAAsC,8BACtCC,GAAwC,gCAExCC,GAAqD,6CACrDC,GAAoD,4CACpD72E,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBAC3Bi4E,GAA4C,oCAC5CC,GAAyC,iCCU/C,SAASC,GAAmCx1E,EAAegc,EAAoBmG,GAClF,IAAIlhB,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAOE,MAAM,GAAD,OACGC,+BADH,0CACkE8b,EADlE,YACgFmG,GAAa,CACzFjoB,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASw1E,GAAmCx1E,EAAUgc,EAAYmG,OAU7EhiB,MAAM,SAAAS,GACHZ,ED9BL,CACH7D,KAAMiB,GACN03E,uBC4BkCl0E,IAC1BZ,EDbL,CAAE7D,KAAMm5E,KCcH58E,QAAQC,IAAIiI,EAAKhG,KAAKk6B,kBACtBl0B,EAAKhG,KAAKk6B,iBAAiBhrB,KAAI,SAAC3B,EAAU4B,GACtC,IAAI7I,EAA4B,CAC5BlF,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVkF,YAAajH,EAAIiH,YACjB+S,UAAWha,EAAIga,UACfqU,cAAeruB,EAAIquB,cACnBjnB,kBAAmBpH,EAAI+1C,iBACvB/zC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrBC,eAAgB5c,EAAI4c,eACpBzV,MAAOnH,EAAImH,MACX0V,UAAW7c,EAAI6c,UACf1C,cAAena,EAAIma,cACnBF,aAAcja,EAAIia,aAClBC,eAAgBla,EAAIka,eACpBuT,SAAUztB,EAAIytB,SACdS,YAAaluB,EAAIkuB,YACjB/1B,OAAQ6H,EAAI7H,OACZ69C,sBAAuBh2C,EAAIg2C,uBAI/B,OADAn+C,EDlCb,SAAiC80E,GACpC,MAAO,CAAE34E,KAAM84E,GAA4BH,uBAAwBA,GCiC1CW,CAAwBv0E,IAC1B,QAGdF,OAAM,SAAAtF,GACHsE,EDtDT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UCmDMoD,CAAepD,IACxBhD,QAAQC,IAAI,YCvE5B,IA8Fe+8E,GA9F2B,WACtC,IAAM11E,EAA0BqD,cAE1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAC3EjH,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAGT,IAAI0O,EAAOzX,aAAaC,QAAQ,aAC5BoiB,EAAoB,EACX,OAAT5K,IACA4K,EAAYnV,SAASuK,IAbmB,IAgBpCN,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAmCzC,OAlCAyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAa+sE,GAAmCx1E,EAAUhE,EAAImmB,OAGvE,CAACniB,EAAUhE,EAAIwc,EAAc3Y,EAAesiB,IAE/C3Z,qBAAU,WACNxI,EAASmQ,GAAkB,mBAAU,OACtC,CAACnQ,EAAU/F,EAAK+V,OAGfiH,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KAQL,yBAAKxH,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,2BAAOV,KAAK,SAASH,GAAG,QAAQa,UAAU,eAAeE,YAAY,sBAEzE,4BAAQZ,KAAK,SAASU,UAAU,mBAC5B,uBAAGA,UAAU,sBAK7B,yBAAKA,UAAU,OACX,kBAAC,GAAD,S,OC9Db,SAAS84E,GAAsB31E,EAAehE,GACjD,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAQE,MAAM,GAAD,OACEC,+BADF,iCACwDlE,GAAM,CAC3D9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS21E,GAAsB31E,EAAUhE,OAUpDmE,MAAM,SAAAS,GACHZ,EAASpB,GAAiBgC,IAC1BZ,EAASb,KACTzG,QAAQC,IAAIiI,EAAKhG,KAAKsrB,UACtBtlB,EAAKhG,KAAKsrB,SAASpc,KAAI,SAAC3B,EAAU4B,GAC9B,IAAIlL,EAAa,CACb7C,GAAImM,EAAInM,GACRoF,SAAU+G,EAAI/G,SACd8b,MAAO/U,EAAI+U,MACX5c,OAAQ6H,EAAI7H,OACZe,SAAU,GACV8b,UAAWhV,EAAIgV,UACfC,SAAUjV,EAAIiV,SACdC,YAAalV,EAAIkV,YACjBzb,kBAAmBuG,EAAIvG,kBACvB0b,IAAKnV,EAAImV,IACTC,MAAOpV,EAAIoV,MACXC,QAASrV,EAAIqV,QACbC,QAAStV,EAAIsV,QACbC,WAAYvV,EAAIuV,YAGpB,OAAO1d,EAASR,EAAWX,OAE/BnG,QAAQC,IAAIiI,EAAKhG,KAAK+4B,QAAQE,eAC9B7zB,EAAS67B,MACT,IAAIE,EAA6B,CAC7B//B,GAAI,EACJkO,KAAMtJ,EAAKhG,KAAK+4B,QAAQzpB,KACxBkyB,QAASx7B,EAAKhG,KAAKwhC,QAAQh7B,SAC3ByyB,cAAejzB,EAAKhG,KAAK+4B,QAAQE,cACjCle,OAAQ/U,EAAKhG,KAAK+a,OAAOzL,KACzB0H,QAAShR,EAAKhG,KAAKgX,QAAQ1H,KAC3B4jB,UAAWltB,EAAKhG,KAAKkzB,UAAU5jB,KAC/BwhB,SAAU9qB,EAAKhG,KAAK8wB,SAASxhB,KAC7BmyB,eAAgBz7B,EAAKhG,KAAK+a,OAAOoP,eACjCuX,eAAgB17B,EAAKhG,KAAKsrB,SAASvpB,QAGvCqD,EAASg8B,MACTp7B,EAAKhG,KAAKs6B,YAAYprB,KAAI,SAAC3B,EAAU4B,GAEjC,OADQkK,OAAOC,OAAO/L,GACb2B,KAAI,SAACuK,GACV,OAAOA,EAAMvK,KAAI,SAACwK,GAKd,OAHqB,IAAjBA,EAAM3X,QACNqD,EAASi8B,GAAgB,CAACvnB,WAAYJ,EAAM,GAAIK,SAAUL,EAAM,MAE7DA,WAKnBtU,EAAS87B,GAAoBC,OAGhC/6B,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,YCpG5B,IA4Iei9E,GA5IyB,WACpC,IAAM51E,EAA0BqD,cAC1B02C,EAAsEt1C,aAAY,SAACC,GAAD,OAAuBA,EAAM2V,oCAC/GhI,EAA8D5N,aAAY,SAACC,GAAD,OAAuBA,EAAM2N,2BAC7G3Z,QAAQC,IAAIohD,GACZ,IAAM9/C,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAEzEwH,EADuB7S,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SACzB8L,SAASvpB,OAClDkM,EAAO/I,aAAaC,QAAQ,YAC5BwzB,EAAmB,EACV,OAAT1qB,IACA0qB,EAAWvmB,SAASnE,IAXkB,IAclCoO,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WAEN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA4B,CAC7G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAQb8C,EAASmhB,MACT1Y,wBAAaktE,GAAsB31E,EAAUuzB,QAGtD,CAACvzB,EAAUuzB,EAAU/a,EAAc3Y,IAEtC2I,qBAAU,WACNxI,EAASmQ,GAAkB,WAAO,oBACnC,CAACnQ,EAAU/F,EAAK+V,OArDuB,MAwDdzU,oBAAS,GAxDK,mBAwDnC4b,EAxDmC,KAwD3BC,EAxD2B,KA+D1C,SAASC,EAAenb,GACpBkb,GAAU,GAWd,OACIH,EACF,yBAAKpa,UAAU,MAAMb,GAAG,cACtB,yBAAKa,UAAU,uBACb,yBAAKA,UAAU,cAAcb,GAAG,kBAC9B,yBAAKa,UAAU,gBACb,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAI7B,kBAAC,WAAD,KAGH,kBAAC,IAAD,MACA,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,wBAAc6I,KAAI,UAAK+G,GAAuB7P,KAAK,OAAO6I,MAAM,WAC/E,yBAAKzT,UAAU,yBAAyBb,GAAG,uCACvC,4BACIa,UAAU,4BACVb,GAAG,2BACH8H,QAAS,WACL9D,EAASmR,GAA0Cd,GAAwCoC,SArC/G2E,GAAU,KAyCM,uBAAGva,UAAU,mBARjB,8BAcR,kBAAC,KAAD,CACI/B,KAAMqc,EACN6B,QAAS,kBAAM5B,GAAU,IACzB6B,sBAAoB,GAEpB,oCAEQ,WACI,GAAK5G,EAAwBG,oBAAsBnC,GAAwCoC,OACvF,OAAO,kBAAC,GAAD,CAA0BE,QAAS0E,EAAgBzW,KAAM2yB,IAFxE,KASZ,yBAAK12B,UAAU,OAEX,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,8BACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,kBAAC,GAAD,aC7IhC2pC,SAAMxI,SAAS,sBAAuB4J,MAE/B,IAqCQC,GArCO,SAACvsC,GACrB5C,QAAQC,IAAI,UACZ,IAAMmvC,EAAgBC,iBAAO,MAC7BC,IAAMx/B,WAAU,WACVs/B,EAAcG,QAAQC,cAAgB5sC,EAAMiX,UAC5Cu1B,EAAcG,QAAQC,YAAYC,UAAUC,qBAAqB9sC,EAAMQ,YAE1E,CAACgsC,EAAexsC,EAAMiX,SAAUjX,EAAMQ,WAPV,MAaLksC,IAAMzsC,SAAS,CAAEW,MAAO,OAbnB,mBAaxBwI,EAbwB,KAajB2jC,EAbiB,KAqB/B,OADA3vC,QAAQC,IAAI+L,EAAMxI,OAEhB,yBAAKW,UAAU,sBACb,kBAACyrC,GAAD,MACA,kBAAC,KAAD,CACEC,IAAKT,EACLU,MAAM,OACNtsC,MAAOwI,EAAMxI,MACbE,SAde,SAAAF,GACnBmsC,EAAS,CAAEnsC,UACXZ,EAAMmtC,SAASvsC,IAaXa,YAAa,6BACb6pC,QAASA,GACTa,QAASA,OCgFFouC,OAvGf,SAAuBv6E,GACnB,IAAM0E,EAA0BqD,cAC1BwG,EAAoDpF,aAAY,SAACC,GAAD,OAAuBA,EAAM2N,2BAC/FrI,EAA8CH,EAAcyI,8BAC1DC,EAAqB1I,EAAc2I,oBAAsBnC,GAAwCoC,OAElGzI,IAAgBuI,IACjBvI,EAAe,CAAEhO,GAAI,EAAGkO,KAAM,GAAIC,YAAa,GAAIC,KAAM,KAG7D,IAAI5G,EAAY,CACZ0G,KAAM,CAAExO,MAAO,GAAIQ,MAAO8N,EAAaE,MACvCC,YAAa,CAAEzO,MAAO,GAAIQ,MAAO8N,EAAaG,aAC9CuI,UAAW,CAAEhX,MAAO,GAAIQ,MAAO,2BAG/B2M,EAAO/I,aAAaC,QAAQ,YAC5BqsD,EAAqB,EACZ,OAATvjD,IACAujD,EAAap/C,SAASnE,IAG1B,IAAI0O,EAAOzX,aAAaC,QAAQ,cAC5BiP,EAAqB,EACZ,OAATuI,IACAvI,EAAahC,SAASuK,IAzB8B,MA4BxBhc,mBAAiB,IA5BO,mBA4BjDmvC,EA5BiD,KA4BvCC,EA5BuC,KAyExD,SAAS9mC,IACL,OAAqB,OAAb6mC,EAGZ,OACI,kBAAC,WAAD,KACI,yBAAK7tC,UAAU,iBACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,mCAAoC0V,EAAW,WAAQ,WAArE,sBAEJ,yBAAK1V,UAAU,aACX,0BAAMoH,SAlD9B,SAAkBhJ,GAEd,GADAA,EAAEiJ,kBACEL,IAAJ,CAGAvI,EAAMqX,SAAQ,IAKlB,SAAkBnP,EAA4CoP,GAC1D,GAAI5I,EAAc,CACd,IAAMC,EAAMnI,IAAMqC,QAAQ,wFAAsD,CAC5ElC,SAAUH,IAAMI,SAASC,aAG7BnC,ECjEL,SAAS81E,EAAuCl1E,EAAWqJ,GAC9D,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,6CACgF,CACzEhG,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAAS81E,EAAuCl1E,EAAMqJ,OAUjE9J,MAAM,SAAA3F,GACHsH,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,6CAA2B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,SAE7IpB,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,sDAAiC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC9I1J,QAAQC,IAAI,aD6BPm9E,CAAuC,CAC5C1pB,WAAYA,EACZp9C,WAAYA,EACZ6kE,iBAAkBnpC,GACnBzgC,IAEHjK,EAASkR,MACTlR,EAASmR,GAA0Cd,GAAwC6C,QAhB/FC,MA4CoB,yBAAKtW,UAAU,cACb,kDACA,kBAAC,GAAD,CAAQ4rC,SA5DlC,SAAkBvsC,GAChByuC,EAAYzuC,IA2DwCqW,SAAUA,EAAUzW,SAAU0H,EAAU2G,YAAYjO,SAG9E,4BAAQW,UAAU,iBAAiBiH,QAAS,kBA5BpExI,EAAMqX,SAAQ,QACd3S,EAASmR,GAA0Cd,GAAwC6C,SA2BnE,YACA,4BAAQ/W,KAAK,SAASU,UAAS,sCAxBhCgH,IACN,WAAa,KAuBN,mBE2LjBkyE,GAnRoB,WAC/B,IAAM/1E,EAA0BqD,cAC1B+W,EAAoB3V,aAAY,SAACC,GAAD,OAAuBA,EAAM0V,SAC7DkwC,EAA2C7lD,aAAY,SAACC,GAAD,OAAuBA,EAAM4lD,qBACpFtB,EAAoCvkD,aAAY,SAACC,GAAD,OAAuBA,EAAM6lD,kBAC7ER,EAAoEtlD,aAAY,SAACC,GAAD,OAAuBA,EAAM8lD,mCAC7GC,EAA+BH,EAAkBI,6BAA6B/tD,OAAS2tD,EAAkBK,0BAA0BhuD,OACnIiuD,EAAkCN,EAAkBhD,oBAAoB3qD,OACxEkuD,EAAkC7B,EAAc8B,aAAanuD,OAC3Dsa,EAAsBC,+BAAtBD,kBAGJQ,EAAO3X,aAAaC,QAAQ,aAC5B0iD,EAAoB,EACX,OAAThrC,IACAgrC,EAAYz1C,SAASyK,IAGzB,IAAIF,EAAOzX,aAAaC,QAAQ,cAC5BiP,EAAqB,EACZ,OAATuI,IACAvI,EAAahC,SAASuK,IAG1B,IAAIsyB,EAAO/pC,aAAaC,QAAQ,YAC5BwzB,EAAmB,EACV,OAATsW,IACAtW,EAAWvmB,SAAS68B,IAExB,IAAIrxB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAWbuL,wBAAamV,GAAY5d,EAAUgP,IACnCvG,wBAAaq/C,GAAc9nD,EAAUyiD,IACrCh6C,wBAAa4+C,GAA2BrnD,EAAUuzB,EAAUvkB,IAC5DvG,wBAAa8gD,GAAiCvpD,EAAUuzB,EAAUvkB,IAClEvG,wBAAayhD,GAAsClqD,EAAUuzB,EAAUvkB,QAGhF,CAAChP,EAAUwY,EAAc3Y,EAAemP,EAAYyzC,EAAWlvB,IAElE,IAAIw3B,EAA2C,GAC3CC,EAA0C,GAC9CjB,EAA+BS,gCAAgC1gD,KAAI,SAAC3B,EAAK8B,GAGrE,OAFA8gD,EAA+BrnD,KAAKyE,EAAImsC,OACxC0W,EAA8BtnD,KAAKyE,EAAIiiD,eAChCjiD,KAIX,IACMvH,EAAO,CACTu+B,OAFW6rB,EAGX5rB,SAAU,CACN,CACInjC,MAAO,+BACP2E,KAAMmqD,EACN1rB,YAAa,oBACbvY,gBAAiB,6BAKvBxjB,EAAUC,cAQV8O,EAA8D5N,aAAY,SAACC,GAAD,OAAuBA,EAAM2N,2BAnGxE,EAqGT9W,oBAAS,GArGA,mBAqG9B4b,EArG8B,KAqGtBC,EArGsB,KA4GrC,SAASC,EAAenb,GACpBkb,GAAU,GAGd,OACIH,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KACT,kBAAC,IAAD,MAII,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,sCAAiB6I,KAAI,UAAKk6C,GAAwBhjD,KAAK,OAAO6I,MAAM,YACnF,kBAAC,GAAD,CAAS5I,MAAM,qCAAmB6I,KAAI,UAAKq6C,GAA2BnjD,KAAK,OAAO6I,MAAM,WACxF,kBAAC,GAAD,CAAS5I,MAAM,8BAAe6I,KAAI,UAAKs6C,GAA2BpjD,KAAK,OAAO6I,MAAM,YASxF,kBAAC,KAAD,CACAxV,KAAMqc,EACN6B,QAAS,kBAAM5B,GAAU,IACzB6B,sBAAoB,GAEpB,oCAEQ,WACI,GAAK5G,EAAwBG,oBAAsBnC,GAAwCoC,OACvF,OAAO,kBAAC,GAAD,CAAeE,QAAS0E,EAAgBzW,KAAM2yB,IAF7D,KASR,yBAAK12B,UAAU,OACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,8BACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,yBAAKA,UAAU,yCACX,wBAAIb,GAAG,aAAP,YAA0Boe,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAGnZ,SAAW,KAEvF,yBAAKvE,UAAU,yCACX,uBAAGb,GAAG,oBAAN,sBAAqCoe,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAG+C,IAAM,KAE7F,yBAAKzgB,UAAU,kBACX,uBAAGA,UAAS,qBAAwBb,GAAG,eACvC,uBAAGA,GAAG,SAAN,sCAA8Boe,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAGgD,MAAQ,KAGxF,yBAAK1gB,UAAU,kBACX,uBAAGA,UAAS,wBAA2Bb,GAAG,eAC1C,uBAAGA,GAAG,SAAN,iBAA0Boe,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAG8C,YAAc,KAG1F,yBAAKxgB,UAAU,kBACX,uBAAGA,UAAS,wBAA2Bb,GAAG,eAC1C,uBAAGA,GAAG,SAAN,UAAsBoe,EAAMG,SAAS5d,OAAS,EAAIyd,EAAMG,SAAS,GAAG2C,MAAQ,UAOpG,yBAAKrgB,UAAU,OACX,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,+BACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,yBAAKA,UAAU,yCACX,wBAAIb,GAAG,aAAP,YAA0Boe,EAAMqD,QAAQ9gB,OAAS,EAAIyd,EAAMqD,QAAQ,GAAGrc,SAAW,KAErF,yBAAKvE,UAAU,yCACX,uBAAGb,GAAG,oBAAN,sBAAqCoe,EAAMqD,QAAQ9gB,OAAS,EAAIyd,EAAMqD,QAAQ,GAAGH,IAAM,KAE3F,yBAAKzgB,UAAU,kBACX,uBAAGA,UAAS,qBAAwBb,GAAG,eACvC,uBAAGA,GAAG,SAAN,sCAA8Boe,EAAMqD,QAAQ9gB,OAAS,EAAIyd,EAAMqD,QAAQ,GAAGF,MAAQ,KAGtF,yBAAK1gB,UAAU,kBACX,uBAAGA,UAAS,wBAA2Bb,GAAG,eAC1C,uBAAGA,GAAG,SAAN,iBAA0Boe,EAAMqD,QAAQ9gB,OAAS,EAAIyd,EAAMqD,QAAQ,GAAGJ,YAAc,KAGxF,yBAAKxgB,UAAU,kBACX,uBAAGA,UAAS,wBAA2Bb,GAAG,eAC1C,uBAAGA,GAAG,SAAN,UAAsBoe,EAAMqD,QAAQ9gB,OAAS,EAAIyd,EAAMqD,QAAQ,GAAGP,MAAQ,WAYtG,yBAAKrgB,UAAU,0BACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,QAAQb,GAAG,iBAAzB,mCACA,yBAAKa,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,yBAAKA,UAAU,kBACX,kBAAC4iC,GAAD,CAAW7+B,KAAMA,KAErB,yBAAK/D,UAAU,8BACX,4BACIA,UAAU,4BACVb,GAAG,yBACH8H,QAAS,WA/IjDR,EAAQI,KAAK,CACTmB,SAFO,8BA6IyB,oBAMI,uBAAGhI,UAAS,2BAA8Bb,GAAG,2BAOrE,yBAAKa,UAAU,OACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAS,yBAA4Bb,GAAG,gBACzC,yBAAKa,UAAU,aACX,yBAAKA,UAAU,8BACX,4BACIA,UAAU,4BACVb,GAAG,iBACH8H,QAAS,WACL9D,EAASmR,GAA0Cd,GAAwCoC,SAxJvI2E,GAAU,KAoJ0B,mBASI,uBAAGva,UAAS,2BAA8Bb,GAAG,+BC1RhFg6E,GAAgC,wBAChCC,GAAiC,yBACjCC,GAAmC,2BAEnCC,GAAgD,wCAChDC,GAA+C,uCAC/C53E,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBAC3Bg5E,GAAuC,+BACvCC,GAAoC,4BCa1C,SAASC,GAAmBv2E,EAAehE,GAC9C,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,8BACsDlE,GAAM,CACxD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASu2E,GAAmBv2E,EAAUhE,OAUjDmE,MAAM,SAAAS,GACHZ,EDhCL,CACH7D,KAAMiB,GACNo5E,kBC8BkC51E,IAC1BZ,EDfL,CAAE7D,KAAMk6E,KCgBH39E,QAAQC,IAAIiI,EAAKhG,KAAKiqB,SACtBjkB,EAAKhG,KAAKiqB,QAAQ/a,KAAI,SAAC3B,EAAU4B,GAC7B,IAAI4L,EAA0B,CAC1B3Z,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACVC,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrBC,eAAgB5c,EAAI4c,eACpBzV,MAAOnH,EAAImH,MACX0V,UAAW7c,EAAI6c,UACfC,WAAY9c,EAAI8c,WAChBC,WAAY/c,EAAI+c,WAChBC,YAAahd,EAAIgd,YACjBC,aAAcjd,EAAIid,aAClBE,WAAYnd,EAAImd,WAChBlD,aAAcja,EAAIia,aAClBE,cAAena,EAAIma,cACnBD,eAAgBla,EAAIka,eACpBlV,MAAOhF,EAAIgF,MACX6tC,sBAAuB7yC,EAAI6yC,sBAC3BC,wBAAyB9yC,EAAI8yC,wBAC7B11B,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAIrB,OADA9sB,QAAQC,IAAIgd,GAED3V,EADG,IAAV+J,ED/CjB,SAAgCysE,GACnC,MAAO,CAAEr6E,KAAMm6E,GAA2BE,kBAAmBA,GC+CzBC,CAAuB9gE,GDxCxD,SAA4B6gE,GAC/B,MAAO,CAAEr6E,KAAM65E,GAAuBQ,kBAAmBA,GC0CrBE,CAAmB/gE,OAG3C3V,EAAS9C,QAEZ8D,OAAM,SAAAtF,GACHsE,EDhET,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UC6DMoD,CAAepD,IACxBhD,QAAQC,IAAI,YCyHbg+E,OAxMf,SAAuBr7E,GACnB,IAAMs7E,EAA4CnyE,aAAY,SAACC,GAAD,OAAuBA,EAAMkyE,sBACrF7qD,EAA2BtnB,aAAY,SAACC,GAAD,OAAuBA,EAAMqnB,aACpE6D,EAAyBnrB,aAAY,SAACC,GAAD,OAAuBA,EAAMkrB,YAClExB,EAA6B3pB,aAAY,SAACC,GAAD,OAAuBA,EAAM0pB,cAJlB,EAMxB7yB,mBAAS,GANe,mBAMnDw9C,EANmD,KAMxCC,EANwC,OAO5Bz9C,mBAA6B,IAPD,mBAOnD05B,EAPmD,KAO1CqmB,EAP0C,KAQpDh4C,EAAUC,cAUhBiF,qBAAU,WACN,IAAIwL,GAAK4iE,EAAmB/xD,QAAQloB,OAASi6E,EAAmB/xD,QAAQloB,OAAS,IAAK,GAElF2+C,EADM,IAANtnC,EACW4iE,EAAmB/xD,QAGnB+xD,EAAmB/xD,QAAQlG,MAAM,EAAE,KAGjDq6B,EAAchlC,EAAE,KAClB,CAAC4iE,EAAmB/xD,UAEvBnsB,QAAQC,IAAKogD,GA9B6C,MA0C9Bx9C,mBAAS,GA1CqB,mBA0CnDkgB,EA1CmD,KA0C3C8/B,EA1C2C,OA2C5BhgD,mBAAS,GA3CmB,mBA2CnDigD,EA3CmD,KA2C1CC,EA3C0C,OA4C5BlgD,mBAAS,GA5CmB,mBA4CnDmgD,EA5CmD,KA4C1CC,EA5C0C,KAgF1D,OArBAjjD,QAAQC,IAAIs8B,GAsBR,kBAAC,WAAD,KACI,yBAAKp4B,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,sEACX,wBAAIA,UAAU,QAAd,SAAyBo4B,EAAQxZ,QAAO,SAACva,GACzC,MAAoB,KAAhB5F,EAAMY,MACDgF,EAEuB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACxKtiB,EAEF,QACNvE,OARD,sBASA,yBAAKE,UAAU,cACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,QAAhB,kBACA,4BAAQqN,KAAK,OAAOlO,GAAG,OACnBE,MAAOuf,EACPrf,SArDpC,SAAsBnB,GAClBsgD,EAAUtgD,EAAEqB,OAAOJ,SAuDiB6vB,EAAUC,SAASliB,KAAI,SAAC3B,EAAK8B,GACzB,OACI,4BAAQ/N,MAAOiM,EAAInM,IAAKmM,EAAI+B,UAK5C,4BAAQA,KAAK,OAAOlO,GAAG,OAAOa,UAAU,OACpCX,MAAOs/C,EACPp/C,SA7DpC,SAAuBnB,GACnBwgD,EAAWxgD,EAAEqB,OAAOJ,SA+DgB0zB,EAASC,QAAQ/lB,KAAI,SAAC3B,EAAK8B,GACvB,OACI,4BAAQ/N,MAAOiM,EAAInM,IAAKmM,EAAI+B,UAK5C,4BAAQA,KAAK,OAAOlO,GAAG,OAAOa,UAAU,OACpCX,MAAOw/C,EACPt/C,SArEpC,SAAuBnB,GACnB0gD,EAAW1gD,EAAEqB,OAAOJ,SAuEgBkyB,EAAWC,UAAUvkB,KAAI,SAAC3B,EAAK8B,GAC3B,OACI,4BAAQ/N,MAAOiM,EAAInM,IAAKmM,EAAI+B,UAK5C,4BAAQrN,UAAU,0CAA0CV,KAAK,SAAS2H,QAAS,kBAzEnH,WACIpL,QAAQC,IAAI8iB,GACZ/iB,QAAQC,IAAI6iD,GACZ9iD,QAAQC,IAAI+iD,GACZ,IAAIpC,EAAIs9B,EAAmB/xD,QAAQpJ,QAAO,SAACtT,EAAK8B,GAAN,YAClCiO,IAAR/P,GAAqBA,EAAIgd,aAAe1J,GAAUtT,EAAImd,YAAck2B,GAAWrzC,EAAIid,cAAgBs2B,KAG/F1nC,GAAKslC,EAAE38C,OAAU28C,EAAE38C,OAAU,IAAM,GAEnC2+C,EADM,IAANtnC,EACWslC,EAGAA,EAAE36B,MAAM,EAAG,KAE1Bq6B,EAAchlC,EAAI,GA0DmG4nC,KAAzF,eAAkH,uBAAG/+C,UAAU,sBAMnJ,yBAAKA,UAAU,YAEPo4B,EAAQxZ,QAAO,SAACva,GACZ,MAAoB,KAAhB5F,EAAMY,MACDgF,EAEuB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACxKtiB,EAEF,QACN4I,KAAI,SAAC3B,EAAK4B,GACX,OACI,yBAAKlN,UAAU,WAAWiH,QAAS,YA/I3C,SAAC6R,GACjB7V,aAAaY,WAAW,aACxBZ,aAAae,QAAQ,YAAa8U,EAAO3Z,GAAGvD,YAE5C6K,EAAQI,KAAK,CACTmB,SAFO,8BA4IuD6I,CAAYvF,KAClD,yBAAKtL,UAAU,8CACX,yBAAKA,UAAU,qCAAoC,yBAAKkH,IAAKoE,EAAI6c,UAAWlQ,MAAM,OAAO9Q,IAAI,MAC7F,wBAAInH,UAAU,QAAQsL,EAAI+B,MAAU,0BAAMrN,UAAU,gCAAgCsL,EAAIma,cAApD,MAA0Ena,EAAIia,aAA9E,MAAmGja,EAAIka,gBAAsB,0BAAMxlB,UAAU,gBAAhB,+CAAqDsL,EAAIgF,MAAzD,cACjK,yBACItQ,UAAU,wCACV,6BAAK,uBAAGA,UAAU,qBAAuB,0BAAMA,UAAU,QAAhB,WAA6BsL,EAAImH,MAAjC,SACzC,yBAAKzS,UAAU,sCACX,yBAAKA,UAAU,YAAW,yBAAKA,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,mCAAmCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,QAAa,0BAAMjY,UAAU,QAAhB,cAQ/U,yBAAKA,UAAU,8CACX,6BACI,wBAAIA,UAAU,cACd,wBAAIA,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,WAAW1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBACtE,0BAAM43C,cAAY,QAAlB,UAIAxjB,MAAMC,KAAKD,MAAOygB,GAAY3kC,QAAQtK,KAAI,SAAC3B,EAAK8B,GAC5C,OACI,wBAAIpN,UAAU,aAAY,uBAAGA,UAAU,YAAYsM,KAAK,IAAIrF,QAAS,SAAC7I,GAnJ1G,IAA0B8gD,EAoJc9gD,EAAEiJ,iBApJhB63C,EAqJ+B5zC,EApJrDzP,QAAQC,IAAIojD,GAERT,EADAS,IAAUhD,EACC69B,EAAmB/xD,QAAQlG,MAAY,GAANo9B,GAGjC66B,EAAmB/xD,QAAQlG,MAAY,GAANo9B,EAAe,GAANA,EAAW,OA+IP5zC,EAAI,OAI7C,wBAAItL,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,OAAO1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBAClE,0BAAM43C,cAAY,QAAlB,gBCpFrB+6B,GArGmB,WAC9B,IAAM72E,EAA0BqD,cAE1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAC3EjH,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAP2B,IAU5BoO,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAUbuL,wBAAa8tE,GAAmBv2E,EAAUhE,IAC1CyM,wBAAaqkB,GAAW9sB,IACxByI,wBAAaqnB,GAAU9vB,IACvByI,wBAAa0mB,GAAYnvB,QAIlC,CAACA,EAAUhE,EAAIwc,EAAc3Y,IAEhC2I,qBAAU,WACNxI,EAASmQ,GAAkB,iBAAY,uBACxC,CAAClW,EAAK+V,KAAMhQ,IArDqB,MAuDAzE,mBAAS,IAvDT,mBAuD7B4tB,EAvD6B,KAuDjBC,EAvDiB,KA0DpC,OACInS,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KAQT,yBAAKxH,UAAU,MAAMb,GAAG,cACxB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,2BAAOV,KAAK,OAAOH,GAAG,QAAQa,UAAU,eAAeE,YAAY,mBAAWX,SAAU,SAACC,GACrF+sB,EAAc/sB,EAAMC,OAAOJ,OAC3BxD,QAAQC,IAAIwwB,OAGpB,4BAAQhtB,KAAK,SAASU,UAAU,mBAC5B,uBAAGA,UAAU,sBAMrB,yBAAKA,UAAU,OACX,kBAACi6E,GAAD,CAAmB56E,MAAOitB,OC3GjC4tD,GAAiC,yBACjCC,GAAkC,0BAClCC,GAAoC,4BAEpCC,GAAiD,yCACjDC,GAAgD,wCAChD34E,GAAiC,yBAEjCpB,GAA6B,qBAC7BC,GAA2B,mBAC3B+5E,GAAwC,gCACxCC,GAAqC,6BCY3C,SAASC,GAAoBt3E,EAAehE,GAC/C,IAAIiF,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAOE,MAAM,GAAD,OACGC,+BADH,+BACuDlE,GAAM,CACzD9B,OAAQ,MACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASs3E,GAAoBt3E,EAAUhE,OAUlDmE,MAAM,SAAAS,GACHZ,ED/BL,CACH7D,KAAMiB,GACNm6E,mBC6BkC32E,IAC1BZ,EDdL,CAAE7D,KAAMi7E,KCeH1+E,QAAQC,IAAIiI,EAAKhG,KAAKqyC,UACtBrsC,EAAKhG,KAAKqyC,SAASnjC,KAAI,SAAC3B,EAAU4B,GAC9B,IAAIyM,EAA4B,CAC5Bxa,GAAImM,EAAInM,GACRkO,KAAM/B,EAAI+B,KACV2jC,uBAAwB1lC,EAAI0lC,uBAC5BvX,kBAAmBnuB,EAAImuB,kBACvB5hB,WAAYvM,EAAIuM,WAChBC,SAAUxM,EAAIwM,SACdxK,YAAahC,EAAIgC,YACjB2a,gBAAiB3c,EAAI2c,gBACrBE,UAAW7c,EAAI6c,UACfC,WAAY9c,EAAI8c,WAChBC,WAAY/c,EAAI+c,WAChBC,YAAahd,EAAIgd,YACjBG,WAAYnd,EAAImd,WAChBlD,aAAcja,EAAIia,aAClBE,cAAena,EAAIma,cACnB04B,sBAAuB7yC,EAAI6yC,sBAC3BC,wBAAyB9yC,EAAI8yC,wBAC7B11B,YAAapd,EAAIod,YACjBC,YAAard,EAAIqd,aAIrB,OADA9sB,QAAQC,IAAI6d,GAEDxW,EADG,IAAV+J,ED7CjB,SAAiCwtE,GACpC,MAAO,CAAEp7E,KAAMk7E,GAA4BE,mBAAoBA,GC6C3BC,CAAwBhhE,GDtCzD,SAA6B+gE,GAChC,MAAO,CAAEp7E,KAAM46E,GAAwBQ,mBAAoBA,GCwCvBE,CAAoBjhE,OAG5CxW,EAAS9C,QAEZ8D,OAAM,SAAAtF,GACHsE,ED9DT,SAAwBtE,GAC3B,MAAO,CACHS,KAAMkB,GACN0B,QAAS,CAAErD,UC2DMoD,CAAepD,IACxBhD,QAAQC,IAAI,YCwJb++E,OArOf,SAA4Bp8E,GACxB,IAAMq8E,EAA8ClzE,aAAY,SAACC,GAAD,OAAuBA,EAAM6yE,sBACvFxrD,EAA2BtnB,aAAY,SAACC,GAAD,OAAuBA,EAAMqnB,aACpE6D,EAAyBnrB,aAAY,SAACC,GAAD,OAAuBA,EAAMkrB,YAHT,EAK7Br0B,mBAAS,GALoB,mBAKxDw9C,EALwD,KAK7CC,EAL6C,OAMjCz9C,mBAA8B,IANG,mBAMxD05B,EANwD,KAM/CqmB,EAN+C,KAQzDh4C,EAAUC,cA2BhBiF,qBAAU,WACN,IAAIwL,GAAK2jE,EAAoB1qC,SAAStwC,OAASg7E,EAAoB1qC,SAAStwC,OAAS,IAAK,GAEtF2+C,EADM,IAANtnC,EACW2jE,EAAoB1qC,SAGpB0qC,EAAoB1qC,SAAStuB,MAAM,EAAE,KAGnDq6B,EAAchlC,EAAE,KAClB,CAAC2jE,EAAoB1qC,WAExBv0C,QAAQC,IAAKogD,GA/CkD,MA2DnCx9C,mBAAS,GA3D0B,mBA2DxDkgB,EA3DwD,KA2DhD8/B,EA3DgD,OA4DjChgD,mBAAS,GA5DwB,mBA4DxDigD,EA5DwD,KA4D/CC,EA5D+C,KA6F/D,OArBA/iD,QAAQC,IAAIs8B,GAsBR,kBAAC,WAAD,KACI,yBAAKp4B,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,sEACX,wBAAIA,UAAU,QAAd,SAAyBo4B,EAAQxZ,QAAO,SAACva,GACrC,MAAoB,KAAhB5F,EAAMY,MACCgF,EAEqB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACtKtiB,EAEJ,QACRvE,OARH,sBASA,yBAAKE,UAAU,cACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,QAAhB,kBACA,4BAAQqN,KAAK,OAAOlO,GAAG,OACnBE,MAAOuf,EACPrf,SAlDpC,SAAsBnB,GAClBsgD,EAAUtgD,EAAEqB,OAAOJ,SAoDiB6vB,EAAUC,SAASliB,KAAI,SAAC3B,EAAK8B,GACzB,OACI,4BAAQ/N,MAAOiM,EAAInM,IAAKmM,EAAI+B,UAK5C,4BAAQA,KAAK,OAAOlO,GAAG,OAAOa,UAAU,OACpCX,MAAOs/C,EACPp/C,SA1DpC,SAAuBnB,GACnBwgD,EAAWxgD,EAAEqB,OAAOJ,SA4DgB0zB,EAASC,QAAQ/lB,KAAI,SAAC3B,EAAK8B,GACvB,OACI,4BAAQ/N,MAAOiM,EAAInM,IAAKmM,EAAI+B,UAK5C,4BAAQrN,UAAU,0CAA0CV,KAAK,SAAS2H,QAAS,YA7DnH,WACIpL,QAAQC,IAAI8iB,GACZ/iB,QAAQC,IAAI6iD,GACZ,IAAIlC,EAAIq+B,EAAoB1qC,SAASxxB,QAAO,SAACtT,EAAK8B,GAAN,YACpCiO,IAAR/P,GAAqBA,EAAIgd,aAAe1J,GAAUtT,EAAImd,YAAck2B,KAGhExnC,GAAKslC,EAAE38C,OAAU28C,EAAE38C,OAAU,IAAM,GAEnC2+C,EADM,IAANtnC,EACWslC,EAGAA,EAAE36B,MAAM,EAAG,KAE1Bq6B,EAAchlC,EAAI,GA+CoG4nC,KAA1F,eAAoH,uBAAG/+C,UAAU,sBAKrJ,yBAAKA,UAAU,YAEPo4B,EAAQxZ,QAAO,SAACva,GACZ,MAAoB,KAAhB5F,EAAMY,MACCgF,EAEqB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACtKtiB,EAEJ,QACR4I,KAAI,SAAC3B,EAAK4B,GACT,YAAYmO,IAAR/P,EACO,KAGP,yBAAKtL,UAAU,WAAWiH,QAAS,YAlJ3C,SAAC0S,GACjB1W,aAAaY,WAAW,uBACxBZ,aAAae,QAAQ,sBAAuB2V,EAAQrM,aACpDrK,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAc2V,EAAQxa,GAAGvD,YAC9CqH,aAAaY,WAAW,gBACxBZ,aAAae,QAAQ,eAAgB2V,EAAQtM,MAC7CpK,aAAaY,WAAW,gBACxBZ,aAAae,QAAQ,eAAgB2V,EAAQ4L,aAAa3pB,YAC1DqH,aAAaY,WAAW,iBACxBZ,aAAae,QAAQ,gBAAiB2V,EAAQ8L,cAAc7pB,YAC5DqH,aAAaY,WAAW,qBACxBZ,aAAae,QAAQ,oBAAqB2V,EAAQ8f,kBAAkB79B,YACpEqH,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAc2V,EAAQ9B,WAAWjc,YACtDqH,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAY2V,EAAQ7B,SAASlc,YAClDqH,aAAaY,WAAW,mBACxBZ,aAAae,QAAQ,kBAAmB2V,EAAQsO,gBAAgBrsB,YAEhE6K,EAAQI,KAAK,CACTmB,SAFO,qBAGPH,MAAO,CAAEyF,YAAaqM,EAAQrM,YAAanO,GAAIwa,EAAQxa,MA4HQ0R,CAAYvF,KACnD,yBAAKtL,UAAU,8CACX,yBAAKA,UAAU,qCAAoC,yBAAKkH,IAAKoE,EAAI6c,UAAWlQ,MAAM,OAAO9Q,IAAI,MAC7F,wBAAInH,UAAU,QAAQsL,EAAI+B,MAAU,0BAAMrN,UAAU,gCAAgCsL,EAAIma,cAApD,MAA0Ena,EAAIia,cAClH,0BAAMvlB,UAAU,WAAhB,mCAAyCsL,EAAIuM,WAAW0lC,WAAW,IAAK,MACxE,0BAAMv9C,UAAU,WAAhB,2CAA8CsL,EAAIwM,SAASylC,WAAW,IAAK,MAC3E,0BAAMv9C,UAAU,WAAhB,kDAA8CsL,EAAI2c,iBAClD,0BAAMjoB,UAAU,gBAAhB,mDAAsDsL,EAAImuB,kBAAkB8jB,WAAW,IAAK,MAC5F,yBACIv9C,UAAU,wCACV,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,YAAW,yBAAKA,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,mCAAmCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,QAAc3M,EAAI0lC,uBAAuB,0BAAMhxC,UAAU,QAEnV,WACI,GAAc,GAAV4e,EAAa,CACb,QAAkCvD,IAA9B/P,EAAI6yC,uBAAqE,OAA9B7yC,EAAI6yC,sBAAgC,CAC/E,IAAIpuC,EAAK,GAUT,OATAzE,EAAI8yC,wBAAwBnxC,KAAI,SAAC4qE,EAAMrI,GAOnC,OANIA,EAAOlkE,EAAI6yC,sBAAsBr+C,OAAS,EAC1CiQ,GAAQ8nE,EAAO,IAGf9nE,GAAMzE,EAEH,QAEJyE,EAGP,OAAO,GAhBnB,YA6BxC,yBAAK/P,UAAU,8CACX,6BACI,wBAAIA,UAAU,cACV,wBAAIA,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,WAAW1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBACtE,0BAAM43C,cAAY,QAAlB,UAIJxjB,MAAMC,KAAKD,MAAOygB,GAAY3kC,QAAQtK,KAAI,SAAC3B,EAAK8B,GAC5C,OACI,wBAAIpN,UAAU,aAAY,uBAAGA,UAAU,YAAYsM,KAAK,IAAIrF,QAAS,SAAC7I,GA/J1G,IAA0B8gD,EAgKU9gD,EAAEiJ,iBAhKZ63C,EAiK2B5zC,EAhKjDzP,QAAQC,IAAIojD,GAERT,EADAS,IAAUhD,EACC4+B,EAAoB1qC,SAAStuB,MAAY,GAANo9B,GAGnC47B,EAAoB1qC,SAAStuB,MAAY,GAANo9B,EAAe,GAANA,EAAW,OA2JZ5zC,EAAM,OAI5C,wBAAItL,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,OAAO1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBAClE,0BAAM43C,cAAY,QAAlB,gBCzHrB87B,GA/F0B,WACrC,IAAM53E,EAA0BqD,cAE1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAC3EjH,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAPkC,IAUnCoO,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAObuL,wBAAa6uE,GAAoBt3E,EAAUhE,OAIpD,CAACgE,EAAUhE,EAAIwc,EAAc3Y,IAEhC2I,qBAAU,WACNxI,EAASmQ,GAAkB,iBAAY,OACxC,CAAClW,EAAK+V,KAAMhQ,IA/C4B,MAiDPzE,mBAAS,IAjDF,mBAiDpC4tB,EAjDoC,KAiDxBC,EAjDwB,KAoD3C,OACInS,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KAQT,yBAAKxH,UAAU,MAAMb,GAAG,cACxB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,2BAAOV,KAAK,OAAOH,GAAG,QAAQa,UAAU,eAAeE,YAAY,mBAAWX,SAAU,SAACC,GACrF+sB,EAAc/sB,EAAMC,OAAOJ,OAC3BxD,QAAQC,IAAIwwB,OAGpB,4BAAQhtB,KAAK,SAASU,UAAU,mBAC5B,uBAAGA,UAAU,sBAMrB,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAoBX,MAAOitB,OCoEhC0uD,OA9Jf,SAA0Bv8E,GAEtB,IAAM0E,EAAWqD,cAEX0hC,EAAiBtgC,aAAY,SAACC,GAAD,OAAWA,EAAMqgC,kBAC9CzhC,EAAUC,cAEVmiD,EAAgB,SAACsD,GACnBlpD,aAAaY,WAAW,iBACxBZ,aAAae,QAAQ,gBAAiBmoD,EAAc7+C,aAEpD7G,EAAQI,KAAK,CACTmB,SAFO,2BAMXgE,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAK,EACI,OAAT6M,IACA7M,EAAKgR,SAASnE,IAGlB,IAAMivE,EAA2B,SAACx3E,GAC9B,IAAM2J,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAC9DlC,SAAUH,IAAMI,SAASC,aAG7BnC,EAAS4kC,GAAsB5oC,EAAI,CAC/BsE,OAAQA,GACT2J,KAGHqQ,EAAQyqB,EAAeG,OAEvBprC,EAAU,CACd0gB,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAWb,EAAM3d,OACjBye,oBAAqB,SAACC,EAAavL,GACjCpX,QAAQC,IAAI,2BACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,IAE/BwL,aAAc,SAACxL,EAAMuL,GACnB3iB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,wBAA0B0iB,GACtC3iB,QAAQC,IAAI,eAAiBmX,KA6B3ByL,EAAU,CACd,CACEC,UAAW,aACXjL,KAAM,WACNkL,OAAQC,yBAEV,CACEF,UAAW,eACXjL,KAAM,qBACNkL,OAAQC,yBAEV,CACEF,UAAW,eACXjL,KAAM,kBACNkL,OAAQC,yBAEV,CACEF,UAAW,iBACXjL,KAAM,qBACNkL,OAAQC,yBAEV,CACEF,UAAW,GACXjL,KAAM,yBACNoL,UAjDJ,SAA0BC,EAAMC,GAC9B,OACE,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACzD4hD,EAAc7pC,KADhB,mBAiDF,CACEL,UAAW,GACXjL,KAAM,GACNoL,UA9CJ,SAA2BC,EAAMC,GAC/B,OACE,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACzDg0E,EAAyB,cAD3B,yBA8CF,CACEt8D,UAAW,GACXjL,KAAM,GACNoL,UA3CJ,SAA2BC,EAAMC,GAC/B,OACE,4BAAQ1f,KAAK,SAASU,UAAU,kBAAkBiH,QAAS,WACzDg0E,EAAyB,kBAD3B,cAiEJ,OACI,kBAAC,WAAD,KACA,6BACE,kBAAC,sBAAD,CACEv7D,WACEC,KAAkB1iB,KAzBP,SAAC,GAAD,EAAG2iB,gBAAH,IAAoBC,EAApB,EAAoBA,qBAApB,OACnB,6BAEE,6BACE,6BACE,kBAAC,KAAD,eACEC,OAAK,EACLC,SAAS,KACThc,KAAM0Z,EACNiB,QAASA,EACTE,OAAQoB,QACJH,aC/BDq7D,GAlGmB,WAC9B,IAAM/3E,EAA0BqD,cAC1BknD,EAAqC9lD,aAAY,SAACC,GAAD,OAAuBA,EAAM6lD,kBAC9ExlB,EAAqCtgC,aAAY,SAACC,GAAD,OAAuBA,EAAMqgC,kBACpFrsC,QAAQC,IAAI4xD,GACZ7xD,QAAQC,IAAIosC,GALwB,IAM5B9tB,EAAsBC,+BAAtBD,kBACFhd,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAEzEkoE,GADgDztB,EAAerlB,OAAOvoC,OAC9BooC,EAAeG,OAAOvoC,QAChEkM,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAGT,IAAI2P,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBAsCzC,OArCAyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,MAQbuL,wBAAaqjD,GAAyB9rD,EAAUhE,OAIzD,CAACgE,EAAUwY,EAAc3Y,EAAe7D,IAE3CwM,qBAAU,WACNxI,EAASmQ,GAAkB,kBAAW,sBACvC,CAAClW,EAAK+V,KAAMhQ,IAIXiX,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KAGL,kBAAC,IAAD,MACA,yBAAKxH,UAAU,OACX,kBAAC,GAAD,CAAS6K,MAAM,wCAAsB6I,KAAI,UAAKynE,GAAiCvwE,KAAK,OAAO6I,MAAM,aAUrG,yBAAKzT,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,mBAAmBb,GAAG,gBACjC,yBAAKa,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,+CAEJ,yBAAKa,UAAU,aACX,kBAAC,GAAD,YCyHjB66E,OAjNf,SAA4Bp8E,GACxB,IAAM0rE,EAAwCviE,aAAY,SAACC,GAAD,OAAuBA,EAAMoiE,oBACjF/6C,EAA2BtnB,aAAY,SAACC,GAAD,OAAuBA,EAAMqnB,aACpE6D,EAAyBnrB,aAAY,SAACC,GAAD,OAAuBA,EAAMkrB,YAHT,EAK7Br0B,mBAAS,GALoB,mBAKxDw9C,EALwD,KAK7CC,EAL6C,OAMjCz9C,mBAA4B,IANK,mBAMxD05B,EANwD,KAM/CqmB,EAN+C,KAQzDh4C,EAAUC,cA2BhBiF,qBAAU,WACN,IAAIwL,GAAKgzD,EAAgBJ,YAAYjqE,OAASqqE,EAAgBJ,YAAYjqE,OAAS,IAAK,GAEpF2+C,EADM,IAANtnC,EACWgzD,EAAgBJ,YAGhBI,EAAgBJ,YAAYjoD,MAAM,EAAE,KAGlDq6B,EAAchlC,EAAE,KAClB,CAACgzD,EAAgBJ,cAEpBluE,QAAQC,IAAKogD,GA/CkD,MA2DnCx9C,mBAAS,GA3D0B,mBA2DxDkgB,EA3DwD,KA2DhD8/B,EA3DgD,OA4DjChgD,mBAAS,GA5DwB,mBA4DxDigD,EA5DwD,KA4D/CC,EA5D+C,KA8F/D,OAtBA/iD,QAAQC,IAAIs8B,GAmBZv8B,QAAQC,IAAIs8B,GAIR,kBAAC,WAAD,KACI,yBAAKp4B,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,sEACX,wBAAIA,UAAU,QAAd,SAAyBo4B,EAAQxZ,QAAO,SAACva,GACrC,MAAoB,KAAhB5F,EAAMY,MACCgF,EAEqB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACtKtiB,EAEJ,QACRvE,OARH,sBASA,yBAAKE,UAAU,cACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,QAAhB,kBACA,4BAAQqN,KAAK,OAAOlO,GAAG,OACnBE,MAAOuf,EACPrf,SAnDpC,SAAsBnB,GAClBsgD,EAAUtgD,EAAEqB,OAAOJ,SAqDiB6vB,EAAUC,SAASliB,KAAI,SAAC3B,EAAK8B,GACzB,OACI,4BAAQ/N,MAAOiM,EAAInM,IAAKmM,EAAI+B,UAK5C,4BAAQA,KAAK,OAAOlO,GAAG,OAAOa,UAAU,OACpCX,MAAOs/C,EACPp/C,SA3DpC,SAAuBnB,GACnBwgD,EAAWxgD,EAAEqB,OAAOJ,SA6DgB0zB,EAASC,QAAQ/lB,KAAI,SAAC3B,EAAK8B,GACvB,OACI,4BAAQ/N,MAAOiM,EAAInM,IAAKmM,EAAI+B,UAK5C,4BAAQrN,UAAU,0CAA0CV,KAAK,SAAS2H,QAAS,YA9DnH,WACIpL,QAAQC,IAAI8iB,GACZ/iB,QAAQC,IAAI6iD,GACZ,IAAIlC,EAAI0tB,EAAgBJ,YAAYnrD,QAAO,SAACtT,EAAK8B,GAAN,YACnCiO,IAAR/P,GAAqBA,EAAIgd,aAAe1J,GAAUtT,EAAImd,YAAck2B,KAGhExnC,GAAKslC,EAAE38C,OAAU28C,EAAE38C,OAAU,IAAM,GAEnC2+C,EADM,IAANtnC,EACWslC,EAGAA,EAAE36B,MAAM,EAAG,KAE1Bq6B,EAAchlC,EAAI,GAgDoG4nC,KAA1F,eAAoH,uBAAG/+C,UAAU,sBAKrJ,yBAAKA,UAAU,YAEPo4B,EAAQxZ,QAAO,SAACva,GACZ,MAAoB,KAAhB5F,EAAMY,MACCgF,EAEqB,qBAAhB5F,EAAMY,QAA0Bi7C,GAAsBj2C,EAAIgJ,MAAMsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBAAkBtiB,EAAIgJ,KAAKsZ,cAAck0B,SAASp8C,EAAMY,MAAMsnB,gBACtKtiB,EAEJ,QACR4I,KAAI,SAAC3B,EAAK4B,GACT,YAAYmO,IAAR/P,EACO,KAGP,yBAAKtL,UAAU,WAAWiH,QAAS,YAnJ3C,SAAC0S,GACjB1W,aAAaY,WAAW,uBACxBZ,aAAae,QAAQ,sBAAuB2V,EAAQrM,aACpDrK,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAc2V,EAAQxa,GAAGvD,YAC9CqH,aAAaY,WAAW,gBACxBZ,aAAae,QAAQ,eAAgB2V,EAAQtM,MAC7CpK,aAAaY,WAAW,gBACxBZ,aAAae,QAAQ,eAAgB2V,EAAQ4L,aAAa3pB,YAC1DqH,aAAaY,WAAW,iBACxBZ,aAAae,QAAQ,gBAAiB2V,EAAQ8L,cAAc7pB,YAC5DqH,aAAaY,WAAW,qBACxBZ,aAAae,QAAQ,oBAAqB2V,EAAQ8f,kBAAkB79B,YACpEqH,aAAaY,WAAW,cACxBZ,aAAae,QAAQ,aAAc2V,EAAQ9B,WAAWjc,YACtDqH,aAAaY,WAAW,YACxBZ,aAAae,QAAQ,WAAY2V,EAAQ7B,SAASlc,YAClDqH,aAAaY,WAAW,mBACxBZ,aAAae,QAAQ,kBAAmB2V,EAAQsO,gBAAgBrsB,YAEhE6K,EAAQI,KAAK,CACTmB,SAFO,qBAGPH,MAAO,CAAEyF,YAAaqM,EAAQrM,YAAanO,GAAIwa,EAAQxa,MA6HQ0R,CAAYvF,KACnD,yBAAKtL,UAAU,8CACX,yBAAKA,UAAU,qCAAoC,yBAAKkH,IAAKoE,EAAI6c,UAAWlQ,MAAM,OAAO9Q,IAAI,MAC7F,wBAAInH,UAAU,QAAQsL,EAAI+B,MAAU,0BAAMrN,UAAU,gCAAgCsL,EAAIma,cAApD,MAA0Ena,EAAIia,cAClH,0BAAMvlB,UAAU,WAAhB,mCAAyCsL,EAAIuM,WAAW0lC,WAAW,IAAK,MACxE,0BAAMv9C,UAAU,WAAhB,2CAA8CsL,EAAIwM,SAASylC,WAAW,IAAK,MAC3E,0BAAMv9C,UAAU,WAAhB,kDAA8CsL,EAAI2c,iBAClD,0BAAMjoB,UAAU,gBAAhB,mDAAsDsL,EAAImuB,kBAAkB8jB,WAAW,IAAK,MAC5F,yBACIv9C,UAAU,wCACV,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,YAAW,yBAAKA,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,mCAAmCC,IAAI,GAAG8Q,MAAM,OAAO,yBAAKjY,UAAU,iBAAiBkH,IAAI,kCAAkCC,IAAI,GAAG8Q,MAAM,QAAc3M,EAAI0lC,uBAAuB,0BAAMhxC,UAAU,iBAU3X,yBAAKA,UAAU,8CACX,6BACI,wBAAIA,UAAU,cACV,wBAAIA,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,WAAW1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBACtE,0BAAM43C,cAAY,QAAlB,UAIJxjB,MAAMC,KAAKD,MAAOygB,GAAY3kC,QAAQtK,KAAI,SAAC3B,EAAK8B,GAC5C,OACI,wBAAIpN,UAAU,aAAY,uBAAGA,UAAU,YAAYsM,KAAK,IAAIrF,QAAS,SAAC7I,GA3I1G,IAA0B8gD,EA4Ic9gD,EAAEiJ,iBA5IhB63C,EA6I+B5zC,EA5IrDzP,QAAQC,IAAIojD,GAERT,EADAS,IAAUhD,EACCiuB,EAAgBJ,YAAYjoD,MAAY,GAANo9B,GAGlCirB,EAAgBJ,YAAYjoD,MAAY,GAANo9B,EAAe,GAANA,EAAW,OAuIP5zC,EAAM,OAIhD,wBAAItL,UAAU,aACV,uBAAGA,UAAU,YAAYg/C,aAAW,OAAO1yC,KAAK,IAAIrF,QAAS,SAAC7I,GAAD,OAAOA,EAAEiJ,mBAClE,0BAAM43C,cAAY,QAAlB,gBC5FrBm8B,GAtG2B,WACtC,IAAMj4E,EAA0BqD,cAE1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAC3EjH,EAAO/I,aAAaC,QAAQ,MAC5B/D,EAAU,GACD,OAAT6M,IACA7M,EAAK6M,GAPmC,IAUpCoO,EAAsBC,+BAAtBD,kBAEJuB,EAAe1Y,aAAaC,QAAQ,gBACpCF,EAAgBC,aAAaC,QAAQ,iBACzCyI,qBAAU,WACN,GAAqB,OAAjBgQ,GAA2C,OAAlB3Y,QAA2CqY,IAAjBM,QAAgDN,IAAlBrY,EAA6B,CAC9G,IAAI4Y,EAA2B/W,YAAW8W,GACtCE,EAA4BhX,YAAW7B,GACvC8Y,EAA0BF,EAAoBG,IAC9CC,EAA2BH,EAAqBE,IAChDE,EAAWzgB,KAAK0gB,MAAQ,IAC5BrgB,QAAQC,IAAIggB,GACZjgB,QAAQC,IAAImgB,GACRH,EAA0BG,GACtBD,EAA2BC,GAC3BhZ,aAAaY,WAAW,gBACxBZ,aAAaY,WAAW,iBACxBZ,aAAaY,WAAW,YACxBZ,aAAaY,WAAW,kBACxBZ,aAAaY,WAAW,MACxBZ,aAAaY,WAAW,cACxBZ,aAAaY,WAAW,eACxBV,EAAS9C,OAUbuL,wBAAag/D,GAA2BznE,EAAUhE,IAClDyM,wBAAaqkB,GAAW9sB,IACxByI,wBAAaqnB,GAAU9vB,IACvByI,wBAAa0mB,GAAYnvB,QAIlC,CAACA,EAAUhE,EAAIwc,EAAc3Y,IAEhC2I,qBAAU,WACNxI,EAASmQ,GAAkB,iBAAY,OACxC,CAAClW,EAAK+V,KAAMhQ,IArD6B,MAwDdzE,oBAAS,GAxDK,gCAyDRA,mBAAS,KAzDD,mBAyDrC4tB,EAzDqC,KAyDzBC,EAzDyB,KA2D5C,OACInS,EACI,yBAAKpa,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,kBAAC,GAAD,CAASV,KAAM,OAAQkI,MAAO,0BAIrC,kBAAC,WAAD,KAQL,yBAAKxH,UAAU,MAAMb,GAAG,cACpB,yBAAKa,UAAU,uBACX,yBAAKA,UAAU,cAAcb,GAAG,kBAC5B,yBAAKa,UAAU,gBACX,2BAAOV,KAAK,OAAOH,GAAG,QAAQa,UAAU,eAAeE,YAAY,mBAAWX,SAAU,SAACC,GACrF+sB,EAAc/sB,EAAMC,OAAOJ,OAC3BxD,QAAQC,IAAIwwB,OAGpB,4BAAQhtB,KAAK,SAASU,UAAU,mBAC5B,uBAAGA,UAAU,sBAM7B,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAoBX,MAAOitB,O,+NC9F/C,IAgKe+uD,GAhKuB,WAClC,IAAMl4E,EAA0BqD,cAC1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAC3Ei6C,EACU,GADVA,EAEO,EAL6B,EAQNxuD,mBAAS,CACvCo6C,SAAU,CAAEj6C,MAAO,GAAIQ,MAAO6tD,GAC9BzV,MAAO,CAAE54C,MAAO,GAAIQ,MAAO6tD,KAVS,mBAQjCvmD,EARiC,KAQtBC,EARsB,KAaxC,SAASE,EAAoBC,GACzBH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UAiBnF,IAAIqb,EAAOzX,aAAaC,QAAQ,eAGnB,OAATwX,GACcvK,SAASuK,GAG3B,IAAIE,EAAO3X,aAAaC,QAAQ,iBAOhC,IAAI4X,EAAO7X,aAAaC,QAAQ,iCAC5Bo4E,EAAgC,GAEvB,OAATxgE,IACAwgE,EAAgCxgE,GAGpC,IAAIkhC,EAAO/4C,aAAaC,QAAQ,eAC5B2nD,EAAc,GAEL,OAAT7O,IACA6O,EAAc7O,GAGlB,IAAIhP,EAAO/pC,aAAaC,QAAQ,gBAC5BkP,EAAe,GAEN,OAAT46B,IACA56B,EAAe46B,GAKnBrhC,qBAAU,WACNxI,EAASmQ,GAAkB,kBAAW,oBACvC,CAAClW,EAAK+V,KAAMhQ,IAEf,IAAMsD,EAAUC,cAShB,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,MACA,yBAAK1G,UAAU,OACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,iCAEJ,yBAAKa,UAAU,aACX,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAWkH,IAAKo0E,GACZ,yBAAKp0E,IAAKo0E,EAA+Bn0E,IAAI,GAAGnH,UAAU,iBAM1E,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAS,mCAAsCb,GAAG,gBACnD,yBAAKa,UAAU,aACX,yBAAKA,UAAU,uCACX,wBAAIb,GAAG,aAAP,iCAEJ,yBAAKa,UAAU,uCACX,uBAAGb,GAAG,oBAAN,yBAAwCiT,IAE5C,yBAAKpS,UAAU,uCACX,uBAAGb,GAAG,oBAAN,4BAAyC0rD,EAAYtN,WAAW,IAAK,UAMrF,yBAAKv9C,UAAU,iBACX,kBAAC,GAAD,CACIb,GAAG,cACHE,MAAOsH,EAAU8wC,MAAMp4C,MACvBU,MAAM,QACNR,SAAUuH,EACV4jB,IAAK,GACLG,IAAK,EACLzrB,MAAM,gCAOtB,yBAAKY,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,qBAEJ,yBAAKa,UAAU,aACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,iBACVY,MAAM,WACNV,MAAOsH,EAAUmyC,SAASz5C,MAC1BE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,GACNc,YAAY,MAGpB,4BAAQF,UAAU,kBAAkBiH,QAAS,YAnIrE,WACI,IAAM9H,EAAK8F,IAAMqC,QAAQ,uEAAwC,CAC7DlC,SAAUH,IAAMI,SAASC,aAG7BnC,EAAS2sD,GAAsB,CAC3B3wC,WAAYlc,aAAaC,QAAQ,MACjC0nD,uBAAwB3nD,aAAaC,QAAQ,0BAC7Cu0C,MAAO9wC,EAAU8wC,MAAMp4C,MACvBy5C,SAAUnyC,EAAUmyC,SAASz5C,OAC9BF,IAyHsEmX,KAArD,YACA,4BAAQtW,UAAS,8BAAiCiH,QAAS,WAzE/ER,EAAQI,KAAK,CACTmB,SAFO,6BA0ES,0B,+NCrJ5B,IA+KeuzE,GA/K8B,WACzC,IAAMp4E,EAA0BqD,cAC1BpJ,EAA2BwK,aAAY,SAACC,GAAD,OAAuBA,EAAMqL,KAAKD,QAE3EyH,EAAOzX,aAAaC,QAAQ,eAGnB,OAATwX,GACcvK,SAASuK,GAG3B,IAAIE,EAAO3X,aAAaC,QAAQ,iBAOhC,IAAI4X,EAAO7X,aAAaC,QAAQ,iCAC5Bo4E,EAAgC,GAEvB,OAATxgE,IACAwgE,EAAgCxgE,GAGpC,IAAIkhC,EAAO/4C,aAAaC,QAAQ,eAC5B2nD,EAAc,GAEL,OAAT7O,IACA6O,EAAc7O,GAGlB,IAAIhP,EAAO/pC,aAAaC,QAAQ,gBAC5BkP,EAAe,GAEN,OAAT46B,IACA56B,EAAe46B,GAGnB,IAAIwuC,EAAQv4E,aAAaC,QAAQ,kBAC7Bu4E,EAAyB,EAEf,OAAVD,IACAC,EAAiBtrE,SAASqrE,IAG9B,IAAIE,EAAQz4E,aAAaC,QAAQ,YAC7B41C,EAAW,GAED,OAAV4iC,IACA5iC,EAAY4iC,GAGhB,IAAIxuB,EAAiC,CACjCpU,SAAUA,EACVrB,MAAOgkC,GAvDoC,EA0Db/8E,mBAAS,CACvCo6C,SAAU,CAAEj6C,MAAO,GAAIQ,MAAO6tD,EAA+BpU,UAC7DrB,MAAO,CAAE54C,MAAO,GAAIQ,MAAO6tD,EAA+BzV,SA5Df,mBA0DxC9wC,EA1DwC,KA0D7BC,EA1D6B,KA+D/C,SAASE,EAAoBC,GACzBH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UAmBnFsM,qBAAU,WACNxI,EAASmQ,GAAkB,kBAAW,oBACvC,CAAClW,EAAK+V,KAAMhQ,IAEf,IAAMsD,EAAUC,cAShB,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,MACA,yBAAK1G,UAAU,OACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,iCAEJ,yBAAKa,UAAU,aACX,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAWkH,IAAKo0E,GACZ,yBAAKp0E,IAAKo0E,EAA+Bn0E,IAAI,GAAGnH,UAAU,iBAM1E,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAS,mCAAsCb,GAAG,gBACnD,yBAAKa,UAAU,aACX,yBAAKA,UAAU,uCACX,wBAAIb,GAAG,aAAP,iCAEJ,yBAAKa,UAAU,uCACX,uBAAGb,GAAG,oBAAN,yBAAwCiT,IAE5C,yBAAKpS,UAAU,uCACX,uBAAGb,GAAG,oBAAN,4BAAyC0rD,EAAYtN,WAAW,IAAK,UAMrF,yBAAKv9C,UAAU,iBACX,kBAAC,GAAD,CACIb,GAAG,cACHE,MAAOsH,EAAU8wC,MAAMp4C,MACvBU,MAAM,QACNR,SAAUuH,EACV4jB,IAAK,GACLG,IAAK,EACLzrB,MAAM,gCAOtB,yBAAKY,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,kCAAkCb,GAAG,iBAAnD,qBAEJ,yBAAKa,UAAU,aACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAWb,GAAG,iBACVY,MAAM,WACNV,MAAOsH,EAAUmyC,SAASz5C,MAC1BE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,GACNc,YAAY,MAGpB,4BAAQF,UAAU,kBAAkBiH,QAAS,YAhGrE,WACI,IAAM9H,EAAK8F,IAAMqC,QAAQ,uEAAwC,CAC7DlC,SAAUH,IAAMI,SAASC,aAG7BnC,EAAS2sD,GAAsB,CAC3B3wC,WAAYlc,aAAaC,QAAQ,MACjC0nD,uBAAwB3nD,aAAaC,QAAQ,0BAC7Cu0C,MAAO9wC,EAAU8wC,MAAMp4C,MACvBy5C,SAAUnyC,EAAUmyC,SAASz5C,OAC9BF,IAsFsEmX,KAArD,YACA,4BAAQtW,UAAS,8BAAiCiH,QAAS,WAzE/ER,EAAQI,KAAK,CACTmB,SAFO,6BA0ES,0BC4Ib2zE,GAhNW,WACtB,IAAI72E,EAAiB7B,aAAaC,QAAQ,kBAEtCkF,EAAkB,GAKtB,OAJuB,OAAnBtD,IAEAsD,EADgBtD,EAAeuD,MAAM,KACZ,IAEZ,iBAAbD,EAEI,kBAAC,WAAD,KACI,kBAACwzE,GAAD,MACA,yBAAKz8E,GAAG,kBAAkBa,UAAU,8CAChC,yBAAKb,GAAG,UAAUa,UAAU,mBACxB,kBAAC,GAAD,MACA,yBAAKA,UAAU,mBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO5C,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,YAAc,kBAAC,GAAD,OACzB,kBAAC,IAAD,CAAOA,KAAI,mBAAqB,kBAAC,GAAD,OAChC,kBAAC,IAAD,CAAOA,KAAI,eAAiB,kBAAC,GAAD,OAC5B,kBAAC,IAAD,CAAOA,KAAI,yBAA2B,kBAAC,GAAD,OACtC,kBAAC,IAAD,CAAOA,KAAI,yBAA2B,kBAAC,GAAD,OACtC,kBAAC,IAAD,CAAOA,KAAI,kBAAoB,kBAAC,GAAD,OAC/B,kBAAC,IAAD,CAAOA,KAAI,6BAA+B,kBAAC,GAAD,OAC1C,kBAAC,IAAD,CAAOA,KAAI,0BAA4B,kBAAC,GAAD,OACvC,kBAAC,IAAD,CAAOA,KAAI,YAAc,kBAAC,GAAD,OACzB,kBAAC,IAAD,CAAOA,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,4BAA8B,kBAAC,GAAD,OACzC,kBAAC,IAAD,CAAOA,KAAI,yBAA2B,kBAAC,GAAD,OACtC,kBAAC,IAAD,CAAOA,KAAI,4BAA8B,kBAAC,GAAD,OACzC,kBAAC,IAAD,CAAOA,KAAI,kBAAoB,kBAAC,GAAD,OAC/B,kBAAC,IAAD,CAAOA,KAAI,aAAe,kBAAC,GAAD,OAC1B,kBAAC,IAAD,CAAOA,KAAI,2BAA6B,kBAAC,GAAD,OACxC,kBAAC,IAAD,CAAOA,KAAI,mBAAqB,kBAAC,GAAD,OAChC,kBAAC,IAAD,CAAOA,KAAI,mBAAqB,kBAAC,GAAD,OAChC,kBAAC,IAAD,CAAOA,KAAI,6BAA+B,kBAAC,GAAD,OAC1C,kBAAC,IAAD,CAAOA,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,iBAAmB,kBAAC,GAAD,OAC9B,kBAAC,IAAD,CAAOA,KAAI,iBAAmB,kBAAC,GAAD,OAC9B,kBAAC,IAAD,CAAOA,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,wBAA0B,kBAAC,GAAD,OACrC,kBAAC,IAAD,CAAOA,KAAI,iBAAmB,kBAAC,GAAD,OAC9B,kBAAC,IAAD,CAAOA,KAAI,0BAA4B,kBAAC,GAAD,OACvC,kBAAC,IAAD,CAAOA,KAAI,qBAAuB,kBAAC,GAAD,OAClC,kBAAC,IAAD,CAAOA,KAAI,2BAA6B,kBAAC,GAAD,OACxC,kBAAC,IAAD,CAAOA,KAAI,uBAAyB,kBAAC,GAAD,OACpC,kBAAC,IAAD,CAAOA,KAAI,mBAAqB,kBAAC,GAAD,OAChC,kBAAC,IAAD,CAAOA,KAAI,YAAc,kBAAC,GAAD,OACzB,kBAAC,IAAD,CAAOA,KAAI,qBAAuB,kBAAC,GAAD,OAClC,kBAAC,IAAD,CAAOA,KAAI,uBAAyB,kBAAC,GAAD,OACpC,kBAAC,IAAD,CAAOA,KAAI,mBAAqB,kBAAC,GAAD,OAChC,kBAAC,IAAD,CAAOA,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,aAAe,kBAAC,GAAD,OAC1B,kBAAC,IAAD,CAAOA,KAAK,KAAI,kBAAC,GAAD,YAQtB,gBAAbgL,EAED,kBAAC,WAAD,KACI,kBAACwzE,GAAD,MACA,yBAAKz8E,GAAG,kBAAkBa,UAAU,8CAChC,yBAAKb,GAAG,UAAUa,UAAU,mBACxB,kBAAC,GAAD,MACA,yBAAKA,UAAU,gCACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO5C,KAAI,2BAA6B,kBAAC,GAAD,OACxC,kBAAC,IAAD,CAAOA,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,YAAc,kBAAC,GAAD,OACzB,kBAAC,IAAD,CAAOA,KAAI,6BAA+B,kBAAC,GAAD,OAC1C,kBAAC,IAAD,CAAOA,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,4BAA8B,kBAAC,GAAD,OACzC,kBAAC,IAAD,CAAOA,KAAI,yBAA2B,kBAAC,GAAD,OACtC,kBAAC,IAAD,CAAOA,KAAI,4BAA8B,kBAAC,GAAD,OACzC,kBAAC,IAAD,CAAOA,KAAI,SAAW,kBAAC,GAAD,OACtB,kBAAC,IAAD,CAAOA,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,qBAAuB,kBAAC,GAAD,OAClC,kBAAC,IAAD,CAAOA,KAAI,6BAA+B,kBAAC,GAAD,OAC1C,kBAAC,IAAD,CAAOA,KAAI,2BAA6B,kBAAC,GAAD,OACxC,kBAAC,IAAD,CAAOA,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,mBAAqB,kBAAC,GAAD,OAChC,kBAAC,IAAD,CAAOA,KAAI,0BAA4B,kBAAC,GAAD,OACvC,kBAAC,IAAD,CAAOA,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,kBAAoB,kBAAC,GAAD,OAC/B,kBAAC,IAAD,CAAOA,KAAI,wBAA0B,kBAAC,GAAD,OACrC,kBAAC,IAAD,CAAOA,KAAI,iBAAmB,kBAAC,GAAD,OAC9B,kBAAC,IAAD,CAAOA,KAAI,0BAA4B,kBAAC,GAAD,OACvC,kBAAC,IAAD,CAAOA,KAAI,YAAc,kBAAC,GAAD,OACzB,kBAAC,IAAD,CAAOA,KAAI,YAAc,kBAAC,GAAD,OACzB,kBAAC,IAAD,CAAOA,KAAI,sBAAwB,kBAAC,GAAD,OACnC,kBAAC,IAAD,CAAOA,KAAI,aAAe,kBAAC,GAAD,OAC1B,kBAAC,IAAD,CAAOA,KAAI,cAAgB,kBAAC,GAAD,OAC3B,kBAAC,IAAD,CAAOA,KAAK,KAAI,kBAAC,GAAD,YAQtB,iBAAbgL,EAED,kBAAC,WAAD,KACI,kBAACwzE,GAAD,MACA,yBAAKz8E,GAAG,kBAAkBa,UAAU,8CAChC,yBAAKb,GAAG,UAAUa,UAAU,mBACxB,kBAAC,GAAD,MACA,yBAAKA,UAAU,gCACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO5C,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,YAAc,kBAAC,GAAD,OACzB,kBAAC,IAAD,CAAOA,KAAI,wBAA0B,kBAAC,GAAD,OACrC,kBAAC,IAAD,CAAOA,KAAI,iBAAmB,kBAAC,GAAD,OAC9B,kBAAC,IAAD,CAAOA,KAAI,6BAA+B,kBAAC,GAAD,OAC1C,kBAAC,IAAD,CAAOA,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,4BAA8B,kBAAC,GAAD,OACzC,kBAAC,IAAD,CAAOA,KAAI,yBAA2B,kBAAC,GAAD,OACtC,kBAAC,IAAD,CAAOA,KAAI,4BAA8B,kBAAC,GAAD,OACzC,kBAAC,IAAD,CAAOA,KAAI,0BAA4B,kBAAC,GAAD,OACvC,kBAAC,IAAD,CAAOA,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,iBAAmB,kBAAC,GAAD,OAC9B,kBAAC,IAAD,CAAOA,KAAI,SAAW,kBAAC,GAAD,OACtB,kBAAC,IAAD,CAAOA,KAAI,6BAA+B,kBAAC,GAAD,OAC1C,kBAAC,IAAD,CAAOA,KAAI,YAAc,kBAACy+E,GAAD,OACzB,kBAAC,IAAD,CAAOz+E,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,mBAAqB,kBAAC,GAAD,OAChC,kBAAC,IAAD,CAAOA,KAAI,wBAA0B,kBAAC,GAAD,OACrC,kBAAC,IAAD,CAAOA,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,qBAAuB,kBAAC,GAAD,OAClC,kBAAC,IAAD,CAAOA,KAAI,6BAA+B,kBAAC,GAAD,OAC1C,kBAAC,IAAD,CAAOA,KAAI,mBAAqB,kBAAC,GAAD,OAChC,kBAAC,IAAD,CAAOA,KAAI,qBAAuB,kBAAC,GAAD,OAClC,kBAAC,IAAD,CAAOA,KAAI,2BAA6B,kBAAC,GAAD,OACxC,kBAAC,IAAD,CAAOA,KAAI,sBAAwB,kBAAC,GAAD,OACnC,kBAAC,IAAD,CAAOA,KAAI,mBAAqB,kBAAC,GAAD,OAChC,kBAAC,IAAD,CAAOA,KAAI,aAAe,kBAAC,GAAD,OAC1B,kBAAC,IAAD,CAAOA,KAAI,YAAc,kBAAC,GAAD,OACzB,kBAAC,IAAD,CAAOA,KAAI,cAAgB,kBAAC,GAAD,OAC3B,kBAAC,IAAD,CAAOA,KAAI,qBAAuB,kBAAC,GAAD,OAClC,kBAAC,IAAD,CAAOA,KAAK,KAAI,kBAAC,GAAD,YAUpC,kBAAC,WAAD,KACI,kBAAC,GAAD,MACA,yBAAK+B,GAAG,kBAAkBa,UAAU,sBAChC,yBAAKb,GAAG,WACJ,kBAAC,GAAD,MACA,yBAAKa,UAAU,mBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO5C,KAAI,2BAA6B,kBAAC,GAAD,OACxC,kBAAC,IAAD,CAAOA,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,YAAc,kBAAC,GAAD,OACzB,kBAAC,IAAD,CAAOA,KAAI,iBAAmB,kBAAC,GAAD,OAC9B,kBAAC,IAAD,CAAOA,KAAI,mBAAqB,kBAAC,GAAD,OAChC,kBAAC,IAAD,CAAOA,KAAI,YAAc,kBAAC,GAAD,OACzB,kBAAC,IAAD,CAAOA,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,aAAe,kBAAC,GAAD,OAC1B,kBAAC,IAAD,CAAOA,KAAI,cAAgB,kBAAC,GAAD,OAC3B,kBAAC,IAAD,CAAOA,KAAI,YAAc,kBAAC,GAAD,OACzB,kBAAC,IAAD,CAAOA,KAAI,SAAW,kBAAC,GAAD,OACtB,kBAAC,IAAD,CAAOA,KAAI,iBAAmB,kBAAC,GAAD,OAC9B,kBAAC,IAAD,CAAOA,KAAI,iBAAmB,kBAAC,GAAD,OAC9B,kBAAC,IAAD,CAAOA,KAAI,mBAAqB,kBAAC,GAAD,OAChC,kBAAC,IAAD,CAAOA,KAAI,UAAY,kBAAC,GAAD,OACvB,kBAAC,IAAD,CAAOA,KAAI,0BAA4B,kBAAC,GAAD,OACvC,kBAAC,IAAD,CAAOA,KAAI,6BAA+B,kBAAC,GAAD,OAC1C,kBAAC,IAAD,CAAOA,KAAI,wBAA0B,kBAAC,GAAD,OACrC,kBAAC,IAAD,CAAOA,KAAI,0BAA4B,kBAAC,GAAD,OACvC,kBAAC,IAAD,CAAOA,KAAI,wBAA0B,kBAAC,GAAD,OACrC,kBAAC,IAAD,CAAOA,KAAI,uBAAyB,kBAAC,GAAD,OACpC,kBAAC,IAAD,CAAOA,KAAI,YAAc,kBAAC,GAAD,OACzB,kBAAC,IAAD,CAAOA,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,0BAA4B,kBAAC,GAAD,OACvC,kBAAC,IAAD,CAAOA,KAAI,yBAA2B,kBAAC,GAAD,OACtC,kBAAC,IAAD,CAAOA,KAAI,aAAe,kBAAC,GAAD,OAC1B,kBAAC,IAAD,CAAOA,KAAI,cAAgB,kBAAC,GAAD,OAC3B,kBAAC,IAAD,CAAOA,KAAI,kBAAoB,kBAAC,GAAD,OAC/B,kBAAC,IAAD,CAAOA,KAAI,wBAA0B,kBAAC,GAAD,OACrC,kBAAC,IAAD,CAAOA,KAAI,wCAA0C,kBAAC,GAAD,OACrD,kBAAC,IAAD,CAAOA,KAAI,2BAA6B,kBAAC,GAAD,OACxC,kBAAC,IAAD,CAAOA,KAAK,oBAAmB,kBAAC,GAAD,OAC/B,kBAAC,IAAD,CAAOA,KAAI,aAAe,kBAAC,GAAD,OAC1B,kBAAC,IAAD,CAAOA,KAAI,wBAA0B,kBAAC,GAAD,OACrC,kBAAC,IAAD,CAAOA,KAAI,iBAAmB,kBAAC,GAAD,OAC9B,kBAAC,IAAD,CAAOA,KAAK,KAAI,kBAAC,GAAD,aCrQjC6K,I,cA5CU,WACrB,IAAIxB,EAAUC,cAId,OACI,yBAAK1G,UAAU,UACX,yBAAKA,UAAU,wCACX,uBAAGA,UAAU,yBAAyBsM,KAAK,IAAI/E,MAAO,CAClDC,MAAO,UACPs0E,SAAU,SAFd,eAIA,4BAAQ97E,UAAU,iBAAiBV,KAAK,SAAS4M,cAAY,WAAWK,cAAY,0BAA0BwvE,gBAAc,yBAAyB3vE,gBAAc,QAAQ4yC,aAAW,qBAClL,0BAAMh/C,UAAU,yBAGpB,yBAAKA,UAAU,2BAA2Bb,GAAG,0BACzC,wBAAIa,UAAU,sBACV,wBAAIA,UAAU,WAAWuH,MAAO,CAC5By0E,YAAa,SAEb,4BAAQh8E,UAAU,6BAA6Bb,GAAG,yBAAyBoI,MAAO,CAC9E0iB,gBAAiB,UACjB47C,OAAQ,oBACRr+D,MAAO,UACPy0E,WAAY,SAJhB,yBAOJ,wBAAIj8E,UAAU,WAAWuH,MAAO,CAC5By0E,YAAa,SAEb,4BAAQh8E,UAAU,6BAA6Bb,GAAG,wBAAwBoI,MAAO,CAC7E0iB,gBAAiB,UACjBziB,MAAO,UACPy0E,WAAY,QACbh1E,QAAS,WAhChCR,EAAQI,KAAK,WA4BO,mCCsDbq1E,GAvFU,WACrB,OACI,yBAAKl8E,UAAU,UACX,4BAAQA,UAAU,oCAEd,yBAAKA,UAAU,4CAEX,yBAAKA,UAAU,OAEX,yBAAKA,UAAU,yBAEX,wBAAIuH,MAAO,CACPC,MAAO,YADX,eAGA,uBAAGD,MAAO,CACNC,MAAO,YADX,6LAQJ,wBAAIxH,UAAU,kCAEd,yBAAKA,UAAU,yBAEX,wBAAIuH,MAAO,CACPC,MAAO,YADX,qCAIA,wBAAIxH,UAAU,iBACV,4BACI,uBAAGuH,MAAO,CACNC,MAAO,YADX,qBAQZ,yBAAKxH,UAAU,yBAEX,wBAAIuH,MAAO,CACPC,MAAO,YADX,SAIA,wBAAIxH,UAAU,iBACV,4BACI,uBAAGuH,MAAO,CACNC,MAAO,YADX,4BAQZ,yBAAKxH,UAAU,yBAEX,wBAAIuH,MAAO,CACPC,MAAO,YADX,0BAIA,wBAAIxH,UAAU,iBACV,4BACI,uBAAGuH,MAAO,CACNC,MAAO,YADX,sEAYpB,yBAAKxH,UAAU,oCAAoCuH,MAAO,CACtDC,MAAO,YADX,uBAGI,uBAAG8E,KAAK,KAAR,wBCnCL6vE,GArCe,WAE1B,OAEI,yBAAKn8E,UAAU,8BAA8Bb,GAAG,cAC5C,kBAAC,GAAD,MACA,yBAAKa,UAAU,kBAAkBb,GAAG,uBAChC,yBAAKa,UAAU,OACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,OAAOuH,MAAO,CACzB60E,WAAW,QACXC,UAAW,UAEX,wBAAIr8E,UAAU,qBAAqBuH,MAAO,CACtCC,MAAO,UACPs0E,SAAU,SAFd,eAIA,wBAAI97E,UAAU,cAAcuH,MAAO,CAC/BC,MAAO,UACPs0E,SAAU,SAFd,+DAIA,4BAAQ97E,UAAU,sDAAlB,+BAGR,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,aACX,yBAAKkH,IAAI,yFAAyFC,IAAI,oBAMtH,kBAAC,GAAD,Q,+NC/BZ,IAwFem1E,GAxFkB,WAC/B,IAAMn5E,EAA0BqD,cAC1BC,EAAUC,cAFqB,EAIHhI,mBAAS,CACzC6F,SAAU,CAAE1F,MAAO,GAAIQ,MAAO,IAC9BmF,SAAU,CAAE3F,MAAO,GAAIQ,MAAO,MANK,mBAI9BsH,EAJ8B,KAInBC,EAJmB,KAuBrC,SAASI,IACP,OAAQL,EAAUpC,SAAS1F,QACrB8H,EAAUpC,SAASlF,MAY3B,OAEE,yBAAKW,UAAU,mBAAmBb,GAAG,cACnC,yBAAKa,UAAU,8BACb,yBAAKA,UAAU,gCACb,wBAAIb,GAAG,YAAY8H,QATP,WAClBR,EAAQI,KAAK,mBAQP,iBAGJ,kBAAC,IAAD,MACA,yBAAK7G,UAAU,8BACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yCAAyCb,GAAG,oBACzD,yBAAK+H,IAAI,yFAAyFC,IAAI,iBAExG,yBAAKnH,UAAU,sBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,yBAAd,+BAEF,0BAAMA,UAAU,OAAOoH,SA7CzC,SAAgBhJ,GAEd,GADAA,EAAEiJ,kBACCL,IAAH,CACA,IAAMoG,EAAMnI,IAAMqC,QAAQ,uEAAwC,CAChElC,SAAUH,IAAMI,SAASC,aAE3BnC,EC1BG,SAASo5E,EAAkBl8D,EAAejT,GAC7C,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,oDAC+Egd,GAAS,CACjFhjB,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EAASO,OAThB,GAAwB,MAApBP,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASo5E,EAAkBl8D,EAAOjT,OAU7C9J,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZd,aAAaY,WAAW,wBACxBZ,aAAae,QAAQ,uBAAwBD,EAAKY,OAClDM,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,mCAAuB5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,SAEzIpB,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,sDAAiC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC9I1J,QAAQC,IAAI,aDZfygF,CAAkB51E,EAAUpC,SAASlF,MAAO+N,OAwCnC,yBAAKpN,UAAU,cAEb,kBAAC,EAAD,CAAWb,GAAG,iBACZY,MAAM,WACNV,MAAOsH,EAAUpC,SAASlF,MAC1BE,SAvDxB,SAA6BwH,GAC3BH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,WAuDzDO,UAAU,EACVC,UAAW,IACXT,MAAM,QACNc,YAAY,MAEhB,4BACEF,UAAS,6CA3CNgH,IACN,WAAa,IA2CV1H,KAAK,UAFP,sB,+NEvEtB,IA0Fek9E,GA1FkB,WAC/B,IAAMr5E,EAA0BqD,cAC1BC,EAAUC,cAFqB,EAIHhI,mBAAS,CACzC6F,SAAU,CAAE1F,MAAO,GAAIQ,MAAO,IAC9BmF,SAAU,CAAE3F,MAAO,GAAIQ,MAAO,MANK,mBAI9BsH,EAJ8B,KAInBC,EAJmB,KA0BrC,SAASI,IACP,OAAQL,EAAUnC,SAAS3F,QAAU8H,EAAUnC,SAASnF,MAY1D,OAEE,yBAAKW,UAAU,mBAAmBb,GAAG,cACnC,yBAAKa,UAAU,8BACb,yBAAKA,UAAU,gCACb,wBAAIb,GAAG,YAAY8H,QATP,WAClBR,EAAQI,KAAK,mBAQP,iBAGJ,kBAAC,IAAD,MACA,yBAAK7G,UAAU,8BACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yCAAyCb,GAAG,oBACzD,yBAAK+H,IAAI,yFAAyFC,IAAI,iBAExG,yBAAKnH,UAAU,sBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,yBAAd,0CAEF,0BAAMA,UAAU,OAAOoH,SAhDzC,SAAgBhJ,GAEd,GADAA,EAAEiJ,kBACCL,IAAH,CACA,IAAMoG,EAAMnI,IAAMqC,QAAQ,0EAA2C,CACnElC,SAAUH,IAAMI,SAASC,aAE3BnC,ECzBG,SAASs5E,EAAiB14E,EAAWqJ,GACxC,IAAIhJ,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,2CAC8E,CACvEhG,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAG5BT,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASs5E,EAAiB14E,EAAMqJ,OAU3C9J,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,GACZkB,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,qDAA4B5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,SAE9IpB,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBoG,IAAM9I,OAAOiR,EAAK,CAAElI,OAAQ,8DAAkC5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MAC/I1J,QAAQC,IAAI,aDZf2gF,CACL,CACIC,YAAa/1E,EAAUnC,SAASnF,MAChCsF,MAAO1B,aAAaC,QAAQ,yBAC7BkK,OAuCW,yBAAKpN,UAAU,cACb,kBAAC,EAAD,CAAWb,GAAG,iBACZY,MAAM,WACNV,MAAOsH,EAAUnC,SAASnF,MAC1BE,SAzDxB,SAA6BwH,GAC3BH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,WAyDzDO,UAAU,EACVC,UAAW,IACXP,KAAK,WACLF,MAAM,8BACNc,YAAY,MAEhB,4BACEF,UAAS,6CA3CNgH,IACN,WAAa,IA2CV1H,KAAK,UAFP,sB,+NEzEtB,IAmJeq9E,GAnJgB,WAC7B,IAAMx5E,EAA0BqD,cAC1BC,EAAUC,cAFmB,EAIDhI,mBAAS,CACzC6F,SAAU,CAAE1F,MAAO,GAAIQ,MAAO,IAC9BmF,SAAU,CAAE3F,MAAO,GAAIQ,MAAO,IAC9BghB,MAAO,CAAExhB,MAAO,GAAIQ,MAAO,IAC3BihB,UAAW,CAAEzhB,MAAO,GAAIQ,MAAO,IAC/BkhB,SAAU,CAAE1hB,MAAO,GAAIQ,MAAO,IAC9BmhB,YAAa,CAAE3hB,MAAO,GAAIQ,MAAO,IACjC0F,kBAAmB,CAAElG,MAAO,GAAIQ,MAAO,IACvCohB,IAAK,CAAE5hB,MAAO,GAAIQ,MAAO,IACzBqhB,MAAO,CAAE7hB,MAAO,GAAIQ,MAAO,IAC3BshB,QAAS,CAAE9hB,MAAO,GAAIQ,MAAO,IAC7BumD,UAAW,CAAE/mD,MAAO,GAAIQ,MAAO,IAC/B8hB,UAAW,CAAEtiB,MAAO,GAAIQ,MAAO,MAhBE,mBAI5BsH,EAJ4B,KAIjBC,EAJiB,KAmBnC,SAASnC,EAAgBpF,IACT,IAAVA,GACFoH,EAAQI,KAAK,QAQjB,SAASC,EAAoBC,GAC3BH,E,2VAAa,IAAKD,EAAN,eAAkBI,EAAMhH,MAAQ,CAAElB,MAAOkI,EAAMlI,MAAOQ,MAAO0H,EAAM1H,UAwBjF,SAAS2H,IACP,OAAQL,EAAUpC,SAAS1F,OAAS8H,EAAUnC,SAAS3F,QACjD8H,EAAUpC,SAASlF,QAAUsH,EAAUnC,SAASnF,MAYxD,OAEE,yBAAKW,UAAU,mBAAmBb,GAAG,cACnC,yBAAKa,UAAU,8BACb,yBAAKA,UAAU,gCACb,wBAAIb,GAAG,YAAY8H,QATP,WAClBR,EAAQI,KAAK,mBAQP,iBAGJ,kBAAC,IAAD,MACA,yBAAK7G,UAAU,8BACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yCAAyCb,GAAG,oBACzD,yBAAK+H,IAAI,yFAAyFC,IAAI,iBAExG,yBAAKnH,UAAU,sBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,yBAAd,yBAEF,0BAAMA,UAAU,OAAOoH,SAzDzC,SAAgBhJ,GAEd,GADAA,EAAEiJ,kBACCL,IAAH,CACA,IAAM7H,EAAK8F,IAAMqC,QAAQ,0EAA2C,CAClElC,SAAUH,IAAMI,SAASC,aAE3BnC,EC/CG,SAAsBY,EAAWU,EAAsBtF,GAE1D,OAAO,SAACgE,GACJC,MAAM,GAAD,OACEC,+BADF,SACwC,CACzChG,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkC+F,yBAClC,mCAAoC,QAExCtF,KAAMzB,KAAKC,UAAUwH,KAGpBT,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAME,MAAMH,EAASI,YAEzB,OAAOJ,KAEVD,MAAK,SAAAS,GAEFkB,IAAM9I,OAAOgD,EAAI,CAAE+F,OAAQ,wCAAsB5F,KAAM,UAAW6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,MACpIC,YAAW,WACPf,GAAgB,KACjB,QAENN,OAAM,SAAAtF,GACHoG,IAAM9I,OAAOgD,EAAI,CAAE+F,OAAQ,iDAA4B5F,KAAM,QAAS6F,WAAW,EAAOC,SAAUH,IAAMI,SAASC,WAAYC,UAAW,UDmB3Iq3E,CAAa,CAClBr4E,SAAUoC,EAAUpC,SAASlF,MAC7BmF,SAAUmC,EAAUnC,SAASnF,MAC7BghB,MAAO1Z,EAAU0Z,MAAMhhB,MACvBihB,UAAW,KACXC,SAAU,KACVC,YAAa,KACbzb,kBAAmB,KACnB0b,IAAK,KACLC,MAAO,KACPC,QAAS,KACTQ,UAAW,CAAC,gBACb1c,EAAiBtF,OAwCF,yBAAKa,UAAU,cAEb,kBAAC,EAAD,CAAWb,GAAG,iBACZY,MAAM,WACNV,MAAOsH,EAAUpC,SAASlF,MAC1BE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,kCACNc,YAAY,MAGhB,yBAAKF,UAAU,cAEb,kBAAC,EAAD,CAAWb,GAAG,cACZY,MAAM,QACNV,MAAOsH,EAAU0Z,MAAMhhB,MACvBE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXT,MAAM,QACNc,YAAY,MAGhB,yBAAKF,UAAU,cACb,kBAAC,EAAD,CAAWb,GAAG,iBACZY,MAAM,WACNV,MAAOsH,EAAUnC,SAASnF,MAC1BE,SAAUuH,EACVlH,UAAU,EACVC,UAAW,IACXP,KAAK,WACLF,MAAM,qBACNc,YAAY,MAGhB,4BACEF,UAAS,6CApENgH,IACN,WAAa,IAoEV1H,KAAK,UAFP,yBAMF,yBAAKU,UAAU,sCACb,2EAAwB,0BAAMuH,MAAO,CAACC,MAAO,YAAY,0BAAMxH,UAAU,OAAOuH,MAAO,CAACC,MAAO,WAAYP,QAAS,WA5GpIR,EAAQI,KAAK,UA4G4D,wC,WEpGhEg2E,GArCsB,WACjC,IAAM15E,EAA0BqD,cAE1Bs2E,EAAc9+E,OAAO++E,SAASC,OAG9B1hF,EAFY,IAAI2hF,gBAAgBH,GAEhBI,IAAI,OAO1B,OANArhF,QAAQC,IAAIR,GAEZqQ,qBAAU,WACNxI,ECdD,SAASg6E,EAAmC7hF,GAC/C,IAAI8I,EAAS,UAAYnB,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAASrB,MACTsB,MAAM,GAAD,OACMC,+BADN,uDACkF/H,GAAO,CAClF+B,OAAQ,OACRC,QAAS,CACL,cAAiB8G,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCf,yBAClC,mCAAoC,UAI/CC,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBR,EAASJ,MACTI,EAASg6E,EAAmC7hF,OAUvDgI,MAAM,SAAAS,GACHlI,QAAQC,IAAIiI,MAEfI,OAAM,SAAAtF,GACHsE,EAASlB,GAAepD,IACxBhD,QAAQC,IAAI,aDpBXqhF,CAAmC7hF,MAC7C,CAAC6H,EAAU7H,IAGV,kBAAC,WAAD,KAEI,yBAAK0E,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,SAAQ,uBAAGA,UAAU,cAAci/C,cAAY,WAElE,yBAAKj/C,UAAU,WACX,gEACA,+MACA,uBAAGsM,KAAK,SAAR,qBEYjB8wE,GA/BO,WAMpB,OACE,yBAAKp9E,UAAU,MAAMb,GAAG,WACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO/B,KAAK,iBAAgB,kBAAC,GAAD,OAC5B,kBAAC,IAAD,CAAOA,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,oBAAsB,kBAAC,GAAD,OACjC,kBAAC,IAAD,CAAOA,KAAI,aAAe,kBAAC,GAAD,OAC1B,kBAAC,IAAD,CAAOA,KAAI,wBAA0B,kBAAC,GAAD,OACrC,kBAAC,IAAD,CAAOA,KAAK,SAAQ,kBAAC,GAAD,OACpB,kBAACqK,GAAD,CAAcrK,KAAK,KACjB,kBAAC,GAAD,WCnBQigF,QACW,cAA7Br/E,OAAO++E,SAAS7/E,UAEe,UAA7Bc,OAAO++E,SAAS7/E,UAEhBc,OAAO++E,SAAS7/E,SAASogF,MACvB,2D,kmBCXN,IAAMC,GAA8B,CAChC5nE,kBAAmBgQ,GAA0BtP,KAC7CmnE,gBAAiB,KACjBx0D,SAAU,IAsCCy0D,OAnCf,WAAmG,IAA1E51E,EAAyE,uDAAlD01E,GAAcG,EAAoC,uCAC9F,OAAQA,EAAOp+E,MACX,KAAK0nB,GACD,OAAO,MAAKnf,EAAZ,CAAmBmhB,SAAS,GAAD,oBAAMnhB,EAAMmhB,UAAZ,CAAsB00D,EAAOn2D,YAE5D,KAAKN,GACD,IAAM02D,EAAqB91E,EAAMmhB,SAAS40D,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOn2D,QAAQpoB,MAC/E6pB,EAAuBnhB,EAAMmhB,SAEjC,OADAA,EAAS20D,GAAcD,EAAOn2D,QACvB,MAAK1f,EAAZ,CAAmBmhB,SAAUA,IAEjC,KAAK9B,GACD,OAAO,MAAKrf,EAAZ,CAAmBmhB,SAAUnhB,EAAMmhB,SAASpK,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE9E,KAAKioB,GACD,OAAO,MAAKvf,EAAZ,CAAmB21E,gBAAiBE,EAAOn2D,UAE/C,KAAKF,GACD,OAAO,MAAKxf,EAAZ,CAAmB21E,gBAAiB,OAExC,KAAK77E,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,KAAK8nB,GACD,IAAMw2D,EAAqB91E,EAAMmhB,SAAS40D,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,MACvE6pB,EAAuBnhB,EAAMmhB,SAEjC,OADAA,EAAS20D,GAAYjhF,OAASssB,EAAS20D,GAAYjhF,OAASghF,EAAOhhF,OAC5D,MAAKmL,EAAZ,CAAmBmhB,SAAUA,IAEjC,QACI,OAAOnhB,I,6jBCxCnB,IAAM01E,GAAmC,CACrCvwE,cAAe,CAAC,CAAC7N,GAAI,EAAG0wC,KAAM,IAAIr0C,KAAQkY,KAAM,GAAI7I,MAAO,iBAkBhDizE,OAff,WAAiH,IAApFj2E,EAAmF,uDAAvD01E,GAAcG,EAAyC,uCAC5G,OAAQA,EAAOp+E,MACX,KAAK2gB,GACD,OAAO,MAAIpY,EAAX,CAAkBmF,cAAc,GAAD,oBAAMnF,EAAMmF,eAAZ,CAA2B0wE,EAAOvwE,iBAErE,KAAK+S,GACD,OAAO,MAAIrY,EAAX,CAAkBmF,cAAenF,EAAMmF,cAClC4R,QAAO,SAAAk/C,GAAY,OAAIA,EAAa3+D,KAAOu+E,EAAOv+E,QAE3D,QACI,OAAO0I,I,6jBCNnB,IAAM01E,GAA2B,CAC7B5nE,kBAAmBuE,GAAuB7D,KAC1C6K,aAAc,KACd68D,OAAQ,GACRrgE,SAAU,GACV2L,SAAU,GACVzI,QAAS,IAyFEo9D,OAtFf,WAAyF,IAApEn2E,EAAmE,uDAA/C01E,GAAcG,EAAiC,uCACpF,OAAQA,EAAOp+E,MACX,KAAKmB,EACD,OAAO,MAAKoH,EAAZ,CAAmBk2E,OAAO,GAAD,oBAAMl2E,EAAMk2E,QAAZ,CAAoBL,EAAO17E,SAExD,KAAKtB,EACD,IAAMi9E,EAAqB91E,EAAMk2E,OAAOH,WAAU,SAAAC,GAAE,OAAIA,EAAGt5E,WAAam5E,EAAO17E,KAAKuC,YAChFw5E,EAAkBl2E,EAAMk2E,OAE5B,OADAA,EAAOJ,GAAcD,EAAO17E,KACrB,MAAK6F,EAAZ,CAAmBk2E,OAAQA,IAE/B,KAAKp9E,EACD,OAAO,MAAKkH,EAAZ,CAAmBk2E,OAAQl2E,EAAMk2E,OAAOn/D,QAAO,SAAAzH,GAAC,OAAEA,EAAE5S,WAAam5E,EAAO17E,KAAKuC,cAGjF,KAAK1D,EACD,OAAO,MAAKgH,EAAZ,CAAmB6V,SAAQ,uBAAO7V,EAAM6V,UAAb,CAAuBggE,EAAO17E,SAE7D,KAAKpB,EACD,OAAO,MAAKiH,EAAZ,CAAmB6V,SAAU,KAEjC,KAAK5c,EACD,OAAO,MAAK+G,EAAZ,CAAmB6V,SAAS,GAAD,oBAAM7V,EAAM6V,UAAZ,CAAsBggE,EAAO17E,SAE5D,KAAKhB,EACD,IAAM28E,EAAqB91E,EAAM6V,SAASkgE,WAAU,SAAAC,GAAE,OAAIA,EAAGt5E,WAAam5E,EAAO17E,KAAKuC,YAClFmZ,EAAoB7V,EAAM6V,SAE9B,OADAA,EAASigE,GAAcD,EAAO17E,KACvB,MAAK6F,EAAZ,CAAmB6V,SAAUA,IAEjC,KAAK3c,EACD,OAAO,MAAK8G,EAAZ,CAAmB6V,SAAU7V,EAAM6V,SAASkB,QAAO,SAAAzH,GAAC,OAAEA,EAAE5S,WAAam5E,EAAO17E,KAAKuC,cAGrF,KAAKrD,EACD,OAAO,MAAK2G,EAAZ,CAAmBwhB,SAAQ,uBAAOxhB,EAAMwhB,UAAb,CAAuBq0D,EAAO17E,SAE7D,KAAKf,EACD,OAAO,MAAK4G,EAAZ,CAAmBwhB,SAAU,KAEjC,KAAKloB,EACD,OAAO,MAAK0G,EAAZ,CAAmBwhB,SAAS,GAAD,oBAAMxhB,EAAMwhB,UAAZ,CAAsBq0D,EAAO17E,SAE5D,KAAKZ,EACD,IAAMu8E,EAAqB91E,EAAMwhB,SAASu0D,WAAU,SAAAC,GAAE,OAAIA,EAAGt5E,WAAam5E,EAAO17E,KAAKuC,YAClF8kB,EAAoBxhB,EAAMwhB,SAE9B,OADAA,EAASs0D,GAAcD,EAAO17E,KACvB,MAAK6F,EAAZ,CAAmBwhB,SAAUA,IAEjC,KAAKhoB,EACD,OAAO,MAAKwG,EAAZ,CAAmBwhB,SAAUxhB,EAAMwhB,SAASzK,QAAO,SAAAzH,GAAC,OAAEA,EAAE5S,WAAam5E,EAAO17E,KAAKuC,cAGrF,KAAKhD,EACD,OAAO,MAAKsG,EAAZ,CAAmB+Y,QAAO,uBAAO/Y,EAAM+Y,SAAb,CAAsB88D,EAAO17E,SAE3D,KAAKV,EACD,OAAO,MAAKuG,EAAZ,CAAmB+Y,QAAS,KAEhC,KAAKpf,EACD,OAAO,MAAKqG,EAAZ,CAAmB+Y,QAAQ,GAAD,oBAAM/Y,EAAM+Y,SAAZ,CAAqB88D,EAAO17E,SAE1D,KAAKP,EACD,IAAMk8E,EAAqB91E,EAAM+Y,QAAQg9D,WAAU,SAAAC,GAAE,OAAIA,EAAGt5E,WAAam5E,EAAO17E,KAAKuC,YACjFqc,EAAmB/Y,EAAM+Y,QAE7B,OADAA,EAAQ+8D,GAAcD,EAAO17E,KACtB,MAAK6F,EAAZ,CAAmB+Y,QAASA,IAEhC,KAAKlf,EACD,OAAO,MAAKmG,EAAZ,CAAmB+Y,QAAS/Y,EAAM+Y,QAAQhC,QAAO,SAAAzH,GAAC,OAAEA,EAAE5S,WAAam5E,EAAO17E,KAAKuC,cAGnF,KAAK3C,EACD,OAAO,MAAKiG,EAAZ,CAAmBqZ,aAAcw8D,EAAO17E,OAE5C,KAAKH,EACD,OAAO,MAAKgG,EAAZ,CAAmBqZ,aAAc,OAErC,KAAKvf,EACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,ICpGNo2E,GAAoB,Y,6jBCEjC,IAAMV,GAA6B,CAC/BW,OAAQ,IAcGC,OAXf,WAA8F,IAAxEt2E,EAAuE,uDAAjD01E,GAAcG,EAAmC,uCACzF,OAAQA,EAAOp+E,MACX,KAAK2+E,GACD,OAAO,MAAIp2E,EAAX,CAAkBq2E,OAAO,GAAD,oBAAMr2E,EAAMq2E,QAAZ,OAAwBR,EAAOU,WAE3D,QACI,OAAOv2E,I,6jBCVnB,IAAItD,GAAWtB,aAAaC,QAAQ,YAE9Bq6E,GAAyB,CAC3Bh5E,SAAuB,OAAbA,GAAoBA,GAAW,IAiB9B85E,OAdf,WAAwF,IAAhEx2E,EAA+D,uDAA7C01E,GAAcG,EAA+B,uCACnF,OAAQA,EAAOp+E,MACX,KAAKa,EACD,OAAO,MAAK0H,EAAZ,CAAmBtD,SAAWm5E,EAAOn5E,WAEzC,KAAKnE,EACD,OAAO,MAAKyH,EAAZ,CAAmBtD,SAAU,KAEjC,QACI,OAAOsD,I,6jBCZnB,IAAM01E,GAA+B,CACjC5nE,kBAAmB4U,GAA2BlU,KAC9CoV,iBAAkB,KAClBV,UAAW,IAsCAuzD,OAnCf,WAAsG,IAA5Ez2E,EAA2E,uDAAnD01E,GAAcG,EAAqC,uCACjG,OAAQA,EAAOp+E,MACX,KAAKgQ,GAGL,KAAKN,GACD,OAAO,MAAKnH,EAAZ,CAAmBkjB,UAAU,GAAD,oBAAMljB,EAAMkjB,WAAZ,CAAuB2yD,EAAOnuE,aAE9D,KAAKN,GACD,IAAM0uE,EAAqB91E,EAAMkjB,UAAU6yD,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOnuE,SAASpQ,MACjF4rB,EAAyBljB,EAAMkjB,UAEnC,OADAA,EAAU4yD,GAAcD,EAAOnuE,SACxB,MAAK1H,EAAZ,CAAmBkjB,UAAWA,IAElC,KAAK7b,GACD,OAAO,MAAKrH,EAAZ,CAAmBkjB,UAAWljB,EAAMkjB,UAAUnM,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEhF,KAAKkQ,GACD,OAAO,MAAKxH,EAAZ,CAAmBkjB,UAAW,KAElC,KAAK5b,GACD,OAAO,MAAKtH,EAAZ,CAAmB4jB,iBAAkBiyD,EAAOnuE,WAEhD,KAAKH,GACD,OAAO,MAAKvH,EAAZ,CAAmB4jB,iBAAkB,OAEzC,KAAK9pB,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,6jBCpCnB,IAAM01E,GAA6B,CAC/B5nE,kBAAmBwW,GAAyB9V,KAC5CuX,eAAgB,KAChBD,QAAS,IAsCE4wD,ICxCHC,GDwCGD,GAnCf,WAAgG,IAAxE12E,EAAuE,uDAAjD01E,GAAcG,EAAmC,uCAC3F,OAAQA,EAAOp+E,MACX,KAAK2tB,GAGL,KAAKN,GACD,OAAO,MAAK9kB,EAAZ,CAAmB8lB,QAAQ,GAAD,oBAAM9lB,EAAM8lB,SAAZ,CAAqB+vD,EAAOxwD,WAE1D,KAAKN,GACD,IAAM+wD,EAAqB91E,EAAM8lB,QAAQiwD,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOxwD,OAAO/tB,MAC7EwuB,EAAqB9lB,EAAM8lB,QAE/B,OADAA,EAAQgwD,GAAcD,EAAOxwD,OACtB,MAAKrlB,EAAZ,CAAmB8lB,QAASA,IAEhC,KAAKd,GACD,OAAO,MAAKhlB,EAAZ,CAAmB8lB,QAAS9lB,EAAM8lB,QAAQ/O,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE5E,KAAK6tB,GACD,OAAO,MAAKnlB,EAAZ,CAAmB8lB,QAAS,KAEhC,KAAKb,GACD,OAAO,MAAKjlB,EAAZ,CAAmB+lB,eAAgB8vD,EAAOxwD,SAE9C,KAAKH,GACD,OAAO,MAAKllB,EAAZ,CAAmB+lB,eAAgB,OAEvC,KAAKjsB,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCnCP22E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCDZ,IAAMjB,GAA+B,CACjC5nE,kBAAmB6oE,GAA2BnoE,KAC9CooE,iBAAkB,KAClBvnE,UAAW,IAsCAwnE,ICzCHC,GDyCGD,GAnCf,WAAsG,IAA5E72E,EAA2E,uDAAnD01E,GAAcG,EAAqC,uCACjG,OAAQA,EAAOp+E,MACX,KAAKu5B,GAGL,KAAKN,GACD,OAAO,MAAK1wB,EAAZ,CAAmBqP,UAAU,GAAD,oBAAMrP,EAAMqP,WAAZ,CAAuBwmE,EAAO3kD,aAE9D,KAAKP,GACD,IAAMmlD,EAAqB91E,EAAMqP,UAAU0mE,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO3kD,SAAS55B,MACjF+X,EAAyBrP,EAAMqP,UAEnC,OADAA,EAAUymE,GAAcD,EAAO3kD,SACxB,MAAKlxB,EAAZ,CAAmBqP,UAAWA,IAElC,KAAKuhB,GACD,OAAO,MAAK5wB,EAAZ,CAAmBqP,UAAWrP,EAAMqP,UAAU0H,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEhF,KAAKy5B,GACD,OAAO,MAAK/wB,EAAZ,CAAmBqP,UAAW,KAElC,KAAKwhB,GACD,OAAO,MAAK7wB,EAAZ,CAAmB42E,iBAAkBf,EAAO3kD,WAEhD,KAAKJ,GACD,OAAO,MAAK9wB,EAAZ,CAAmB42E,iBAAkB,OAEzC,KAAK98E,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,IE1CN+2E,GAA4B,oBAC5BC,GAA6B,qBAC7BC,GAA+B,uBAE/BC,GAA4C,oCAC5CC,GAA2C,mCAC3Cr9E,GAAiC,yBAIjCs9E,GAAmC,2BACnCC,GAAgC,wB,ukBDLjCP,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KEAZ,IAAMpB,GAAmC,CACrC5nE,kBAAmBgpE,GAA+BtoE,KAClD8oE,qBAAsB,KACtBC,eAAgB,IAsCLC,OAnCf,WAAmH,IAApFx3E,EAAmF,uDAAvD01E,GAAcG,EAAyC,uCAC9G,OAAQA,EAAOp+E,MACX,KAAK4/E,GAGL,KAAKN,GACD,OAAO,MAAK/2E,EAAZ,CAAmBu3E,eAAe,GAAD,oBAAMv3E,EAAMu3E,gBAAZ,CAA4B1B,EAAO4B,kBAExE,KAAKT,GACD,IAAMlB,EAAqB91E,EAAMu3E,eAAexB,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO4B,cAAcngF,MAC3FigF,EAAkCv3E,EAAMu3E,eAE5C,OADAA,EAAezB,GAAcD,EAAO4B,cAC7B,MAAKz3E,EAAZ,CAAmBu3E,eAAgBA,IAEvC,KAAKN,GACD,OAAO,MAAKj3E,EAAZ,CAAmBu3E,eAAgBv3E,EAAMu3E,eAAexgE,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE1F,KAAK8/E,GACD,OAAO,MAAKp3E,EAAZ,CAAmBu3E,eAAgB,KAEvC,KAAKL,GACD,OAAO,MAAKl3E,EAAZ,CAAmBs3E,qBAAsBzB,EAAO4B,gBAEpD,KAAKN,GACD,OAAO,MAAKn3E,EAAZ,CAAmBs3E,qBAAsB,OAE7C,KAAKx9E,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,6jBCpCnB,IAAM01E,GAA8B,CAChC5nE,kBAAmBqY,GAA0B3X,KAC7Cia,gBAAiB,KACjBnB,SAAU,IAsCCowD,OAnCf,WAAmG,IAA1E13E,EAAyE,uDAAlD01E,GAAcG,EAAoC,uCAC9F,OAAQA,EAAOp+E,MACX,KAAKqvB,GAGL,KAAKN,GACD,OAAO,MAAKxmB,EAAZ,CAAmBsnB,SAAS,GAAD,oBAAMtnB,EAAMsnB,UAAZ,CAAsBuuD,EAAO7uD,aAE5D,KAAKP,GACD,IAAMqvD,EAAqB91E,EAAMsnB,SAASyuD,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO7uD,SAAS1vB,MAChFgwB,EAAuBtnB,EAAMsnB,SAEjC,OADAA,EAASwuD,GAAcD,EAAO7uD,SACvB,MAAKhnB,EAAZ,CAAmBsnB,SAAUA,IAEjC,KAAKZ,GACD,OAAO,MAAK1mB,EAAZ,CAAmBsnB,SAAUtnB,EAAMsnB,SAASvQ,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE9E,KAAKuvB,GACD,OAAO,MAAK7mB,EAAZ,CAAmBsnB,SAAU,KAEjC,KAAKX,GACD,OAAO,MAAK3mB,EAAZ,CAAmByoB,gBAAiBotD,EAAO7uD,WAE/C,KAAKJ,GACD,OAAO,MAAK5mB,EAAZ,CAAmByoB,gBAAiB,OAExC,KAAK3uB,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,6jBCpCnB,IAAM01E,GAA+B,CACjC5nE,kBAAmB0a,GAA2Bha,KAC9Csc,iBAAkB,KAClBnB,UAAW,IAsCAguD,OAnCf,WAAsG,IAA5E33E,EAA2E,uDAAnD01E,GAAcG,EAAqC,uCACjG,OAAQA,EAAOp+E,MACX,KAAKyxB,GAGL,KAAKN,GACD,OAAO,MAAK5oB,EAAZ,CAAmB2pB,UAAU,GAAD,oBAAM3pB,EAAM2pB,WAAZ,CAAuBksD,EAAOzsD,cAE9D,KAAKP,GACD,IAAMitD,EAAqB91E,EAAM2pB,UAAUosD,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOzsD,UAAU9xB,MAClFqyB,EAAyB3pB,EAAM2pB,UAEnC,OADAA,EAAUmsD,GAAcD,EAAOzsD,UACxB,MAAKppB,EAAZ,CAAmB2pB,UAAWA,IAElC,KAAKb,GACD,OAAO,MAAK9oB,EAAZ,CAAmB2pB,UAAW3pB,EAAM2pB,UAAU5S,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEhF,KAAK2xB,GACD,OAAO,MAAKjpB,EAAZ,CAAmB2pB,UAAW,KAElC,KAAKZ,GACD,OAAO,MAAK/oB,EAAZ,CAAmB8qB,iBAAkB+qD,EAAOzsD,YAEhD,KAAKJ,GACD,OAAO,MAAKhpB,EAAZ,CAAmB8qB,iBAAkB,OAEzC,KAAKhxB,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,6jBCpCnB,IAAM01E,GAA6B,CAC/B5nE,kBAAmB+c,GAAyBrc,KAC5C+c,eAAgB,KAChBJ,QAAS,IAsCEysD,OAnCf,WAAgG,IAAxE53E,EAAuE,uDAAjD01E,GAAcG,EAAmC,uCAC3F,OAAQA,EAAOp+E,MACX,KAAKuV,GAGL,KAAKN,GACD,OAAO,MAAK1M,EAAZ,CAAmBmrB,QAAQ,GAAD,oBAAMnrB,EAAMmrB,SAAZ,CAAqB0qD,EAAO3oE,YAE1D,KAAKP,GACD,IAAMmpE,EAAqB91E,EAAMmrB,QAAQ4qD,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO3oE,QAAQ5V,MAC9E6zB,EAAqBnrB,EAAMmrB,QAE/B,OADAA,EAAQ2qD,GAAcD,EAAO3oE,QACtB,MAAKlN,EAAZ,CAAmBmrB,QAASA,IAEhC,KAAKve,GACD,OAAO,MAAK5M,EAAZ,CAAmBmrB,QAASnrB,EAAMmrB,QAAQpU,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE5E,KAAKyV,GACD,OAAO,MAAK/M,EAAZ,CAAmBmrB,QAAS,KAEhC,KAAKte,GACD,OAAO,MAAK7M,EAAZ,CAAmBurB,eAAgBsqD,EAAO3oE,UAE9C,KAAKJ,GACD,OAAO,MAAK9M,EAAZ,CAAmBurB,eAAgB,OAEvC,KAAKzxB,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,6jBCpCnB,IAAM01E,GAA6B,CAC/B5nE,kBAAmB4d,GAAyBld,KAC5Cuf,eAAgB,KAChB5N,QAAS,IAsCE03D,OAnCf,WAAgG,IAAxE73E,EAAuE,uDAAjD01E,GAAcG,EAAmC,uCAC3F,OAAQA,EAAOp+E,MACX,KAAKuZ,GAGL,KAAKN,GACD,OAAO,MAAK1Q,EAAZ,CAAmBmgB,QAAQ,GAAD,oBAAMngB,EAAMmgB,SAAZ,CAAqB01D,EAAO5kE,WAE1D,KAAKN,GACD,IAAMmlE,EAAqB91E,EAAMmgB,QAAQ41D,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO5kE,OAAO3Z,MAC7E6oB,EAAqBngB,EAAMmgB,QAE/B,OADAA,EAAQ21D,GAAcD,EAAO5kE,OACtB,MAAKjR,EAAZ,CAAmBmgB,QAASA,IAEhC,KAAKvP,GACD,OAAO,MAAK5Q,EAAZ,CAAmBmgB,QAASngB,EAAMmgB,QAAQpJ,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE5E,KAAKyZ,GACD,OAAO,MAAK/Q,EAAZ,CAAmBmgB,QAAS,KAEhC,KAAKtP,GACD,OAAO,MAAK7Q,EAAZ,CAAmB+tB,eAAgB8nD,EAAO5kE,SAE9C,KAAKH,GACD,OAAO,MAAK9Q,EAAZ,CAAmB+tB,eAAgB,OAEvC,KAAKj0B,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,6jBCpCnB,IAAM01E,GAA8B,CAChC5nE,kBAAmBk3B,GAA0Bx2B,KAC7Cq7B,gBAAiB,KACjBtB,SAAU,IAsCCuvC,OAnCf,WAAmG,IAA1E93E,EAAyE,uDAAlD01E,GAAcG,EAAoC,uCAC9F,OAAQA,EAAOp+E,MACX,KAAKoa,GAGL,KAAKN,GACD,OAAO,MAAKvR,EAAZ,CAAmBuoC,SAAS,GAAD,oBAAMvoC,EAAMuoC,UAAZ,CAAsBstC,EAAO/jE,YAE5D,KAAKN,GACD,IAAMskE,EAAqB91E,EAAMuoC,SAASwtC,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO/jE,QAAQxa,MAC/EixC,EAAuBvoC,EAAMuoC,SAEjC,OADAA,EAASutC,GAAcD,EAAO/jE,QACvB,MAAK9R,EAAZ,CAAmBuoC,SAAUA,IAEjC,KAAK92B,GACD,OAAO,MAAKzR,EAAZ,CAAmBuoC,SAAUvoC,EAAMuoC,SAASxxB,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE9E,KAAKsa,GACD,OAAO,MAAK5R,EAAZ,CAAmBuoC,SAAU,KAEjC,KAAK72B,GACD,OAAO,MAAK1R,EAAZ,CAAmB6pC,gBAAiBgsC,EAAO/jE,UAE/C,KAAKH,GACD,OAAO,MAAK3R,EAAZ,CAAmB6pC,gBAAiB,OAExC,KAAK/vC,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,6jBCpCnB,IAAM01E,GAAsC,CACxC5nE,kBAAmBwkC,GAAkC9jC,KACrDykC,wBAAyB,KACzBF,iBAAkB,IAsCPglC,ICxCHC,GDwCGD,GAnCf,WAA2H,IAA1F/3E,EAAyF,uDAA1D01E,GAAcG,EAA4C,uCACtH,OAAQA,EAAOp+E,MACX,KAAK8yC,GAGL,KAAKN,GACD,OAAO,MAAKjqC,EAAZ,CAAmB+yC,iBAAiB,GAAD,oBAAM/yC,EAAM+yC,kBAAZ,CAA8B8iC,EAAOrrC,qBAE5E,KAAKN,GACD,IAAM4rC,EAAqB91E,EAAM+yC,iBAAiBgjC,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOrrC,iBAAiBlzC,MAChGy7C,EAAuC/yC,EAAM+yC,iBAEjD,OADAA,EAAiB+iC,GAAcD,EAAOrrC,iBAC/B,MAAKxqC,EAAZ,CAAmB+yC,iBAAkBA,IAEzC,KAAK5I,GACD,OAAO,MAAKnqC,EAAZ,CAAmB+yC,iBAAkB/yC,EAAM+yC,iBAAiBh8B,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE9F,KAAKgzC,GACD,OAAO,MAAKtqC,EAAZ,CAAmB+yC,iBAAkB,KAEzC,KAAK3I,GACD,OAAO,MAAKpqC,EAAZ,CAAmBizC,wBAAyB4iC,EAAOrrC,mBAEvD,KAAKH,GACD,OAAO,MAAKrqC,EAAZ,CAAmBizC,wBAAyB,OAEhD,KAAKn5C,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCnCPg4E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCDZ,IAAMtC,GAAuC,CACzC5nE,kBAAmBkqE,GAAmCxpE,KACtDypE,yBAA0B,KAC1B9kC,kBAAmB,IAsCR+kC,ICxCHC,GDwCGD,GAnCf,WAA8H,IAA5Fl4E,EAA2F,uDAA3D01E,GAAcG,EAA6C,uCACzH,OAAQA,EAAOp+E,MACX,KAAK0zC,GAGL,KAAKN,GACD,OAAO,MAAK7qC,EAAZ,CAAmBmzC,kBAAkB,GAAD,oBAAMnzC,EAAMmzC,mBAAZ,CAA+B0iC,EAAOtiC,sBAE9E,KAAKzI,GACD,IAAMgrC,EAAqB91E,EAAMmzC,kBAAkB4iC,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOtiC,kBAAkBj8C,MAClG67C,EAAyCnzC,EAAMmzC,kBAEnD,OADAA,EAAkB2iC,GAAcD,EAAOtiC,kBAChC,MAAKvzC,EAAZ,CAAmBmzC,kBAAmBA,IAE1C,KAAKpI,GACD,OAAO,MAAK/qC,EAAZ,CAAmBmzC,kBAAmBnzC,EAAMmzC,kBAAkBp8B,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEhG,KAAK4zC,GACD,OAAO,MAAKlrC,EAAZ,CAAmBmzC,kBAAmB,KAE1C,KAAKnI,GACD,OAAO,MAAKhrC,EAAZ,CAAmBi4E,yBAA0BpC,EAAOtiC,oBAExD,KAAKtI,GACD,OAAO,MAAKjrC,EAAZ,CAAmBi4E,yBAA0B,OAEjD,KAAKn+E,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCnCPm4E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCDZ,IAAMzC,GAAuC,CACzC5nE,kBAAmBqqE,GAAmC3pE,KACtD4pE,yBAA0B,KAC1B5pC,kBAAmB,IAsCR6pC,ICxCHC,GDwCGD,GAnCf,WAA8H,IAA5Fr4E,EAA2F,uDAA3D01E,GAAcG,EAA6C,uCACzH,OAAQA,EAAOp+E,MACX,KAAK0zC,GAGL,KAAKN,GACD,OAAO,MAAK7qC,EAAZ,CAAmBwuC,kBAAkB,GAAD,oBAAMxuC,EAAMwuC,mBAAZ,CAA+BqnC,EAAOhoC,uBAE9E,KAAK/C,GACD,IAAMgrC,EAAqB91E,EAAMwuC,kBAAkBunC,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOhoC,mBAAmBv2C,MACnGk3C,EAAyCxuC,EAAMwuC,kBAEnD,OADAA,EAAkBsnC,GAAcD,EAAOhoC,mBAChC,MAAK7tC,EAAZ,CAAmBwuC,kBAAmBA,IAE1C,KAAKzD,GACD,OAAO,MAAK/qC,EAAZ,CAAmBwuC,kBAAmBxuC,EAAMwuC,kBAAkBz3B,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEhG,KAAK4zC,GACD,OAAO,MAAKlrC,EAAZ,CAAmBwuC,kBAAmB,KAE1C,KAAKxD,GACD,OAAO,MAAKhrC,EAAZ,CAAmBo4E,yBAA0BvC,EAAOhoC,qBAExD,KAAK5C,GACD,OAAO,MAAKjrC,EAAZ,CAAmBo4E,yBAA0B,OAEjD,KAAKt+E,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCnCPs4E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCDZ,IAAM5C,GAA2C,CAC7C5nE,kBAAmBwqE,GAAuC9pE,KAC1D+pE,6BAA8B,KAC9BnlC,sBAAuB,IAsCZolC,IC9BHC,GD8BGD,GAnCf,WAA0I,IAApGx4E,EAAmG,uDAA/D01E,GAAcG,EAAiD,uCACrI,OAAQA,EAAOp+E,MACX,KAAK6sC,GAGL,KAAKN,GACD,OAAO,MAAKhkC,EAAZ,CAAmBozC,sBAAsB,GAAD,oBAAMpzC,EAAMozC,uBAAZ,CAAmCyiC,EAAOtxC,2BAEtF,KAAKN,GACD,IAAM6xC,EAAqB91E,EAAMozC,sBAAsB2iC,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOtxC,uBAAuBjtC,MAC3G87C,EAAiDpzC,EAAMozC,sBAE3D,OADAA,EAAsB0iC,GAAcD,EAAOtxC,uBACpC,MAAKvkC,EAAZ,CAAmBozC,sBAAuBA,IAE9C,KAAKlP,GACD,OAAO,MAAKlkC,EAAZ,CAAmBozC,sBAAuBpzC,EAAMozC,sBAAsBr8B,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAExG,KAAK+sC,GACD,OAAO,MAAKrkC,EAAZ,CAAmBozC,sBAAuB,KAE9C,KAAKjP,GACD,OAAO,MAAKnkC,EAAZ,CAAmBu4E,6BAA8B1C,EAAOtxC,yBAE5D,KAAKH,GACD,OAAO,MAAKpkC,EAAZ,CAAmBu4E,6BAA8B,OAErD,KAAKz+E,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCzBPy4E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCRZ,IAAM/C,GAAmC,CACrC5nE,kBAAmB2qE,GAA+BjqE,KAClD84C,qBAAsB,KACtB9mB,OAAQ,GACR4lB,aAAc,GACdsyB,aAAc,IA4EHC,OAzEf,WAAiH,IAApF34E,EAAmF,uDAAvD01E,GAAcG,EAAyC,uCAC5G,OAAQA,EAAOp+E,MACX,KAAKsnC,GACD,OAAO,MAAK/+B,EAAZ,CAAmBwgC,OAAM,uBAAOxgC,EAAMwgC,QAAb,CAAqBq1C,EAAOl2C,kBAEzD,KAAKb,GACD,OAAO,MAAK9+B,EAAZ,CAAmBwgC,OAAQ,KAE/B,KAAKxB,GACD,OAAO,MAAKh/B,EAAZ,CAAmBwgC,OAAO,GAAD,oBAAMxgC,EAAMwgC,QAAZ,CAAoBq1C,EAAOl2C,kBAExD,KAAKV,GACD,IAAM62C,EAAqB91E,EAAMwgC,OAAOu1C,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOl2C,cAAcroC,MACnFshF,EAA2B54E,EAAMwgC,OAErC,OADAo4C,EAAQ9C,GAAcD,EAAOl2C,cACtB,MAAK3/B,EAAZ,CAAmBwgC,OAAQo4C,IAE/B,KAAK15C,GACD,OAAO,MAAKl/B,EAAZ,CAAmBwgC,OAAQxgC,EAAMwgC,OAAOzpB,QAAO,SAAAzH,GAAC,OAAEA,EAAEhY,KAAOu+E,EAAOl2C,cAAcroC,QAGpF,KAAK8nC,GACD,OAAO,MAAKp/B,EAAZ,CAAmBomD,aAAY,uBAAOpmD,EAAMomD,cAAb,CAA2ByvB,EAAOl2C,kBAErE,KAAKR,GACD,OAAO,MAAKn/B,EAAZ,CAAmBomD,aAAc,KAErC,KAAK/mB,GACD,OAAO,MAAKr/B,EAAZ,CAAmBomD,aAAa,GAAD,oBAAMpmD,EAAMomD,cAAZ,CAA0ByvB,EAAOl2C,kBAEpE,KAAKL,GACD,IAAMw2C,EAAqB91E,EAAMomD,aAAa2vB,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOl2C,cAAcroC,MACzFuhF,EAAiC74E,EAAMomD,aAE3C,OADAyyB,EAAc/C,GAAcD,EAAOl2C,cAC5B,MAAK3/B,EAAZ,CAAmBomD,aAAcyyB,IAErC,KAAKt5C,GACD,OAAO,MAAKv/B,EAAZ,CAAmBomD,aAAcpmD,EAAMomD,aAAarvC,QAAO,SAAAzH,GAAC,OAAEA,EAAEhY,KAAOu+E,EAAOl2C,cAAcroC,QAGhG,KAAKonC,GACD,OAAO,MAAK1+B,EAAZ,CAAmB04E,aAAY,uBAAO14E,EAAM04E,cAAb,CAA2B7C,EAAOl2C,kBAErE,KAAKlB,GACD,OAAO,MAAKz+B,EAAZ,CAAmB04E,aAAc,KAErC,KAAK/5C,GACD,OAAO,MAAK3+B,EAAZ,CAAmB04E,aAAa,GAAD,oBAAM14E,EAAM04E,cAAZ,CAA0B7C,EAAOl2C,kBAEpE,KAAKd,GACD,IAAMi3C,EAAqB91E,EAAM04E,aAAa3C,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOl2C,cAAcroC,MACzFwhF,EAAiC94E,EAAM04E,aAE3C,OADAI,EAAchD,GAAcD,EAAOl2C,cAC5B,MAAK3/B,EAAZ,CAAmB04E,aAAcI,IAErC,KAAKl6C,GACD,OAAO,MAAK5+B,EAAZ,CAAmB04E,aAAc14E,EAAM04E,aAAa3hE,QAAO,SAAAzH,GAAC,OAAEA,EAAEhY,KAAOu+E,EAAOl2C,cAAcroC,QAGhG,KAAKyC,GACD,OAAO,MAAKiG,EAAZ,CAAmBsnD,qBAAsBuuB,EAAOl2C,gBAEpD,KAAK3lC,GACD,OAAO,MAAKgG,EAAZ,CAAmBsnD,qBAAsB,OAE7C,KAAKxtD,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,6jBC7EnB,IAAM01E,GAAmC,CACrC5nE,kBAAmB88D,GAA+Bp8D,KAClD28D,qBAAsB,KACtB3qC,OAAQ,GACR4lB,aAAc,GACdsyB,aAAc,IA4EHK,OAzEf,WAAiH,IAApF/4E,EAAmF,uDAAvD01E,GAAcG,EAAyC,uCAC5G,OAAQA,EAAOp+E,MACX,KAAKksD,GACD,OAAO,MAAK3jD,EAAZ,CAAmBwgC,OAAM,uBAAOxgC,EAAMwgC,QAAb,CAAqBq1C,EAAOvxB,kBAEzD,KAAKZ,GACD,OAAO,MAAK1jD,EAAZ,CAAmBwgC,OAAQ,KAE/B,KAAK6iB,GACD,OAAO,MAAKrjD,EAAZ,CAAmBwgC,OAAO,GAAD,oBAAMxgC,EAAMwgC,QAAZ,CAAoBq1C,EAAOvxB,kBAExD,KAAKhB,GACD,IAAMwyB,EAAqB91E,EAAMwgC,OAAOu1C,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOvxB,cAAchtD,MACnFshF,EAA2B54E,EAAMwgC,OAErC,OADAo4C,EAAQ9C,GAAcD,EAAOvxB,cACtB,MAAKtkD,EAAZ,CAAmBwgC,OAAQo4C,IAE/B,KAAKr1B,GACD,OAAO,MAAKvjD,EAAZ,CAAmBwgC,OAAQxgC,EAAMwgC,OAAOzpB,QAAO,SAAAzH,GAAC,OAAEA,EAAEhY,KAAOu+E,EAAOvxB,cAAchtD,QAGpF,KAAK0sD,GACD,OAAO,MAAKhkD,EAAZ,CAAmBomD,aAAY,uBAAOpmD,EAAMomD,cAAb,CAA2ByvB,EAAOvxB,kBAErE,KAAKP,GACD,OAAO,MAAK/jD,EAAZ,CAAmBomD,aAAc,KAErC,KAAKxC,GACD,OAAO,MAAK5jD,EAAZ,CAAmBomD,aAAa,GAAD,oBAAMpmD,EAAMomD,cAAZ,CAA0ByvB,EAAOvxB,kBAEpE,KAAKT,GACD,IAAMiyB,EAAqB91E,EAAMomD,aAAa2vB,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOvxB,cAAchtD,MACzFuhF,EAAiC74E,EAAMomD,aAE3C,OADAyyB,EAAc/C,GAAcD,EAAOvxB,cAC5B,MAAKtkD,EAAZ,CAAmBomD,aAAcyyB,IAErC,KAAK/0B,GACD,OAAO,MAAK9jD,EAAZ,CAAmBomD,aAAcpmD,EAAMomD,aAAarvC,QAAO,SAAAzH,GAAC,OAAEA,EAAEhY,KAAOu+E,EAAOvxB,cAAchtD,QAGhG,KAAK+sD,GACD,OAAO,MAAKrkD,EAAZ,CAAmB04E,aAAY,uBAAO14E,EAAM04E,cAAb,CAA2B7C,EAAOvxB,kBAErE,KAAKF,GACD,OAAO,MAAKpkD,EAAZ,CAAmB04E,aAAc,KAErC,KAAKz0B,GACD,OAAO,MAAKjkD,EAAZ,CAAmB04E,aAAa,GAAD,oBAAM14E,EAAM04E,cAAZ,CAA0B7C,EAAOvxB,kBAEpE,KAAKJ,GACD,IAAM4xB,EAAqB91E,EAAM04E,aAAa3C,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOvxB,cAAchtD,MACzFwhF,EAAiC94E,EAAM04E,aAE3C,OADAI,EAAchD,GAAcD,EAAOvxB,cAC5B,MAAKtkD,EAAZ,CAAmB04E,aAAcI,IAErC,KAAK30B,GACD,OAAO,MAAKnkD,EAAZ,CAAmB04E,aAAc14E,EAAM04E,aAAa3hE,QAAO,SAAAzH,GAAC,OAAEA,EAAEhY,KAAOu+E,EAAOvxB,cAAchtD,QAGhG,KAAKksD,GACD,OAAO,MAAKxjD,EAAZ,CAAmBmrE,qBAAsB0K,EAAOvxB,gBAEpD,KAAKb,GACD,OAAO,MAAKzjD,EAAZ,CAAmBmrE,qBAAsB,OAE7C,KAAKrxE,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,6jBChFnB,IAAM01E,GAA8B,CAChC5nE,kBAAmB2f,GAA0Bjf,KAC7C4mB,gBAAiB,KACjBrG,UAAW,IAsCAiqD,OAnCf,WAAoG,IAA1Eh5E,EAAyE,uDAAlD01E,GAAcG,EAAoC,uCAC/F,OAAQA,EAAOp+E,MACX,KAAK82B,GAGL,KAAKN,GACD,OAAO,MAAKjuB,EAAZ,CAAmB+uB,UAAU,GAAD,oBAAM/uB,EAAM+uB,WAAZ,CAAuB8mD,EAAOrnD,YAE9D,KAAKN,GACD,IAAM4nD,EAAqB91E,EAAM+uB,UAAUgnD,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOrnD,QAAQl3B,MAChFy3B,EAAwB/uB,EAAM+uB,UAElC,OADAA,EAAU+mD,GAAcD,EAAOrnD,QACxB,MAAKxuB,EAAZ,CAAmB+uB,UAAWA,IAElC,KAAKZ,GACD,OAAO,MAAKnuB,EAAZ,CAAmB+uB,UAAW/uB,EAAM+uB,UAAUhY,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEhF,KAAKg3B,GACD,OAAO,MAAKtuB,EAAZ,CAAmB+uB,UAAW,KAElC,KAAKX,GACD,OAAO,MAAKpuB,EAAZ,CAAmBo1B,gBAAiBygD,EAAOrnD,UAE/C,KAAKH,GACD,OAAO,MAAKruB,EAAZ,CAAmBo1B,gBAAiB,OAExC,KAAKt7B,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,6jBCzBnB,IAAM01E,GAAoD,CACtD5nE,kBAAmBinC,GAAgDvmC,KACnEusC,sCAAuC,KACvCxjC,UAAW,GACXF,iBAAkB,GAClBmkC,aAAc,IA0FHy9B,ICpGHC,GDoGGD,GAvFf,WAAuK,IAAtHj5E,EAAqH,uDAAxE01E,GAAcG,EAA0D,uCAClK,OAAQA,EAAOp+E,MACX,KAAKsjB,GAGL,KAAKC,GACD,OAAO,MAAKhb,EAAZ,CAAmBuX,UAAS,uBAAOvX,EAAMuX,WAAb,CAAwBs+D,EAAOx5D,6CAE/D,KAAKpB,GACD,IAAM66D,EAAqB91E,EAAMuX,UAAUw+D,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOx5D,yCAAyC/kB,MACjHigB,EAA8CvX,EAAMuX,UAExD,OADAA,EAAUu+D,GAAcD,EAAOx5D,yCACxB,MAAKrc,EAAZ,CAAmBuX,UAAWA,IAElC,KAAK2D,GACD,OAAO,MAAKlb,EAAZ,CAAmBuX,UAAWvX,EAAMuX,UAAUR,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEhF,KAAKwjB,GACD,OAAO,MAAK9a,EAAZ,CAAmBuX,UAAW,KAElC,KAAK4D,GACD,OAAO,MAAKnb,EAAZ,CAAmB+6C,sCAAuC86B,EAAOx5D,2CAErE,KAAKjB,GACD,OAAO,MAAKpb,EAAZ,CAAmB+6C,sCAAuC,OAG9D,KAAKz/B,GAGL,KAAKC,GACD,OAAO,MAAKvb,EAAZ,CAAmBw7C,aAAY,uBAAOx7C,EAAMw7C,cAAb,CAA2Bq6B,EAAOl5D,iDAErE,KAAKnB,GACD,IAAMs6D,EAAqB91E,EAAMw7C,aAAau6B,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOl5D,6CAA6CrlB,MACxH6hF,EAAkDn5E,EAAMw7C,aAE5D,OADA29B,EAAcrD,GAAcD,EAAOl5D,6CAC5B,MAAK3c,EAAZ,CAAmBw7C,aAAc29B,IAErC,KAAK19D,GACD,OAAO,MAAKzb,EAAZ,CAAmBw7C,aAAcx7C,EAAMw7C,aAAazkC,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEtF,KAAK+jB,GACD,OAAO,MAAKrb,EAAZ,CAAmBw7C,aAAc,KAErC,KAAK9/B,GACD,OAAO,MAAK1b,EAAZ,CAAmB+6C,sCAAuC86B,EAAOl5D,+CAErE,KAAKhB,GACD,OAAO,MAAK3b,EAAZ,CAAmB+6C,sCAAuC,OAI9D,KAAKl/B,GAGL,KAAKC,GACD,OAAO,MAAK9b,EAAZ,CAAmBqX,iBAAgB,uBAAOrX,EAAMqX,kBAAb,CAA+Bw+D,EAAO74D,qDAE7E,KAAKjB,GACD,IAAM+5D,EAAqB91E,EAAMqX,iBAAiB0+D,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO74D,iDAAiD1lB,MAChI+f,EAAqDrX,EAAMqX,iBAE/D,OADAA,EAAiBy+D,GAAcD,EAAO74D,iDAC/B,MAAKhd,EAAZ,CAAmBqX,iBAAkBA,IAEzC,KAAK2E,GACD,OAAO,MAAKhc,EAAZ,CAAmBqX,iBAAkBrX,EAAMqX,iBAAiBN,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE9F,KAAKskB,GACD,OAAO,MAAK5b,EAAZ,CAAmBqX,iBAAkB,KAEzC,KAAK4E,GACD,OAAO,MAAKjc,EAAZ,CAAmB+6C,sCAAuC86B,EAAO74D,mDAErE,KAAKd,GACD,OAAO,MAAKlc,EAAZ,CAAmB+6C,sCAAuC,OAG9D,KAAKjhD,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBC/FPk5E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCNZ,IAAMxD,GAAuC,CACzC5nE,kBAAmBorE,GAAmC1qE,KACtD4qE,yBAA0B,KAC1BtgD,mBAAoB,IAsCTugD,IC3CHC,GD2CGD,GAnCf,WAA+H,IAA5Fr5E,EAA2F,uDAA3D01E,GAAcG,EAA6C,uCAC1H,OAAQA,EAAOp+E,MACX,KAAKy/B,GAGL,KAAKN,GACD,OAAO,MAAK52B,EAAZ,CAAmB84B,mBAAmB,GAAD,oBAAM94B,EAAM84B,oBAAZ,CAAgC+8C,EAAOx+C,sBAEhF,KAAKR,GACD,IAAMi/C,EAAqB91E,EAAM84B,mBAAmBi9C,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOx+C,kBAAkB//B,MACnGwhC,EAA0C94B,EAAM84B,mBAEpD,OADAA,EAAmBg9C,GAAcD,EAAOx+C,kBACjC,MAAKr3B,EAAZ,CAAmB84B,mBAAoBA,IAE3C,KAAKhC,GACD,OAAO,MAAK92B,EAAZ,CAAmB84B,mBAAoB94B,EAAM84B,mBAAmB/hB,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAElG,KAAK2/B,GACD,OAAO,MAAKj3B,EAAZ,CAAmB84B,mBAAoB,KAE3C,KAAK/B,GACD,OAAO,MAAK/2B,EAAZ,CAAmBo5E,yBAA0BvD,EAAOx+C,oBAExD,KAAKL,GACD,OAAO,MAAKh3B,EAAZ,CAAmBo5E,yBAA0B,OAEjD,KAAKt/E,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCtCPs5E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCEZ,IAAM5D,GAAmC,CACrC5nE,kBAAmBwrE,GAA+B9qE,KAClD+qE,qBAAsB,KACtB9jD,cAAe,IAqCJ+jD,IC5BHC,GD4BGD,GAlCf,WAAmH,IAApFx5E,EAAmF,uDAAvD01E,GAAcG,EAAyC,uCAC9G,OAAQA,EAAOp+E,MACX,KAAKuX,GAGL,KAAKN,GACD,OAAO,MAAK1O,EAAZ,CAAmBy1B,cAAc,GAAD,oBAAMz1B,EAAMy1B,eAAZ,CAA2BogD,EAAOr+C,kBAEtE,KAAK7oB,GACD,IAAI0mB,EAAkCr1B,EAAMy1B,cAE5C,OADAJ,EAAe,GAAKwgD,EAAOr+C,cACpB,MAAKx3B,EAAZ,CAAmBy1B,cAAeJ,IAEtC,KAAKzmB,GAGL,KAAKG,GACD,OAAO,MAAK/O,EAAZ,CAAmBy1B,cAAe,KAEtC,KAAK5mB,GACD,OAAO,MAAK7O,EAAZ,CAAmBu5E,qBAAsB1D,EAAOr+C,gBAEpD,KAAK1oB,GACD,OAAO,MAAK9O,EAAZ,CAAmBu5E,qBAAsB,OAE7C,KAAKz/E,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCvBPy5E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCZZ,IAAM/D,GAAoC,CACtC5nE,kBAAmB2rE,GAAgCjrE,KACnDkrE,sBAAuB,KACvBngC,6BAA8B,GAC9BI,qBAAsB,IAgEXggC,ICrEHC,GDqEGD,GA7Df,WAAqH,IAAtF35E,EAAqF,uDAAxD01E,GAAcG,EAA0C,uCAChH,OAAQA,EAAOp+E,MACX,KAAKmhD,GAGL,KAAKN,GACD,OAAO,MAAKt4C,EAAZ,CAAmBu5C,6BAA6B,GAAD,oBAAMv5C,EAAMu5C,8BAAZ,CAA0Cs8B,EAAO5kE,WAEpG,KAAKsnC,GACD,IAAMu9B,EAAqB91E,EAAMu5C,6BAA6Bw8B,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO5kE,OAAO3Z,MAClGiiD,EAAiDv5C,EAAMu5C,6BAE3D,OADAA,EAA6Bu8B,GAAcD,EAAO5kE,OAC3C,MAAKjR,EAAZ,CAAmBu5C,6BAA8BA,IAErD,KAAKf,GACD,OAAO,MAAKx4C,EAAZ,CAAmBu5C,6BAA8Bv5C,EAAMu5C,6BAA6BxiC,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEtH,KAAKqhD,GACD,OAAO,MAAK34C,EAAZ,CAAmBu5C,6BAA8B,KAErD,KAAKd,GACD,OAAO,MAAKz4C,EAAZ,CAAmB05E,sBAAuB7D,EAAO5kE,SAErD,KAAKynC,GACD,OAAO,MAAK14C,EAAZ,CAAmB05E,sBAAuB,OAG9C,KAAKvgC,GAGL,KAAKN,GACD,OAAO,MAAK74C,EAAZ,CAAmB25C,qBAAqB,GAAD,oBAAM35C,EAAM25C,sBAAZ,CAAkCk8B,EAAO5kE,WAEpF,KAAK6nC,GACD,IAAMg9B,EAAqB91E,EAAM25C,qBAAqBo8B,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO5kE,OAAO3Z,MAC1FqiD,EAAyC35C,EAAM25C,qBAEnD,OADAA,EAAqBm8B,GAAcD,EAAO5kE,OACnC,MAAKjR,EAAZ,CAAmB25C,qBAAsBA,IAE7C,KAAKZ,GACD,OAAO,MAAK/4C,EAAZ,CAAmB25C,qBAAsB35C,EAAM25C,qBAAqB5iC,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEtG,KAAK4hD,GACD,OAAO,MAAKl5C,EAAZ,CAAmB25C,qBAAsB,KAE7C,KAAKX,GACD,OAAO,MAAKh5C,EAAZ,CAAmB05E,sBAAuB7D,EAAO5kE,SAErD,KAAKgoC,GACD,OAAO,MAAKj5C,EAAZ,CAAmB05E,sBAAuB,OAG9C,KAAK5/E,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBChEP45E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCCZ,IAAMlE,GAA0C,CAC5C5nE,kBAAmB8rE,GAAsCprE,KACzDqrE,4BAA6B,KAC7BxhC,qBAAsB,IAqCXyhC,OAlCf,WAAyI,IAAlG95E,EAAiG,uDAA9D01E,GAAcG,EAAgD,uCACpI,OAAQA,EAAOp+E,MACX,KAAKogD,GAGL,KAAKN,GACD,OAAO,MAAKv3C,EAAZ,CAAmBq4C,qBAAqB,GAAD,oBAAMr4C,EAAMq4C,sBAAZ,CAAkCw9B,EAAO99B,0BAEpF,KAAKP,GACD,IAAIY,EAAiDp4C,EAAMq4C,qBAE3D,OADAD,EAAuB,GAAKy9B,EAAO99B,sBAC5B,MAAK/3C,EAAZ,CAAmBq4C,qBAAsBD,IAE7C,KAAKX,GAGL,KAAKG,GACD,OAAO,MAAK53C,EAAZ,CAAmBq4C,qBAAsB,KAE7C,KAAKX,GACD,OAAO,MAAK13C,EAAZ,CAAmB65E,4BAA6BhE,EAAO99B,wBAE3D,KAAKJ,GACD,OAAO,MAAK33C,EAAZ,CAAmB65E,4BAA6B,OAEpD,KAAK//E,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,6jBCnCnB,IAAM01E,GAAmC,CACrC5nE,kBAAmButC,GAA+B7sC,KAClDurE,qBAAsB,KACtB38B,YAAa,GACbE,WAAY,IAgED08B,IC1DHC,GD0DGD,GA7Df,WAAkH,IAApFh6E,EAAmF,uDAAvD01E,GAAcG,EAAyC,uCAC7G,OAAQA,EAAOp+E,MACX,KAAKwkD,GAGL,KAAKN,GACD,OAAO,MAAK37C,EAAZ,CAAmBo9C,YAAY,GAAD,oBAAMp9C,EAAMo9C,aAAZ,CAAyBy4B,EAAOn5B,kBAElE,KAAKd,GACD,IAAMk6B,EAAqB91E,EAAMo9C,YAAY24B,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOn5B,cAAcplD,MACxF8lD,EAA+Bp9C,EAAMo9C,YAEzC,OADAA,EAAY04B,GAAcD,EAAOn5B,cAC1B,MAAK18C,EAAZ,CAAmBo9C,YAAaA,IAEpC,KAAKvB,GACD,OAAO,MAAK77C,EAAZ,CAAmBo9C,YAAap9C,EAAMo9C,YAAYrmC,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEpF,KAAK0kD,GACD,OAAO,MAAKh8C,EAAZ,CAAmBo9C,YAAa,KAEpC,KAAKtB,GACD,OAAO,MAAK97C,EAAZ,CAAmB+5E,qBAAsBlE,EAAOn5B,gBAEpD,KAAKX,GACD,OAAO,MAAK/7C,EAAZ,CAAmB+5E,qBAAsB,OAG7C,KAAKv9B,GAGL,KAAKN,GACD,OAAO,MAAKl8C,EAAZ,CAAmBs9C,WAAW,GAAD,oBAAMt9C,EAAMs9C,YAAZ,CAAwBu4B,EAAOn5B,kBAEhE,KAAKP,GACD,IAAM25B,EAAqB91E,EAAMs9C,WAAWy4B,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOn5B,cAAcplD,MACvFgmD,EAA8Bt9C,EAAMs9C,WAExC,OADAA,EAAWw4B,GAAcD,EAAOn5B,cACzB,MAAK18C,EAAZ,CAAmBs9C,WAAYA,IAEnC,KAAKlB,GACD,OAAO,MAAKp8C,EAAZ,CAAmBs9C,WAAYt9C,EAAMs9C,WAAWvmC,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAElF,KAAKilD,GACD,OAAO,MAAKv8C,EAAZ,CAAmBs9C,WAAY,KAEnC,KAAKjB,GACD,OAAO,MAAKr8C,EAAZ,CAAmB+5E,qBAAsBlE,EAAOn5B,gBAEpD,KAAKJ,GACD,OAAO,MAAKt8C,EAAZ,CAAmB+5E,qBAAsB,OAG7C,KAAKjgF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCrDPi6E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCVZ,IAAMvE,GAAqC,CACvC5nE,kBAAmBmsE,GAAiCzrE,KACpD0rE,uBAAwB,KACxB15B,gBAAiB,GACjBK,qBAAsB,GACtBD,YAAa,GACbH,iCAAkC,IAuHvB05B,OApHf,WAAwH,IAAxFn6E,EAAuF,uDAAzD01E,GAAcG,EAA2C,uCACnH,OAAQA,EAAOp+E,MACX,KAAK8mD,GAGL,KAAKN,GACD,OAAO,MAAKj+C,EAAZ,CAAmBwgD,gBAAgB,GAAD,oBAAMxgD,EAAMwgD,iBAAZ,CAA6Bq1B,EAAO/jE,YAE1E,KAAKosC,GACD,IAAM43B,EAAqB91E,EAAMwgD,gBAAgBu1B,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO/jE,QAAQxa,MACtFkpD,EAAqCxgD,EAAMwgD,gBAE/C,OADAA,EAAgBs1B,GAAcD,EAAO/jE,QAC9B,MAAK9R,EAAZ,CAAmBwgD,gBAAiBA,IAExC,KAAKrC,GACD,OAAO,MAAKn+C,EAAZ,CAAmBwgD,gBAAiBxgD,EAAMwgD,gBAAgBzpC,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE5F,KAAKgnD,GACD,OAAO,MAAKt+C,EAAZ,CAAmBwgD,gBAAiB,KAExC,KAAKpC,GACD,OAAO,MAAKp+C,EAAZ,CAAmBk6E,uBAAwBrE,EAAO/jE,UAEtD,KAAKusC,GACD,OAAO,MAAKr+C,EAAZ,CAAmBk6E,uBAAwB,OAI/C,KAAK76B,GAGL,KAAKN,GACD,OAAO,MAAK/+C,EAAZ,CAAmB4gD,YAAY,GAAD,oBAAM5gD,EAAM4gD,aAAZ,CAAyBi1B,EAAO/jE,YAElE,KAAKktC,GACD,IAAM82B,EAAqB91E,EAAM4gD,YAAYm1B,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO/jE,QAAQxa,MAClFspD,EAAiC5gD,EAAM4gD,YAE3C,OADAA,EAAYk1B,GAAcD,EAAO/jE,QAC1B,MAAK9R,EAAZ,CAAmB4gD,YAAaA,IAEpC,KAAK3B,GACD,OAAO,MAAKj/C,EAAZ,CAAmB4gD,YAAa5gD,EAAM4gD,YAAY7pC,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEpF,KAAK8nD,GACD,OAAO,MAAKp/C,EAAZ,CAAmB4gD,YAAa,KAEpC,KAAK1B,GACD,OAAO,MAAKl/C,EAAZ,CAAmBk6E,uBAAwBrE,EAAO/jE,UAEtD,KAAKqtC,GACD,OAAO,MAAKn/C,EAAZ,CAAmBk6E,uBAAwB,OAK/C,KAAKt6B,GAGL,KAAKN,GACD,OAAO,MAAKt/C,EAAZ,CAAmB6gD,qBAAqB,GAAD,oBAAM7gD,EAAM6gD,sBAAZ,CAAkCg1B,EAAO/jE,YAEpF,KAAKytC,GACD,IAAMu2B,EAAqB91E,EAAM6gD,qBAAqBk1B,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO/jE,QAAQxa,MAC3FupD,EAA0C7gD,EAAM6gD,qBAEpD,OADAA,EAAqBi1B,GAAcD,EAAO/jE,QACnC,MAAK9R,EAAZ,CAAmB6gD,qBAAsBA,IAE7C,KAAKrB,GACD,OAAO,MAAKx/C,EAAZ,CAAmB6gD,qBAAsB7gD,EAAM6gD,qBAAqB9pC,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEtG,KAAKqoD,GACD,OAAO,MAAK3/C,EAAZ,CAAmB6gD,qBAAsB,KAE7C,KAAKpB,GACD,OAAO,MAAKz/C,EAAZ,CAAmBk6E,uBAAwBrE,EAAO/jE,UAEtD,KAAK4tC,GACD,OAAO,MAAK1/C,EAAZ,CAAmBk6E,uBAAwB,OAK/C,KAAKp7B,GAGL,KAAKN,GACD,OAAO,MAAKx+C,EAAZ,CAAmBygD,iCAAiC,GAAD,oBAAMzgD,EAAMygD,kCAAZ,CAA8Co1B,EAAO/jE,YAE5G,KAAK2sC,GACD,IAAMq3B,EAAqB91E,EAAMygD,iCAAiCs1B,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO/jE,QAAQxa,MACvGmpD,EAAsDzgD,EAAMygD,iCAEhE,OADAA,EAAiCq1B,GAAcD,EAAO/jE,QAC/C,MAAK9R,EAAZ,CAAmBygD,iCAAkCA,IAEzD,KAAK/B,GACD,OAAO,MAAK1+C,EAAZ,CAAmBygD,iCAAkCzgD,EAAMygD,iCAAiC1pC,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE9H,KAAKunD,GACD,OAAO,MAAK7+C,EAAZ,CAAmBygD,iCAAkC,KAEzD,KAAK9B,GACD,OAAO,MAAK3+C,EAAZ,CAAmBk6E,uBAAwBrE,EAAO/jE,UAEtD,KAAK8sC,GACD,OAAO,MAAK5+C,EAAZ,CAAmBk6E,uBAAwB,OAG/C,KAAKpgF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,6jBCxHnB,IAAM01E,GAAoC,CACtC5nE,kBAAmBwhB,GAAgC9gB,KACnD4jB,sBAAuB,KACvB9B,gBAAiB,IAsCN8pD,OAnCf,WAAsH,IAAtFp6E,EAAqF,uDAAxD01E,GAAcG,EAA0C,uCACjH,OAAQA,EAAOp+E,MACX,KAAKo4B,GAGL,KAAKN,GACD,OAAO,MAAKvvB,EAAZ,CAAmBswB,gBAAgB,GAAD,oBAAMtwB,EAAMswB,iBAAZ,CAA6BulD,EAAO9lD,mBAE1E,KAAKP,GACD,IAAMsmD,EAAqB91E,EAAMswB,gBAAgBylD,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO9lD,eAAez4B,MAC7Fg5B,EAAoCtwB,EAAMswB,gBAE9C,OADAA,EAAgBwlD,GAAcD,EAAO9lD,eAC9B,MAAK/vB,EAAZ,CAAmBswB,gBAAiBA,IAExC,KAAKb,GACD,OAAO,MAAKzvB,EAAZ,CAAmBswB,gBAAiBtwB,EAAMswB,gBAAgBvZ,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE5F,KAAKs4B,GACD,OAAO,MAAK5vB,EAAZ,CAAmBswB,gBAAiB,KAExC,KAAKZ,GACD,OAAO,MAAK1vB,EAAZ,CAAmBoyB,sBAAuByjD,EAAO9lD,iBAErD,KAAKJ,GACD,OAAO,MAAK3vB,EAAZ,CAAmBoyB,sBAAuB,OAE9C,KAAKt4B,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,6jBCpCnB,IAAM01E,GAA4C,CAC9C5nE,kBAAmBnC,GAAwC6C,KAC3DZ,8BAA+B,KAC/BzI,cAAe,IAsCJk1E,ICrCHC,GDqCGD,GAnCf,WAA6I,IAAtGr6E,EAAqG,uDAAhE01E,GAAcG,EAAkD,uCACxI,OAAQA,EAAOp+E,MACX,KAAK2U,GAGL,KAAKN,GACD,OAAO,MAAK9L,EAAZ,CAAmBmF,cAAc,GAAD,oBAAMnF,EAAMmF,eAAZ,CAA2B0wE,EAAOvpE,2BAEtE,KAAKP,GACD,IAAM+pE,EAAqB91E,EAAMmF,cAAc4wE,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOvpE,uBAAuBhV,MACnG6N,EAA0CnF,EAAMmF,cAEpD,OADAA,EAAc2wE,GAAcD,EAAOvpE,uBAC5B,MAAKtM,EAAZ,CAAmBmF,cAAeA,IAEtC,KAAK6G,GACD,OAAO,MAAKhM,EAAZ,CAAmBmF,cAAenF,EAAMmF,cAAc4R,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAExF,KAAK6U,GACD,OAAO,MAAKnM,EAAZ,CAAmBmF,cAAe,KAEtC,KAAK8G,GACD,OAAO,MAAKjM,EAAZ,CAAmB4N,8BAA+BioE,EAAOvpE,yBAE7D,KAAKJ,GACD,OAAO,MAAKlM,EAAZ,CAAmB4N,8BAA+B,OAEtD,KAAK9T,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBChCPs6E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCJZ,IAAM5E,GAA8B,CAChC5nE,kBAAmBwsE,GAA0B9rE,KAC7CogD,gBAAiB,KACjBt5B,SAAU,IAsCCilD,ICxCHC,GDwCGD,GAnCf,WAAmG,IAA1Ev6E,EAAyE,uDAAlD01E,GAAcG,EAAoC,uCAC9F,OAAQA,EAAOp+E,MACX,KAAK0gC,GAGL,KAAKN,GACD,OAAO,MAAK73B,EAAZ,CAAmBs1B,SAAS,GAAD,oBAAMt1B,EAAMs1B,UAAZ,CAAsBugD,EAAOp/C,YAE5D,KAAKqB,GACD,IAAMg+C,EAAqB91E,EAAMs1B,SAASygD,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOp/C,QAAQn/B,MAC/Eg+B,EAAuBt1B,EAAMs1B,SAEjC,OADAA,EAASwgD,GAAcD,EAAOp/C,QACvB,MAAKz2B,EAAZ,CAAmBs1B,SAAUA,IAEjC,KAAKyC,GACD,OAAO,MAAK/3B,EAAZ,CAAmBs1B,SAAUt1B,EAAMs1B,SAASve,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE9E,KAAK4gC,GACD,OAAO,MAAKl4B,EAAZ,CAAmBs1B,SAAU,KAEjC,KAAK0C,GACD,OAAO,MAAKh4B,EAAZ,CAAmB4uD,gBAAiBinB,EAAOp/C,UAE/C,KAAKwB,GACD,OAAO,MAAKj4B,EAAZ,CAAmB4uD,gBAAiB,OAExC,KAAK90D,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCnCPw6E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCDZ,IAAM9E,GAAmC,CACrC5nE,kBAAmB0sE,GAA+BhsE,KAClDisE,qBAAsB,KACtBtsB,cAAe,IAyCJusB,OAtCf,WAAkH,IAApF16E,EAAmF,uDAAvD01E,GAAcG,EAAyC,uCAC7G,OAAQA,EAAOp+E,MACX,KAAKo0D,GAGL,KAAKP,GACD,OAAO,MAAKtrD,EAAZ,CAAmBmuD,cAAc,GAAD,oBAAMnuD,EAAMmuD,eAAZ,CAA2B0nB,EAAO/pB,kBAEtE,KAAKP,GACD,IAAMuqB,EAAqB91E,EAAMmuD,cAAc4nB,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO/pB,cAAcx0D,MAC1F62D,EAAiCnuD,EAAMmuD,cAE3C,OADAA,EAAc2nB,GAAcD,EAAO/pB,cAC5B,MAAK9rD,EAAZ,CAAmBmuD,cAAeA,IAEtC,KAAK3C,GACD,OAAO,MAAKxrD,EAAZ,CAAmBmuD,cAAenuD,EAAMmuD,cAAcp3C,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAExF,KAAKm0D,GACD,OAAO,MAAKzrD,EAAZ,CAAmBmuD,cAAenuD,EAAMmuD,cAAcp3C,QAAO,SAAAi/D,GAAE,OAAIA,EAAG3yD,SAAWwyD,EAAOxyD,YAE5F,KAAKuoC,GACD,OAAO,MAAK5rD,EAAZ,CAAmBmuD,cAAe,KAEtC,KAAKzC,GACD,OAAO,MAAK1rD,EAAZ,CAAmBy6E,qBAAsB5E,EAAO/pB,gBAEpD,KAAKH,GACD,OAAO,MAAK3rD,EAAZ,CAAmBy6E,qBAAsB,OAE7C,KAAK3gF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,6jBCvCnB,IAAM01E,GAA+B,CACjC5nE,kBAAmBm8C,GAA2Bz7C,KAC9C08C,iBAAkB,KAClBF,UAAW,IAsCA2vB,ICrCHC,GDqCGD,GAnCf,WAAsG,IAA5E36E,EAA2E,uDAAnD01E,GAAcG,EAAqC,uCACjG,OAAQA,EAAOp+E,MACX,KAAKkyD,GAGL,KAAKN,GACD,OAAO,MAAKrpD,EAAZ,CAAmBgrD,UAAU,GAAD,oBAAMhrD,EAAMgrD,WAAZ,CAAuB6qB,EAAOhzB,aAE9D,KAAKyG,GACD,IAAMwsB,EAAqB91E,EAAMgrD,UAAU+qB,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOhzB,SAASvrD,MACjF0zD,EAAyBhrD,EAAMgrD,UAEnC,OADAA,EAAU8qB,GAAcD,EAAOhzB,SACxB,MAAK7iD,EAAZ,CAAmBgrD,UAAWA,IAElC,KAAKzB,GACD,OAAO,MAAKvpD,EAAZ,CAAmBgrD,UAAWhrD,EAAMgrD,UAAUj0C,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEhF,KAAKoyD,GACD,OAAO,MAAK1pD,EAAZ,CAAmBgrD,UAAW,KAElC,KAAKxB,GACD,OAAO,MAAKxpD,EAAZ,CAAmBkrD,iBAAkB2qB,EAAOhzB,WAEhD,KAAK4G,GACD,OAAO,MAAKzpD,EAAZ,CAAmBkrD,iBAAkB,OAEzC,KAAKpxD,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBChCP46E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCJZ,IAAMlF,GAAyC,CAC3C5nE,kBAAmB8sE,GAAqCpsE,KACxDqsE,2BAA4B,KAC5B/yB,qBAAsB,GACtB4H,iBAAkB,IAgEPorB,ICvEHC,GDuEGD,GA7Df,WAAoI,IAAhG96E,EAA+F,uDAA7D01E,GAAcG,EAA+C,uCAC/H,OAAQA,EAAOp+E,MACX,KAAK+5C,GAGL,KAAKN,GACD,OAAO,MAAKlxC,EAAZ,CAAmB8nD,qBAAqB,GAAD,oBAAM9nD,EAAM8nD,sBAAZ,CAAkC+tB,EAAOlvB,wBAEpF,KAAKxV,GACD,IAAM2kC,EAAqB91E,EAAM8nD,qBAAqBiuB,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOlvB,oBAAoBrvD,MACvGwwD,EAA8C9nD,EAAM8nD,qBAExD,OADAA,EAAqBguB,GAAcD,EAAOlvB,oBACnC,MAAK3mD,EAAZ,CAAmB8nD,qBAAsBA,IAE7C,KAAK1W,GACD,OAAO,MAAKpxC,EAAZ,CAAmB8nD,qBAAsB9nD,EAAM8nD,qBAAqB/wC,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEtG,KAAKi6C,GACD,OAAO,MAAKvxC,EAAZ,CAAmB8nD,qBAAsB,KAE7C,KAAKzW,GACD,OAAO,MAAKrxC,EAAZ,CAAmB66E,2BAA4BhF,EAAOlvB,sBAE1D,KAAKrV,GACD,OAAO,MAAKtxC,EAAZ,CAAmB66E,2BAA4B,OAGnD,KAAK9oC,GAGL,KAAKN,GACD,OAAO,MAAKzxC,EAAZ,CAAmB0vD,iBAAiB,GAAD,oBAAM1vD,EAAM0vD,kBAAZ,CAA8BmmB,EAAOlvB,wBAE5E,KAAKjV,GACD,IAAMokC,EAAqB91E,EAAM0vD,iBAAiBqmB,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOlvB,oBAAoBrvD,MACnGo4D,EAA0C1vD,EAAM0vD,iBAEpD,OADAA,EAAiBomB,GAAcD,EAAOlvB,oBAC/B,MAAK3mD,EAAZ,CAAmB0vD,iBAAkBA,IAEzC,KAAK/d,GACD,OAAO,MAAK3xC,EAAZ,CAAmB0vD,iBAAkB1vD,EAAM0vD,iBAAiB34C,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE9F,KAAKw6C,GACD,OAAO,MAAK9xC,EAAZ,CAAmB0vD,iBAAkB,KAEzC,KAAK9d,GACD,OAAO,MAAK5xC,EAAZ,CAAmB66E,2BAA4BhF,EAAOlvB,sBAE1D,KAAK9U,GACD,OAAO,MAAK7xC,EAAZ,CAAmB66E,2BAA4B,OAGnD,KAAK/gF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBClEP+6E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCGZ,IAAMrF,GAA+B,CACjC5nE,kBAAmBitE,GAA2BvsE,KAC9CwsE,iBAAkB,KAClBh9C,aAAc,GACdO,cAAe,IAgEJ08C,ICvEHC,GDuEGD,GA7Df,WAAsG,IAA5Ej7E,EAA2E,uDAAnD01E,GAAcG,EAAqC,uCACjG,OAAQA,EAAOp+E,MACX,KAAKgkC,GAGL,KAAKN,GACD,OAAO,MAAKn7B,EAAZ,CAAmBg+B,aAAa,GAAD,oBAAMh+B,EAAMg+B,cAAZ,CAA0B63C,EAAO35C,aAEpE,KAAKd,GACD,IAAM06C,EAAqB91E,EAAMg+B,aAAa+3C,WAAU,SAAAC,GAAE,OAAIA,EAAG95C,WAAa25C,EAAO35C,SAASA,YAC1F8B,EAA4Bh+B,EAAMg+B,aAEtC,OADAA,EAAa83C,GAAcD,EAAO35C,SAC3B,MAAKl8B,EAAZ,CAAmBg+B,aAAcA,IAErC,KAAK3C,GACD,OAAO,MAAKr7B,EAAZ,CAAmBg+B,aAAch+B,EAAMg+B,aAAajnB,QAAO,SAAAi/D,GAAE,OAAIA,EAAG95C,WAAa25C,EAAO35C,cAE5F,KAAKV,GACD,OAAO,MAAKx7B,EAAZ,CAAmBg+B,aAAc,KAErC,KAAK1C,GACD,OAAO,MAAKt7B,EAAZ,CAAmBg7E,iBAAkBnF,EAAO35C,WAEhD,KAAKX,GACD,OAAO,MAAKv7B,EAAZ,CAAmBg7E,iBAAkB,OAGzC,KAAKh/C,GAGL,KAAKN,GACD,OAAO,MAAK17B,EAAZ,CAAmBu+B,cAAc,GAAD,oBAAMv+B,EAAMu+B,eAAZ,CAA2Bs3C,EAAO35C,aAEtE,KAAKP,GACD,IAAMm6C,EAAqB91E,EAAMu+B,cAAcw3C,WAAU,SAAAC,GAAE,OAAIA,EAAG95C,WAAa25C,EAAO35C,SAASA,YAC3FqC,EAA6Bv+B,EAAMu+B,cAEvC,OADAA,EAAcu3C,GAAcD,EAAO35C,SAC5B,MAAKl8B,EAAZ,CAAmBu+B,cAAeA,IAEtC,KAAK3C,GACD,OAAO,MAAK57B,EAAZ,CAAmBu+B,cAAev+B,EAAMu+B,cAAcxnB,QAAO,SAAAi/D,GAAE,OAAIA,EAAG95C,WAAa25C,EAAO35C,cAE9F,KAAKH,GACD,OAAO,MAAK/7B,EAAZ,CAAmBu+B,cAAe,KAEtC,KAAK1C,GACD,OAAO,MAAK77B,EAAZ,CAAmBg7E,iBAAkBnF,EAAO35C,WAEhD,KAAKJ,GACD,OAAO,MAAK97B,EAAZ,CAAmBg7E,iBAAkB,OAGzC,KAAKlhF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBClEPk7E,O,eAAAA,I,mBAAAA,I,gBAAAA,Q,KCGZ,IAAMxF,GAAiC,CACnC5nE,kBAAmBotE,GAA6B1sE,KAChD2sE,mBAAoB,KACpBngD,aAAc,IAsCHogD,IC3CHC,GD2CGD,GAnCf,WAA6G,IAAhFp7E,EAA+E,uDAArD01E,GAAcG,EAAuC,uCACxG,OAAQA,EAAOp+E,MACX,KAAKolC,GAGL,KAAKN,GACD,OAAO,MAAKv8B,EAAZ,CAAmBg7B,aAAa,GAAD,oBAAMh7B,EAAMg7B,cAAZ,CAA0B66C,EAAO94C,gBAEpE,KAAKP,GACD,IAAMs5C,EAAqB91E,EAAMg7B,aAAa+6C,WAAU,SAAAC,GAAE,OAAIA,EAAGvtE,QAAUotE,EAAO94C,YAAYzlC,MAC1F0jC,EAA8Bh7B,EAAMg7B,aAExC,OADAA,EAAa86C,GAAcD,EAAO94C,YAC3B,MAAK/8B,EAAZ,CAAmBg7B,aAAcA,IAErC,KAAKyB,GACD,OAAO,MAAKz8B,EAAZ,CAAmBg7B,aAAch7B,EAAMg7B,aAAajkB,QAAO,SAAAi/D,GAAE,OAAIA,EAAGvtE,QAAUotE,EAAOv+E,QAEzF,KAAKslC,GACD,OAAO,MAAK58B,EAAZ,CAAmBg7B,aAAc,KAErC,KAAK0B,GACD,OAAO,MAAK18B,EAAZ,CAAmBm7E,mBAAoBtF,EAAO94C,cAElD,KAAKJ,GACD,OAAO,MAAK38B,EAAZ,CAAmBm7E,mBAAoB,OAE3C,KAAKrhF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCtCPq7E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCEZ,IAAM3F,GAAmC,CACrC5nE,kBAAmButE,GAA+B7sE,KAClD8sE,qBAAsB,KACtBjhD,eAAgB,IAsCLkhD,ICzCHC,GDyCGD,GAnCf,WAAmH,IAApFv7E,EAAmF,uDAAvD01E,GAAcG,EAAyC,uCAC9G,OAAQA,EAAOp+E,MACX,KAAK6lC,GAGL,KAAKN,GACD,OAAO,MAAKh9B,EAAZ,CAAmBq6B,eAAe,GAAD,oBAAMr6B,EAAMq6B,gBAAZ,CAA4Bw7C,EAAOn4C,kBAExE,KAAKT,GACD,IAAM64C,EAAqB91E,EAAMq6B,eAAe07C,WAAU,SAAAC,GAAE,OAAIA,EAAGx7C,iBAAmBq7C,EAAOn4C,cAAcpmC,MACvG+iC,EAAkCr6B,EAAMq6B,eAE5C,OADAA,EAAey7C,GAAcD,EAAOn4C,cAC7B,MAAK19B,EAAZ,CAAmBq6B,eAAgBA,IAEvC,KAAK6C,GACD,OAAO,MAAKl9B,EAAZ,CAAmBq6B,eAAgBr6B,EAAMq6B,eAAetjB,QAAO,SAAAi/D,GAAE,OAAIA,EAAGx7C,iBAAmBq7C,EAAOv+E,QAEtG,KAAK+lC,GACD,OAAO,MAAKr9B,EAAZ,CAAmBq6B,eAAgB,KAEvC,KAAK8C,GACD,OAAO,MAAKn9B,EAAZ,CAAmBs7E,qBAAsBzF,EAAOn4C,gBAEpD,KAAKN,GACD,OAAO,MAAKp9B,EAAZ,CAAmBs7E,qBAAsB,OAE7C,KAAKxhF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCpCPw7E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCAZ,IAAM9F,GAAoC,CACtC5nE,kBAAmB0tE,GAAgChtE,KACnDitE,sBAAuB,KACvBxwB,gBAAiB,IAsCNywB,IClCHC,GDkCGD,GAnCf,WAAsH,IAAtF17E,EAAqF,uDAAxD01E,GAAcG,EAA0C,uCACjH,OAAQA,EAAOp+E,MACX,KAAK+yD,GAGL,KAAKN,GACD,OAAO,MAAKlqD,EAAZ,CAAmBirD,gBAAgB,GAAD,oBAAMjrD,EAAMirD,iBAAZ,CAA6B4qB,EAAOnrB,mBAE1E,KAAKP,GACD,IAAM2rB,EAAqB91E,EAAMirD,gBAAgB8qB,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOnrB,eAAepzD,MAC7F2zD,EAAoCjrD,EAAMirD,gBAE9C,OADAA,EAAgB6qB,GAAcD,EAAOnrB,eAC9B,MAAK1qD,EAAZ,CAAmBirD,gBAAiBA,IAExC,KAAKb,GACD,OAAO,MAAKpqD,EAAZ,CAAmBirD,gBAAiBjrD,EAAMirD,gBAAgBl0C,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE5F,KAAKizD,GACD,OAAO,MAAKvqD,EAAZ,CAAmBirD,gBAAiB,KAExC,KAAKZ,GACD,OAAO,MAAKrqD,EAAZ,CAAmBy7E,sBAAuB5F,EAAOnrB,iBAErD,KAAKJ,GACD,OAAO,MAAKtqD,EAAZ,CAAmBy7E,sBAAuB,OAE9C,KAAK3hF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBC7BP27E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCPZ,IAAMjG,GAAkD,CACpD5nE,kBAAmB6tE,GAA8CntE,KACjEotE,oCAAqC,KACrC91B,gCAAiC,IAsCtB+1B,IChCHC,GDgCGD,GAnCf,WAAkK,IAAlH77E,EAAiH,uDAAtE01E,GAAcG,EAAwD,uCAC7J,OAAQA,EAAOp+E,MACX,KAAK2tD,GAGL,KAAKN,GACD,OAAO,MAAK9kD,EAAZ,CAAmB8lD,gCAAgC,GAAD,oBAAM9lD,EAAM8lD,iCAAZ,CAA6C+vB,EAAOxwB,mCAE1G,KAAKN,GACD,IAAM+wB,EAAqB91E,EAAM8lD,gCAAgCiwB,WAAU,SAAAC,GAAE,OAAIA,EAAG1rE,aAAeurE,EAAOxwB,+BAA+B/tD,MACrIwuD,EAAkE9lD,EAAM8lD,gCAE5E,OADAA,EAAgCgwB,GAAcD,EAAOxwB,+BAC9C,MAAKrlD,EAAZ,CAAmB8lD,gCAAiCA,IAExD,KAAKd,GACD,OAAO,MAAKhlD,EAAZ,CAAmB8lD,gCAAiC9lD,EAAM8lD,gCAAgC/uC,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1rE,aAAeurE,EAAOv+E,QAEpI,KAAK6tD,GACD,OAAO,MAAKnlD,EAAZ,CAAmB8lD,gCAAiC,KAExD,KAAKb,GACD,OAAO,MAAKjlD,EAAZ,CAAmB47E,oCAAqC/F,EAAOxwB,iCAEnE,KAAKH,GACD,OAAO,MAAKllD,EAAZ,CAAmB47E,oCAAqC,OAE5D,KAAK9hF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBC3BP87E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCNZ,IAAMpG,GAAsC,CACxC5nE,kBAAmBguE,GAAkCttE,KACrDutE,wBAAyB,KACzBn5B,oBAAqB,GACrBoD,6BAA8B,GAC9BC,0BAA2B,IAsEhB+1B,ICxEHC,GDwEGD,GAnEf,WAA0H,IAA1Fh8E,EAAyF,uDAA1D01E,GAAcG,EAA4C,uCACrH,OAAQA,EAAOp+E,MACX,KAAKkqD,GACD,OAAO,MAAK3hD,EAAZ,CAAmB4iD,oBAAmB,uBAAO5iD,EAAM4iD,qBAAb,CAAkCizB,EAAOvzB,qBAEnF,KAAKZ,GACD,OAAO,MAAK1hD,EAAZ,CAAmB4iD,oBAAqB,KAE5C,KAAKrB,GACD,OAAO,MAAKvhD,EAAZ,CAAmB4iD,oBAAoB,GAAD,oBAAM5iD,EAAM4iD,qBAAZ,CAAiCizB,EAAOvzB,qBAElF,KAAKd,GACD,IAAMs0B,EAAqB91E,EAAM4iD,oBAAoBmzB,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOvzB,iBAAiBhrD,MACnG4kF,EAA2Cl8E,EAAM4iD,oBAErD,OADAs5B,EAAqBpG,GAAcD,EAAOvzB,iBACnC,MAAKtiD,EAAZ,CAAmB4iD,oBAAqBs5B,IAE5C,KAAKz6B,GACD,OAAO,MAAKzhD,EAAZ,CAAmB4iD,oBAAqB5iD,EAAM4iD,oBAAoB7rC,QAAO,SAAAzH,GAAC,OAAEA,EAAEhY,KAAOu+E,EAAOvzB,iBAAiBhrD,QAGjH,KAAK0qD,GACD,OAAO,MAAKhiD,EAAZ,CAAmBgmD,6BAA4B,uBAAOhmD,EAAMgmD,8BAAb,CAA2C6vB,EAAOvzB,qBAErG,KAAKP,GACD,OAAO,MAAK/hD,EAAZ,CAAmBgmD,6BAA8B,KAErD,KAAKpE,GACD,OAAO,MAAK5hD,EAAZ,CAAmBgmD,6BAA6B,GAAD,oBAAMhmD,EAAMgmD,8BAAZ,CAA0C6vB,EAAOvzB,qBAEpG,KAAKT,GACD,IAAMi0B,EAAqB91E,EAAMgmD,6BAA6B+vB,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOvzB,iBAAiBhrD,MAC5G6kF,EAAiDn8E,EAAMgmD,6BAE3D,OADAm2B,EAA2BrG,GAAcD,EAAOvzB,iBACzC,MAAKtiD,EAAZ,CAAmBgmD,6BAA8Bm2B,IAErD,KAAKr6B,GACD,OAAO,MAAK9hD,EAAZ,CAAmBgmD,6BAA8BhmD,EAAMgmD,6BAA6BjvC,QAAO,SAAAzH,GAAC,OAAEA,EAAEhY,KAAOu+E,EAAOvzB,iBAAiBhrD,QAGnI,KAAK+qD,GACD,OAAO,MAAKriD,EAAZ,CAAmBimD,0BAAyB,uBAAOjmD,EAAMimD,2BAAb,CAAwC4vB,EAAOvzB,qBAE/F,KAAKF,GACD,OAAO,MAAKpiD,EAAZ,CAAmBimD,0BAA2B,KAElD,KAAKhE,GACD,OAAO,MAAKjiD,EAAZ,CAAmBimD,0BAA0B,GAAD,oBAAMjmD,EAAMimD,2BAAZ,CAAuC4vB,EAAOvzB,qBAE9F,KAAKJ,GACD,IAAM4zB,EAAqB91E,EAAMimD,0BAA0B8vB,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOvzB,iBAAiBhrD,MACzG8kF,EAAiDp8E,EAAMimD,0BAE3D,OADAm2B,EAA2BtG,GAAcD,EAAOvzB,iBACzC,MAAKtiD,EAAZ,CAAmBimD,0BAA2Bm2B,IAElD,KAAKj6B,GACD,OAAO,MAAKniD,EAAZ,CAAmBimD,0BAA2BjmD,EAAMimD,0BAA0BlvC,QAAO,SAAAzH,GAAC,OAAEA,EAAEhY,KAAOu+E,EAAOvzB,iBAAiBhrD,QAG7H,KAAKwC,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCpEPi8E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCLZ,IAAMvG,GAA+B,CACjC5nE,kBAAmBmuE,GAA2BztE,KAC9C6tE,iBAAkB,KAClBxuB,UAAW,IAsCAkrB,ICpCHuD,GDoCGvD,GAnCf,WAAyG,IAA5E/4E,EAA2E,uDAAnD01E,GAAcG,EAAqC,uCACpG,OAAQA,EAAOp+E,MACX,KAAKo1D,GACD,OAAO,MAAK7sD,EAAZ,CAAmB6tD,UAAS,uBAAO7tD,EAAM6tD,WAAb,CAAwBgoB,EAAOpvC,aAE/D,KAAKmmB,GACD,OAAO,MAAK5sD,EAAZ,CAAmB6tD,UAAW,KAElC,KAAKtB,GACD,OAAO,MAAKvsD,EAAZ,CAAmB6tD,UAAU,GAAD,oBAAM7tD,EAAM6tD,WAAZ,CAAuBgoB,EAAOpvC,aAE9D,KAAK+lB,GACD,IAAMspB,EAAqB91E,EAAM6tD,UAAUkoB,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOpvC,SAASnvC,MACjFu2D,EAAyB7tD,EAAM6tD,UAEnC,OADAA,EAAUioB,GAAcD,EAAOpvC,SACxB,MAAKzmC,EAAZ,CAAmB6tD,UAAWA,IAElC,KAAKpB,GACD,OAAO,MAAKzsD,EAAZ,CAAmB6tD,UAAW7tD,EAAM6tD,UAAU92C,QAAO,SAAAzH,GAAC,OAAEA,EAAEhY,KAAOu+E,EAAOpvC,SAASnvC,QAGrF,KAAKo1D,GACD,OAAO,MAAK1sD,EAAZ,CAAmBq8E,iBAAkBxG,EAAOpvC,WAEhD,KAAKkmB,GACD,OAAO,MAAK3sD,EAAZ,CAAmBq8E,iBAAkB,OAEzC,KAAKviF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBChCPs8E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCNZ,IAAM5G,GAAiD,CACnD5nE,kBAAmBwuE,GAA6C9tE,KAChE+tE,mCAAoC,KACpC5sC,4BAA6B,IAsClB6sC,ICzCHC,GDyCGD,GAnCf,WAA4J,IAAhHx8E,EAA+G,uDAArE01E,GAAcG,EAAuD,uCACvJ,OAAQA,EAAOp+E,MACX,KAAKi5C,GAGL,KAAKN,GACD,OAAO,MAAKpwC,EAAZ,CAAmB2vC,4BAA4B,GAAD,oBAAM3vC,EAAM2vC,6BAAZ,CAAyCkmC,EAAOllC,kCAElG,KAAKN,GACD,IAAMylC,EAAqB91E,EAAM2vC,4BAA4BomC,WAAU,SAAAC,GAAE,OAAIA,EAAG1rE,aAAeurE,EAAOllC,8BAA8Br5C,MAChIq4C,EAA6D3vC,EAAM2vC,4BAEvE,OADAA,EAA4BmmC,GAAcD,EAAOllC,8BAC1C,MAAK3wC,EAAZ,CAAmB2vC,4BAA6BA,IAEpD,KAAKW,GACD,OAAO,MAAKtwC,EAAZ,CAAmB2vC,4BAA6B3vC,EAAM2vC,4BAA4B54B,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1rE,aAAeurE,EAAOv+E,QAE5H,KAAKm5C,GACD,OAAO,MAAKzwC,EAAZ,CAAmB2vC,4BAA6B,KAEpD,KAAKY,GACD,OAAO,MAAKvwC,EAAZ,CAAmBu8E,mCAAoC1G,EAAOllC,gCAElE,KAAKH,GACD,OAAO,MAAKxwC,EAAZ,CAAmBu8E,mCAAoC,OAE3D,KAAKziF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,IE1CN08E,GAA0C,kCAC1CC,GAA2C,mCAC3CC,GAA6C,qCAE7CC,GAA0D,kDAC1DC,GAAyD,iDACzDhjF,GAAiC,yBAIjCijF,GAAiD,yCACjDC,GAA8C,sC,ukBDL/CP,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KEAZ,IAAM/G,GAA+C,CACjD5nE,kBAAmB2uE,GAA2CjuE,KAC9DyuE,iCAAkC,KAClCC,6BAA8B,IAsCnBC,ICjCHC,GDiCGD,GAnCf,WAAyJ,IAA5Gn9E,EAA2G,uDAAnE01E,GAAcG,EAAqD,uCACpJ,OAAQA,EAAOp+E,MACX,KAAKulF,GAGL,KAAKN,GACD,OAAO,MAAK18E,EAAZ,CAAmBk9E,6BAA6B,GAAD,oBAAMl9E,EAAMk9E,8BAAZ,CAA0CrH,EAAOwH,gCAEpG,KAAKV,GACD,IAAM7G,EAAqB91E,EAAMk9E,6BAA6BnH,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOwH,4BAA4B/lF,MACvH4lF,EAA4Dl9E,EAAMk9E,6BAEtE,OADAA,EAA6BpH,GAAcD,EAAOwH,4BAC3C,MAAKr9E,EAAZ,CAAmBk9E,6BAA8BA,IAErD,KAAKN,GACD,OAAO,MAAK58E,EAAZ,CAAmBk9E,6BAA8Bl9E,EAAMk9E,6BAA6BnmE,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEtH,KAAKylF,GACD,OAAO,MAAK/8E,EAAZ,CAAmBk9E,6BAA8B,KAErD,KAAKL,GACD,OAAO,MAAK78E,EAAZ,CAAmBi9E,iCAAkCpH,EAAOwH,8BAEhE,KAAKP,GACD,OAAO,MAAK98E,EAAZ,CAAmBi9E,iCAAkC,OAEzD,KAAKnjF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBC5BPo9E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCLZ,IAAM1H,GAA2C,CAC7C5nE,kBAAmBsvE,GAAuC5uE,KAC1DokD,6BAA8B,KAC9BL,yCAA0C,GAC1C+qB,qCAAsC,GACtC3qB,iCAAkC,GAClC4qB,sDAAuD,IA+F5CC,ICpGHC,GDoGGD,GA5Ff,WAAyI,IAApGx9E,EAAmG,uDAA/D01E,GAAcG,EAAiD,uCACpI,OAAQA,EAAOp+E,MACX,KAAKi5D,GACD,OAAO,MAAK1wD,EAAZ,CAAmBuyD,yCAAwC,uBAAOvyD,EAAMuyD,0CAAb,CAAuDsjB,EAAOnkB,2BAE7H,KAAKjB,GACD,OAAO,MAAKzwD,EAAZ,CAAmBuyD,yCAA0C,KAEjE,KAAKnC,GACD,OAAO,MAAKpwD,EAAZ,CAAmBuyD,yCAAyC,GAAD,oBAAMvyD,EAAMuyD,0CAAZ,CAAsDsjB,EAAOnkB,2BAE5H,KAAKrB,GACD,IAAMylB,EAAqB91E,EAAMuyD,yCAAyCwjB,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOnkB,uBAAuBp6D,MAC9Hi7D,EAAoEvyD,EAAMuyD,yCAE9E,OADAA,EAAyCujB,GAAcD,EAAOnkB,uBACvD,MAAK1xD,EAAZ,CAAmBuyD,yCAA0CA,IAEjE,KAAKjC,GACD,OAAO,MAAKtwD,EAAZ,CAAmBuyD,yCAA0CvyD,EAAMuyD,yCAAyCx7C,QAAO,SAAAzH,GAAC,OAAEA,EAAEhY,KAAOu+E,EAAOnkB,uBAAuBp6D,QAGjK,KAAKy5D,GACD,OAAO,MAAK/wD,EAAZ,CAAmB2yD,iCAAgC,uBAAO3yD,EAAM2yD,kCAAb,CAA+CkjB,EAAOnkB,2BAE7G,KAAKZ,GACD,OAAO,MAAK9wD,EAAZ,CAAmB2yD,iCAAkC,KAEzD,KAAKhC,GACD,OAAO,MAAK3wD,EAAZ,CAAmB2yD,iCAAiC,GAAD,oBAAM3yD,EAAM2yD,kCAAZ,CAA8CkjB,EAAOnkB,2BAE5G,KAAKd,GACD,IAAMklB,EAAqB91E,EAAM2yD,iCAAiCojB,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOvjB,wBAAwBh7D,MACvHq7D,EAA4D3yD,EAAM2yD,iCAEtE,OADAA,EAAiCmjB,GAAcD,EAAOnkB,uBAC/C,MAAK1xD,EAAZ,CAAmB2yD,iCAAkCA,IAEzD,KAAK9B,GACD,OAAO,MAAK7wD,EAAZ,CAAmB2yD,iCAAkC3yD,EAAM2yD,iCAAiC57C,QAAO,SAAAzH,GAAC,OAAEA,EAAEhY,KAAOu+E,EAAOnkB,uBAAuBp6D,QAGjJ,KAAK85D,GACD,OAAO,MAAKpxD,EAAZ,CAAmBu9E,sDAAqD,uBAAOv9E,EAAMu9E,uDAAb,CAAoE1H,EAAOnkB,2BAEvJ,KAAKP,GACD,OAAO,MAAKnxD,EAAZ,CAAmBu9E,sDAAuD,KAE9E,KAAKvsB,GACD,OAAO,MAAKhxD,EAAZ,CAAmBu9E,sDAAsD,GAAD,oBAAMv9E,EAAMu9E,uDAAZ,CAAmE1H,EAAOnkB,2BAEtJ,KAAKT,GACD,IAAM6kB,EAAqB91E,EAAMu9E,sDAAsDxH,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOvjB,wBAAwBh7D,MAC5IimF,EAAiFv9E,EAAMu9E,sDAE3F,OADAA,EAAsDzH,GAAcD,EAAOnkB,uBACpE,MAAK1xD,EAAZ,CAAmBu9E,sDAAuDA,IAE9E,KAAKrsB,GACD,OAAO,MAAKlxD,EAAZ,CAAmBu9E,sDAAuDv9E,EAAMu9E,sDAAsDxmE,QAAO,SAAAzH,GAAC,OAAEA,EAAEhY,KAAOu+E,EAAOnkB,uBAAuBp6D,QAG3L,KAAKm6D,GACD,OAAO,MAAKzxD,EAAZ,CAAmB2yD,iCAAgC,uBAAO3yD,EAAM2yD,kCAAb,CAA+CkjB,EAAOnkB,2BAE7G,KAAKF,GACD,OAAO,MAAKxxD,EAAZ,CAAmB2yD,iCAAkC,KAEzD,KAAKtB,GACD,OAAO,MAAKrxD,EAAZ,CAAmB2yD,iCAAiC,GAAD,oBAAM3yD,EAAM2yD,kCAAZ,CAA8CkjB,EAAOnkB,2BAE5G,KAAKJ,GACD,IAAMwkB,EAAqB91E,EAAM2yD,iCAAiCojB,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOnkB,uBAAuBp6D,MACtHq7D,EAA4D3yD,EAAM2yD,iCAEtE,OADAA,EAAiCmjB,GAAcD,EAAOvjB,wBAC/C,MAAKtyD,EAAZ,CAAmB2yD,iCAAkCA,IAEzD,KAAKpB,GACD,OAAO,MAAKvxD,EAAZ,CAAmB2yD,iCAAkC3yD,EAAM2yD,iCAAiC57C,QAAO,SAAAzH,GAAC,OAAEA,EAAEhY,KAAOu+E,EAAOnkB,uBAAuBp6D,QAGjJ,KAAKi5D,GACD,OAAO,MAAKvwD,EAAZ,CAAmB4yD,6BAA8BijB,EAAOnkB,yBAE5D,KAAKlB,GACD,OAAO,MAAKxwD,EAAZ,CAAmB4yD,6BAA8B,OAErD,KAAK94D,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBChGPy9E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCJZ,IAAM/H,GAAwC,CAC1C5nE,kBAAmB2vE,GAAoCjvE,KACvDkvE,0BAA2B,KAC3BxtC,oBAAqB,GACrBD,gBAAiB,IAgEN0tC,ICrEHC,GDqEGD,GA7Df,WAAiI,IAA9F39E,EAA6F,uDAA5D01E,GAAcG,EAA8C,uCAC5H,OAAQA,EAAOp+E,MACX,KAAK+5C,GAGL,KAAKN,GACD,OAAO,MAAKlxC,EAAZ,CAAmBkwC,oBAAoB,GAAD,oBAAMlwC,EAAMkwC,qBAAZ,CAAiC2lC,EAAO5jC,uBAElF,KAAKd,GACD,IAAM2kC,EAAqB91E,EAAMkwC,oBAAoB6lC,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO5jC,mBAAmB36C,MACrG44C,EAA4ClwC,EAAMkwC,oBAEtD,OADAA,EAAoB4lC,GAAcD,EAAO5jC,mBAClC,MAAKjyC,EAAZ,CAAmBkwC,oBAAqBA,IAE5C,KAAKkB,GACD,OAAO,MAAKpxC,EAAZ,CAAmBkwC,oBAAqBlwC,EAAMkwC,oBAAoBn5B,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEpG,KAAKi6C,GACD,OAAO,MAAKvxC,EAAZ,CAAmBkwC,oBAAqB,KAE5C,KAAKmB,GACD,OAAO,MAAKrxC,EAAZ,CAAmB09E,0BAA2B7H,EAAO5jC,qBAEzD,KAAKX,GACD,OAAO,MAAKtxC,EAAZ,CAAmB09E,0BAA2B,OAGlD,KAAK3rC,GAGL,KAAKN,GACD,OAAO,MAAKzxC,EAAZ,CAAmBiwC,gBAAgB,GAAD,oBAAMjwC,EAAMiwC,iBAAZ,CAA6B4lC,EAAO5jC,uBAE1E,KAAKP,GACD,IAAMokC,EAAqB91E,EAAMiwC,gBAAgB8lC,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO5jC,mBAAmB36C,MACjG24C,EAAwCjwC,EAAMiwC,gBAElD,OADAA,EAAgB6lC,GAAcD,EAAO5jC,mBAC9B,MAAKjyC,EAAZ,CAAmBiwC,gBAAiBA,IAExC,KAAK0B,GACD,OAAO,MAAK3xC,EAAZ,CAAmBiwC,gBAAiBjwC,EAAMiwC,gBAAgBl5B,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE5F,KAAKw6C,GACD,OAAO,MAAK9xC,EAAZ,CAAmBiwC,gBAAiB,KAExC,KAAK2B,GACD,OAAO,MAAK5xC,EAAZ,CAAmB09E,0BAA2B7H,EAAO5jC,qBAEzD,KAAKJ,GACD,OAAO,MAAK7xC,EAAZ,CAAmB09E,0BAA2B,OAGlD,KAAK5jF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBChEP49E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCCZ,IAAMlI,GAAwC,CAC1C5nE,kBAAmB8vE,GAAoCpvE,KACvDqvE,0BAA2B,KAC3BtqE,sBAAuB,IAqCZuqE,ICxCHC,GDwCGD,GAlCf,WAAmI,IAA9F99E,EAA6F,uDAA5D01E,GAAcG,EAA8C,uCAC9H,OAAQA,EAAOp+E,MACX,KAAKuX,GAGL,KAAKN,GACD,OAAO,MAAK1O,EAAZ,CAAmBuT,sBAAsB,GAAD,oBAAMvT,EAAMuT,uBAAZ,CAAmCsiE,EAAO5mE,wBAEtF,KAAKN,GACD,IAAIqvE,EAA6Ch+E,EAAMuT,sBAEvD,OADAyqE,EAAqB,GAAKnI,EAAO5mE,oBAC1B,MAAKjP,EAAZ,CAAmBuT,sBAAuByqE,IAE9C,KAAKpvE,GAGL,KAAKG,GACD,OAAO,MAAK/O,EAAZ,CAAmBuT,sBAAuB,KAE9C,KAAK1E,GACD,OAAO,MAAK7O,EAAZ,CAAmB69E,0BAA2BhI,EAAO5mE,sBAEzD,KAAKH,GACD,OAAO,MAAK9O,EAAZ,CAAmB69E,0BAA2B,OAElD,KAAK/jF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCnCP+9E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCAZ,IAAMrI,GAA+B,CACjC5nE,kBAAmBiwE,GAA2BvvE,KAC9CyvE,iBAAkB,KAClB9nB,WAAY,IAsCD+nB,IC1CHC,GD0CGD,GAnCf,WAAuG,IAA5El+E,EAA2E,uDAAnD01E,GAAcG,EAAqC,uCAClG,OAAQA,EAAOp+E,MACX,KAAKm+D,GAGL,KAAKN,GACD,OAAO,MAAKt1D,EAAZ,CAAmBm2D,WAAW,GAAD,oBAAMn2D,EAAMm2D,YAAZ,CAAwB0f,EAAO9f,cAEhE,KAAKR,GACD,IAAMugB,EAAqB91E,EAAMm2D,WAAW4f,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO9f,UAAUz+D,MACnF6+D,EAA0Bn2D,EAAMm2D,WAEpC,OADAA,EAAW2f,GAAcD,EAAO9f,UACzB,MAAK/1D,EAAZ,CAAmBm2D,WAAYA,IAEnC,KAAKX,GACD,OAAO,MAAKx1D,EAAZ,CAAmBm2D,WAAYn2D,EAAMm2D,WAAWp/C,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAElF,KAAKq+D,GACD,OAAO,MAAK31D,EAAZ,CAAmBm2D,WAAY,KAEnC,KAAKV,GACD,OAAO,MAAKz1D,EAAZ,CAAmBi+E,iBAAkBpI,EAAO9f,YAEhD,KAAKL,GACD,OAAO,MAAK11D,EAAZ,CAAmBi+E,iBAAkB,OAEzC,KAAKnkF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCrCPm+E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCCZ,IAAMzI,GAA2C,CAC7C5nE,kBAAmBqwE,GAAuC3vE,KAC1D4vE,6BAA8B,KAC9Bt1E,0BAA2B,GAC3BP,8BAA+B,IAgEpB81E,ICpEHC,GDoEGD,GA7Df,WAA0I,IAApGr+E,EAAmG,uDAA/D01E,GAAcG,EAAiD,uCACrI,OAAQA,EAAOp+E,MACX,KAAKyO,GAGL,KAAKN,GACD,OAAO,MAAK5F,EAAZ,CAAmB8I,0BAA0B,GAAD,oBAAM9I,EAAM8I,2BAAZ,CAAuC+sE,EAAOlvE,2BAE9F,KAAKd,GACD,IAAMiwE,EAAqB91E,EAAM8I,0BAA0BitE,WAAU,SAAAC,GAAE,OAAIA,EAAGlvE,kBAAoB+uE,EAAOlvE,uBAAuBG,mBAC5HgC,EAAqD9I,EAAM8I,0BAE/D,OADAA,EAA0BgtE,GAAcD,EAAOlvE,uBACxC,MAAK3G,EAAZ,CAAmB8I,0BAA2BA,IAElD,KAAKhD,GACD,OAAO,MAAK9F,EAAZ,CAAmB8I,0BAA2B9I,EAAM8I,0BAA0BiO,QAAO,SAAAi/D,GAAE,OAAIA,EAAGlvE,kBAAoB+uE,EAAO/uE,qBAE7H,KAAKb,GACD,OAAO,MAAKjG,EAAZ,CAAmB8I,0BAA2B,KAElD,KAAK/C,GACD,OAAO,MAAK/F,EAAZ,CAAmBo+E,6BAA8BvI,EAAOlvE,yBAE5D,KAAKX,GACD,OAAO,MAAKhG,EAAZ,CAAmBo+E,6BAA8B,OAGrD,KAAK33E,GAGL,KAAKN,GACD,OAAO,MAAKnG,EAAZ,CAAmBuI,8BAA8B,GAAD,oBAAMvI,EAAMuI,+BAAZ,CAA2CstE,EAAOlvE,2BAEtG,KAAKP,GACD,IAAM0vE,EAAqB91E,EAAMuI,8BAA8BwtE,WAAU,SAAAC,GAAE,OAAIA,EAAGlvE,kBAAoB+uE,EAAOlvE,uBAAuBG,mBAChIyB,EAAyDvI,EAAMuI,8BAEnE,OADAA,EAA8ButE,GAAcD,EAAOlvE,uBAC5C,MAAK3G,EAAZ,CAAmBuI,8BAA+BA,IAEtD,KAAKlC,GACD,OAAO,MAAKrG,EAAZ,CAAmBuI,8BAA+BvI,EAAMuI,8BAA8BwO,QAAO,SAAAi/D,GAAE,OAAIA,EAAGlvE,kBAAoB+uE,EAAO/uE,qBAErI,KAAKN,GACD,OAAO,MAAKxG,EAAZ,CAAmBuI,8BAA+B,KAEtD,KAAKjC,GACD,OAAO,MAAKtG,EAAZ,CAAmBo+E,6BAA8BvI,EAAOlvE,yBAE5D,KAAKJ,GACD,OAAO,MAAKvG,EAAZ,CAAmBo+E,6BAA8B,OAGrD,KAAKtkF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBC/DPs+E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCAZ,IAAM5I,GAA6B,CAC/B5nE,kBAAmBwwE,GAAyB9vE,KAC5C+vE,eAAgB,KAChBn2E,QAAS,IAsCEo2E,OAnCf,WAAgG,IAAxEx+E,EAAuE,uDAAjD01E,GAAcG,EAAmC,uCAC3F,OAAQA,EAAOp+E,MACX,KAAKwN,GAGL,KAAKN,GACD,OAAO,MAAK3E,EAAZ,CAAmBoI,QAAQ,GAAD,oBAAMpI,EAAMoI,SAAZ,CAAqBytE,EAAOlwE,WAE1D,KAAKf,GACD,IAAMkxE,EAAqB91E,EAAMoI,QAAQ2tE,WAAU,SAAAC,GAAE,OAAIA,EAAGzwE,MAAQswE,EAAOlwE,OAAOrO,MAC9E8Q,EAAqBpI,EAAMoI,QAE/B,OADAA,EAAQ0tE,GAAcD,EAAOlwE,OACtB,MAAK3F,EAAZ,CAAmBoI,QAASA,IAEhC,KAAKvD,GACD,OAAO,MAAK7E,EAAZ,CAAmBoI,QAASpI,EAAMoI,QAAQ2O,QAAO,SAAAi/D,GAAE,OAAIA,EAAGzwE,MAAQswE,EAAOv+E,QAE7E,KAAK0N,GACD,OAAO,MAAKhF,EAAZ,CAAmBoI,QAAS,KAEhC,KAAKtD,GACD,OAAO,MAAK9E,EAAZ,CAAmBu+E,eAAgB1I,EAAOlwE,SAE9C,KAAKZ,GACD,OAAO,MAAK/E,EAAZ,CAAmBu+E,eAAgB,OAEvC,KAAKzkF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,6jBCpCnB,IAAM01E,GAAqC,CACvC5nE,kBAAmB87D,GAAiCp7D,KACpDiwE,uBAAwB,KACxB7hC,cAAe,GACfD,aAAc,IAgEH+hC,OA7Df,WAAwH,IAAxF1+E,EAAuF,uDAAzD01E,GAAcG,EAA2C,uCACnH,OAAQA,EAAOp+E,MACX,KAAKwkD,GAGL,KAAKN,GACD,OAAO,MAAK37C,EAAZ,CAAmB48C,cAAc,GAAD,oBAAM58C,EAAM48C,eAAZ,CAA2Bi5B,EAAOpS,oBAEtE,KAAK7nB,GACD,IAAMk6B,EAAqB91E,EAAM48C,cAAcm5B,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOpS,gBAAgBnsE,MAC5FslD,EAAmC58C,EAAM48C,cAE7C,OADAA,EAAck5B,GAAcD,EAAOpS,gBAC5B,MAAKzjE,EAAZ,CAAmB48C,cAAeA,IAEtC,KAAKf,GACD,OAAO,MAAK77C,EAAZ,CAAmB48C,cAAe58C,EAAM48C,cAAc7lC,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAExF,KAAK0kD,GACD,OAAO,MAAKh8C,EAAZ,CAAmB48C,cAAe,KAEtC,KAAKd,GACD,OAAO,MAAK97C,EAAZ,CAAmBy+E,uBAAwB5I,EAAOpS,kBAEtD,KAAK1nB,GACD,OAAO,MAAK/7C,EAAZ,CAAmBy+E,uBAAwB,OAG/C,KAAKjiC,GAGL,KAAKN,GACD,OAAO,MAAKl8C,EAAZ,CAAmB28C,aAAa,GAAD,oBAAM38C,EAAM28C,cAAZ,CAA0Bk5B,EAAOpS,oBAEpE,KAAKtnB,GACD,IAAM25B,EAAqB91E,EAAM28C,aAAao5B,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOpS,gBAAgBnsE,MAC3FqlD,EAAkC38C,EAAM28C,aAE5C,OADAA,EAAam5B,GAAcD,EAAOpS,gBAC3B,MAAKzjE,EAAZ,CAAmB28C,aAAcA,IAErC,KAAKP,GACD,OAAO,MAAKp8C,EAAZ,CAAmB28C,aAAc38C,EAAM28C,aAAa5lC,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEtF,KAAKilD,GACD,OAAO,MAAKv8C,EAAZ,CAAmB28C,aAAc,KAErC,KAAKN,GACD,OAAO,MAAKr8C,EAAZ,CAAmBy+E,uBAAwB5I,EAAOpS,kBAEtD,KAAKnnB,GACD,OAAO,MAAKt8C,EAAZ,CAAmBy+E,uBAAwB,OAG/C,KAAK3kF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,6jBC/DnB,IAAM01E,GAAoC,CACtC5nE,kBAAmB63D,GAAgCn3D,KACnDmwE,sBAAuB,KACvB/hC,cAAe,GACfD,aAAc,IAgEHiiC,ICvDHC,GDuDGD,GA7Df,WAAqH,IAAtF5+E,EAAqF,uDAAxD01E,GAAcG,EAA0C,uCAChH,OAAQA,EAAOp+E,MACX,KAAKwkD,GAGL,KAAKN,GACD,OAAO,MAAK37C,EAAZ,CAAmB48C,cAAc,GAAD,oBAAM58C,EAAM48C,eAAZ,CAA2Bi5B,EAAO1W,mBAEtE,KAAKvjB,GACD,IAAMk6B,EAAqB91E,EAAM48C,cAAcm5B,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO1W,eAAe7nE,MAC3FslD,EAAkC58C,EAAM48C,cAE5C,OADAA,EAAck5B,GAAcD,EAAO1W,eAC5B,MAAKn/D,EAAZ,CAAmB48C,cAAeA,IAEtC,KAAKf,GACD,OAAO,MAAK77C,EAAZ,CAAmB48C,cAAe58C,EAAM48C,cAAc7lC,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAExF,KAAK0kD,GACD,OAAO,MAAKh8C,EAAZ,CAAmB48C,cAAe,KAEtC,KAAKd,GACD,OAAO,MAAK97C,EAAZ,CAAmB2+E,sBAAuB9I,EAAO1W,iBAErD,KAAKpjB,GACD,OAAO,MAAK/7C,EAAZ,CAAmB2+E,sBAAuB,OAG9C,KAAKniC,GAGL,KAAKN,GACD,OAAO,MAAKl8C,EAAZ,CAAmB28C,aAAa,GAAD,oBAAM38C,EAAM28C,cAAZ,CAA0Bk5B,EAAO1W,mBAEpE,KAAKhjB,GACD,IAAM25B,EAAqB91E,EAAM28C,aAAao5B,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO1W,eAAe7nE,MAC1FqlD,EAAiC38C,EAAM28C,aAE3C,OADAA,EAAam5B,GAAcD,EAAO1W,eAC3B,MAAKn/D,EAAZ,CAAmB28C,aAAcA,IAErC,KAAKP,GACD,OAAO,MAAKp8C,EAAZ,CAAmB28C,aAAc38C,EAAM28C,aAAa5lC,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEtF,KAAKilD,GACD,OAAO,MAAKv8C,EAAZ,CAAmB28C,aAAc,KAErC,KAAKN,GACD,OAAO,MAAKr8C,EAAZ,CAAmB2+E,sBAAuB9I,EAAO1W,iBAErD,KAAK7iB,GACD,OAAO,MAAKt8C,EAAZ,CAAmB2+E,sBAAuB,OAG9C,KAAK7kF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBClDP6+E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCbZ,IAAMnJ,GAAmC,CACrC5nE,kBAAmB+wE,GAA+BrwE,KAClDswE,qBAAsB,KACtB7f,iBAAkB,GAClBC,yBAA0B,IAgEf6f,ICnDHC,GDmDGD,GA7Df,WAAkH,IAApF/+E,EAAmF,uDAAvD01E,GAAcG,EAAyC,uCAC7G,OAAQA,EAAOp+E,MACX,KAAK8mE,GAGL,KAAKN,GACD,OAAO,MAAKj+D,EAAZ,CAAmBk/D,yBAAyB,GAAD,oBAAMl/D,EAAMk/D,0BAAZ,CAAsC2W,EAAO7W,kBAE5F,KAAKd,GACD,IAAM4X,EAAqB91E,EAAMk/D,yBAAyB6W,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO7W,cAAc1nE,MACrG4nE,EAA4Cl/D,EAAMk/D,yBAEtD,OADAA,EAAyB4W,GAAcD,EAAO7W,cACvC,MAAKh/D,EAAZ,CAAmBk/D,yBAA0BA,IAEjD,KAAKf,GACD,OAAO,MAAKn+D,EAAZ,CAAmBk/D,yBAA0Bl/D,EAAMk/D,yBAAyBnoD,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE9G,KAAKgnE,GACD,OAAO,MAAKt+D,EAAZ,CAAmBk/D,yBAA0B,KAEjD,KAAKd,GACD,OAAO,MAAKp+D,EAAZ,CAAmB8+E,qBAAsBjJ,EAAO7W,gBAEpD,KAAKX,GACD,OAAO,MAAKr+D,EAAZ,CAAmB8+E,qBAAsB,OAG7C,KAAKhgB,GAGL,KAAKN,GACD,OAAO,MAAKx+D,EAAZ,CAAmBi/D,iBAAiB,GAAD,oBAAMj/D,EAAMi/D,kBAAZ,CAA8B4W,EAAO7W,kBAE5E,KAAKP,GACD,IAAMqX,EAAqB91E,EAAMi/D,iBAAiB8W,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO7W,cAAc1nE,MAC7F2nE,EAAoCj/D,EAAMk/D,yBAE9C,OADAD,EAAiB6W,GAAcD,EAAO7W,cAC/B,MAAKh/D,EAAZ,CAAmBi/D,iBAAkBA,IAEzC,KAAKP,GACD,OAAO,MAAK1+D,EAAZ,CAAmBi/D,iBAAkBj/D,EAAMi/D,iBAAiBloD,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE9F,KAAKunE,GACD,OAAO,MAAK7+D,EAAZ,CAAmBi/D,iBAAkB,KAEzC,KAAKN,GACD,OAAO,MAAK3+D,EAAZ,CAAmB8+E,qBAAsBjJ,EAAO7W,gBAEpD,KAAKJ,GACD,OAAO,MAAK5+D,EAAZ,CAAmB8+E,qBAAsB,OAG7C,KAAKhlF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBC9CPg/E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCjBZ,IAAMtJ,GAAqC,CACvC5nE,kBAAmBkxE,GAAiCxwE,KACpDywE,uBAAwB,KACxBz+B,gBAAiB,GACjBK,qBAAsB,GACtBD,YAAa,GACbshB,YAAa,IAuHFgd,IC1HHC,GD0HGD,GApHf,WAAwH,IAAxFl/E,EAAuF,uDAAzD01E,GAAcG,EAA2C,uCACnH,OAAQA,EAAOp+E,MACX,KAAKsoE,GAGL,KAAKN,GACD,OAAO,MAAKz/D,EAAZ,CAAmBwgD,gBAAgB,GAAD,oBAAMxgD,EAAMwgD,iBAAZ,CAA6Bq1B,EAAO/jE,YAE1E,KAAK4tD,GACD,IAAMoW,EAAqB91E,EAAMwgD,gBAAgBu1B,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO/jE,QAAQxa,MACtFkpD,EAAqCxgD,EAAMwgD,gBAE/C,OADAA,EAAgBs1B,GAAcD,EAAO/jE,QAC9B,MAAK9R,EAAZ,CAAmBwgD,gBAAiBA,IAExC,KAAKmf,GACD,OAAO,MAAK3/D,EAAZ,CAAmBwgD,gBAAiBxgD,EAAMwgD,gBAAgBzpC,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE5F,KAAKwoE,GACD,OAAO,MAAK9/D,EAAZ,CAAmBwgD,gBAAiB,KAExC,KAAKof,GACD,OAAO,MAAK5/D,EAAZ,CAAmBi/E,uBAAwBpJ,EAAO/jE,UAEtD,KAAK+tD,GACD,OAAO,MAAK7/D,EAAZ,CAAmBi/E,uBAAwB,OAI/C,KAAKpe,GAGL,KAAKN,GACD,OAAO,MAAKvgE,EAAZ,CAAmB4gD,YAAY,GAAD,oBAAM5gD,EAAM4gD,aAAZ,CAAyBi1B,EAAO/jE,YAElE,KAAK0uD,GACD,IAAMsV,EAAqB91E,EAAM4gD,YAAYm1B,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO/jE,QAAQxa,MAClFspD,EAAiC5gD,EAAM4gD,YAE3C,OADAA,EAAYk1B,GAAcD,EAAO/jE,QAC1B,MAAK9R,EAAZ,CAAmB4gD,YAAaA,IAEpC,KAAK6f,GACD,OAAO,MAAKzgE,EAAZ,CAAmB4gD,YAAa5gD,EAAM4gD,YAAY7pC,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEpF,KAAKspE,GACD,OAAO,MAAK5gE,EAAZ,CAAmB4gD,YAAa,KAEpC,KAAK8f,GACD,OAAO,MAAK1gE,EAAZ,CAAmBi/E,uBAAwBpJ,EAAO/jE,UAEtD,KAAK6uD,GACD,OAAO,MAAK3gE,EAAZ,CAAmBi/E,uBAAwB,OAK/C,KAAK7d,GAGL,KAAKN,GACD,OAAO,MAAK9gE,EAAZ,CAAmB6gD,qBAAqB,GAAD,oBAAM7gD,EAAM6gD,sBAAZ,CAAkCg1B,EAAO/jE,YAEpF,KAAKivD,GACD,IAAM+U,EAAqB91E,EAAM6gD,qBAAqBk1B,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO/jE,QAAQxa,MAC3FupD,EAA0C7gD,EAAM6gD,qBAEpD,OADAA,EAAqBi1B,GAAcD,EAAO/jE,QACnC,MAAK9R,EAAZ,CAAmB6gD,qBAAsBA,IAE7C,KAAKmgB,GACD,OAAO,MAAKhhE,EAAZ,CAAmB6gD,qBAAsB7gD,EAAM6gD,qBAAqB9pC,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEtG,KAAK6pE,GACD,OAAO,MAAKnhE,EAAZ,CAAmB6gD,qBAAsB,KAE7C,KAAKogB,GACD,OAAO,MAAKjhE,EAAZ,CAAmBi/E,uBAAwBpJ,EAAO/jE,UAEtD,KAAKovD,GACD,OAAO,MAAKlhE,EAAZ,CAAmBi/E,uBAAwB,OAK/C,KAAK3e,GAGL,KAAKN,GACD,OAAO,MAAKhgE,EAAZ,CAAmBkiE,YAAY,GAAD,oBAAMliE,EAAMkiE,aAAZ,CAAyB2T,EAAO/jE,YAElE,KAAKmuD,GACD,IAAM6V,EAAqB91E,EAAMkiE,YAAY6T,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO/jE,QAAQxa,MAClF4qE,EAAiCliE,EAAMkiE,YAE3C,OADAA,EAAY4T,GAAcD,EAAO/jE,QAC1B,MAAK9R,EAAZ,CAAmBkiE,YAAaA,IAEpC,KAAKhC,GACD,OAAO,MAAKlgE,EAAZ,CAAmBkiE,YAAaliE,EAAMkiE,YAAYnrD,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEpF,KAAK+oE,GACD,OAAO,MAAKrgE,EAAZ,CAAmBkiE,YAAa,KAEpC,KAAK/B,GACD,OAAO,MAAKngE,EAAZ,CAAmBi/E,uBAAwBpJ,EAAO/jE,UAEtD,KAAKsuD,GACD,OAAO,MAAKpgE,EAAZ,CAAmBi/E,uBAAwB,OAG/C,KAAKnlF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCrHPm/E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCHZ,IAAMzJ,GAA2B,CAC7B5nE,kBAAmBqxE,GAAuB3wE,KAC1C4wE,aAAc,KACdC,MAAO,IA+CIC,IC1CHC,GD0CGD,GA5Cf,WAAyF,IAApEt/E,EAAmE,uDAA/C01E,GAAcG,EAAiC,uCACpF,OAAQA,EAAOp+E,MACX,KAAKqvE,GACD,OAAO,MAAK9mE,EAAZ,CAAmBq/E,MAAM,GAAD,oBAAMr/E,EAAMq/E,OAAZ,CAAmBxJ,EAAOvO,SAEtD,KAAKP,GACD,IAAM+O,EAAqB91E,EAAMq/E,MAAMtJ,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOvO,KAAKhwE,MACzEgwE,EAAgBtnE,EAAMq/E,MAE1B,OADA/X,EAAKwO,GAAcD,EAAOvO,KACnB,MAAKtnE,EAAZ,CAAmBq/E,MAAO/X,IAE9B,KAAKN,GACD,OAAO,MAAKhnE,EAAZ,CAAmBq/E,MAAOr/E,EAAMq/E,MAAMtoE,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAGxE,KAAK2vE,GACD,IAAM6O,EAAqB91E,EAAMq/E,MAAMtJ,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,MACpEgwE,EAAgBtnE,EAAMq/E,MAE1B,OADA/X,EAAKwO,GAAYlO,UAAY,EACtB,MAAK5nE,EAAZ,CAAmBq/E,MAAO/X,IAG9B,KAAKJ,GACD,IAAM4O,EAAqB91E,EAAMq/E,MAAMtJ,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,MACpEgwE,EAAgBtnE,EAAMq/E,MAE1B,OADA/X,EAAKwO,GAAYlO,UAAY,EACtB,MAAK5nE,EAAZ,CAAmBq/E,MAAO/X,IAG9B,KAAKH,GACD,OAAO,MAAKnnE,EAAZ,CAAmBo/E,aAAcvJ,EAAOvO,OAE5C,KAAKF,GACD,OAAO,MAAKpnE,EAAZ,CAAmBo/E,aAAc,OAErC,KAAKtlF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCrCPu/E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCRZ,IAAM7J,GAAiC,CACnC5nE,kBAAmByxE,GAA6B/wE,KAChDgxE,mBAAoB,KACpBhW,YAAa,IAsCFiW,IC3CHC,GD2CGD,GAnCf,WAA4G,IAAhFz/E,EAA+E,uDAArD01E,GAAcG,EAAuC,uCACvG,OAAQA,EAAOp+E,MACX,KAAKsxE,GAGL,KAAKN,GACD,OAAO,MAAKzoE,EAAZ,CAAmBwpE,YAAY,GAAD,oBAAMxpE,EAAMwpE,aAAZ,CAAyBqM,EAAO7M,eAElE,KAAKN,GACD,IAAMoN,EAAqB91E,EAAMwpE,YAAYuM,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO7M,WAAW1xE,MACrFkyE,EAA6BxpE,EAAMwpE,YAEvC,OADAA,EAAYsM,GAAcD,EAAO7M,WAC1B,MAAKhpE,EAAZ,CAAmBwpE,YAAaA,IAEpC,KAAKb,GACD,OAAO,MAAK3oE,EAAZ,CAAmBwpE,YAAaxpE,EAAMwpE,YAAYzyD,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEpF,KAAKwxE,GACD,OAAO,MAAK9oE,EAAZ,CAAmBwpE,YAAa,KAEpC,KAAKZ,GACD,OAAO,MAAK5oE,EAAZ,CAAmBw/E,mBAAoB3J,EAAO7M,aAElD,KAAKH,GACD,OAAO,MAAK7oE,EAAZ,CAAmBw/E,mBAAoB,OAE3C,KAAK1lF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCtCP0/E,O,eAAAA,I,mBAAAA,I,gBAAAA,Q,KCEZ,IAAMhK,GAA8B,CAChC5nE,kBAAmB4xE,GAA0BlxE,KAC7CmxE,gBAAiB,KACjB97E,SAAU,IAsCC+7E,IClCHC,GDkCGD,GAnCf,WAAmG,IAA1E5/E,EAAyE,uDAAlD01E,GAAcG,EAAoC,uCAC9F,OAAQA,EAAOp+E,MACX,KAAK8L,GAGL,KAAKN,GACD,OAAO,MAAKjD,EAAZ,CAAmB6D,SAAS,GAAD,oBAAM7D,EAAM6D,UAAZ,CAAsBgyE,EAAOnyE,YAE5D,KAAKR,GACD,IAAM4yE,EAAqB91E,EAAM6D,SAASkyE,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOnyE,QAAQpM,MAC/EuM,EAAuB7D,EAAM6D,SAEjC,OADAA,EAASiyE,GAAcD,EAAOnyE,QACvB,MAAK1D,EAAZ,CAAmB6D,SAAUA,IAEjC,KAAKV,GACD,OAAO,MAAKnD,EAAZ,CAAmB6D,SAAU7D,EAAM6D,SAASkT,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE9E,KAAKgM,GACD,OAAO,MAAKtD,EAAZ,CAAmB6D,SAAU,KAEjC,KAAKT,GACD,OAAO,MAAKpD,EAAZ,CAAmB2/E,gBAAiB9J,EAAOnyE,UAE/C,KAAKL,GACD,OAAO,MAAKrD,EAAZ,CAAmB2/E,gBAAiB,OAExC,KAAK7lF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBC7BP6/E,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCPZ,IAAMnK,GAA+C,CACjD5nE,kBAAmB+xE,GAA2CrxE,KAC9DsxE,iCAAkC,KAClCliD,UAAW,GACX1yB,QAAS,IAgEE60E,ICvDHC,GDuDGD,GA7Df,WAAyJ,IAA5G//E,EAA2G,uDAAnE01E,GAAcG,EAAqD,uCACpJ,OAAQA,EAAOp+E,MACX,KAAK8R,GAGL,KAAKN,GACD,OAAO,MAAKjJ,EAAZ,CAAmB49B,UAAU,GAAD,oBAAM59B,EAAM49B,WAAZ,CAAuBi4C,EAAO5rE,gCAE9D,KAAKf,GACD,IAAM4sE,EAAqB91E,EAAM49B,UAAUm4C,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO5rE,4BAA4B3S,MACpGsmC,EAAyC59B,EAAM49B,UAEnD,OADAA,EAAUk4C,GAAcD,EAAO5rE,4BACxB,MAAKjK,EAAZ,CAAmB49B,UAAWA,IAElC,KAAKz0B,GACD,OAAO,MAAKnJ,EAAZ,CAAmB49B,UAAW59B,EAAM49B,UAAU7mB,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEhF,KAAKgS,GACD,OAAO,MAAKtJ,EAAZ,CAAmB49B,UAAW,KAElC,KAAKx0B,GACD,OAAO,MAAKpJ,EAAZ,CAAmB8/E,iCAAkCjK,EAAO5rE,8BAEhE,KAAKZ,GACD,OAAO,MAAKrJ,EAAZ,CAAmB8/E,iCAAkC,OAGzD,KAAKh2E,GAGL,KAAKN,GACD,OAAO,MAAKxJ,EAAZ,CAAmBkL,QAAQ,GAAD,oBAAMlL,EAAMkL,SAAZ,CAAqB2qE,EAAO5rE,gCAE1D,KAAKR,GACD,IAAMqsE,EAAqB91E,EAAMkL,QAAQ6qE,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO5rE,4BAA4B3S,MAClG4T,EAAuClL,EAAMkL,QAEjD,OADAA,EAAQ4qE,GAAcD,EAAO5rE,4BACtB,MAAKjK,EAAZ,CAAmBkL,QAASA,IAEhC,KAAKxB,GACD,OAAO,MAAK1J,EAAZ,CAAmBkL,QAASlL,EAAMkL,QAAQ6L,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE5E,KAAKuS,GACD,OAAO,MAAK7J,EAAZ,CAAmBkL,QAAS,KAEhC,KAAKvB,GACD,OAAO,MAAK3J,EAAZ,CAAmB8/E,iCAAkCjK,EAAO5rE,8BAEhE,KAAKL,GACD,OAAO,MAAK5J,EAAZ,CAAmB8/E,iCAAkC,OAGzD,KAAKhmF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,IEnENi+D,GAA2B,mBAC3BC,GAA4B,oBAC5BC,GAA8B,sBAE9BC,GAA2C,mCAC3CC,GAA0C,kCAC1CC,GAAkC,0BAClCC,GAA+B,uBAG/BC,GAA0B,kBAC1BC,GAA2B,mBAC3BC,GAA6B,qBAE7BC,GAA0C,kCAC1CC,GAAyC,iCACzCC,GAAiC,yBACjCC,GAA8B,sBAG9BhlE,GAAiC,yB,ukBDHlCkmF,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KEbZ,IAAMtK,GAAoC,CACtC5nE,kBAAmBkyE,GAAgCxxE,KACnDyxE,sBAAuB,KACvBhhB,iBAAkB,GAClBC,yBAA0B,IAgEfghB,ICtDHC,GDsDGD,GA7Df,WAAqH,IAAtFlgF,EAAqF,uDAAxD01E,GAAcG,EAA0C,uCAChH,OAAQA,EAAOp+E,MACX,KAAK8mE,GAGL,KAAKN,GACD,OAAO,MAAKj+D,EAAZ,CAAmBk/D,yBAAyB,GAAD,oBAAMl/D,EAAMk/D,0BAAZ,CAAsC2W,EAAOuK,mBAE5F,KAAKliB,GACD,IAAM4X,EAAqB91E,EAAMk/D,yBAAyB6W,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOuK,eAAe9oF,MACtG4nE,EAA6Cl/D,EAAMk/D,yBAEvD,OADAA,EAAyB4W,GAAcD,EAAOuK,eACvC,MAAKpgF,EAAZ,CAAmBk/D,yBAA0BA,IAEjD,KAAKf,GACD,OAAO,MAAKn+D,EAAZ,CAAmBk/D,yBAA0Bl/D,EAAMk/D,yBAAyBnoD,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE9G,KAAKgnE,GACD,OAAO,MAAKt+D,EAAZ,CAAmBk/D,yBAA0B,KAEjD,KAAKd,GACD,OAAO,MAAKp+D,EAAZ,CAAmBigF,sBAAuBpK,EAAOuK,iBAErD,KAAK/hB,GACD,OAAO,MAAKr+D,EAAZ,CAAmBigF,sBAAuB,OAG9C,KAAKnhB,GAGL,KAAKN,GACD,OAAO,MAAKx+D,EAAZ,CAAmBi/D,iBAAiB,GAAD,oBAAMj/D,EAAMi/D,kBAAZ,CAA8B4W,EAAOuK,mBAE5E,KAAK3hB,GACD,IAAMqX,EAAqB91E,EAAMi/D,iBAAiB8W,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOuK,eAAe9oF,MAC9F2nE,EAAqCj/D,EAAMk/D,yBAE/C,OADAD,EAAiB6W,GAAcD,EAAOuK,eAC/B,MAAKpgF,EAAZ,CAAmBi/D,iBAAkBA,IAEzC,KAAKP,GACD,OAAO,MAAK1+D,EAAZ,CAAmBi/D,iBAAkBj/D,EAAMi/D,iBAAiBloD,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE9F,KAAKunE,GACD,OAAO,MAAK7+D,EAAZ,CAAmBi/D,iBAAkB,KAEzC,KAAKN,GACD,OAAO,MAAK3+D,EAAZ,CAAmBigF,sBAAuBpK,EAAOuK,iBAErD,KAAKxhB,GACD,OAAO,MAAK5+D,EAAZ,CAAmBigF,sBAAuB,OAG9C,KAAKnmF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCjDPmgF,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCdZ,IAAMzK,GAAgC,CAClC5nE,kBAAmBqyE,GAA4B3xE,KAC/C6xE,kBAAmB,KACnBxV,YAAa,IAsCFyV,ICzBHC,GDyBGD,GAnCf,WAA0G,IAA9EtgF,EAA6E,uDAApD01E,GAAcG,EAAsC,uCACrG,OAAQA,EAAOp+E,MACX,KAAK6yE,GAGL,KAAKN,GACD,OAAO,MAAKhqE,EAAZ,CAAmB6qE,YAAY,GAAD,oBAAM7qE,EAAM6qE,aAAZ,CAAyBgL,EAAOrL,eAElE,KAAKP,GACD,IAAM6L,EAAqB91E,EAAM6qE,YAAYkL,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOrL,WAAWlzE,MACrFuzE,EAA4B7qE,EAAM6qE,YAEtC,OADAA,EAAYiL,GAAcD,EAAOrL,WAC1B,MAAKxqE,EAAZ,CAAmB6qE,YAAaA,IAEpC,KAAKX,GACD,OAAO,MAAKlqE,EAAZ,CAAmB6qE,YAAa7qE,EAAM6qE,YAAY9zD,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEpF,KAAK+yE,GACD,OAAO,MAAKrqE,EAAZ,CAAmB6qE,YAAa,KAEpC,KAAKV,GACD,OAAO,MAAKnqE,EAAZ,CAAmBqgF,kBAAmBxK,EAAOrL,aAEjD,KAAKJ,GACD,OAAO,MAAKpqE,EAAZ,CAAmBqgF,kBAAmB,OAE1C,KAAKvmF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCpBPugF,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCbZ,IAAM7K,GAA2C,CAC7C5nE,kBAAmByyE,GAAuC/xE,KAC1DgyE,6BAA8B,KAC9BjS,cAAe,GACfF,MAAO,GACPC,UAAW,IA4EAmS,ICnFHC,GDmFGD,GAzEf,WAAyI,IAApGzgF,EAAmG,uDAA/D01E,GAAcG,EAAiD,uCACpI,OAAQA,EAAOp+E,MACX,KAAK21E,GACD,OAAO,MAAKptE,EAAZ,CAAmBuuE,cAAa,uBAAOvuE,EAAMuuE,eAAb,CAA4BsH,EAAO7H,2BAEvE,KAAKb,GACD,OAAO,MAAKntE,EAAZ,CAAmBuuE,cAAe,KAEtC,KAAKzB,GACD,OAAO,MAAK9sE,EAAZ,CAAmBuuE,cAAc,GAAD,oBAAMvuE,EAAMuuE,eAAZ,CAA2BsH,EAAO7H,2BAEtE,KAAKjB,GACD,IAAM+I,EAAqB91E,EAAMuuE,cAAcwH,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO7H,uBAAuB12E,MACnGi3E,EAAyCvuE,EAAMuuE,cAEnD,OADAA,EAAcuH,GAAcD,EAAO7H,uBAC5B,MAAKhuE,EAAZ,CAAmBuuE,cAAeA,IAEtC,KAAKvB,GACD,OAAO,MAAKhtE,EAAZ,CAAmBuuE,cAAevuE,EAAMuuE,cAAcx3D,QAAO,SAAAzH,GAAC,OAAEA,EAAEhY,KAAOu+E,EAAO7H,uBAAuB12E,QAG3G,KAAKm2E,GACD,OAAO,MAAKztE,EAAZ,CAAmBquE,MAAK,uBAAOruE,EAAMquE,OAAb,CAAoBwH,EAAO7H,2BAEvD,KAAKR,GACD,OAAO,MAAKxtE,EAAZ,CAAmBquE,MAAO,KAE9B,KAAKhB,GACD,OAAO,MAAKrtE,EAAZ,CAAmBquE,MAAM,GAAD,oBAAMruE,EAAMquE,OAAZ,CAAmBwH,EAAO7H,2BAEtD,KAAKV,GACD,IAAMwI,EAAqB91E,EAAMquE,MAAM0H,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO7H,uBAAuB12E,MAC3FqpF,EAAgD3gF,EAAMquE,MAE1D,OADAsS,EAAqB7K,GAAcD,EAAO7H,uBACnC,MAAKhuE,EAAZ,CAAmBquE,MAAOsS,IAE9B,KAAKpT,GACD,OAAO,MAAKvtE,EAAZ,CAAmBquE,MAAOruE,EAAMquE,MAAMt3D,QAAO,SAAAzH,GAAC,OAAEA,EAAEhY,KAAOu+E,EAAO7H,uBAAuB12E,QAG3F,KAAKw2E,GACD,OAAO,MAAK9tE,EAAZ,CAAmBsuE,UAAS,uBAAOtuE,EAAMsuE,WAAb,CAAwBuH,EAAO7H,2BAE/D,KAAKH,GACD,OAAO,MAAK7tE,EAAZ,CAAmBsuE,UAAW,KAElC,KAAKZ,GACD,OAAO,MAAK1tE,EAAZ,CAAmBsuE,UAAU,GAAD,oBAAMtuE,EAAMsuE,WAAZ,CAAuBuH,EAAO7H,2BAE9D,KAAKL,GACD,IAAMmI,EAAqB91E,EAAMsuE,UAAUyH,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO7H,uBAAuB12E,MAC/FspF,EAAgD5gF,EAAMsuE,UAE1D,OADAsS,EAAqB9K,GAAcD,EAAO7H,uBACnC,MAAKhuE,EAAZ,CAAmBsuE,UAAWsS,IAElC,KAAKhT,GACD,OAAO,MAAK5tE,EAAZ,CAAmBsuE,UAAWtuE,EAAMsuE,UAAUv3D,QAAO,SAAAzH,GAAC,OAAEA,EAAEhY,KAAOu+E,EAAO7H,uBAAuB12E,QAGnG,KAAK21E,GACD,OAAO,MAAKjtE,EAAZ,CAAmBwgF,6BAA8B3K,EAAO7H,yBAE5D,KAAKd,GACD,OAAO,MAAKltE,EAAZ,CAAmBwgF,6BAA8B,OAErD,KAAK1mF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBC/EP0gF,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCDZ,IAAMhL,GAAmD,CACrD5nE,kBAAmB4yE,GAA+ClyE,KAClEqyE,qCAAsC,KACtCvR,kCAAmC,IAsCxBwR,ICzBHC,GDyBGD,GAnCf,WAAsK,IAApH9gF,EAAmH,uDAAvE01E,GAAcG,EAAyD,uCACjK,OAAQA,EAAOp+E,MACX,KAAKu3E,GAGL,KAAKN,GACD,OAAO,MAAK1uE,EAAZ,CAAmBsvE,kCAAkC,GAAD,oBAAMtvE,EAAMsvE,mCAAZ,CAA+CuG,EAAO3G,qCAE9G,KAAKP,GACD,IAAMmH,EAAqB91E,EAAMsvE,kCAAkCyG,WAAU,SAAAC,GAAE,OAAIA,EAAGtuB,aAAemuB,EAAO3G,iCAAiCxnB,cACzI4nB,EAAqEtvE,EAAMsvE,kCAE/E,OADAA,EAAkCwG,GAAcD,EAAO3G,iCAChD,MAAKlvE,EAAZ,CAAmBsvE,kCAAmCA,IAE1D,KAAKV,GACD,OAAO,MAAK5uE,EAAZ,CAAmBsvE,kCAAmCtvE,EAAMsvE,kCAAkCv4D,QAAO,SAAAi/D,GAAE,OAAIA,EAAGtuB,aAAemuB,EAAOv+E,QAExI,KAAKy3E,GACD,OAAO,MAAK/uE,EAAZ,CAAmBsvE,kCAAmC,KAE1D,KAAKT,GACD,OAAO,MAAK7uE,EAAZ,CAAmB6gF,qCAAsChL,EAAO3G,mCAEpE,KAAKJ,GACD,OAAO,MAAK9uE,EAAZ,CAAmB6gF,qCAAsC,OAE7D,KAAK/mF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCpBP+gF,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KChBZ,IAAMrL,GAAsC,CACxC5nE,kBAAmBizE,GAAkCvyE,KACrDwyE,wBAAyB,KACzB7gE,QAAS,IAsCE8gE,ICxBHC,GDwBGD,GAnCf,WAA6H,IAA1FjhF,EAAyF,uDAA1D01E,GAAcG,EAA4C,uCACxH,OAAQA,EAAOp+E,MACX,KAAKm6E,GAGL,KAAKN,GACD,OAAO,MAAKtxE,EAAZ,CAAmBmgB,QAAQ,GAAD,oBAAMngB,EAAMmgB,SAAZ,CAAqB01D,EAAO/D,sBAE1D,KAAKP,GACD,IAAMuE,EAAqB91E,EAAMmgB,QAAQ41D,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO/D,kBAAkBx6E,MACxF6oB,EAA8BngB,EAAMmgB,QAExC,OADAA,EAAQ21D,GAAcD,EAAO/D,kBACtB,MAAK9xE,EAAZ,CAAmBmgB,QAASA,IAEhC,KAAKqxD,GACD,OAAO,MAAKxxE,EAAZ,CAAmBmgB,QAASngB,EAAMmgB,QAAQpJ,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE5E,KAAKq6E,GACD,OAAO,MAAK3xE,EAAZ,CAAmBmgB,QAAS,KAEhC,KAAKsxD,GACD,OAAO,MAAKzxE,EAAZ,CAAmBghF,wBAAyBnL,EAAO/D,oBAEvD,KAAKJ,GACD,OAAO,MAAK1xE,EAAZ,CAAmBghF,wBAAyB,OAEhD,KAAKlnF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCnBPkhF,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCdZ,IAAMxL,GAA0C,CAC5C5nE,kBAAmBozE,GAAsC1yE,KACzD2yE,4BAA6B,KAC7B5S,cAAe,GACfF,MAAO,GACPC,UAAW,IA4EA8S,ICrEHC,GDqEGD,GAzEf,WAAsI,IAAlGphF,EAAiG,uDAA9D01E,GAAcG,EAAgD,uCACjI,OAAQA,EAAOp+E,MACX,KAAK21E,GACD,OAAO,MAAKptE,EAAZ,CAAmBuuE,cAAa,uBAAOvuE,EAAMuuE,eAAb,CAA4BsH,EAAOlG,0BAEvE,KAAKxC,GACD,OAAO,MAAKntE,EAAZ,CAAmBuuE,cAAe,KAEtC,KAAKzB,GACD,OAAO,MAAK9sE,EAAZ,CAAmBuuE,cAAc,GAAD,oBAAMvuE,EAAMuuE,eAAZ,CAA2BsH,EAAOlG,0BAEtE,KAAK5C,GACD,IAAM+I,EAAqB91E,EAAMuuE,cAAcwH,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOlG,sBAAsBr4E,MAClGi3E,EAAwCvuE,EAAMuuE,cAElD,OADAA,EAAcuH,GAAcD,EAAOlG,sBAC5B,MAAK3vE,EAAZ,CAAmBuuE,cAAeA,IAEtC,KAAKvB,GACD,OAAO,MAAKhtE,EAAZ,CAAmBuuE,cAAevuE,EAAMuuE,cAAcx3D,QAAO,SAAAzH,GAAC,OAAEA,EAAEhY,KAAOu+E,EAAOlG,sBAAsBr4E,QAG1G,KAAKm2E,GACD,OAAO,MAAKztE,EAAZ,CAAmBquE,MAAK,uBAAOruE,EAAMquE,OAAb,CAAoBwH,EAAOlG,0BAEvD,KAAKnC,GACD,OAAO,MAAKxtE,EAAZ,CAAmBquE,MAAO,KAE9B,KAAKhB,GACD,OAAO,MAAKrtE,EAAZ,CAAmBquE,MAAM,GAAD,oBAAMruE,EAAMquE,OAAZ,CAAmBwH,EAAOlG,0BAEtD,KAAKrC,GACD,IAAMwI,EAAqB91E,EAAMquE,MAAM0H,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOlG,sBAAsBr4E,MAC1FqpF,EAA+C3gF,EAAMquE,MAEzD,OADAsS,EAAqB7K,GAAcD,EAAOlG,sBACnC,MAAK3vE,EAAZ,CAAmBquE,MAAOsS,IAE9B,KAAKpT,GACD,OAAO,MAAKvtE,EAAZ,CAAmBquE,MAAOruE,EAAMquE,MAAMt3D,QAAO,SAAAzH,GAAC,OAAEA,EAAEhY,KAAOu+E,EAAOlG,sBAAsBr4E,QAG1F,KAAKw2E,GACD,OAAO,MAAK9tE,EAAZ,CAAmBsuE,UAAS,uBAAOtuE,EAAMsuE,WAAb,CAAwBuH,EAAOlG,0BAE/D,KAAK9B,GACD,OAAO,MAAK7tE,EAAZ,CAAmBsuE,UAAW,KAElC,KAAKZ,GACD,OAAO,MAAK1tE,EAAZ,CAAmBsuE,UAAU,GAAD,oBAAMtuE,EAAMsuE,WAAZ,CAAuBuH,EAAOlG,0BAE9D,KAAKhC,GACD,IAAMmI,EAAqB91E,EAAMsuE,UAAUyH,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOlG,sBAAsBr4E,MAC9FspF,EAA+C5gF,EAAMsuE,UAEzD,OADAsS,EAAqB9K,GAAcD,EAAOlG,sBACnC,MAAK3vE,EAAZ,CAAmBsuE,UAAWsS,IAElC,KAAKhT,GACD,OAAO,MAAK5tE,EAAZ,CAAmBsuE,UAAWtuE,EAAMsuE,UAAUv3D,QAAO,SAAAzH,GAAC,OAAEA,EAAEhY,KAAOu+E,EAAOlG,sBAAsBr4E,QAGlG,KAAK21E,GACD,OAAO,MAAKjtE,EAAZ,CAAmBmhF,4BAA6BtL,EAAOlG,wBAE3D,KAAKzC,GACD,OAAO,MAAKltE,EAAZ,CAAmBmhF,4BAA6B,OAEpD,KAAKrnF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCjEPqhF,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCfZ,IAAM3L,GAAuC,CACzC5nE,kBAAmBuzE,GAAmC7yE,KACtD8yE,yBAA0B,KAC1B/4C,SAAU,IAsCCg5C,IC3BHC,GD2BGD,GAnCf,WAAgI,IAA5FvhF,EAA2F,uDAA3D01E,GAAcG,EAA6C,uCAC3H,OAAQA,EAAOp+E,MACX,KAAKk7E,GAGL,KAAKN,GACD,OAAO,MAAKryE,EAAZ,CAAmBuoC,SAAS,GAAD,oBAAMvoC,EAAMuoC,UAAZ,CAAsBstC,EAAOhD,uBAE5D,KAAKP,GACD,IAAMwD,EAAqB91E,EAAMuoC,SAASwtC,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOhD,mBAAmBv7E,MAC1FixC,EAAgCvoC,EAAMuoC,SAE1C,OADAA,EAASutC,GAAcD,EAAOhD,mBACvB,MAAK7yE,EAAZ,CAAmBuoC,SAAUA,IAEjC,KAAKgqC,GACD,OAAO,MAAKvyE,EAAZ,CAAmBuoC,SAAUvoC,EAAMuoC,SAASxxB,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE9E,KAAKo7E,GACD,OAAO,MAAK1yE,EAAZ,CAAmBuoC,SAAU,KAEjC,KAAKiqC,GACD,OAAO,MAAKxyE,EAAZ,CAAmBshF,yBAA0BzL,EAAOhD,qBAExD,KAAKJ,GACD,OAAO,MAAKzyE,EAAZ,CAAmBshF,yBAA0B,OAEjD,KAAKxnF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCtBPwhF,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCdZ,IAAM9L,GAAuC,CACzC5nE,kBAAmB0zE,GAAmChzE,KACtDizE,yBAA0B,KAC1BthE,QAAS,IAsCEuhE,IC5BHC,GD4BGD,GAnCf,WAAgI,IAA5F1hF,EAA2F,uDAA3D01E,GAAcG,EAA6C,uCAC3H,OAAQA,EAAOp+E,MACX,KAAKy+C,GAGL,KAAKN,GACD,OAAO,MAAK51C,EAAZ,CAAmBmgB,QAAQ,GAAD,oBAAMngB,EAAMmgB,SAAZ,CAAqB01D,EAAOz/B,uBAE1D,KAAKP,GACD,IAAMigC,EAAqB91E,EAAMmgB,QAAQ41D,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOz/B,mBAAmB9+C,MACzF6oB,EAA+BngB,EAAMmgB,QAEzC,OADAA,EAAQ21D,GAAcD,EAAOz/B,mBACtB,MAAKp2C,EAAZ,CAAmBmgB,QAASA,IAEhC,KAAK21B,GACD,OAAO,MAAK91C,EAAZ,CAAmBmgB,QAASngB,EAAMmgB,QAAQpJ,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE5E,KAAK2+C,GACD,OAAO,MAAKj2C,EAAZ,CAAmBmgB,QAAS,KAEhC,KAAK41B,GACD,OAAO,MAAK/1C,EAAZ,CAAmByhF,yBAA0B5L,EAAOz/B,qBAExD,KAAKJ,GACD,OAAO,MAAKh2C,EAAZ,CAAmByhF,yBAA0B,OAEjD,KAAK3nF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCvBP2hF,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCbZ,IAAMjM,GAA2C,CAC7C5nE,kBAAmB6zE,GAAuCnzE,KAC1DozE,6BAA8B,KAC9BvR,wBAAyB,IAsCdwR,ICrCHC,GDqCGD,GAnCf,WAA4I,IAApG7hF,EAAmG,uDAA/D01E,GAAcG,EAAiD,uCACvI,OAAQA,EAAOp+E,MACX,KAAKo5E,GAGL,KAAKN,GACD,OAAO,MAAKvwE,EAAZ,CAAmBqwE,wBAAwB,GAAD,oBAAMrwE,EAAMqwE,yBAAZ,CAAqCwF,EAAOzF,2BAE1F,KAAKI,GACD,IAAMsF,EAAqB91E,EAAMqwE,wBAAwB0F,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOzF,uBAAuB94E,MAC7G+4E,EAAmDrwE,EAAMqwE,wBAE7D,OADAA,EAAwByF,GAAcD,EAAOzF,uBACtC,MAAKpwE,EAAZ,CAAmBqwE,wBAAyBA,IAEhD,KAAKI,GACD,OAAO,MAAKzwE,EAAZ,CAAmBqwE,wBAAyBrwE,EAAMqwE,wBAAwBt5D,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE5G,KAAKs5E,GACD,OAAO,MAAK5wE,EAAZ,CAAmBqwE,wBAAyB,KAEhD,KAAKK,GACD,OAAO,MAAK1wE,EAAZ,CAAmB4hF,6BAA8B/L,EAAOzF,yBAE5D,KAAKO,GACD,OAAO,MAAK3wE,EAAZ,CAAmB4hF,6BAA8B,OAErD,KAAK9nF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBChCP8hF,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,4BAAAA,Q,KCJZ,IAAMpM,GAA+C,CACjD5nE,kBAAmBg0E,GAA2CtzE,KAC9DuzE,iCAAkC,KAClChuB,6BAA8B,GAC9BE,yBAA0B,IAgEf+tB,OA7Df,WAAsJ,IAA5GhiF,EAA2G,uDAAnE01E,GAAcG,EAAqD,uCACjJ,OAAQA,EAAOp+E,MACX,KAAK47D,GAGL,KAAKN,GACD,OAAO,MAAK/yD,EAAZ,CAAmB+zD,6BAA6B,GAAD,oBAAM/zD,EAAM+zD,8BAAZ,CAA0C8hB,EAAO/hB,+BAEpG,KAAKd,GACD,IAAM8iB,EAAqB91E,EAAM+zD,6BAA6BgiB,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO/hB,2BAA2Bx8D,MACtHy8D,EAA4D/zD,EAAM+zD,6BAEtE,OADAA,EAA6B+hB,GAAcD,EAAO/hB,2BAC3C,MAAK9zD,EAAZ,CAAmB+zD,6BAA8BA,IAErD,KAAKd,GACD,OAAO,MAAKjzD,EAAZ,CAAmB+zD,6BAA8B/zD,EAAM+zD,6BAA6Bh9C,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAEtH,KAAK87D,GACD,OAAO,MAAKpzD,EAAZ,CAAmB+zD,6BAA8B,KAErD,KAAKb,GACD,OAAO,MAAKlzD,EAAZ,CAAmB+hF,iCAAkClM,EAAO/hB,6BAEhE,KAAKX,GACD,OAAO,MAAKnzD,EAAZ,CAAmB+hF,iCAAkC,OAGzD,KAAKnuB,GAGL,KAAKN,GACD,OAAO,MAAKtzD,EAAZ,CAAmBi0D,yBAAyB,GAAD,oBAAMj0D,EAAMi0D,0BAAZ,CAAsC4hB,EAAO/hB,+BAE5F,KAAKP,GACD,IAAMuiB,EAAqB91E,EAAMi0D,yBAAyB8hB,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO/hB,2BAA2Bx8D,MAClH28D,EAAwDj0D,EAAMi0D,yBAElE,OADAA,EAAyB6hB,GAAcD,EAAO/hB,2BACvC,MAAK9zD,EAAZ,CAAmBi0D,yBAA0BA,IAEjD,KAAKT,GACD,OAAO,MAAKxzD,EAAZ,CAAmBi0D,yBAA0Bj0D,EAAMi0D,yBAAyBl9C,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE9G,KAAKq8D,GACD,OAAO,MAAK3zD,EAAZ,CAAmBi0D,yBAA0B,KAEjD,KAAKR,GACD,OAAO,MAAKzzD,EAAZ,CAAmB+hF,iCAAkClM,EAAO/hB,6BAEhE,KAAKJ,GACD,OAAO,MAAK1zD,EAAZ,CAAmB+hF,iCAAkC,OAGzD,KAAKjoF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,6jBC/DnB,IAAM01E,GAA4B,CAC9B5nE,kBAAmBkoD,GAAwBxnD,KAC3CyoD,cAAe,KACfnC,OAAQ,IAsCGmtB,IC1CHC,GD0CGD,GAnCf,WAA6F,IAAtEjiF,EAAqE,uDAAhD01E,GAAcG,EAAkC,uCACxF,OAAQA,EAAOp+E,MACX,KAAKm/D,GAGL,KAAKN,GACD,OAAO,MAAKt2D,EAAZ,CAAmB80D,OAAO,GAAD,oBAAM90D,EAAM80D,QAAZ,CAAoB+gB,EAAO/e,UAExD,KAAKP,GACD,IAAMuf,EAAqB91E,EAAM80D,OAAOihB,WAAU,SAAAC,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAO/e,MAAMx/D,MAC3Ew9D,EAAmB90D,EAAM80D,OAE7B,OADAA,EAAOghB,GAAcD,EAAO/e,MACrB,MAAK92D,EAAZ,CAAmB80D,OAAQA,IAE/B,KAAK0B,GACD,OAAO,MAAKx2D,EAAZ,CAAmB80D,OAAQ90D,EAAM80D,OAAO/9C,QAAO,SAAAi/D,GAAE,OAAIA,EAAG1+E,KAAOu+E,EAAOv+E,QAE1E,KAAKq/D,GACD,OAAO,MAAK32D,EAAZ,CAAmB80D,OAAQ,KAE/B,KAAK2B,GACD,OAAO,MAAKz2D,EAAZ,CAAmBi3D,cAAe4e,EAAO/e,QAE7C,KAAKJ,GACD,OAAO,MAAK12D,EAAZ,CAAmBi3D,cAAe,OAEtC,KAAKn9D,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,ukBCrCPkiF,O,eAAAA,I,mBAAAA,I,eAAAA,I,mBAAAA,I,2BAAAA,I,sBAAAA,Q,KCCZ,IAAMxM,GAAsC,CACxC5nE,kBAAmBo0E,GAAkC1zE,KACrD2zE,wBAAyB,KACzBle,mBAAoB,IAsCTme,OAnCf,WAA6H,IAA1FpiF,EAAyF,uDAA1D01E,GAAcG,EAA4C,uCACxH,OAAQA,EAAOp+E,MACX,KAAK0tE,GAGL,KAAKN,GACD,OAAO,MAAK7kE,EAAZ,CAAmBikE,mBAAmB,GAAD,oBAAMjkE,EAAMikE,oBAAZ,CAAgC4R,EAAOxQ,sBAEhF,KAAKP,GACD,IAAMgR,EAAqB91E,EAAMikE,mBAAmB8R,WAAU,SAAAC,GAAE,OAAIA,EAAGv4D,YAAco4D,EAAOxQ,kBAAkB5nD,aAC1GwmD,EAAyCjkE,EAAMikE,mBAEnD,OADAA,EAAmB6R,GAAcD,EAAOxQ,kBACjC,MAAKrlE,EAAZ,CAAmBikE,mBAAoBA,IAE3C,KAAKc,GACD,OAAO,MAAK/kE,EAAZ,CAAmBikE,mBAAoBjkE,EAAMikE,mBAAmBltD,QAAO,SAAAi/D,GAAE,OAAIA,EAAGv4D,YAAco4D,EAAOp4D,eAEzG,KAAKynD,GACD,OAAO,MAAKllE,EAAZ,CAAmBikE,mBAAoB,KAE3C,KAAKe,GACD,OAAO,MAAKhlE,EAAZ,CAAmBmiF,wBAAyBtM,EAAOxQ,oBAEvD,KAAKJ,GACD,OAAO,MAAKjlE,EAAZ,CAAmBmiF,wBAAyB,OAEhD,KAAKroF,GACD,OAAO,MAAKkG,EAAZ,CAAmB8N,kBAAmB+nE,EAAOr+E,QAEjD,QACI,OAAOwI,I,+NC+BnB,IAAM01E,GAA+B,CACjCtqE,KAAM,CAACE,KAAM,iBAAaC,QAAS,KAYvC,IA0Ee82E,GA1E2BC,aAAgB,CAACj3E,KAT3D,WAAiG,IAA5ErL,EAA2E,uDAAnD01E,GAAcG,EAAqC,uCAC5F,OAAQA,EAAOp+E,MACX,KAAK+T,GACD,O,2VAAO,IAAKxL,EAAZ,CAAmBoL,KAAM,CAACE,KAAMuqE,EAAOvqE,KAAMC,QAASsqE,EAAOtqE,WACjE,QACI,OAAOvL,IAKfmhB,SAAUy0D,GACVzwE,cAAe8wE,GACfvgE,MAAOygE,GACPE,OAAQC,GACRr2E,QAASu2E,GACTtzD,UAAWuzD,GACX3wD,QAAS4wD,GACTrnE,UAAWwnE,GACXU,eAAgBC,GAChBnwD,UAAWqwD,GACXhuD,WAAYiuD,GACZzsD,SAAU0sD,GACVz3D,QAAS03D,GACTznD,iBAAkBgqD,GAClB7xC,SAAUuvC,GACVnlC,kBAAmBolC,GACnBnlC,mBAAoBslC,GACpB3pC,oBAAqB8pC,GACrBxlC,wBAAyB2lC,GACzBn4C,eAAgBs4C,GAChB9yB,eAAgBkzB,GAChB/tE,6BAA8B+0E,GAC9BnxD,UAAWoqD,GACXrjE,iCAAkCsjE,GAClCrgD,oBAAqBygD,GACrBhkD,eAAgBmkD,GAChB7iC,gBAAiBgjC,GACjBvhC,uBAAwB0hC,GACxB38B,eAAgB68B,GAChBj5B,iBAAkBo5B,GAClBxsE,wBAAyB0sE,GACzB/kD,SAAUilD,GACV3yB,eAAgB8yB,GAChB1vB,UAAW2vB,GACX9yB,qBAAsBizB,GACtBh9C,UAAWm9C,GACXjgD,aAAcogD,GACd/gD,eAAgBkhD,GAChBtwB,gBAAiBywB,GACjB51B,gCAAiC+1B,GACjCj2B,kBAAmB28B,GACnB10B,UAAW20B,GACX/yC,+BAAgC+sC,GAChCU,6BAA8BC,GAC9B7qB,wBAAyBkrB,GACzB1tC,oBAAqB6tC,GACrBpqE,sBAAuBuqE,GACvB3nB,WAAY+nB,GACZ71E,wBAAyBg2E,GACzBj2E,QAASo2E,GACTza,iBAAkB0e,GAClBjc,gBAAiBoY,GACjBrf,eAAgBwf,GAChB3c,iBAAkB8c,GAClBG,MAAOC,GACP9V,YAAaiW,GACb57E,SAAU+7E,GACV8C,gBAAiBxC,GACjBrV,YAAayV,GACbtS,uBAAwByS,GACxBnR,kCAAmCwR,GACnC5O,mBAAoB+O,GACpBtR,sBAAuByR,GACvBvO,mBAAoB0O,GACpBnrC,mBAAoBsrC,GACpBrR,wBAAyBwR,GACzB/tB,2BAA4BkuB,GAC5BltB,OAAQmtB,GACRhe,mBAAoBme,KCvJlBO,GAAeC,aAAYP,GAAcQ,aAC3CC,OAGJH,GAAMI,WAAU,eACDJ,UCEfK,IAAS3lF,OACL,kBAAC,IAAD,CAAUslF,MAAOA,IACb,kBAAC,GAAD,OAENM,SAASC,eAAe,S1HyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5nF,MAAK,SAAA6nF,GACjCA,EAAaC,iB","file":"static/js/main.5d7fc4b3.chunk.js","sourcesContent":["import * as crypto from 'crypto';\r\n\r\nexport function postMomo(total_price, ids) {\r\n    //https://developers.momo.vn/#/docs/en/aiov2/?id=payment-method\r\n    //parameters\r\n    var partnerCode = \"MOMOXF6D20220917\";\r\n    var accessKey = \"HPMTKkWVbUl3tgTL\";\r\n    var secretkey = \"PBPj1LDu4cIIHE0FKVKJv1B4sRsOT7LU\";\r\n    var requestId = partnerCode + new Date().getTime();\r\n    var orderId = requestId;\r\n    var orderInfo = \"pay with MoMo\";\r\n    var ipnUrl = \"http://localhost:8080/api/v1/user-register-join-semester/payment?ids=\" + ids.toString();\r\n\r\n    console.log(\"ipnUrl\", ipnUrl)\r\n    var redirectUrl = \"http://localhost:3000/payment-successfull?ids=\" + ids.toString();\r\n    // var ipnUrl = redirectUrl = \"https://webhook.site/454e7b77-f177-4ece-8236-ddf1c26ba7f8\";\r\n    var amount = 1000;\r\n    var requestType = \"captureWallet\"\r\n    var extraData = \"\"; //pass empty value if your merchant does not have stores\r\n\r\n    //before sign HMAC SHA256 with format\r\n    //accessKey=$accessKey&amount=$amount&extraData=$extraData&ipnUrl=$ipnUrl&orderId=$orderId&orderInfo=$orderInfo&partnerCode=$partnerCode&redirectUrl=$redirectUrl&requestId=$requestId&requestType=$requestType\r\n    var rawSignature = \"accessKey=\" + accessKey + \"&amount=\" + amount + \"&extraData=\" + extraData + \"&ipnUrl=\" + ipnUrl + \"&orderId=\" + orderId + \"&orderInfo=\" + orderInfo + \"&partnerCode=\" + partnerCode + \"&redirectUrl=\" + redirectUrl + \"&requestId=\" + requestId + \"&requestType=\" + requestType \r\n    //puts raw signature\r\n    console.log(\"--------------------RAW SIGNATURE----------------\")\r\n    console.log(rawSignature)\r\n    var signature = crypto.createHmac('sha256', secretkey)\r\n        .update(rawSignature)\r\n        .digest('hex');\r\n    console.log(\"--------------------SIGNATURE----------------\")\r\n    console.log(signature)\r\n\r\n    //json object send to MoMo endpoint\r\n    const requestBody = JSON.stringify({\r\n        partnerCode: partnerCode,\r\n        accessKey: accessKey,\r\n        requestId: requestId,\r\n        amount: amount,\r\n        orderId: orderId,\r\n        orderInfo: orderInfo,\r\n        redirectUrl: redirectUrl,\r\n        ipnUrl: ipnUrl,\r\n        extraData: extraData,\r\n        requestType: requestType,\r\n        signature: signature,\r\n        lang: 'en'\r\n    });\r\n    //Send the request and get the response\r\n    //Create the HTTPS objects\r\n    const https = require('https');\r\n    const options = {\r\n        hostname: 'test-payment.momo.vn',\r\n        port: 443,\r\n        path: '/v2/gateway/api/create',\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'charset': 'UTF-8',\r\n            'Content-Length': Buffer.byteLength(requestBody)\r\n        }\r\n    }\r\n    //Send the request and get the response\r\n    const req = https.request(options, res => {\r\n        console.log(`Status: ${res.statusCode}`);\r\n        console.log(`Headers: ${JSON.stringify(res.headers)}`);\r\n        res.setEncoding('utf8');\r\n        res.on('data', (body) => {\r\n            console.log('Body: ');\r\n            console.log(body);\r\n            console.log('payUrl: ');\r\n            window.open(JSON.parse(body).payUrl, '_blank');\r\n            console.log(JSON.parse(body).payUrl);\r\n        });\r\n        res.on('end', () => {\r\n            console.log('No more data in response.');\r\n        });\r\n    })\r\n\r\n    req.on('error', (e) => {\r\n        console.log(`problem with request: ${e.message}`);\r\n    });\r\n    // write data to request body\r\n    console.log(\"Sending....\")\r\n    req.write(requestBody);\r\n    req.end();\r\n\r\n}","import React, { useState, ChangeEvent } from \"react\";\nimport { TextInputProps } from \"../types/TextInput.types\";\n\nfunction TextInput(props: TextInputProps): JSX.Element {\n    const [touched, setTouch] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [htmlClass, setHtmlClass] = useState(\"\");\n    const [, setValue] = useState(\"\");\n\n\n    function onValueChanged(event: ChangeEvent<HTMLInputElement>): void {\n        let [error, validClass, elementValue] = [\"\", \"\", event.target.value];\n\n        [error, validClass] = (!elementValue && props.required) ?\n            [\"Value cannot be empty\", \"is-invalid\"] : [\"\", \"is-valid\"];\n\n        if (!error) {\n            [error, validClass] = (props.maxLength && elementValue && elementValue.length > (props.maxLength)) ?\n            [`Value can't have more than ${props.maxLength} characters`, \"is-invalid\"] : [\"\", \"is-valid\"];\n        }\n\n        props.onChange({ value: elementValue, error: error, touched: touched, field: props.field });\n\n        setTouch(true);\n        setError(error);\n        setHtmlClass(validClass);\n        setValue(elementValue);\n    }\n\n    return (\n        <div>\n            <label htmlFor={props.id.toString()}>{props.label}</label>\n            <input\n                value={props.value}\n                type={props.type}\n                onChange={onValueChanged}\n                className={`form-control ${props.inputClass} ${htmlClass}`}\n                id={`id_${props.label}`}\n                placeholder={props.placeholder} />\n            {error ?\n                <div className=\"invalid-feedback\">\n                    {error}\n                </div> : null\n            }\n        </div>\n    );\n}\n\nexport default TextInput;","export const LOG_IN: string = \"LOG_IN\";\nexport const LOG_OUT: string = \"LOG_OUT\";\n\nexport function login(username: string): ILogInActionType {\n    return { type: LOG_IN, username: username };\n}\n\nexport function logout(): ILogOutActionType {\n    return { type: LOG_OUT};\n}\n\ninterface ILogInActionType { type: string, username: string };\ninterface ILogOutActionType { type: string };\n","import { IUser, UserModificationStatus } from \"../models/user.interface\";\n\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\n\n//Admin\nexport const ADD_ADMIN: string = \"ADD_ADMIN\";\nexport const EDIT_ADMIN: string = \"EDIT_ADMIN\";\nexport const REMOVE_ADMIN: string = \"REMOVE_ADMIN\";\n\n//Teacher\nexport const REMOVE_TEACHER_ALL: string = \"REMOVE_TEACHER_ALL\";\nexport const INITIAL_TEACHER: string = \"INITIAL_TEACHER\";\nexport const ADD_TEACHER: string = \"ADD_TEACHER\";\nexport const REMOVE_TEACHER: string = \"REMOVE_TEACHER\";\nexport const EDIT_TEACHER: string = \"EDIT_TEACHER\";\n\n\n//Student\nexport const REMOVE_STUDENT_ALL: string = \"REMOVE_STUDENT_ALL\";\nexport const INITIAL_STUDENT: string = \"INITIAL_STUDENT\";\nexport const ADD_STUDENT: string = \"ADD_STUDENT\";\nexport const EDIT_STUDENT: string = \"EDIT_STUDENT\";\nexport const REMOVE_STUDENT: string = \"REMOVE_STUDENT\";\n\n//Parent\nexport const REMOVE_PARENT_ALL: string = \"REMOVE_PARENT_ALL\";\nexport const INITIAL_PARENT: string = \"INITIAL_PARENT\";\nexport const ADD_PARENT: string = \"ADD_PARENT\";\nexport const EDIT_PARENT: string = \"EDIT_PARENT\";\nexport const REMOVE_PARENT: string = \"REMOVE_PARENT\";\n\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\nexport const CHANGE_USER_PENDING_EDIT: string = \"CHANGE_USER_PENDING_EDIT\";\nexport const CLEAR_USER_PENDING_EDIT: string = \"CLEAR_USER_PENDING_EDIT\";\n\nexport function fetchDataRequest() {\n    return {\n        type: FETCH_DATA_REQUEST\n    };\n}\n\nexport function fetchDataSuccess(user: IUser) {\n    return {\n        type: FETCH_DATA_SUCCESS,\n        user\n    };\n}\n\nexport function fetchDataError(error: any) {\n    return {\n        type: FETCH_DATA_ERROR,\n        payload: { error }\n    };\n}\n\nexport function initialTeacher(user: IUser): IInitialUserTeacherActionType {\n    return { type: INITIAL_TEACHER, user: user };\n}\n\nexport function removeTeacherAll(): IRemoveUserTeacherAllActionType {\n    return { type: REMOVE_TEACHER_ALL };\n}\n\nexport function initialStudent(user: IUser): IInitialUserStudentActionType {\n    return { type: INITIAL_STUDENT, user: user };\n}\n\nexport function removeStudentAll(): IRemoveUserStudentAllActionType {\n    return { type: REMOVE_STUDENT_ALL };\n}\n\nexport function initialParent(user: IUser): IInitialUserParentActionType {\n    return { type: INITIAL_PARENT, user: user };\n}\n\nexport function removeParentAll(): IRemoveUserParentAllActionType {\n    return { type: REMOVE_PARENT_ALL };\n}\n\nexport function addAdmin(user: IUser): IAddAdminActionType {\n    return { type: ADD_ADMIN, user: user };\n}\n\nexport function editAdmin(user: IUser): IEditAdminActionType {\n    return { type: EDIT_ADMIN, user: user };\n}\n\nexport function removeAdmin(id: any): IRemoveAdminActionType {\n    return { type: REMOVE_ADMIN, id: id };\n}\n\nexport function addTeacher(user: IUser): IAddTeacherActionType {\n    return { type: ADD_TEACHER, user: user };\n}\n\nexport function editTeacher(user: IUser): IEditTeacherActionType {\n    return { type: EDIT_TEACHER, user: user };\n}\n\nexport function removeTeacher(id: any): IRemoveTeacherActionType {\n    return { type: REMOVE_TEACHER, id: id };\n}\n\nexport function addStudent(user: IUser): IAddStudentActionType {\n    return { type: ADD_STUDENT, user: user };\n}\n\nexport function editStudent(user: IUser): IEditStudentActionType {\n    return { type: EDIT_STUDENT, user: user };\n}\n\nexport function removeStudent(id: any): IRemoveStudentActionType {\n    return { type: REMOVE_STUDENT, id: id };\n}\n\nexport function addParent(user: IUser): IAddParentActionType {\n    return { type: ADD_PARENT, user: user };\n}\n\nexport function editParent(user: IUser): IEditParentActionType {\n    return { type: EDIT_PARENT, user: user };\n}\n\nexport function removeParent(id: any): IRemoveParentActionType {\n    return { type: REMOVE_PARENT, id: id };\n}\n\nexport function changeSelectedUser(user: IUser): IChangeSelectedUserActionType {\n    return { type: CHANGE_USER_PENDING_EDIT, user: user };\n}\n\nexport function clearSelectedUser(): IClearSelectedUserActionType {\n    return { type: CLEAR_USER_PENDING_EDIT };\n}\n\nexport function setModificationState(value: UserModificationStatus): ISetModificationStateActionType {\n    return { type: SET_MODIFICATION_STATE, value: value };\n}\n\n// Admin\ninterface IAddAdminActionType { type: string, user: IUser };\ninterface IEditAdminActionType { type: string, user: IUser };\ninterface IRemoveAdminActionType { type: string, id: any };\n\n// Teacher\ninterface IInitialUserTeacherActionType {type: string, user: IUser};\ninterface IRemoveUserTeacherAllActionType { type: string };\ninterface IAddTeacherActionType { type: string, user: IUser };\ninterface IEditTeacherActionType { type: string, user: IUser };\ninterface IRemoveTeacherActionType { type: string, id: any };\ninterface IChangeSelectedTeacherActionType { type: string, user: IUser };\ninterface IClearSelectedTeacherActionType { type: string };\n\n//Student\ninterface IInitialUserStudentActionType {type: string, user: IUser};\ninterface IRemoveUserStudentAllActionType { type: string };\ninterface IAddStudentActionType { type: string, user: IUser };\ninterface IEditStudentActionType { type: string, user: IUser };\ninterface IRemoveStudentActionType { type: string, id: any };\n\n//Parent\ninterface IInitialUserParentActionType {type: string, user: IUser};\ninterface IRemoveUserParentAllActionType { type: string };\ninterface IAddParentActionType { type: string, user: IUser };\ninterface IEditParentActionType { type: string, user: IUser };\ninterface IRemoveParentActionType { type: string, id: any };\n\n\ninterface ISetModificationStateActionType { type: string, value:  UserModificationStatus};\ninterface IChangeSelectedUserActionType { type: string, user: IUser };\ninterface IClearSelectedUserActionType { type: string };","import { logout } from \"../../../store/actions/account.actions\";\r\nimport { putStatusUser } from \"../User/UpdateStatusUser\";\r\n\r\nexport function postRefreshToken() {\r\n    var refresh_token = localStorage.getItem(\"refresh_token\");\r\n\r\n    return (dispatch: any) => {\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/auth/refresh`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        \"refreshToken\":refresh_token\r\n                    })\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 500){\r\n                        let id = localStorage.getItem('id');\r\n                        dispatch(putStatusUser(id, {\r\n                            status: null\r\n                          }))\r\n                        localStorage.removeItem('access_token') // Authorization\r\n                        localStorage.removeItem('refresh_token')\r\n                        localStorage.removeItem('username')\r\n                        localStorage.removeItem('role_privilege')\r\n                        localStorage.removeItem('id')\r\n                        localStorage.removeItem('contest_id')\r\n                        localStorage.removeItem('schedule_id')\r\n                        dispatch(logout())\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                return response.json()\r\n            })\r\n            .then (data => {\r\n                localStorage.removeItem('access_token') // Authorization\r\n                localStorage.removeItem('refresh_token')\r\n                localStorage.setItem('access_token', data.accessToken) // Authorization\r\n                localStorage.setItem('refresh_token', data.refreshToken)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataRequest, fetchDataSuccess, fetchDataError } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function putStatusUser(id: any, data: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/status/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putStatusUser(id,data))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                console.log(id)\r\n                dispatch(fetchDataSuccess(data))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport { login } from \"../../../store/actions/account.actions\";\r\nimport { toast } from 'react-toastify';\r\nimport { putStatusUser } from \"../User/UpdateStatusUser\";\r\n\r\nexport function postAut(username: string, password: string, changeRouteHome: any, id: any) {\r\n    \r\n    return (dispatch: any) => {\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/auth`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                'Access-Control-Allow-Credentials': 'true'\r\n            },\r\n            body: JSON.stringify({\r\n                \"username\": username,\r\n                \"password\": password\r\n            })\r\n        }\r\n        )\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw Error(response.statusText);\r\n                }\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                localStorage.clear();\r\n                localStorage.setItem('access_token', data.accessToken) // Authorization\r\n                localStorage.setItem('refresh_token', data.refreshToken)\r\n                localStorage.setItem('username', username)\r\n                const token: string = data.accessToken;\r\n                const decoded: any = jwt_decode(token);\r\n                console.log(decoded)\r\n                localStorage.setItem('role_privilege', decoded.role_privilege)\r\n                localStorage.setItem('id', decoded.id)\r\n                localStorage.setItem('link_profile', decoded.profile_image_url)\r\n                dispatch(login(username));\r\n                toast.update(id, { render: \"Đăng nhập thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                setTimeout(function () {\r\n                    changeRouteHome(true);\r\n                }, 2000); \r\n                let openRequest = indexedDB.open(\"firebase-messaging-database\", 1);\r\n                openRequest.onerror = function() {\r\n                    console.error(\"Error\", openRequest.error);\r\n                };\r\n                \r\n                openRequest.onsuccess = function() {\r\n                    let db = openRequest.result;\r\n                    db.onversionchange = function() {\r\n                        db.close();\r\n                        alert(\"Database is outdated, please reload the page.\")\r\n                    };\r\n                    // continue working with database using db object\r\n                    console.log(db)\r\n                    const txn = db.transaction('firebase-messaging-store', 'readwrite');\r\n                    const store = txn.objectStore('firebase-messaging-store');\r\n\r\n                    let query = store.getAll();\r\n\r\n                    query.onerror = function() {\r\n                        console.error(\"Error\", openRequest.error);\r\n                    };\r\n\r\n                    query.onsuccess = (event: any) => {\r\n                        if (!event.target.result) {\r\n                            console.log(`The firebase device token with 0 not found`);\r\n                        } else {\r\n                            console.log(event.target.result);\r\n                            let token_object = event.target.result[0];\r\n                            dispatch(putStatusUser(localStorage.getItem('id'), {\r\n                                status: token_object.token\r\n                            }))\r\n                        }\r\n                    };\r\n                };            \r\n            })\r\n            .catch(error => {\r\n                toast.update(id, { render: \"Đăng nhập không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch } from \"react\";\nimport { OnChangeModel } from \"../../common/types/Form.types\";\nimport { useDispatch } from \"react-redux\";\nimport TextInput from \"../../common/components/TextInput\";\nimport '../../assets/css/Login.css'\nimport { postAut } from \"../../common/service/Aut/Login\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useHistory } from \"react-router-dom\";\n\nconst Login: React.FC = () => {\n  const dispatch: Dispatch<any> = useDispatch();\n  const history = useHistory()\n\n  const [formState, setFormState] = useState({\n    username: { error: \"\", value: \"\" },\n    password: { error: \"\", value: \"\" }\n  });\n\n  function changeRouteHome(value: boolean) {\n    if (value === true){\n      history.push('/')\n    }\n  }\n\n  function routeRegister() {\n      history.push('/register')\n  }\n\n  function routeForgetPassword() {\n    history.push('/forgot-password')\n}\n\n  function hasFormValueChanged(model: OnChangeModel): void {\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\n  }\n\n  function submit(e: FormEvent<HTMLFormElement>): void {\n    e.preventDefault();\n    if(isFormInvalid()) { return; }\n    const id = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\n      position: toast.POSITION.TOP_CENTER\n    });\n    dispatch(postAut(formState.username.value, formState.password.value, changeRouteHome, id))\n  }\n\n  function isFormInvalid() {\n    return (formState.username.error || formState.password.error\n      || !formState.username.value || !formState.password.value);\n  }\n\n  function getDisabledClass(): string {\n    let isError: boolean = isFormInvalid() as boolean;\n    return isError ? \"disabled\" : \"\";\n  }\n\n  const changeRoute = () => {\n    history.push('/landing-page')\n  }\n\n  return (\n\n    <div className=\"container-fluid \" id=\"login-page\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-xl-10 col-lg-10 col-md-9\">\n          <h2 id=\"text-logo\" onClick={changeRoute}>KidsDrawing</h2>\n        </div>\n      </div>\n      <ToastContainer />\n      <div className=\"row justify-content-center\">\n        <div className=\"col-xl-10 col-lg-12 col-md-9\">\n          <div className=\"card o-hidden border-0  my-5\">\n            <div className=\"card-body p-0\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 d-none d-lg-block text-center\" id=\"image-login-page\">\n                  <img src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1667290306/o0ymcs4lblpy2hfmisyq.png\" alt=\"First slide\" />\n                </div>\n                <div className=\"col-lg-6 shadow-lg\">\n                  <div className=\"p-5\">\n                    <div className=\"text-center\">\n                      <h1 className=\"h4 text-gray-900 mb-4\">Đăng nhập</h1>\n                    </div>\n                    <form className=\"user\" onSubmit={submit}>\n                      <div className=\"form-group\">\n\n                        <TextInput id=\"input_username\"\n                          field=\"username\"\n                          value={formState.username.value}\n                          onChange={hasFormValueChanged}\n                          required={true}\n                          maxLength={100}\n                          label=\"Tên đăng nhập\"\n                          placeholder=\"\" />\n                      </div>\n                      <div className=\"form-group\">\n                        <TextInput id=\"input_password\"\n                          field=\"password\"\n                          value={formState.password.value}\n                          onChange={hasFormValueChanged}\n                          required={true}\n                          maxLength={100}\n                          type=\"password\"\n                          label=\"Mật khẩu\"\n                          placeholder=\"\" />\n                      </div>\n                      <div className=\"form-group\">\n                        <div className=\"custom-control custom-checkbox small\">\n                          <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck\" />\n                          <label className=\"custom-control-label\"\n                            htmlFor=\"customCheck\">Nhớ mật khẩu</label>\n                        </div>\n                      </div>\n                      <button\n                        className={`btn btn-primary btn-user btn-block ${getDisabledClass()}`}\n                        type=\"submit\">\n                        Đăng nhập\n                      </button>\n                    </form>\n                    <div className=\"justify-content-center text-center\">\n                      <p className=\"link\" style={{color: '#0066FF'}} onClick={() => {routeForgetPassword()}}>Quên mật khẩu?</p>\n                    </div>\n                    <div className=\"justify-content-center text-center\">\n                      <p>Bạn chưa có tài khoản? <span style={{color: '#0066FF'}}><span className=\"link\" style={{color: '#0066FF'}} onClick={() => {routeRegister()}}>Đăng kí</span></span></p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import { Route, RouteProps } from \"react-router\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { IStateType } from \"../../store/models/root.interface\";\nimport { Redirect } from \"react-router-dom\";\n\n\nexport function PrivateRoute({ children, ...rest }: RouteProps): JSX.Element {\n\n    useSelector((state: IStateType) => state.account);\n\n    return (\n        <Route\n            {...rest}\n            render={() =>\n                localStorage.getItem('username') ? (\n                    children\n                ) : <Redirect\n                to={{\n                    pathname: \"/auth\"\n                }}\n            />\n            }\n        />\n    );\n}","\r\n//import useState hook to create menu collapse state\r\nimport React, { useState } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//import react pro sidebar components\r\nimport {\r\n  ProSidebar,\r\n  Menu,\r\n  SubMenu,\r\n  MenuItem,\r\n  SidebarHeader,\r\n  SidebarFooter,\r\n  SidebarContent,\r\n} from \"react-pro-sidebar\";\r\n\r\n//import icons from react icons\r\nimport { FaList, FaRegHeart } from \"react-icons/fa\";\r\nimport { FiHome, FiLogOut, FiArrowLeftCircle, FiArrowRightCircle } from \"react-icons/fi\";\r\nimport { RiPencilLine } from \"react-icons/ri\";\r\nimport { BiCog } from \"react-icons/bi\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\nimport { FaChild } from \"react-icons/fa\";\r\nimport { RiParentFill } from \"react-icons/ri\";\r\nimport { BsMap } from \"react-icons/bs\";\r\nimport { AiOutlineBook, AiOutlineFileText } from \"react-icons/ai\";\r\nimport { FaPaintBrush } from \"react-icons/fa\";\r\nimport { MdSchool } from \"react-icons/md\";\r\nimport { GiVideoConference } from \"react-icons/gi\";\r\nimport { BsCashCoin } from \"react-icons/bs\";\r\nimport { SiGoogletagmanager } from \"react-icons/si\"\r\nimport { RiCompassDiscoverFill } from \"react-icons/ri\"\r\n\r\n\r\n//import sidebar css from react-pro-sidebar module and our custom css \r\nimport \"react-pro-sidebar/dist/css/styles.css\";\r\nimport \"./Header.css\";\r\n\r\n\r\nconst Header = () => {\r\n\r\n  //create initial menuCollapse state using useState hook\r\n  const [menuCollapse, setMenuCollapse] = useState(false)\r\n\r\n  var role_privilege = localStorage.getItem('role_privilege')\r\n  var rolePrivilege = []\r\n  var roleUser = \"\"\r\n  if (role_privilege !== null) {\r\n      rolePrivilege = role_privilege.split(',')\r\n      roleUser = rolePrivilege[0]\r\n  }\r\n\r\n  //create a custom function that will change menucollapse state from false to true and true to false\r\n  const menuIconClick = () => {\r\n    //condition checking to change state from true to false and vice versa\r\n    menuCollapse ? setMenuCollapse(false) : setMenuCollapse(true);\r\n  };\r\n\r\n  const [active1, setActive1] = useState(true);\r\n  const [active2, setActive2] = useState(false);\r\n  const [active3, setActive3] = useState(false);\r\n  const [active4, setActive4] = useState(false);\r\n  const [active5, setActive5] = useState(false);\r\n  const [active6, setActive6] = useState(false);\r\n  const [active7, setActive7] = useState(false);\r\n  const [active8, setActive8] = useState(false);\r\n  const [active9, setActive9] = useState(false);\r\n  const [active10, setActive10] = useState(false);\r\n  const [active11, setActive11] = useState(false);\r\n  const [active12, setActive12] = useState(false);\r\n  const [active13, setActive13] = useState(false);\r\n  const [active14, setActive14] = useState(false);\r\n  const [active15, setActive15] = useState(false);\r\n  const [active16, setActive16] = useState(false);\r\n  const [active17, setActive17] = useState(false);\r\n\r\n  if (roleUser === 'ADMIN_USER') {\r\n    return (\r\n      <>\r\n        <div id=\"collapseMenu\" className=\"navbar-nav admin-navbar-nav bg-gradient-primary-green sidebar-dark accordion\">\r\n          {/* collapsed props to change menu size using menucollapse state */}\r\n          <ProSidebar collapsed={menuCollapse}>\r\n            <SidebarHeader>\r\n              <div className=\"logotext\">\r\n                {/* small and big change using menucollapse state */}\r\n                <p>{menuCollapse ? \"\" : \"KidsDrawing\"}</p>\r\n              </div>\r\n              <div className=\"closemenu\" onClick={menuIconClick}>\r\n                {/* changing menu collapse icon on click */}\r\n                {menuCollapse ? (\r\n                  <FiArrowRightCircle />\r\n                ) : (\r\n                  <FiArrowLeftCircle />\r\n                )}\r\n              </div>\r\n            </SidebarHeader>\r\n            <SidebarContent>\r\n              <Menu iconShape=\"square\">\r\n                <MenuItem active={active1} icon={<FiHome />}>\r\n                  <Link to={`/home`} className={active1 ? \"link-active\" : \"not-active\"} onClick={() => {\r\n                    if (active1 === false) {\r\n                      setActive1(true);\r\n                      setActive2(false);\r\n                      setActive3(false);\r\n                      setActive4(false);\r\n                      setActive5(false);\r\n                      setActive6(false);\r\n                      setActive7(false);\r\n                      setActive8(false);\r\n                      setActive9(false);\r\n\r\n                      setActive10(false);\r\n                      setActive11(false);\r\n                      setActive12(false);\r\n                      setActive13(false);\r\n                      setActive14(false);\r\n                      setActive15(false);\r\n                      setActive16(false);\r\n                      setActive17(false);\r\n                    }\r\n                  }}>\r\n                    Trang chủ\r\n                  </Link>\r\n                </MenuItem>\r\n                <SubMenu active={active2} icon={<FaList />} title=\"Giáo vụ\" color=\"#ffffff\" className={active2 ? \"link-active\" : \"not-active\"}>\r\n                  <MenuItem icon={<AiOutlineFileText />}>\r\n                    <Link className={active9 ? \"nav-link link-active\" : \"nav-link link-not-active\"} to={`/courses`} onClick={() => {\r\n                      if (active2 === false) {\r\n                        setActive1(false);\r\n                        setActive2(true);\r\n                        setActive3(false);\r\n                        setActive4(false);\r\n                        setActive5(false);\r\n                        setActive6(false);\r\n                        setActive10(false);\r\n                        setActive11(false);\r\n                        setActive12(false);\r\n                        setActive13(false);\r\n                        setActive14(false);\r\n                        setActive15(false);\r\n                        setActive16(false);\r\n                        setActive17(false);\r\n                      }\r\n                      if (active9 === false) {\r\n                        setActive1(false);\r\n                        setActive2(false);\r\n                        setActive3(false);\r\n                        setActive4(false);\r\n                        setActive5(false);\r\n                        setActive6(false);\r\n\r\n                        setActive7(false);\r\n                        setActive8(false);\r\n                        setActive9(true);\r\n\r\n                        setActive10(false);\r\n                        setActive11(false);\r\n                        setActive12(false);\r\n                        setActive13(false);\r\n                        setActive14(false);\r\n                        setActive15(false);\r\n                        setActive16(false);\r\n                        setActive17(false);\r\n                      }\r\n                    }}>\r\n                      <span> Khóa học</span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                  <MenuItem icon={<GiVideoConference />}>\r\n                    <Link className={active8 ? \"nav-link link-active\" : \"nav-link link-not-active\"} to={`/class`} onClick={() => {\r\n                      if (active2 === false) {\r\n                        setActive1(false);\r\n                        setActive2(true);\r\n                        setActive3(false);\r\n                        setActive4(false);\r\n                        setActive5(false);\r\n                        setActive6(false);\r\n\r\n                        setActive7(false);\r\n                        setActive8(false);\r\n                        setActive9(false);\r\n\r\n                        setActive10(false);\r\n                        setActive11(false);\r\n                        setActive12(false);\r\n                        setActive13(false);\r\n                        setActive14(false);\r\n                        setActive15(false);\r\n                        setActive16(false);\r\n                        setActive17(false);\r\n                      }\r\n                      if (active8 === false) {\r\n                        setActive1(false);\r\n                        setActive2(false);\r\n                        setActive3(false);\r\n                        setActive4(false);\r\n                        setActive5(false);\r\n                        setActive6(false);\r\n\r\n                        setActive7(false);\r\n                        setActive8(true);\r\n                        setActive9(false);\r\n\r\n                        setActive10(false);\r\n                        setActive11(false);\r\n                        setActive12(false);\r\n                        setActive13(false);\r\n                        setActive14(false);\r\n                        setActive15(false);\r\n                        setActive16(false);\r\n                        setActive17(false);\r\n                      }\r\n                    }}>\r\n                      <span> Lớp</span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                  <MenuItem icon={<MdSchool />} active={active2}>\r\n                    <Link to={`/contests`} className={active7 ? \"nav-link link-active\" : \"nav-link link-not-active\"} onClick={() => {\r\n                      if (active2 === false) {\r\n                        \r\n                        setActive1(false);\r\n                        setActive2(true);\r\n                        setActive3(false);\r\n                        setActive4(false);\r\n                        setActive5(false);\r\n                        setActive6(false);\r\n\r\n                        setActive7(false);\r\n                        setActive8(false);\r\n                        setActive9(false);\r\n\r\n                        setActive10(false);\r\n                        setActive11(false);\r\n                        setActive12(false);\r\n                        setActive13(false);\r\n                        setActive14(false);\r\n                        setActive15(false);\r\n                        setActive16(false);\r\n                        setActive17(false);\r\n                      }\r\n                      if (active7 === false) {\r\n                        setActive1(false);\r\n                        setActive2(false);\r\n                        setActive3(false);\r\n                        setActive4(false);\r\n                        setActive5(false);\r\n                        setActive6(false);\r\n\r\n                        setActive7(true);\r\n                        setActive8(false);\r\n                        setActive9(false);\r\n\r\n                        setActive10(false);\r\n                        setActive11(false);\r\n                        setActive12(false);\r\n                        setActive13(false);\r\n                        setActive14(false);\r\n                        setActive15(false);\r\n                        setActive16(false);\r\n                        setActive17(false);\r\n                      }\r\n                    }}>\r\n                      <span> Cuộc thi</span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                </SubMenu>\r\n                <SubMenu active={active3} icon={<RiPencilLine />} title=\"Người dùng\" color=\"#ffffff\" className={active3 ? \"link-active\" : \"not-active\"} onClick={() => {\r\n                  if (active3 === false) {\r\n                    setActive1(false);\r\n                    setActive2(false);\r\n                    setActive3(true);\r\n                    setActive4(false);\r\n                    setActive5(false);\r\n                    setActive6(false);\r\n\r\n                    setActive7(false);\r\n                    setActive8(false);\r\n                    setActive9(false);\r\n\r\n                    setActive10(false);\r\n                    setActive11(false);\r\n                    setActive12(false);\r\n                    setActive13(false);\r\n                    setActive14(false);\r\n                    setActive15(false);\r\n                    setActive16(false);\r\n                    setActive17(false);\r\n                  }\r\n                }}>\r\n                  <MenuItem icon={<FaChalkboardTeacher />}>\r\n                    <Link to={`/teachers`} className={active10 ? \"nav-link link-active\" : \"nav-link link-not-active\"} onClick={() => {\r\n                      if (setActive3 === false) {\r\n                        setActive1(false);\r\n                        setActive2(false);\r\n                        setActive3(true);\r\n                        setActive4(false);\r\n                        setActive5(false);\r\n                        setActive6(false);\r\n\r\n                        setActive7(false);\r\n                        setActive8(false);\r\n                        setActive9(false);\r\n                          \r\n                        setActive10(false);\r\n                        setActive11(false);\r\n                        setActive12(false);\r\n                        setActive13(false);\r\n                        setActive14(false);\r\n                        setActive15(false);\r\n                        setActive16(false);\r\n                        setActive17(false);\r\n                      }\r\n                      if (active10 === false) {\r\n                        setActive10(true);\r\n                        setActive11(false);\r\n                        setActive12(false);\r\n                      }\r\n                    }}>\r\n                      <span> Giáo viên</span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                  <MenuItem icon={<FaChild />}>\r\n                    <Link to={`/students`}  className={active11 ? \"nav-link link-active\" : \"nav-link link-not-active\"} onClick={() => {\r\n                      if (setActive3 === false) {\r\n                        setActive1(false);\r\n                        setActive2(false);\r\n                        setActive3(true);\r\n                        setActive4(false);\r\n                        setActive5(false);\r\n                        setActive6(false);\r\n                      }\r\n                      if (active11 === false) {\r\n                        setActive10(false);\r\n                        setActive11(true);\r\n                        setActive12(false);\r\n                      }\r\n                    }}>\r\n                      <span> Học sinh</span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                  <MenuItem icon={<RiParentFill />}>\r\n                    <Link to={`/parents`} className={active12 ? \"nav-link link-active\" : \"nav-link link-not-active\"} onClick={() => {\r\n                      if (setActive3 === false) {\r\n                        setActive1(false);\r\n                        setActive2(false);\r\n                        setActive3(true);\r\n                        setActive4(false);\r\n                        setActive5(false);\r\n                        setActive6(false);\r\n                      }\r\n                      if (active12 === false) {\r\n                        setActive7(false);\r\n                        setActive8(false);\r\n                        setActive12(true);\r\n                      }\r\n                    }}>\r\n                      <span> Phụ huynh</span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                </SubMenu>\r\n                <MenuItem active={active4} icon={<FaRegHeart />}>\r\n                  <Link to={`/turnovers`} className={active4 ? \"link-active\" : \"not-active\"} onClick={() => {\r\n                    if (active4 === false) {\r\n                      setActive1(false);\r\n                      setActive2(false);\r\n                      setActive3(false);\r\n                      setActive4(true);\r\n                      setActive5(false);\r\n                      setActive6(false);\r\n                    }\r\n                  }}>\r\n                    <span> Phân tích</span>\r\n                  </Link>\r\n                </MenuItem>\r\n                <SubMenu active={active5} icon={<BiCog />} title=\"Thiết lâp\" color=\"#ffffff\" className={active5 ? \"link-active\" : \"not-active\"} onClick={() => {\r\n                  if (active5 === false) {\r\n                    setActive1(false);\r\n                    setActive2(false);\r\n                    setActive3(false);\r\n                    setActive4(false);\r\n                    setActive5(true);\r\n                    setActive6(false);\r\n                  }\r\n                }}>\r\n                  <MenuItem icon={<BsMap />}>\r\n                    <Link to={`/semesters`} className={active13 ? \"nav-link link-active\" : \"nav-link link-not-active\"} onClick={() => {\r\n                      if (active5 === false) {\r\n                        setActive1(false);\r\n                        setActive2(false);\r\n                        setActive3(false);\r\n                        setActive4(false);\r\n                        setActive5(true);\r\n                        setActive6(false);\r\n                      }\r\n                      if (active13 === false) {\r\n                        setActive13(true);\r\n                        setActive14(false);\r\n                        setActive15(false);\r\n                      }\r\n                    }}>\r\n                      <span> Học kì</span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                  <MenuItem icon={<AiOutlineBook />}>\r\n                    <Link to={`/lessons`} className={active14 ? \"nav-link link-active\" : \"nav-link link-not-active\"} onClick={() => {\r\n                      if (active5 === false) {\r\n                        setActive1(false);\r\n                        setActive2(false);\r\n                        setActive3(false);\r\n                        setActive4(false);\r\n                        setActive5(true);\r\n                        setActive6(false);\r\n                      }\r\n                      if (active14 === false) {\r\n                        setActive13(false);\r\n                        setActive14(true);\r\n                        setActive15(false);\r\n                      }\r\n                    }}>\r\n                      <span> Tiết học</span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                  <MenuItem icon={<FaPaintBrush />}>\r\n                    <Link to={`/arts`} className={active15 ? \"nav-link link-active\" : \"nav-link link-not-active\"} onClick={() => {\r\n                      if (active5 === false) {\r\n                        setActive1(false);\r\n                        setActive2(false);\r\n                        setActive3(false);\r\n                        setActive4(false);\r\n                        setActive5(true);\r\n                        setActive6(false);\r\n                      }\r\n                      if (active15 === false) {\r\n                        setActive13(false);\r\n                        setActive14(false);\r\n                        setActive15(true);\r\n                      }\r\n                    }}>\r\n                      <span> Nghệ thuật</span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                </SubMenu>\r\n                <SubMenu active={active6} icon={<BiCog />} title=\"Yêu cầu\" color=\"#ffffff\" className={active6 ? \"link-active\" : \"not-active\"} onClick={() => {\r\n                  if (active6 === false) {\r\n                    setActive1(false);\r\n                    setActive2(false);\r\n                    setActive3(false);\r\n                    setActive4(false);\r\n                    setActive5(false);\r\n                    setActive6(true);\r\n                  }\r\n                }}>\r\n                  <MenuItem icon={<BsMap />}>\r\n                    <Link to={`/tutorial-edit`} className={active16 ? \"nav-link link-active\" : \"nav-link link-not-active\"} onClick={() => {\r\n                      if (active6 === false) {\r\n                        setActive1(false);\r\n                        setActive2(false);\r\n                        setActive3(false);\r\n                        setActive4(false);\r\n                        setActive5(false);\r\n                        setActive6(true);\r\n                      }\r\n                      if (active16 === false) {\r\n                        setActive16(true);\r\n                        setActive17(false);\r\n                      }\r\n                    }}>\r\n                      <span> Giáo án</span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                  <MenuItem icon={<AiOutlineBook />}>\r\n                    <Link to={`/request-teacher-off`} className={active17 ? \"nav-link link-active\" : \"nav-link link-not-active\"} onClick={() => {\r\n                      if (active6 === false) {\r\n                        setActive1(false);\r\n                        setActive2(false);\r\n                        setActive3(false);\r\n                        setActive4(false);\r\n                        setActive5(false);\r\n                        setActive6(true);\r\n                      }\r\n                      if (active17 === false) {\r\n                        setActive16(false);\r\n                        setActive17(true);\r\n                      }\r\n                    }}>\r\n                      <span> Nghỉ dạy</span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                </SubMenu>\r\n              </Menu>\r\n            </SidebarContent>\r\n            <SidebarFooter>\r\n              <Menu iconShape=\"square\">\r\n                <MenuItem icon={<FiLogOut />}>Logout</MenuItem>\r\n              </Menu>\r\n            </SidebarFooter>\r\n          </ProSidebar>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  else if (roleUser === 'TEACHER_USER') {\r\n    return (\r\n      <>\r\n        <div id=\"collapseMenu\" className=\"navbar-nav teacher-navbar-nav bg-gradient-primary-green sidebar-dark accordion\">\r\n          {/* collapsed props to change menu size using menucollapse state */}\r\n          <ProSidebar collapsed={menuCollapse}>\r\n            <SidebarHeader>\r\n              <div className=\"logotext\">\r\n                {/* small and big change using menucollapse state */}\r\n                <p>{menuCollapse ? \"\" : \"KidsDrawing\"}</p>\r\n              </div>\r\n              <div className=\"closemenu\" onClick={menuIconClick}>\r\n                {/* changing menu collapse icon on click */}\r\n                {menuCollapse ? (\r\n                  <FiArrowRightCircle />\r\n                ) : (\r\n                  <FiArrowLeftCircle />\r\n                )}\r\n              </div>\r\n            </SidebarHeader>\r\n            <SidebarContent>\r\n              <Menu iconShape=\"square\">\r\n                <MenuItem active={active1} icon={<FiHome />}>\r\n                  <Link to={`/home`} className={active1 ? \"link-active\" : \"not-active\"} onClick={() => {\r\n                    if (active1 === false) {\r\n                      setActive1(true);\r\n                      setActive2(false);\r\n                      setActive3(false);\r\n                      setActive4(false);\r\n                      setActive5(false);\r\n                      setActive6(false);\r\n                    }\r\n                  }} color=\"#ffffff\">\r\n                    Trang chủ\r\n                  </Link>\r\n                </MenuItem>\r\n                <MenuItem active={active2} icon={<MdSchool />}>\r\n                  <Link to={`/teacher-level`} className={active2 ? \"link-active\" : \"not-active\"} onClick={() => {\r\n                    if (active2 === false) {\r\n                      setActive1(false);\r\n                      setActive2(true);\r\n                      setActive3(false);\r\n                      setActive4(false);\r\n                      setActive5(false);\r\n                      setActive6(false);\r\n                    }\r\n                  }}>\r\n                    Trình độ\r\n                  </Link>\r\n                </MenuItem>\r\n                <MenuItem active={active3} icon={<RiCompassDiscoverFill />}>\r\n                  <Link to={`/courses`} className={active3 ? \"link-active\" : \"not-active\"} onClick={() => {\r\n                      if (active3 === false) {\r\n                        setActive1(false);\r\n                        setActive2(false);\r\n                        setActive3(true);\r\n                        setActive4(false);\r\n                        setActive5(false);\r\n                        setActive6(false);\r\n                      }\r\n                    }}>\r\n                      Khám phá\r\n                  </Link>\r\n                </MenuItem>\r\n                <SubMenu active={active4} icon={<SiGoogletagmanager />} title=\"Quản lý\" color=\"#ffffff\" className={active3 ? \"link-active\" : \"not-active\"} onClick={() => {\r\n                  if (active4 === false) {\r\n                    setActive1(false);\r\n                    setActive2(false);\r\n                    setActive3(false);\r\n                    setActive4(true);\r\n                    setActive5(false);\r\n                    setActive6(false);\r\n                  }\r\n                }}>\r\n                  <MenuItem icon={<BsMap />}>\r\n                    <Link to={`/classes`} className={active9 ? \"nav-link link-active\" : \"nav-link link-not-active\"} onClick={() => {\r\n                      if (active4 === false) {\r\n                        setActive1(false);\r\n                        setActive2(false);\r\n                        setActive3(false);\r\n                        setActive4(true);\r\n                        setActive5(false);\r\n                        setActive6(false);\r\n                      }\r\n                      if (active9 === false) {\r\n                        setActive9(true);\r\n                        setActive10(false);\r\n                      }\r\n                    }}>\r\n                      <span> Lớp</span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                  <MenuItem icon={<AiOutlineBook />}>\r\n                    <Link to={`/contests`} className={active10 ? \"nav-link link-active\" : \"nav-link link-not-active\"} onClick={() => {\r\n                      if (active4 === false) {\r\n                        setActive1(false);\r\n                        setActive2(false);\r\n                        setActive3(false);\r\n                        setActive4(true);\r\n                        setActive5(false);\r\n                        setActive6(false);\r\n                      }\r\n                      if (active10 === false) {\r\n                        setActive9(false);\r\n                        setActive10(true);\r\n                      }\r\n                    }}>\r\n                      <span> Cuộc thi</span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                </SubMenu>\r\n                <SubMenu active={active5} icon={<BiCog />} title=\"Yêu cầu\" color=\"#ffffff\" className={active5 ? \"link-active\" : \"not-active\"} onClick={() => {\r\n                  if (active5 === false) {\r\n                    setActive1(false);\r\n                    setActive2(false);\r\n                    setActive3(false);\r\n                    setActive4(false);\r\n                    setActive5(true);\r\n                    setActive6(false);\r\n                  }\r\n                }}>\r\n                  <MenuItem icon={<BsMap />}>\r\n                    <Link to={`/request/student`} className={active11 ? \"nav-link link-active\" : \"nav-link link-not-active\"} onClick={() => {\r\n                      if (active5 === false) {\r\n                        setActive1(false);\r\n                        setActive2(false);\r\n                        setActive3(false);\r\n                        setActive4(false);\r\n                        setActive5(true);\r\n                        setActive6(false);\r\n                      }\r\n                      if (active11 === false) {\r\n                        setActive11(true);\r\n                        setActive12(false);\r\n                      }\r\n                    }}>\r\n                      <span> Nghỉ phép</span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                  <MenuItem icon={<AiOutlineBook />}>\r\n                    <Link to={`/request/teacher`} className={active12 ? \"nav-link link-active\" : \"nav-link link-not-active\"} onClick={() => {\r\n                      if (active5 === false) {\r\n                        setActive1(false);\r\n                        setActive2(false);\r\n                        setActive3(false);\r\n                        setActive4(false);\r\n                        setActive5(true);\r\n                        setActive6(false);\r\n                      }\r\n                      if (active12 === false) {\r\n                        setActive11(false);\r\n                        setActive12(true);\r\n                      }\r\n                    }}>\r\n                      <span> Dạy thay</span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                </SubMenu>\r\n                <MenuItem active={active6} icon={<MdSchool />}>\r\n                  <Link to={`/schedule-teacher`} className={active6 ? \"link-active\" : \"not-active\"} onClick={() => {\r\n                    if (active6 === false) {\r\n                      setActive1(false);\r\n                      setActive2(false);\r\n                      setActive3(false);\r\n                      setActive4(false);\r\n                      setActive5(false);\r\n                      setActive6(true);\r\n                    }\r\n                  }}>\r\n                    Thời khóa biểu\r\n                  </Link>\r\n                </MenuItem>\r\n              </Menu>\r\n            </SidebarContent>\r\n            <SidebarFooter>\r\n              <Menu iconShape=\"square\">\r\n              <MenuItem>\r\n                  <img className=\"img-logo\" alt=\"\" src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1667290306/o0ymcs4lblpy2hfmisyq.png\" />\r\n                </MenuItem>\r\n                <MenuItem icon={<FiLogOut />}>Logout</MenuItem>\r\n              </Menu>\r\n            </SidebarFooter>\r\n          </ProSidebar>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  else if (roleUser === 'PARENT_USER') {\r\n    return (\r\n      <>\r\n        <div id=\"collapseMenu\" className=\"navbar-nav teacher-navbar-nav bg-gradient-primary-green sidebar-dark accordion\">\r\n          {/* collapsed props to change menu size using menucollapse state */}\r\n          <ProSidebar collapsed={menuCollapse}>\r\n            <SidebarHeader>\r\n              <div className=\"logotext\">\r\n                {/* small and big change using menucollapse state */}\r\n                <p>{menuCollapse ? \"\" : \"KidsDrawing\"}</p>\r\n              </div>\r\n              <div className=\"closemenu\" onClick={menuIconClick}>\r\n                {/* changing menu collapse icon on click */}\r\n                {menuCollapse ? (\r\n                  <FiArrowRightCircle />\r\n                ) : (\r\n                  <FiArrowLeftCircle />\r\n                )}\r\n              </div>\r\n            </SidebarHeader>\r\n            <SidebarContent>\r\n              <Menu iconShape=\"square\">\r\n                <MenuItem active={active1} icon={<FiHome />}>\r\n                  <Link to={`/home`} className={active1 ? \"link-active\" : \"not-active\"} onClick={() => {\r\n                    if (active1 === false) {\r\n                      setActive1(true);\r\n                      setActive2(false);\r\n                      setActive3(false);\r\n                      setActive4(false);\r\n                      setActive5(false);\r\n                      setActive6(false);\r\n                    }\r\n                  }}>\r\n                    Trang chủ\r\n                  </Link>\r\n                </MenuItem>\r\n                <SubMenu active={active3} icon={<SiGoogletagmanager />} title=\"Quản lý\" color=\"#ffffff\" className={active3 ? \"link-active\" : \"not-active\"} onClick={() => {\r\n                  if (active3 === false) {\r\n                    setActive1(false);\r\n                    setActive2(false);\r\n                    setActive3(true);\r\n                    setActive4(false);\r\n                    setActive5(false);\r\n                    setActive6(false);\r\n                  }\r\n                }}>\r\n                  <MenuItem icon={<BsMap />}>\r\n                    <Link to={`/classes`} className={active7 ? \"nav-link link-active\" : \"nav-link link-not-active\"} onClick={() => {\r\n                      if (active3 === false) {\r\n                        setActive1(false);\r\n                        setActive2(false);\r\n                        setActive3(true);\r\n                        setActive4(false);\r\n                        setActive5(false);\r\n                        setActive6(false);\r\n                      }\r\n                      if (active7 === false) {\r\n                        setActive7(true);\r\n                        setActive8(false);\r\n                      }\r\n                    }}>\r\n                      <span> Lớp của bé</span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                  <MenuItem icon={<AiOutlineBook />}>\r\n                    <Link to={`/contests`} className={active8 ? \"nav-link link-active\" : \"nav-link link-not-active\"} onClick={() => {\r\n                      if (active3 === false) {\r\n                        setActive1(false);\r\n                        setActive2(false);\r\n                        setActive3(true);\r\n                        setActive4(false);\r\n                        setActive5(false);\r\n                        setActive6(false);\r\n                      }\r\n                      if (active8 === false) {\r\n                        setActive7(false);\r\n                        setActive8(true);\r\n                      }\r\n                    }}>\r\n                      <span> Cuộc thi của bé</span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                </SubMenu>\r\n                <SubMenu active={active4} icon={<RiCompassDiscoverFill />} title=\"Khám phá\" color=\"#ffffff\" className={active4 ? \"link-active\" : \"not-active\"} onClick={() => {\r\n                  if (active4 === false) {\r\n                    setActive1(false);\r\n                    setActive2(false);\r\n                    setActive3(false);\r\n                    setActive4(true);\r\n                    setActive5(false);\r\n                    setActive6(false);\r\n                  }\r\n                }}>\r\n                  <MenuItem icon={<BsMap />}>\r\n                    <Link to={`/discover/course`} className={active9 ? \"nav-link link-active\" : \"nav-link link-not-active\"} onClick={() => {\r\n                      if (active4 === false) {\r\n                        setActive1(false);\r\n                        setActive2(false);\r\n                        setActive3(false);\r\n                        setActive4(true);\r\n                        setActive5(false);\r\n                        setActive6(false);\r\n                      }\r\n                      if (active9 === false) {\r\n                        setActive9(true);\r\n                        setActive10(false);\r\n                      }\r\n                    }}>\r\n                      <span> Khóa học</span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                  <MenuItem icon={<AiOutlineBook />}>\r\n                    <Link to={`/discover/contest`} className={active10 ? \"nav-link link-active\" : \"nav-link link-not-active\"} onClick={() => {\r\n                      if (active4 === false) {\r\n                        setActive1(false);\r\n                        setActive2(false);\r\n                        setActive3(false);\r\n                        setActive4(true);\r\n                        setActive5(false);\r\n                        setActive6(false);\r\n                      }\r\n                      if (active10 === false) {\r\n                        setActive9(false);\r\n                        setActive10(true);\r\n                      }\r\n                    }}>\r\n                      <span> Cuộc thi</span>\r\n                    </Link>\r\n                  </MenuItem>\r\n                </SubMenu>\r\n                <MenuItem active={active6} icon={<MdSchool />}>\r\n                  <Link to={`/schedules`} className={active6 ? \"link-active\" : \"not-active\"} onClick={() => {\r\n                    if (active6 === false) {\r\n                      setActive1(false);\r\n                      setActive2(false);\r\n                      setActive3(false);\r\n                      setActive4(false);\r\n                      setActive5(false);\r\n                      setActive6(true);\r\n                    }\r\n                  }}>\r\n                    Thời khóa biểu\r\n                  </Link>\r\n                </MenuItem>\r\n              </Menu>\r\n            </SidebarContent>\r\n            <SidebarFooter>\r\n              <Menu iconShape=\"square\">\r\n              <MenuItem>\r\n                  <img className=\"img-logo\" alt=\"\" src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1667290306/o0ymcs4lblpy2hfmisyq.png\" />\r\n                </MenuItem>\r\n                <MenuItem icon={<FiLogOut />}>Logout</MenuItem>\r\n              </Menu>\r\n            </SidebarFooter>\r\n          </ProSidebar>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <div id=\"collapseMenu\" className=\"navbar-nav  teacher-navbar-nav bg-gradient-primary-green sidebar-dark accordion\">\r\n        {/* collapsed props to change menu size using menucollapse state */}\r\n        <ProSidebar collapsed={menuCollapse}>\r\n          <SidebarHeader>\r\n            <div className=\"logotext\">\r\n              {/* small and big change using menucollapse state */}\r\n              <p>{menuCollapse ? \"\" : \"KidsDrawing\"}</p>\r\n            </div>\r\n            <div className=\"closemenu\" onClick={menuIconClick}>\r\n              {/* changing menu collapse icon on click */}\r\n              {menuCollapse ? (\r\n                <FiArrowRightCircle />\r\n              ) : (\r\n                <FiArrowLeftCircle />\r\n              )}\r\n            </div>\r\n          </SidebarHeader>\r\n          <SidebarContent>\r\n            <Menu iconShape=\"square\">\r\n              <MenuItem active={active1} icon={<FiHome />}>\r\n                <Link to={`/home`} className={active1 ? \"link-active\" : \"not-active\"} onClick={() => {\r\n                  if (active1 === false) {\r\n                    setActive1(true);\r\n                    setActive2(false);\r\n                    setActive3(false);\r\n                    setActive4(false);\r\n                    setActive5(false);\r\n                    setActive6(false);\r\n                  }\r\n                }}>\r\n                  Trang chủ\r\n                </Link>\r\n              </MenuItem>\r\n              <SubMenu active={active3} icon={<BiCog />} title=\"Quản lý\" color=\"#ffffff\" className={active3 ? \"link-active\" : \"not-active\"} onClick={() => {\r\n                if (active3 === false) {\r\n                  setActive1(false);\r\n                  setActive2(false);\r\n                  setActive3(true);\r\n                  setActive4(false);\r\n                  setActive5(false);\r\n                  setActive6(false);\r\n                }\r\n              }}>\r\n                <MenuItem icon={<BsMap />}>\r\n                  <Link to={`/classes`} className={active7 ? \"nav-link link-active\" : \"nav-link link-not-active\"} onClick={() => {\r\n                    if (active3 === false) {\r\n                      setActive1(false);\r\n                      setActive2(false);\r\n                      setActive3(true);\r\n                      setActive4(false);\r\n                      setActive5(false);\r\n                      setActive6(false);\r\n                    }\r\n                    if (active7 === false) {\r\n                      setActive7(true);\r\n                      setActive8(false);\r\n                    }\r\n                  }}>\r\n                    <span> Lớp của bé</span>\r\n                  </Link>\r\n                </MenuItem>\r\n                <MenuItem icon={<AiOutlineBook />}>\r\n                  <Link to={`/contests`} className={active8 ? \"nav-link link-active\" : \"nav-link link-not-active\"} onClick={() => {\r\n                    if (active3 === false) {\r\n                      setActive1(false);\r\n                      setActive2(false);\r\n                      setActive3(true);\r\n                      setActive4(false);\r\n                      setActive5(false);\r\n                      setActive6(false);\r\n                    }\r\n                    if (active8 === false) {\r\n                      setActive7(false);\r\n                      setActive8(true);\r\n                    }\r\n                  }}>\r\n                    <span> Cuộc thi của bé</span>\r\n                  </Link>\r\n                </MenuItem>\r\n              </SubMenu>\r\n              <SubMenu active={active4} icon={<RiCompassDiscoverFill />} title=\"Khám phá\" color=\"#ffffff\" className={active4 ? \"link-active\" : \"not-active\"} onClick={() => {\r\n                if (active4 === false) {\r\n                  setActive1(false);\r\n                  setActive2(false);\r\n                  setActive3(false);\r\n                  setActive4(true);\r\n                  setActive5(false);\r\n                  setActive6(false);\r\n                }\r\n              }}>\r\n                <MenuItem icon={<BsMap />}>\r\n                  <Link to={`/discover/course`} className={active9 ? \"nav-link link-active\" : \"nav-link link-not-active\"} onClick={() => {\r\n                    if (active4 === false) {\r\n                      setActive1(false);\r\n                      setActive2(false);\r\n                      setActive3(false);\r\n                      setActive4(true);\r\n                      setActive5(false);\r\n                      setActive6(false);\r\n                    }\r\n                    if (active9 === false) {\r\n                      setActive9(true);\r\n                      setActive10(false);\r\n                    }\r\n                  }}>\r\n                    <span> Khóa học</span>\r\n                  </Link>\r\n                </MenuItem>\r\n                <MenuItem icon={<AiOutlineBook />}>\r\n                  <Link to={`/discover/contest`} className={active10 ? \"nav-link link-active\" : \"nav-link link-not-active\"} onClick={() => {\r\n                    if (active4 === false) {\r\n                      setActive1(false);\r\n                      setActive2(false);\r\n                      setActive3(false);\r\n                      setActive4(true);\r\n                      setActive5(false);\r\n                      setActive6(false);\r\n                    }\r\n                    if (active10 === false) {\r\n                      setActive9(false);\r\n                      setActive10(true);\r\n                    }\r\n                  }}>\r\n                    <span> Cuộc thi</span>\r\n                  </Link>\r\n                </MenuItem>\r\n              </SubMenu>\r\n              <MenuItem active={active6} icon={<BsCashCoin />}>\r\n                <Link to={`/schedules`} className={active6 ? \"link-active\" : \"not-active\"} onClick={() => {\r\n                  if (active6 === false) {\r\n                    setActive1(false);\r\n                    setActive2(false);\r\n                    setActive3(false);\r\n                    setActive4(false);\r\n                    setActive5(false);\r\n                    setActive6(true);\r\n                  }\r\n                }}>\r\n                  Thời khóa biểu\r\n                </Link>\r\n              </MenuItem>\r\n              <MenuItem active={active5} icon={<BsCashCoin />}>\r\n                <Link to={`/game/guess-color`} className={active5 ? \"link-active\" : \"not-active\"} onClick={() => {\r\n                  if (active5 === false) {\r\n                    setActive1(false);\r\n                    setActive2(false);\r\n                    setActive3(false);\r\n                    setActive4(false);\r\n                    setActive5(true);\r\n                    setActive6(false);\r\n                  }\r\n                }}>\r\n                  Trò chơi\r\n                </Link>\r\n              </MenuItem>\r\n            </Menu>\r\n          </SidebarContent>\r\n          <SidebarFooter>\r\n            <Menu iconShape=\"square\">\r\n              <MenuItem>\r\n                  <img className=\"img-logo\" alt=\"\" src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1667290306/o0ymcs4lblpy2hfmisyq.png\" />\r\n                </MenuItem>\r\n              <MenuItem icon={<FiLogOut />}>Logout</MenuItem>\r\n            </Menu>\r\n          </SidebarFooter>\r\n        </ProSidebar>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { IProfile, ProfileModificationStatus } from \"../models/profile.interface\";\r\nexport const ADD_PROFILE: string = \"ADD_PROFILE\";\r\nexport const EDIT_PROFILE: string = \"EDIT_PROFILE\";\r\nexport const REMOVE_PROFILE: string = \"REMOVE_PROFILE\";\r\nexport const CHANGE_PROFILE_AMOUNT: string = \"CHANGE_PROFILE_AMOUNT\";\r\nexport const CHANGE_PROFILE_PENDING_EDIT: string = \"CHANGE_PROFILE_PENDING_EDIT\";\r\nexport const CLEAR_PROFILE_PENDING_EDIT: string = \"CLEAR_PROFILE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_PROFILE_ALL: string = \"REMOVE_PROFILE_ALL\";\r\nexport const INITIAL_PROFILE: string = \"INITIAL_PROFILE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(profile: IProfile) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        profile\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialProfile(profile: IProfile): IInitialProfileActionType {\r\n    return { type: INITIAL_PROFILE, profile: profile };\r\n}\r\n\r\nexport function removeProfileAll(): IRemoveProfileAllActionType {\r\n    return { type: REMOVE_PROFILE_ALL };\r\n}\r\n\r\nexport function addProfile(profile: IProfile): IAddProfileActionType {\r\n    return { type: ADD_PROFILE, profile: profile };\r\n}\r\n\r\nexport function editProfile(profile: IProfile): IEditProfileActionType {\r\n    return { type: EDIT_PROFILE, profile: profile };\r\n}\r\n\r\nexport function removeProfile(id: any): IRemoveProfileActionType {\r\n    return { type: REMOVE_PROFILE, id: id };\r\n}\r\n\r\nexport function changeSelectedProfile(profile: IProfile): IChangeSelectedProfileActionType {\r\n    return { type: CHANGE_PROFILE_PENDING_EDIT, profile: profile };\r\n}\r\n\r\nexport function clearSelectedProfile(): IClearSelectedProfileActionType {\r\n    return { type: CLEAR_PROFILE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateProfile(value: ProfileModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddProfileActionType { type: string, profile: IProfile };\r\ninterface IEditProfileActionType { type: string, profile: IProfile };\r\ninterface IRemoveProfileActionType { type: string, id: any };\r\ninterface IChangeSelectedProfileActionType { type: string, profile: IProfile };\r\ninterface IClearSelectedProfileActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ProfileModificationStatus};\r\ninterface IRemoveProfileAllActionType { type: string }\r\ninterface IInitialProfileActionType {type: string, profile: IProfile}","import { fetchDataSuccess, fetchDataError, removeProfileAll, addProfile } from \"../../../store/actions/profile.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface Profile {\r\n    id: any,\r\n    profile_image_url: string,\r\n}\r\nexport function getProfile(dispatch: any , id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getProfile(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (ele => {\r\n                console.log(ele)\r\n                dispatch(fetchDataSuccess(ele))\r\n                dispatch(removeProfileAll())\r\n                var user: Profile = {\r\n                    id: ele.id,\r\n                    profile_image_url: ele.profile_image_url,\r\n                }\r\n                    //console.log(strDate.substring(0, 16))\r\n                dispatch(addProfile(user));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, Dispatch, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { putStatusUser } from \"../../common/service/User/UpdateStatusUser\";\nimport { logout } from \"../../store/actions/account.actions\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport { IProfileState, IStateType } from \"../../store/models/root.interface\";\nimport { getProfile } from \"../../common/service/User/GetProfile\";\n\nfunction TopMenuAccount(): JSX.Element {\n  const dispatch: Dispatch<any> = useDispatch();\n  const username: string | null = localStorage.getItem('username');\n  const id = localStorage.getItem('id')\n  const profiles: IProfileState = useSelector((state: IStateType) => state.profiles);\n  useEffect(() => {\n    trackPromise(getProfile(dispatch, id))\n  }, [dispatch, id])\n  const [isShow, setShow] = useState(false);\n\n  console.log(profiles.profiles)\n  let profile_image = \"\"\n  if (profiles.profiles.length > 0 ){\n    localStorage.setItem('profile_image', profiles.profiles[0].profile_image_url)\n  }\n\n  var id_x = localStorage.getItem('profile_image');\n  if (id_x !== null) {\n    profile_image = id_x;\n  }\n\n  return (\n\n    <li className=\"nav-item dropdown no-arrow\">\n      <p className=\"nav-link dropdown-toggle\"\n        onClick={() => {\n          setShow(!isShow);\n        }}\n        id=\"userDropdown\"\n        role=\"button\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\">\n        <span className=\"mr-2 d-none d-lg-inline small cadet\">{username}</span>\n        <img className=\"img-profile rounded-circle\" alt=\"\"\n          src={profile_image !== null ? profile_image :  \"https://source.unsplash.com/QAB-WJcbgJk/60x60\"} />\n      </p>\n\n      <div className={`dropdown-menu dropdown-menu-right shadow animated--grow-in ${(isShow) ? \"show\" : \"\"}`}\n        aria-labelledby=\"userDropdown\">\n        <a className=\"dropdown-item\"\n        onClick={() =>{}}\n        href=\"/account\" \n        data-toggle=\"modal\"\n        data-target=\"#logoutModal\">\n          <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"></i>\n          Chỉnh thông tin các nhân\n        </a>\n        <a className=\"dropdown-item\"\n        onClick={() =>{}}\n        href=\"/change-password\" \n        data-toggle=\"modal\"\n        data-target=\"#change-password\">\n          <i className=\"fas fa-key fa-sm fa-fw mr-2 text-gray-400\"></i>\n          Thay đổi mật khẩu\n        </a>\n        <p className=\"dropdown-item logout-btn\"\n        onClick={() => {\n          let id = localStorage.getItem('id');\n          localStorage.clear();\n          dispatch(logout())\n          dispatch(putStatusUser(id, {\n            status: null\n          }))\n        }}\n        data-toggle=\"modal\"\n        data-target=\"#logoutModal\">\n          <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i>\n          Logout\n        </p>\n      </div>\n    </li>\n  );\n};\n\nexport default TopMenuAccount;\n","import { INotify, NotifyModificationStatus } from \"../models/notify.interface\";\r\nexport const ADD_NOTIFY: string = \"ADD_NOTIFY\";\r\nexport const EDIT_NOTIFY: string = \"EDIT_NOTIFY\";\r\nexport const REMOVE_NOTIFY: string = \"REMOVE_NOTIFY\";\r\nexport const CHANGE_NOTIFY_AMOUNT: string = \"CHANGE_NOTIFY_AMOUNT\";\r\nexport const CHANGE_NOTIFY_PENDING_EDIT: string = \"CHANGE_NOTIFY_PENDING_EDIT\";\r\nexport const CLEAR_NOTIFY_PENDING_EDIT: string = \"CLEAR_NOTIFY_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_NOTIFY_ALL: string = \"REMOVE_NOTIFY_ALL\";\r\nexport const INITIAL_NOTIFY: string = \"INITIAL_NOTIFY\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(notify: INotify) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        notify\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialNotify(notify: INotify): IInitialNotifyActionType {\r\n    return { type: INITIAL_NOTIFY, notify: notify };\r\n}\r\n\r\nexport function removeNotifyAll(): IRemoveNotifyAllActionType {\r\n    return { type: REMOVE_NOTIFY_ALL };\r\n}\r\n\r\nexport function addNotify(notify: INotify): IAddNotifyActionType {\r\n    return { type: ADD_NOTIFY, notify: notify };\r\n}\r\n\r\nexport function editNotify(notify: INotify): IEditNotifyActionType {\r\n    return { type: EDIT_NOTIFY, notify: notify };\r\n}\r\n\r\nexport function removeNotify(id: any): IRemoveNotifyActionType {\r\n    return { type: REMOVE_NOTIFY, id: id };\r\n}\r\n\r\nexport function changeSelectedNotify(notify: INotify): IChangeSelectedNotifyActionType {\r\n    return { type: CHANGE_NOTIFY_PENDING_EDIT, notify: notify };\r\n}\r\n\r\nexport function clearSelectedNotify(): IClearSelectedNotifyActionType {\r\n    return { type: CLEAR_NOTIFY_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateNotify(value: NotifyModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddNotifyActionType { type: string, notify: INotify };\r\ninterface IEditNotifyActionType { type: string, notify: INotify };\r\ninterface IRemoveNotifyActionType { type: string, id: any };\r\ninterface IChangeSelectedNotifyActionType { type: string, notify: INotify };\r\ninterface IClearSelectedNotifyActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  NotifyModificationStatus};\r\ninterface IRemoveNotifyAllActionType { type: string }\r\ninterface IInitialNotifyActionType {type: string, notify: INotify}","import { fetchDataRequest, fetchDataError, removeNotifyAll, initialNotify } from \"../../../store/actions/notify.action\";\r\nimport { INotify } from \"../../../store/models/notify.interface\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nexport function getNotify() {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/notification-database`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getNotify())\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(removeNotifyAll())\r\n                console.log(data.body.notifications)\r\n                data.body.notifications.map((ele: any, index: any) => {\r\n                    let notification: INotify = {\r\n                        idx: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        time: ele.time\r\n                    }\r\n                    console.log(ele)\r\n                    return dispatch(initialNotify(notification))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { IUserReadNotification, UserReadNotificationModificationStatus } from \"../models/user_read_notification.interface\";\r\n\r\n// register_successfull_user_read_notifications\r\nexport const ADD_USER_READED_NOTIFICATION: string = \"ADD_USER_READED_NOTIFICATION\";\r\nexport const EDIT_USER_READED_NOTIFICATION: string = \"EDIT_USER_READED_NOTIFICATION\";\r\nexport const REMOVE_USER_READED_NOTIFICATION: string = \"REMOVE_USER_READED_NOTIFICATION\";\r\nexport const CHANGE_USER_READED_NOTIFICATION_AMOUNT: string = \"CHANGE_USER_READED_NOTIFICATION_AMOUNT\";\r\nexport const CHANGE_USER_READED_NOTIFICATION_PENDING_EDIT: string = \"CHANGE_USER_READED_NOTIFICATION_PENDING_EDIT\";\r\nexport const CLEAR_USER_READED_NOTIFICATION_PENDING_EDIT: string = \"CLEAR_USER_READED_NOTIFICATION_PENDING_EDIT\";\r\nexport const REMOVE_USER_READED_NOTIFICATION_ALL: string = \"REMOVE_USER_READED_NOTIFICATION_ALL\";\r\nexport const INITIAL_USER_READED_NOTIFICATION: string = \"INITIAL_USER_READED_NOTIFICATION\";\r\n\r\n// not_register_user_read_notifications\r\nexport const ADD_USER_NOT_READED_NOTIFICATION: string = \"ADD_USER_NOT_READED_NOTIFICATION\";\r\nexport const EDIT_USER_NOT_READED_NOTIFICATION: string = \"EDIT_USER_NOT_READED_NOTIFICATION\";\r\nexport const REMOVE_USER_NOT_READED_NOTIFICATION: string = \"REMOVE_USER_NOT_READED_NOTIFICATION\";\r\nexport const CHANGE_USER_NOT_READED_NOTIFICATION_AMOUNT: string = \"CHANGE_USER_NOT_READED_NOTIFICATION_AMOUNT\";\r\nexport const CHANGE_USER_NOT_READED_NOTIFICATION_PENDING_EDIT: string = \"CHANGE_USER_NOT_READED_NOTIFICATION_PENDING_EDIT\";\r\nexport const CLEAR_USER_NOT_READED_NOTIFICATION_PENDING_EDIT: string = \"CLEAR_USER_NOT_READED_NOTIFICATION_PENDING_EDIT\";\r\nexport const REMOVE_USER_NOT_READED_NOTIFICATION_ALL: string = \"REMOVE_USER_NOT_READED_NOTIFICATION_ALL\";\r\nexport const INITIAL_USER_NOT_READED_NOTIFICATION: string = \"INITIAL_USER_NOT_READED_NOTIFICATION\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(user_read_notification: IUserReadNotification) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        user_read_notification\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialUserReadedNotification(user_read_notification: IUserReadNotification): IInitialUserReadedNotificationActionType {\r\n    return { type: INITIAL_USER_READED_NOTIFICATION, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function removeUserReadedNotificationAll(): IRemoveUserReadedNotificationAllActionType {\r\n    return { type: REMOVE_USER_READED_NOTIFICATION_ALL };\r\n}\r\n\r\nexport function addUserReadedNotification(user_read_notification: IUserReadNotification): IAddUserReadedNotificationActionType {\r\n    return { type: ADD_USER_READED_NOTIFICATION, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function editUserReadedNotification(user_read_notification: IUserReadNotification): IEditUserReadedNotificationActionType {\r\n    return { type: EDIT_USER_READED_NOTIFICATION, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function removeUserReadedNotification(id: any): IRemoveUserReadedNotificationActionType {\r\n    return { type: REMOVE_USER_READED_NOTIFICATION, id: id };\r\n}\r\n\r\nexport function changeSelectedUserReadedNotification(user_read_notification: IUserReadNotification): IChangeSelectedUserReadedNotificationActionType {\r\n    return { type: CHANGE_USER_READED_NOTIFICATION_PENDING_EDIT, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function clearSelectedUserReadedNotification(): IClearSelectedUserReadedNotificationActionType {\r\n    return { type: CLEAR_USER_READED_NOTIFICATION_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialUserNotReadedNotification(user_read_notification: IUserReadNotification): IInitialUserNotReadedNotificationActionType {\r\n    return { type: INITIAL_USER_NOT_READED_NOTIFICATION, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function removeUserNotReadedNotificationAll(): IRemoveUserNotReadedNotificationAllActionType {\r\n    return { type: REMOVE_USER_NOT_READED_NOTIFICATION_ALL };\r\n}\r\n\r\nexport function addUserNotReadedNotification(user_read_notification: IUserReadNotification): IAddUserNotReadedNotificationActionType {\r\n    return { type: ADD_USER_NOT_READED_NOTIFICATION, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function editUserNotReadedNotification(user_read_notification: IUserReadNotification): IEditUserNotReadedNotificationActionType {\r\n    return { type: EDIT_USER_NOT_READED_NOTIFICATION, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function removeUserNotReadedNotification(id: any): IRemoveUserNotReadedNotificationActionType {\r\n    return { type: REMOVE_USER_NOT_READED_NOTIFICATION, id: id };\r\n}\r\n\r\nexport function changeSelectedUserNotReadedNotification(user_read_notification: IUserReadNotification): IChangeSelectedUserNotReadedNotificationActionType {\r\n    return { type: CHANGE_USER_NOT_READED_NOTIFICATION_PENDING_EDIT, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function clearSelectedUserNotReadedNotification(): IClearSelectedUserNotReadedNotificationActionType {\r\n    return { type: CLEAR_USER_NOT_READED_NOTIFICATION_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: UserReadNotificationModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_user_read_notifications\r\ninterface IAddUserReadedNotificationActionType { type: string, user_read_notification: IUserReadNotification };\r\ninterface IEditUserReadedNotificationActionType { type: string, user_read_notification: IUserReadNotification };\r\ninterface IRemoveUserReadedNotificationActionType { type: string, id: any };\r\ninterface IChangeSelectedUserReadedNotificationActionType { type: string, user_read_notification: IUserReadNotification };\r\ninterface IClearSelectedUserReadedNotificationActionType { type: string };\r\ninterface IRemoveUserReadedNotificationAllActionType { type: string }\r\ninterface IInitialUserReadedNotificationActionType {type: string, user_read_notification: IUserReadNotification}\r\n\r\n// not_register_user_read_notifications\r\ninterface IAddUserNotReadedNotificationActionType { type: string, user_read_notification: IUserReadNotification };\r\ninterface IEditUserNotReadedNotificationActionType { type: string, user_read_notification: IUserReadNotification };\r\ninterface IRemoveUserNotReadedNotificationActionType { type: string, id: any };\r\ninterface IChangeSelectedUserNotReadedNotificationActionType { type: string, user_read_notification: IUserReadNotification };\r\ninterface IClearSelectedUserNotReadedNotificationActionType { type: string };\r\ninterface IRemoveUserNotReadedNotificationAllActionType { type: string }\r\ninterface IInitialUserNotReadedNotificationActionType {type: string, user_read_notification: IUserReadNotification}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  UserReadNotificationModificationStatus};","import { fetchDataRequest, fetchDataSuccess, fetchDataError, addUserNotReadedNotification, removeUserNotReadedNotificationAll, addUserReadedNotification, removeUserReadedNotificationAll} from \"../../../store/actions/user_read_notification.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface UserReadNotification {\r\n    notification_id: number;\r\n    user_id: number;\r\n    is_read: boolean;\r\n}\r\nexport function getUserReadNotification(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-read-notification/user/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserReadNotification(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeUserNotReadedNotificationAll())\r\n                dispatch(removeUserReadedNotificationAll())\r\n                console.log(data.body.UserReadNotification)\r\n                data.body.UserReadNotification.map((ele: any, index: any) => {\r\n                    var userReadNotification: UserReadNotification = {\r\n                        notification_id: ele.notification_id,\r\n                        user_id: ele.user_id,\r\n                        is_read: ele.is_read\r\n                    }\r\n                    if (userReadNotification.is_read === true){\r\n                        return dispatch(addUserReadedNotification(userReadNotification))\r\n                    }\r\n                    else {\r\n                        return dispatch(addUserNotReadedNotification(userReadNotification))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { ISemester, SemesterModificationStatus } from \"../models/semester.interface\";\r\nexport const ADD_SEMESTER: string = \"ADD_SEMESTER\";\r\nexport const EDIT_SEMESTER: string = \"EDIT_SEMESTER\";\r\nexport const REMOVE_SEMESTER: string = \"REMOVE_SEMESTER\";\r\nexport const CHANGE_SEMESTER_AMOUNT: string = \"CHANGE_SEMESTER_AMOUNT\";\r\nexport const CHANGE_SEMESTER_PENDING_EDIT: string = \"CHANGE_SEMESTER_PENDING_EDIT\";\r\nexport const CLEAR_SEMESTER_PENDING_EDIT: string = \"CLEAR_SEMESTER_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SEMESTER_ALL: string = \"REMOVE_SEMESTER_ALL\";\r\nexport const INITIAL_SEMESTER: string = \"INITIAL_SEMESTER\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(semester: ISemester) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        semester\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSemester(semester: ISemester): IInitialSemesterActionType {\r\n    return { type: INITIAL_SEMESTER, semester: semester };\r\n}\r\n\r\nexport function removeSemesterAll(): IRemoveSemesterAllActionType {\r\n    return { type: REMOVE_SEMESTER_ALL };\r\n}\r\n\r\nexport function addSemester(semester: ISemester): IAddSemesterActionType {\r\n    return { type: ADD_SEMESTER, semester: semester };\r\n}\r\n\r\nexport function editSemester(semester: ISemester): IEditSemesterActionType {\r\n    return { type: EDIT_SEMESTER, semester: semester };\r\n}\r\n\r\nexport function removeSemester(id: any): IRemoveSemesterActionType {\r\n    return { type: REMOVE_SEMESTER, id: id };\r\n}\r\n\r\nexport function changeSelectedSemester(semester: ISemester): IChangeSelectedSemesterActionType {\r\n    return { type: CHANGE_SEMESTER_PENDING_EDIT, semester: semester };\r\n}\r\n\r\nexport function clearSelectedSemester(): IClearSelectedSemesterActionType {\r\n    return { type: CLEAR_SEMESTER_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: SemesterModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddSemesterActionType { type: string, semester: ISemester };\r\ninterface IEditSemesterActionType { type: string, semester: ISemester };\r\ninterface IRemoveSemesterActionType { type: string, id: any };\r\ninterface IChangeSelectedSemesterActionType { type: string, semester: ISemester };\r\ninterface IClearSelectedSemesterActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  SemesterModificationStatus};\r\ninterface IRemoveSemesterAllActionType { type: string }\r\ninterface IInitialSemesterActionType {type: string, semester: ISemester}","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester.actions\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getUserReadNotification } from \"./GetUserReadNotificationByUser\";\r\n\r\nexport function putUserReadNotification(data: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-read-notification`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putUserReadNotification(data))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (xx => {\r\n                console.log(xx)\r\n                dispatch(getUserReadNotification(data.user_id))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getNotify } from \"../../common/service/Notify/GetNotify\";\r\nimport { getUserReadNotification } from \"../../common/service/UserReadNotification/GetUserReadNotificationByUser\";\r\nimport { putUserReadNotification } from \"../../common/service/UserReadNotification/PutUserReadNotification\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { INotifyState, IStateType, IUserReadNotificationState } from \"../../store/models/root.interface\";\r\nimport \"./TopNotification.css\"\r\n\r\ntype Options = {\r\n  notification_id: number;\r\n  user_id: number;\r\n  notification_name: string;\r\n  notification_desciption: string;\r\n  notification_time: string;\r\n  is_read: boolean;\r\n}\r\n\r\nfunction TopMenuNotification(): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const notifys: INotifyState = useSelector((state: IStateType) => state.notifys);\r\n  const user_read_notifications: IUserReadNotificationState = useSelector((state: IStateType) => state.user_read_notifications);\r\n  const [isShow, setShow] = useState(false);\r\n\r\n  var id_x = localStorage.getItem('id');\r\n  let user_id: number = 0;\r\n  if (id_x !== null) {\r\n    user_id = parseInt(id_x)\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserReadNotification(user_id))\r\n    dispatch(getNotify())\r\n  }, [dispatch, user_id])\r\n\r\n  console.log(notifys.notifys)\r\n  console.log(user_read_notifications.user_not_readed_notifications)\r\n\r\n  let data_not_read: Options[] = [];\r\n  let total = 0;\r\n  user_read_notifications.user_not_readed_notifications.map((ele, idx) => {\r\n    return notifys.notifys.map(notification => {\r\n      if (notification.idx === ele.notification_id){\r\n        let item: Options = {\r\n          notification_id: ele.notification_id,\r\n          notification_name: notification.name,\r\n          user_id: ele.user_id,\r\n          notification_time: notification.time,\r\n          notification_desciption: notification.description,\r\n          is_read: ele.is_read\r\n        }\r\n        total ++;\r\n        return data_not_read.push(item)\r\n      }\r\n      return notification\r\n    })\r\n  })\r\n\r\n  let data_readed: Options[] = [];\r\n  user_read_notifications.user_readed_notifications.map((ele, idx) => {\r\n    return notifys.notifys.map(notification => {\r\n      if (notification.idx === ele.notification_id && total <= 6){\r\n        let item: Options = {\r\n          notification_id: ele.notification_id,\r\n          notification_name: notification.name,\r\n          user_id: ele.user_id,\r\n          notification_time: notification.time,\r\n          notification_desciption: notification.description,\r\n          is_read: ele.is_read\r\n        }\r\n        total ++;\r\n        return data_not_read.push(item)\r\n      }\r\n      return notification\r\n    })\r\n  })\r\n\r\n  const history = useHistory();\r\n  const routeChange = (props: Options) =>{ \r\n      setShow(!isShow)\r\n      dispatch(putUserReadNotification({\r\n        user_id: user_id,\r\n        notification_id: props.notification_id,\r\n        is_read: true\r\n      }))\r\n      localStorage.removeItem('notification_id');\r\n      localStorage.setItem('notification_id', props.notification_id.toString());\r\n      localStorage.removeItem('user_id');\r\n      localStorage.setItem('user_id', props.user_id.toString());\r\n      localStorage.removeItem('notification_name');\r\n      localStorage.setItem('notification_name', props.notification_name);\r\n      localStorage.removeItem('notification_desciption');\r\n      localStorage.setItem('notification_desciption', props.notification_desciption);\r\n      localStorage.removeItem('notification_time');\r\n      localStorage.setItem('notification_time', props.notification_time);\r\n      let path = '/notification/detail'; \r\n      history.push({\r\n          pathname: path,\r\n      });\r\n  }\r\n\r\n  return (\r\n\r\n    <li className=\"nav-item dropdown no-arrow\">\r\n\r\n\r\n      <p className=\"nav-link dropdown-toggle waves-effect waves-light\" id=\"navbarDropdownMenuLink-5\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\" onClick={() => {\r\n        setShow(!isShow);\r\n      }}>\r\n        <span className=\"badge badge-danger ml-2\">{user_read_notifications.user_not_readed_notifications.length}</span>\r\n        <i className=\"fas fa-bell\"></i>\r\n      </p>\r\n\r\n      <div className={`dropdown-menu dropdown-menu-right shadow dropdown-secondary animated--grow-in ${(isShow) ? \"show\" : \"\"} notification`}\r\n        aria-labelledby=\"userDropdown\">\r\n          <ul className=\"list-notify\">\r\n            {\r\n              data_not_read.map((ele, idx) => {\r\n                return (\r\n                  <li key={idx}>\r\n                    <p className=\"dropdown-item waves-light\"\r\n                      onClick={() => {routeChange(ele)}}\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#logoutModal\">\r\n                      <i className=\"fas fa-bell fa-sm fa-fw mr-2\"></i>\r\n                      {ele.notification_name}\r\n                      <span className=\"badge badge-danger ml-2\">*</span>\r\n                    </p>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n\r\n\r\n            {\r\n              data_readed.map((ele, idx) => {\r\n                return (\r\n                  <li>\r\n                    <p className=\"dropdown-item waves-light\"\r\n                      onClick={() => dispatch(logout())}\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#logoutModal\">\r\n                      <i className=\"fas fa-bell fa-sm fa-fw mr-2 text-gray-400\"></i>\r\n                      {ele.notification_name}\r\n                    </p>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n          <div className=\"view-all-notify text-center\">\r\n            <a href=\"/notification\">Xem toàn bộ</a>\r\n          </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TopMenuNotification;\r\n","import { IUserRegisterJoinSemester, UserRegisterJoinSemesterModificationStatus } from \"../models/user_register_join_semester.interface\";\r\n\r\n// register_successfull_user_register_join_semesters\r\nexport const ADD_COMPLETED: string = \"ADD_COMPLETED\";\r\nexport const EDIT_COMPLETED: string = \"EDIT_COMPLETED\";\r\nexport const REMOVE_COMPLETED: string = \"REMOVE_COMPLETED\";\r\nexport const CHANGE_COMPLETED_AMOUNT: string = \"CHANGE_COMPLETED_AMOUNT\";\r\nexport const CHANGE_COMPLETED_PENDING_EDIT: string = \"CHANGE_COMPLETED_PENDING_EDIT\";\r\nexport const CLEAR_COMPLETED_PENDING_EDIT: string = \"CLEAR_COMPLETED_PENDING_EDIT\";\r\nexport const REMOVE_COMPLETED_ALL: string = \"REMOVE_COMPLETED_ALL\";\r\nexport const INITIAL_COMPLETED: string = \"INITIAL_COMPLETED\";\r\n\r\n// not_register_user_register_join_semesters\r\nexport const ADD_WAITING: string = \"ADD_WAITING\";\r\nexport const EDIT_WAITING: string = \"EDIT_WAITING\";\r\nexport const REMOVE_WAITING: string = \"REMOVE_WAITING\";\r\nexport const CHANGE_WAITING_AMOUNT: string = \"CHANGE_WAITING_AMOUNT\";\r\nexport const CHANGE_WAITING_PENDING_EDIT: string = \"CHANGE_WAITING_PENDING_EDIT\";\r\nexport const CLEAR_WAITING_PENDING_EDIT: string = \"CLEAR_WAITING_PENDING_EDIT\";\r\nexport const REMOVE_WAITING_ALL: string = \"REMOVE_WAITING_ALL\";\r\nexport const INITIAL_WAITING: string = \"INITIAL_WAITING\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(user_register_join_semester: IUserRegisterJoinSemester) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        user_register_join_semester\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCompleted(user_register_join_semester: IUserRegisterJoinSemester): IInitialCompletedActionType {\r\n    return { type: INITIAL_COMPLETED, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function removeCompletedAll(): IRemoveCompletedAllActionType {\r\n    return { type: REMOVE_COMPLETED_ALL };\r\n}\r\n\r\nexport function addCompleted(user_register_join_semester: IUserRegisterJoinSemester): IAddCompletedActionType {\r\n    return { type: ADD_COMPLETED, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function editCompleted(user_register_join_semester: IUserRegisterJoinSemester): IEditCompletedActionType {\r\n    return { type: EDIT_COMPLETED, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function removeCompleted(id: any): IRemoveCompletedActionType {\r\n    return { type: REMOVE_COMPLETED, id: id };\r\n}\r\n\r\nexport function changeSelectedCompleted(user_register_join_semester: IUserRegisterJoinSemester): IChangeSelectedCompletedActionType {\r\n    return { type: CHANGE_COMPLETED_PENDING_EDIT, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function clearSelectedCompleted(): IClearSelectedCompletedActionType {\r\n    return { type: CLEAR_COMPLETED_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialWaiting(user_register_join_semester: IUserRegisterJoinSemester): IInitialWaitingActionType {\r\n    return { type: INITIAL_WAITING, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function removeWaitingAll(): IRemoveWaitingAllActionType {\r\n    return { type: REMOVE_WAITING_ALL };\r\n}\r\n\r\nexport function addWaiting(user_register_join_semester: IUserRegisterJoinSemester): IAddWaitingActionType {\r\n    return { type: ADD_WAITING, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function editWaiting(user_register_join_semester: IUserRegisterJoinSemester): IEditWaitingActionType {\r\n    return { type: EDIT_WAITING, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function removeWaiting(id: any): IRemoveWaitingActionType {\r\n    return { type: REMOVE_WAITING, id: id };\r\n}\r\n\r\nexport function changeSelectedWaiting(user_register_join_semester: IUserRegisterJoinSemester): IChangeSelectedWaitingActionType {\r\n    return { type: CHANGE_WAITING_PENDING_EDIT, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function clearSelectedWaiting(): IClearSelectedWaitingActionType {\r\n    return { type: CLEAR_WAITING_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: UserRegisterJoinSemesterModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_user_register_join_semesters\r\ninterface IAddCompletedActionType { type: string, user_register_join_semester: IUserRegisterJoinSemester };\r\ninterface IEditCompletedActionType { type: string, user_register_join_semester: IUserRegisterJoinSemester };\r\ninterface IRemoveCompletedActionType { type: string, id: any };\r\ninterface IChangeSelectedCompletedActionType { type: string, user_register_join_semester: IUserRegisterJoinSemester };\r\ninterface IClearSelectedCompletedActionType { type: string };\r\ninterface IRemoveCompletedAllActionType { type: string }\r\ninterface IInitialCompletedActionType {type: string, user_register_join_semester: IUserRegisterJoinSemester}\r\n\r\n// not_register_user_register_join_semesters\r\ninterface IAddWaitingActionType { type: string, user_register_join_semester: IUserRegisterJoinSemester };\r\ninterface IEditWaitingActionType { type: string, user_register_join_semester: IUserRegisterJoinSemester };\r\ninterface IRemoveWaitingActionType { type: string, id: any };\r\ninterface IChangeSelectedWaitingActionType { type: string, user_register_join_semester: IUserRegisterJoinSemester };\r\ninterface IClearSelectedWaitingActionType { type: string };\r\ninterface IRemoveWaitingAllActionType { type: string }\r\ninterface IInitialWaitingActionType {type: string, user_register_join_semester: IUserRegisterJoinSemester}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  UserRegisterJoinSemesterModificationStatus};","import { fetchDataError, addCompleted, addWaiting, removeCompletedAll, removeWaitingAll} from \"../../../store/actions/user_register_join_semester.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user_register_semester {\r\n    id: any;\r\n    student_id: number;\r\n    payer_id: number;\r\n    payer_name: string;\r\n    course_name: string;\r\n    price: number;\r\n    student_name: string;\r\n    link_url: string;\r\n    status: string;\r\n    semester_class_id: number;\r\n    time: string;\r\n}\r\nexport function getUserRegisterJoinSemesterByPayer(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-join-semester/payer/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserRegisterJoinSemesterByPayer(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(removeCompletedAll())\r\n                dispatch(removeWaitingAll())\r\n                console.log(data.body.user_register_semester)\r\n                data.body.user_register_semester.map((ele: any, index: any) => {\r\n                    var user_register_semester: user_register_semester = {\r\n                        id: ele.id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        link_url: ele.link_url,\r\n                        payer_name: \"\",\r\n                        course_name: ele.course_name,\r\n                        status: ele.status,\r\n                        payer_id: ele.payer_id,\r\n                        price: ele.price,\r\n                        semester_class_id: ele.semester_class_id,\r\n                        time: ele.time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (ele.status === \"Completed\") {\r\n                        dispatch(addCompleted(user_register_semester))\r\n                    }\r\n                    else {\r\n                        dispatch(addWaiting(user_register_semester))\r\n                    }\r\n                    return index\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { fetchDataError, addCompleted, addWaiting, removeCompletedAll, removeWaitingAll} from \"../../../store/actions/user_register_join_semester.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user_register_semester {\r\n    id: any;\r\n    student_id: number;\r\n    payer_id: number;\r\n    payer_name: string;\r\n    course_name: string;\r\n    price: number;\r\n    student_name: string;\r\n    link_url: string;\r\n    status: string;\r\n    semester_class_id: number;\r\n    time: string;\r\n}\r\nexport function getUserRegisterJoinSemesterByStudent(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-join-semester/student/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserRegisterJoinSemesterByStudent(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(removeCompletedAll())\r\n                dispatch(removeWaitingAll())\r\n                console.log(data.body.user_register_semester)\r\n                data.body.user_register_semester.map((ele: any, index: any) => {\r\n                    var user_register_semester: user_register_semester = {\r\n                        id: ele.id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        link_url: ele.link_url,\r\n                        payer_name: \"\",\r\n                        course_name: ele.course_name,\r\n                        status: ele.status,\r\n                        payer_id: ele.payer_id,\r\n                        price: ele.price,\r\n                        semester_class_id: ele.semester_class_id,\r\n                        time: ele.time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (ele.status === \"Completed\") {\r\n                        dispatch(addCompleted(user_register_semester))\r\n                    }\r\n                    else {\r\n                        dispatch(addWaiting(user_register_semester))\r\n                    }\r\n                    return index\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getNotify } from \"../../common/service/Notify/GetNotify\";\r\nimport { getUserReadNotification } from \"../../common/service/UserReadNotification/GetUserReadNotificationByUser\";\r\nimport { putUserReadNotification } from \"../../common/service/UserReadNotification/PutUserReadNotification\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { INotifyState, IStateType, IUserReadNotificationState, IUserRegisterJoinSemesterState } from \"../../store/models/root.interface\";\r\nimport \"./TopNotification.css\"\r\nimport { AiOutlineShoppingCart } from \"react-icons/ai\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { getUserRegisterJoinSemesterByPayer } from \"../../common/service/UserRegisterJoinSemester/GetUserRegisterJoinSemesterByPayer\";\r\nimport { getUserRegisterJoinSemesterByStudent } from \"../../common/service/UserRegisterJoinSemester/GetUserRegisterJoinSemesterStudent\";\r\n\r\ntype Options = {\r\n  notification_id: number;\r\n  user_id: number;\r\n  notification_name: string;\r\n  notification_desciption: string;\r\n  notification_time: string;\r\n  is_read: boolean;\r\n}\r\n\r\nfunction TopMenuCart(): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const notifys: INotifyState = useSelector((state: IStateType) => state.notifys);\r\n  const user_read_notifications: IUserReadNotificationState = useSelector((state: IStateType) => state.user_read_notifications);\r\n  const [isShow, setShow] = useState(false);\r\n  const user_register_join_semesters: IUserRegisterJoinSemesterState = useSelector((state: IStateType) => state.user_register_join_semesters);\r\n\r\n  var id_x = localStorage.getItem('id');\r\n  let user_id: number = 0;\r\n  if (id_x !== null) {\r\n    user_id = parseInt(id_x)\r\n  }\r\n\r\n  var role_privilege = localStorage.getItem('role_privilege')\r\n  var rolePrivilege: string[] = []\r\n  var roleUser: string = \"\"\r\n  if (role_privilege !== null) {\r\n      rolePrivilege = role_privilege.split(',')\r\n      roleUser = rolePrivilege[0]\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserReadNotification(user_id))\r\n    dispatch(getNotify())\r\n  }, [dispatch, user_id])\r\n\r\n  useEffect(() => {\r\n    if (roleUser === \"PARENT_USER\") {\r\n      trackPromise(getUserRegisterJoinSemesterByPayer(dispatch, user_id))\r\n    }\r\n    else if (roleUser === \"STUDENT_USER\") {\r\n      trackPromise(getUserRegisterJoinSemesterByStudent(dispatch, user_id))\r\n    }\r\n  }, [dispatch, user_id, roleUser])\r\n\r\n  console.log(notifys.notifys)\r\n  console.log(user_read_notifications.user_not_readed_notifications)\r\n\r\n  let data_not_read: Options[] = [];\r\n  let total = 0;\r\n  user_read_notifications.user_not_readed_notifications.map((ele, idx) => {\r\n    return notifys.notifys.map(notification => {\r\n      if (notification.idx === ele.notification_id){\r\n        let item: Options = {\r\n          notification_id: ele.notification_id,\r\n          notification_name: notification.name,\r\n          user_id: ele.user_id,\r\n          notification_time: notification.time,\r\n          notification_desciption: notification.description,\r\n          is_read: ele.is_read\r\n        }\r\n        total ++;\r\n        return data_not_read.push(item)\r\n      }\r\n      return notification\r\n    })\r\n  })\r\n\r\n  let data_readed: Options[] = [];\r\n  user_read_notifications.user_readed_notifications.map((ele, idx) => {\r\n    return notifys.notifys.map(notification => {\r\n      if (notification.idx === ele.notification_id && total <= 6){\r\n        let item: Options = {\r\n          notification_id: ele.notification_id,\r\n          notification_name: notification.name,\r\n          user_id: ele.user_id,\r\n          notification_time: notification.time,\r\n          notification_desciption: notification.description,\r\n          is_read: ele.is_read\r\n        }\r\n        total ++;\r\n        return data_not_read.push(item)\r\n      }\r\n      return notification\r\n    })\r\n  })\r\n\r\n  const history = useHistory();\r\n  const routeChange = (props: Options) =>{ \r\n      setShow(!isShow)\r\n      dispatch(putUserReadNotification({\r\n        user_id: user_id,\r\n        notification_id: props.notification_id,\r\n        is_read: true\r\n      }))\r\n      localStorage.removeItem('notification_id');\r\n      localStorage.setItem('notification_id', props.notification_id.toString());\r\n      localStorage.removeItem('user_id');\r\n      localStorage.setItem('user_id', props.user_id.toString());\r\n      localStorage.removeItem('notification_name');\r\n      localStorage.setItem('notification_name', props.notification_name);\r\n      localStorage.removeItem('notification_desciption');\r\n      localStorage.setItem('notification_desciption', props.notification_desciption);\r\n      localStorage.removeItem('notification_time');\r\n      localStorage.setItem('notification_time', props.notification_time);\r\n      let path = '/notification/detail'; \r\n      history.push({\r\n          pathname: path,\r\n      });\r\n  }\r\n\r\n  function routeCart() {\r\n    let path = '/cart'; \r\n    history.push({\r\n        pathname: path\r\n    });\r\n  }\r\n\r\n  if (roleUser === \"PARENT_USER\" || roleUser === \"STUDENT_USER\") {\r\n    return (\r\n\r\n      <li className=\"nav-item dropdown no-arrow\">\r\n  \r\n  \r\n        <p className=\"nav-link dropdown-toggle waves-effect waves-light\" id=\"navbarDropdownMenuLink-5\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\" onClick={() => {\r\n          routeCart();\r\n        }}>\r\n          <span className=\"badge badge-danger ml-2\">{user_register_join_semesters.waiting.length}</span>\r\n          <AiOutlineShoppingCart />\r\n        </p>\r\n  \r\n        <div className={`dropdown-menu dropdown-menu-right shadow dropdown-secondary animated--grow-in ${(isShow) ? \"show\" : \"\"} notification`}\r\n          aria-labelledby=\"userDropdown\">\r\n            <ul className=\"list-notify\">\r\n              {\r\n                data_not_read.map((ele, idx) => {\r\n                  return (\r\n                    <li key={idx}>\r\n                      <p className=\"dropdown-item waves-light\"\r\n                        onClick={() => {routeChange(ele)}}\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#logoutModal\">\r\n                        <i className=\"fas fa-bell fa-sm fa-fw mr-2\"></i>\r\n                        {ele.notification_name}\r\n                        <span className=\"badge badge-danger ml-2\">*</span>\r\n                      </p>\r\n                    </li>\r\n                  )\r\n                })\r\n              }\r\n  \r\n  \r\n              {\r\n                data_readed.map((ele, idx) => {\r\n                  return (\r\n                    <li>\r\n                      <p className=\"dropdown-item waves-light\"\r\n                        onClick={() => dispatch(logout())}\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#logoutModal\">\r\n                        <i className=\"fas fa-bell fa-sm fa-fw mr-2 text-gray-400\"></i>\r\n                        {ele.notification_name}\r\n                      </p>\r\n                    </li>\r\n                  )\r\n                })\r\n              }\r\n            </ul>\r\n            <div className=\"view-all-notify text-center\">\r\n              <a href=\"/notification\">Xem toàn bộ</a>\r\n            </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <></>\r\n    )\r\n  }\r\n};\r\n\r\nexport default TopMenuCart;\r\n","import React from \"react\";\nimport TopMenuAccount from \"./TopMenuAccount\";\nimport \"./TopMenu.css\";\nimport { useSelector } from \"react-redux\";\nimport { IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\nimport TopMenuNotification from \"./TopNotification\";\nimport TopMenuCart from \"./TopMenuCart\";\n\nconst TopMenu: React.FC = () => {\n  const page: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\n  var role_privilege = localStorage.getItem('role_privilege')\n  var rolePrivilege:string[] =[]\n  var roleUser :string =\"\"\n  if (role_privilege !== null) {\n      rolePrivilege = role_privilege.split(',')\n      roleUser = rolePrivilege[0]\n  }\n\n  if (roleUser === \"ADMIN_USER\"){\n    return (\n      <nav className=\"navbar navbar-expand navbar-light bg-custom-dark topbar mb-4 static-top shadow\">\n        <ol className=\"breadcrumb dark-breadcrumb\">\n          <li className=\"breadcrumb-item\"><a href=\"# \">{page ? page.area : null}</a></li>\n          <li className=\"breadcrumb-item\"><a href=\"# \">{page ? page.subArea : null}</a></li>\n        </ol>\n  \n        <ul className=\"navbar-nav ml-auto\">\n          <TopMenuNotification />\n          <div className=\"topbar-divider d-none d-sm-block\"></div>\n          <TopMenuAccount />\n        </ul>\n      </nav>\n    );\n  }\n  else if (roleUser === \"TEACHER_USER\"){\n    return (\n      <nav className=\"navbar navbar-expand navbar-light bg-custom-dark topbar mb-4 static-top\" id=\"teacher_navbar\">\n        <ol className=\"breadcrumb dark-breadcrumb\" id=\"teacher_breadcrumb\">\n          <li className=\"breadcrumb-item teacher-breadcrumb-item\"><h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">{page ? page.area : null}</h1></li>\n          <li className=\"breadcrumb-item teacher-breadcrumb-item\"><h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">{page ? page.subArea : null}</h1></li>\n        </ol>\n  \n        <ul className=\"navbar-nav ml-auto\">\n          <TopMenuNotification />\n          <div className=\"topbar-divider d-none d-sm-block\"></div>\n          <TopMenuAccount />\n        </ul>\n      </nav>\n    );\n  }\n\n  else if (roleUser === \"PARENT_USER\" || roleUser === \"STUDENT_USER\") {\n    return (\n      <nav className=\"navbar navbar-expand navbar-light bg-custom-dark topbar mb-4\" id=\"teacher_navbar\">\n        <ol className=\"breadcrumb dark-breadcrumb\" id=\"teacher_breadcrumb\">\n          <li className=\"breadcrumb-item teacher-breadcrumb-item\"><h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">{page ? page.area : null}</h1></li>\n          <li className=\"breadcrumb-item teacher-breadcrumb-item\"><h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">{page ? page.subArea : null}</h1></li>\n        </ol>\n  \n        <ul className=\"navbar-nav ml-auto\">\n          <TopMenuCart />\n          <div className=\"topbar-divider d-none d-sm-block\"></div>\n          <TopMenuNotification />\n          <div className=\"topbar-divider d-none d-sm-block\"></div>\n          <TopMenuAccount />\n        </ul>\n      </nav>\n    );\n  }\n  return (\n    <nav className=\"navbar navbar-expand navbar-light bg-custom-dark topbar mb-4 static-top shadow\">\n      <ol className=\"breadcrumb dark-breadcrumb\">\n        <li className=\"breadcrumb-item\"><a href=\"# \">{page ? page.area : null}</a></li>\n        <li className=\"breadcrumb-item\"><a href=\"# \">{page ? page.subArea : null}</a></li>\n      </ol>\n\n      <ul className=\"navbar-nav ml-auto\">\n        <TopMenuNotification />\n        <div className=\"topbar-divider d-none d-sm-block\"></div>\n        <TopMenuAccount />\n      </ul>\n    </nav>\n  );\n  \n};\n\nexport default TopMenu;\n","export const UPDATE_CURRENT_PATH: string = \"UPDATE_CURRENT_PATH\";\n\nexport function updateCurrentPath(area: string, subArea: string): IUpdateCurrentPathActionType {\n    return { type: UPDATE_CURRENT_PATH, area: area, subArea: subArea };\n}\n\n\ninterface IUpdateCurrentPathActionType { type: string, area: string, subArea: string };","import React, { PropsWithChildren, ReactElement } from \"react\";\nimport { ICardProperties } from \"../types/TopCard.types\";\n\nfunction TopCard(props: PropsWithChildren<ICardProperties>): ReactElement {\n    return (\n        <div className=\"col-xl-3 col-md-6 mb-4\">\n            <div className={`card border-left-${props.class} shadow h-100 py-2 `}>\n                <div className=\"card-body\">\n                    <div className=\"row no-gutters align-items-center\">\n                        <div className=\"col mr-2\">\n                            <div className=\"text-xs font-weight-bold text-green text-uppercase mb-1\">{props.title}</div>\n                            <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{props.text}</div>\n                        </div>\n                        <div className=\"col-auto\">\n                            <i className={`fas fa-${props.icon} fa-2x text-gray-300`}></i>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default TopCard;\n","export interface IAnonymousNotification {\r\n    id: any,\r\n    name: string, \r\n    description: string,\r\n    time: string\r\n}\r\n\r\nexport enum AnonymousNotificationModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n} ","import { IAnonymousNotification, AnonymousNotificationModificationStatus } from \"../models/anonymous_notification.interface\";\r\nexport const ADD_ANONYMOUS_NOTIFICATION: string = \"ADD_ANONYMOUS_NOTIFICATION\";\r\nexport const EDIT_ANONYMOUS_NOTIFICATION: string = \"EDIT_ANONYMOUS_NOTIFICATION\";\r\nexport const REMOVE_ANONYMOUS_NOTIFICATION: string = \"REMOVE_ANONYMOUS_NOTIFICATION\";\r\nexport const CHANGE_ANONYMOUS_NOTIFICATION_AMOUNT: string = \"CHANGE_ANONYMOUS_NOTIFICATION_AMOUNT\";\r\nexport const CHANGE_ANONYMOUS_NOTIFICATION_PENDING_EDIT: string = \"CHANGE_ANONYMOUS_NOTIFICATION_PENDING_EDIT\";\r\nexport const CLEAR_ANONYMOUS_NOTIFICATION_PENDING_EDIT: string = \"CLEAR_ANONYMOUS_NOTIFICATION_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_ANONYMOUS_NOTIFICATION_ALL: string = \"REMOVE_ANONYMOUS_NOTIFICATION_ALL\";\r\nexport const INITIAL_ANONYMOUS_NOTIFICATION: string = \"INITIAL_ANONYMOUS_NOTIFICATION\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(anonymous_notification: IAnonymousNotification) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        anonymous_notification\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialAnonymousNotification(anonymous_notification: IAnonymousNotification): IInitialAnonymousNotificationActionType {\r\n    return { type: INITIAL_ANONYMOUS_NOTIFICATION, anonymous_notification: anonymous_notification };\r\n}\r\n\r\nexport function removeAnonymousNotificationAll(): IRemoveAnonymousNotificationAllActionType {\r\n    return { type: REMOVE_ANONYMOUS_NOTIFICATION_ALL };\r\n}\r\n\r\nexport function addAnonymousNotification(anonymous_notification: IAnonymousNotification): IAddAnonymousNotificationActionType {\r\n    return { type: ADD_ANONYMOUS_NOTIFICATION, anonymous_notification: anonymous_notification };\r\n}\r\n\r\nexport function editAnonymousNotification(anonymous_notification: IAnonymousNotification): IEditAnonymousNotificationActionType {\r\n    return { type: EDIT_ANONYMOUS_NOTIFICATION, anonymous_notification: anonymous_notification };\r\n}\r\n\r\nexport function removeAnonymousNotification(id: any): IRemoveAnonymousNotificationActionType {\r\n    return { type: REMOVE_ANONYMOUS_NOTIFICATION, id: id };\r\n}\r\n\r\nexport function changeSelectedAnonymousNotification(anonymous_notification: IAnonymousNotification): IChangeSelectedAnonymousNotificationActionType {\r\n    return { type: CHANGE_ANONYMOUS_NOTIFICATION_PENDING_EDIT, anonymous_notification: anonymous_notification };\r\n}\r\n\r\nexport function clearSelectedAnonymousNotification(): IClearSelectedAnonymousNotificationActionType {\r\n    return { type: CLEAR_ANONYMOUS_NOTIFICATION_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateAnonymousNotification(value: AnonymousNotificationModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddAnonymousNotificationActionType { type: string, anonymous_notification: IAnonymousNotification };\r\ninterface IEditAnonymousNotificationActionType { type: string, anonymous_notification: IAnonymousNotification };\r\ninterface IRemoveAnonymousNotificationActionType { type: string, id: any };\r\ninterface IChangeSelectedAnonymousNotificationActionType { type: string, anonymous_notification: IAnonymousNotification };\r\ninterface IClearSelectedAnonymousNotificationActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  AnonymousNotificationModificationStatus};\r\ninterface IRemoveAnonymousNotificationAllActionType { type: string }\r\ninterface IInitialAnonymousNotificationActionType {type: string, anonymous_notification: IAnonymousNotification}","import { IArtAge, ArtAgeModificationStatus } from \"../models/art_age.interface\";\r\nexport const ADD_ART_AGE: string = \"ADD_ART_AGE\";\r\nexport const EDIT_ART_AGE: string = \"EDIT_ART_AGE\";\r\nexport const REMOVE_ART_AGE: string = \"REMOVE_ART_AGE\";\r\nexport const CHANGE_ART_AGE_AMOUNT: string = \"CHANGE_ART_AGE_AMOUNT\";\r\nexport const CHANGE_ART_AGE_PENDING_EDIT: string = \"CHANGE_ART_AGE_PENDING_EDIT\";\r\nexport const CLEAR_ART_AGE_PENDING_EDIT: string = \"CLEAR_ART_AGE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_ART_AGE_ALL: string = \"REMOVE_ART_AGE_ALL\";\r\nexport const INITIAL_ART_AGE: string = \"INITIAL_ART_AGE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(art_age: IArtAge) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        art_age\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialArtAge(art_age: IArtAge): IInitialArtAgeActionType {\r\n    return { type: INITIAL_ART_AGE, art_age: art_age };\r\n}\r\n\r\nexport function removeArtAgeAll(): IRemoveArtAgeAllActionType {\r\n    return { type: REMOVE_ART_AGE_ALL };\r\n}\r\n\r\nexport function addArtAge(art_age: IArtAge): IAddArtAgeActionType {\r\n    return { type: ADD_ART_AGE, art_age: art_age };\r\n}\r\n\r\nexport function editArtAge(art_age: IArtAge): IEditArtAgeActionType {\r\n    return { type: EDIT_ART_AGE, art_age: art_age };\r\n}\r\n\r\nexport function removeArtAge(id: any): IRemoveArtAgeActionType {\r\n    return { type: REMOVE_ART_AGE, id: id };\r\n}\r\n\r\nexport function changeSelectedArtAge(art_age: IArtAge): IChangeSelectedArtAgeActionType {\r\n    return { type: CHANGE_ART_AGE_PENDING_EDIT, art_age: art_age };\r\n}\r\n\r\nexport function clearSelectedArtAge(): IClearSelectedArtAgeActionType {\r\n    return { type: CLEAR_ART_AGE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateArtAge(value: ArtAgeModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddArtAgeActionType { type: string, art_age: IArtAge };\r\ninterface IEditArtAgeActionType { type: string, art_age: IArtAge };\r\ninterface IRemoveArtAgeActionType { type: string, id: any };\r\ninterface IChangeSelectedArtAgeActionType { type: string, art_age: IArtAge };\r\ninterface IClearSelectedArtAgeActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ArtAgeModificationStatus};\r\ninterface IRemoveArtAgeAllActionType { type: string }\r\ninterface IInitialArtAgeActionType {type: string, art_age: IArtAge}","import React, { useState, ChangeEvent, Fragment } from \"react\";\r\nimport { SelectProps } from \"../types/Select.types\";\r\n\r\nfunction SelectKeyValue(props: SelectProps): JSX.Element {\r\n    const [touched, setTouch] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [htmlClass, setHtmlClass] = useState(\"\");\r\n    const [value, setValue] = useState(props.value);\r\n\r\n\r\n    function onValueChanged(event: ChangeEvent<HTMLSelectElement>): void {\r\n        let [error, validClass, elementValue] = [\"\", \"\", event.target.value];\r\n\r\n        [error, validClass] = (!elementValue && props.required) ?\r\n            [\"Value has to be selected\", \"is-invalid\"] : [\"\", \"is-valid\"];\r\n\r\n\r\n        props.onChange({ value: elementValue, error: error, touched: touched, field: props.field });\r\n\r\n        setTouch(true);\r\n        setError(error);\r\n        setHtmlClass(validClass);\r\n        setValue(elementValue);\r\n    }\r\n\r\n    //console.log(props.options)\r\n\r\n    const getOptions: (JSX.Element | null)[] = props.options.map( (option: any, index:number) => {\r\n        return (\r\n            <option key={index} value={option.value}>{option.name}</option>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <Fragment>\r\n            <label htmlFor={`${props.id}`}>{props.label}</label>\r\n            <select\r\n                value={value}\r\n                id={`${props.id}`}\r\n                className={`form-control ${props.inputClass ? props.inputClass : \"\"} ${htmlClass}`}\r\n                onChange={onValueChanged}>\r\n                <option value= {0}>Choose...</option>\r\n                {getOptions}\r\n            </select>\r\n\r\n            {error ?\r\n                <div className=\"invalid-feedback\">\r\n                    {error}\r\n                </div> : null\r\n            }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default SelectKeyValue;","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IAnonymousNotificationState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IAnonymousNotification, AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editAnonymousNotification, clearSelectedAnonymousNotification, setModificationStateAnonymousNotification, addAnonymousNotification } from \"../../store/actions/anonymous_notification.action\";\r\nimport { OnChangeModel, IAnonymousNotificationFormState } from \"../../common/types/Form.types\";\r\nimport { postAnonymousNotification } from \"../../common/service/AnonymousNotification/PostAnonymousNotification\";\r\nimport SelectKeyValue from \"../../common/components/SelectKeyValue\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type artAgeListProps = {\r\n    isCheck: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\n\r\nfunction TeachAgeForm(props: artAgeListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const notifications: IAnonymousNotificationState | null = useSelector((state: IStateType) => state.anonymous_notifications);\r\n    let notification: IAnonymousNotification | null = notifications.selectedAnonymousNotification;\r\n    const isCreate: boolean = (notifications.modificationState === AnonymousNotificationModificationStatus.Create);\r\n\r\n    if (!notification || isCreate) {\r\n        notification = { id: 0, name: \"\", description: \"\", time: \"\" };\r\n    }\r\n\r\n    const [formState, setFormState] = useState({\r\n        name: { error: \"\", value: notification.name },\r\n        description: { error: \"\", value: notification.description },\r\n        type_send: { error: \"\", value: \"Chon gửi tới\" },\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        props.isCheck(false);\r\n        let saveUserFn: Function = (isCreate) ? addAnonymousNotification : editAnonymousNotification;\r\n        saveForm(formState, saveUserFn);\r\n    }\r\n\r\n    function saveForm(formState: IAnonymousNotificationFormState, saveFn: Function): void {\r\n        if (notification) {\r\n            const idx = toast.loading(\"Đang xử lý yêu cầu. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            \r\n            if (saveFn === addAnonymousNotification) {\r\n                dispatch(postAnonymousNotification(formState.type_send.value, {\r\n                    subject: formState.name.value,\r\n                    msgBody: formState.description.value,\r\n                    attachment: \"\"\r\n                }, idx))\r\n            }\r\n\r\n            console.log({\r\n                name: formState.name.value,\r\n                description: formState.description.value,\r\n                type_send: formState.type_send\r\n            })\r\n\r\n            dispatch(clearSelectedAnonymousNotification());\r\n            dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.None));\r\n        }\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        props.isCheck(false);\r\n        dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.name.error || !formState.name.value) as boolean;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} độ tuổi</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_email\"\r\n                                        value={formState.name.value}\r\n                                        field=\"name\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={20000}\r\n                                        label=\"Tên\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_description\"\r\n                                        field=\"description\"\r\n                                        value={formState.description.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        maxLength={100000}\r\n                                        label=\"Miêu tả\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n\r\n                                <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <SelectKeyValue id=\"input_type_send\"\r\n                                        field=\"type_send\"\r\n                                        value={formState.type_send.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        label=\"Gửi tới\"\r\n                                        options={[\r\n                                            {\r\n                                                name: \"Toàn hệ thống\",\r\n                                                value: \"admin\"\r\n                                            },\r\n                                            {\r\n                                                name: \"Chỉ giáo viên\",\r\n                                                value: \"teacher\"\r\n                                            },\r\n                                            {\r\n                                                name: \"Học viên và phụ huynh\",\r\n                                                value: \"student\"\r\n                                            }\r\n                                        ]}\r\n                                    />\r\n                                </div>\r\n                                </div>\r\n\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default TeachAgeForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/art_age.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postAnonymousNotification(recipient: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/sendEmail/${recipient}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Authorization': bearer,\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                'Access-Control-Allow-Credentials': 'true'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }\r\n        )\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postAnonymousNotification(recipient,data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then(data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Gửi thông báo thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Gửi thông báo không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { IScheduleTimeClass, ScheduleTimeClassModificationStatus } from \"../models/schedule_time_class.interface\";\r\nexport const ADD_TIME_SCHEDULE: string = \"ADD_TIME_SCHEDULE\";\r\nexport const EDIT_TIME_SCHEDULE: string = \"EDIT_TIME_SCHEDULE\";\r\nexport const REMOVE_TIME_SCHEDULE: string = \"REMOVE_TIME_SCHEDULE\";\r\nexport const CHANGE_TIME_SCHEDULE_AMOUNT: string = \"CHANGE_TIME_SCHEDULE_AMOUNT\";\r\nexport const CHANGE_TIME_SCHEDULE_PENDING_EDIT: string = \"CHANGE_TIME_SCHEDULE_PENDING_EDIT\";\r\nexport const CLEAR_TIME_SCHEDULE_PENDING_EDIT: string = \"CLEAR_TIME_SCHEDULE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_TIME_SCHEDULE_ALL: string = \"REMOVE_TIME_SCHEDULE_ALL\";\r\nexport const INITIAL_TIME_SCHEDULE: string = \"INITIAL_TIME_SCHEDULE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(schedule_time_class: IScheduleTimeClass) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        schedule_time_class\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialScheduleTimeClass(schedule_time_class: IScheduleTimeClass): IInitialScheduleTimeClassActionType {\r\n    return { type: INITIAL_TIME_SCHEDULE, schedule_time_class: schedule_time_class };\r\n}\r\n\r\nexport function removeScheduleTimeClassAll(): IRemoveScheduleTimeClassAllActionType {\r\n    return { type: REMOVE_TIME_SCHEDULE_ALL };\r\n}\r\n\r\nexport function addScheduleTimeClass(schedule_time_class: IScheduleTimeClass): IAddScheduleTimeClassActionType {\r\n    return { type: ADD_TIME_SCHEDULE, schedule_time_class: schedule_time_class };\r\n}\r\n\r\nexport function editScheduleTimeClass(schedule_time_class: IScheduleTimeClass): IEditScheduleTimeClassActionType {\r\n    return { type: EDIT_TIME_SCHEDULE, schedule_time_class: schedule_time_class };\r\n}\r\n\r\nexport function removeScheduleTimeClass(id: any): IRemoveScheduleTimeClassActionType {\r\n    return { type: REMOVE_TIME_SCHEDULE, id: id };\r\n}\r\n\r\nexport function changeSelectedScheduleTimeClass(schedule_time_class: IScheduleTimeClass): IChangeSelectedScheduleTimeClassActionType {\r\n    return { type: CHANGE_TIME_SCHEDULE_PENDING_EDIT, schedule_time_class: schedule_time_class };\r\n}\r\n\r\nexport function clearSelectedScheduleTimeClass(): IClearSelectedScheduleTimeClassActionType {\r\n    return { type: CLEAR_TIME_SCHEDULE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ScheduleTimeClassModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddScheduleTimeClassActionType { type: string, schedule_time_class: IScheduleTimeClass };\r\ninterface IEditScheduleTimeClassActionType { type: string, schedule_time_class: IScheduleTimeClass };\r\ninterface IRemoveScheduleTimeClassActionType { type: string, id: any };\r\ninterface IChangeSelectedScheduleTimeClassActionType { type: string, schedule_time_class: IScheduleTimeClass };\r\ninterface IClearSelectedScheduleTimeClassActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ScheduleTimeClassModificationStatus};\r\ninterface IRemoveScheduleTimeClassAllActionType { type: string }\r\ninterface IInitialScheduleTimeClassActionType {type: string, schedule_time_class: IScheduleTimeClass}","import { fetchDataSuccess, fetchDataError, addScheduleTimeClass, removeScheduleTimeClassAll } from \"../../../store/actions/schedule_time_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\ninterface ScheduleTimeClass {\r\n    class_name: string;\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\nexport function getScheduleTimeClass(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/classes/schedule-all`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getScheduleTimeClass(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeScheduleTimeClassAll())\r\n                //console.log(data.body.schedule_time)\r\n                data.body.schedules.map((ele: any, index: any) => {\r\n                    let x = Object.values(ele)\r\n                    let y = Object.keys(ele)\r\n                    return x.map((ele_1: any, idx: any) => {\r\n                        //console.log(ele_1)\r\n                        return Object.values(ele_1).map((ele_2: any) => {\r\n                            //console.log(ele_2)\r\n                            let x_1 = Object.values(ele_2)\r\n                            return x_1.map((ele_3: any) => {\r\n                                return ele_3.map((ele_4: any) => {\r\n                                    console.log(ele_4)\r\n                                    if (ele_4.length !== 0){\r\n                                        let time: ScheduleTimeClass = {\r\n                                            class_name: y[0],\r\n                                            start_time: ele_4[0],\r\n                                            end_time: ele_4[1]\r\n                                        }\r\n                                        dispatch(addScheduleTimeClass(time))\r\n                                    }\r\n                                    return ele_4\r\n                                })\r\n                            })\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n \r\nconst Loading = ({ type, color }) => (\r\n    <div className=\"text-center\">\r\n        <ReactLoading type={type} color={color} height={100} width={100}/>\r\n        <h3>Đang tải...</h3>\r\n    </div>\r\n);\r\n \r\nexport default Loading;","import { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalMoney(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-join-semester/total-money`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalMoney(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                localStorage.removeItem('total_money');\r\n                localStorage.setItem('total_money', data.body.total_money)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n            });\r\n}","import { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalTeacher(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/teacher/total`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalTeacher(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                localStorage.removeItem('total_teacher');\r\n                localStorage.setItem('total_teacher', data.body.user)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n            });\r\n}","import { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalParent(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/parent/total`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalParent(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                localStorage.removeItem('total_parent');\r\n                localStorage.setItem('total_parent', data.body.user)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n            });\r\n}","import { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalStudent(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/student/total`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalStudent(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                localStorage.removeItem('total_student');\r\n                localStorage.setItem('total_student', data.body.user)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n            });\r\n}","import { ICourse, CourseModificationStatus } from \"../models/course.interface\";\r\nexport const ADD_COURSE: string = \"ADD_COURSE\";\r\nexport const EDIT_COURSE: string = \"EDIT_COURSE\";\r\nexport const REMOVE_COURSE: string = \"REMOVE_COURSE\";\r\nexport const CHANGE_COURSE_AMOUNT: string = \"CHANGE_COURSE_AMOUNT\";\r\nexport const CHANGE_COURSE_PENDING_EDIT: string = \"CHANGE_COURSE_PENDING_EDIT\";\r\nexport const CLEAR_COURSE_PENDING_EDIT: string = \"CLEAR_COURSE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_COURSE_ALL: string = \"REMOVE_COURSE_ALL\";\r\nexport const INITIAL_COURSE: string = \"INITIAL_COURSE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course: ICourse) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCourse(course: ICourse): IInitialCourseActionType {\r\n    return { type: INITIAL_COURSE, course: course };\r\n}\r\n\r\nexport function removeCourseAll(): IRemoveCourseAllActionType {\r\n    return { type: REMOVE_COURSE_ALL };\r\n}\r\n\r\nexport function addCourse(course: ICourse): IAddCourseActionType {\r\n    return { type: ADD_COURSE, course: course };\r\n}\r\n\r\nexport function editCourse(course: ICourse): IEditCourseActionType {\r\n    return { type: EDIT_COURSE, course: course };\r\n}\r\n\r\nexport function removeCourse(id: any): IRemoveCourseActionType {\r\n    return { type: REMOVE_COURSE, id: id };\r\n}\r\n\r\nexport function changeSelectedCourse(course: ICourse): IChangeSelectedCourseActionType {\r\n    return { type: CHANGE_COURSE_PENDING_EDIT, course: course };\r\n}\r\n\r\nexport function clearSelectedCourse(): IClearSelectedCourseActionType {\r\n    return { type: CLEAR_COURSE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddCourseActionType { type: string, course: ICourse };\r\ninterface IEditCourseActionType { type: string, course: ICourse };\r\ninterface IRemoveCourseActionType { type: string, id: any };\r\ninterface IChangeSelectedCourseActionType { type: string, course: ICourse };\r\ninterface IClearSelectedCourseActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  CourseModificationStatus};\r\ninterface IRemoveCourseAllActionType { type: string }\r\ninterface IInitialCourseActionType {type: string, course: ICourse}","import { fetchDataSuccess, fetchDataError } from \"../../../store/actions/course.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalCourse(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/course/total`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalCourse(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                localStorage.removeItem('total_course');\r\n                localStorage.setItem('total_course', data.body.course)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { IContest, ContestModificationStatus } from \"../models/contest.interface\";\r\nexport const ADD_CONTEST: string = \"ADD_CONTEST\";\r\nexport const EDIT_CONTEST: string = \"EDIT_CONTEST\";\r\nexport const REMOVE_CONTEST: string = \"REMOVE_CONTEST\";\r\nexport const CHANGE_CONTEST_AMOUNT: string = \"CHANGE_CONTEST_AMOUNT\";\r\nexport const CHANGE_CONTEST_PENDING_EDIT: string = \"CHANGE_CONTEST_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_PENDING_EDIT: string = \"CLEAR_CONTEST_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_CONTEST_ALL: string = \"REMOVE_CONTEST_ALL\";\r\nexport const INITIAL_CONTEST: string = \"INITIAL_CONTEST\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(contest: IContest) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        contest\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialContest(contest: IContest): IInitialContestActionType {\r\n    return { type: INITIAL_CONTEST, contest: contest };\r\n}\r\n\r\nexport function removeContestAll(): IRemoveContestAllActionType {\r\n    return { type: REMOVE_CONTEST_ALL };\r\n}\r\n\r\nexport function addContest(contest: IContest): IAddContestActionType {\r\n    return { type: ADD_CONTEST, contest: contest };\r\n}\r\n\r\nexport function editContest(contest: IContest): IEditContestActionType {\r\n    return { type: EDIT_CONTEST, contest: contest };\r\n}\r\n\r\nexport function removeContest(id: any): IRemoveContestActionType {\r\n    return { type: REMOVE_CONTEST, id: id };\r\n}\r\n\r\nexport function changeSelectedContest(contest: IContest): IChangeSelectedContestActionType {\r\n    return { type: CHANGE_CONTEST_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContest(): IClearSelectedContestActionType {\r\n    return { type: CLEAR_CONTEST_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ContestModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddContestActionType { type: string, contest: IContest };\r\ninterface IEditContestActionType { type: string, contest: IContest };\r\ninterface IRemoveContestActionType { type: string, id: any };\r\ninterface IChangeSelectedContestActionType { type: string, contest: IContest };\r\ninterface IClearSelectedContestActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ContestModificationStatus};\r\ninterface IRemoveContestAllActionType { type: string }\r\ninterface IInitialContestActionType {type: string, contest: IContest}","import { fetchDataSuccess, fetchDataError } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalContest(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest/total`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalContest(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                localStorage.removeItem('total_contest');\r\n                localStorage.setItem('total_contest', data.body.contest)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\nimport TopCard from \"../../common/components/TopCard\";\nimport { IAnonymousNotificationState, IScheduleTimeClassState, IStateType} from \"../../store/models/root.interface\";\nimport { logout } from \"../../store/actions/account.actions\";\nimport jwt_decode from \"jwt-decode\";\nimport { setModificationStateAnonymousNotification } from \"../../store/actions/anonymous_notification.action\";\nimport { AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\nimport NotificationForm from \"./NotificationForm\";\nimport Popup from \"reactjs-popup\";\nimport { ToastContainer } from \"react-toastify\";\nimport { getScheduleTimeClass } from \"../../common/service/ScheduleTimeClass/GetScheduleTimeClass\";\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, ViewsDirective, ViewDirective } from \"@syncfusion/ej2-react-schedule\";\n\nimport \"@syncfusion/ej2-base/styles/material.css\";\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\nimport \"@syncfusion/ej2-lists/styles/material.css\";\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\nimport \"@syncfusion/ej2-popups/styles/material.css\";\nimport \"@syncfusion/ej2-splitbuttons/styles/material.css\";\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\n\nimport { trackPromise, usePromiseTracker } from 'react-promise-tracker';\nimport Loading from \"../../common/components/Loading\";\nimport { getTotalMoney } from \"../../common/service/UserRegisterJoinSemester/GetTotalMoney\";\nimport { getTotalTeacher } from \"../../common/service/Teacher/GetTotalTeacher\";\nimport { getTotalParent } from \"../../common/service/Parent/GetTotalParent\";\nimport { getTotalStudent } from \"../../common/service/Student/GetTotalStudent\";\nimport { getTotalCourse } from \"../../common/service/Course/GetTotalCourse\";\nimport { getTotalContest } from \"../../common/service/Contest/GetTotalContest\";\n\n\n\n\n\nconst Home: React.FC = () => {\n  const { promiseInProgress } = usePromiseTracker();\n\n  const [popup1, setPopup1] = useState(false);\n\n  function onAnonymousNotificationRemove() {\n    setPopup1(true);\n  }\n\n  function onRemovePopup1(value: boolean) {\n    setPopup1(false);\n  }\n\n  const anonymous_notifications: IAnonymousNotificationState | null = useSelector((state: IStateType) => state.anonymous_notifications);\n\n  var id_x = localStorage.getItem('total_student');\n  let  numberStudentsCount: number = 0;\n\n  if (id_x !== null) {\n    numberStudentsCount = parseInt(id_x)\n  }\n\n  var id_y = localStorage.getItem('total_parent');\n  let  numberParentsCount: number = 0;\n\n  if (id_y !== null) {\n    numberParentsCount = parseInt(id_y)\n  }\n\n  var id_z = localStorage.getItem('total_teacher');\n  let  numberTeachersCount: number = 0;\n\n  if (id_z !== null) {\n    numberTeachersCount = parseInt(id_z)\n  }\n\n  var id_k = localStorage.getItem('total_course');\n  let  numberCoursesCount: number = 0;\n\n  if (id_k !== null) {\n    numberCoursesCount = parseInt(id_k)\n  }\n\n  var id_l = localStorage.getItem('total_contest');\n  let  numberContestsCount: number = 0;\n\n  if (id_l !== null) {\n    numberContestsCount = parseInt(id_l)\n  }\n\n  var id_m = localStorage.getItem('total_money');\n  let  total_money: number = 0;\n\n  if (id_m !== null) {\n    total_money = parseFloat(id_m)\n  }\n  \n\n\n  const schedule_time_classes: IScheduleTimeClassState = useSelector((state: IStateType) => state.schedule_time_classes);\n  console.log(schedule_time_classes)\n\n  let data: object[] = []\n\n  schedule_time_classes.schedule_time_classes.map((ele, index) => {\n    if (ele !== undefined && ele != null) {\n      return data.push({\n        Id: index,\n        Subject: ele.class_name !== undefined && ele.class_name !== null ? ele.class_name : \"\",\n        StartTime: new Date(ele.start_time),\n        EndTime: new Date(ele.end_time),\n        IsAllDay: false\n      })\n    }\n    return 1\n  })\n\n  console.log(data)\n\n  const dispatch: Dispatch<any> = useDispatch();\n  dispatch(updateCurrentPath(\"Trang chủ\", \"\"));\n\n  let access_token = localStorage.getItem(\"access_token\");\n  let refresh_token = localStorage.getItem(\"refresh_token\");\n  useEffect(() => {\n    if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\n      let access_token_decode: any = jwt_decode(access_token)\n      let refresh_token_decode: any = jwt_decode(refresh_token)\n      let exp_access_token_decode = access_token_decode.exp;\n      let exp_refresh_token_decode = refresh_token_decode.exp;\n      let now_time = Date.now() / 1000;\n      console.log(exp_access_token_decode)\n      console.log(now_time)\n      if (exp_access_token_decode < now_time) {\n        if (exp_refresh_token_decode < now_time) {\n          localStorage.removeItem('access_token') // Authorization\n          localStorage.removeItem('refresh_token')\n          localStorage.removeItem('username')\n          localStorage.removeItem('role_privilege')\n          localStorage.removeItem('id')\n          localStorage.removeItem('contest_id')\n          localStorage.removeItem('schedule_id')\n          dispatch(logout())\n        }\n        else {\n          trackPromise(getTotalMoney(dispatch))\n          trackPromise(getTotalTeacher(dispatch))\n          trackPromise(getTotalParent(dispatch))\n          trackPromise(getTotalStudent(dispatch))\n          trackPromise(getTotalCourse(dispatch))\n          trackPromise(getTotalContest(dispatch))\n          trackPromise(getScheduleTimeClass(dispatch))\n        }\n      }\n      else {\n        trackPromise(getTotalMoney(dispatch))\n        trackPromise(getTotalTeacher(dispatch))\n        trackPromise(getTotalParent(dispatch))\n        trackPromise(getTotalStudent(dispatch))\n        trackPromise(getTotalCourse(dispatch))\n        trackPromise(getTotalContest(dispatch))\n        trackPromise(getScheduleTimeClass(dispatch))\n      }\n    }\n  }, [dispatch, access_token, refresh_token])\n\n  return (\n    promiseInProgress ?\n      <div className=\"row\" id=\"search-box\">\n        <div className=\"col-xl-12 col-lg-12\">\n          <div className=\"input-group\" id=\"search-content\">\n            <div className=\"form-outline\">\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\n            </div>\n          </div>\n        </div>\n      </div> : <Fragment>\n        <ToastContainer />\n        <h1 className=\"h3 mb-2 text-gray-800\">Trang chủ</h1>\n\n        <div className=\"row\">\n          <TopCard title=\"KHÓA HỌC\" text={`${numberCoursesCount}`} icon=\"book\" class=\"primary\" />\n          <TopCard title=\"CUỘC THI\" text={`${numberContestsCount}`} icon=\"book\" class=\"danger\" />\n          <TopCard title=\"DOANH THU\" text={`$${total_money}`} icon=\"dollar-sign\" class=\"success\" />\n        </div>\n\n        <div className=\"row\">\n          <TopCard title=\"HỌC VIÊN\" text={`${numberStudentsCount}`} icon=\"user\" class=\"primary\" />\n          <TopCard title=\"GIÁO VIÊN\" text={`${numberTeachersCount}`} icon=\"user\" class=\"danger\" />\n          <TopCard title=\"PHỤ HUYNH\" text={`${numberParentsCount}`} icon=\"user\" class=\"danger\" />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-xl-6 col-md-4 mb-4\">\n            <button\n              className=\"btn btn-success btn-green\"\n              onClick={() => {\n                dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.Create))\n                onAnonymousNotificationRemove()\n              }}\n            >\n              <i className=\"fas fa fa-plus\"></i>\n              Gửi thông báo\n            </button>\n          </div>\n        </div>\n\n        <Popup\n          open={popup1}\n          onClose={() => setPopup1(false)}\n          closeOnDocumentClick\n        >\n          <>\n            {\n              function () {\n                if ((anonymous_notifications.modificationState === AnonymousNotificationModificationStatus.Create)) {\n                  return <NotificationForm isCheck={onRemovePopup1} />\n                }\n              }()\n            }\n          </>\n        </Popup>\n\n\n        <div className=\"row\">\n          <div className=\"col-xl-12 col-lg-12\">\n            <div className=\"card shadow mb-4\">\n              <div className=\"card-header py-3\">\n                <h6 className=\"m-0 font-weight-bold text-green\">Lịch học chi tiết</h6>\n              </div>\n              <div className=\"card-body\">\n                <ScheduleComponent height='550px' selectedDate={new Date()} eventSettings={{\n                  dataSource: data, fields: {\n                    id: 'Id',\n                    subject: { name: 'Subject' },\n                    isAllDay: { name: 'IsAllDay' },\n                    startTime: { name: 'StartTime' },\n                    endTime: { name: 'EndTime' }\n                  }\n                }}>\n\n                  <ViewsDirective>\n                    <ViewDirective option='WorkWeek' startHour='07:00' endHour='22:00' />\n                    <ViewDirective option='Week' startHour='07:00' endHour='22:00' />\n                    <ViewDirective option='Month' showWeekend={false} />\n                  </ViewsDirective>\n                  <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\n                </ScheduleComponent>;\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </Fragment>\n  );\n}\n\nexport default Home;\n","export interface IUser {\n    id: any,\n    username: string,\n    email: string,\n    password: string,\n    status: string,\n    firstName: string,\n    lastName: string,\n    dateOfBirth: string,\n    profile_image_url: string,\n    sex: string,\n    phone: string,\n    address: string,\n    parents: number,\n    createTime: string\n}\n\nexport enum UserModificationStatus {\n    None = 0,\n    Create = 1,\n    Edit = 2,\n    Remove = 3,\n    ClosePopup = 4,\n    ImportFile = 5\n}","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setModificationState } from \"../../store/actions/users.action\";\r\nimport { UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction TeacherList(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const users = useSelector((state) => state.users);\r\n  const teacher_register_quantifications = useSelector((state) => state.teacher_register_quantifications);\r\n  const history = useHistory();\r\n\r\n\r\n  const datas = users.teachers;\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n  function removeButton(cell, row) {\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-danger\" onClick={() => {\r\n        if (props.onSelect) props.onSelect(row);\r\n        dispatch(setModificationState(UserModificationStatus.Remove))\r\n      }}>Xóa</button>\r\n    );\r\n  }\r\n\r\n  function editButton(cell, row) {\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n        if(props.onSelect) props.onSelect(row);\r\n        dispatch(setModificationState(UserModificationStatus.Edit))\r\n      }}>Chỉnh sửa</button>\r\n    )\r\n  }\r\n\r\n  function totalQuatification(cell, row) {\r\n    let total = 0;\r\n    let teacher_level = 0;\r\n    teacher_register_quantifications.not_approved_now.map((ele, index) => {\r\n      if (ele.teacher_id === row.id){\r\n        total ++;\r\n      }\r\n      return ele\r\n    })\r\n    teacher_register_quantifications.approveds.map((ele, index) => {\r\n      if (ele.teacher_id === row.id){\r\n        teacher_level ++;\r\n      }\r\n      return ele\r\n    })\r\n    return (\r\n      <span onClick={() => {\r\n        onChangeRequest(row.id)\r\n      }}>\r\n        <strong style={ { color: 'red', cursor: \"pointer\" } }>{teacher_level}/{total}</strong>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'username',\r\n      text: 'Tên đăng nhập',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      text: 'Email',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'firstName',\r\n      text: 'Họ',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'lastName',\r\n      text: 'Tên',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'phone',\r\n      text: 'Số điện thoại',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'sex',\r\n      text: 'Hành động',\r\n      formatter: totalQuatification\r\n    },\r\n    {\r\n      dataField: 'dateOfBirth',\r\n      text: '',\r\n      formatter: editButton\r\n    },\r\n    {\r\n      dataField: 'address',\r\n      text: '',\r\n      formatter: removeButton\r\n    },\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n  const onChangeRequest = (teacher_id) => {\r\n    let path = '/teachers/request-level';\r\n    localStorage.removeItem(\"teacher_id\");\r\n    localStorage.setItem(\"teacher_id\", teacher_id.toString())\r\n    history.push({\r\n      pathname: path\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default TeacherList;\r\n","export const ADD_NOTIFICATION: string = \"ADD_NOTIFICATION\";\nexport const REMOVE_NOTIFICATION: string = \"REMOVE_NOTIFICATION\";\n\nexport function addNotification(title: string, text: string): IAddNotificationActionType {\n    return { type: ADD_NOTIFICATION, text: text, title: title };\n}\n\nexport function removeNotification(id: any): IRemoveNotificationActionType {\n    return { type: REMOVE_NOTIFICATION, id: id };\n}\n\ninterface IAddNotificationActionType { type: string, text: string, title: string };\ninterface IRemoveNotificationActionType { type: string, id: any };\n","import { fetchDataSuccess, fetchDataError, removeTeacherAll, initialTeacher, addTeacher } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user {\r\n    id: any,\r\n    username: string,\r\n    email: string,\r\n    password: string,\r\n    status: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    dateOfBirth: string,\r\n    profile_image_url: string,\r\n    sex: string,\r\n    phone: string,\r\n    address: string,\r\n    parents: number,\r\n    createTime: string\r\n}\r\nexport function getTeacher(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/teacher`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTeacher(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeTeacherAll())\r\n                console.log(data.body.teachers)\r\n                data.body.teachers.map((ele: any, index: any) => {\r\n                    var user: user = {\r\n                        id: ele.id,\r\n                        username: ele.username,\r\n                        email: ele.email,\r\n                        password: ele.password,\r\n                        status: ele.status,\r\n                        firstName: ele.firstName,\r\n                        lastName: ele.lastName,\r\n                        dateOfBirth: ele.dateOfBirth,\r\n                        profile_image_url: ele.profile_image_url,\r\n                        sex: ele.sex,\r\n                        phone: ele.phone,\r\n                        address: ele.address,\r\n                        parents: ele.parents,\r\n                        createTime: ele.createTime\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialTeacher(user));\r\n                    }\r\n                    else{\r\n                        return dispatch(addTeacher(user))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getTeacher } from \"./GetTeacher\";\r\n\r\nexport function postTeacher(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/teacher`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postTeacher(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                toast.update(idx, { render: \"Chỉnh thông tin tài khoản thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER });\r\n                getTeacher(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Lỗi username hoặc email bị trùng!\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER });\r\n            });\r\n    };\r\n}","import { fetchDataSuccess, fetchDataError, removeTeacherAll, initialTeacher } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user {\r\n    id: any,\r\n    username: string,\r\n    email: string,\r\n    status: string,\r\n    password: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    dateOfBirth: string,\r\n    profile_image_url: string,\r\n    sex: string,\r\n    phone: string,\r\n    address: string,\r\n    parents: number,\r\n    createTime: string\r\n}\r\nexport function getUserById(dispatch: any , id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserById(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (ele => {\r\n                console.log(ele)\r\n                dispatch(fetchDataSuccess(ele))\r\n                dispatch(removeTeacherAll())\r\n                var user: user = {\r\n                    id: ele.id,\r\n                    username: ele.username,\r\n                    email: ele.email,\r\n                    password: \"\",\r\n                    status: ele.status,\r\n                    firstName: ele.firstName,\r\n                    lastName: ele.lastName,\r\n                    dateOfBirth: ele.dateOfBirth,\r\n                    profile_image_url: ele.profile_image_url,\r\n                    sex: ele.sex,\r\n                    phone: ele.phone,\r\n                    address: ele.address,\r\n                    parents: ele.parents,\r\n                    createTime: ele.createTime\r\n                }\r\n                    //console.log(strDate.substring(0, 16))\r\n                dispatch(initialTeacher(user));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getUserById } from \"../User/GetUserById\";\r\n\r\nexport function putTeacher(id: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putTeacher(id, data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                console.log(id)\r\n                toast.update(idx, { render: \"Chỉnh thông tin tài khoản thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                getUserById(dispatch, id)\r\n            })\r\n            .catch(error => {\r\n                toast.update(id, { render: \"Chỉnh thông tin tài khoản không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editTeacher, clearSelectedUser, setModificationState, addTeacher } from \"../../store/actions/users.action\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { OnChangeModel, IUserFormState } from \"../../common/types/Form.types\";\r\nimport { postTeacher } from \"../../common/service/Teacher/PostTeacher\";\r\nimport { putTeacher } from \"../../common/service/Teacher/PutTeacher\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type teacherListProps = {\r\n  isCheck: (value: boolean) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction TeacherForm(props: teacherListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const users: IUserState = useSelector((state: IStateType) => state.users);\r\n  let user: IUser | null = users.selectedUser;\r\n  const isCreate: boolean = (users.modificationState === UserModificationStatus.Create);\r\n\r\n  if (!user || isCreate) {\r\n    user = { id: 0, username: \"\", email: \"\", password: \"\", status: \"\", firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: 0 };\r\n  }\r\n\r\n  const [formState, setFormState] = useState({\r\n    username: { error: \"\", value: user.username },\r\n    email: { error: \"\", value: user.email },\r\n    password: { error: \"\", value: user.password }\r\n  });\r\n\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n  }\r\n\r\n  function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if (isFormInvalid()) {\r\n      return;\r\n    }\r\n    props.isCheck(false);\r\n    let saveUserFn: Function = (isCreate) ? addTeacher : editTeacher;\r\n    saveForm(formState, saveUserFn);\r\n  }\r\n\r\n  function saveForm(formState: IUserFormState, saveFn: Function): void {\r\n    if (user) {\r\n\r\n      const id = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n\r\n      if (saveFn === addTeacher){\r\n        dispatch(postTeacher({\r\n          username: formState.username.value,\r\n          email: formState.email.value,\r\n          password: formState.password.value,\r\n          firstName: null,\r\n          lastName: null,\r\n          dateOfBirth: null,\r\n          profile_image_url: null,\r\n          sex: null,\r\n          phone: null,\r\n          address: null,\r\n          roleNames: [\"TEACHER_USER\"]\r\n        }, id));\r\n      }\r\n\r\n      else if (saveFn === editTeacher) {\r\n        dispatch(putTeacher(user.id, {\r\n          username: formState.username.value,\r\n          email: formState.email.value,\r\n          password: formState.password.value,\r\n          firstName: null,\r\n          lastName: null,\r\n          dateOfBirth: null,\r\n          profile_image_url: null,\r\n          sex: null,\r\n          phone: null,\r\n          address: null,\r\n          roleNames: [\"TEACHER_USER\"]\r\n        }, id));\r\n      }\r\n\r\n      dispatch(addNotification(\"Giáo viên\", ` ${formState.username.value} chỉnh bởi bạn`));\r\n      dispatch(clearSelectedUser());\r\n      dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    props.isCheck(false);\r\n    dispatch(setModificationState(UserModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid();\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  function isFormInvalid(): boolean {\r\n    return (formState.username.error || formState.email.error\r\n      || !formState.email.value || !formState.username.value || !formState.password.value ) as boolean;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row text-left\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card shadow shadow-xx\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} giáo viên</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={saveUser}>\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col-md-6\">\r\n                    <TextInput id=\"input_username\"\r\n                      field=\"username\"\r\n                      value={formState.username.value}\r\n                      onChange={hasFormValueChanged}\r\n                      required={true}\r\n                      maxLength={100}\r\n                      label=\"Tên đăng nhập\"\r\n                      placeholder=\"\" />\r\n                  </div>\r\n                  <div className=\"form-group col-md-6\">\r\n                    <TextInput id=\"input_email\"\r\n                      field=\"email\"\r\n                      value={formState.email.value}\r\n                      onChange={hasFormValueChanged}\r\n                      required={true}\r\n                      maxLength={200}\r\n                      label=\"Email\"\r\n                      placeholder=\"\" />\r\n                  </div>\r\n                </div>\r\n                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TeacherForm;\r\n","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteUser(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/user/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteUser(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport { clearSelectedUser, setModificationState, addTeacher } from \"../../store/actions/users.action\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { postTeacher } from \"../../common/service/Teacher/PostTeacher\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type teacherListProps = {\r\n  isCheck: (value: boolean) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction TeacherImportForm(props: teacherListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const users: IUserState = useSelector((state: IStateType) => state.users);\r\n  let user: IUser | null = users.selectedUser;\r\n  const isCreate: boolean = (users.modificationState === UserModificationStatus.Create);\r\n\r\n  if (!user || isCreate) {\r\n    user = { id: 0, username: \"\", email: \"\", password: \"\", status: \"\", firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: 0 };\r\n  }\r\n\r\n  function saveForm(formState: any, saveFn: Function): void {\r\n    const id = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\r\n      position: toast.POSITION.TOP_CENTER\r\n    });\r\n\r\n    if (user) {\r\n      console.log({\r\n        username: formState.username,\r\n        email: formState.email,\r\n        password: null,\r\n        firstName: null,\r\n        lastName: null,\r\n        dateOfBirth: null,\r\n        profile_image_url: null,\r\n        sex: null,\r\n        phone: null,\r\n        address: null,\r\n        roleNames: [\"TEACHER_USER\"]\r\n      })\r\n      if (saveFn === addTeacher){\r\n        dispatch(postTeacher({\r\n          username: formState.username,\r\n          email: formState.email,\r\n          password: null,\r\n          firstName: null,\r\n          lastName: null,\r\n          dateOfBirth: null,\r\n          profile_image_url: null,\r\n          sex: null,\r\n          phone: null,\r\n          address: null,\r\n          roleNames: [\"TEACHER_USER\"]\r\n        }, id));\r\n      }\r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    props.isCheck(false);\r\n    dispatch(setModificationState(UserModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    return !csvFile ? \"disabled\" : \"\";\r\n  }\r\n\r\n  const [csvFile, setCsvFile] = useState<any>();\r\n\r\n  const processCSV = (str: string, delim = ',') => {\r\n    console.log('hello')\r\n    const headers = str.slice(0, str.indexOf('\\n')).split(delim);\r\n    console.log(headers)\r\n    const rows = str.slice(str.indexOf('\\n') + 1).split('\\n');\r\n    const headerx = [\"username\", \"email\"]\r\n\r\n    const newArray = rows.map(row => {\r\n      const values = row.split(delim);\r\n      const eachObject = headerx.reduce((obj: any, header, i) => {\r\n        obj[header] = values[i];\r\n        return obj;\r\n      }, {})\r\n      return eachObject;\r\n    })\r\n    console.log(newArray)\r\n    newArray.map((ele: any, index: any) => {\r\n      if (ele.username !== \"\") {\r\n        let x = {\r\n            username: ele.username,\r\n            email: ele.email\r\n        };\r\n\r\n        console.log(x)\r\n        let saveUserFn: Function = addTeacher;\r\n        saveForm(x, saveUserFn);\r\n        dispatch(addNotification(\"Giáo viên\", ` ${x.username} chỉnh bởi bạn`));\r\n        dispatch(clearSelectedUser());\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n        //let saveUserFn: Function = addTeacher;\r\n        //saveForm(x, saveUserFn);\r\n      }\r\n      return 0\r\n    })\r\n  }\r\n\r\n  const saveTeacherCSV = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    props.isCheck(false)\r\n    const file = csvFile;\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = function (e: any) {\r\n        const text = e.target.result;\r\n        processCSV(text)\r\n    }\r\n\r\n    reader.readAsText(file);\r\n\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row text-left\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} giáo viên</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={saveTeacherCSV}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"profile_image\">Chọn file (.xml):</label>\r\n                  <input\r\n                  type={\"file\"}\r\n                  accept=\".csv,.xlsx,.xls\"\r\n                  id=\"csvFile\"\r\n                  onChange={(e: any) => {\r\n                    setCsvFile(e.target.files[0])\r\n                  }}\r\n                />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <a href={`${process.env.REACT_APP_API_LOCAL}\\\\example.csv`}>File mẫu</a>\r\n                </div>\r\n                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TeacherImportForm;\r\n","import { ITeacherRegisterQuantification, TeacherRegisterQuantificationModificationStatus } from \"../models/teacher_register_quantification.interface\";\r\n\r\n// Approved\r\nexport const REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_ALL: string = \"REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_ALL\";\r\nexport const INITIAL_TEACHER_REGISTER_QUANTIFICATION_APPROVED: string = \"INITIAL_TEACHER_REGISTER_QUANTIFICATION_APPROVED\";\r\nexport const ADD_TEACHER_REGISTER_QUANTIFICATION_APPROVED: string = \"ADD_TEACHER_REGISTER_QUANTIFICATION_APPROVED\";\r\nexport const EDIT_TEACHER_REGISTER_QUANTIFICATION_APPROVED: string = \"EDIT_TEACHER_REGISTER_QUANTIFICATION_APPROVED\";\r\nexport const REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED: string = \"REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED\";\r\nexport const CHANGE_TEACHER_REGISTER_QUANTIFICATION_AMOUNT_APPROVED: string = \"CHANGE_TEACHER_REGISTER_QUANTIFICATION_AMOUNT_APPROVED\";\r\nexport const CHANGE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT: string = \"CHANGE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT\";\r\nexport const CLEAR_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT: string = \"CLEAR_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT\";\r\n\r\n// Not approved\r\nexport const REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_ALL: string = \"REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_ALL\";\r\nexport const INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: string = \"INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED\";\r\nexport const ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: string = \"ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED\";\r\nexport const EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: string = \"EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED\";\r\nexport const REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: string = \"REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED\";\r\nexport const CHANGE_TEACHER_REGISTER_QUANTIFICATION_AMOUNT_NOT_APPROVED: string = \"CHANGE_TEACHER_REGISTER_QUANTIFICATION_AMOUNT_NOT_APPROVED\";\r\nexport const CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT: string = \"CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT\";\r\nexport const CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT: string = \"CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT\";\r\n\r\n// Not approved now\r\nexport const REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_ALL: string = \"REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_ALL\";\r\nexport const INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: string = \"INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW\";\r\nexport const ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: string = \"ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW\";\r\nexport const EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: string = \"EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW\";\r\nexport const REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: string = \"REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW\";\r\nexport const CHANGE_TEACHER_REGISTER_QUANTIFICATION_AMOUNT_NOT_APPROVED_NOW: string = \"CHANGE_TEACHER_REGISTER_QUANTIFICATION_AMOUNT_NOT_APPROVED_NOW\";\r\nexport const CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT: string = \"CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT\";\r\nexport const CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT: string = \"CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT\";\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(teacher_register_quantification: ITeacherRegisterQuantification) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        teacher_register_quantification\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function setModificationState(value: TeacherRegisterQuantificationModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n// Approved\r\nexport function initialTeacherRegisterQuatificationApproved(teacher_register_quantification_approved: ITeacherRegisterQuantification): IInitialTeacherRegisterQuatificationApprovedActionType {\r\n    return { type: INITIAL_TEACHER_REGISTER_QUANTIFICATION_APPROVED, teacher_register_quantification_approved: teacher_register_quantification_approved };\r\n}\r\n\r\nexport function removeTeacherRegisterQuatificationApprovedAll(): IRemoveTeacherRegisterQuatificationAllApprovedActionType {\r\n    return { type: REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_ALL };\r\n}\r\n\r\nexport function addTeacherRegisterQuatificationApproved(teacher_register_quantification_approved: ITeacherRegisterQuantification): IAddTeacherRegisterQuatificationApprovedActionType {\r\n    return { type: ADD_TEACHER_REGISTER_QUANTIFICATION_APPROVED, teacher_register_quantification_approved: teacher_register_quantification_approved };\r\n}\r\n\r\nexport function editTeacherRegisterQuatificationApproved(teacher_register_quantification_approved: ITeacherRegisterQuantification): IEditTeacherRegisterQuatificationApprovedActionType {\r\n    return { type: EDIT_TEACHER_REGISTER_QUANTIFICATION_APPROVED, teacher_register_quantification_approved: teacher_register_quantification_approved };\r\n}\r\n\r\nexport function removeTeacherRegisterQuatificationApproved(id: any): IRemoveTeacherRegisterQuatificationApprovedActionType {\r\n    return { type: REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED, id: id };\r\n}\r\n\r\nexport function changeSelectedTeacherRegisterQuatificationApproved(teacher_register_quantification_approved: ITeacherRegisterQuantification): IChangeSelectedTeacherRegisterQuatificationApprovedActionType {\r\n    return { type: CHANGE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT, teacher_register_quantification_approved: teacher_register_quantification_approved };\r\n}\r\n\r\nexport function clearSelectedTeacherRegisterQuatification(): IClearSelectedTeacherRegisterQuatificationApprovedActionType {\r\n    return { type: CLEAR_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT };\r\n}\r\n\r\n\r\n// Not Approved\r\nexport function initialTeacherRegisterQuatificationNotApproved(teacher_register_quantification_not_approved: ITeacherRegisterQuantification): IInitialTeacherRegisterQuatificationNotApprovedActionType {\r\n    return { type: INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED, teacher_register_quantification_not_approved: teacher_register_quantification_not_approved };\r\n}\r\n\r\nexport function removeTeacherRegisterQuatificationNotApprovedAll(): IRemoveTeacherRegisterQuatificationAllNotApprovedActionType {\r\n    return { type: REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_ALL };\r\n}\r\n\r\nexport function addTeacherRegisterQuatificationNotApproved(teacher_register_quantification_not_approved: ITeacherRegisterQuantification): IAddTeacherRegisterQuatificationNotApprovedActionType {\r\n    return { type: ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED, teacher_register_quantification_not_approved: teacher_register_quantification_not_approved };\r\n}\r\n\r\nexport function editTeacherRegisterQuatificationNotApproved(teacher_register_quantification_not_approved: ITeacherRegisterQuantification): IEditTeacherRegisterQuatificationNotApprovedActionType {\r\n    return { type: EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED, teacher_register_quantification_not_approved: teacher_register_quantification_not_approved };\r\n}\r\n\r\nexport function removeTeacherRegisterQuatificationNotApproved(id: any): IRemoveTeacherRegisterQuatificationNotApprovedActionType {\r\n    return { type: REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED, id: id };\r\n}\r\n\r\nexport function changeSelectedTeacherRegisterQuatificationNotApproved(teacher_register_quantification_not_approved: ITeacherRegisterQuantification): IChangeSelectedTeacherRegisterQuatificationNotApprovedActionType {\r\n    return { type: CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT, teacher_register_quantification_not_approved: teacher_register_quantification_not_approved };\r\n}\r\n\r\nexport function clearSelectedTeacherRegisterNotQuatification(): IClearSelectedTeacherRegisterQuatificationNotApprovedActionType {\r\n    return { type: CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT };\r\n}\r\n\r\n\r\n\r\n// Not Approved now\r\nexport function initialTeacherRegisterQuatificationNotApprovedNow(teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification): IInitialTeacherRegisterQuatificationNotApprovedNowActionType {\r\n    return { type: INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW, teacher_register_quantification_not_approved_now: teacher_register_quantification_not_approved_now };\r\n}\r\n\r\nexport function removeTeacherRegisterQuatificationNotApprovedNowAll(): IRemoveTeacherRegisterQuatificationAllNotApprovedNowActionType {\r\n    return { type: REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_ALL };\r\n}\r\n\r\nexport function addTeacherRegisterQuatificationNotApprovedNow(teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification): IAddTeacherRegisterQuatificationNotApprovedNowActionType {\r\n    return { type: ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW, teacher_register_quantification_not_approved_now: teacher_register_quantification_not_approved_now };\r\n}\r\n\r\nexport function editTeacherRegisterQuatificationNotApprovedNow(teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification): IEditTeacherRegisterQuatificationNotApprovedNowActionType {\r\n    return { type: EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW, teacher_register_quantification_not_approved_now: teacher_register_quantification_not_approved_now };\r\n}\r\n\r\nexport function removeTeacherRegisterQuatificationNotApprovedNow(id: any): IRemoveTeacherRegisterQuatificationNotApprovedNowActionType {\r\n    return { type: REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedTeacherRegisterQuatificationNotApprovedNow(teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification): IChangeSelectedTeacherRegisterQuatificationNotApprovedNowActionType {\r\n    return { type: CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT, teacher_register_quantification_not_approved_now: teacher_register_quantification_not_approved_now };\r\n}\r\n\r\nexport function clearSelectedTeacherRegisterNotQuatificationNow(): IClearSelectedTeacherRegisterQuatificationNotApprovedNowActionType {\r\n    return { type: CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT };\r\n}\r\n\r\n// Approved\r\ninterface IAddTeacherRegisterQuatificationApprovedActionType { type: string, teacher_register_quantification_approved: ITeacherRegisterQuantification };\r\ninterface IEditTeacherRegisterQuatificationApprovedActionType { type: string, teacher_register_quantification_approved: ITeacherRegisterQuantification };\r\ninterface IRemoveTeacherRegisterQuatificationApprovedActionType { type: string, id: any };\r\ninterface IChangeSelectedTeacherRegisterQuatificationApprovedActionType { type: string, teacher_register_quantification_approved: ITeacherRegisterQuantification };\r\ninterface IClearSelectedTeacherRegisterQuatificationApprovedActionType { type: string };\r\ninterface IRemoveTeacherRegisterQuatificationAllApprovedActionType { type: string }\r\ninterface IInitialTeacherRegisterQuatificationApprovedActionType {type: string, teacher_register_quantification_approved: ITeacherRegisterQuantification}\r\n\r\n// Not Approved\r\ninterface IAddTeacherRegisterQuatificationNotApprovedActionType { type: string, teacher_register_quantification_not_approved: ITeacherRegisterQuantification };\r\ninterface IEditTeacherRegisterQuatificationNotApprovedActionType { type: string, teacher_register_quantification_not_approved: ITeacherRegisterQuantification };\r\ninterface IRemoveTeacherRegisterQuatificationNotApprovedActionType { type: string, id: any };\r\ninterface IChangeSelectedTeacherRegisterQuatificationNotApprovedActionType { type: string, teacher_register_quantification_not_approved: ITeacherRegisterQuantification };\r\ninterface IClearSelectedTeacherRegisterQuatificationNotApprovedActionType { type: string };\r\ninterface IRemoveTeacherRegisterQuatificationAllNotApprovedActionType { type: string }\r\ninterface IInitialTeacherRegisterQuatificationNotApprovedActionType {type: string, teacher_register_quantification_not_approved: ITeacherRegisterQuantification}\r\n\r\n// Not Approved now\r\ninterface IAddTeacherRegisterQuatificationNotApprovedNowActionType { type: string, teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification };\r\ninterface IEditTeacherRegisterQuatificationNotApprovedNowActionType { type: string, teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification };\r\ninterface IRemoveTeacherRegisterQuatificationNotApprovedNowActionType { type: string, id: any };\r\ninterface IChangeSelectedTeacherRegisterQuatificationNotApprovedNowActionType { type: string, teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification };\r\ninterface IClearSelectedTeacherRegisterQuatificationNotApprovedNowActionType { type: string };\r\ninterface IRemoveTeacherRegisterQuatificationAllNotApprovedNowActionType { type: string }\r\ninterface IInitialTeacherRegisterQuatificationNotApprovedNowActionType {type: string, teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification}\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  TeacherRegisterQuantificationModificationStatus};","import { fetchDataSuccess, fetchDataError, removeTeacherRegisterQuatificationApprovedAll, initialTeacherRegisterQuatificationApproved, addTeacherRegisterQuatificationApproved, removeTeacherRegisterQuatificationNotApprovedNowAll, removeTeacherRegisterQuatificationNotApprovedAll, initialTeacherRegisterQuatificationNotApproved, addTeacherRegisterQuatificationNotApproved, initialTeacherRegisterQuatificationNotApprovedNow, addTeacherRegisterQuatificationNotApprovedNow } from \"../../../store/actions/teacher_register_quantification.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface TeacherRegisterQuantification {\r\n    id: any;\r\n    teacher_id: number;\r\n    teacher_name: string;\r\n    reviewer_id: number;\r\n    course_id: number;\r\n    course_name: string;\r\n    art_age_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    degree_photo_url: string;\r\n    status: string;\r\n}\r\nexport function getTeacherRegisterQuantification(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/teacher-register-level`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTeacherRegisterQuantification(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeTeacherRegisterQuatificationApprovedAll())\r\n                dispatch(removeTeacherRegisterQuatificationNotApprovedNowAll())\r\n                dispatch(removeTeacherRegisterQuatificationNotApprovedAll())\r\n                console.log(data.body.teacher_register_qualification)\r\n                data.body.teacher_register_qualification.map((ele: any, index: any) => {\r\n                    var TeacherRegisterQuantification: TeacherRegisterQuantification = {\r\n                        id: ele.id,\r\n                        teacher_id: ele.teacher_id,\r\n                        reviewer_id: ele.reviewer_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        course_id: ele.course_id,\r\n                        course_name:ele.course_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        degree_photo_url: ele.degree_photo_url,\r\n                        status: ele.status\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (ele.status === \"Approved\"){\r\n                        if (index === 0){\r\n                            return dispatch(initialTeacherRegisterQuatificationApproved(TeacherRegisterQuantification));\r\n                        }\r\n                        else{\r\n                            return dispatch(addTeacherRegisterQuatificationApproved(TeacherRegisterQuantification))\r\n                        }\r\n                    }\r\n                    else if (ele.status === \"Not approved now\"){\r\n                        if (index === 0){\r\n                            return dispatch(initialTeacherRegisterQuatificationNotApprovedNow(TeacherRegisterQuantification));\r\n                        }\r\n                        else{\r\n                            return dispatch(addTeacherRegisterQuatificationNotApprovedNow(TeacherRegisterQuantification))\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (index === 0){\r\n                            return dispatch(initialTeacherRegisterQuatificationNotApproved(TeacherRegisterQuantification));\r\n                        }\r\n                        else{\r\n                            return dispatch(addTeacherRegisterQuatificationNotApproved(TeacherRegisterQuantification))\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport TeacherList from \"./TeacherList\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./Teacher.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IUserState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport {clearSelectedUser, setModificationState, changeSelectedUser, removeTeacher  } from \"../../store/actions/users.action\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport TeacherForm from \"./TeacherForm\";\r\nimport { getTeacher } from \"../../common/service/Teacher/GetTeacher\";\r\nimport { deleteUser } from \"../../common/service/User/DeleteUser\";\r\nimport TeacherImportForm from \"./TeacherImportForm\";\r\nimport { getTeacherRegisterQuantification } from \"../../common/service/TeacherRegisterQuantification/GetTeacherRegisterQuantification\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport CSVReader from \"react-csv-reader\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { postTeacher1 } from \"../../common/service/Teacher/PostTeacher1\";\r\n\r\n\r\n\r\nconst Teacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = users.teachers.length;\r\n    const [popup, setPopup] = useState(false);\r\n    const { promiseInProgress } = usePromiseTracker();\r\n    const [datas, setDatas] = useState<any[]>([]);\r\n    const handleForce = (data: any, fileInfo: any) => {\r\n        if (data.length === 0) {\r\n            toast.error(\"File không chưa dữ liệu\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 2000\r\n            });\r\n        }\r\n        else {\r\n            let is_check = true;\r\n            for (let index = 0; index < data.length; index++) {\r\n                const ele = data[index];\r\n                if (ele.username === null || ele.username === \"\" || ele.email === null || ele.email === \"\" || ele.password === null || ele.password === \"\")   {\r\n                    toast.error(`Lỗi tại dòng ${index + 1}`, {\r\n                        position: toast.POSITION.TOP_CENTER,\r\n                        autoClose: 2000\r\n                    });\r\n                    is_check = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (is_check === true) {\r\n                setDatas(data);\r\n            }\r\n        }\r\n    };\r\n    console.log(datas)\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = datas.length === 0;\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    const handleImport = () => {\r\n        let isError: boolean = datas.length === 0;\r\n        if (isError === false) {\r\n            const id = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            dispatch(postTeacher1({\r\n                username: datas[0].username,\r\n                email: datas[0].email,\r\n                password: datas[0].password,\r\n                firstName: null,\r\n                lastName: null,\r\n                dateOfBirth: null,\r\n                profile_image_url: null,\r\n                sex: null,\r\n                phone: null,\r\n                address: null,\r\n                roleNames: [\"TEACHER_USER\"]\r\n              }, datas.slice(1, datas.length), id));\r\n            /* datas.map((ele: any, idx: any) => {\r\n                if (idx === datas.length - 1) {\r\n                    dispatch(postTeacher({\r\n                        username: ele.username,\r\n                        email: ele.email,\r\n                        password: ele.password,\r\n                        firstName: null,\r\n                        lastName: null,\r\n                        dateOfBirth: null,\r\n                        profile_image_url: null,\r\n                        sex: null,\r\n                        phone: null,\r\n                        address: null,\r\n                        roleNames: [\"TEACHER_USER\"]\r\n                      }, id));\r\n                }\r\n                else {\r\n                    dispatch(postTeacher1({\r\n                        username: ele.username,\r\n                        email: ele.email,\r\n                        password: ele.password,\r\n                        firstName: null,\r\n                        lastName: null,\r\n                        dateOfBirth: null,\r\n                        profile_image_url: null,\r\n                        sex: null,\r\n                        phone: null,\r\n                        address: null,\r\n                        roleNames: [\"TEACHER_USER\"]\r\n                      }));\r\n                }\r\n            }) */\r\n        } \r\n    }\r\n\r\n    const papaparseOptions = {\r\n      header: true,\r\n      dynamicTyping: true,\r\n      skipEmptyLines: true,\r\n      transformHeader: (header: any) => header.toLowerCase().replace(/\\W/g, \"_\")\r\n    };\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getTeacher(dispatch))\r\n                    trackPromise(getTeacherRegisterQuantification(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getTeacher(dispatch))\r\n                trackPromise(getTeacherRegisterQuantification(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token])\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedUser());\r\n        dispatch(updateCurrentPath(\"Giáo viên\", \"Danh sách\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    function onUserSelect(user: IUser): void {\r\n        dispatch(changeSelectedUser(user));\r\n        onUserRemove();\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n\r\n    function onUserRemove() {\r\n        setPopup(true);\r\n    }\r\n\r\n    function onRemovePopup(value: boolean) {\r\n        setPopup(value);\r\n    }\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> :<Fragment>\r\n        <ToastContainer />\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Giáo viên</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"GIÁO VIÊN\" text={`${numberItemsCount}`} icon=\"user\" class=\"primary\" />\r\n                <div className=\"col-xl-4 col-lg-4\">\r\n\r\n                </div>\r\n                <div className=\"col-xl-2 col-lg-2\">\r\n                    <div>\r\n                        <h6 className=\"m-0 font-weight-bold text-green\">Import</h6>\r\n                    </div>\r\n                    <div>\r\n                        <CSVReader\r\n                            cssClass=\"csv-reader-input import-teacher\"\r\n                            label=\"\"\r\n                            onFileLoaded={handleForce}\r\n                            parserOptions={papaparseOptions}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-xl-2 col-lg-2 btn-import-teacher\">\r\n                    <button type=\"button\" className={`btn btn-success left-margin mt-2 ${getDisabledClass()}`} onClick={handleImport}>Gửi</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-2\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Danh sách giáo viên</h6>\r\n                            <div className=\"header-buttons\">\r\n                                {/* <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                    dispatch(setModificationState(UserModificationStatus.ImportFile))\r\n                                    onUserRemove()\r\n                                }}>\r\n                                    <i className=\"fas fa fa-plus\"></i>\r\n                                    Import file\r\n                                </button> */}\r\n                                <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                    dispatch(setModificationState(UserModificationStatus.Create))\r\n                                    onUserRemove()\r\n                                }}>\r\n                                    <i className=\"fas fa fa-plus\"></i>\r\n                                    Thêm thủ công\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <TeacherList\r\n                                onSelect={onUserSelect} \r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <Popup\r\n                open={popup}\r\n                onClose={() => setPopup(false)}\r\n                closeOnDocumentClick\r\n            >\r\n                <>\r\n                    {\r\n                        function () {\r\n                            if ((users.modificationState === UserModificationStatus.Create) || ((users.selectedUser) && (users.modificationState === UserModificationStatus.Edit))) {\r\n                                return <TeacherForm isCheck={onRemovePopup}/>\r\n                            }\r\n\r\n                            else if (users.modificationState === UserModificationStatus.ImportFile){\r\n                                return <TeacherImportForm isCheck={onRemovePopup}/>\r\n                            }\r\n                        }()\r\n                    }\r\n                </>\r\n            </Popup>\r\n            {\r\n                function () {\r\n                    if ((users.selectedUser) && (users.modificationState === UserModificationStatus.Remove)) {\r\n                        return (\r\n                            <Popup\r\n                                open={popup}\r\n                                onClose={() => setPopup(false)}\r\n                                closeOnDocumentClick\r\n                            >\r\n                                <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                    <div className=\"popup-title\">\r\n                                        Are you sure?\r\n                                    </div>\r\n                                    <div className=\"popup-content\">\r\n                                        <button type=\"button\"\r\n                                            className=\"btn btn-danger\"\r\n                                            onClick={() => {\r\n                                                if (!users.selectedUser) {\r\n                                                    return;\r\n                                                }\r\n                                                dispatch(deleteUser(users.selectedUser.id))\r\n                                                dispatch(addNotification(\"Giáo viên\", `${users.selectedUser.username} đã được xóa!`));\r\n                                                dispatch(removeTeacher(users.selectedUser.id));\r\n                                                dispatch(clearSelectedUser());\r\n                                                setPopup(false);\r\n                                            }}>Remove\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </Popup>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Teacher;\r\n","export interface IProduct {\n    id: any;\n    name: string;\n    category: string;\n    description: string;\n    amount: number;\n    price: number;\n    hasExpiryDate: boolean;\n}\n\nexport enum ProductModificationStatus {\n    None = 0,\n    Create = 1,\n    Edit = 2\n}","import { fetchDataRequest } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postTeacher } from \"./PostTeacher\";\r\n\r\nexport function postTeacher1(data: any, lst: any[], idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/teacher`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postTeacher1(data, lst, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                console.log(lst)\r\n                if (lst.length > 1) {\r\n                    dispatch(postTeacher1({\r\n                        username: lst[0].username,\r\n                        email: lst[0].email,\r\n                        password: lst[0].password,\r\n                        firstName: null,\r\n                        lastName: null,\r\n                        dateOfBirth: null,\r\n                        profile_image_url: null,\r\n                        sex: null,\r\n                        phone: null,\r\n                        address: null,\r\n                        roleNames: [\"TEACHER_USER\"]\r\n                      }, lst.slice(1, lst.length), idx));\r\n                }\r\n                else if (lst.length === 1) {\r\n                    dispatch(postTeacher({\r\n                        username: lst[0].username,\r\n                        email: lst[0].email,\r\n                        password: lst[0].password,\r\n                        firstName: null,\r\n                        lastName: null,\r\n                        dateOfBirth: null,\r\n                        profile_image_url: null,\r\n                        sex: null,\r\n                        phone: null,\r\n                        address: null,\r\n                        roleNames: [\"TEACHER_USER\"]\r\n                      }, idx));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                \r\n            });\r\n    };\r\n}","import { IProduct, ProductModificationStatus } from \"../models/product.interface\";\nexport const ADD_PRODUCT: string = \"ADD_PRODUCT\";\nexport const EDIT_PRODUCT: string = \"EDIT_PRODUCT\";\nexport const REMOVE_PRODUCT: string = \"REMOVE_PRODUCT\";\nexport const CHANGE_PRODUCT_AMOUNT: string = \"CHANGE_PRODUCT_AMOUNT\";\nexport const CHANGE_PRODUCT_PENDING_EDIT: string = \"CHANGE_PRODUCT_PENDING_EDIT\";\nexport const CLEAR_PRODUCT_PENDING_EDIT: string = \"CLEAR_PRODUCT_PENDING_EDIT\";\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\n\nexport function addProduct(product: IProduct): IAddProductActionType {\n    return { type: ADD_PRODUCT, product: product };\n}\n\nexport function editProduct(product: IProduct): IEditProductActionType {\n    return { type: EDIT_PRODUCT, product: product };\n}\n\nexport function removeProduct(id: any): IRemoveProductActionType {\n    return { type: REMOVE_PRODUCT, id: id };\n}\n\nexport function changeProductAmount(id: any, amount: number): IChangeProductAmountType {\n    return { type: CHANGE_PRODUCT_AMOUNT, id: id, amount: amount };\n}\n\nexport function changeSelectedProduct(product: IProduct): IChangeSelectedProductActionType {\n    return { type: CHANGE_PRODUCT_PENDING_EDIT, product: product };\n}\n\nexport function clearSelectedProduct(): IClearSelectedProductActionType {\n    return { type: CLEAR_PRODUCT_PENDING_EDIT };\n}\n\nexport function setModificationState(value: ProductModificationStatus): ISetModificationStateActionType {\n    return { type: SET_MODIFICATION_STATE, value: value };\n}\n\ninterface IAddProductActionType { type: string, product: IProduct };\ninterface IEditProductActionType { type: string, product: IProduct };\ninterface IRemoveProductActionType { type: string, id: any };\ninterface IChangeSelectedProductActionType { type: string, product: IProduct };\ninterface IClearSelectedProductActionType { type: string };\ninterface ISetModificationStateActionType { type: string, value:  ProductModificationStatus};\ninterface IChangeProductAmountType {type: string, id: any, amount: number};","import React from \"react\";\r\nimport { IProduct } from \"../../store/models/product.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { RatingStar } from \"rating-star\";\r\n\r\nexport type productListProps = {\r\n    onSelect?: (product: IProduct) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nconst data = [\r\n    {\r\n        'id': 1,\r\n        'class_name': 'CM-1',\r\n        'course_name': 'Chì màu 4-6 tuổi',\r\n        'semester': 'Học kì 1 2022',\r\n        'rating_star': 4\r\n    },\r\n    {\r\n        'id': 2,\r\n        'class_name': 'CM-2',\r\n        'course_name': 'Chì màu 4-6 tuổi',\r\n        'semester': 'Học kì 1 2022',\r\n        'rating_star': 5\r\n    },\r\n    {\r\n        'id': 3,\r\n        'class_name': 'CM-3',\r\n        'course_name': 'Chì màu 4-6 tuổi',\r\n        'semester': 'Học kì 1 2022',\r\n        'rating_star': 3.5\r\n    },\r\n]\r\n\r\nfunction HistoryTeach(props: productListProps): JSX.Element {\r\n    const history = useHistory();\r\n\r\n    const routeChange = () => {\r\n        let path = '/teachers/detail';\r\n        history.push(path);\r\n    }\r\n\r\n    const productElements: (JSX.Element | null)[] = data.map(product => {\r\n        if (!product) { return null; }\r\n        return (<tr className={`table-row`}\r\n            onClick={routeChange}\r\n            key={`product_${product.id}`}>\r\n            <th scope=\"row\">{product.id}</th>\r\n            <td>{product.class_name}</td>\r\n            <td>{product.course_name}</td>\r\n            <td>{product.semester}</td>\r\n            <td>\r\n                <RatingStar id={product.class_name} rating={product.rating_star} />\r\n            </td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"table-responsive portlet\">\r\n            <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Mã lớp</th>\r\n                        <th scope=\"col\">Khóa học</th>\r\n                        <th scope=\"col\">Học kì</th>\r\n                        <th scope=\"col\">Đánh giá</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {productElements}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default HistoryTeach;\r\n","import { logout } from \"../../../store/actions/account.actions\";\r\nimport { fetchDataSuccess, fetchDataError, removeCourseAll, initialCourse, addCourse } from \"../../../store/actions/course.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface Course {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    creator_id: number;\r\n    art_type_id: number;\r\n    art_level_id: number;\r\n    art_age_id: number;\r\n    art_age_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    checked_tutoral: boolean;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getCourse(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/course?page=0&size=10`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getCourse(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeCourseAll())\r\n                console.log(data.body.courses)\r\n                data.body.courses.map((ele: any, index: any) => {\r\n                    var course: Course = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        is_enabled: ele.is_enabled,\r\n                        creator_id: ele.creator_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        art_level_id: ele.art_level_id,\r\n                        art_age_name: ele.art_age_name, \r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        checked_tutoral: ele.checked_tutoral,\r\n                        art_age_id: ele.art_age_id,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n\r\n                    }\r\n                    console.log(course)\r\n                    if (index === 0){\r\n                        return dispatch(initialCourse(course));\r\n                    }\r\n                    else{\r\n                        return dispatch(addCourse(course))\r\n                    }\r\n                })\r\n                dispatch(logout())\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./DetailTeacher.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IProductState, IStateType, IRootPageStateType, ICourseState, ITeacherRegisterQuantificationState } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedProduct, setModificationState,\r\n    changeSelectedProduct\r\n} from \"../../store/actions/products.action\";\r\nimport { ProductModificationStatus, IProduct } from \"../../store/models/product.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport HistoryTeach from \"./HistoryTeach\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { IUser } from \"../../store/models/user.interface\";\r\nimport { getCourse } from \"../../common/service/Course/GetCourse\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n\r\nconst DetailTeacher: React.FC = () => {\r\n    const [checked, setChecked] = useState(true);\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const products: IProductState = useSelector((state: IStateType) => state.products);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = products.products.length;\r\n    const teacher_register_quantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n    const courses: ICourseState = useSelector((state: IStateType) => state.courses);\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    dispatch(getCourse(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                dispatch(getCourse(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token])\r\n\r\n    const { state } = useLocation<any>();\r\n    let user: IUser = { id: 0, username: \"\", email: \"\", password: \"\", status: \"\", firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: 0 };\r\n    if (typeof state !== undefined){\r\n        user = state.user\r\n    }\r\n\r\n    console.log(user)\r\n\r\n    let course_ids: number[] = [];\r\n    teacher_register_quantifications.approveds.map((ele, index) => {\r\n        if (ele.teacher_id === user.id && ele.status === \"Approved\"){\r\n            course_ids.push(ele.course_id)\r\n        } \r\n        return ele\r\n    })\r\n    console.log(course_ids)\r\n    console.log(courses.courses)\r\n\r\n    let course_name = \"\";\r\n    course_ids.map((ele, index) => {\r\n        return courses.courses.map(course => {\r\n            if (course.id === ele){\r\n                console.log(\"hello\")\r\n                if (course_name !== \"\"){\r\n                    course_name = course_name + \", \"+ course.name;\r\n                }\r\n                else {\r\n                    course_name = course_name + course.name;\r\n                    console.log(\"hello\")\r\n                }\r\n            }\r\n            return course\r\n        })\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedProduct());\r\n        dispatch(updateCurrentPath(\"products\", \"list\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    function onProductSelect(product: IProduct): void {\r\n        dispatch(changeSelectedProduct(product));\r\n        dispatch(setModificationState(ProductModificationStatus.None));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Giáo viên</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"LỚP ĐANG DẠY\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n                <TopCard title=\"LỚP ĐÃ DẠY\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked === false) {\r\n                            setChecked(true)\r\n                        }\r\n                    }} style={{\r\n                        color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Thông tin giáo viên</h6>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked === true) {\r\n                            setChecked(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                        }}>Lịch sử dạy</h6>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12\">\r\n                                    <div className=\"card shadow mb-4\">\r\n                                        <div className=\"card-body\">\r\n                                            <form>\r\n                                                <div className=\"form-row\">\r\n                                                    <div className=\"form-group col-md-6 text-center\">\r\n                                                    <img className=\"img-profile\" id=\"img-profile\" alt=\"\"\r\n                                                        src={user.profile_image_url} />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Tên đăng nhập\"\r\n                                                            placeholder={user.username} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Ngày sinh\"\r\n                                                            placeholder={user.dateOfBirth} />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Giới tính\"\r\n                                                            placeholder={user.sex} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Số điện thoại\"\r\n                                                            placeholder={user.phone} />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Địa chỉ\"\r\n                                                            placeholder={user.address} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-row\">\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={100}\r\n                                                            label=\"Trình độ\"\r\n                                                            placeholder={course_name} />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12\">\r\n                                    <div className=\"card shadow mb-4\">\r\n                                        <div className=\"card-header py-3\">\r\n                                            <h6 className=\"m-0 font-weight-bold text-green\">Lịch sử dạy</h6>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <HistoryTeach\r\n                                                onSelect={onProductSelect}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default DetailTeacher;\r\n","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setModificationState } from \"../../store/actions/users.action\";\r\nimport { UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction StudentList(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const users = useSelector((state) => state.users);\r\n\r\n  const datas = users.students;\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n  function removeButton(cell, row) {\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-danger\" onClick={() => {\r\n        if (props.onSelect) props.onSelect(row);\r\n        dispatch(setModificationState(UserModificationStatus.Remove))\r\n      }}>Xóa</button>\r\n    );\r\n  }\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'username',\r\n      text: 'Tên đăng nhập',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      text: 'Email',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'firstName',\r\n      text: 'Họ',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'lastName',\r\n      text: 'Tên',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'dateOfBirth',\r\n      text: 'Ngày sinh',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'sex',\r\n      text: 'Giới tính',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'phone',\r\n      text: 'Số điện thoại',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'address',\r\n      text: 'Hành động',\r\n      formatter: removeButton\r\n    },\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n/*   const userElements = users.students.filter((val) => {\r\n    if (props.value === \"\") {\r\n      return val;\r\n    }\r\n    else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.username).toLowerCase().includes(props.value.toLowerCase()) || val.username.toLowerCase().includes(props.value.toLowerCase()))) {\r\n      return val;\r\n    }\r\n    return null\r\n  }).map((student, index) => {\r\n    if (!student) { return null; }\r\n    return (<tr className={`table-row ${(users.selectedUser && users.selectedUser.id === student.id) ? \"selected\" : \"\"}`}\r\n\r\n      key={`user_${index}`}>\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td onClick={() => {\r\n        if (props.onSelect) props.onSelect(student);\r\n        routeChange()\r\n      }}\r\n      >\r\n        {student.firstName} {student.lastName}\r\n      </td>\r\n      <td>{student.username}</td>\r\n      {\r\n        function () {\r\n          if (student.status !== \"\" && student.status !== null) {\r\n            return (\r\n              <td style={{ color: \"#18AB56\" }}>Đang hoạt động</td>\r\n            )\r\n          }\r\n          else {\r\n            return (\r\n              <td style={{ color: \"#2F4F4F\" }}>Không hoạt động</td>\r\n            )\r\n          }\r\n        }()\r\n      }\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() => {\r\n          if (props.onSelect) props.onSelect(student);\r\n          dispatch(setModificationState(UserModificationStatus.Remove))\r\n        }}>Xóa</button>\r\n      </td>\r\n    </tr>);\r\n  }); */\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default StudentList;\r\n","import { fetchDataSuccess, fetchDataError, removeStudentAll, initialStudent, addStudent } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user {\r\n    id: any,\r\n    username: string,\r\n    email: string,\r\n    password: string,\r\n    status: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    dateOfBirth: string,\r\n    profile_image_url: string,\r\n    sex: string,\r\n    phone: string,\r\n    address: string,\r\n    parents: number,\r\n    createTime: string\r\n}\r\nexport function getStudent(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/student`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getStudent(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeStudentAll())\r\n                data.body.students.map((ele: any, index: any) => {\r\n                    var user: user = {\r\n                        id: ele.id,\r\n                        username: ele.username,\r\n                        email: ele.email,\r\n                        password: \"\",\r\n                        status: ele.status,\r\n                        firstName: ele.firstName,\r\n                        lastName: ele.lastName,\r\n                        dateOfBirth: ele.dateOfBirth,\r\n                        profile_image_url: ele.profile_image_url,\r\n                        sex: ele.sex,\r\n                        phone: ele.phone,\r\n                        address: ele.address,\r\n                        parents: ele.parents,\r\n                        createTime: ele.createTime\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialStudent(user));\r\n                    }\r\n                    else{\r\n                        return dispatch(addStudent(user))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport StudentList from \"./StudentList\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./Student.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IUserState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport {clearSelectedUser, setModificationState, changeSelectedUser, removeStudent  } from \"../../store/actions/users.action\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport { deleteUser } from \"../../common/service/User/DeleteUser\";\r\nimport { getStudent } from \"../../common/service/Student/GetStudent\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\n\r\n\r\nconst Student: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = users.students.length;\r\n    const [popup, setPopup] = useState(false);\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getStudent(dispatch))\r\n                    console.log(\"hello\")\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getStudent(dispatch))\r\n                console.log(\"hello 1\")\r\n            }\r\n        }\r\n        \r\n    }, [dispatch, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedUser());\r\n        dispatch(updateCurrentPath(\"Học sinh\", \"Danh sách\"));\r\n    }, [path.area, dispatch])\r\n\r\n    function onUserSelect(user: IUser): void {\r\n        dispatch(changeSelectedUser(user));\r\n        onUserRemove();\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n\r\n    function onUserRemove() {\r\n        setPopup(true);\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> :<Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Học sinh</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"HỌC SINH\" text={`${numberItemsCount}`} icon=\"user\" class=\"primary\" />\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Danh sách học sinh</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <StudentList\r\n                                onSelect={onUserSelect}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                function () {\r\n                    if ((users.selectedUser) && (users.modificationState === UserModificationStatus.Remove)) {\r\n                        return (\r\n                            <Popup\r\n                                open={popup}\r\n                                onClose={() => setPopup(false)}\r\n                                closeOnDocumentClick\r\n                            >\r\n                                <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                    <div className=\"popup-title\">\r\n                                        Are you sure?\r\n                                    </div>\r\n                                    <div className=\"popup-content\">\r\n                                        <button type=\"button\"\r\n                                            className=\"btn btn-danger\"\r\n                                            onClick={() => {\r\n                                                if (!users.selectedUser) {\r\n                                                    return;\r\n                                                }\r\n                                                dispatch(deleteUser(users.selectedUser.id))\r\n                                                dispatch(addNotification(\"Phụ huynh\", `${users.selectedUser.username} đã được xóa!`));\r\n                                                dispatch(removeStudent(users.selectedUser.id));\r\n                                                dispatch(clearSelectedUser());\r\n                                                setPopup(false);\r\n                                            }}>Remove\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </Popup>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Student;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { IUser } from \"../../store/models/user.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport type userListProps = {\r\n    onSelect?: (user: IUser) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nconst data = [\r\n    {\r\n        'id': \"\",\r\n        'class_name': 'CM-1',\r\n        'course_name': 'Chì màu 4-6 tuổi',\r\n        'semester': 'Học kì 1 2022'\r\n    },\r\n    {\r\n        'id': \"\",\r\n        'class_name': 'CM-2',\r\n        'course_name': 'Chì màu 4-6 tuổi',\r\n        'semester': 'Học kì 1 2022'\r\n    },\r\n    {\r\n        'id': \"\",\r\n        'class_name': 'CM-3',\r\n        'course_name': 'Chì màu 4-6 tuổi',\r\n        'semester': 'Học kì 1 2022'\r\n    },\r\n]\r\n\r\nfunction HistoryStudent(props: userListProps): JSX.Element {\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const history = useHistory();\r\n\r\n    const routeChange = () => {\r\n        let path = '/students/detail';\r\n        history.push(path);\r\n    }\r\n\r\n    const userElements: (JSX.Element | null)[] = data.map(user => {\r\n        if (!user) { return null; }\r\n        return (<tr className={`table-row ${(users.selectedUser && users.selectedUser.id === user.id) ? \"selected\" : \"\"}`}\r\n            onClick={routeChange}\r\n            key={`user_${user.id}`}>\r\n            <th scope=\"row\">{user.id}</th>\r\n            <td>{user.class_name}</td>\r\n            <td>{user.course_name}</td>\r\n            <td>{user.semester}</td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"table-responsive portlet\">\r\n            <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Mã lớp</th>\r\n                        <th scope=\"col\">Khóa học</th>\r\n                        <th scope=\"col\">Học kì</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {userElements}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default HistoryStudent;\r\n","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./DetailStudent.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IUserState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport {\r\n    setModificationState,\r\n    changeSelectedUser\r\n} from \"../../store/actions/users.action\";\r\nimport { UserModificationStatus, IUser } from \"../../store/models/user.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport HistoryStudent from \"./HistoryStudent\";\r\n\r\nconst DetailStudent: React.FC = () => {\r\n    const [checked, setChecked] = useState(true);\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = users.students.length;\r\n    const parents: IUser[] = users.parents;\r\n    let user: IUser | null = users.selectedUser;\r\n    console.log(user)\r\n    if (!user || user === null) {\r\n        user = { id: 0, username: \"\", email: \"\", password: \"\", status: \"\", firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: 0 };\r\n    }\r\n\r\n    let parent: IUser | undefined = parents.find((value) => user !== null && value.id === user.id)\r\n    let parent_name: string = \"\"\r\n    if (typeof parent !== undefined && parent !== undefined){\r\n        parent_name = parent.firstName + \" \" + parent.lastName\r\n    }\r\n    \r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Học sinh\", \"\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    function onUserSelect(user: IUser): void {\r\n        dispatch(changeSelectedUser(user));\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Học sinh</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"LỚP ĐANG HỌC\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n                <TopCard title=\"LỚP ĐÃ HỌC\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"infor_student\" onClick={() => {\r\n                        if (checked === false) {\r\n                            setChecked(true)\r\n                        }\r\n                    }} style={{\r\n                        color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Thông tin học sinh</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"history_student\" onClick={() => {\r\n                        if (checked === true) {\r\n                            setChecked(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                        }}>Lịch sử học</h6>\r\n                        <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#ffffff\" : \"#F24E1E\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12\">\r\n                                    <div className=\"card shadow mb-4\">\r\n                                        <div className=\"card-body\">\r\n                                            <form>\r\n                                                <div className=\"form-row\">\r\n                                                    <div className=\"form-group col-md-6 text-center\">\r\n                                                    <img className=\"img-profile\" id=\"img-profile\" alt=\"\"\r\n                                                        src=\"https://source.unsplash.com/QAB-WJcbgJk/60x60\" />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Tên đăng nhập\"\r\n                                                            placeholder={user.username} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Ngày sinh\"\r\n                                                            placeholder={user.dateOfBirth} />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Giới tính\"\r\n                                                            placeholder={user.sex} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Số điện thoại\"\r\n                                                            placeholder={user.phone} />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Địa chỉ\"\r\n                                                            placeholder={user.address} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Phụ huynh\"\r\n                                                            placeholder={parent_name} />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12\">\r\n                                    <div className=\"card shadow mb-4\">\r\n                                        <div className=\"card-header py-3\">\r\n                                            <h6 className=\"m-0 font-weight-bold text-green\">Lịch sử học</h6>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <HistoryStudent\r\n                                                onSelect={onUserSelect}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default DetailStudent;\r\n","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setModificationState } from \"../../store/actions/users.action\";\r\nimport { UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction ParentList(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const users = useSelector((state) => state.users);\r\n\r\n  const datas = users.parents;\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n  function removeButton(cell, row) {\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-danger\" onClick={() => {\r\n        if (props.onSelect) props.onSelect(row);\r\n        dispatch(setModificationState(UserModificationStatus.Remove))\r\n      }}>Xóa</button>\r\n    );\r\n  }\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'username',\r\n      text: 'Tên đăng nhập',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'email',\r\n      text: 'Email',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'firstName',\r\n      text: 'Họ',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'lastName',\r\n      text: 'Tên',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'dateOfBirth',\r\n      text: 'Ngày sinh',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'sex',\r\n      text: 'Giới tính',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'phone',\r\n      text: 'Số điện thoại',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'address',\r\n      text: 'Hành động',\r\n      formatter: removeButton\r\n    },\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n/*   const userElements = users.parents.filter((val) => {\r\n    if (props.value === \"\") {\r\n      return val;\r\n    }\r\n    else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.username).toLowerCase().includes(props.value.toLowerCase()) || val.username.toLowerCase().includes(props.value.toLowerCase()))) {\r\n      return val;\r\n    }\r\n    return null\r\n  }).map((parent, index) => {\r\n    if (!parent) { return null; }\r\n    return (<tr className={`table-row ${(users.selectedUser && users.selectedUser.id === parent.id) ? \"selected\" : \"\"}`}\r\n\r\n      key={`user_${index}`}>\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td onClick={() => {\r\n        if (props.onSelect) props.onSelect(parent);\r\n        routeChange()\r\n      }}\r\n      >\r\n        {parent.firstName} {parent.lastName}\r\n      </td>\r\n      <td>{parent.username}</td>\r\n      {\r\n        function () {\r\n          if (parent.status !== \"\" && parent.status !== null) {\r\n            return (\r\n              <td style={{ color: \"#18AB56\" }}>Đang hoạt động</td>\r\n            )\r\n          }\r\n          else {\r\n            return (\r\n              <td style={{ color: \"#2F4F4F\" }}>Không hoạt động</td>\r\n            )\r\n          }\r\n        }()\r\n      }\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() => {\r\n          if (props.onSelect) props.onSelect(parent);\r\n          dispatch(setModificationState(UserModificationStatus.Remove))\r\n        }}>Xóa</button>\r\n      </td>\r\n    </tr>);\r\n  }); */\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default ParentList;\r\n","import { fetchDataSuccess, fetchDataError, removeParentAll, initialParent, addParent } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user {\r\n    id: any,\r\n    username: string,\r\n    email: string,\r\n    password: string,\r\n    status: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    dateOfBirth: string,\r\n    profile_image_url: string,\r\n    sex: string,\r\n    phone: string,\r\n    address: string,\r\n    parents: number,\r\n    createTime: string\r\n}\r\nexport function getParent(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/parent`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getParent(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeParentAll())\r\n                data.body.parents.map((ele: any, index: any) => {\r\n                    var user: user = {\r\n                        id: ele.id,\r\n                        username: ele.username,\r\n                        email: ele.email,\r\n                        password: \"\",\r\n                        status: ele.status,\r\n                        firstName: ele.firstName,\r\n                        lastName: ele.lastName,\r\n                        dateOfBirth: ele.dateOfBirth,\r\n                        profile_image_url: ele.profile_image_url,\r\n                        sex: ele.sex,\r\n                        phone: ele.phone,\r\n                        address: ele.address,\r\n                        parents: ele.parents,\r\n                        createTime: ele.createTime\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialParent(user));\r\n                    }\r\n                    else{\r\n                        return dispatch(addParent(user))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport ParentList from \"./ParentList\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./Parent.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IUserState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport {clearSelectedUser, setModificationState, changeSelectedUser, removeParent  } from \"../../store/actions/users.action\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport { deleteUser } from \"../../common/service/User/DeleteUser\";\r\nimport { getParent } from \"../../common/service/Parent/GetParent\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\n\r\n\r\nconst Parent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = users.parents.length;\r\n    const [popup, setPopup] = useState(false);\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getParent(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getParent(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token])\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedUser());\r\n        dispatch(updateCurrentPath(\"Phụ huynh\", \"Danh sách\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    function onUserSelect(user: IUser): void {\r\n        dispatch(changeSelectedUser(user));\r\n        onUserRemove();\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n\r\n    function onUserRemove() {\r\n        setPopup(true);\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> :<Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Phụ huynh</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"PHỤ HUYNH\" text={`${numberItemsCount}`} icon=\"user\" class=\"primary\" />\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Danh sách phụ huynh</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <ParentList\r\n                                onSelect={onUserSelect}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                function () {\r\n                    if ((users.selectedUser) && (users.modificationState === UserModificationStatus.Remove)) {\r\n                        return (\r\n                            <Popup\r\n                                open={popup}\r\n                                onClose={() => setPopup(false)}\r\n                                closeOnDocumentClick\r\n                            >\r\n                                <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                    <div className=\"popup-title\">\r\n                                        Are you sure?\r\n                                    </div>\r\n                                    <div className=\"popup-content\">\r\n                                        <button type=\"button\"\r\n                                            className=\"btn btn-danger\"\r\n                                            onClick={() => {\r\n                                                if (!users.selectedUser) {\r\n                                                    return;\r\n                                                }\r\n                                                dispatch(deleteUser(users.selectedUser.id))\r\n                                                dispatch(addNotification(\"Phụ huynh \", `${users.selectedUser.username} đã được xóa!`));\r\n                                                dispatch(removeParent(users.selectedUser.id));\r\n                                                dispatch(clearSelectedUser());\r\n                                                setPopup(false);\r\n                                            }}>Remove\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </Popup>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Parent;\r\n","import React from \"react\";\r\nimport { IProduct } from \"../../store/models/product.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport type productListProps = {\r\n    onSelect?: (product: IProduct) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nconst data = [\r\n    {\r\n        'id': 1,\r\n        'class_name': 'CM-1',\r\n        'course_name': 'Chì màu 4-6 tuổi',\r\n        'semester': 'Học kì 1 2022'\r\n    },\r\n    {\r\n        'id': 2,\r\n        'class_name': 'CM-2',\r\n        'course_name': 'Chì màu 4-6 tuổi',\r\n        'semester': 'Học kì 1 2022'\r\n    },\r\n    {\r\n        'id': 3,\r\n        'class_name': 'CM-3',\r\n        'course_name': 'Chì màu 4-6 tuổi',\r\n        'semester': 'Học kì 1 2022'\r\n    },\r\n]\r\n\r\nfunction HistoryParent(props: productListProps): JSX.Element {\r\n    const history = useHistory();\r\n\r\n    const routeChange = () => {\r\n        let path = '/students/detail';\r\n        history.push(path);\r\n    }\r\n\r\n    const productElements: (JSX.Element | null)[] = data.map(product => {\r\n        if (!product) { return null; }\r\n        return (<tr className={`table-row `}\r\n            onClick={routeChange}\r\n            key={`product_${product.id}`}>\r\n            <th scope=\"row\">{product.id}</th>\r\n            <td>{product.class_name}</td>\r\n            <td>{product.course_name}</td>\r\n            <td>{product.semester}</td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"table-responsive portlet\">\r\n            <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Mã lớp</th>\r\n                        <th scope=\"col\">Khóa học</th>\r\n                        <th scope=\"col\">Học kì</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {productElements}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default HistoryParent;\r\n","export interface ISemester {\r\n    id: any;\r\n    number: number;\r\n    year: number;\r\n    name: string;\r\n    creator_id: number;\r\n    description: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum SemesterModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./DetailParent.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IProductState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedProduct, setModificationState,\r\n    changeSelectedProduct\r\n} from \"../../store/actions/products.action\";\r\nimport { ProductModificationStatus, IProduct } from \"../../store/models/product.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport HistoryParent from \"./HistoryParent\";\r\n\r\nconst data = {\r\n    'id': 3,\r\n    'first_name': 'Thao',\r\n    'last_name': 'Nguyễn',\r\n    'username': 'thaonguyen123',\r\n    'status': 'Đang hoạt động',\r\n    'date_of_birth': '10/10/2000',\r\n    'phone': '0989439678',\r\n    'sex': 'Nữ',\r\n    'address': 'Thanh Hoa',\r\n    'child': ['thanhtrung123', 'hahang123'],\r\n}\r\n\r\n\r\nconst DetailParent: React.FC = () => {\r\n    const [checked, setChecked] = useState(true);\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const products: IProductState = useSelector((state: IStateType) => state.products);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = products.products.length;\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedProduct());\r\n        dispatch(updateCurrentPath(\"Phụ huynh\", \"Chi tiết\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    function onProductSelect(product: IProduct): void {\r\n        dispatch(changeSelectedProduct(product));\r\n        dispatch(setModificationState(ProductModificationStatus.None));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Le Thi Thao</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"KHÓA HỌC ĐÃ MUA\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" onClick={() => {\r\n                        if (checked === false) {\r\n                            setChecked(true)\r\n                        }\r\n                    }} style={{\r\n                        color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Thông tin học sinh</h6>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" onClick={() => {\r\n                        if (checked === true) {\r\n                            setChecked(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                        }}>Lịch sử học</h6>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12\">\r\n                                    <div className=\"card shadow mb-4\">\r\n                                        <div className=\"card-body\">\r\n                                            <form>\r\n                                                <div className=\"form-row\">\r\n                                                    <div className=\"form-group col-md-6 text-center\">\r\n                                                    <img className=\"img-profile\" id=\"img-profile\" alt=\"\"\r\n                                                        src=\"https://source.unsplash.com/QAB-WJcbgJk/60x60\" />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Tên đăng nhập\"\r\n                                                            placeholder={data.username} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Ngày sinh\"\r\n                                                            placeholder={data.date_of_birth} />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Giới tính\"\r\n                                                            placeholder={data.sex} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Số điện thoại\"\r\n                                                            placeholder={data.phone} />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Địa chỉ\"\r\n                                                            placeholder={data.address} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-row\">\r\n                                                <div className=\"form-group col-md-6\">\r\n                                                        <TextInput id=\"input_email\"\r\n                                                            value={''}\r\n                                                            field=\"name\"\r\n                                                            onChange={()=>{}}\r\n                                                            required={true}\r\n                                                            maxLength={20}\r\n                                                            label=\"Tài khoản con\"\r\n                                                            placeholder={data.child[0] + ', ' + data.child[1]} />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12 col-lg-12\">\r\n                                    <div className=\"card shadow mb-4\">\r\n                                        <div className=\"card-header py-3\">\r\n                                            <h6 className=\"m-0 font-weight-bold text-green\">Lịch sử mua</h6>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <HistoryParent\r\n                                                onSelect={onProductSelect}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default DetailParent;\r\n","import React, { useState, ChangeEvent } from \"react\";\nimport { NumberInputProps } from \"../types/NumberInput.types\";\n\nfunction NumberInput(props: NumberInputProps): JSX.Element {\n    const [touched, setTouch] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [htmlClass, setHtmlClass] = useState(\"\");\n    const [, setValue] = useState(0);\n\n\n    function onValueChanged(event: ChangeEvent<HTMLInputElement>): void {\n        let elementValue: number = (isNaN(Number(event.target.value))) ? 0 : Number(event.target.value);\n        let [error, validClass] = [\"\", \"\"];\n\n        if (!error) {\n            [error, validClass] = ((props.max != null) && elementValue > (props.max)) ?\n            [`Value can't be higher than ${props.max} `, \"is-invalid\"] : [\"\", \"is-valid\"];\n        }\n\n        if (!error) {\n            [error, validClass] = ((props.min != null) && elementValue < (props.min)) ?\n            [`Value can't be lower than ${props.min} `, \"is-invalid\"] : [\"\", \"is-valid\"];\n        }\n\n        props.onChange({ value: elementValue, error: error, touched: touched, field: props.field });\n\n        setTouch(true);\n        setError(error);\n        setHtmlClass(validClass);\n        setValue(elementValue);\n    }\n\n    return (\n        <div>\n            <label htmlFor={props.id.toString()}>{props.label}</label>\n            <input\n                value={props.value}\n                type=\"number\"\n                max={props.max}\n                onChange={onValueChanged}\n                className={`form-control ${props.inputClass} ${htmlClass}`}\n                id={`id_${props.label}`}/>\n            {error ?\n                <div className=\"invalid-feedback\">\n                    {error}\n                </div> : null\n            }\n        </div>\n    );\n}\n\nexport default NumberInput;","import { fetchDataSuccess, fetchDataError, removeSemesterAll, initialSemester, addSemester } from \"../../../store/actions/semester.actions\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface semester {\r\n    id: any;\r\n    number: number;\r\n    year: number;\r\n    name: string;\r\n    creator_id: number;\r\n    description: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getSemester(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSemester(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeSemesterAll())\r\n                //console.log(data.body.semesters)\r\n                data.body.semesters.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.start_time;\r\n                    var strDate_2 = ele.end_time;\r\n                    var semester: semester = {\r\n                        id: ele.id,\r\n                        number: ele.number,\r\n                        year: ele.year,\r\n                        name: ele.name,\r\n                        creator_id: ele.creator_id,\r\n                        description: ele.description,\r\n                        start_time: strDate_1.substring(0, 16),\r\n                        end_time: strDate_2.substring(0, 16),\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time,\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialSemester(semester));\r\n                    }\r\n                    else{\r\n                        return dispatch(addSemester(semester))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, ChangeEvent } from \"react\";\r\nimport { DateInputProps } from \"../types/DateInput.types\";\r\n\r\nfunction DateInput(props: DateInputProps): JSX.Element {\r\n    const [touched, setTouch] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [htmlClass, setHtmlClass] = useState(\"\");\r\n    const [, setValue] = useState(\"\");\r\n\r\n\r\n    function onValueChanged(event: ChangeEvent<HTMLInputElement>): void {\r\n        let [error, validClass, elementValue] = [\"\", \"\", event.target.value];\r\n\r\n        [error, validClass] = (!elementValue && props.required) ?\r\n            [\"Value cannot be empty\", \"is-invalid\"] : [\"\", \"is-valid\"];\r\n\r\n        if (!error) {\r\n            [error, validClass] = (props.maxLength && elementValue && elementValue < (props.maxLength)) ?\r\n            [`Value can't have more than ${props.maxLength.substring(0,10)} ${props.maxLength.substring(11,25)} characters`, \"is-invalid\"] : [\"\", \"is-valid\"];\r\n        }\r\n\r\n        props.onChange({ value: elementValue, error: error, touched: touched, field: props.field });\r\n\r\n        setTouch(true);\r\n        setError(error);\r\n        setHtmlClass(validClass);\r\n        setValue(elementValue);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label htmlFor={props.id.toString()}>{props.label}</label>\r\n            <input\r\n                value={props.value}\r\n                type={props.type}\r\n                onChange={onValueChanged}\r\n                disabled={props.active}\r\n                className={`form-control ${props.inputClass} ${htmlClass}`}\r\n                id={`id_${props.label}`}\r\n                placeholder={props.placeholder} />\r\n            {error ?\r\n                <div className=\"invalid-feedback\">\r\n                    {error}\r\n                </div> : null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DateInput;","import React, { useState, ChangeEvent } from \"react\";\r\nimport { DateInputProps } from \"../types/DateInput.types\";\r\n\r\nfunction DateInput2(props: DateInputProps): JSX.Element {\r\n    const [touched, setTouch] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [htmlClass, setHtmlClass] = useState(\"\");\r\n    const [, setValue] = useState(\"\");\r\n\r\n\r\n    function onValueChanged(event: ChangeEvent<HTMLInputElement>): void {\r\n        let [error, validClass, elementValue] = [\"\", \"\", event.target.value];\r\n\r\n        [error, validClass] = (!elementValue && props.required) ?\r\n            [\"Value cannot be empty\", \"is-invalid\"] : [\"\", \"is-valid\"];\r\n\r\n        if (!error) {\r\n            [error, validClass] = (props.maxLength && elementValue && elementValue < (props.maxLength)) ?\r\n            [`Value can't have more than ${props.maxLength.substring(0,10)} ${props.maxLength.substring(11,25)} characters`, \"is-invalid\"] : [\"\", \"is-valid\"];\r\n        }\r\n\r\n        props.onChange({ value: elementValue, error: error, touched: touched, field: props.field });\r\n\r\n        setTouch(true);\r\n        setError(error);\r\n        setHtmlClass(validClass);\r\n        setValue(elementValue);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label htmlFor={props.id.toString()}>{props.label}</label>\r\n            <input\r\n                value={props.value}\r\n                type={props.type}\r\n                disabled={props.active}\r\n                onChange={onValueChanged}\r\n                className={`form-control ${props.inputClass} ${htmlClass}`}\r\n                id={`id_${props.label}`}\r\n                placeholder={props.placeholder} />\r\n            {error ?\r\n                <div className=\"invalid-feedback\">\r\n                    {error}\r\n                </div> : null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DateInput2;","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, ISemesterState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ISemester, SemesterModificationStatus } from \"../../store/models/semester.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editSemester, clearSelectedSemester, setModificationState, addSemester } from \"../../store/actions/semester.actions\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport NumberInput from \"../../common/components/NumberInput\";\r\nimport { OnChangeModel, ISemesterFormState } from \"../../common/types/Form.types\";\r\nimport { postSemester } from \"../../common/service/semester/PostSemester\";\r\nimport { putSemester } from \"../../common/service/semester/PutSemester\";\r\nimport { toast } from \"react-toastify\";\r\nimport DateInput from \"../../common/components/DateInput\";\r\nimport DateInput2 from \"../../common/components/DateInput2\";\r\n\r\nexport type semesterListProps = {\r\n  isCheck: (value: boolean) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction SemesterForm(props: semesterListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const semesters: ISemesterState | null = useSelector((state: IStateType) => state.semesters);\r\n  let semester: ISemester | null = semesters.selectedSemester;\r\n  const isCreate: boolean = (semesters.modificationState === SemesterModificationStatus.Create);\r\n\r\n  if (!semester || isCreate) {\r\n    semester = { id: 0, name: \"\", description: \"\", number: 0, year: 0, start_time: \"\", end_time: \"\", create_time: \"\", update_time: \"\", creator_id: 0 };\r\n  }\r\n\r\n  const [formState, setFormState] = useState({\r\n    name: { error: \"\", value: semester.name },\r\n    description: { error: \"\", value: semester.description },\r\n    number: { error: \"\", value: semester.number },\r\n    year: { error: \"\", value: semester.year },\r\n    start_time: { error: \"\", value: semester.start_time },\r\n    end_time: { error: \"\", value: semester.end_time }\r\n  });\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    //console.log(formState)\r\n  }\r\n\r\n  function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if (isFormInvalid()) {\r\n      return;\r\n    }\r\n\r\n    let saveUserFn: Function = (isCreate) ? addSemester : editSemester;\r\n    props.isCheck(false);\r\n    saveForm(formState, saveUserFn);\r\n  }\r\n\r\n  function saveForm(formState: ISemesterFormState, saveFn: Function): void {\r\n    if (semester) {\r\n      const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n      \r\n      if (saveFn === addSemester) {\r\n        dispatch(postSemester({\r\n          name: formState.name.value,\r\n          year: formState.year.value,\r\n          description: formState.description.value,\r\n          number: formState.number.value,\r\n          start_time: formState.start_time.value,\r\n          creator_id: localStorage.getItem('id')\r\n        }, idx));\r\n      }\r\n      else {\r\n        dispatch(putSemester(semester.id, {\r\n          name: formState.name.value,\r\n          year: formState.year.value,\r\n          description: formState.description.value,\r\n          number: formState.number.value,\r\n          start_time: formState.start_time.value,\r\n          creator_id: localStorage.getItem('id')\r\n        }, idx));\r\n      }\r\n\r\n      console.log(saveFn)\r\n\r\n      dispatch(addNotification(\"Học kì \", `${formState.name.value} chỉnh bởi bạn`));\r\n      dispatch(clearSelectedSemester());\r\n      dispatch(setModificationState(SemesterModificationStatus.None));\r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    props.isCheck(false);\r\n    dispatch(setModificationState(SemesterModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid();\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  function isFormInvalid(): boolean {\r\n    return (formState.number.error || formState.description.error\r\n      || formState.name.error || formState.year.error || formState.start_time.error || formState.end_time.error\r\n      || !formState.name.value || !formState.start_time.value || !formState.end_time.value) as boolean;\r\n  }\r\n\r\n  var now = new Date();\r\n  now.setMinutes(now.getMinutes() - now.getTimezoneOffset());\r\n  var time_now = now.toISOString().slice(0,16);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row text-left\">\r\n      <div className=\"col-xl-12 col-lg-12\">\r\n        <div className=\"card shadow shadow-xx\">\r\n          <div className=\"card-header py-3\">\r\n            <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} học kì</h6>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={saveUser}>\r\n              <div className=\"form-group\">\r\n                <TextInput id=\"input_name\"\r\n                  value={formState.name.value}\r\n                  field=\"name\"\r\n                  onChange={hasFormValueChanged}\r\n                  required={true}\r\n                  maxLength={2000}\r\n                  label=\"Tên\"\r\n                  placeholder=\"\" />\r\n              </div>\r\n              {/* <div className=\"form-group\">\r\n                <label>Mô tả</label>\r\n              <Editor />\r\n              </div> */}\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <NumberInput id=\"input_year\"\r\n                    value={formState.year.value}\r\n                    field=\"year\"\r\n                    onChange={hasFormValueChanged}\r\n                    max={10000}\r\n                    min={0}\r\n                    label=\"Năm học\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <NumberInput id=\"input_number\"\r\n                    field=\"number\"\r\n                    value={formState.number.value}\r\n                    onChange={hasFormValueChanged}\r\n                    max={10000}\r\n                    min={0}\r\n                    label=\"Học kì\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <DateInput id=\"input_start_time\"\r\n                    field=\"start_time\"\r\n                    value={formState.start_time.value}\r\n                    onChange={hasFormValueChanged}\r\n                    active={false}\r\n                    type=\"datetime-local\"\r\n                    required={false}\r\n                    maxLength={time_now}\r\n                    label=\"Thời gian bắt đầu\"\r\n                    placeholder=\"\" />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <DateInput2 id=\"input_end_time\"\r\n                    field=\"end_time\"\r\n                    value={formState.end_time.value}\r\n                    onChange={hasFormValueChanged}\r\n                    active={formState.start_time.value !== null && formState.start_time.value !== \"\" ? false: true}\r\n                    type=\"datetime-local\"\r\n                    required={false}\r\n                    maxLength={formState.start_time.value}\r\n                    label=\"Thời gian kết thúc\"\r\n                    placeholder=\"\" />\r\n                </div>\r\n              </div>\r\n              <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n              <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SemesterForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess, fetchDataError } from \"../../../store/actions/semester.actions\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getSemester } from \"./GetSemester\";\r\n\r\nexport function postSemester(semester: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(semester)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postSemester(semester, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(semester))\r\n                toast.update(idx, { render: \"Thêm học kì thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(data)\r\n                getSemester(dispatch)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Thêm khóa học không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess, fetchDataError } from \"../../../store/actions/semester.actions\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getSemester } from \"./GetSemester\";\r\n\r\nexport function putSemester(id: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putSemester(id,data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                console.log(id)\r\n                toast.update(idx, { render: \"Chỉnh học kì thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataSuccess(data))\r\n                getSemester(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Chỉnh khóa học không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {  SemesterModificationStatus } from \"../../store/models/semester.interface\";\r\nimport { setModificationState } from \"../../store/actions/semester.actions\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction SemesterList(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const semesters = useSelector((state) => state.semesters);\r\n\r\n\r\n  const datas = semesters.semesters;\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n  function removeButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() =>{\r\n            if(props.onSelect) props.onSelect(row);\r\n            dispatch(setModificationState(SemesterModificationStatus.Remove))\r\n          }}>Xóa</button>\r\n    );\r\n  }\r\n\r\n  function editButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={()=> {\r\n            if(props.onSelect) props.onSelect(row);\r\n            dispatch(setModificationState(SemesterModificationStatus.Edit))\r\n          }}>Chỉnh sửa</button>\r\n    )\r\n  }\r\n\r\n  function showStartTime(cell, row) {\r\n    var strDate = row.start_time;\r\n    return (\r\n        <span>{strDate.substring(0, 10) + \" \" + strDate.substring(11,19)}</span>\r\n    )\r\n  }\r\n\r\n  function showEndTime(cell, row) {\r\n    var strDate = row.start_time;\r\n    return (\r\n        <span>{strDate.substring(0, 10) + \" \" + strDate.substring(11,19)}</span>\r\n    )\r\n  }\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'name',\r\n      text: 'Tên',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'year',\r\n      text: 'Năm học',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'number',\r\n      text: 'Học kì',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'start_time',\r\n      text: 'Thời gian bắt đầu',\r\n      formatter: showStartTime,\r\n    },\r\n    {\r\n      dataField: 'end_time',\r\n      text: 'Thời gian kết thúc',\r\n      formatter: showEndTime,\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: 'Hành động',\r\n      formatter: editButton\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: '',\r\n      formatter: removeButton\r\n    },\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default SemesterList;\r\n","export interface ILesson {\r\n    id: any;\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\n\r\nexport enum LessonModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport SemesterForm from \"./SemesterForm\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./Semester.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { ISemesterState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport Popup from \"reactjs-popup\";\r\nimport {\r\n    removeSemester, clearSelectedSemester, setModificationState,\r\n    changeSelectedSemester\r\n} from \"../../store/actions/semester.actions\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { SemesterModificationStatus, ISemester } from \"../../store/models/semester.interface\";\r\nimport { getSemester } from \"../../common/service/semester/GetSemester\";\r\nimport { deleteSemester } from \"../../common/service/semester/DeleteSemester\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport SemesterList from \"./SemesterlList\";\r\n\r\n\r\nconst Semester: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const semesters: ISemesterState = useSelector((state: IStateType) => state.semesters);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = semesters.semesters.length;\r\n    const [popup, setPopup] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getSemester(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getSemester(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token])\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedSemester());\r\n        dispatch(updateCurrentPath(\"Học kì\", \"Danh sách\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    function onSemesterSelect(semester: ISemester): void {\r\n        dispatch(changeSelectedSemester(semester));\r\n        onSemesterRemove();\r\n        dispatch(setModificationState(SemesterModificationStatus.None));\r\n    }\r\n\r\n    function onSemesterRemove() {\r\n        setPopup(true);\r\n    }\r\n\r\n    function onRemovePopup(value: boolean) {\r\n        setPopup(false);\r\n    }\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> :<Fragment>\r\n      <ToastContainer />\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Học kì</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ HỌC KÌ\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"text\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                                setSearchTerm(event.target.value)\r\n                                console.log(searchTerm)\r\n                            }}/>\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Danh sách học kì</h6>\r\n                            <div className=\"header-buttons\">\r\n                                <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                    dispatch(setModificationState(SemesterModificationStatus.Create))\r\n                                    onSemesterRemove()\r\n                                }}>\r\n                                    <i className=\"fas fa fa-plus\"></i>\r\n                                    Thêm học kì\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <SemesterList\r\n                                onSelect={onSemesterSelect} value={searchTerm}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <Popup\r\n                open={popup}\r\n                onClose={() => setPopup(false)}\r\n                closeOnDocumentClick\r\n            >\r\n                <>\r\n                    {\r\n                        function () {\r\n                            if ((semesters.modificationState === SemesterModificationStatus.Create) || ((semesters.selectedSemester) && (semesters.modificationState === SemesterModificationStatus.Edit))) {\r\n                                return <SemesterForm isCheck={onRemovePopup}/>\r\n                            }\r\n                        }()\r\n                    }\r\n                </>\r\n            </Popup>\r\n            {\r\n                function () {\r\n                    if ((semesters.selectedSemester) && (semesters.modificationState === SemesterModificationStatus.Remove)) {\r\n                        return (\r\n                            <Popup\r\n                                open={popup}\r\n                                onClose={() => setPopup(false)}\r\n                                closeOnDocumentClick\r\n                            >\r\n                                <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                    <div className=\"popup-title\">\r\n                                        Are you sure?\r\n                                    </div>\r\n                                    <div className=\"popup-content\">\r\n                                        <button type=\"button\"\r\n                                            className=\"btn btn-danger\"\r\n                                            onClick={() => {\r\n                                                if (!semesters.selectedSemester) {\r\n                                                    return;\r\n                                                }\r\n                                                dispatch(deleteSemester(semesters.selectedSemester.id))\r\n                                                dispatch(addNotification(\"Semester removed\", `Semester ${semesters.selectedSemester.name} was removed`));\r\n                                                dispatch(removeSemester(semesters.selectedSemester.id));\r\n                                                dispatch(clearSelectedSemester());\r\n                                                setPopup(false);\r\n                                            }}>Remove\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </Popup>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Semester;\r\n","import { fetchDataRequest, fetchDataSuccess, fetchDataError, removeSemester } from \"../../../store/actions/semester.actions\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteSemester(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/semester/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteSemester(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeSemester(id))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { ILesson, LessonModificationStatus } from \"../models/lesson.interface\";\r\nexport const ADD_LESSON: string = \"ADD_LESSON\";\r\nexport const EDIT_LESSON: string = \"EDIT_LESSON\";\r\nexport const REMOVE_LESSON: string = \"REMOVE_LESSON\";\r\nexport const CHANGE_LESSON_AMOUNT: string = \"CHANGE_LESSON_AMOUNT\";\r\nexport const CHANGE_LESSON_PENDING_EDIT: string = \"CHANGE_LESSON_PENDING_EDIT\";\r\nexport const CLEAR_LESSON_PENDING_EDIT: string = \"CLEAR_LESSON_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_LESSON_ALL: string = \"REMOVE_LESSON_ALL\";\r\nexport const INITIAL_LESSON: string = \"INITIAL_LESSON\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(lesson: ILesson) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        lesson\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialLesson(lesson: ILesson): IInitialLessonActionType {\r\n    return { type: INITIAL_LESSON, lesson: lesson };\r\n}\r\n\r\nexport function removeLessonAll(): IRemoveLessonAllActionType {\r\n    return { type: REMOVE_LESSON_ALL };\r\n}\r\n\r\nexport function addLesson(lesson: ILesson): IAddLessonActionType {\r\n    return { type: ADD_LESSON, lesson: lesson };\r\n}\r\n\r\nexport function editLesson(lesson: ILesson): IEditLessonActionType {\r\n    return { type: EDIT_LESSON, lesson: lesson };\r\n}\r\n\r\nexport function removeLesson(id: any): IRemoveLessonActionType {\r\n    return { type: REMOVE_LESSON, id: id };\r\n}\r\n\r\nexport function changeSelectedLesson(lesson: ILesson): IChangeSelectedLessonActionType {\r\n    return { type: CHANGE_LESSON_PENDING_EDIT, lesson: lesson };\r\n}\r\n\r\nexport function clearSelectedLesson(): IClearSelectedLessonActionType {\r\n    return { type: CLEAR_LESSON_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: LessonModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddLessonActionType { type: string, lesson: ILesson };\r\ninterface IEditLessonActionType { type: string, lesson: ILesson };\r\ninterface IRemoveLessonActionType { type: string, id: any };\r\ninterface IChangeSelectedLessonActionType { type: string, lesson: ILesson };\r\ninterface IClearSelectedLessonActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  LessonModificationStatus};\r\ninterface IRemoveLessonAllActionType { type: string }\r\ninterface IInitialLessonActionType {type: string, lesson: ILesson}","import { fetchDataSuccess, fetchDataError, removeLessonAll, initialLesson, addLesson } from \"../../../store/actions/lesson.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface lesson {\r\n    id: any;\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\nexport function getLesson(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/lesson-time?page=0&size=5`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getLesson(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeLessonAll())\r\n                //console.log(data.body.lessons)\r\n                data.body.lesson_times.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.start_time;\r\n                    var strDate_2 = ele.end_time;\r\n                    var lesson: lesson = {\r\n                        id: ele.id,\r\n                        start_time: strDate_1,\r\n                        end_time: strDate_2,\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialLesson(lesson));\r\n                    }\r\n                    else{\r\n                        return dispatch(addLesson(lesson))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, ILessonState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ILesson, LessonModificationStatus } from \"../../store/models/lesson.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editLesson, clearSelectedLesson, setModificationState, addLesson } from \"../../store/actions/lesson.action\";\r\nimport { OnChangeModel, ILessonFormState } from \"../../common/types/Form.types\";\r\nimport { postLesson } from \"../../common/service/Lesson/PostLesson\";\r\nimport { putLesson } from \"../../common/service/Lesson/PutLesson\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type lessonListProps = {\r\n  isCheck: (value: boolean) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction LessonForm(props: lessonListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const lessons: ILessonState | null = useSelector((state: IStateType) => state.lessons);\r\n  let lesson: ILesson | null = lessons.selectedLesson;\r\n  const isCreate: boolean = (lessons.modificationState === LessonModificationStatus.Create);\r\n\r\n  if (!lesson || isCreate) {\r\n    lesson = { id: 0, start_time: \"\",end_time: \"\"};\r\n  }\r\n\r\n  const [formState, setFormState] = useState({\r\n    start_time: { error: \"\", value: lesson.start_time },\r\n    end_time: { error: \"\", value: lesson.end_time }\r\n  });\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    //console.log(formState)\r\n  }\r\n\r\n  function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if (isFormInvalid()) {\r\n      return;\r\n    }\r\n\r\n    let saveUserFn: Function = (isCreate) ? addLesson : editLesson;\r\n    props.isCheck(false);\r\n    saveForm(formState, saveUserFn);\r\n  }\r\n\r\n  function saveForm(formState: ILessonFormState, saveFn: Function): void {\r\n    if (lesson) {\r\n      \r\n      const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n\r\n      if (saveFn === addLesson) {\r\n        dispatch(postLesson({\r\n          start_time: formState.start_time.value\r\n        }, idx));\r\n      }\r\n      else {\r\n        dispatch(putLesson(lesson.id, {\r\n          start_time: formState.start_time.value\r\n        }, idx));\r\n      }\r\n\r\n      console.log(saveFn)\r\n\r\n      dispatch(clearSelectedLesson());\r\n      dispatch(setModificationState(LessonModificationStatus.None));\r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    props.isCheck(false);\r\n    dispatch(setModificationState(LessonModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid();\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  function isFormInvalid(): boolean {\r\n    return (formState.start_time.error || formState.end_time.error\r\n      || !formState.start_time.value || !formState.end_time.value) as boolean;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row text-left\">\r\n      <div className=\"col-xl-12 col-lg-12\">\r\n        <div className=\"card shadow shadow-xx\">\r\n          <div className=\"card-header py-3\">\r\n            <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} giờ học</h6>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={saveUser}>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <TextInput id=\"input_start_time\"\r\n                    field=\"start_time\"\r\n                    value={formState.start_time.value}\r\n                    onChange={hasFormValueChanged}\r\n                    type=\"time\"\r\n                    required={false}\r\n                    maxLength={100}\r\n                    label=\"Thời gian bắt đầu\"\r\n                    placeholder=\"\" />\r\n                </div>\r\n              </div>\r\n              <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n              <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LessonForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess, fetchDataError } from \"../../../store/actions/lesson.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getLesson } from \"./GetLesson\";\r\n\r\nexport function postLesson(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/lesson-time`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postLesson(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                toast.update(idx, { render: \"Thêm tiết học thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataSuccess(data))\r\n                getLesson(dispatch)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Thêm tiết học không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess, fetchDataError } from \"../../../store/actions/lesson.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getLesson } from \"./GetLesson\";\r\n\r\nexport function putLesson(id: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/lesson-time/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putLesson(id,data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                console.log(id)\r\n                toast.update(idx, { render: \"Chỉnh tiết học thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataSuccess(data))\r\n                getLesson(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Chỉnh tiết học thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LessonModificationStatus } from \"../../store/models/lesson.interface\";\r\nimport { setModificationState } from \"../../store/actions/lesson.action\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction LessonList(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const lessons = useSelector((state) => state.lessons);\r\n\r\n\r\n  const datas = lessons.lessons;\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n  function showStartTime(cell, row) {\r\n    var strDate = row.start_time;\r\n    return (\r\n        <span>{strDate.substring(0, 10) + \" \" + strDate.substring(11,19)}</span>\r\n    )\r\n  }\r\n\r\n  function showEndTime(cell, row) {\r\n    var strDate = row.end_time;\r\n    return (\r\n        <span>{strDate.substring(0, 10) + \" \" + strDate.substring(11,19)}</span>\r\n    )\r\n  }\r\n\r\n  function removeButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() =>{\r\n            if(props.onSelect) props.onSelect(row);\r\n            dispatch(setModificationState(LessonModificationStatus.Remove))\r\n          }}>Xóa</button>\r\n    );\r\n  }\r\n\r\n  function editButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={()=> {\r\n            if(props.onSelect) props.onSelect(row);\r\n            dispatch(setModificationState(LessonModificationStatus.Edit))\r\n          }}>Chỉnh sửa</button>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'start_time',\r\n      text: 'Thời gian bắt đầu',\r\n      formatter: showStartTime\r\n    },\r\n    {\r\n      dataField: 'end_time',\r\n      text: 'Thời gian kết thúc',\r\n      formatter: showEndTime\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: 'Hành động',\r\n      formatter: editButton\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: '',\r\n      formatter: removeButton\r\n    },\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default LessonList;\r\n","export interface IArtType {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nexport enum ArtTypeModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport LessonForm from \"./LessonForm\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./Lesson.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { ILessonState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport Popup from \"reactjs-popup\";\r\nimport {\r\n    removeLesson, clearSelectedLesson, setModificationState,\r\n    changeSelectedLesson\r\n} from \"../../store/actions/lesson.action\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { LessonModificationStatus, ILesson } from \"../../store/models/lesson.interface\";\r\nimport { getLesson } from \"../../common/service/Lesson/GetLesson\";\r\nimport { deleteLesson } from \"../../common/service/Lesson/DeleteLesson\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport LessonList from \"./LessonList\";\r\n\r\n\r\nconst Lesson: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const lessons: ILessonState = useSelector((state: IStateType) => state.lessons);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = lessons.lessons.length;\r\n    const [popup, setPopup] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getLesson(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getLesson(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token])\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedLesson());\r\n        dispatch(updateCurrentPath(\"Tiết học\", \"Danh sách\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    function onLessonSelect(lesson: ILesson): void {\r\n        dispatch(changeSelectedLesson(lesson));\r\n        onLessonRemove();\r\n        dispatch(setModificationState(LessonModificationStatus.None));\r\n    }\r\n\r\n    function onLessonRemove() {\r\n        setPopup(true);\r\n    }\r\n\r\n    function onRemovePopup(value: boolean) {\r\n        setPopup(false);\r\n    }\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <ToastContainer />\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Tiết học</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"TIẾT HỌC\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"text\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                                setSearchTerm(event.target.value)\r\n                                console.log(searchTerm)\r\n                            }}/>\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Danh sách tiết học</h6>\r\n                            <div className=\"header-buttons\">\r\n                                <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                    dispatch(setModificationState(LessonModificationStatus.Create))\r\n                                    onLessonRemove()\r\n                                }}>\r\n                                    <i className=\"fas fa fa-plus\"></i>\r\n                                    Thêm tiết học\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <LessonList\r\n                                onSelect={onLessonSelect} value={searchTerm}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <Popup\r\n                open={popup}\r\n                onClose={() => setPopup(false)}\r\n                closeOnDocumentClick\r\n            >\r\n                <>\r\n                    {\r\n                        function () {\r\n                            if ((lessons.modificationState === LessonModificationStatus.Create) || ((lessons.selectedLesson) && (lessons.modificationState === LessonModificationStatus.Edit))) {\r\n                                return <LessonForm isCheck={onRemovePopup}/>\r\n                            }\r\n                        }()\r\n                    }\r\n                </>\r\n            </Popup>\r\n            {\r\n                function () {\r\n                    if ((lessons.selectedLesson) && (lessons.modificationState === LessonModificationStatus.Remove)) {\r\n                        return (\r\n                            <Popup\r\n                                open={popup}\r\n                                onClose={() => setPopup(false)}\r\n                                closeOnDocumentClick\r\n                            >\r\n                                <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                    <div className=\"popup-title\">\r\n                                        Are you sure?\r\n                                    </div>\r\n                                    <div className=\"popup-content\">\r\n                                        <button type=\"button\"\r\n                                            className=\"btn btn-danger\"\r\n                                            onClick={() => {\r\n                                                if (!lessons.selectedLesson) {\r\n                                                    return;\r\n                                                }\r\n                                                dispatch(deleteLesson(lessons.selectedLesson.id))\r\n                                                dispatch(addNotification(\"Tiết học \", `${lessons.selectedLesson.start_time} đã được xóa`));\r\n                                                dispatch(removeLesson(lessons.selectedLesson.id));\r\n                                                dispatch(clearSelectedLesson());\r\n                                                setPopup(false);\r\n                                            }}>Remove\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </Popup>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Lesson;\r\n","import { fetchDataRequest, fetchDataError, removeLesson } from \"../../../store/actions/lesson.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteLesson(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/lesson-time/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteLesson(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(removeLesson(id))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { IArtType, ArtTypeModificationStatus } from \"../models/art_type.interface\";\r\nexport const ADD_ART_TYPE: string = \"ADD_ART_TYPE\";\r\nexport const EDIT_ART_TYPE: string = \"EDIT_ART_TYPE\";\r\nexport const REMOVE_ART_TYPE: string = \"REMOVE_ART_TYPE\";\r\nexport const CHANGE_ART_TYPE_AMOUNT: string = \"CHANGE_ART_TYPE_AMOUNT\";\r\nexport const CHANGE_ART_TYPE_PENDING_EDIT: string = \"CHANGE_ART_TYPE_PENDING_EDIT\";\r\nexport const CLEAR_ART_TYPE_PENDING_EDIT: string = \"CLEAR_ART_TYPE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_ART_TYPE_ALL: string = \"REMOVE_ART_TYPE_ALL\";\r\nexport const INITIAL_ART_TYPE: string = \"INITIAL_ART_TYPE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(art_type: IArtType) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        art_type\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialArtType(art_type: IArtType): IInitialArtTypeActionType {\r\n    return { type: INITIAL_ART_TYPE, art_type: art_type };\r\n}\r\n\r\nexport function removeArtTypeAll(): IRemoveArtTypeAllActionType {\r\n    return { type: REMOVE_ART_TYPE_ALL };\r\n}\r\n\r\nexport function addArtType(art_type: IArtType): IAddArtTypeActionType {\r\n    return { type: ADD_ART_TYPE, art_type: art_type };\r\n}\r\n\r\nexport function editArtType(art_type: IArtType): IEditArtTypeActionType {\r\n    return { type: EDIT_ART_TYPE, art_type: art_type };\r\n}\r\n\r\nexport function removeArtType(id: any): IRemoveArtTypeActionType {\r\n    return { type: REMOVE_ART_TYPE, id: id };\r\n}\r\n\r\nexport function changeSelectedArtType(art_type: IArtType): IChangeSelectedArtTypeActionType {\r\n    return { type: CHANGE_ART_TYPE_PENDING_EDIT, art_type: art_type };\r\n}\r\n\r\nexport function clearSelectedArtType(): IClearSelectedArtTypeActionType {\r\n    return { type: CLEAR_ART_TYPE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ArtTypeModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddArtTypeActionType { type: string, art_type: IArtType };\r\ninterface IEditArtTypeActionType { type: string, art_type: IArtType };\r\ninterface IRemoveArtTypeActionType { type: string, id: any };\r\ninterface IChangeSelectedArtTypeActionType { type: string, art_type: IArtType };\r\ninterface IClearSelectedArtTypeActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ArtTypeModificationStatus};\r\ninterface IRemoveArtTypeAllActionType { type: string }\r\ninterface IInitialArtTypeActionType {type: string, art_type: IArtType}","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ArtTypeModificationStatus } from \"../../store/models/art_type.interface\";\r\nimport { setModificationState } from \"../../store/actions/art_type.action\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction TeachTypeList(props) {\r\n\r\n    const dispatch = useDispatch();\r\n  const art_types = useSelector((state) => state.art_types);\r\n  console.log(props.value)\r\n\r\n\r\n  const datas = art_types.artTypes;\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    ptypeStartIndex: 1,\r\n    firstPtypeText: 'First',\r\n    prePtypeText: 'Back',\r\n    nextPtypeText: 'Next',\r\n    lastPtypeText: 'Last',\r\n    nextPtypeTitle: 'First ptype',\r\n    prePtypeTitle: 'Pre ptype',\r\n    firstPtypeTitle: 'Next ptype',\r\n    lastPtypeTitle: 'Last ptype',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPtypeChange: (sizePerPtype, ptype) => {\r\n      console.log('Size per ptype change!!!');\r\n      console.log('Newest size per ptype:' + sizePerPtype);\r\n      console.log('Newest ptype:' + ptype);\r\n    },\r\n    onPtypeChange: (ptype, sizePerPtype) => {\r\n      console.log('Ptype change!!!');\r\n      console.log('Newest size per ptype:' + sizePerPtype);\r\n      console.log('Newest ptype:' + ptype);\r\n    }\r\n  };\r\n\r\n  function removeButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() =>{\r\n            if(props.onSelect) props.onSelect(row);\r\n            dispatch(setModificationState(ArtTypeModificationStatus.Remove))\r\n          }}>Xóa</button>\r\n    );\r\n  }\r\n\r\n  function editButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={()=> {\r\n            if(props.onSelect) props.onSelect(row);\r\n            dispatch(setModificationState(ArtTypeModificationStatus.Edit))\r\n          }}>Chỉnh sửa</button>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'name',\r\n      text: 'Tên',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: 'Hành động',\r\n      formatter: editButton\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: '',\r\n      formatter: removeButton\r\n    },\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default TeachTypeList;\r\n","import { fetchDataSuccess, fetchDataError, removeArtTypeAll, initialArtType, addArtType } from \"../../../store/actions/art_type.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ArtType {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n}\r\nexport function getArtType(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/art-type?page=0&size=5`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getArtType(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeArtTypeAll())\r\n                console.log(data.body.art_type)\r\n                data.body.art_type.map((ele: any, index: any) => {\r\n                    var artType: ArtType = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialArtType(artType));\r\n                    }\r\n                    else{\r\n                        return dispatch(addArtType(artType))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IArtTypeState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IArtType, ArtTypeModificationStatus } from \"../../store/models/art_type.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editArtType, clearSelectedArtType, setModificationState, addArtType } from \"../../store/actions/art_type.action\";\r\nimport { OnChangeModel, IArtTypeFormState } from \"../../common/types/Form.types\";\r\nimport { postArtType } from \"../../common/service/ArtType/PostArtType\";\r\nimport { putArtType } from \"../../common/service/ArtType/PutArtType\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type artTypeListProps = {\r\n  isCheck: (value: boolean) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction TeachTypeForm(props: artTypeListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const art_types: IArtTypeState | null = useSelector((state: IStateType) => state.art_types);\r\n  let art_type: IArtType | null = art_types.selectedArtType;\r\n  const isCreate: boolean = (art_types.modificationState === ArtTypeModificationStatus.Create);\r\n  \r\n  if (!art_type || isCreate) {\r\n    art_type = { id: 0, name: \"\", description: \"\" };\r\n  }\r\n\r\n  const [formState, setFormState] = useState({\r\n    name: { error: \"\", value: art_type.name },\r\n    description: { error: \"\", value: art_type.description },\r\n  });\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n  }\r\n\r\n  function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if (isFormInvalid()) {\r\n      return;\r\n    }\r\n    props.isCheck(false);\r\n\r\n    let saveUserFn: Function = (isCreate) ? addArtType : editArtType;\r\n    saveForm(formState, saveUserFn);\r\n  }\r\n\r\n  function saveForm(formState: IArtTypeFormState, saveFn: Function): void {\r\n    if (art_type) {\r\n      const id = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n      \r\n      if (saveFn === addArtType) {\r\n        dispatch(postArtType({\r\n          name: formState.name.value,\r\n          description: formState.description.value\r\n        }, id))\r\n      }\r\n\r\n      else if (saveFn === editArtType) {\r\n        dispatch(putArtType(art_type.id, {\r\n          name: formState.name.value,\r\n          description: formState.description.value\r\n        }, id))\r\n      }\r\n\r\n      dispatch(clearSelectedArtType());\r\n      dispatch(setModificationState(ArtTypeModificationStatus.None));\r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    props.isCheck(false);\r\n    dispatch(setModificationState(ArtTypeModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid();\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  function isFormInvalid(): boolean {\r\n    return (formState.name.error|| !formState.name.value) as boolean;\r\n}\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row text-left\">\r\n      <div className=\"col-xl-12 col-lg-12\">\r\n        <div className=\"card shadow shadow-xx\">\r\n          <div className=\"card-header py-3\">\r\n            <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} thể loại</h6>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={saveUser}>\r\n              <div className=\"form-group\">\r\n                  <TextInput id=\"input_email\"\r\n                    value={formState.name.value}\r\n                    field=\"name\"\r\n                    onChange={hasFormValueChanged}\r\n                    required={true}\r\n                    maxLength={20}\r\n                    label=\"Tên\"\r\n                    placeholder=\"\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <TextInput id=\"input_description\"\r\n                  field = \"description\"\r\n                    value={formState.description.value}\r\n                    onChange={hasFormValueChanged}\r\n                    required={false}\r\n                    maxLength={100}\r\n                    label=\"Miêu tả\"\r\n                    placeholder=\"\" />\r\n              </div>\r\n            \r\n              <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n              <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TeachTypeForm;\r\n","export interface IArtLevel {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nexport enum ArtLevelModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/art_type.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getArtType } from \"./GetArtType\";\r\n\r\nexport function postArtType(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/art-type`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postArtType(data,idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (xx => {\r\n                toast.update(idx, { render: \"Thêm thể loại thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                getArtType(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Thêm thể loại không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/art_type.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getArtType } from \"./GetArtType\";\r\n\r\nexport function putArtType(id: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/art-type/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putArtType(id, data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                console.log(id)\r\n                toast.update(idx, { render: \"Chỉnh thể loại thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                getArtType(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Chỉnh thể loại không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { IArtLevel, ArtLevelModificationStatus } from \"../models/art_level.interface\";\r\nexport const ADD_ART_LEVEL: string = \"ADD_ART_LEVEL\";\r\nexport const EDIT_ART_LEVEL: string = \"EDIT_ART_LEVEL\";\r\nexport const REMOVE_ART_LEVEL: string = \"REMOVE_ART_LEVEL\";\r\nexport const CHANGE_ART_LEVEL_AMOUNT: string = \"CHANGE_ART_LEVEL_AMOUNT\";\r\nexport const CHANGE_ART_LEVEL_PENDING_EDIT: string = \"CHANGE_ART_LEVEL_PENDING_EDIT\";\r\nexport const CLEAR_ART_LEVEL_PENDING_EDIT: string = \"CLEAR_ART_LEVEL_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_ART_LEVEL_ALL: string = \"REMOVE_ART_LEVEL_ALL\";\r\nexport const INITIAL_ART_LEVEL: string = \"INITIAL_ART_LEVEL\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(art_level: IArtLevel) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        art_level\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialArtLevel(art_level: IArtLevel): IInitialArtLevelActionType {\r\n    return { type: INITIAL_ART_LEVEL, art_level: art_level };\r\n}\r\n\r\nexport function removeArtLevelAll(): IRemoveArtLevelAllActionType {\r\n    return { type: REMOVE_ART_LEVEL_ALL };\r\n}\r\n\r\nexport function addArtLevel(art_level: IArtLevel): IAddArtLevelActionType {\r\n    return { type: ADD_ART_LEVEL, art_level: art_level };\r\n}\r\n\r\nexport function editArtLevel(art_level: IArtLevel): IEditArtLevelActionType {\r\n    return { type: EDIT_ART_LEVEL, art_level: art_level };\r\n}\r\n\r\nexport function removeArtLevel(id: any): IRemoveArtLevelActionType {\r\n    return { type: REMOVE_ART_LEVEL, id: id };\r\n}\r\n\r\nexport function changeSelectedArtLevel(art_level: IArtLevel): IChangeSelectedArtLevelActionType {\r\n    return { type: CHANGE_ART_LEVEL_PENDING_EDIT, art_level: art_level };\r\n}\r\n\r\nexport function clearSelectedArtLevel(): IClearSelectedArtLevelActionType {\r\n    return { type: CLEAR_ART_LEVEL_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateArtLevel(value: ArtLevelModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddArtLevelActionType { type: string, art_level: IArtLevel };\r\ninterface IEditArtLevelActionType { type: string, art_level: IArtLevel };\r\ninterface IRemoveArtLevelActionType { type: string, id: any };\r\ninterface IChangeSelectedArtLevelActionType { type: string, art_level: IArtLevel };\r\ninterface IClearSelectedArtLevelActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ArtLevelModificationStatus};\r\ninterface IRemoveArtLevelAllActionType { type: string }\r\ninterface IInitialArtLevelActionType {type: string, art_level: IArtLevel}","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ArtLevelModificationStatus } from \"../../store/models/art_level.interface\";\r\nimport { setModificationStateArtLevel } from \"../../store/actions/art_level.action\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction TeachLevelList(props) {\r\n\r\n    const dispatch = useDispatch();\r\n  const art_levels = useSelector((state) => state.art_levels);\r\n  console.log(props.value)\r\n\r\n\r\n  const datas = art_levels.artLevels;\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    plevelStartIndex: 1,\r\n    firstPlevelText: 'First',\r\n    prePlevelText: 'Back',\r\n    nextPlevelText: 'Next',\r\n    lastPlevelText: 'Last',\r\n    nextPlevelTitle: 'First plevel',\r\n    prePlevelTitle: 'Pre plevel',\r\n    firstPlevelTitle: 'Next plevel',\r\n    lastPlevelTitle: 'Last plevel',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPlevelChange: (sizePerPlevel, plevel) => {\r\n      console.log('Size per plevel change!!!');\r\n      console.log('Newest size per plevel:' + sizePerPlevel);\r\n      console.log('Newest plevel:' + plevel);\r\n    },\r\n    onPlevelChange: (plevel, sizePerPlevel) => {\r\n      console.log('Plevel change!!!');\r\n      console.log('Newest size per plevel:' + sizePerPlevel);\r\n      console.log('Newest plevel:' + plevel);\r\n    }\r\n  };\r\n\r\n  function removeButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() =>{\r\n            if(props.onSelect) props.onSelect(row);\r\n            dispatch(setModificationStateArtLevel(ArtLevelModificationStatus.Remove))\r\n          }}>Xóa</button>\r\n    );\r\n  }\r\n\r\n  function editButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={()=> {\r\n            if(props.onSelect) props.onSelect(row);\r\n            dispatch(setModificationStateArtLevel(ArtLevelModificationStatus.Edit))\r\n          }}>Chỉnh sửa</button>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'name',\r\n      text: 'Tên',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: 'Hành động',\r\n      formatter: editButton\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: '',\r\n      formatter: removeButton\r\n    },\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default TeachLevelList;\r\n","import { fetchDataSuccess, fetchDataError, removeArtLevelAll, initialArtLevel, addArtLevel } from \"../../../store/actions/art_level.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ArtLevel {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n}\r\nexport function getArtLevel(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/art-level?page=0&size=5`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getArtLevel(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeArtLevelAll())\r\n                console.log(data.body.art_level)\r\n                data.body.art_level.map((ele: any, index: any) => {\r\n                    var artLevel: ArtLevel = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialArtLevel(artLevel));\r\n                    }\r\n                    else{\r\n                        return dispatch(addArtLevel(artLevel))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IArtLevelState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IArtLevel, ArtLevelModificationStatus } from \"../../store/models/art_level.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editArtLevel, clearSelectedArtLevel, setModificationStateArtLevel, addArtLevel } from \"../../store/actions/art_level.action\";\r\nimport { OnChangeModel, IArtLevelFormState } from \"../../common/types/Form.types\";\r\nimport { postArtLevel } from \"../../common/service/ArtLevel/PostArtLevel\";\r\nimport { putArtLevel } from \"../../common/service/ArtLevel/PutArtLevel\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type artLevelListProps = {\r\n  isCheck: (value: boolean) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction TeachLevelForm(props: artLevelListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const art_levels: IArtLevelState | null = useSelector((state: IStateType) => state.art_levels);\r\n  let art_level: IArtLevel | null = art_levels.selectedArtLevel;\r\n  const isCreate: boolean = (art_levels.modificationState === ArtLevelModificationStatus.Create);\r\n  \r\n  if (!art_level || isCreate) {\r\n    art_level = { id: 0, name: \"\", description: \"\" };\r\n  }\r\n\r\n  const [formState, setFormState] = useState({\r\n    name: { error: \"\", value: art_level.name },\r\n    description: { error: \"\", value: art_level.description }\r\n  });\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n  }\r\n\r\n  function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if (isFormInvalid()) {\r\n      return;\r\n    }\r\n\r\n    props.isCheck(false);\r\n\r\n    let saveUserFn: Function = (isCreate) ? addArtLevel : editArtLevel;\r\n    saveForm(formState, saveUserFn);\r\n  }\r\n\r\n  function saveForm(formState: IArtLevelFormState, saveFn: Function): void {\r\n    if (art_level) {\r\n      const id = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n      \r\n      if (saveFn === addArtLevel) {\r\n        dispatch(postArtLevel({\r\n          name: formState.name.value,\r\n          description: formState.description.value\r\n        }, id))\r\n      }\r\n\r\n      else if (saveFn === editArtLevel) {\r\n        dispatch(putArtLevel(art_level.id, {\r\n          name: formState.name.value,\r\n          description: formState.description.value\r\n        }, id))\r\n      }\r\n\r\n      dispatch(clearSelectedArtLevel());\r\n      dispatch(setModificationStateArtLevel(ArtLevelModificationStatus.None));\r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    props.isCheck(false);\r\n    dispatch(setModificationStateArtLevel(ArtLevelModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid();\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  function isFormInvalid(): boolean {\r\n    return (formState.name.error || !formState.name.value) as boolean;\r\n}\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row text-left\">\r\n      <div className=\"col-xl-12 col-lg-12\">\r\n        <div className=\"card shadow shadow-xx\">\r\n          <div className=\"card-header py-3\">\r\n            <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} trình độ</h6>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={saveUser}>\r\n            <div className=\"form-group\">\r\n                  <TextInput id=\"input_email\"\r\n                    value={formState.name.value}\r\n                    field=\"name\"\r\n                    onChange={hasFormValueChanged}\r\n                    required={true}\r\n                    maxLength={20}\r\n                    label=\"Tên\"\r\n                    placeholder=\"\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <TextInput id=\"input_description\"\r\n                  field = \"description\"\r\n                    value={formState.description.value}\r\n                    onChange={hasFormValueChanged}\r\n                    required={false}\r\n                    maxLength={100}\r\n                    label=\"Miêu tả\"\r\n                    placeholder=\"\" />\r\n              </div>\r\n              <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n              <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TeachLevelForm;\r\n","export interface IArtAge {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nexport enum ArtAgeModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/art_level.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getArtLevel } from \"./GetArtLevel\";\r\n\r\nexport function postArtLevel(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/art-level`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postArtLevel(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Thêm trình độ thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                getArtLevel(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Thêm trình độ không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/art_level.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getArtLevel } from \"./GetArtLevel\";\r\n\r\nexport function putArtLevel(id: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/art-level/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putArtLevel(id, data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                console.log(id)\r\n                toast.update(idx, { render: \"Chỉnh trình độ thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                getArtLevel(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Chỉnh trình độ không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ArtAgeModificationStatus } from \"../../store/models/art_age.interface\";\r\nimport { setModificationStateArtAge } from \"../../store/actions/art_age.action\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction TeachAgeList(props) {\r\n\r\n    const dispatch = useDispatch();\r\n  const art_ages = useSelector((state) => state.art_ages);\r\n  console.log(props.value)\r\n\r\n\r\n  const datas = art_ages.artAges;\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n  function removeButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() =>{\r\n            if(props.onSelect) props.onSelect(row);\r\n            dispatch(setModificationStateArtAge(ArtAgeModificationStatus.Remove))\r\n          }}>Xóa</button>\r\n    );\r\n  }\r\n\r\n  function editButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={()=> {\r\n            if(props.onSelect) props.onSelect(row);\r\n            dispatch(setModificationStateArtAge(ArtAgeModificationStatus.Edit))\r\n          }}>Chỉnh sửa</button>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'name',\r\n      text: 'Tên',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: 'Hành động',\r\n      formatter: editButton\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: '',\r\n      formatter: removeButton\r\n    },\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default TeachAgeList;\r\n","import { fetchDataSuccess, fetchDataError, removeArtAgeAll, initialArtAge, addArtAge } from \"../../../store/actions/art_age.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ArtAge {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n}\r\nexport function getArtAge(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/art-age?page=0&size=5`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getArtAge(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeArtAgeAll())\r\n                console.log(data.body.art_age)\r\n                data.body.art_age.map((ele: any, index: any) => {\r\n                    var artAge: ArtAge = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialArtAge(artAge));\r\n                    }\r\n                    else{\r\n                        return dispatch(addArtAge(artAge))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IArtAgeState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IArtAge, ArtAgeModificationStatus } from \"../../store/models/art_age.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editArtAge, clearSelectedArtAge, setModificationStateArtAge, addArtAge } from \"../../store/actions/art_age.action\";\r\nimport { OnChangeModel, IArtAgeFormState } from \"../../common/types/Form.types\";\r\nimport { postArtAge } from \"../../common/service/ArtAge/PostArtAge\";\r\nimport { putArtAge } from \"../../common/service/ArtAge/PutArtAge\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type artAgeListProps = {\r\n  isCheck: (value: boolean) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction TeachAgeForm(props: artAgeListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const art_ages: IArtAgeState | null = useSelector((state: IStateType) => state.art_ages);\r\n  let art_age: IArtAge | null = art_ages.selectedArtAge;\r\n  const isCreate: boolean = (art_ages.modificationState === ArtAgeModificationStatus.Create);\r\n  \r\n  if (!art_age || isCreate) {\r\n    art_age = { id: 0, name: \"\", description: \"\"};\r\n  }\r\n\r\n  const [formState, setFormState] = useState({\r\n    name: { error: \"\", value: art_age.name },\r\n    description: { error: \"\", value: art_age.description },\r\n  });\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n  }\r\n\r\n  function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if (isFormInvalid()) {\r\n      return;\r\n    }\r\n    props.isCheck(false);\r\n    let saveUserFn: Function = (isCreate) ? addArtAge : editArtAge;\r\n    saveForm(formState, saveUserFn);\r\n  }\r\n\r\n  function saveForm(formState: IArtAgeFormState, saveFn: Function): void {\r\n    if (art_age) {\r\n      const id = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n\r\n      if (saveFn === addArtAge) {\r\n        dispatch(postArtAge({\r\n          name: formState.name.value,\r\n          description: formState.description.value\r\n        }, id))\r\n      }\r\n\r\n      else if (saveFn === editArtAge) {\r\n        dispatch(putArtAge(art_age.id, {\r\n          name: formState.name.value,\r\n          description: formState.description.value\r\n        }, id))\r\n      }\r\n\r\n      dispatch(clearSelectedArtAge());\r\n      dispatch(setModificationStateArtAge(ArtAgeModificationStatus.None));\r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    props.isCheck(false);\r\n    dispatch(setModificationStateArtAge(ArtAgeModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid();\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  function isFormInvalid(): boolean {\r\n    return (formState.name.error || !formState.name.value ) as boolean;\r\n}\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row text-left\">\r\n      <div className=\"col-xl-12 col-lg-12\">\r\n        <div className=\"card shadow shadow-xx\">\r\n          <div className=\"card-header py-3\">\r\n            <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} độ tuổi</h6>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={saveUser}>\r\n            <div className=\"form-group\">\r\n                  <TextInput id=\"input_email\"\r\n                    value={formState.name.value}\r\n                    field=\"name\"\r\n                    onChange={hasFormValueChanged}\r\n                    required={true}\r\n                    maxLength={20}\r\n                    label=\"Tên\"\r\n                    placeholder=\"\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                  <TextInput id=\"input_description\"\r\n                  field = \"description\"\r\n                    value={formState.description.value}\r\n                    onChange={hasFormValueChanged}\r\n                    required={false}\r\n                    maxLength={100}\r\n                    label=\"Miêu tả\"\r\n                    placeholder=\"\" />\r\n              </div>\r\n            \r\n              <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n              <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TeachAgeForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/art_age.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getArtAge } from \"./GetArtAge\";\r\n\r\nexport function postArtAge(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/art-age`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postArtAge(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Thêm độ tuổi thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                getArtAge(dispatch)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Thêm độ tuổi không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/art_age.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getArtAge } from \"./GetArtAge\";\r\n\r\nexport function putArtAge(id: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/art-age/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putArtAge(id, data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                console.log(id)\r\n                toast.update(idx, { render: \"Chỉnh độ tuổi thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER });\r\n                getArtAge(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Chỉnh độ tuổi không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport TeachTypeList from \"./TeachTypeList\";\r\nimport TeachTypeForm from \"./TeachTypeForm\";\r\nimport TeachLevelList from \"./TeachLevelList\";\r\nimport TeachLevelForm from \"./TeachLevelForm\";\r\nimport TeachAgeList from \"./TeachAgeList\";\r\nimport TeachAgeForm from \"./TeachAgeForm\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./Art.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IArtTypeState, IArtLevelState, IArtAgeState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedArtType, setModificationState,\r\n    changeSelectedArtType,\r\n    removeArtType\r\n} from \"../../store/actions/art_type.action\";\r\nimport { ArtLevelModificationStatus, IArtLevel } from \"../../store/models/art_level.interface\";\r\nimport {\r\n    clearSelectedArtLevel,\r\n    changeSelectedArtLevel,\r\n    setModificationStateArtLevel,\r\n    removeArtLevel\r\n} from \"../../store/actions/art_level.action\";\r\nimport { ArtTypeModificationStatus, IArtType } from \"../../store/models/art_type.interface\";\r\nimport {\r\n    clearSelectedArtAge,\r\n    changeSelectedArtAge,\r\n    setModificationStateArtAge,\r\n    removeArtAge\r\n} from \"../../store/actions/art_age.action\";\r\nimport { ArtAgeModificationStatus, IArtAge } from \"../../store/models/art_age.interface\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { getArtType } from \"../../common/service/ArtType/GetArtType\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { deleteArtType } from \"../../common/service/ArtType/DeleteArtType\";\r\nimport { deleteArtLevel } from \"../../common/service/ArtLevel/DeleteArtLevel\";\r\nimport { deleteArtAge } from \"../../common/service/ArtAge/DeleteArtAge\";\r\nimport { getArtLevel } from \"../../common/service/ArtLevel/GetArtLevel\";\r\nimport { getArtAge } from \"../../common/service/ArtAge/GetArtAge\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\n\r\nconst Art: React.FC = () => {\r\n    const [checked1, setChecked1] = useState(true);\r\n    const [checked2, setChecked2] = useState(false);\r\n    const [checked3, setChecked3] = useState(false);\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getArtType(dispatch))\r\n                    trackPromise(getArtAge(dispatch))\r\n                    trackPromise(getArtLevel(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getArtType(dispatch))\r\n                trackPromise(getArtAge(dispatch))\r\n                trackPromise(getArtLevel(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token])\r\n    \r\n    \r\n    const art_types: IArtTypeState = useSelector((state: IStateType) => state.art_types);\r\n    const art_levels: IArtLevelState = useSelector((state: IStateType) => state.art_levels);\r\n    const art_ages: IArtAgeState = useSelector((state: IStateType) => state.art_ages);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberArtTypeCount: number = art_types.artTypes.length;\r\n    const numberArtLevelCount: number = art_levels.artLevels.length;\r\n    const numberArtAgeCount: number = art_ages.artAges.length;\r\n    const [popup1, setPopup1] = useState(false);\r\n    const [popup2, setPopup2] = useState(false);\r\n    const [popup3, setPopup3] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedArtType());\r\n        dispatch(clearSelectedArtLevel());\r\n        dispatch(clearSelectedArtAge());\r\n        dispatch(updateCurrentPath(\"Nghệ thuật\", \"danh sách\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    function onArtTypeSelect(art_type: IArtType): void {\r\n        dispatch(changeSelectedArtType(art_type));\r\n        onArtTypeRemove()\r\n        dispatch(setModificationState(ArtTypeModificationStatus.None));\r\n    }\r\n\r\n    function onArtLevelSelect(art_level: IArtLevel): void {\r\n        dispatch(changeSelectedArtLevel(art_level));\r\n        onArtLevelRemove()\r\n        dispatch(setModificationStateArtLevel(ArtLevelModificationStatus.None));\r\n    }\r\n\r\n    function onArtAgeSelect(art_age: IArtAge): void {\r\n        dispatch(changeSelectedArtAge(art_age));\r\n        onArtAgeRemove()\r\n        dispatch(setModificationStateArtAge(ArtAgeModificationStatus.None));\r\n    }\r\n\r\n    function onArtTypeRemove() {\r\n        setPopup1(true);\r\n    }\r\n    function onArtLevelRemove() {\r\n        setPopup3(true);\r\n    }\r\n\r\n    function onArtAgeRemove() {\r\n        setPopup2(true);\r\n    }\r\n\r\n    function onRemovePopup1(value: boolean) {\r\n        setPopup1(false);\r\n    }\r\n\r\n    function onRemovePopup2(value: boolean) {\r\n        setPopup2(false);\r\n    }\r\n\r\n    function onRemovePopup3(value: boolean) {\r\n        setPopup3(false);\r\n    }\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <ToastContainer />\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Nghệ thuật</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"THỂ LOẠI\" text={`${numberArtTypeCount}`} icon=\"box\" class=\"primary\" />\r\n                <TopCard title=\"ĐỘ TUỔI\" text={`${numberArtAgeCount}`} icon=\"box\" class=\"primary\" />\r\n                <TopCard title=\"TRÌNH ĐỘ\" text={`${numberArtLevelCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                                setSearchTerm(event.target.value)\r\n                                console.log(searchTerm)\r\n                            }} />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked1 === false) {\r\n                            setChecked1(true)\r\n                            setChecked2(false)\r\n                            setChecked3(false)\r\n                        }\r\n                    }} style={{\r\n                        color: checked1 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Thể loại</h6>\r\n\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked1 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked2 === false) {\r\n                            setChecked2(true)\r\n                            setChecked1(false)\r\n                            setChecked3(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked2 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Độ tuổi</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked2 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked3 === false) {\r\n                            setChecked3(true)\r\n                            setChecked1(false)\r\n                            setChecked2(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked3 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Trình độ</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked3 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {\r\n                function () {\r\n                    if (checked1 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\">Danh sách thể loại</h6>\r\n                                                <div className=\"header-buttons\">\r\n                                                    <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                                        dispatch(setModificationState(ArtTypeModificationStatus.Create))\r\n                                                        onArtTypeRemove()\r\n                                                    }}>\r\n                                                        <i className=\"fas fa fa-plus\"></i>\r\n                                                        Thêm thể loại\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <TeachTypeList\r\n                                                    onSelect={onArtTypeSelect} value={searchTerm}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <Popup\r\n                                    open={popup1}\r\n                                    onClose={() => setPopup1(false)}\r\n                                    closeOnDocumentClick\r\n                                >\r\n                                    <>\r\n                                        {\r\n                                            function () {\r\n                                                if ((art_types.modificationState === ArtTypeModificationStatus.Create) || ((art_types.selectedArtType) && (art_types.modificationState === ArtTypeModificationStatus.Edit))) {\r\n                                                    return <TeachTypeForm isCheck={onRemovePopup1} />\r\n                                                }\r\n                                            }()\r\n                                        }\r\n                                    </>\r\n                                </Popup>\r\n                                {\r\n                                    function () {\r\n                                        if ((art_types.selectedArtType) && (art_types.modificationState === ArtTypeModificationStatus.Remove)) {\r\n                                            return (\r\n                                                <Popup\r\n                                                    open={popup1}\r\n                                                    onClose={() => setPopup1(false)}\r\n                                                    closeOnDocumentClick\r\n                                                >\r\n                                                    <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                                        <div className=\"popup-title\">\r\n                                                            Are you sure?\r\n                                                        </div>\r\n                                                        <div className=\"popup-content\">\r\n                                                            <button type=\"button\"\r\n                                                                className=\"btn btn-danger\"\r\n                                                                onClick={() => {\r\n                                                                    if (!art_types.selectedArtType) {\r\n                                                                        return;\r\n                                                                    }\r\n                                                                    const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                                                                        position: toast.POSITION.TOP_CENTER\r\n                                                                    });\r\n                                                                    dispatch(deleteArtType(art_types.selectedArtType.id, idx))\r\n                                                                    dispatch(addNotification(\"Thể loại \", `${art_types.selectedArtType.name} đã được xóa`));\r\n                                                                    dispatch(removeArtType(art_types.selectedArtType.id));\r\n                                                                    dispatch(clearSelectedArtType());\r\n                                                                    setPopup1(false);\r\n                                                                }}>Remove\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Popup>\r\n                                            )\r\n                                        }\r\n                                    }()\r\n                                }\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else if (checked2 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\">Danh sách độ tuổi</h6>\r\n                                                <div className=\"header-buttons\">\r\n                                                    <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                                        dispatch(setModificationStateArtAge(ArtAgeModificationStatus.Create))\r\n                                                        onArtAgeRemove()\r\n                                                    }}>\r\n                                                        <i className=\"fas fa fa-plus\"></i>\r\n                                                        Thêm độ tuổi\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <TeachAgeList\r\n                                                    onSelect={onArtAgeSelect} value={searchTerm}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <Popup\r\n                                    open={popup2}\r\n                                    onClose={() => setPopup2(false)}\r\n                                    closeOnDocumentClick\r\n                                >\r\n                                    <>\r\n                                        {\r\n                                            function () {\r\n                                                if ((art_ages.modificationState === ArtAgeModificationStatus.Create) || ((art_ages.selectedArtAge) && (art_ages.modificationState === ArtAgeModificationStatus.Edit))) {\r\n                                                    return <TeachAgeForm isCheck={onRemovePopup2} />\r\n                                                }\r\n                                            }()\r\n                                        }\r\n                                    </>\r\n                                </Popup>\r\n                                {\r\n                                    function () {\r\n                                        if ((art_ages.selectedArtAge) && (art_ages.modificationState === ArtAgeModificationStatus.Remove)) {\r\n                                            return (\r\n                                                <Popup\r\n                                                    open={popup2}\r\n                                                    onClose={() => setPopup2(false)}\r\n                                                    closeOnDocumentClick\r\n                                                >\r\n                                                    <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                                        <div className=\"popup-title\">\r\n                                                            Are you sure?\r\n                                                        </div>\r\n                                                        <div className=\"popup-content\">\r\n                                                            <button type=\"button\"\r\n                                                                className=\"btn btn-danger\"\r\n                                                                onClick={() => {\r\n                                                                    if (!art_ages.selectedArtAge) {\r\n                                                                        return;\r\n                                                                    }\r\n                                                                    const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                                                                        position: toast.POSITION.TOP_CENTER\r\n                                                                    });\r\n                                                                    dispatch(deleteArtAge(art_ages.selectedArtAge.id, idx))\r\n                                                                    dispatch(addNotification(\"Độ tuổi \", `${art_ages.selectedArtAge.name} đã được xóa`));\r\n                                                                    dispatch(removeArtAge(art_ages.selectedArtAge.id));\r\n                                                                    dispatch(clearSelectedArtAge());\r\n                                                                    setPopup2(false);\r\n                                                                }}>Remove\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Popup>\r\n                                            )\r\n                                        }\r\n                                    }()\r\n                                }\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n\r\n                    else if (checked3 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\">Danh sách trình độ</h6>\r\n                                                <div className=\"header-buttons\">\r\n                                                    <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                                        dispatch(setModificationStateArtLevel(ArtLevelModificationStatus.Create))\r\n                                                        onArtLevelRemove()\r\n                                                    }}>\r\n                                                        <i className=\"fas fa fa-plus\"></i>\r\n                                                        Thêm trình độ\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <TeachLevelList\r\n                                                    onSelect={onArtLevelSelect} value={searchTerm}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <Popup\r\n                                    open={popup3}\r\n                                    onClose={() => setPopup3(false)}\r\n                                    closeOnDocumentClick\r\n                                >\r\n                                    <>\r\n                                        {\r\n                                            function () {\r\n                                                if ((art_levels.modificationState === ArtLevelModificationStatus.Create) || ((art_levels.selectedArtLevel) && (art_levels.modificationState === ArtLevelModificationStatus.Edit))) {\r\n                                                    return <TeachLevelForm isCheck={onRemovePopup3} />\r\n                                                }\r\n                                            }()\r\n                                        }\r\n                                    </>\r\n                                </Popup>\r\n                                {\r\n                                    function () {\r\n                                        if ((art_levels.selectedArtLevel) && (art_levels.modificationState === ArtLevelModificationStatus.Remove)) {\r\n                                            return (\r\n                                                <Popup\r\n                                                    open={popup3}\r\n                                                    onClose={() => setPopup3(false)}\r\n                                                    closeOnDocumentClick\r\n                                                >\r\n                                                    <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                                        <div className=\"popup-title\">\r\n                                                            Are you sure?\r\n                                                        </div>\r\n                                                        <div className=\"popup-content\">\r\n                                                            <button type=\"button\"\r\n                                                                className=\"btn btn-danger\"\r\n                                                                onClick={() => {\r\n                                                                    if (!art_levels.selectedArtLevel) {\r\n                                                                        return;\r\n                                                                    }\r\n                                                                    const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                                                                        position: toast.POSITION.TOP_CENTER\r\n                                                                    });\r\n                                                                    dispatch(deleteArtLevel(art_levels.selectedArtLevel.id, idx))\r\n                                                                    dispatch(addNotification(\"Trình độ \", `${art_levels.selectedArtLevel.name} đã được xóa`));\r\n                                                                    dispatch(removeArtLevel(art_levels.selectedArtLevel.id));\r\n                                                                    dispatch(clearSelectedArtLevel());\r\n                                                                    setPopup3(false);\r\n                                                                }}>Remove\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Popup>\r\n                                            )\r\n                                        }\r\n                                    }()\r\n                                }\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Art;\r\n","export interface ICourse {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    creator_id: number;\r\n    art_type_id: number;\r\n    art_level_id: number;\r\n    art_age_id: number;\r\n    art_age_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    checked_tutoral: boolean;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum CourseModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError, removeArtType } from \"../../../store/actions/art_type.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteArtType(id: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/art-type/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteArtType(id, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Xóa trình độ thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(removeArtType(id))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Xóa trình độ không thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError, removeArtAge } from \"../../../store/actions/art_age.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteArtAge(id: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/art-age/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteArtAge(id, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                toast.update(idx, { render: \"Xóa độ tuổi thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(data)\r\n                dispatch(removeArtAge(id))\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Xóa độ tuổi không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError, removeArtLevel } from \"../../../store/actions/art_level.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteArtLevel(id: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/art-level/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteArtLevel(id, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Xóa trình độ thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(removeArtLevel(id))\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Xóa trình độ không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CourseModificationStatus } from \"../../store/models/course.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setModificationState } from \"../../store/actions/course.action\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction CourseNomalList(props) {\r\n\r\n    const courses = useSelector((state) => state.courses);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n  \r\n  \r\n  \r\n    const routeChange = (course) => {\r\n      localStorage.removeItem('course_id')\r\n      localStorage.setItem('course_id', course.id.toString())\r\n      localStorage.removeItem('number_of_sum')\r\n      localStorage.setItem('number_of_sum', course.num_of_section.toString())\r\n      localStorage.removeItem('course_name')\r\n      localStorage.setItem('course_name', course.name)\r\n      let path = '/courses/section-template';\r\n      history.push({\r\n        pathname: path\r\n      })\r\n      ;\r\n    }\r\n\r\n    const routeEdit = (course) => {\r\n        dispatch(setModificationState(CourseModificationStatus.None));\r\n        let path = `/courses/edit-course`;\r\n        history.push(path);\r\n      }\r\n\r\n\r\n  const datas = courses.courses;\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n  function removeButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n            if(props.onSelect) props.onSelect(row);\r\n            routeEdit(row)}}\r\n          >Chỉnh thông tin</button>\r\n    );\r\n  }\r\n\r\n  function editButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-warning\" onClick={() => {\r\n            if (props.onSelect) props.onSelect(row);\r\n            routeChange(row)\r\n          }}\r\n          >Chỉnh giáo án</button>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'name',\r\n      text: 'Tên',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'art_type_name',\r\n      text: 'Thể loại',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'art_age_name',\r\n      text: 'Độ tuổi',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'art_level_name',\r\n      text: 'Câp độ',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: 'Hành động',\r\n      formatter: editButton\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: '',\r\n      formatter: removeButton\r\n    },\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default CourseNomalList;\r\n","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport CourseNomalList from \"./CourseNomalList\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./Course.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { ICourseState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport Popup from \"reactjs-popup\";\r\nimport {\r\n    clearSelectedCourse, setModificationState,\r\n    changeSelectedCourse,\r\n    removeCourse\r\n} from \"../../store/actions/course.action\";\r\nimport { CourseModificationStatus, ICourse } from \"../../store/models/course.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getCourse } from \"../../common/service/Course/GetCourse\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { deleteCourse } from \"../../common/service/Course/DeleteCourse\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\n\r\nconst Course: React.FC = () => {\r\n\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const courses: ICourseState = useSelector((state: IStateType) => state.courses);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberCourseCount: number = courses.courses.length;\r\n    const [popup1, setPopup1] = useState(false);\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    console.log(courses)\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        dispatch(clearSelectedCourse());\r\n        dispatch(updateCurrentPath(\"Khóa học\", \"danh sách\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getCourse(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getCourse(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token])\r\n\r\n    function onCourseSelect(course: ICourse): void {\r\n        dispatch(changeSelectedCourse(course));\r\n        onCourseRemove1()\r\n        dispatch(setModificationState(CourseModificationStatus.None));\r\n    }\r\n\r\n    function onCourseRemove1() {\r\n        setPopup1(true);\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    const routeChange = () => {\r\n        let path = `/courses/create-course`;\r\n        history.push(\r\n            {\r\n                pathname: path,\r\n                state: { course_value: null } // your data array of objects\r\n            }\r\n        );\r\n    }\r\n\r\n    console.log(courses.modificationState)\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <ToastContainer />\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Khóa học</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"KHÓA HỌC\" text={`${numberCourseCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Danh sách khóa học</h6>\r\n                            <div className=\"header-buttons\">\r\n                                <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                    dispatch(setModificationState(CourseModificationStatus.Create))\r\n                                    routeChange()\r\n                                    onCourseRemove1()\r\n                                }}>\r\n                                    <i className=\"fas fa fa-plus\"></i>\r\n                                    Thêm khóa học\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <CourseNomalList\r\n                                onSelect={onCourseSelect}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {\r\n                function () {\r\n                    if ((courses.selectedCourse) && (courses.modificationState === CourseModificationStatus.Remove)) {\r\n                        return (\r\n                            <Popup\r\n                                open={popup1}\r\n                                onClose={() => setPopup1(false)}\r\n                                closeOnDocumentClick\r\n                            >\r\n                                <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                    <div className=\"popup-title\">\r\n                                        Are you sure?\r\n                                    </div>\r\n                                    <div className=\"popup-content\">\r\n                                        <button type=\"button\"\r\n                                            className=\"btn btn-danger\"\r\n                                            onClick={() => {\r\n                                                if (!courses.selectedCourse) {\r\n                                                    return;\r\n                                                }\r\n                                                dispatch(deleteCourse(courses.selectedCourse.id))\r\n                                                dispatch(addNotification(\"Khóa học \", `${courses.selectedCourse.id} đã được xóa`));\r\n                                                dispatch(removeCourse(courses.selectedCourse.id));\r\n                                                dispatch(clearSelectedCourse());\r\n                                                setPopup1(false);\r\n                                            }}>Remove\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </Popup>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Course;\r\n","export interface IMyClass {\r\n    id: any;\r\n    creator_id: number;\r\n    user_register_teach_semester: number;\r\n    security_code: string;\r\n    name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n\r\n}\r\n\r\nexport enum MyClassModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { fetchDataRequest, fetchDataError, removeCourse } from \"../../../store/actions/course.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteCourse(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/course/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteCourse(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(removeCourse(id))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { IMyClass, MyClassModificationStatus } from \"../models/my_class.interface\";\r\nexport const ADD_MY_CLASS: string = \"ADD_MY_CLASS\";\r\nexport const EDIT_MY_CLASS: string = \"EDIT_MY_CLASS\";\r\nexport const REMOVE_MY_CLASS: string = \"REMOVE_MY_CLASS\";\r\nexport const CHANGE_MY_CLASS_AMOUNT: string = \"CHANGE_MY_CLASS_AMOUNT\";\r\nexport const CHANGE_MY_CLASS_PENDING_EDIT: string = \"CHANGE_MY_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_MY_CLASS_PENDING_EDIT: string = \"CLEAR_MY_CLASS_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_MY_CLASS_ALL: string = \"REMOVE_MY_CLASS_ALL\";\r\nexport const INITIAL_MY_CLASS: string = \"INITIAL_MY_CLASS\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(myclass: IMyClass) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        myclass\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialMyClass(myclass: IMyClass): IInitialMyClassActionType {\r\n    return { type: INITIAL_MY_CLASS, myclass: myclass };\r\n}\r\n\r\nexport function removeMyClassAll(): IRemoveMyClassAllActionType {\r\n    return { type: REMOVE_MY_CLASS_ALL };\r\n}\r\n\r\nexport function addMyClass(myclass: IMyClass): IAddMyClassActionType {\r\n    return { type: ADD_MY_CLASS, myclass: myclass };\r\n}\r\n\r\nexport function editMyClass(myclass: IMyClass): IEditMyClassActionType {\r\n    return { type: EDIT_MY_CLASS, myclass: myclass };\r\n}\r\n\r\nexport function removeMyClass(id: any): IRemoveMyClassActionType {\r\n    return { type: REMOVE_MY_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedMyClass(myclass: IMyClass): IChangeSelectedMyClassActionType {\r\n    return { type: CHANGE_MY_CLASS_PENDING_EDIT, myclass: myclass };\r\n}\r\n\r\nexport function clearSelectedMyClass(): IClearSelectedMyClassActionType {\r\n    return { type: CLEAR_MY_CLASS_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: MyClassModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddMyClassActionType { type: string, myclass: IMyClass };\r\ninterface IEditMyClassActionType { type: string, myclass: IMyClass };\r\ninterface IRemoveMyClassActionType { type: string, id: any };\r\ninterface IChangeSelectedMyClassActionType { type: string, myclass: IMyClass };\r\ninterface IClearSelectedMyClassActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  MyClassModificationStatus};\r\ninterface IRemoveMyClassAllActionType { type: string }\r\ninterface IInitialMyClassActionType {type: string, myclass: IMyClass}","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MyClassModificationStatus } from \"../../store/models/my_class.interface\";\r\nimport { setModificationState } from \"../../store/actions/my_class.action\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction ClassList(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const myclasss = useSelector((state) => state.myclasses);\r\n  \r\n    const history = useHistory();\r\n  \r\n    \r\n    const routeChange = (class_id) =>{ \r\n      let path = '/class/detail'; \r\n      localStorage.setItem('class_id', class_id.toString())\r\n      history.push({\r\n        pathname: path,\r\n        state: { class_id: class_id }\r\n      });\r\n    }\r\n\r\n\r\n  const routeViewSchedule = (class_id, class_name) =>{ \r\n    localStorage.removeItem('class_id')\r\n    localStorage.setItem('class_id', class_id.toString())\r\n    localStorage.removeItem('class_name')\r\n    localStorage.setItem('class_name', class_name)\r\n    let path = '/class/schedule'; \r\n    history.push({\r\n      pathname: path,\r\n      state: { class_id: class_id }\r\n    });\r\n  }\r\n\r\n\r\n  const datas = myclasss.myClasses;\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n  function editButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={()=> {\r\n            if(props.onSelect) props.onSelect(row);\r\n            dispatch(setModificationState(row))\r\n          }}>Chỉnh sửa</button>\r\n    );\r\n  }\r\n\r\n  function removeButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() =>{\r\n            if(props.onSelect) props.onSelect(row);\r\n            dispatch(setModificationState(MyClassModificationStatus.Remove))\r\n          }}>Xóa</button>\r\n    )\r\n  }\r\n\r\n  function viewScheduleButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n            if(props.onSelect) props.onSelect(row);\r\n            routeViewSchedule(row.id, row.name)}}\r\n          >Chi tiết</button>\r\n    )\r\n  }\r\n\r\n  function detailClassButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n            if(props.onSelect) props.onSelect(row);\r\n            routeChange(row.id)}}\r\n          >Chi tiết</button>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'name',\r\n      text: 'Tên',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: 'Lịch học',\r\n      formatter: viewScheduleButton\r\n    },\r\n    {\r\n        dataField: '',\r\n        text: 'Thống kê',\r\n        formatter: detailClassButton\r\n      },\r\n    {\r\n      dataField: '',\r\n      text: 'Hành động',\r\n      formatter: editButton\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: '',\r\n      formatter: removeButton\r\n    },\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default ClassList;\r\n","import { fetchDataSuccess, fetchDataError, removeMyClassAll, initialMyClass, addMyClass } from \"../../../store/actions/my_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface MyClass {\r\n    id: any;\r\n    creator_id: number;\r\n    user_register_teach_semester: number;\r\n    security_code: string;\r\n    name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getMyClass(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/classes`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getMyClass(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeMyClassAll())\r\n                console.log(data.body.classes)\r\n                data.body.classes.map((ele: any, index: any) => {\r\n                    //var strDate_1 = ele.start_time;\r\n                    //var strDate_2 = ele.end_time;\r\n                    var my_class: MyClass = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        security_code: ele.security_code,\r\n                        creator_id: ele.creator_id,\r\n                        user_register_teach_semester: ele.user_register_teach_semester,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialMyClass(my_class));\r\n                    }\r\n                    else{\r\n                        return dispatch(addMyClass(my_class))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","export interface ISemesterClass {\r\n    id: any;\r\n    name: string;\r\n    semester_id: number;\r\n    semester_name: string;\r\n    registration_time: string;\r\n    registration_expiration_time: string;\r\n    course_id: number;\r\n    course_name: string;\r\n    max_participant: number;\r\n}\r\n\r\nexport enum SemesterClassModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ISemesterClass, SemesterClassModificationStatus } from \"../models/semester_class.interface\";\r\nexport const ADD_SEMESTER_CLASS: string = \"ADD_SEMESTER_CLASS\";\r\nexport const EDIT_SEMESTER_CLASS: string = \"EDIT_SEMESTER_CLASS\";\r\nexport const REMOVE_SEMESTER_CLASS: string = \"REMOVE_SEMESTER_CLASS\";\r\nexport const CHANGE_SEMESTER_CLASS_AMOUNT: string = \"CHANGE_SEMESTER_CLASS_AMOUNT\";\r\nexport const CHANGE_SEMESTER_CLASS_PENDING_EDIT: string = \"CHANGE_SEMESTER_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_SEMESTER_CLASS_PENDING_EDIT: string = \"CLEAR_SEMESTER_CLASS_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SEMESTER_CLASS_ALL: string = \"REMOVE_SEMESTER_CLASS_ALL\";\r\nexport const INITIAL_SEMESTER_CLASS: string = \"INITIAL_SEMESTER_CLASS\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(semester_class: ISemesterClass) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        semester_class\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSemesterClass(semester_class: ISemesterClass): IInitialSemesterClassActionType {\r\n    return { type: INITIAL_SEMESTER_CLASS, semester_class: semester_class };\r\n}\r\n\r\nexport function removeSemesterClassAll(): IRemoveSemesterClassAllActionType {\r\n    return { type: REMOVE_SEMESTER_CLASS_ALL };\r\n}\r\n\r\nexport function addSemesterClass(semester_class: ISemesterClass): IAddSemesterClassActionType {\r\n    return { type: ADD_SEMESTER_CLASS, semester_class: semester_class };\r\n}\r\n\r\nexport function editSemesterClass(semester_class: ISemesterClass): IEditSemesterClassActionType {\r\n    return { type: EDIT_SEMESTER_CLASS, semester_class: semester_class };\r\n}\r\n\r\nexport function removeSemesterClass(id: any): IRemoveSemesterClassActionType {\r\n    return { type: REMOVE_SEMESTER_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClass(semester_class: ISemesterClass): IChangeSelectedSemesterClassActionType {\r\n    return { type: CHANGE_SEMESTER_CLASS_PENDING_EDIT, semester_class: semester_class };\r\n}\r\n\r\nexport function clearSelectedSemesterClass(): IClearSelectedSemesterClassActionType {\r\n    return { type: CLEAR_SEMESTER_CLASS_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateSemesterClass(value: SemesterClassModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddSemesterClassActionType { type: string, semester_class: ISemesterClass };\r\ninterface IEditSemesterClassActionType { type: string, semester_class: ISemesterClass };\r\ninterface IRemoveSemesterClassActionType { type: string, id: any };\r\ninterface IChangeSelectedSemesterClassActionType { type: string, semester_class: ISemesterClass };\r\ninterface IClearSelectedSemesterClassActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  SemesterClassModificationStatus};\r\ninterface IRemoveSemesterClassAllActionType { type: string }\r\ninterface IInitialSemesterClassActionType {type: string, semester_class: ISemesterClass}","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SemesterClassModificationStatus } from \"../../store/models/semester_class.interface\";\r\nimport { setModificationStateSemesterClass } from \"../../store/actions/semester_class.action\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction ClassSemesterList(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const semester_classes = useSelector((state) => state.semester_classes);\r\n    const schedules = useSelector((state) => state.schedules);\r\n    let schedule_list = []\r\n    console.log(semester_classes.semesterClasses)\r\n    if (schedules.schedules.length > 0){\r\n      semester_classes.semesterClasses.map(ele => {\r\n        let item = \"\";\r\n        schedules.schedules.map(element => {\r\n          if (element.semester_class_id === ele.id) {\r\n            console.log(element.lesson_time)\r\n            item += element.lesson_time\r\n          }\r\n          return element\r\n        })\r\n        return schedule_list.push({\r\n          name: ele.name,\r\n          value: item\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n  const datas = semester_classes.semesterClasses;\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n  function editButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={()=> {\r\n            if(props.onSelect) props.onSelect(row);\r\n            dispatch(setModificationStateSemesterClass(SemesterClassModificationStatus.Edit))\r\n          }}>Chỉnh sửa</button>\r\n    );\r\n  }\r\n\r\n  function removeButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() =>{\r\n            if(props.onSelect) props.onSelect(row);\r\n            dispatch(setModificationStateSemesterClass(SemesterClassModificationStatus.Remove))\r\n          }}>Xóa</button>\r\n    )\r\n  }\r\n\r\n  function schduleShow(cell, row, rowIndex) {\r\n    return (\r\n        <span>\r\n        {schedule_list.map((ele, idx) => {\r\n          if (ele.name === row.name) {\r\n            return ele.value\r\n          }\r\n        })}</span>\r\n    )\r\n  }\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'name',\r\n      text: 'Tên',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'course_name',\r\n      text: 'Khóa học',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'semester_name',\r\n      text: 'Học kì',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'max_participant',\r\n      text: 'Số học sinh tối đa'\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: 'Lịch học',\r\n      formatter: schduleShow\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: 'Hành động',\r\n      formatter: editButton\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: '',\r\n      formatter: removeButton\r\n    },\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default ClassSemesterList;\r\n","import { ISchedule, ScheduleModificationStatus } from \"../models/schedule.interface\";\r\nexport const ADD_SCHEDULE: string = \"ADD_SCHEDULE\";\r\nexport const EDIT_SCHEDULE: string = \"EDIT_SCHEDULE\";\r\nexport const REMOVE_SCHEDULE: string = \"REMOVE_SCHEDULE\";\r\nexport const CHANGE_SCHEDULE_AMOUNT: string = \"CHANGE_SCHEDULE_AMOUNT\";\r\nexport const CHANGE_SCHEDULE_PENDING_EDIT: string = \"CHANGE_SCHEDULE_PENDING_EDIT\";\r\nexport const CLEAR_SCHEDULE_PENDING_EDIT: string = \"CLEAR_SCHEDULE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SCHEDULE_ALL: string = \"REMOVE_SCHEDULE_ALL\";\r\nexport const INITIAL_SCHEDULE: string = \"INITIAL_SCHEDULE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(schedule: ISchedule) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        schedule\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSchedule(schedule: ISchedule): IInitialScheduleActionType {\r\n    return { type: INITIAL_SCHEDULE, schedule: schedule };\r\n}\r\n\r\nexport function removeScheduleAll(): IRemoveScheduleAllActionType {\r\n    return { type: REMOVE_SCHEDULE_ALL };\r\n}\r\n\r\nexport function addSchedule(schedule: ISchedule): IAddScheduleActionType {\r\n    return { type: ADD_SCHEDULE, schedule: schedule };\r\n}\r\n\r\nexport function editSchedule(schedule: ISchedule): IEditScheduleActionType {\r\n    return { type: EDIT_SCHEDULE, schedule: schedule };\r\n}\r\n\r\nexport function removeSchedule(id: any): IRemoveScheduleActionType {\r\n    return { type: REMOVE_SCHEDULE, id: id };\r\n}\r\n\r\nexport function changeSelectedSchedule(schedule: ISchedule): IChangeSelectedScheduleActionType {\r\n    return { type: CHANGE_SCHEDULE_PENDING_EDIT, schedule: schedule };\r\n}\r\n\r\nexport function clearSelectedSchedule(): IClearSelectedScheduleActionType {\r\n    return { type: CLEAR_SCHEDULE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ScheduleModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddScheduleActionType { type: string, schedule: ISchedule };\r\ninterface IEditScheduleActionType { type: string, schedule: ISchedule };\r\ninterface IRemoveScheduleActionType { type: string, id: any };\r\ninterface IChangeSelectedScheduleActionType { type: string, schedule: ISchedule };\r\ninterface IClearSelectedScheduleActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ScheduleModificationStatus};\r\ninterface IRemoveScheduleAllActionType { type: string }\r\ninterface IInitialScheduleActionType {type: string, schedule: ISchedule}","import { fetchDataSuccess, fetchDataError, removeScheduleAll, initialSchedule, addSchedule } from \"../../../store/actions/schedule.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface schedule {\r\n    id: any;\r\n    lesson_time_id: number;\r\n    lesson_time: string;\r\n    semester_class_id: number;\r\n    date_of_week: number;\r\n}\r\nexport function getSchedule(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/schedule`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSchedule(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeScheduleAll())\r\n                console.log(data.body.schedules)\r\n                data.body.schedules.map((ele: any, index: any) => {\r\n                    var schedule: schedule = {\r\n                        id: ele.id,\r\n                        lesson_time_id: ele.lesson_time_id,\r\n                        lesson_time: ele.lesson_time,\r\n                        semester_class_id: ele.semester_classes_id,\r\n                        date_of_week: ele.date_of_week\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialSchedule(schedule));\r\n                    }\r\n                    else{\r\n                        return dispatch(addSchedule(schedule))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/schedule.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getSchedule } from \"./GetSchedule\";\r\n\r\nexport function postSchedule(data: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/schedule`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postSchedule(data))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                getSchedule(dispatch)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataSuccess, fetchDataError, removeSemesterClassAll, initialSemesterClass, addSemesterClass } from \"../../../store/actions/semester_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface SemesterClass {\r\n    id: any;\r\n    name: string;\r\n    semester_id: number;\r\n    registration_time: string;\r\n    registration_expiration_time: string;\r\n    semester_name: string;\r\n    course_name: string;\r\n    course_id: number;\r\n    max_participant: number;\r\n}\r\nexport function getSemesterClass(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester-class`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSemesterClass(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeSemesterClassAll())\r\n                //console.log(data.body.lessons)\r\n                data.body.semester_classes.map((ele: any, index: any) => {\r\n                    var class_ele: SemesterClass = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        semester_id: ele.semester_id,\r\n                        registration_time: ele.registration_time,\r\n                        registration_expiration_time: ele.registration_expiration_time,\r\n                        semester_name: ele.semester_name,\r\n                        course_id: ele.course_id,\r\n                        course_name: ele.course_name,\r\n                        max_participant: ele.max_participant\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialSemesterClass(class_ele));\r\n                    }\r\n                    else{\r\n                        return dispatch(addSemesterClass(class_ele))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, ChangeEvent, Fragment } from \"react\";\r\nimport { SelectMutipleProps } from \"../types/SelectMutiple.types\";\r\n\r\nfunction SelectKeyValueMutiple(props: SelectMutipleProps): JSX.Element {\r\n    const [error, setError] = useState(\"\");\r\n    const [htmlClass, setHtmlClass] = useState(\"\");\r\n    const [value, setValue] = useState(props.value);\r\n\r\n    function onValueChanged(event: ChangeEvent<HTMLSelectElement>): void {\r\n        let [error, validClass, elementValue] = [\"\", \"\", event.target.value];\r\n\r\n        [error, validClass] = (!elementValue && props.required) ?\r\n            [\"Value has to be selected\", \"is-invalid\"] : [\"\", \"is-valid\"];\r\n\r\n\r\n        props.onChange(parseInt(elementValue), props.index);\r\n        setError(error);\r\n        setHtmlClass(validClass);\r\n        setValue(parseInt(elementValue));\r\n    }\r\n\r\n    //console.log(props.options)\r\n\r\n    const getOptions: (JSX.Element | null)[] = props.options.map( (option: any, index:number) => {\r\n        return (\r\n            <option key={index} value={option.value}>{option.name}</option>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <Fragment>\r\n            <label>{props.label}</label>\r\n            <select\r\n                value={value}\r\n                className={`form-control ${props.inputClass ? props.inputClass : \"\"} ${htmlClass}`}\r\n                onChange={onValueChanged}>\r\n                <option value= {0}>Choose...</option>\r\n                {getOptions}\r\n            </select>\r\n\r\n            {error ?\r\n                <div className=\"invalid-feedback\">\r\n                    {error}\r\n                </div> : null\r\n            }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default SelectKeyValueMutiple;","import React, { useState, ChangeEvent, Fragment } from \"react\";\r\nimport { SelectMutipleProps } from \"../types/SelectMutiple.types\";\r\n\r\nfunction SelectKeyValueMutiple2(props: SelectMutipleProps): JSX.Element {\r\n    const [error, setError] = useState(\"\");\r\n    const [htmlClass, setHtmlClass] = useState(\"\");\r\n    const [value, setValue] = useState(props.value);\r\n\r\n    function onValueChanged(event: ChangeEvent<HTMLSelectElement>): void {\r\n        let [error, validClass, elementValue] = [\"\", \"\", event.target.value];\r\n\r\n        [error, validClass] = (!elementValue && props.required) ?\r\n            [\"Value has to be selected\", \"is-invalid\"] : [\"\", \"is-valid\"];\r\n\r\n\r\n        props.onChange(elementValue, props.index);\r\n        setError(error);\r\n        setHtmlClass(validClass);\r\n        setValue(elementValue);\r\n    }\r\n\r\n    //console.log(props.options)\r\n\r\n    const getOptions: (JSX.Element | null)[] = props.options.map( (option: any, index:number) => {\r\n        return (\r\n            <option key={index} value={option.value}>{option.name}</option>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <Fragment>\r\n            <label>{props.label}</label>\r\n            <select\r\n                value={value}\r\n                className={`form-control ${props.inputClass ? props.inputClass : \"\"} ${htmlClass}`}\r\n                onChange={onValueChanged}>\r\n                <option value= {\"\"}>Choose...</option>\r\n                {getOptions}\r\n            </select>\r\n\r\n            {error ?\r\n                <div className=\"invalid-feedback\">\r\n                    {error}\r\n                </div> : null\r\n            }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default SelectKeyValueMutiple2;","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, ISemesterClassState, ISemesterState, ILessonState, IScheduleState, ICourseState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ISemesterClass, SemesterClassModificationStatus } from \"../../store/models/semester_class.interface\";\r\nimport { editSemesterClass, clearSelectedSemesterClass, setModificationStateSemesterClass, addSemesterClass } from \"../../store/actions/semester_class.action\"\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { OnChangeModel, ISemesterClassFormState } from \"../../common/types/Form.types\";\r\nimport SelectKeyValue from \"../../common/components/SelectKeyValue\";\r\nimport { postSemesterClass } from \"../../common/service/SemesterClass/PostSemesterClass\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport NumberInput from \"../../common/components/NumberInput\";\r\nimport { ILesson } from \"../../store/models/lesson.interface\";\r\nimport SelectKeyValueMutiple from \"../../common/components/SelectKeyValueMutiple\";\r\nimport { toast } from \"react-toastify\";\r\nimport SelectKeyValueMutiple2 from \"../../common/components/SelectKeyValueMutiple2\";\r\nimport { deleteScheduleBySemesterClass } from \"../../common/service/Schedule/DeleteScheduleBySemesterClass\";\r\nimport { putSemesterClass } from \"../../common/service/SemesterClass/PutSemesterClass\";\r\nimport DateInput from \"../../common/components/DateInput\";\r\nimport DateInput2 from \"../../common/components/DateInput2\";\r\n\r\nexport type semesterClassListProps = {\r\n  isCheck: (value: boolean) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\ntype Options = {\r\n  name: string;\r\n  value: any;\r\n}\r\n\r\ntype LessonTime = {\r\n  key: number;\r\n  value: number;\r\n}\r\n\r\ntype ScheduleType = {\r\n  lesson_time: number;\r\n  date_of_week: number;\r\n}\r\n\r\ntype Option1s = {\r\n  key: number;\r\n  value: string;\r\n}\r\n\r\ntype Option3s = {\r\n  key: number;\r\n  value: number;\r\n}\r\n\r\ntype Option2s = {\r\n  key: number;\r\n  value: number;\r\n}\r\n\r\n\r\nfunction ClassSemesterForm(props: semesterClassListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const semester_classes: ISemesterClassState | null = useSelector((state: IStateType) => state.semester_classes);\r\n  const semesters: ISemesterState | null = useSelector((state: IStateType) => state.semesters);\r\n  const courses: ICourseState | null = useSelector((state: IStateType) => state.courses);\r\n  let semester_classe: ISemesterClass | null = semester_classes.selectedSemesterClass;\r\n  const isCreate: boolean = (semester_classes.modificationState === SemesterClassModificationStatus.Create);\r\n  let semester_class_id: number = 0;\r\n  if (!semester_classe || isCreate) {\r\n    semester_classe = { id: 0, max_participant: 0,registration_expiration_time: \"\", semester_name: \"\", course_id: 0, course_name: \"\", semester_id: 0, name: \"\", registration_time: \"\" };\r\n  }\r\n  else {\r\n    semester_class_id = semester_classe.id;\r\n  }\r\n\r\n  const listSemesters: Options[] = [];\r\n  semesters.semesters.map((ele) => {\r\n    let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n    return listSemesters.push(item)\r\n  })\r\n\r\n  var now = new Date();\r\n  now.setMinutes(now.getMinutes() - now.getTimezoneOffset());\r\n  var time_now = now.toISOString().slice(0,16);\r\n\r\n  const listCourses: Options[] = [];\r\n  courses.courses.map((ele) => {\r\n    let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n    return listCourses.push(item)\r\n  })\r\n\r\n  const schedules: IScheduleState = useSelector((state: IStateType) => state.schedules);\r\n  let lesson_time_list: LessonTime[] = []\r\n  console.log(schedules.schedules)\r\n  if (semester_class_id !== 0) {\r\n    schedules.schedules.forEach(element => {\r\n      if (element.semester_class_id === semester_class_id) {\r\n        lesson_time_list.push({\r\n          key: element.date_of_week,\r\n          value: element.lesson_time_id\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  console.log(lesson_time_list)\r\n\r\n\r\n\r\n  const list_date_of_week: Options[] = [\r\n    {\r\n      \"name\": \"Thứ 2\",\r\n      \"value\": 2\r\n    },\r\n    {\r\n      \"name\": \"Thứ 3\",\r\n      \"value\": 3\r\n    },\r\n    {\r\n      \"name\": \"Thứ 4\",\r\n      \"value\": 4\r\n    },\r\n    {\r\n      \"name\": \"Thứ 5\",\r\n      \"value\": 5\r\n    },\r\n    {\r\n      \"name\": \"Thứ 6\",\r\n      \"value\": 6\r\n    },\r\n    {\r\n      \"name\": \"Thứ 7\",\r\n      \"value\": 7\r\n    }\r\n  ];\r\n\r\n  const lesson_times: ILessonState = useSelector((state: IStateType) => state.lessons);\r\n  const list_lesson: ILesson[] = lesson_times.lessons\r\n  const list_lessons: Options[] = [];\r\n  list_lesson.map((ele) => {\r\n    let item: Options = { \"name\": ele.start_time + \" - \" + ele.end_time, \"value\": ele.id }\r\n    return list_lessons.push(item)\r\n  })\r\n\r\n  let total = schedules.schedules.filter((value) => value.semester_class_id === semester_class_id).length\r\n  let schedule_list = schedules.schedules.filter((value) => value.semester_class_id === semester_class_id)\r\n\r\n  const [formState, setFormState] = useState({\r\n    semester_id: { error: \"\", value: semester_classe.semester_id },\r\n    name: { error: \"\", value: semester_classe.name },\r\n    registration_expiration_time: {error: \"\", value: semester_classe.registration_expiration_time},\r\n    max_participant: { error: \"\", value: semester_classe.max_participant },\r\n    course_id: { error: \"\", value: semester_classe.course_id },\r\n    total_date_of_week: { error: \"\", value: total },\r\n    registration_time: { error: \"\", value: semester_classe.registration_time }\r\n  });\r\n\r\n\r\n  const [listScheduleItemId, setListScheduleItemId] = useState<Option2s[]>([])\r\n  const [listLessonId, setListLessonId] = useState<Option3s[]>([])\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n\r\n    let res_1: Option2s[] = []\r\n    if (total > 0) {\r\n      for (let index = 0; index < total; index++) {\r\n        let date_of_week_obj: Option2s = {\r\n          key: index,\r\n          value: schedule_list[index].date_of_week\r\n        }\r\n        let lesson_time_obj: Option3s = {\r\n          key: index,\r\n          value: schedule_list[index].lesson_time_id\r\n        }\r\n        res_1.push(date_of_week_obj)\r\n        listScheduleItemId.push(date_of_week_obj)\r\n        listLessonId.push(lesson_time_obj)\r\n      }\r\n    }\r\n    setListScheduleItemId([...listScheduleItemId])\r\n    setListLessonId([...listLessonId])\r\n  }\r\n\r\n  function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if (isFormInvalid()) {\r\n      return;\r\n    }\r\n\r\n    props.isCheck(false);\r\n\r\n    let saveUserFn: Function = (isCreate) ? addSemesterClass : editSemesterClass;\r\n    saveForm(formState, saveUserFn);\r\n  }\r\n\r\n  console.log(listLessonId)\r\n\r\n  function saveForm(formState: ISemesterClassFormState, saveFn: Function): void {\r\n    if (semester_classe) {\r\n      let lesson_times: Option3s[] = listLessonId.filter((value, index) => value.key < formState.total_date_of_week.value)\r\n      let date_of_weeks: Option2s[] = listScheduleItemId.filter((value, index) => value.key < formState.total_date_of_week.value)\r\n      let schedule_element: ScheduleType[] = [];\r\n      lesson_times.map((ele, idx) => {\r\n        return schedule_element.push({\r\n          lesson_time: ele.value,\r\n          date_of_week: date_of_weeks[idx].value\r\n        })\r\n      })\r\n\r\n      const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n\r\n      console.log(schedule_element)\r\n      if (saveFn === addSemesterClass) {\r\n        dispatch(postSemesterClass({\r\n          semester_id: formState.semester_id.value,\r\n          name: formState.name.value,\r\n          registration_time: formState.registration_time.value,\r\n          registration_expiration_time: formState.registration_expiration_time.value,\r\n          course_id: formState.course_id.value\r\n        }, schedule_element, idx))\r\n      }\r\n\r\n      else if (saveFn === editSemesterClass) {\r\n        dispatch(putSemesterClass(semester_classe.id, {\r\n          semester_id: formState.semester_id.value,\r\n          name: formState.name.value,\r\n          registration_time: formState.registration_time.value,\r\n          registration_expiration_time: formState.registration_expiration_time.value,\r\n          course_id: formState.course_id.value\r\n        }, idx))\r\n        dispatch(deleteScheduleBySemesterClass(semester_classe.id, schedule_element, idx));\r\n      }\r\n\r\n      dispatch(addNotification(\"Mở lớp đăng kí theo kì \", `chỉnh bởi bạn`));\r\n      dispatch(clearSelectedSemesterClass());\r\n      dispatch(setModificationStateSemesterClass(SemesterClassModificationStatus.None));\r\n\r\n\r\n\r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    props.isCheck(false);\r\n    dispatch(setModificationStateSemesterClass(SemesterClassModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid();\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  function isFormInvalid(): boolean {\r\n    return (formState.name.error  || formState.semester_id.error || formState.registration_time.error\r\n      || formState.course_id.error || !formState.semester_id.value || !formState.course_id.value\r\n      || !formState.name.value || !formState.registration_time.value ) as boolean;\r\n  }\r\n/*   useEffect(() => {\r\n    let res_1: Option1s[] = []\r\n    if (total > 0) {\r\n      for (let index = 0; index < total; index++) {\r\n        let date_of_week_obj: Option1s = {\r\n          key: index,\r\n          value: schedule_list[index].date_of_week\r\n        }\r\n        let lesson_time_obj: Option1s = {\r\n          key: index,\r\n          value: schedule_list[index].lesson_time\r\n        }\r\n        res_1.push(date_of_week_obj)\r\n        listScheduleItemId.push(date_of_week_obj)\r\n        listLessonId.push(lesson_time_obj)\r\n      }\r\n    }\r\n    setListScheduleItemId([...listScheduleItemId])\r\n    setListLessonId([...listLessonId])\r\n\r\n  }, [total]) */\r\n  function hasFormMutipleValueChanged1(value: number, index: number) {\r\n\r\n    console.log(listScheduleItemId)\r\n    if (listScheduleItemId.length === 0) {\r\n      setListScheduleItemId([...listScheduleItemId, { \"key\": index, \"value\": value }])\r\n    }\r\n    else {\r\n      let is_check = false\r\n      for (let idx = 0; idx < listScheduleItemId.length; idx++) {\r\n        if (listScheduleItemId[idx].key === index) {\r\n          if (listScheduleItemId[idx].value !== value) {\r\n            is_check = true\r\n            setListScheduleItemId([...listScheduleItemId.filter((item, idx) => item.key !== index), { \"key\": index, \"value\": value }])\r\n          }\r\n          break\r\n        }\r\n\r\n      }\r\n\r\n      if (is_check === false) {\r\n        setListScheduleItemId([...listScheduleItemId, { \"key\": index, \"value\": value }])\r\n      }\r\n    }\r\n  }\r\n\r\n  console.log(listScheduleItemId)\r\n\r\n  function hasFormMutipleValueChanged2(value: number, index: number) {\r\n    console.log(value)\r\n    console.log(index)\r\n\r\n    if (listLessonId.length === 0) {\r\n      setListLessonId([...listLessonId, { \"key\": index, \"value\": value }])\r\n    }\r\n    else {\r\n      let is_check = false\r\n      for (let idx = 0; idx < listLessonId.length; idx++) {\r\n        if (listLessonId[idx].key === index) {\r\n          if (listLessonId[idx].value !== value) {\r\n            is_check = true\r\n            setListLessonId([...listLessonId.filter((item, idx) => item.key !== index), { \"key\": index, \"value\": value }])\r\n          }\r\n          break\r\n        }\r\n\r\n      }\r\n\r\n      if (is_check === false) {\r\n        setListLessonId([...listLessonId, { \"key\": index, \"value\": value }])\r\n      }\r\n    }\r\n  }\r\n\r\n  console.log(listLessonId)\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row text-left\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card shadow mb-1\">\r\n            <div className=\"card-header py-2\">\r\n              <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} lớp theo kì</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={saveUser}>\r\n                <div className=\"form-group\">\r\n                    <TextInput id=\"input_name\"\r\n                      field=\"name\"\r\n                      value={formState.name.value}\r\n                      onChange={hasFormValueChanged}\r\n                      required={false}\r\n                      maxLength={1000}\r\n                      label=\"Tên\"\r\n                      placeholder=\"\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col-md-6\">\r\n                    <SelectKeyValue id=\"input_semester_id\"\r\n                      field=\"semester_id\"\r\n                      value={formState.semester_id.value}\r\n                      onChange={hasFormValueChanged}\r\n                      required={true}\r\n                      label=\"Học kì\"\r\n                      options={listSemesters}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group col-md-6\">\r\n                    <SelectKeyValue id=\"input_course_id\"\r\n                      field=\"course_id\"\r\n                      value={formState.course_id.value}\r\n                      onChange={hasFormValueChanged}\r\n                      required={true}\r\n                      label=\"Thuộc khóa học\"\r\n                      options={listCourses}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                    <DateInput id=\"input_registration_time\"\r\n                      field=\"registration_time\"\r\n                      value={formState.registration_time.value}\r\n                      onChange={hasFormValueChanged}\r\n                      active={false}\r\n                      type=\"datetime-local\"\r\n                      required={false}\r\n                      maxLength={time_now}\r\n                      label=\"Thời gian bắt đầu đăng kí\"\r\n                      placeholder=\"\" />\r\n                  </div>\r\n                  <div className=\"form-group col-md-6\">\r\n                  <DateInput2 id=\"input_registration_expiration_time\"\r\n                    field=\"registration_expiration_time\"\r\n                    value={formState.registration_expiration_time.value}\r\n                    onChange={hasFormValueChanged}\r\n                    active={formState.registration_time.value !== null && formState.registration_time.value !== \"\" ? false: true}\r\n                    type=\"datetime-local\"\r\n                    required={false}\r\n                    maxLength={formState.registration_time.value}\r\n                    label=\"Thời gian hết hạn đăng ký\"\r\n                    placeholder=\"\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col-md-6\">\r\n                  <NumberInput id=\"input_total_date_of_week\"\r\n                      value={formState.total_date_of_week.value}\r\n                      field=\"total_date_of_week\"\r\n                      onChange={hasFormValueChanged}\r\n                      max={3}\r\n                      min={0}\r\n                      label=\"Tổng số ngày học trong tuần\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {\r\n                  Array.from(Array(formState.total_date_of_week.value).keys()).map((value, index) => {\r\n                    return (\r\n                      <div className=\"form-row\" key={index}>\r\n                        <div className=\"form-group col-md-6\">\r\n                          <SelectKeyValueMutiple\r\n                            value={isCreate || index >= lesson_time_list.length  ? 0 : lesson_time_list[index].key}\r\n                            index={index}\r\n                            inputClass={`schedule_item_date_of_week_${index}`}\r\n                            onChange={hasFormMutipleValueChanged1}\r\n                            required={true}\r\n                            label=\"Thứ trong tuần\"\r\n                            options={list_date_of_week}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                          <SelectKeyValueMutiple2\r\n                            value={isCreate || index >= lesson_time_list.length ? 0 : lesson_time_list[index].value}\r\n                            inputClass={`schedule_item_lesson_time_${index}`}\r\n                            index={index}\r\n                            onChange={hasFormMutipleValueChanged2}\r\n                            required={true}\r\n                            label=\"Tiết\"\r\n                            options={list_lessons}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n\r\n                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClassSemesterForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postSchedule } from \"../Schedule/PostSchedule\";\r\nimport { getSemesterClass } from \"./GetSemesterClass\";\r\n\r\nexport function postSemesterClass(data: any, schedule_element: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester-class`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postSemesterClass(data, schedule_element, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data_1 => {\r\n                console.log(data_1)\r\n                toast.update(idx, { render: \"Thêm lớp theo kì thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                schedule_element.map((ele: any) => {\r\n                    return dispatch(postSchedule({\r\n                        lesson_time: ele.lesson_time,\r\n                        date_of_week: ele.date_of_week,\r\n                        semester_classes_id: data_1.id\r\n                    }))\r\n                })\r\n                getSemesterClass(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Thêm lớp theo kì không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getSemesterClass } from \"./GetSemesterClass\";\r\n\r\nexport function putSemesterClass(id: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester-class/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putSemesterClass(id, data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                console.log(id)\r\n                toast.update(idx, { render: \"Chỉnh lớp theo kì thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                getSemesterClass(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Chỉnh lớp theo kì không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/schedule.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postSchedule } from \"./PostSchedule\";\r\n\r\nexport function deleteScheduleBySemesterClass(id: any, schedule_element: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/schedule/semester-class/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteScheduleBySemesterClass(id, schedule_element, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                schedule_element.map((ele: any) => {\r\n                    return dispatch(postSchedule({\r\n                        lesson_time: ele.lesson_time,\r\n                        date_of_week: ele.date_of_week,\r\n                        semester_classes_id: id\r\n                    }))\r\n                })\r\n                toast.update(idx, { render: \"Chỉnh lớp theo kì thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n                toast.update(idx, { render: \"Chỉnh lớp theo kì không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getMyClass } from \"./GetMyClass\";\r\n\r\nexport function postScheduleClass(id: any, data: any, idx: any) {\r\n    console.log(\"post ++\")\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester/schedule-class/${id}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postScheduleClass(id, data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                toast.update(idx, { render: \"Xếp lớp thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                getMyClass(dispatch)\r\n                \r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Xếp lớp không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataSuccess, fetchDataError, removeSemesterAll, initialSemester, addSemester } from \"../../../store/actions/semester.actions\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface semester {\r\n    id: any;\r\n    number: number;\r\n    year: number;\r\n    name: string;\r\n    creator_id: number;\r\n    description: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getSemesterNext(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester/next`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSemesterNext(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeSemesterAll())\r\n                console.log(data.body.semesters)\r\n                data.body.semesters.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.start_time;\r\n                    var strDate_2 = ele.end_time;\r\n                    var semester: semester = {\r\n                        id: ele.id,\r\n                        number: ele.number,\r\n                        year: ele.year,\r\n                        name: ele.name,\r\n                        creator_id: ele.creator_id,\r\n                        description: ele.description,\r\n                        start_time: strDate_1.substring(0, 16),\r\n                        end_time: strDate_2.substring(0, 16),\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time,\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialSemester(semester));\r\n                    }\r\n                    else{\r\n                        return dispatch(addSemester(semester))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, ChangeEvent, Fragment } from \"react\";\r\nimport { SelectNotFieldProps } from \"../types/SelectNotField\";\r\n\r\nfunction SelectKeyValueNotField(props: SelectNotFieldProps): JSX.Element {\r\n    const [touched, setTouch] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [htmlClass, setHtmlClass] = useState(\"\");\r\n    const [value, setValue] = useState(props.value);\r\n\r\n\r\n    function onValueChanged(event: ChangeEvent<HTMLSelectElement>): void {\r\n        let [error, validClass, elementValue] = [\"\", \"\", event.target.value];\r\n\r\n        [error, validClass] = (!elementValue && props.required) ?\r\n            [\"Value has to be selected\", \"is-invalid\"] : [\"\", \"is-valid\"];\r\n\r\n        if (props.inputClass !== \"\"){\r\n            [error, validClass] = [\"\", \"\"];\r\n        }\r\n\r\n        console.log(props.inputClass)\r\n\r\n        console.log(elementValue)\r\n        props.onChange({ value: elementValue, error: error, touched: touched});\r\n\r\n        setTouch(true);\r\n        setError(error);\r\n        setHtmlClass(validClass);\r\n        setValue(elementValue);\r\n    }\r\n\r\n    //console.log(props.options)\r\n\r\n    const getOptions: (JSX.Element | null)[] = props.options.map( (option: any, index:number) => {\r\n        return (\r\n            <option key={index} value={option.value}>{option.name}</option>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <Fragment>\r\n            <label htmlFor={`${props.id}`}>{props.label}</label>\r\n            <select\r\n                value={value}\r\n                id={`${props.id}`}\r\n                className={`form-control ${props.inputClass ? props.inputClass : \"\"} ${htmlClass}`}\r\n                onChange={onValueChanged}>\r\n                <option value= {\"\"}>Choose...</option>\r\n                {getOptions}\r\n            </select>\r\n\r\n            {error ?\r\n                <div className=\"invalid-feedback\">\r\n                    {error}\r\n                </div> : null\r\n            }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default SelectKeyValueNotField;","import React, { Fragment, Dispatch, useEffect, useState } from \"react\";\r\nimport ClassList from \"./ClassList\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./Class.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IMyClassState, IStateType, IRootPageStateType, ISemesterState, ISemesterClassState } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedMyClass,\r\n    changeSelectedMyClass,\r\n    setModificationState,\r\n    removeMyClass\r\n} from \"../../store/actions/my_class.action\";\r\nimport { MyClassModificationStatus, IMyClass } from \"../../store/models/my_class.interface\";\r\nimport { ISemester } from \"../../store/models/semester.interface\";\r\nimport { getMyClass } from \"../../common/service/MyClass/GetMyClass\";\r\nimport DatePicker, { DateObject } from \"react-multi-date-picker\";\r\nimport DatePanel from \"react-multi-date-picker/plugins/date_panel\";\r\nimport { OnChangeModelNotFiled } from \"../../common/types/Form.types\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { ISemesterClass, SemesterClassModificationStatus } from \"../../store/models/semester_class.interface\";\r\nimport { changeSelectedSemesterClass, clearSelectedSemesterClass, removeSemesterClass, setModificationStateSemesterClass } from \"../../store/actions/semester_class.action\"\r\nimport ClassSemesterList from \"./ClassSemesterList\";\r\nimport Popup from \"reactjs-popup\";\r\nimport ClassSemesterForm from \"./ClassSemesterForm\";\r\nimport { deleteSemesterClass } from \"../../common/service/SemesterClass/DeleteSemesterClass\";\r\nimport { getSemesterClass } from \"../../common/service/SemesterClass/GetSemesterClass\";\r\nimport { getSchedule } from \"../../common/service/Schedule/GetSchedule\";\r\nimport { getLesson } from \"../../common/service/Lesson/GetLesson\";\r\nimport { getCourse } from \"../../common/service/Course/GetCourse\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { postScheduleClass } from \"../../common/service/MyClass/PostScheduleClass\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getSemesterNext } from \"../../common/service/semester/GetSemesterNext\";\r\nimport SelectKeyValueNotField from \"../../common/components/SelectKeyValueNotField\";\r\n\r\ntype Options = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\ntype Obj = {\r\n    time: string[]\r\n}\r\nconst format = \"YYYY-MM-DD\";\r\n\r\nconst Class: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const myclasss: IMyClassState = useSelector((state: IStateType) => state.myclasses);\r\n    const semester_classes: ISemesterClassState = useSelector((state: IStateType) => state.semester_classes);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = myclasss.myClasses.length\r\n    const numberSemesterClassesCount: number = semester_classes.semesterClasses.length;\r\n    const [value, setValue] = useState<any>([\r\n        new DateObject().set({ day: 4, format }),\r\n        new DateObject().set({ day: 25, format }),\r\n        new DateObject().set({ day: 20, format })\r\n    ]);\r\n    const [checked1, setChecked1] = useState(true);\r\n    const [checked2, setChecked2] = useState(false);\r\n    const [checked3, setChecked3] = useState(false);\r\n    const [semesterId, setSemesterId] = useState(0);\r\n    const [popup1, setPopup1] = useState(false);\r\n    const [popup2, setPopup2] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedMyClass());\r\n        dispatch(updateCurrentPath(\"Lớp học\", \"Danh sách\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getMyClass(dispatch))\r\n                    trackPromise(getSemesterNext(dispatch))\r\n                    trackPromise(getSemesterClass(dispatch))\r\n                    trackPromise(getSchedule(dispatch))\r\n                    trackPromise(getLesson(dispatch))\r\n                    trackPromise(getCourse(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getMyClass(dispatch))\r\n                trackPromise(getSemesterNext(dispatch))\r\n                trackPromise(getSemesterClass(dispatch))\r\n                trackPromise(getSchedule(dispatch))\r\n                trackPromise(getLesson(dispatch))\r\n                trackPromise(getCourse(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token])\r\n\r\n    const semesters: ISemesterState = useSelector((state: IStateType) => state.semesters);\r\n    const listSemester: ISemester[] = semesters.semesters\r\n    //console.log(listLevel)\r\n    const listSemesters: Options[] = [];\r\n    listSemester.map((ele) => {\r\n        let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n        return listSemesters.push(item)\r\n    })\r\n\r\n    function onMyClassSelect(myclass: IMyClass): void {\r\n        dispatch(changeSelectedMyClass(myclass));\r\n        dispatch(setModificationState(MyClassModificationStatus.None));\r\n    }\r\n\r\n    function onSemesterClassSelect(course: ISemesterClass): void {\r\n        dispatch(changeSelectedSemesterClass(course));\r\n        onSemesterClassRemove()\r\n        dispatch(setModificationStateSemesterClass(SemesterClassModificationStatus.None));\r\n    }\r\n\r\n    function hasFormValueChangedNotFiled(model: OnChangeModelNotFiled): void {\r\n        setSemesterId(model.value);\r\n    }\r\n\r\n    console.log(semesterId)\r\n\r\n    async function handleScheduleClass() {\r\n        let time: String[] = [];\r\n        value.map((ele: any, index: any) => {\r\n            return time.push(ele.toString())\r\n        })\r\n\r\n        const idx = toast.loading(\"Đang xếp lớp. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n    \r\n        dispatch(postScheduleClass(semesterId, { time: time }, idx));\r\n    }\r\n\r\n    function onSemesterClassRemove() {\r\n        setPopup1(true);\r\n    }\r\n\r\n    function onRemovePopup1(value: boolean) {\r\n        setPopup1(false);\r\n    }\r\n\r\n    return (\r\n\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <ToastContainer />\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Lớp học</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ LỚP THEO KÌ\" text={`${numberSemesterClassesCount}`} icon=\"box\" class=\"primary\" />\r\n                <TopCard title=\"SỐ LỚP HỌC\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                                setSearchTerm(event.target.value)\r\n                                console.log(searchTerm)\r\n                            }} />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked1 === false) {\r\n                            setChecked1(true)\r\n                            setChecked2(false)\r\n                            setChecked3(false)\r\n                        }\r\n                    }} style={{\r\n                        color: checked1 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Xếp lớp</h6>\r\n\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked1 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked2 === false) {\r\n                            setChecked2(true)\r\n                            setChecked1(false)\r\n                            setChecked3(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked2 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Lớp theo kì</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked2 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked3 === false) {\r\n                            setChecked3(true)\r\n                            setChecked1(false)\r\n                            setChecked2(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked3 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Lớp học</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked3 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {\r\n                function () {\r\n                    if (checked1 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"mb-4\">\r\n                                            <div className=\"py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\">Xếp lớp</h6>\r\n                                            </div>\r\n                                            <form>\r\n                                                <div className=\"form-row\">\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <SelectKeyValueNotField\r\n                                                            value={semesterId}\r\n                                                            id=\"input_total_page\"\r\n                                                            onChange={hasFormValueChangedNotFiled}\r\n                                                            required={true}\r\n                                                            label=\"Học kì: \"\r\n                                                            options={listSemesters}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <label>Ngày nghỉ: </label>\r\n                                                        <DatePicker\r\n                                                            multiple\r\n                                                            id=\"date-picker-class\"\r\n                                                            value={value}\r\n                                                            onChange={setValue}\r\n                                                            format={format}\r\n                                                            plugins={[\r\n                                                                <DatePanel />\r\n                                                            ]}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                            <button className={`btn btn-success left-margin`} onClick={() => {handleScheduleClass()}}>Xếp lớp</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else if (checked2 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\">Danh sách lớp mở theo kì</h6>\r\n                                                <div className=\"header-buttons\">\r\n                                                    <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                                        dispatch(setModificationStateSemesterClass(SemesterClassModificationStatus.Create))\r\n                                                        onSemesterClassRemove()\r\n                                                    }}>\r\n                                                        <i className=\"fas fa fa-plus\"></i>\r\n                                                        Mở lớp\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ClassSemesterList\r\n                                                    onSelect={onSemesterClassSelect} value={searchTerm}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <Popup\r\n                                    open={popup1}\r\n                                    onClose={() => setPopup1(false)}\r\n                                    closeOnDocumentClick\r\n                                >\r\n                                    <>\r\n                                        {\r\n                                            function () {\r\n                                                if ((semester_classes.modificationState === SemesterClassModificationStatus.Create) || ((semester_classes.selectedSemesterClass) && (semester_classes.modificationState === SemesterClassModificationStatus.Edit))) {\r\n                                                    return <ClassSemesterForm isCheck={onRemovePopup1} />\r\n                                                }\r\n                                            }()\r\n                                        }\r\n                                    </>\r\n                                </Popup>\r\n                                {\r\n                                    function () {\r\n                                        if ((semester_classes.selectedSemesterClass) && (semester_classes.modificationState === SemesterClassModificationStatus.Remove)) {\r\n                                            return (\r\n                                                <Popup\r\n                                                    open={popup1}\r\n                                                    onClose={() => setPopup1(false)}\r\n                                                    closeOnDocumentClick\r\n                                                >\r\n                                                    <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                                        <div className=\"popup-title\">\r\n                                                            Are you sure?\r\n                                                        </div>\r\n                                                        <div className=\"popup-content\">\r\n                                                            <button type=\"button\"\r\n                                                                className=\"btn btn-danger\"\r\n                                                                onClick={() => {\r\n                                                                    if (!semester_classes.selectedSemesterClass) {\r\n                                                                        return;\r\n                                                                    }\r\n                                                                    dispatch(deleteSemesterClass(semester_classes.selectedSemesterClass.id))\r\n                                                                    dispatch(addNotification(\"Độ tuổi \", `${semester_classes.selectedSemesterClass.name} đã được xóa`));\r\n                                                                    dispatch(removeSemesterClass(semester_classes.selectedSemesterClass.id));\r\n                                                                    dispatch(clearSelectedSemesterClass());\r\n                                                                    setPopup1(false);\r\n                                                                }}>Remove\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Popup>\r\n                                            )\r\n                                        }\r\n                                    }()\r\n                                }\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n\r\n                    else if (checked3 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\">Danh sách lớp học</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ClassList\r\n                                                    onSelect={onMyClassSelect} value={searchTerm}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {\r\n                                    function () {\r\n                                        if ((myclasss.selectedMyClass) && (myclasss.modificationState === MyClassModificationStatus.Remove)) {\r\n                                            return (\r\n                                                <Popup\r\n                                                    open={popup2}\r\n                                                    onClose={() => setPopup2(false)}\r\n                                                    closeOnDocumentClick\r\n                                                >\r\n                                                    <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                                        <div className=\"popup-title\">\r\n                                                            Are you sure?\r\n                                                        </div>\r\n                                                        <div className=\"popup-content\">\r\n                                                            <button type=\"button\"\r\n                                                                className=\"btn btn-danger\"\r\n                                                                onClick={() => {\r\n                                                                    if (!myclasss.selectedMyClass) {\r\n                                                                        return;\r\n                                                                    }\r\n                                                                    dispatch(addNotification(\"Trình độ \", `${myclasss.selectedMyClass.name} đã được xóa`));\r\n                                                                    dispatch(removeMyClass(myclasss.selectedMyClass.id));\r\n                                                                    dispatch(clearSelectedMyClass());\r\n                                                                    setPopup2(false);\r\n                                                                }}>Remove\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Popup>\r\n                                            )\r\n                                        }\r\n                                    }()\r\n                                }\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Class;\r\n","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteSemesterClass(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/semester-class/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteSemesterClass(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IProductState, ITimeScheduleState, ISectionState } from \"../../store/models/root.interface\";\r\nimport { IProduct } from \"../../store/models/product.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ISection } from \"../../store/models/section.interface\";\r\n\r\nexport type productListProps = {\r\n  onSelect?: (product: IProduct) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\n\r\nfunction LessonList(props: productListProps): JSX.Element  {\r\n\r\n  const time_schedules: ITimeScheduleState = useSelector((state: IStateType) => state.time_schedules);\r\n  const sections: ISectionState = useSelector((state: IStateType) => state.sections);\r\n  const history = useHistory();\r\n  \r\n  const routeChange = (section: ISection) =>{ \r\n    let path = '/class/lesson'; \r\n    localStorage.setItem('section_id', section.id.toString())\r\n    history.push(path);\r\n  }\r\n\r\n\r\n  let data: string[] = []\r\n    let list_link_record: string[] = []\r\n    let total_time = \"\";\r\n    let check_active: string[] = [];\r\n\r\n    if (time_schedules.timeSchedules.length > 1) {\r\n            if (time_schedules.timeSchedules[0] !== undefined && time_schedules.timeSchedules[0] !== null){\r\n                var start_time_0 = time_schedules.timeSchedules[0].start_time.split(\"T\");\r\n                var end_time_0 = time_schedules.timeSchedules[0].end_time.split(\"T\");\r\n                var hour_start = parseInt(start_time_0[1].substring(0, 2));\r\n                var minus_tart = parseInt(start_time_0[1].substring(3, 5));\r\n                var sercon_start = parseInt(start_time_0[1].substring(6, 8));\r\n                var hour_end = parseInt(end_time_0[1].substring(0, 2));\r\n                var minus_end = parseInt(end_time_0[1].substring(3, 5));\r\n                var sercon_end = parseInt(end_time_0[1].substring(6, 8));\r\n    \r\n                total_time = (hour_end - hour_start).toString() + \" giờ \" + (minus_end - minus_tart).toString() + \" phút \" + (sercon_end - sercon_start).toString() + \" giây\";\r\n                time_schedules.timeSchedules.map((ele, index) => {\r\n                    var start_date = new Date(ele.start_time);\r\n                    var end_date = new Date(ele.end_time);\r\n                    const link = \"https://recording-jitsi-chung.s3.ap-southeast-1.amazonaws.com/recording/\"\r\n                    const class_id = 1;\r\n                    const days = ele.end_time;\r\n                    let str = link + class_id.toString() + \"_\" + days.slice(0,10) + \".mp4\";\r\n                    list_link_record.push(str);\r\n                    // Do your operations\r\n                    var date_now   = new Date();\r\n\r\n                    if (( start_date.getTime() - date_now.getTime()) / 1000 > 86400) {\r\n                        check_active.push('Chưa diễn ra');\r\n                    }\r\n                    else if ((start_date.getTime() - date_now.getTime()) / 1000 < 86400 && (date_now.getTime() - start_date.getTime()) / 1000 < 0) {\r\n                        check_active.push('Chuẩn bị diễn ra');\r\n                    }\r\n                    else if ((date_now.getTime() - start_date.getTime()) / 1000 > 0 && (end_date.getTime() - date_now.getTime()) / 1000 > 0) {\r\n                        check_active.push('Đang diễn ra');\r\n                    }\r\n                    else {\r\n                        check_active.push('Đã diễn ra');\r\n                    }\r\n\r\n                    var start_time = ele.start_time.split(\"T\");\r\n                    var end_time = ele.end_time.split(\"T\");\r\n                    return data.push(\"Từ \" + start_time[0] + \" \" + start_time[1] + \" -> \" + end_time[0] + \" \" + end_time[1])\r\n                })\r\n            }\r\n    }\r\n\r\n    function checkActive(index: number) {\r\n        if (check_active[index] === \"Chưa diễn ra\") {\r\n            return \"not_active_now\";\r\n        }\r\n        else if (check_active[index] === \"Chuẩn bị diễn ra\") {\r\n            return 'pre_active_now';\r\n        }\r\n        else if (check_active[index] === \"Đang diễn ra\") {\r\n            return 'active_now';\r\n        }\r\n        else {\r\n            return \"not_active\";\r\n        }\r\n    }\r\n\r\n\r\n    const productElements = sections.sections.sort((a, b) => a.number - b.number).map((product, index) => {\r\n      if (product === null) return null\r\n      if (checkActive(index) === \"not_active_now\"){\r\n          return (\r\n            <tr className={`table-row`}\r\n              key={`product_${product.id}`}>\r\n              <td>{product.number}</td>\r\n              <td>{product.name}</td>\r\n              <td>{product.teacher_name}</td>\r\n              <td>Chưa diễn ra</td>\r\n              <td>\r\n              </td>\r\n            </tr>\r\n          );\r\n        }\r\n      else if (checkActive(index) === \"pre_active_now\") {\r\n        return (\r\n          <tr className={`table-row`}\r\n            key={`product_${product.id}`}>\r\n            <td>{product.number}</td>\r\n            <td>{product.name}</td>\r\n            <td>{product.teacher_name}</td>\r\n            <td>Chuẩn bị diễn ra</td>\r\n            <td></td>\r\n          </tr>\r\n        );\r\n      }\r\n      else if (checkActive(index) === \"active_now\") {\r\n        return (\r\n          <tr className={`table-row`}\r\n            key={`product_${product.id}`}>\r\n            <td>{product.number}</td>\r\n            <td>{product.name}</td>\r\n            <td>{product.teacher_name}</td>\r\n            <td>Đang diễn ra</td>\r\n            <td></td>\r\n          </tr>\r\n        );\r\n      }\r\n      else {\r\n        return (\r\n          <tr className={`table-row`}\r\n            key={`product_${product.id}`}>\r\n            <td>{product.number}</td>\r\n            <td>{product.name}</td>\r\n            <td>{product.teacher_name}</td>\r\n            <td>Đã diễn ra</td>\r\n            <td>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n              localStorage.setItem('link_recording', list_link_record[index])\r\n              routeChange(product)\r\n              }} >Recording</button>\r\n            </td>\r\n          </tr>\r\n        );\r\n      }\r\n    });\r\n\r\n\r\n  return (\r\n    <div className=\"table-responsive portlet\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">Buổi số</th>\r\n            <th scope=\"col\">Tên buổi học</th>\r\n            <th scope=\"col\">Giáo viên</th>\r\n            <th scope=\"col\">Trạng thái</th>\r\n            <th scope=\"col\">Hành động</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {productElements}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default LessonList;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction StudentList(): JSX.Element  {\r\n\r\n  const students: IUserState = useSelector((state: IStateType) => state.users);\r\n  const history = useHistory();\r\n\r\n  \r\n  const routeChange = () =>{ \r\n    let path = '/class/lesson'; \r\n    history.push(path);\r\n  }\r\n\r\n\r\n  const studentElements: (JSX.Element | null)[] = students.students.map((student, idx) => {\r\n    if (!student) { return null; }\r\n    return (<tr className={`table-row ${(students.selectedUser && students.selectedUser.id === student.id) ? \"selected\" : \"\"}`}\r\n      key={`student_${idx}`} onClick={routeChange}>\r\n      <th scope=\"row\">{idx + 1}</th>\r\n      <td>{student.username}</td>\r\n      <td>{student.dateOfBirth}</td>\r\n      <td>{student.sex}</td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"table-responsive portlet\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Tên</th>\r\n            <th scope=\"col\">Tuổi</th>\r\n            <th scope=\"col\">Giới tính</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {studentElements}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default StudentList;\r\n","import { IInformationClass, InformationClassModificationStatus } from \"../models/information_class.interface\";\r\nexport const ADD_INFORMATION_CLASS: string = \"ADD_INFORMATION_CLASS\";\r\nexport const EDIT_INFORMATION_CLASS: string = \"EDIT_INFORMATION_CLASS\";\r\nexport const REMOVE_INFORMATION_CLASS: string = \"REMOVE_INFORMATION_CLASS\";\r\nexport const CHANGE_INFORMATION_CLASS_AMOUNT: string = \"CHANGE_INFORMATION_CLASS_AMOUNT\";\r\nexport const CHANGE_INFORMATION_CLASS_PENDING_EDIT: string = \"CHANGE_INFORMATION_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_INFORMATION_CLASS_PENDING_EDIT: string = \"CLEAR_INFORMATION_CLASS_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_INFORMATION_CLASS_ALL: string = \"REMOVE_INFORMATION_CLASS_ALL\";\r\nexport const INITIAL_INFORMATION_CLASS: string = \"INITIAL_INFORMATION_CLASS\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(information_class: IInformationClass) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        information_class\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialInformationClass(information_class: IInformationClass): IInitialInformationClassActionType {\r\n    return { type: INITIAL_INFORMATION_CLASS, information_class: information_class };\r\n}\r\n\r\nexport function removeInformationClassAll(): IRemoveInformationClassAllActionType {\r\n    return { type: REMOVE_INFORMATION_CLASS_ALL };\r\n}\r\n\r\nexport function addInformationClass(information_class: IInformationClass): IAddInformationClassActionType {\r\n    return { type: ADD_INFORMATION_CLASS, information_class: information_class };\r\n}\r\n\r\nexport function editInformationClass(information_class: IInformationClass): IEditInformationClassActionType {\r\n    return { type: EDIT_INFORMATION_CLASS, information_class: information_class };\r\n}\r\n\r\nexport function removeInformationClass(id: any): IRemoveInformationClassActionType {\r\n    return { type: REMOVE_INFORMATION_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedInformationClass(information_class: IInformationClass): IChangeSelectedInformationClassActionType {\r\n    return { type: CHANGE_INFORMATION_CLASS_PENDING_EDIT, information_class: information_class };\r\n}\r\n\r\nexport function clearSelectedInformationClass(): IClearSelectedInformationClassActionType {\r\n    return { type: CLEAR_INFORMATION_CLASS_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: InformationClassModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddInformationClassActionType { type: string, information_class: IInformationClass };\r\ninterface IEditInformationClassActionType { type: string, information_class: IInformationClass };\r\ninterface IRemoveInformationClassActionType { type: string, id: any };\r\ninterface IChangeSelectedInformationClassActionType { type: string, information_class: IInformationClass };\r\ninterface IClearSelectedInformationClassActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  InformationClassModificationStatus};\r\ninterface IRemoveInformationClassAllActionType { type: string }\r\ninterface IInitialInformationClassActionType {type: string, information_class: IInformationClass}","import { ITimeSchedule, TimeScheduleModificationStatus } from \"../models/time_schedule.interface\";\r\nexport const ADD_TIME_SCHEDULE: string = \"ADD_TIME_SCHEDULE\";\r\nexport const EDIT_TIME_SCHEDULE: string = \"EDIT_TIME_SCHEDULE\";\r\nexport const REMOVE_TIME_SCHEDULE: string = \"REMOVE_TIME_SCHEDULE\";\r\nexport const CHANGE_TIME_SCHEDULE_AMOUNT: string = \"CHANGE_TIME_SCHEDULE_AMOUNT\";\r\nexport const CHANGE_TIME_SCHEDULE_PENDING_EDIT: string = \"CHANGE_TIME_SCHEDULE_PENDING_EDIT\";\r\nexport const CLEAR_TIME_SCHEDULE_PENDING_EDIT: string = \"CLEAR_TIME_SCHEDULE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_TIME_SCHEDULE_ALL: string = \"REMOVE_TIME_SCHEDULE_ALL\";\r\nexport const INITIAL_TIME_SCHEDULE: string = \"INITIAL_TIME_SCHEDULE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(time_schedule: ITimeSchedule) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        time_schedule\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialTimeSchedule(time_schedule: ITimeSchedule): IInitialTimeScheduleActionType {\r\n    return { type: INITIAL_TIME_SCHEDULE, time_schedule: time_schedule };\r\n}\r\n\r\nexport function removeTimeScheduleAll(): IRemoveTimeScheduleAllActionType {\r\n    return { type: REMOVE_TIME_SCHEDULE_ALL };\r\n}\r\n\r\nexport function addTimeSchedule(time_schedule: ITimeSchedule): IAddTimeScheduleActionType {\r\n    return { type: ADD_TIME_SCHEDULE, time_schedule: time_schedule };\r\n}\r\n\r\nexport function editTimeSchedule(time_schedule: ITimeSchedule): IEditTimeScheduleActionType {\r\n    return { type: EDIT_TIME_SCHEDULE, time_schedule: time_schedule };\r\n}\r\n\r\nexport function removeTimeSchedule(id: any): IRemoveTimeScheduleActionType {\r\n    return { type: REMOVE_TIME_SCHEDULE, id: id };\r\n}\r\n\r\nexport function changeSelectedTimeSchedule(time_schedule: ITimeSchedule): IChangeSelectedTimeScheduleActionType {\r\n    return { type: CHANGE_TIME_SCHEDULE_PENDING_EDIT, time_schedule: time_schedule };\r\n}\r\n\r\nexport function clearSelectedTimeSchedule(): IClearSelectedTimeScheduleActionType {\r\n    return { type: CLEAR_TIME_SCHEDULE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: TimeScheduleModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddTimeScheduleActionType { type: string, time_schedule: ITimeSchedule };\r\ninterface IEditTimeScheduleActionType { type: string, time_schedule: ITimeSchedule };\r\ninterface IRemoveTimeScheduleActionType { type: string, id: any };\r\ninterface IChangeSelectedTimeScheduleActionType { type: string, time_schedule: ITimeSchedule };\r\ninterface IClearSelectedTimeScheduleActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  TimeScheduleModificationStatus};\r\ninterface IRemoveTimeScheduleAllActionType { type: string }\r\ninterface IInitialTimeScheduleActionType {type: string, time_schedule: ITimeSchedule}","import { addInformationClass, removeInformationClassAll } from \"../../../store/actions/information_class.action\";\r\nimport { fetchDataSuccess, fetchDataError } from \"../../../store/actions/my_class.action\";\r\nimport { addTimeSchedule, removeTimeScheduleAll } from \"../../../store/actions/time_schedule.action\";\r\nimport { addStudent, removeStudentAll } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface MyClass {\r\n    id: 0,\r\n    name: string;\r\n    teacher: string;\r\n    security_code: string;\r\n    course: string;\r\n    art_age: string;\r\n    art_type: string;\r\n    art_level: string;\r\n    number_section: number;\r\n    number_student: number;\r\n}\r\n\r\ninterface user {\r\n    id: any,\r\n    username: string,\r\n    email: string,\r\n    password: string,\r\n    status: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    dateOfBirth: string,\r\n    profile_image_url: string,\r\n    sex: string,\r\n    phone: string,\r\n    address: string,\r\n    parents: number,\r\n    createTime: string\r\n}\r\nexport function getInfoMyClass(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/classes/info/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getInfoMyClass(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeStudentAll())\r\n                console.log(data.body.students)\r\n                data.body.students.map((ele: any, index: any) => {\r\n                    var user: user = {\r\n                        id: ele.id,\r\n                        username: ele.username,\r\n                        email: ele.email,\r\n                        status: ele.status,\r\n                        password: \"\",\r\n                        firstName: ele.firstName,\r\n                        lastName: ele.lastName,\r\n                        dateOfBirth: ele.dateOfBirth,\r\n                        profile_image_url: ele.profile_image_url,\r\n                        sex: ele.sex,\r\n                        phone: ele.phone,\r\n                        address: ele.address,\r\n                        parents: ele.parents,\r\n                        createTime: ele.createTime\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addStudent(user))\r\n                })\r\n                console.log(data.body.classes.security_code)\r\n                dispatch(removeInformationClassAll())\r\n                let information_class: MyClass = {\r\n                    id: 0,\r\n                    name: data.body.classes.name,\r\n                    teacher: data.body.teacher.username,\r\n                    security_code: data.body.classes.security_code,\r\n                    course: data.body.course.name,\r\n                    art_age: data.body.art_age.name,\r\n                    art_level: data.body.art_level.name,\r\n                    art_type: data.body.art_type.name,\r\n                    number_section: data.body.course.num_of_section,\r\n                    number_student: data.body.students.length\r\n                }\r\n\r\n                dispatch(removeTimeScheduleAll())\r\n                data.body.lesson_time.map((ele: any, index: any) => {\r\n                    let x = Object.values(ele)\r\n                    return x.map((ele_1: any) => {\r\n                        return ele_1.map((ele_2: any) => {\r\n                            //console.log(ele_2)\r\n                            if (ele_2.length !== 0){\r\n                                dispatch(addTimeSchedule({start_time: ele_2[0], end_time: ele_2[1]}))\r\n                            }\r\n                            return ele_2\r\n                        })\r\n                    })\r\n                })\r\n\r\n                dispatch(addInformationClass(information_class))\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { ISection, SectionModificationStatus } from \"../models/section.interface\";\r\nexport const ADD_SECTION: string = \"ADD_SECTION\";\r\nexport const EDIT_SECTION: string = \"EDIT_SECTION\";\r\nexport const REMOVE_SECTION: string = \"REMOVE_SECTION\";\r\nexport const CHANGE_SECTION_AMOUNT: string = \"CHANGE_SECTION_AMOUNT\";\r\nexport const CHANGE_SECTION_PENDING_EDIT: string = \"CHANGE_SECTION_PENDING_EDIT\";\r\nexport const CLEAR_SECTION_PENDING_EDIT: string = \"CLEAR_SECTION_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SECTION_ALL: string = \"REMOVE_SECTION_ALL\";\r\nexport const INITIAL_SECTION: string = \"INITIAL_SECTION\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(section: ISection) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        section\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSection(section: ISection): IInitialSectionActionType {\r\n    return { type: INITIAL_SECTION, section: section };\r\n}\r\n\r\nexport function removeSectionAll(): IRemoveSectionAllActionType {\r\n    return { type: REMOVE_SECTION_ALL };\r\n}\r\n\r\nexport function addSection(section: ISection): IAddSectionActionType {\r\n    return { type: ADD_SECTION, section: section };\r\n}\r\n\r\nexport function editSection(section: ISection): IEditSectionActionType {\r\n    return { type: EDIT_SECTION, section: section };\r\n}\r\n\r\nexport function removeSection(id: any): IRemoveSectionActionType {\r\n    return { type: REMOVE_SECTION, id: id };\r\n}\r\n\r\nexport function changeSelectedSection(section: ISection): IChangeSelectedSectionActionType {\r\n    return { type: CHANGE_SECTION_PENDING_EDIT, section: section };\r\n}\r\n\r\nexport function clearSelectedSection(): IClearSelectedSectionActionType {\r\n    return { type: CLEAR_SECTION_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateSection(value: SectionModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddSectionActionType { type: string, section: ISection };\r\ninterface IEditSectionActionType { type: string, section: ISection };\r\ninterface IRemoveSectionActionType { type: string, id: any };\r\ninterface IChangeSelectedSectionActionType { type: string, section: ISection };\r\ninterface IClearSelectedSectionActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  SectionModificationStatus};\r\ninterface IRemoveSectionAllActionType { type: string }\r\ninterface IInitialSectionActionType {type: string, section: ISection}","import { fetchDataSuccess, fetchDataError, removeSectionAll, initialSection, addSection } from \"../../../store/actions/section.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface Section {\r\n    id: any;\r\n    class_id: number;\r\n    name: string;\r\n    description: string;\r\n    number: number;\r\n    teacher_name: string;\r\n    teach_form: boolean;\r\n    recording: string;\r\n    message: string;\r\n}\r\nexport function getSectionByClass(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/section/class/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSectionByClass(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeSectionAll())\r\n                console.log(data.body.Section)\r\n                data.body.Section.map((ele: any, index: any) => {\r\n                    var section: Section = {\r\n                        id: ele.id,\r\n                        class_id: ele.class_id,\r\n                        name: ele.name,\r\n                        teacher_name: ele.teacher_name,\r\n                        description: ele.description,\r\n                        number: ele.number,\r\n                        teach_form: ele.teach_form,\r\n                        recording: ele.recording,\r\n                        message: ele.message\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialSection(section));\r\n                    }\r\n                    else{\r\n                        return dispatch(addSection(section))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IStateType, IRootPageStateType, IUserState, IInformationClassState, ISectionState } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedProduct, setModificationState,\r\n    changeSelectedProduct\r\n} from \"../../store/actions/products.action\";\r\nimport { ProductModificationStatus, IProduct } from \"../../store/models/product.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport LessonList from \"./LessonList\";\r\nimport StudentList from \"./StudentList\";\r\nimport { getInfoMyClass } from \"../../common/service/MyClass/GetInfoMyClass\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getSectionByClass } from \"../../common/service/Section/GetSectionByClass\";\r\n\r\n\r\nconst DetailClass: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const sections: ISectionState = useSelector((state: IStateType) => state.sections);\r\n    const students: IUserState = useSelector((state: IStateType) => state.users);\r\n    const information_class: IInformationClassState = useSelector((state: IStateType) => state.information_classes);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = students.students.length;\r\n    const numberItemsCount1: number = sections.sections.length;\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedProduct());\r\n        dispatch(updateCurrentPath(\"Lớp\", \"Lớp CM-1\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    var id_x = localStorage.getItem('class_id')\r\n    let class_id: number = 0;\r\n    if (id_x !== null){\r\n        class_id = parseInt(id_x)\r\n    }\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getInfoMyClass(dispatch, class_id))\r\n                    trackPromise(getSectionByClass(dispatch, class_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getInfoMyClass(dispatch, class_id))\r\n                trackPromise(getSectionByClass(dispatch, class_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, class_id]);\r\n\r\n    function onProductSelect(product: IProduct): void {\r\n        dispatch(changeSelectedProduct(product));\r\n        dispatch(setModificationState(ProductModificationStatus.None));\r\n    }\r\n\r\n    console.log(information_class.informationClasses)\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">{information_class.informationClasses.length > 0 ? information_class.informationClasses[0].name : \"\"}</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ HỌC SINH\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n                <TopCard title=\"SỐ BUỔI\" text={`${numberItemsCount1}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Thông tin chi tiết</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6 \">\r\n                                    <TextInput id=\"input_email\"\r\n                                            value={''}\r\n                                            field=\"name\"\r\n                                            onChange={() => { }}\r\n                                            required={true}\r\n                                            maxLength={20}\r\n                                            label=\"Mã lớp\"\r\n                                            placeholder={information_class.informationClasses.length > 0 ? information_class.informationClasses[0].security_code : \"\"} />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_email\"\r\n                                            value={''}\r\n                                            field=\"name\"\r\n                                            onChange={() => { }}\r\n                                            required={true}\r\n                                            maxLength={20}\r\n                                            label=\"Thuộc khóa học\"\r\n                                            placeholder={information_class.informationClasses.length > 0 ? information_class.informationClasses[0].course : \"\"} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_email\"\r\n                                            value={''}\r\n                                            field=\"name\"\r\n                                            onChange={() => { }}\r\n                                            required={true}\r\n                                            maxLength={20}\r\n                                            label=\"Thể loại\"\r\n                                            placeholder={information_class.informationClasses.length > 0 ? information_class.informationClasses[0].art_type : \"\"} />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_email\"\r\n                                            value={''}\r\n                                            field=\"name\"\r\n                                            onChange={() => { }}\r\n                                            required={true}\r\n                                            maxLength={20}\r\n                                            label=\"Độ tuổi\"\r\n                                            placeholder={information_class.informationClasses.length > 0 ? information_class.informationClasses[0].art_level : \"\"} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_email\"\r\n                                            value={''}\r\n                                            field=\"name\"\r\n                                            onChange={() => { }}\r\n                                            required={true}\r\n                                            maxLength={20}\r\n                                            label=\"Giảng viên\"\r\n                                            placeholder={information_class.informationClasses.length > 0 ? information_class.informationClasses[0].teacher : \"\"} />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_email\"\r\n                                            value={''}\r\n                                            field=\"name\"\r\n                                            onChange={() => { }}\r\n                                            required={true}\r\n                                            maxLength={20}\r\n                                            label=\"Số buổi\"\r\n                                            placeholder={information_class.informationClasses.length > 0 ? information_class.informationClasses[0].number_section.toString() : \"\"} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_email\"\r\n                                            value={''}\r\n                                            field=\"name\"\r\n                                            onChange={() => { }}\r\n                                            required={true}\r\n                                            maxLength={20}\r\n                                            label=\"Số học sinh\"\r\n                                            placeholder={information_class.informationClasses.length > 0 ? information_class.informationClasses[0].number_student.toString() : \"\"} />\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Buổi học đã dạy</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                        <LessonList\r\n                                onSelect={onProductSelect}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Học sinh</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                        <StudentList />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default DetailClass;\r\n","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IProductState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedProduct\r\n} from \"../../store/actions/products.action\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst DetailLesson: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const products: IProductState = useSelector((state: IStateType) => state.products);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = products.products.length;\r\n\r\n    var id_x = localStorage.getItem('link_recording')\r\n    let link_recording = \"\";\r\n    if (id_x !== null) {\r\n        link_recording = id_x\r\n    }\r\n    useEffect(() => {\r\n        dispatch(clearSelectedProduct());\r\n        dispatch(updateCurrentPath(\"Lớp CM-1\", \"Buổi 1\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    var id_y = localStorage.getItem('section_id')\r\n    let section_id = \"\";\r\n    if (id_y !== null) {\r\n        section_id = id_y\r\n    }\r\n\r\n    const history = useHistory();\r\n    const routeChange2 = () => {\r\n        let path = \"/section/view\";\r\n        history.push({\r\n            pathname: path,\r\n            state: { section_id: section_id }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Buổi 1</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ HỌC SINH THAM GIA\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n            <div className=\"row\">\r\n                    \r\n                            <button className={`btn btn-success ml-4 mb-4 mt-4`} onClick={routeChange2}>Xem giáo trình</button>\r\n                </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Video buổi dạy học</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                        <iframe width=\"100%\" height=\"315\" src={link_recording} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default DetailLesson;\r\n","import React from 'react';\r\n\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nexport const options = {\r\n    responsive: true,\r\n    plugins: {\r\n        legend: {\r\n            position: 'top',\r\n        },\r\n        title: {\r\n            display: true,\r\n            text: 'Chart.js Bar Chart',\r\n        },\r\n    },\r\n};\r\n\r\n\r\nexport function ChartBar(props) {\r\n    return <Bar options={options} data={props.data} />;\r\n}","import { fetchDataError, addCompleted, addWaiting, removeCompletedAll, removeWaitingAll} from \"../../../store/actions/user_register_join_semester.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user_register_semester {\r\n    id: any;\r\n    student_id: number;\r\n    payer_id: number;\r\n    payer_name: string;\r\n    course_name: string;\r\n    price: number;\r\n    student_name: string;\r\n    link_url: string;\r\n    status: string;\r\n    semester_class_id: number;\r\n    time: string;\r\n}\r\nexport function getUserRegisterJoinSemester(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-join-semester`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserRegisterJoinSemester(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(removeCompletedAll())\r\n                dispatch(removeWaitingAll())\r\n                console.log(data.body.user_register_semester)\r\n                data.body.user_register_semester.map((ele: any, index: any) => {\r\n                    var user_register_semester: user_register_semester = {\r\n                        id: ele.id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        link_url: ele.link_url,\r\n                        payer_name: ele.payer_name,\r\n                        course_name: ele.course_name,\r\n                        status: ele.status,\r\n                        payer_id: ele.payer_id,\r\n                        price: ele.price,\r\n                        semester_class_id: ele.semester_class_id,\r\n                        time: ele.time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (ele.status === \"Completed\") {\r\n                        dispatch(addCompleted(user_register_semester))\r\n                    }\r\n                    else {\r\n                        dispatch(addWaiting(user_register_semester))\r\n                    }\r\n                    return index\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React from 'react';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nexport function DoughnutPieCharts(props) {\r\n    return <Doughnut data={props.data} />;\r\n}","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, ICourseReportState } from \"../../store/models/root.interface\";\r\nimport { IArtAge } from \"../../store/models/art_age.interface\";\r\nimport { DoughnutPieCharts } from \"../../common/components/DoughnutPieCharts\";\r\n\r\nexport type artAgeListProps = {\r\n    onSelect?: (art_age: IArtAge) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction CourseAnalytis(props: artAgeListProps): JSX.Element {\r\n  const course_reports: ICourseReportState = useSelector((state: IStateType) => state.course_reports); \r\n\r\n  let data_list: number[] = []\r\n  let data_name_list: string[] = []\r\n  if (course_reports.course_reports.length > 0){\r\n    course_reports.course_reports.map(ele => {\r\n          data_list.push(ele.total_register)\r\n          data_name_list.push(ele.name)\r\n          return ele\r\n    })\r\n  }\r\n\r\n    const data = {\r\n        labels: data_name_list,\r\n        datasets: [\r\n          {\r\n            label: '# of Votes',\r\n            data: data_list,\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.2)',\r\n              'rgba(54, 162, 235, 0.2)',\r\n              'rgba(255, 206, 86, 0.2)',\r\n              'rgba(75, 192, 192, 0.2)',\r\n              'rgba(153, 102, 255, 0.2)',\r\n              'rgba(255, 159, 64, 0.2)',\r\n            ],\r\n            borderColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)',\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n\r\n    return (\r\n        <Fragment>\r\n            <DoughnutPieCharts data ={data}/>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default CourseAnalytis;\r\n","import React from 'react';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nexport const options = {\r\n    responsive: true,\r\n    plugins: {\r\n        legend: {\r\n            position: 'top',\r\n        },\r\n        title: {\r\n            display: true,\r\n            text: 'Phân tích',\r\n        },\r\n    },\r\n};\r\n\r\nexport function ChartLine(props) {\r\n    return <Line options={options} data={props.data} />;\r\n}","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IReportUserState } from \"../../store/models/root.interface\";\r\nimport { IArtAge } from \"../../store/models/art_age.interface\";\r\nimport { ChartLine } from \"../../common/components/CharLine\";\r\n\r\nexport type artAgeListProps = {\r\n    onSelect?: (art_age: IArtAge) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction CourseAnalytis(props: artAgeListProps): JSX.Element {\r\n\r\n    const report_users: IReportUserState = useSelector((state: IStateType) => state.report_users); \r\n\r\n    let data_list: number[] = []\r\n    if (report_users.report_users.length > 0){\r\n        report_users.report_users.map(ele => {\r\n            return data_list.push(ele.total)\r\n        })\r\n    }\r\n\r\n    const currentYear = new Date().getFullYear();\r\n\r\n    const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'Septempber', 'October', 'November', 'December'];\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: `Năm ${currentYear}`,\r\n                data: data_list,\r\n                borderColor: 'rgb(53, 162, 235)',\r\n                backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <ChartLine data={data} />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default CourseAnalytis;\r\n","import { ITurnover, TurnoverModificationStatus } from \"../models/turnover.interface\";\r\n\r\n// register_successfull_turnovers\r\nexport const ADD_TURNOVER_NOW: string = \"ADD_TURNOVER_NOW\";\r\nexport const EDIT_TURNOVER_NOW: string = \"EDIT_TURNOVER_NOW\";\r\nexport const REMOVE_TURNOVER_NOW: string = \"REMOVE_TURNOVER_NOW\";\r\nexport const CHANGE_TURNOVER_NOW_AMOUNT: string = \"CHANGE_TURNOVER_NOW_AMOUNT\";\r\nexport const CHANGE_TURNOVER_NOW_PENDING_EDIT: string = \"CHANGE_TURNOVER_NOW_PENDING_EDIT\";\r\nexport const CLEAR_TURNOVER_NOW_PENDING_EDIT: string = \"CLEAR_TURNOVER_NOW_PENDING_EDIT\";\r\nexport const REMOVE_TURNOVER_NOW_ALL: string = \"REMOVE_TURNOVER_NOW_ALL\";\r\nexport const INITIAL_TURNOVER_NOW: string = \"INITIAL_TURNOVER_NOW\";\r\n\r\n// not_register_turnovers\r\nexport const ADD_TURNOVER_LAST: string = \"ADD_TURNOVER_LAST\";\r\nexport const EDIT_TURNOVER_LAST: string = \"EDIT_TURNOVER_LAST\";\r\nexport const REMOVE_TURNOVER_LAST: string = \"REMOVE_TURNOVER_LAST\";\r\nexport const CHANGE_TURNOVER_LAST_AMOUNT: string = \"CHANGE_TURNOVER_LAST_AMOUNT\";\r\nexport const CHANGE_TURNOVER_LAST_PENDING_EDIT: string = \"CHANGE_TURNOVER_LAST_PENDING_EDIT\";\r\nexport const CLEAR_TURNOVER_LAST_PENDING_EDIT: string = \"CLEAR_TURNOVER_LAST_PENDING_EDIT\";\r\nexport const REMOVE_TURNOVER_LAST_ALL: string = \"REMOVE_TURNOVER_LAST_ALL\";\r\nexport const INITIAL_TURNOVER_LAST: string = \"INITIAL_TURNOVER_LAST\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(turnover: ITurnover) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        turnover\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialTurnoverNow(turnover: ITurnover): IInitialTurnoverNowActionType {\r\n    return { type: INITIAL_TURNOVER_NOW, turnover: turnover };\r\n}\r\n\r\nexport function removeTurnoverNowAll(): IRemoveTurnoverNowAllActionType {\r\n    return { type: REMOVE_TURNOVER_NOW_ALL };\r\n}\r\n\r\nexport function addTurnoverNow(turnover: ITurnover): IAddTurnoverNowActionType {\r\n    return { type: ADD_TURNOVER_NOW, turnover: turnover };\r\n}\r\n\r\nexport function editTurnoverNow(turnover: ITurnover): IEditTurnoverNowActionType {\r\n    return { type: EDIT_TURNOVER_NOW, turnover: turnover };\r\n}\r\n\r\nexport function removeTurnoverNow(id: any): IRemoveTurnoverNowActionType {\r\n    return { type: REMOVE_TURNOVER_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedTurnoverNow(turnover: ITurnover): IChangeSelectedTurnoverNowActionType {\r\n    return { type: CHANGE_TURNOVER_NOW_PENDING_EDIT, turnover: turnover };\r\n}\r\n\r\nexport function clearSelectedTurnoverNow(): IClearSelectedTurnoverNowActionType {\r\n    return { type: CLEAR_TURNOVER_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialTurnoverLast(turnover: ITurnover): IInitialTurnoverLastActionType {\r\n    return { type: INITIAL_TURNOVER_LAST, turnover: turnover };\r\n}\r\n\r\nexport function removeTurnoverLastAll(): IRemoveTurnoverLastAllActionType {\r\n    return { type: REMOVE_TURNOVER_LAST_ALL };\r\n}\r\n\r\nexport function addTurnoverLast(turnover: ITurnover): IAddTurnoverLastActionType {\r\n    return { type: ADD_TURNOVER_LAST, turnover: turnover };\r\n}\r\n\r\nexport function editTurnoverLast(turnover: ITurnover): IEditTurnoverLastActionType {\r\n    return { type: EDIT_TURNOVER_LAST, turnover: turnover };\r\n}\r\n\r\nexport function removeTurnoverLast(id: any): IRemoveTurnoverLastActionType {\r\n    return { type: REMOVE_TURNOVER_LAST, id: id };\r\n}\r\n\r\nexport function changeSelectedTurnoverLast(turnover: ITurnover): IChangeSelectedTurnoverLastActionType {\r\n    return { type: CHANGE_TURNOVER_LAST_PENDING_EDIT, turnover: turnover };\r\n}\r\n\r\nexport function clearSelectedTurnoverLast(): IClearSelectedTurnoverLastActionType {\r\n    return { type: CLEAR_TURNOVER_LAST_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: TurnoverModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_turnovers\r\ninterface IAddTurnoverNowActionType { type: string, turnover: ITurnover };\r\ninterface IEditTurnoverNowActionType { type: string, turnover: ITurnover };\r\ninterface IRemoveTurnoverNowActionType { type: string, id: any };\r\ninterface IChangeSelectedTurnoverNowActionType { type: string, turnover: ITurnover };\r\ninterface IClearSelectedTurnoverNowActionType { type: string };\r\ninterface IRemoveTurnoverNowAllActionType { type: string }\r\ninterface IInitialTurnoverNowActionType {type: string, turnover: ITurnover}\r\n\r\n// not_register_turnovers\r\ninterface IAddTurnoverLastActionType { type: string, turnover: ITurnover };\r\ninterface IEditTurnoverLastActionType { type: string, turnover: ITurnover };\r\ninterface IRemoveTurnoverLastActionType { type: string, id: any };\r\ninterface IChangeSelectedTurnoverLastActionType { type: string, turnover: ITurnover };\r\ninterface IClearSelectedTurnoverLastActionType { type: string };\r\ninterface IRemoveTurnoverLastAllActionType { type: string }\r\ninterface IInitialTurnoverLastActionType {type: string, turnover: ITurnover}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  TurnoverModificationStatus};","import { fetchDataSuccess, fetchDataError, addTurnoverNow, addTurnoverLast, removeTurnoverNowAll, removeTurnoverLastAll} from \"../../../store/actions/turnover.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface TurnOver {\r\n    turnover: number;\r\n}\r\nexport function getTurnOverReport(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    const currentYear = new Date().getFullYear();\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-join-semester/report/${currentYear}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTurnOverReport(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeTurnoverNowAll())\r\n                console.log(data.body.report_user_register_semester_now)\r\n                data.body.report_user_register_semester_now.map((ele: any, index: any) => {\r\n                    var turnover: TurnOver = {\r\n                        turnover: ele\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addTurnoverNow(turnover))\r\n                })\r\n\r\n                dispatch(removeTurnoverLastAll())\r\n                console.log(data.body.report_user_register_semester_last)\r\n                data.body.report_user_register_semester_last.map((ele: any, index: any) => {\r\n                    var turnover: TurnOver = {\r\n                        turnover: ele\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addTurnoverLast(turnover))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { IReportUser, ReportUserModificationStatus } from \"../models/report_user.interface\";\r\nexport const ADD_REPORT_USER: string = \"ADD_REPORT_USER\";\r\nexport const EDIT_REPORT_USER: string = \"EDIT_REPORT_USER\";\r\nexport const REMOVE_REPORT_USER: string = \"REMOVE_REPORT_USER\";\r\nexport const CHANGE_REPORT_USER_AMOUNT: string = \"CHANGE_REPORT_USER_AMOUNT\";\r\nexport const CHANGE_REPORT_USER_PENDING_EDIT: string = \"CHANGE_REPORT_USER_PENDING_EDIT\";\r\nexport const CLEAR_REPORT_USER_PENDING_EDIT: string = \"CLEAR_REPORT_USER_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_REPORT_USER_ALL: string = \"REMOVE_REPORT_USER_ALL\";\r\nexport const INITIAL_REPORT_USER: string = \"INITIAL_REPORT_USER\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(report_user: IReportUser) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        report_user\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialReportUser(report_user: IReportUser): IInitialReportUserActionType {\r\n    return { type: INITIAL_REPORT_USER, report_user: report_user };\r\n}\r\n\r\nexport function removeReportUserAll(): IRemoveReportUserAllActionType {\r\n    return { type: REMOVE_REPORT_USER_ALL };\r\n}\r\n\r\nexport function addReportUser(report_user: IReportUser): IAddReportUserActionType {\r\n    return { type: ADD_REPORT_USER, report_user: report_user };\r\n}\r\n\r\nexport function editReportUser(report_user: IReportUser): IEditReportUserActionType {\r\n    return { type: EDIT_REPORT_USER, report_user: report_user };\r\n}\r\n\r\nexport function removeReportUser(id: any): IRemoveReportUserActionType {\r\n    return { type: REMOVE_REPORT_USER, id: id };\r\n}\r\n\r\nexport function changeSelectedReportUser(report_user: IReportUser): IChangeSelectedReportUserActionType {\r\n    return { type: CHANGE_REPORT_USER_PENDING_EDIT, report_user: report_user };\r\n}\r\n\r\nexport function clearSelectedReportUser(): IClearSelectedReportUserActionType {\r\n    return { type: CLEAR_REPORT_USER_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ReportUserModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddReportUserActionType { type: string, report_user: IReportUser };\r\ninterface IEditReportUserActionType { type: string, report_user: IReportUser };\r\ninterface IRemoveReportUserActionType { type: string, id: any };\r\ninterface IChangeSelectedReportUserActionType { type: string, report_user: IReportUser };\r\ninterface IClearSelectedReportUserActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ReportUserModificationStatus};\r\ninterface IRemoveReportUserAllActionType { type: string }\r\ninterface IInitialReportUserActionType {type: string, report_user: IReportUser}","import { fetchDataError, removeReportUserAll, addReportUser } from \"../../../store/actions/report_user.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ReportUser {\r\n    total: number\r\n}\r\nexport function getReportUser(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    const currentYear = new Date().getFullYear();\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/report/${currentYear}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getReportUser(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(removeReportUserAll())\r\n                console.log(data.body.report_user)\r\n                data.body.report_user.map((ele: any, index: any) => {\r\n                    var report: ReportUser = {\r\n                        total: ele\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addReportUser(report))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { ICourseReport, CourseReportModificationStatus } from \"../models/course_report.interface\";\r\nexport const ADD_COURSE_REPORT: string = \"ADD_COURSE_REPORT\";\r\nexport const EDIT_COURSE_REPORT: string = \"EDIT_COURSE_REPORT\";\r\nexport const REMOVE_COURSE_REPORT: string = \"REMOVE_COURSE_REPORT\";\r\nexport const CHANGE_COURSE_REPORT_AMOUNT: string = \"CHANGE_COURSE_REPORT_AMOUNT\";\r\nexport const CHANGE_COURSE_REPORT_PENDING_EDIT: string = \"CHANGE_COURSE_REPORT_PENDING_EDIT\";\r\nexport const CLEAR_COURSE_REPORT_PENDING_EDIT: string = \"CLEAR_COURSE_REPORT_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_COURSE_REPORT_ALL: string = \"REMOVE_COURSE_REPORT_ALL\";\r\nexport const INITIAL_COURSE_REPORT: string = \"INITIAL_COURSE_REPORT\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course_report: ICourseReport) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course_report\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCourseReport(course_report: ICourseReport): IInitialCourseReportActionType {\r\n    return { type: INITIAL_COURSE_REPORT, course_report: course_report };\r\n}\r\n\r\nexport function removeCourseReportAll(): IRemoveCourseReportAllActionType {\r\n    return { type: REMOVE_COURSE_REPORT_ALL };\r\n}\r\n\r\nexport function addCourseReport(course_report: ICourseReport): IAddCourseReportActionType {\r\n    return { type: ADD_COURSE_REPORT, course_report: course_report };\r\n}\r\n\r\nexport function editCourseReport(course_report: ICourseReport): IEditCourseReportActionType {\r\n    return { type: EDIT_COURSE_REPORT, course_report: course_report };\r\n}\r\n\r\nexport function removeCourseReport(id: any): IRemoveCourseReportActionType {\r\n    return { type: REMOVE_COURSE_REPORT, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseReport(course_report: ICourseReport): IChangeSelectedCourseReportActionType {\r\n    return { type: CHANGE_COURSE_REPORT_PENDING_EDIT, course_report: course_report };\r\n}\r\n\r\nexport function clearSelectedCourseReport(): IClearSelectedCourseReportActionType {\r\n    return { type: CLEAR_COURSE_REPORT_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseReportModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddCourseReportActionType { type: string, course_report: ICourseReport };\r\ninterface IEditCourseReportActionType { type: string, course_report: ICourseReport };\r\ninterface IRemoveCourseReportActionType { type: string, id: any };\r\ninterface IChangeSelectedCourseReportActionType { type: string, course_report: ICourseReport };\r\ninterface IClearSelectedCourseReportActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  CourseReportModificationStatus};\r\ninterface IRemoveCourseReportAllActionType { type: string }\r\ninterface IInitialCourseReportActionType {type: string, course_report: ICourseReport}","import { fetchDataError, removeCourseReportAll, addCourseReport } from \"../../../store/actions/course_report.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface CourseReport {\r\n    total_register: number;\r\n    name: string;\r\n}\r\nexport function getCourseReport(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/course/report`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getCourseReport(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(removeCourseReportAll())\r\n                console.log(data.body.report_course)\r\n                data.body.report_course.map((ele: any, index: any) => {\r\n                    var report: CourseReport = {\r\n                        total_register: ele.total_register,\r\n                        name: ele.name\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addCourseReport(report))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\nfunction TurnoverList() {\r\n\r\n    const dispatch = useDispatch();\r\n    const userRegisterJoinSemesters = useSelector((state) => state.user_register_join_semesters);\r\n\r\n\r\n  const datas = userRegisterJoinSemesters.completed;\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n  function showStartTime(cell, row) {\r\n    var strDate = row.time;\r\n    return (\r\n        <span>{strDate.substring(0, 10) + \" \" + strDate.substring(11,19)}</span>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'payer_name',\r\n      text: 'Phụ huynh',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'student_name',\r\n      text: 'Học sinh',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n        dataField: 'course_name',\r\n        text: 'Khóa học',\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: 'price',\r\n        text: 'Số tiền',\r\n        filter: textFilter()\r\n      },\r\n    {\r\n      dataField: 'time',\r\n      text: 'Thời gian',\r\n      formatter: showStartTime\r\n    },\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default TurnoverList;\r\n","import React, { Fragment, Dispatch, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport { IStateType, ITurnoverState, IReportUserState, ICourseReportState } from \"../../store/models/root.interface\";\r\nimport { ChartBar } from \"../../common/components/ChartBar\";\r\nimport { getUserRegisterJoinSemester } from \"../../common/service/UserRegisterJoinSemester/GetUserRegisterJoinSemester\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport CourseAnalytis from \"./CourseAnalytis\";\r\nimport UserAnalytis from \"./UserAnalytis\";\r\nimport { getTurnOverReport } from \"../../common/service/TurnOver/GetTurnoverReport\";\r\nimport { getReportUser } from \"../../common/service/ReportUser/GetUserReport\";\r\nimport { getCourseReport } from \"../../common/service/CourseReport/GetCourseReport\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport TurnoverList from \"./TurnoverList\";\r\n\r\nconst Turnover: React.FC = () => {\r\n  const turnovers: ITurnoverState = useSelector((state: IStateType) => state.turnovers);\r\n  const report_users: IReportUserState = useSelector((state: IStateType) => state.report_users); \r\n  const course_reports: ICourseReportState = useSelector((state: IStateType) => state.course_reports); \r\n\r\n  const totalPrice: number = turnovers.turnover_now.reduce((prev, next) => prev + ((next.turnover) || 0), 0);\r\n  const totalUserNew: number = report_users.report_users.reduce((prev, next) => prev + ((next.total) || 0), 0);\r\n  const totalCourse: number = course_reports.course_reports.reduce((prev, next) => prev + ((next.total_register) || 0), 0);\r\n  \r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  dispatch(updateCurrentPath(\"Doanh thu\", \"\"));\r\n\r\n  const [checked1, setChecked1] = useState(true);\r\n  const [checked2, setChecked2] = useState(false);\r\n  const [checked3, setChecked3] = useState(false);\r\n\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n  let access_token = localStorage.getItem(\"access_token\");\r\n  let refresh_token = localStorage.getItem(\"refresh_token\");\r\n  useEffect(() => {\r\n    if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n      let access_token_decode: any = jwt_decode(access_token)\r\n      let refresh_token_decode: any = jwt_decode(refresh_token)\r\n      let exp_access_token_decode = access_token_decode.exp;\r\n      let exp_refresh_token_decode = refresh_token_decode.exp;\r\n      let now_time = Date.now() / 1000;\r\n      console.log(exp_access_token_decode)\r\n      console.log(now_time)\r\n      if (exp_access_token_decode < now_time) {\r\n        if (exp_refresh_token_decode < now_time) {\r\n          localStorage.removeItem('access_token') // Authorization\r\n          localStorage.removeItem('refresh_token')\r\n          localStorage.removeItem('username')\r\n          localStorage.removeItem('role_privilege')\r\n          localStorage.removeItem('id')\r\n          localStorage.removeItem('contest_id')\r\n          localStorage.removeItem('schedule_id')\r\n          dispatch(logout())\r\n        }\r\n        else {\r\n          trackPromise(getUserRegisterJoinSemester(dispatch))\r\n          trackPromise(getTurnOverReport(dispatch))\r\n          trackPromise(getReportUser(dispatch))\r\n          trackPromise(getCourseReport(dispatch))\r\n        }\r\n      }\r\n      else {\r\n          trackPromise(getUserRegisterJoinSemester(dispatch))\r\n          trackPromise(getTurnOverReport(dispatch))\r\n          trackPromise(getReportUser(dispatch))\r\n          trackPromise(getCourseReport(dispatch))\r\n      }\r\n    }\r\n  }, [dispatch, access_token, refresh_token])\r\n\r\n  const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'Septempber', 'October', 'November', 'December'];\r\n\r\n  let now_data: number[] = [];\r\n  let last_data: number[] = [];\r\n  if (turnovers.turnover_now.length > 0 && turnovers.turnover_last.length > 0){\r\n    turnovers.turnover_now.map(ele => {\r\n      return now_data.push(ele.turnover)\r\n    })\r\n\r\n    turnovers.turnover_last.map(ele => {\r\n      return last_data.push(ele.turnover)\r\n    })\r\n  }\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  console.log(turnovers)\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: `Năm ${currentYear-1}`,\r\n        data: last_data,\r\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n      },\r\n      {\r\n        label: `Năm ${currentYear}`,\r\n        data: now_data,\r\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n      },\r\n    ],\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n      <h1 className=\"h3 mb-2 text-gray-800\">Phân tích</h1>\r\n      {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n      <div className=\"row\">\r\n        <TopCard title=\"DOANH THU\" text={`$${totalPrice}`} icon=\"dollar-sign\" class=\"success\" />\r\n        <TopCard title=\"KHÓA HỌC\" text={`${totalCourse}`} icon=\"warehouse\" class=\"success\" />\r\n        <TopCard title=\"NGƯỜI DÙNG MỚI\" text={`${totalUserNew}`} icon=\"user\" class=\"success\" />\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n          <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n            if (checked1 === false) {\r\n              setChecked1(true)\r\n              setChecked2(false)\r\n              setChecked3(false)\r\n            }\r\n          }} style={{\r\n            color: checked1 ? \"#F24E1E\" : \"#2F4F4F\"\r\n          }}>Doanh thu</h6>\r\n\r\n          <div style={{\r\n            height: \"5px\",\r\n            textAlign: \"center\",\r\n            margin: \"auto\",\r\n            width: \"30%\",\r\n            backgroundColor: checked1 ? \"#F24E1E\" : \"#ffffff\"\r\n          }}></div>\r\n        </div>\r\n        <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n          <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n            if (checked2 === false) {\r\n              setChecked2(true)\r\n              setChecked1(false)\r\n              setChecked3(false)\r\n            }\r\n          }}\r\n            style={{\r\n              color: checked2 ? \"#F24E1E\" : \"#2F4F4F\"\r\n            }}>Khóa học</h6>\r\n          <div style={{\r\n            height: \"5px\",\r\n            textAlign: \"center\",\r\n            margin: \"auto\",\r\n            width: \"30%\",\r\n            backgroundColor: checked2 ? \"#F24E1E\" : \"#ffffff\"\r\n          }}></div>\r\n        </div>\r\n\r\n        <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n          <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n            if (checked3 === false) {\r\n              setChecked3(true)\r\n              setChecked1(false)\r\n              setChecked2(false)\r\n            }\r\n          }}\r\n            style={{\r\n              color: checked3 ? \"#F24E1E\" : \"#2F4F4F\"\r\n            }}>Người dùng</h6>\r\n          <div style={{\r\n            height: \"5px\",\r\n            textAlign: \"center\",\r\n            margin: \"auto\",\r\n            width: \"30%\",\r\n            backgroundColor: checked3 ? \"#F24E1E\" : \"#ffffff\"\r\n          }}></div>\r\n        </div>\r\n      </div>\r\n\r\n      {\r\n        function () {\r\n          if (checked1 === true) {\r\n            return (\r\n              <Fragment>\r\n                <div className=\"row\">\r\n                  <div className=\"col-xl-12 col-lg-12\">\r\n                    <ChartBar data={data} />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n\r\n                  <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                      <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\">Danh sách giao dịch</h6>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <TurnoverList />\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n              </Fragment>\r\n            )\r\n          }\r\n          else if (checked2 === true) {\r\n            return (\r\n              <Fragment>\r\n                <div className=\"row\">\r\n\r\n                  <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                      <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\">Phân tích khóa học</h6>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <CourseAnalytis />\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n              </Fragment>\r\n            )\r\n          }\r\n          else {\r\n            return (\r\n              <Fragment>\r\n                <div className=\"row\">\r\n\r\n                  <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                      <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\">Phân tích giáo viên</h6>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <UserAnalytis />\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n              </Fragment>\r\n            )\r\n          }\r\n        }()\r\n      }\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Turnover;\r\n","import { ITeacherLeave } from \"../models/teacher_leave.interface\";\r\n\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport const REMOVE_REMOVE_LEAVE_ALL: string = \"REMOVE_REMOVE_LEAVE_ALL\";\r\nexport const INITIAL_REMOVE_LEAVE: string = \"INITIAL_REMOVE_LEAVE\";\r\nexport const ADD_REMOVE_LEAVE: string = \"ADD_REMOVE_LEAVE\";\r\nexport const REMOVE_REMOVE_LEAVE: string = \"REMOVE_REMOVE_LEAVE\";\r\nexport const EDIT_REMOVE_LEAVE: string = \"EDIT_REMOVE_LEAVE\";\r\n\r\n\r\nexport const REMOVE_LEAVES_ALL: string = \"REMOVE_LEAVES_ALL\";\r\nexport const INITIAL_LEAVES: string = \"INITIAL_LEAVES\";\r\nexport const ADD_LEAVES: string = \"ADD_LEAVES\";\r\nexport const EDIT_LEAVES: string = \"EDIT_LEAVES\";\r\nexport const REMOVE_LEAVES: string = \"REMOVE_LEAVES\";\r\n\r\nexport const REMOVE_ACCEPT_LEAVE_ALL: string = \"REMOVE_ACCEPT_LEAVE_ALL\";\r\nexport const INITIAL_ACCEPT_LEAVE: string = \"INITIAL_ACCEPT_LEAVE\";\r\nexport const ADD_ACCEPT_LEAVE: string = \"ADD_ACCEPT_LEAVE\";\r\nexport const EDIT_ACCEPT_LEAVE: string = \"EDIT_ACCEPT_LEAVE\";\r\nexport const REMOVE_ACCEPT_LEAVE: string = \"REMOVE_ACCEPT_LEAVE\";\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const CHANGE_USER_PENDING_EDIT: string = \"CHANGE_USER_PENDING_EDIT\";\r\nexport const CLEAR_USER_PENDING_EDIT: string = \"CLEAR_USER_PENDING_EDIT\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(teacherLeave: ITeacherLeave) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        teacherLeave\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialRemoveTeacherLeave(teacher_leave: ITeacherLeave): IInitialRemoveTeacherLeaveActionType {\r\n    return { type: INITIAL_REMOVE_LEAVE, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function removeRemoveTeacherLeaveAll(): IRemoveRemoveTeacherLeaveAllActionType {\r\n    return { type: REMOVE_REMOVE_LEAVE_ALL };\r\n}\r\n\r\nexport function addRemoveTeacherLeave(teacher_leave: ITeacherLeave): IAddRemoveTeacherLeaveActionType {\r\n    return { type: ADD_REMOVE_LEAVE, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function editRemoveTeacherLeave(teacher_leave: ITeacherLeave): IEditRemoveTeacherLeaveActionType {\r\n    return { type: EDIT_REMOVE_LEAVE, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function removeRemoveTeacherLeave(id: any): IRemoveRemoveTeacherLeaveActionType {\r\n    return { type: REMOVE_REMOVE_LEAVE, id: id };\r\n}\r\n\r\n\r\nexport function initialAcceptTeacherLeave(teacher_leave: ITeacherLeave): IInitialAcceptTeacherLeaveActionType {\r\n    return { type: INITIAL_ACCEPT_LEAVE, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function removeAcceptTeacherLeaveAll(): IRemoveAcceptTeacherLeaveAllActionType {\r\n    return { type: REMOVE_ACCEPT_LEAVE_ALL };\r\n}\r\n\r\nexport function addAcceptTeacherLeave(teacher_leave: ITeacherLeave): IAddAcceptTeacherLeaveActionType {\r\n    return { type: ADD_ACCEPT_LEAVE, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function editAcceptTeacherLeave(teacher_leave: ITeacherLeave): IEditAcceptTeacherLeaveActionType {\r\n    return { type: EDIT_ACCEPT_LEAVE, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function removeAcceptTeacherLeave(id: any): IRemoveAcceptTeacherLeaveActionType {\r\n    return { type: REMOVE_ACCEPT_LEAVE, id: id };\r\n}\r\n\r\n\r\nexport function initialLeaves(teacher_leave: ITeacherLeave): IInitialLeavesActionType {\r\n    return { type: INITIAL_LEAVES, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function removeLeavesAll(): IRemoveLeavesAllActionType {\r\n    return { type: REMOVE_LEAVES_ALL };\r\n}\r\n\r\nexport function addLeaves(teacher_leave: ITeacherLeave): IAddLeavesActionType {\r\n    return { type: ADD_LEAVES, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function editLeaves(teacher_leave: ITeacherLeave): IEditLeavesActionType {\r\n    return { type: EDIT_LEAVES, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function removeLeaves(id: any): IRemoveLeavesActionType {\r\n    return { type: REMOVE_LEAVES, id: id };\r\n}\r\n\r\ninterface IInitialLeavesActionType {type: string, teacher_leave: ITeacherLeave};\r\ninterface IRemoveLeavesAllActionType { type: string };\r\ninterface IAddLeavesActionType { type: string, teacher_leave: ITeacherLeave };\r\ninterface IEditLeavesActionType { type: string, teacher_leave: ITeacherLeave };\r\ninterface IRemoveLeavesActionType { type: string, id: any };\r\n\r\ninterface IInitialAcceptTeacherLeaveActionType {type: string, teacher_leave: ITeacherLeave};\r\ninterface IRemoveAcceptTeacherLeaveAllActionType { type: string };\r\ninterface IAddAcceptTeacherLeaveActionType { type: string, teacher_leave: ITeacherLeave };\r\ninterface IEditAcceptTeacherLeaveActionType { type: string, teacher_leave: ITeacherLeave };\r\ninterface IRemoveAcceptTeacherLeaveActionType { type: string, id: any };\r\n\r\ninterface IInitialRemoveTeacherLeaveActionType {type: string, teacher_leave: ITeacherLeave};\r\ninterface IRemoveRemoveTeacherLeaveAllActionType { type: string };\r\ninterface IAddRemoveTeacherLeaveActionType { type: string, teacher_leave: ITeacherLeave };\r\ninterface IEditRemoveTeacherLeaveActionType { type: string, teacher_leave: ITeacherLeave };\r\ninterface IRemoveRemoveTeacherLeaveActionType { type: string, id: any };","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/art_age.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postUserReadNotification } from \"../UserReadNotification/PostUserReadNotification\";\r\n\r\nexport function postNotifyDb(data: any, user_id: number) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/notification-database`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Authorization': bearer,\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                'Access-Control-Allow-Credentials': 'true'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }\r\n        )\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postNotifyDb(data, user_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then(xx => {\r\n                console.log(xx)\r\n                dispatch(postUserReadNotification({\r\n                    notification_id: xx.id,\r\n                    user_id: user_id,\r\n                    is_read: false\r\n                }))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester.actions\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getUserReadNotification } from \"./GetUserReadNotificationByUser\";\r\n\r\nexport function postUserReadNotification(data: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-read-notification`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postUserReadNotification(data))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (xx => {\r\n                console.log(xx)\r\n                dispatch(getUserReadNotification(data.user_id))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/teacher_leave.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postNotifyDb } from \"../NotifyDb/PostNotifyDb\";\r\n\r\nexport function putTeacherLeaveStatus(id: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/teacher-leave/admin/${id}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putTeacherLeaveStatus(id, data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                if (data.status === \"Approved\"){\r\n                    dispatch(postNotifyDb({\r\n                        name: `Xác nhận yêu cầu nghỉ dạy buổi học ${val.section_number} lớp ${val.class_name}!`,\r\n                        description: `Quản trị viên đã chấp nhận yêu cầu nghỉ dạy của bạn buổi ${val.section_number} lớp ${val.class_name}!`\r\n                    }, data.teacher_id))\r\n                }\r\n                else {\r\n                    dispatch(postNotifyDb({\r\n                        name: `Không xác nhận yêu cầu nghỉ dạy buổi học ${val.section_number} lớp ${val.class_name}!`,\r\n                        description: `Quản trị viên đã không chấp nhận yêu cầu nghỉ dạy của bạn buổi ${val.section_number} lớp ${val.class_name}!`\r\n                    }, data.teacher_id))\r\n                }\r\n                \r\n                toast.update(idx, { render: \"Yêu cầu thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            });\r\n    };\r\n}","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { putTeacherLeaveStatus } from \"../../common/service/TeacherLeave/PutTeacherLeave\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction TeacherRequestList(props) {\r\n\r\n    const teacher_leaves = useSelector((state) => state.teacher_leaves);\r\n    const dispatch = useDispatch();\r\n    dispatch(updateCurrentPath(\"Yêu cầu nghỉ dạy\", \"\"));\r\n    const history = useHistory();\r\n    const routeChange1 = (teacher_leave) => {\r\n      localStorage.removeItem('resson_off_teacher')\r\n      localStorage.setItem('resson_off_teacher', teacher_leave.description)\r\n      let path = '/teacher-request/detail';\r\n      history.push({\r\n          pathname: path,\r\n      });\r\n    }\r\n  \r\n    const handleTeacherLeave = (teacher_leave, status) => {\r\n      const id = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n        position: toast.POSITION.TOP_CENTER\r\n      });\r\n      dispatch(putTeacherLeaveStatus(teacher_leave.id, {\r\n        status: status\r\n      }, id))\r\n    }\r\n\r\n\r\n  const datas = teacher_leaves.leaves;\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n  function removeButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() => {handleTeacherLeave(row, \"Not approved\")}}>Xóa</button>\r\n    );\r\n  }\r\n\r\n  function editButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => {handleTeacherLeave(row, \"Approved\")}}>Chấp nhận</button>\r\n    )\r\n  }\r\n\r\n  function viewButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => {routeChange1(row)}}>Xem chi tiết</button>\r\n    )\r\n  }\r\n\r\n  function showStartTime(cell, row) {\r\n    var strDate = row.create_time;\r\n    return (\r\n        <span>{strDate.substring(0, 10) + \" \" + strDate.substring(11,19)}</span>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'teacher_name',\r\n      text: 'Giáo viên',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'class_name',\r\n      text: 'Lớp',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n        dataField: 'section_name',\r\n        text: 'Buổi',\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: 'create_time',\r\n        text: 'Thời gian',\r\n        formatter: showStartTime,\r\n      },\r\n      {\r\n        dataField: 'substitute_teacher_name',\r\n        text: 'Giáo viên dạy thay',\r\n        filter: textFilter()\r\n      },\r\n\r\n    {\r\n      dataField: '',\r\n      text: 'Hành động',\r\n      formatter: viewButton\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: '',\r\n      formatter: editButton\r\n    },\r\n    {\r\n      dataField: 'address',\r\n      text: '',\r\n      formatter: removeButton\r\n    },\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default TeacherRequestList;\r\n","import { fetchDataSuccess, fetchDataError, removeAcceptTeacherLeaveAll, addAcceptTeacherLeave, removeRemoveTeacherLeaveAll, addRemoveTeacherLeave, addLeaves, removeLeavesAll } from \"../../../store/actions/teacher_leave.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface TeacherLeave {\r\n    id: any;\r\n    section_id: number;\r\n    section_name: string;\r\n    class_id: number;\r\n    class_name: string;\r\n    teacher_id: number;\r\n    teacher_name: string;\r\n    section_number: number;\r\n    reviewer_id: number;\r\n    substitute_teacher_id: number;\r\n    substitute_teacher_name: string;\r\n    description: string;\r\n    status: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getTeacherLeave(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/teacher-leave`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTeacherLeave(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeAcceptTeacherLeaveAll())\r\n                dispatch(removeRemoveTeacherLeaveAll())\r\n                dispatch(removeLeavesAll())\r\n                //console.log(data.body.teacher_leaves)\r\n                data.body.teacher_leave.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var teacher_leave: TeacherLeave = {\r\n                        id: ele.id,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        class_id: ele.class_id,\r\n                        class_name: ele.class_name,\r\n                        section_number: ele.section_number,\r\n                        teacher_id: ele.teacher_id,\r\n                        reviewer_id: ele.reviewer_id,\r\n                        substitute_teacher_id: ele.substitute_teacher_id,\r\n                        substitute_teacher_name: ele.substitute_teacher_name,\r\n                        status: ele.status,\r\n                        teacher_name: ele.teacher_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (teacher_leave.status === \"Approved\"){\r\n                        return dispatch(addAcceptTeacherLeave(teacher_leave));\r\n                    }\r\n                    else if (teacher_leave.status === \"Not Approved\") {\r\n                        return dispatch(addRemoveTeacherLeave(teacher_leave));\r\n                    }\r\n                    else {\r\n                        return dispatch(addLeaves(teacher_leave));\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport { ITeacherLeaveState, IStateType } from \"../../store/models/root.interface\";\r\nimport TeacherRequestList from \"./TeacherRequestList\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { getTeacherLeave } from \"../../common/service/TeacherLeave/GetTeacherLeave\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst TeacherRequest: React.FC = () => {\r\n  const teachers: ITeacherLeaveState = useSelector((state: IStateType) => state.teacher_leaves);\r\n  const numberItemsCount: number = teachers.leaves.length;\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  dispatch(updateCurrentPath(\"Yêu cầu nghỉ dạy\", \"\"));\r\n\r\n  let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                  trackPromise(getTeacherLeave(dispatch))\r\n                }\r\n            }\r\n            else {\r\n              trackPromise(getTeacherLeave(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token]);\r\n\r\n  return (\r\n    promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n      <ToastContainer />\r\n      <h1 className=\"h3 mb-2 text-gray-800\">Yêu cầu nghỉ dạy</h1>\r\n      {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n      <div className=\"row\">\r\n        <TopCard title=\"SỐ YÊU CẦU\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-green\">Danh sách yêu cầu</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <TeacherRequestList />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TeacherRequest;","import { fetchDataSuccess, fetchDataError, \r\n    removeTeacherRegisterQuatificationApprovedAll, initialTeacherRegisterQuatificationApproved, addTeacherRegisterQuatificationApproved,\r\n    removeTeacherRegisterQuatificationNotApprovedAll, initialTeacherRegisterQuatificationNotApproved, addTeacherRegisterQuatificationNotApproved,\r\n    removeTeacherRegisterQuatificationNotApprovedNowAll, initialTeacherRegisterQuatificationNotApprovedNow, addTeacherRegisterQuatificationNotApprovedNow\r\n} from \"../../../store/actions/teacher_register_quantification.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface TeacherRegisterQuantification {\r\n    id: any;\r\n    teacher_id: number;\r\n    teacher_name: string;\r\n    reviewer_id: number;\r\n    course_id: number;\r\n    course_name: string;\r\n    art_age_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    degree_photo_url: string;\r\n    status: string;\r\n}\r\nexport function getTeacherRegisterQuantificationByTeacherId(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/teacher-register-level/teacher/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                console.log(response)\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTeacherRegisterQuantificationByTeacherId(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeTeacherRegisterQuatificationApprovedAll())\r\n                console.log(data.body.approved)\r\n                console.log(data.body.not_approved)\r\n                console.log(data.body.not_approved_now)\r\n                data.body.approved.map((ele: any, index: any) => {\r\n                    var TeacherRegisterQuantification: TeacherRegisterQuantification = {\r\n                        id: ele.id,\r\n                        teacher_id: ele.teacher_id,\r\n                        reviewer_id: ele.reviewer_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        course_id: ele.course_id,\r\n                        course_name:ele.course_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        degree_photo_url: ele.degree_photo_url,\r\n                        status: ele.status\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialTeacherRegisterQuatificationApproved(TeacherRegisterQuantification));\r\n                    }\r\n                    else{\r\n                        return dispatch(addTeacherRegisterQuatificationApproved(TeacherRegisterQuantification))\r\n                    }\r\n                })\r\n\r\n                dispatch(removeTeacherRegisterQuatificationNotApprovedAll())\r\n                \r\n                data.body.not_approved.map((ele: any, index: any) => {\r\n                    var TeacherRegisterQuantification: TeacherRegisterQuantification = {\r\n                        id: ele.id,\r\n                        teacher_id: ele.teacher_id,\r\n                        reviewer_id: ele.reviewer_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        course_id: ele.course_id,\r\n                        course_name:ele.course_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        degree_photo_url: ele.degree_photo_url,\r\n                        status: ele.status\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialTeacherRegisterQuatificationNotApproved(TeacherRegisterQuantification));\r\n                    }\r\n                    else{\r\n                        return dispatch(addTeacherRegisterQuatificationNotApproved(TeacherRegisterQuantification))\r\n                    }\r\n                })\r\n\r\n                dispatch(removeTeacherRegisterQuatificationNotApprovedNowAll())\r\n                data.body.not_approved_now.map((ele: any, index: any) => {\r\n                    var TeacherRegisterQuantification: TeacherRegisterQuantification = {\r\n                        id: ele.id,\r\n                        teacher_id: ele.teacher_id,\r\n                        reviewer_id: ele.reviewer_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        course_id: ele.course_id,\r\n                        course_name:ele.course_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        degree_photo_url: ele.degree_photo_url,\r\n                        status: ele.status\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialTeacherRegisterQuatificationNotApprovedNow(TeacherRegisterQuantification));\r\n                    }\r\n                    else{\r\n                        return dispatch(addTeacherRegisterQuatificationNotApprovedNow(TeacherRegisterQuantification))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess } from \"../../../store/actions/teacher_register_quantification.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getTeacherRegisterQuantificationByTeacherId } from \"./GetTeacherRegisterQuantificationByTeacherId\";\r\n\r\nexport function putTeacherRegisterLevelAdmin(id: any, teacher_id: number, teacher_level: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/teacher-register-level/admin/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(teacher_level)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putTeacherRegisterLevelAdmin(teacher_level,teacher_id, id, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                toast.update(idx, { render: \"Bạn đã xác nhận trình độ cho giáo viên thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataSuccess(teacher_level))\r\n                getTeacherRegisterQuantificationByTeacherId(dispatch, teacher_id)\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Bạn đã xác nhận trình độ cho giáo viên không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { putTeacherRegisterLevelAdmin } from \"../../common/service/TeacherRegisterQuantification/PutTeacherRegisterLevelAdmin\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { toast } from \"react-toastify\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction RequestConfirmLevelList(props) {\r\n\r\n  const dispatch = useDispatch();\r\n  const teacher_register_quantifications = useSelector((state) => state.teacher_register_quantifications);\r\n  const history = useHistory();\r\n  const routeChange = (degree_photo) => {\r\n    let path = '/teachers/request-level/degree-photo';\r\n    history.push({\r\n      pathname: path,\r\n      state: { degree_photo: degree_photo }\r\n    });\r\n  }\r\n\r\n  function approvedTeacherLevel(ele) {\r\n    const id = toast.info(\"Chấp nhận trình độ cho giáo viên\", {\r\n      position: toast.POSITION.TOP_CENTER,\r\n      autoClose: 2000\r\n    });\r\n    dispatch(putTeacherRegisterLevelAdmin(ele.id, ele.teacher_id, {\r\n      status: \"Approved\"\r\n    }, id))\r\n  }\r\n\r\n  function notApprovedTeacherLevel(ele) {\r\n    const id = toast.info(\"Không chấp nhận trình độ cho giáo viên\", {\r\n      position: toast.POSITION.TOP_CENTER,\r\n      autoClose: 2000\r\n    });\r\n    dispatch(putTeacherRegisterLevelAdmin(ele.id, ele.teacher_id, {\r\n      status: \"Not approved\"\r\n    }, id))\r\n    dispatch(addNotification(\"Trình độ \", `${ele.course_name} - Đã được chấp nhận bởi bạn`));\r\n  }\r\n\r\n\r\n  const datas = teacher_register_quantifications.not_approved_now;\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n  function removeButton(cell, row) {\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-danger\" onClick={() => {\r\n        notApprovedTeacherLevel(row)\r\n      }}>Xóa</button>\r\n    );\r\n  }\r\n\r\n  function editButton(cell, row) {\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n        approvedTeacherLevel(row)\r\n      }}>Chấp nhận</button>\r\n    )\r\n  }\r\n\r\n  function detailButton(cell, row) {\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n        routeChange(row.degree_photo)\r\n      }}>Chi tiết</button>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'teacher_name',\r\n      text: 'Giáo viên',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'course_name',\r\n      text: 'Đăng kí',\r\n      filter: textFilter()\r\n    },\r\n\r\n    {\r\n      dataField: '',\r\n      text: 'Hành động',\r\n      formatter: editButton\r\n    },\r\n    {\r\n      dataField: 'address',\r\n      text: '',\r\n      formatter: removeButton\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: '',\r\n      formatter: detailButton\r\n    },\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default RequestConfirmLevelList;\r\n","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport { IStateType, ITeacherRegisterQuantificationState } from \"../../store/models/root.interface\";\r\nimport RequestConfirmLevelList from \"./RequestConfirmLevelList\";\r\nimport { getTeacherRegisterQuantificationByTeacherId } from \"../../common/service/TeacherRegisterQuantification/GetTeacherRegisterQuantificationByTeacherId\";\r\nimport { getTeacher } from \"../../common/service/Teacher/GetTeacher\";\r\nimport { getCourse } from \"../../common/service/Course/GetCourse\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst RequestConfirmLevel: React.FC = () => {\r\n  const teacher_register_quantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n  const numberItemsCount: number = teacher_register_quantifications.not_approved_now.length;\r\n\r\n  var id_x = localStorage.getItem('teacher_id');\r\n  let teacher_id: number = 0;\r\n  if (id_x !== null){\r\n    teacher_id = parseInt(id_x)\r\n  }\r\n\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  dispatch(updateCurrentPath(\"Yêu cầu xác nhận trình độ\", \"\"));\r\n\r\n  let access_token = localStorage.getItem(\"access_token\");\r\n  let refresh_token = localStorage.getItem(\"refresh_token\");\r\n  useEffect(() => {\r\n    if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n      let access_token_decode: any = jwt_decode(access_token)\r\n      let refresh_token_decode: any = jwt_decode(refresh_token)\r\n      let exp_access_token_decode = access_token_decode.exp;\r\n      let exp_refresh_token_decode = refresh_token_decode.exp;\r\n      let now_time = Date.now() / 1000;\r\n      console.log(exp_access_token_decode)\r\n      console.log(now_time)\r\n      if (exp_access_token_decode < now_time) {\r\n        if (exp_refresh_token_decode < now_time) {\r\n          localStorage.removeItem('access_token') // Authorization\r\n          localStorage.removeItem('refresh_token')\r\n          localStorage.removeItem('username')\r\n          localStorage.removeItem('role_privilege')\r\n          localStorage.removeItem('id')\r\n          localStorage.removeItem('contest_id')\r\n          localStorage.removeItem('schedule_id')\r\n          dispatch(logout())\r\n        }\r\n        else {\r\n          trackPromise(getTeacherRegisterQuantificationByTeacherId(dispatch, teacher_id))\r\n          trackPromise(getTeacher(dispatch))\r\n          trackPromise(getCourse(dispatch))\r\n        }\r\n      }\r\n      else {\r\n        trackPromise(getTeacherRegisterQuantificationByTeacherId(dispatch, teacher_id))\r\n        trackPromise(getTeacher(dispatch))\r\n        trackPromise(getCourse(dispatch))\r\n      }\r\n    }\r\n  }, [dispatch, teacher_id, access_token, refresh_token])\r\n\r\n  return (\r\n    promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n      <h1 className=\"h3 mb-2 text-gray-800\">Yêu cầu xác nhận trình độ</h1>\r\n      {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n      <ToastContainer />\r\n      <div className=\"row\">\r\n        <TopCard title=\"SỐ YÊU CẦU\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-green\">Danh sách yêu cầu</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <RequestConfirmLevelList />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RequestConfirmLevel;\r\n","import React from \"react\";\r\nimport { Quill } from \"react-quill\";\r\n\r\n\r\n// Custom Undo button icon component for Quill editor. You can import it directly\r\n// from 'quill/assets/icons/undo.svg' but I found that a number of loaders do not\r\n// handle them correctly\r\nconst CustomUndo = () => (\r\n  <svg viewBox=\"0 0 18 18\">\r\n    <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\r\n    <path\r\n      className=\"ql-stroke\"\r\n      d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\r\n    />\r\n  </svg>\r\n);\r\n\r\n// Redo button icon component for Quill editor\r\nconst CustomRedo = () => (\r\n  <svg viewBox=\"0 0 18 18\">\r\n    <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\r\n    <path\r\n      className=\"ql-stroke\"\r\n      d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\r\n    />\r\n  </svg>\r\n);\r\n\r\n// Undo and redo functions for Custom Toolbar\r\nfunction undoChange() {\r\n  this.quill.history.undo();\r\n}\r\nfunction redoChange() {\r\n  this.quill.history.redo();\r\n}\r\n\r\n// Add sizes to whitelist and register them\r\nconst Size = Quill.import(\"formats/size\");\r\nSize.whitelist = [\"extra-small\", \"small\", \"medium\", \"large\"];\r\nQuill.register(Size, true);\r\n\r\n// Add fonts to whitelist and register them\r\nconst Font = Quill.import(\"formats/font\");\r\nFont.whitelist = [\r\n  \"arial\",\r\n  \"comic-sans\",\r\n  \"courier-new\",\r\n  \"georgia\",\r\n  \"helvetica\",\r\n  \"lucida\"\r\n];\r\nQuill.register(Font, true);\r\n\r\n// Modules object for setting up the Quill editor\r\nexport const modules = {\r\n  imageResize: {\r\n    parchment: Quill.import('parchment'),\r\n    modules: ['Resize', 'DisplaySize']\r\n  },\r\n  toolbar: {\r\n    container: \"#toolbar\",\r\n    handlers: {\r\n      undo: undoChange,\r\n      redo: redoChange\r\n    }\r\n  },\r\n  history: {\r\n    delay: 500,\r\n    maxStack: 100,\r\n    userOnly: true\r\n  }\r\n};\r\n\r\n// Formats objects for setting up the Quill editor\r\nexport const formats = [\r\n  \"header\",\r\n  \"font\",\r\n  \"size\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"align\",\r\n  \"strike\",\r\n  \"script\",\r\n  \"blockquote\",\r\n  \"background\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n  \"video\",\r\n  \"color\",\r\n  \"code-block\"\r\n];\r\n\r\n// Quill Toolbar component\r\nexport const QuillToolbar = () => (\r\n  <div id=\"toolbar\">\r\n    <span className=\"ql-formats\">\r\n      <select className=\"ql-font\" defaultValue=\"arial\">\r\n        <option value=\"arial\">Arial</option>\r\n        <option value=\"comic-sans\">Comic Sans</option>\r\n        <option value=\"courier-new\">Courier New</option>\r\n        <option value=\"georgia\">Georgia</option>\r\n        <option value=\"helvetica\">Helvetica</option>\r\n        <option value=\"lucida\">Lucida</option>\r\n      </select>\r\n      <select className=\"ql-size\" defaultValue=\"medium\">\r\n        <option value=\"extra-small\">Size 1</option>\r\n        <option value=\"small\">Size 2</option>\r\n        <option value=\"medium\">Size 3</option>\r\n        <option value=\"large\">Size 4</option>\r\n      </select>\r\n      <select className=\"ql-header\" defaultValue=\"3\">\r\n        <option value=\"1\">Heading</option>\r\n        <option value=\"2\">Subheading</option>\r\n        <option value=\"3\">Normal</option>\r\n      </select>\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-bold\" />\r\n      <button className=\"ql-italic\" />\r\n      <button className=\"ql-underline\" />\r\n      <button className=\"ql-strike\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-list\" value=\"ordered\" />\r\n      <button className=\"ql-list\" value=\"bullet\" />\r\n      <button className=\"ql-indent\" value=\"-1\" />\r\n      <button className=\"ql-indent\" value=\"+1\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-script\" value=\"super\" />\r\n      <button className=\"ql-script\" value=\"sub\" />\r\n      <button className=\"ql-blockquote\" />\r\n      <button className=\"ql-direction\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <select className=\"ql-align\" />\r\n      <select className=\"ql-color\" />\r\n      <select className=\"ql-background\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-link\" />\r\n      <button className=\"ql-image\" />\r\n      <button className=\"ql-video\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-formula\" />\r\n      <button className=\"ql-code-block\" />\r\n      <button className=\"ql-clean\" />\r\n    </span>\r\n    <span className=\"ql-formats\">\r\n      <button className=\"ql-undo\">\r\n        <CustomUndo />\r\n      </button>\r\n      <button className=\"ql-redo\">\r\n        <CustomRedo />\r\n      </button>\r\n    </span>\r\n  </div>\r\n);\r\n\r\nexport default QuillToolbar;\r\n","import React, {useRef} from \"react\";\r\nimport ReactQuill, { Quill } from 'react-quill';\r\nimport EditorToolbar, { modules, formats } from \"./EditorToolbar\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"./Style.css\";\r\nimport ImageResize from 'quill-image-resize-module-react';\r\n\r\nQuill.register('modules/imageResize', ImageResize);\r\n\r\nexport const Editor = (props) => {\r\n  console.log(`Input: ${props.setValue}`)\r\n  const reactQuillRef = useRef(null);\r\n  React.useEffect(() => {\r\n    if (reactQuillRef.current.getEditor() && props.isCreate !== \"\" && props.setValue === null){\r\n      reactQuillRef.current.getEditor().clipboard.dangerouslyPasteHTML(props.setValue)\r\n    }\r\n    if (props.isCreate === \"\"){\r\n      setState({value: null})\r\n    }\r\n  }, [reactQuillRef, props.setValue, props.isCreate]);\r\n  //console.log(reactQuillRef)\r\n  \r\n  //const quill = reactQuillRef.current.editor;\r\n  //console.log(quill)\r\n  //quill.clipboard.dangerouslyPasteHTML(props.setValue);\r\n  \r\n  const [state, setState] = React.useState({ value: null });\r\n  const handleChange = value => {\r\n    setState({ value });\r\n    props.getValue(value)\r\n    //console.log(value)\r\n  };\r\n\r\n  console.log(`State: ${state.value}`)\r\n  return (\r\n    <div className=\"text-editor\">\r\n      <EditorToolbar />\r\n      <ReactQuill\r\n        ref={reactQuillRef}\r\n        theme=\"snow\"\r\n        value={state.value}\r\n        onChange={handleChange}\r\n        placeholder={\"Write something awesome...\"}\r\n        modules={modules}\r\n        formats={formats}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import { ITutorialTemplatePage, TutorialTemplatePageModificationStatus } from \"../models/tutorial_template_page.interface\";\r\nexport const ADD_TUTORIAL_TEMPLATE_PAGE: string = \"ADD_TUTORIAL_TEMPLATE_PAGE\";\r\nexport const EDIT_TUTORIAL_TEMPLATE_PAGE: string = \"EDIT_TUTORIAL_TEMPLATE_PAGE\";\r\nexport const REMOVE_TUTORIAL_TEMPLATE_PAGE: string = \"REMOVE_TUTORIAL_TEMPLATE_PAGE\";\r\nexport const CHANGE_TUTORIAL_TEMPLATE_PAGE_AMOUNT: string = \"CHANGE_TUTORIAL_TEMPLATE_PAGE_AMOUNT\";\r\nexport const CHANGE_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT: string = \"CHANGE_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT\";\r\nexport const CLEAR_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT: string = \"CLEAR_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_TUTORIAL_TEMPLATE_PAGE_ALL: string = \"REMOVE_TUTORIAL_TEMPLATE_PAGE_ALL\";\r\nexport const INITIAL_TUTORIAL_TEMPLATE_PAGE: string = \"INITIAL_TUTORIAL_TEMPLATE_PAGE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(tutorial_template_page: ITutorialTemplatePage) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        tutorial_template_page\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialTutorialTemplatePage(tutorial_template_page: ITutorialTemplatePage): IInitialTutorialTemplatePageActionType {\r\n    return { type: INITIAL_TUTORIAL_TEMPLATE_PAGE, tutorial_template_page: tutorial_template_page };\r\n}\r\n\r\nexport function removeTutorialTemplatePageAll(): IRemoveTutorialTemplatePageAllActionType {\r\n    return { type: REMOVE_TUTORIAL_TEMPLATE_PAGE_ALL };\r\n}\r\n\r\nexport function addTutorialTemplatePage(tutorial_template_page: ITutorialTemplatePage): IAddTutorialTemplatePageActionType {\r\n    return { type: ADD_TUTORIAL_TEMPLATE_PAGE, tutorial_template_page: tutorial_template_page };\r\n}\r\n\r\nexport function editTutorialTemplatePage(tutorial_template_page: ITutorialTemplatePage): IEditTutorialTemplatePageActionType {\r\n    return { type: EDIT_TUTORIAL_TEMPLATE_PAGE, tutorial_template_page: tutorial_template_page };\r\n}\r\n\r\nexport function removeTutorialTemplatePage(id: any): IRemoveTutorialTemplatePageActionType {\r\n    return { type: REMOVE_TUTORIAL_TEMPLATE_PAGE, id: id };\r\n}\r\n\r\nexport function changeSelectedTutorialTemplatePage(tutorial_template_page: ITutorialTemplatePage): IChangeSelectedTutorialTemplatePageActionType {\r\n    return { type: CHANGE_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT, tutorial_template_page: tutorial_template_page };\r\n}\r\n\r\nexport function clearSelectedTutorialTemplatePage(): IClearSelectedTutorialTemplatePageActionType {\r\n    return { type: CLEAR_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateTutorialTemplatePage(value: TutorialTemplatePageModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddTutorialTemplatePageActionType { type: string, tutorial_template_page: ITutorialTemplatePage };\r\ninterface IEditTutorialTemplatePageActionType { type: string, tutorial_template_page: ITutorialTemplatePage };\r\ninterface IRemoveTutorialTemplatePageActionType { type: string, id: any };\r\ninterface IChangeSelectedTutorialTemplatePageActionType { type: string, tutorial_template_page: ITutorialTemplatePage };\r\ninterface IClearSelectedTutorialTemplatePageActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  TutorialTemplatePageModificationStatus};\r\ninterface IRemoveTutorialTemplatePageAllActionType { type: string }\r\ninterface IInitialTutorialTemplatePageActionType {type: string, tutorial_template_page: ITutorialTemplatePage}","import { fetchDataRequest, fetchDataSuccess, fetchDataError, removeTutorialTemplatePageAll, initialTutorialTemplatePage, addTutorialTemplatePage } from \"../../../store/actions/tutorial_template_page.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface TutorialTemplatePage {\r\n    id: any;\r\n    tutorial_template_id: number;\r\n    name: string;\r\n    description: string;\r\n    number: number;\r\n}\r\nexport function getTutorialTemplatePageByTutorialTemplateId(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/tutorial-template-page/tutorial-template/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTutorialTemplatePageByTutorialTemplateId(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeTutorialTemplatePageAll())\r\n                //console.log(data.body.lessons)\r\n                data.body.TutorialTemplatePage.map((ele: any, index: any) => {\r\n                    var tutorial_template_page: TutorialTemplatePage = {\r\n                        id: ele.id,\r\n                        tutorial_template_id: ele.tutorial_template_id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        number: ele.number\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialTutorialTemplatePage(tutorial_template_page));\r\n                    }\r\n                    else{\r\n                        return dispatch(addTutorialTemplatePage(tutorial_template_page))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getTutorialTemplatePageByTutorialTemplateId } from \"./GetTutorialTemplatePageByTutorialTemplateId\";\r\n\r\nexport function postTutorialTemplatePage1(tutorialtemplatepage: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/tutorial-template-page`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(tutorialtemplatepage)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postTutorialTemplatePage1(tutorialtemplatepage, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(getTutorialTemplatePageByTutorialTemplateId(tutorialtemplatepage.tutorial_template_id))\r\n                toast.update(idx, { render: \"Thêm bước cho giáo án thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Thêm bước cho giáo án không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, Dispatch, Fragment, useEffect, ChangeEvent } from \"react\";\r\nimport { IStateType, IRootPageStateType, ICourseState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport Editor from \"../../common/components/Quill/EditorSectionTemplate\";\r\nimport { ICourse } from \"../../store/models/course.interface\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NumberInput from \"../../common/components/NumberInput\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport { postTutorialTemplatePage1 } from \"../../common/service/TutorialTemplatePage/PostTutorialTemplatePage1\";\r\ntype Options = {\r\n  name: string;\r\n  value: any;\r\n}\r\n\r\ntype PageContent = {\r\n  page: number;\r\n  content: string;\r\n}\r\n\r\ntype TutorialSectionTemplate = {\r\n  number: number;\r\n  name: string;\r\n  teaching_form: boolean;\r\n  tutorial: PageContent[];\r\n}\r\n\r\nconst LessonPlan: React.FC = () => {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n  const courses: ICourseState = useSelector((state: IStateType) => state.courses);\r\n  let course: ICourse | null = courses.selectedCourse;\r\n\r\n  var id_x = localStorage.getItem('number_of_sum');\r\n  let number_of_sum: number = 0;\r\n  if (id_x !== null) {\r\n    number_of_sum = parseInt(id_x)\r\n  }\r\n\r\n\r\n  if (!course) {\r\n    course = { id: 0, name: \"\", description: \"\", max_participant: 0, num_of_section: 0, price: 0, image_url: \"\", is_enabled: false, creator_id: 0, art_age_id: 0, art_level_id: 0, art_type_id: 0, create_time: \"\", update_time: \"\", art_age_name: \"\", art_level_name: \"\", art_type_name: \"\", checked_tutoral: false };\r\n  }\r\n\r\n  var course_id = localStorage.getItem('course_id');\r\n\r\n  var id_t = localStorage.getItem('tutorial_template_id');\r\n  let tutorial_template_id: number = 0;\r\n  if (id_t !== null) {\r\n      tutorial_template_id = parseInt(id_t)\r\n  }\r\n\r\n  var id_y = localStorage.getItem('num_of_section');\r\n  let num_of_section: number = 0;\r\n  if (id_y !== null) {\r\n    num_of_section = parseInt(id_y)\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(updateCurrentPath(\"Khóa học chung\", \"Soạn giáo án\"));\r\n  }, [path.area, dispatch, course_id]);\r\n\r\n\r\n\r\n\r\n  const [contentTutorialSection, setContentTutorialSection] = useState<TutorialSectionTemplate[]>([])\r\n  const [contentTutorialPage, setContentTutorialPage] = useState<PageContent[]>([])\r\n  const [currentPage, setCurrentPage] = useState<number>(0)\r\n  const [numberSection, setNumberSection] = useState<number>(1)\r\n\r\n  const [value, setValue] = useState(0);\r\n  const [text, setText] = useState(\"\");\r\n\r\n  console.log(value)\r\n  console.log(currentPage)\r\n\r\n  const [formState, setFormState] = useState({\r\n    total_page: { error: \"\", value: 0 },\r\n  })\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    setValue(model.value);\r\n  }\r\n\r\n\r\n  console.log(numberSection)\r\n  const history = useHistory();\r\n\r\n  function routeHome() {\r\n    let path = `/courses`;\r\n    history.push(path);\r\n  }\r\n\r\n  function handleSaveStep () {\r\n    const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n      position: toast.POSITION.TOP_CENTER\r\n    });\r\n\r\n    if (numberSection === num_of_section) {\r\n      dispatch(postTutorialTemplatePage1({\r\n        description: value,\r\n        name: value1,\r\n        tutorial_template_id: tutorial_template_id,\r\n        number: currentPage\r\n      }, idx))\r\n\r\n      setTimeout(() =>\r\n        routeHome()\r\n      , 2000)\r\n    }\r\n    else {\r\n      dispatch(postTutorialTemplatePage1({\r\n        description: value,\r\n        name: value1,\r\n        tutorial_template_id: tutorial_template_id,\r\n        number: currentPage\r\n      }, idx))\r\n    }\r\n  }\r\n\r\n  const [textHtml, setTextHtml] = useState<string>(\"\")\r\n  function getValue(value: string) {\r\n    setTextHtml(value);\r\n  }\r\n\r\n\r\n\r\n  const listTeachingForm: Options[] = [\r\n    {\r\n      \"name\": \"Dạy thông qua Jitsi\",\r\n      \"value\": \"true\"\r\n    },\r\n    {\r\n      \"name\": \"Tự đọc giáo trình\",\r\n      \"value\": \"false\"\r\n    }\r\n  ]\r\n\r\n  function handleNextPage() {\r\n    let contentPage: PageContent = {\r\n      page: currentPage,\r\n      content: textHtml\r\n    }\r\n    setContentTutorialPage([...contentTutorialPage, contentPage])\r\n    let x = currentPage + 1\r\n    setCurrentPage(x)\r\n    setTextHtml(\"\")\r\n    setText(\"\")\r\n  }\r\n\r\n\r\n  function handleNextSection() {\r\n    if (value !== 0) {\r\n      let contentPage: PageContent = {\r\n        page: currentPage,\r\n        content: textHtml\r\n      }\r\n      let contentSection: TutorialSectionTemplate = {\r\n        number: numberSection,\r\n        name: value1,\r\n        teaching_form: value2 === \"true\" ? true : false,\r\n        tutorial: [...contentTutorialPage, contentPage]\r\n      }\r\n      setContentTutorialSection([...contentTutorialSection, contentSection])\r\n  \r\n      let y = numberSection + 1;\r\n      setNumberSection(y)\r\n  \r\n      setTextHtml(\"\")\r\n      setValue(0)\r\n      setHtmlClass1(\"\")\r\n      setHtmlClass2(\"\")\r\n      setValue1(\"\")\r\n      setValue2(\"\")\r\n      setCurrentPage(0)\r\n      setContentTutorialPage([])\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const [error1, setError1] = useState(\"\");\r\n  const [htmlClass1, setHtmlClass1] = useState(\"\");\r\n  const [value1, setValue1] = useState(\"\");\r\n\r\n\r\n  function onValueChanged1(event: ChangeEvent<HTMLInputElement>): void {\r\n    let [error1, validClass1, elementValue1] = [\"\", \"\", event.target.value];\r\n\r\n    [error1, validClass1] = (!elementValue1) ?\r\n      [\"Value cannot be empty\", \"is-invalid\"] : [\"\", \"is-valid\"];\r\n\r\n    setError1(error1);\r\n    setHtmlClass1(validClass1);\r\n    setValue1(elementValue1);\r\n  }\r\n\r\n\r\n  const [error2, setError2] = useState(\"\");\r\n  const [htmlClass2, setHtmlClass2] = useState(\"\");\r\n  const [value2, setValue2] = useState(\"\");\r\n\r\n\r\n  function onValueChanged2(event: ChangeEvent<HTMLSelectElement>): void {\r\n    let [error2, validClass2, elementValue2] = [\"\", \"\", event.target.value];\r\n\r\n    [error2, validClass2] = (!elementValue2) ?\r\n      [\"Value has to be selected\", \"is-invalid\"] : [\"\", \"is-valid\"];\r\n\r\n    setError2(error2);\r\n    setHtmlClass2(validClass2);\r\n    setValue2(elementValue2);\r\n  }\r\n\r\n\r\n  const getOptions2: (JSX.Element | null)[] = listTeachingForm.map((option: any, index: number) => {\r\n    return (\r\n      <option key={index} value={option.value}>{option.name}</option>\r\n    )\r\n  });\r\n\r\n  function handleBackPage() {\r\n\r\n  }\r\n\r\n  function handleRemove() {\r\n\r\n  }\r\n\r\n  function handleNewPage() {\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <ToastContainer />\r\n      <div className=\"col-xl-12 col-lg-12\">\r\n        <div className=\"card shadow mb-4\">\r\n          <div className=\"card-header py-3\">\r\n            <h6 className=\"m-0 font-weight-bold text-green\">Buổi {numberSection}</h6>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <div>\r\n                    <label htmlFor=\"input_name\">Tiêu đề buổi học</label>\r\n                    <input\r\n                      value={value1}\r\n                      type=\"text\"\r\n                      onChange={onValueChanged1}\r\n                      className={`form-control ${htmlClass1}`}\r\n                      id={`id_Tiêu đề buổi học`}\r\n                      placeholder=\"\" />\r\n                    {error1 ?\r\n                      <div className=\"invalid-feedback\">\r\n                        {error1}\r\n                      </div> : null\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <label htmlFor={`input_teaching_form`}>Hình thức dạy</label>\r\n                  <select\r\n                    value={value2}\r\n                    id={`input_teaching_form`}\r\n                    className={`form-control  ${htmlClass2}`}\r\n                    onChange={onValueChanged2}>\r\n                    <option value={0}>Choose...</option>\r\n                    {getOptions2}\r\n                  </select>\r\n\r\n                  {error2 ?\r\n                    <div className=\"invalid-feedback\">\r\n                      {error2}\r\n                    </div> : null\r\n                  }\r\n                </div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                    <NumberInput id=\"input_price\"\r\n                        value={formState.total_page.value}\r\n                        field=\"total_page\"\r\n                        onChange={hasFormValueChanged}\r\n                        max={10000000}\r\n                        min={0}\r\n                        label=\"Số bước\"\r\n                    />\r\n                </div>\r\n              </div>\r\n              {\r\n                function () {\r\n                  if (value > 1 && value - 1 > currentPage) {\r\n                    return (\r\n                      <>\r\n                        <div className=\"form-group\">\r\n                          <label>Nội dung bước {currentPage + 1} / {value}</label>\r\n                          <Editor getValue={getValue} isCreate={textHtml} setValue={text} />\r\n                        </div>\r\n                        <div className=\"row mt-2\">\r\n                            <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                                <button type=\"button\" className=\"btn btn-info right-margin\" onClick={handleBackPage}>Trở về</button>\r\n                                <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleSaveStep}>Lưu tạm</button>\r\n                                <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleNextPage}>Bước tiếp theo</button>\r\n                            </div>\r\n                            <div className=\"col-xl-8 col-md-8 col-xs-8\">\r\n                                <button type=\"button\" className=\"btn btn-error right-margin add-step btn-remove ml-2\" onClick={handleRemove}>Xóa bước</button>\r\n                                <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNewPage}>Thêm bước</button>\r\n                            </div>\r\n                        </div>\r\n                      </>\r\n                    )\r\n                  }\r\n\r\n                  else if (value - 1 === currentPage || value === 1) {\r\n                    return (\r\n                      <>\r\n                      <div className=\"form-group\">\r\n                        <label>Nội dung trang {currentPage + 1}</label>\r\n                        <Editor getValue={getValue} isCreate={textHtml} setValue={text} />\r\n                      </div>\r\n                      <div className=\"row mt-2\">\r\n                      <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                                <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleSaveStep}>Lưu tạm</button>\r\n                                <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleNextPage}>Bước tiếp theo</button>\r\n                            </div>\r\n                            <div className=\"col-xl-8 col-md-8 col-xs-8\">\r\n                                <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNewPage}>Thêm bước</button>\r\n                            </div>\r\n                              \r\n                      </div>\r\n                    </>\r\n                    )\r\n                  }\r\n                }()\r\n              }\r\n\r\n              {\r\n                function () {\r\n                  if (course && numberSection === 1){\r\n                    return (\r\n                      <div className=\"row mt-2\">\r\n                            <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                            <button type=\"button\" className=\"btn left-margin step-continue\" onClick={handleSaveStep}>Lưu buổi</button>\r\n                                <button type=\"button\" className=\"btn btn-info right-margin ml-2\" onClick={handleBackPage}>Trở về</button>\r\n                            </div>\r\n                            <div className=\"col-xl-8 col-md-8 col-xs-8\">\r\n                                <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNextSection}>Buổi tiếp theo</button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                  }\r\n                  else if (course && (numberSection <= number_of_sum)) {\r\n                    return (\r\n                      <div className=\"row mt-2\">\r\n                            <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                            <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleSaveStep}>Lưu buổi</button>\r\n                                <button type=\"button\" className=\"btn btn-info right-margin ml-2\" onClick={handleBackPage}>Trở về</button>\r\n                            </div>\r\n                            <div className=\"col-xl-8 col-md-8 col-xs-8\">\r\n                                <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNextSection}>Buổi tiếp theo</button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                  }\r\n                }()\r\n              }\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LessonPlan;\r\n","export interface IContest {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    total_contest_submission: number;\r\n    total_contest_submission_graded: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    creator_id: number;\r\n    art_type_id: number;\r\n    art_age_id: number;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ContestModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","export function padTo2Digits(num) {\r\n    return num.toString().padStart(2, '0');\r\n  }\r\n  \r\nexport function formatDate(date) {\r\n    return (\r\n      [\r\n        date.getFullYear(),\r\n        padTo2Digits(date.getMonth() + 1),\r\n        padTo2Digits(date.getDate()),\r\n      ].join('-') +\r\n      ' ' +\r\n      [\r\n        padTo2Digits(date.getHours()),\r\n        padTo2Digits(date.getMinutes()),\r\n        padTo2Digits(date.getSeconds()),\r\n      ].join(':')\r\n    );\r\n  }","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { formatDate } from \"../../common/components/ConverDate\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction ContestIsOnList(props) {\r\n\r\n    const contests = useSelector((state) => state.contests);\r\n    const history = useHistory();\r\n\r\n    const routeChange = (id) => {\r\n      localStorage.setItem('contest_id', id)\r\n        let path = '/contests/detail';\r\n        history.push(path);\r\n    }\r\n    const date_0 = new Date();\r\n    const date = date_0.toUTCString()\r\n    //console.log(date)\r\n    const date_now = formatDate(new Date(date)).substring(0,10) + \"Z\"+ formatDate(new Date(date)).substring(11,16);\r\n    console.log( formatDate(new Date(date)).substring(0,10) + \"Z\"+ formatDate(new Date(date)).substring(11,16))\r\n\r\n  const datas = contests.contests.filter((contest, index) => {\r\n    var strDate1 = contest.start_time;\r\n    var strDate2 = contest.end_time;\r\n    if (!contest || strDate1 > date_now || date_now > strDate2) {\r\n        return null\r\n    }\r\n    else {\r\n        return contest\r\n    }\r\n  })\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n  function viewDetailButton(cell, row) {\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n        if(props.onSelect) props.onSelect(row);\r\n        routeChange(row.id)\r\n      }}>Chỉnh sửa</button>\r\n    )\r\n  }\r\n\r\n  function showStartTime(cell, row) {\r\n    var strDate = row.start_time;\r\n    return (\r\n        <span>{strDate.substring(0, 10) + \" \" + strDate.substring(11,19)}</span>\r\n    )\r\n  }\r\n\r\n  function showEndTime(cell, row) {\r\n    var strDate = row.start_time;\r\n    return (\r\n        <span>{strDate.substring(0, 10) + \" \" + strDate.substring(11,19)}</span>\r\n    )\r\n  }\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'name',\r\n      text: 'Tên',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'art_type_name',\r\n      text: 'Thể loại',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'art_age_name',\r\n      text: 'Độ tuổi',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'start_time',\r\n      text: 'Thời gian bắt đầu',\r\n      formatter: showStartTime,\r\n    },\r\n    {\r\n      dataField: 'end_time',\r\n      text: 'Thời gian kết thúc',\r\n      formatter: showEndTime,\r\n    },\r\n    {\r\n      dataField: 'total_register_contest',\r\n      text: 'Đã đăng kí',\r\n    },\r\n    {\r\n      dataField: 'total_contest_submission_graded',\r\n      text: 'Đã nộp',\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: 'Hành động',\r\n      formatter: viewDetailButton\r\n    }\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default ContestIsOnList;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { formatDate } from \"../../common/components/ConverDate\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction ContestEndList(props) {\r\n\r\n    const contests = useSelector((state) => state.contests);\r\n    const history = useHistory();\r\n\r\n    const routeChange = (id) => {\r\n      localStorage.setItem('contest_id', id)\r\n        let path = '/contests/detail';\r\n        history.push(path);\r\n    }\r\n    const date_0 = new Date();\r\n    const date = date_0.toUTCString()\r\n    //console.log(date)\r\n    const date_now = formatDate(new Date(date)).substring(0,10) + \"Z\"+ formatDate(new Date(date)).substring(11,16);\r\n    console.log( formatDate(new Date(date)).substring(0,10) + \"Z\"+ formatDate(new Date(date)).substring(11,16))\r\n\r\n  const datas = contests.contests.filter((contest, index) => {\r\n    var strDate2 = contest.end_time;\r\n    if (!contest || strDate2 > date_now) {\r\n        return null\r\n    }\r\n    else {\r\n        return contest\r\n    }\r\n  })\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n  function viewDetailButton(cell, row) {\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n        routeChange(row.id)\r\n      }}>Chi tiết</button>\r\n    )\r\n  }\r\n\r\n  function showStartTime(cell, row) {\r\n    var strDate = row.start_time;\r\n    return (\r\n        <span>{strDate.substring(0, 10) + \" \" + strDate.substring(11,19)}</span>\r\n    )\r\n  }\r\n\r\n  function showEndTime(cell, row) {\r\n    var strDate = row.start_time;\r\n    return (\r\n        <span>{strDate.substring(0, 10) + \" \" + strDate.substring(11,19)}</span>\r\n    )\r\n  }\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'name',\r\n      text: 'Tên',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'art_type_name',\r\n      text: 'Thể loại',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'art_age_name',\r\n      text: 'Độ tuổi',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'start_time',\r\n      text: 'Thời gian bắt đầu',\r\n      formatter: showStartTime,\r\n    },\r\n    {\r\n      dataField: 'end_time',\r\n      text: 'Thời gian kết thúc',\r\n      formatter: showEndTime,\r\n    },\r\n    {\r\n        dataField: 'total_register_contest',\r\n        text: 'Đã đăng kí',\r\n      },\r\n      {\r\n        dataField: 'total_contest_submission_graded',\r\n        text: 'Đã nộp',\r\n      },\r\n    {\r\n      dataField: '',\r\n      text: 'Hành động',\r\n      formatter: viewDetailButton\r\n    }\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default ContestEndList;\r\n","import React, { Fragment  } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { formatDate } from \"../../common/components/ConverDate\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\nimport { postGenerationContestSubmissionGrade } from \"../../common/service/ContestSubmission/PostGenerationForTeacher\";\r\n\r\n\r\nfunction ContestNotOnYetList(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n    const contests = useSelector((state) => state.contests);\r\n    const history = useHistory();\r\n\r\n    const generationContestSubmission = (id) => {\r\n      localStorage.setItem('contest_id', id)\r\n        const idx = toast.info(\"Xếp thành công\", {\r\n          position: toast.POSITION.TOP_CENTER,\r\n          autoClose: 2000\r\n        });\r\n        dispatch(postGenerationContestSubmissionGrade(id, idx))\r\n    }\r\n\r\n    const routeChange = (id) => {\r\n        localStorage.setItem('contest_id', id)\r\n        let path = '/contests/detail';\r\n        history.push(path);\r\n    }\r\n    const date_0 = new Date();\r\n    const date = date_0.toUTCString()\r\n    //console.log(date)\r\n    const date_now = formatDate(new Date(date)).substring(0,10) + \"Z\"+ formatDate(new Date(date)).substring(11,16);\r\n    console.log( formatDate(new Date(date)).substring(0,10) + \"Z\"+ formatDate(new Date(date)).substring(11,16))\r\n\r\n  const datas = contests.contests.filter((contest, index) => {\r\n    var strDate1 = contest.start_time;\r\n    if (!contest || strDate1 < date_now) {\r\n        return null\r\n    }\r\n    else {\r\n        return contest\r\n    }\r\n  })\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n  function viewDetailButton(cell, row) {\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n        if(props.onSelect) props.onSelect(row);\r\n        routeChange(row.id)\r\n      }}>Chỉnh sửa</button>\r\n    )\r\n  }\r\n\r\n  function viewGenarationGradeButton(cell, row) {\r\n    if (localStorage.getItem('check_generation') === \"true\") {\r\n      return null\r\n    }\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-info\" onClick={() => {\r\n        if(props.onSelect) props.onSelect(row);\r\n        generationContestSubmission(row.id)\r\n      }}>Xếp chấm thi</button>\r\n    )\r\n  }\r\n\r\n  function showStartTime(cell, row) {\r\n    var strDate = row.start_time;\r\n    return (\r\n        <span>{strDate.substring(0, 10) + \" \" + strDate.substring(11,19)}</span>\r\n    )\r\n  }\r\n\r\n  function showEndTime(cell, row) {\r\n    var strDate = row.start_time;\r\n    return (\r\n        <span>{strDate.substring(0, 10) + \" \" + strDate.substring(11,19)}</span>\r\n    )\r\n  }\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'name',\r\n      text: 'Tên',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'art_type_name',\r\n      text: 'Thể loại',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'art_age_name',\r\n      text: 'Độ tuổi',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'start_time',\r\n      text: 'Thời gian bắt đầu',\r\n      formatter: showStartTime,\r\n    },\r\n    {\r\n      dataField: 'end_time',\r\n      text: 'Thời gian kết thúc',\r\n      formatter: showEndTime,\r\n    },\r\n    {\r\n      dataField: 'total_register_contest',\r\n      text: 'Đã đăng kí',\r\n    },\r\n    {\r\n      dataField: 'total_contest_submission_graded',\r\n      text: 'Đã nộp',\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: 'Hành động',\r\n      formatter: viewDetailButton\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: '',\r\n      formatter: viewGenarationGradeButton\r\n    }\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default ContestNotOnYetList;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\n\r\nexport function postGenerationContestSubmissionGrade(id: number, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest-submission/contest/${id}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postGenerationContestSubmissionGrade(id, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                toast.update(idx, { render: \"Nộp bài thi thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER , autoClose: 2000});\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Nộp bài thi không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataSuccess, fetchDataError, removeContestAll, initialContest, addContest } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface Contest {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    registration_time: string;\r\n    total_register_contest: number;\r\n    total_contest_submission: number;\r\n    total_contest_submission_graded: number;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    creator_id: number;\r\n    art_type_id: number;\r\n    art_age_id: number;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getContest(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest?page=0&size=5`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getContest(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeContestAll())\r\n                console.log(data.body.art_age)\r\n                data.body.art_age.map((ele: any, index: any) => {\r\n                    var strDate1 = ele.start_time;\r\n                    var strDate2 = ele.end_time;\r\n                    var strDate3 = ele.registration_time;\r\n                    var contest: Contest = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: strDate3.substring(0,16),\r\n                        image_url: ele.image_url,\r\n                        start_time: strDate1.substring(0,16),\r\n                        end_time: strDate2.substring(0,16),\r\n                        is_enabled: ele.is_enabled,\r\n                        creator_id: ele.creator_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContest(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContest(contest))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./Contest.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IContestState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport Popup from \"reactjs-popup\";\r\nimport {\r\n    removeContest, clearSelectedContest, setModificationState,\r\n    changeSelectedContest\r\n} from \"../../store/actions/contest.action\";\r\nimport { addNotification } from \"../../store/actions/notifications.action\";\r\nimport { ContestModificationStatus, IContest } from \"../../store/models/contest.interface\";\r\nimport ContestIsOnList from \"./ContestIsOnList\";\r\nimport ContestEndList from \"./ContestEndList\";\r\nimport ContestNotOnYetList from \"./ContestNotOnYetList\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { deleteContest } from \"../../common/service/Contest/DeleteContest\";\r\nimport { getContest } from \"../../common/service/Contest/GetContest\";\r\nimport { formatDate } from \"../../common/components/ConverDate\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\n\r\nconst Contest: React.FC = () => {\r\n    const [checked1, setChecked1] = useState(true);\r\n    const [checked2, setChecked2] = useState(false);\r\n    const [checked3, setChecked3] = useState(false);\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const contests: IContestState = useSelector((state: IStateType) => state.contests);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const [popup1, setPopup1] = useState(false);\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    const date_0 = new Date();\r\n    const date = date_0.toUTCString()\r\n    console.log(date)\r\n    const date_now = formatDate(new Date(date)).substring(0, 10) + \"Z\" + formatDate(new Date(date)).substring(11, 16);\r\n    let numberContestEndCount: number = contests.contests.filter((contest) => {\r\n        var strDate2 = contest.end_time;\r\n        if (!(!contest || strDate2 > date_now)) {\r\n            return contest\r\n        }\r\n        return null\r\n    }).length\r\n\r\n    let numberContestOnCount: number = contests.contests.filter((contest) => {\r\n        var strDate1 = contest.start_time;\r\n        var strDate2 = contest.end_time;\r\n        if (!(!contest || strDate1 > date_now || date_now > strDate2)) {\r\n            return contest\r\n        }\r\n        return null\r\n    }).length\r\n\r\n    let numberContestNotStartCount: number = contests.contests.filter((contest) => {\r\n        var strDate1 = contest.start_time;\r\n        if (!(!contest || strDate1 < date_now)) {\r\n            return contest\r\n        }\r\n        return null\r\n    }).length\r\n    useEffect(() => {\r\n        dispatch(clearSelectedContest());\r\n        dispatch(updateCurrentPath(\"Cuộc thi\", \"danh sách\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getContest(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getContest(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token])\r\n\r\n    function onContestSelectNotOnYetList(contest: IContest): void {\r\n        dispatch(changeSelectedContest(contest));\r\n        onContestRemove1()\r\n        dispatch(setModificationState(ContestModificationStatus.None));\r\n    }\r\n\r\n    function onContestSelectOnList(contest: IContest): void {\r\n        dispatch(changeSelectedContest(contest));\r\n        dispatch(setModificationState(ContestModificationStatus.None));\r\n    }\r\n\r\n    function onContestSelectEndList(contest: IContest): void {\r\n        dispatch(changeSelectedContest(contest));\r\n        dispatch(setModificationState(ContestModificationStatus.None));\r\n    }\r\n\r\n    function onContestRemove1() {\r\n        setPopup1(true);\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    const routeChange = () => {\r\n        let path = `/contests/edit-contest`;\r\n        history.push(\r\n            {\r\n                pathname: path,\r\n                state: { contest_value: null } // your data array of objects\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <ToastContainer />\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Cuộc thi</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"ĐANG DIỄN RA\" text={`${numberContestOnCount}`} icon=\"box\" class=\"primary\" />\r\n                <TopCard title=\"ĐÃ KẾT THÚC\" text={`${numberContestEndCount}`} icon=\"box\" class=\"primary\" />\r\n                <TopCard title=\"CHƯA DIỄN RA\" text={`${numberContestNotStartCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked1 === false) {\r\n                            setChecked1(true)\r\n                            setChecked2(false)\r\n                            setChecked3(false)\r\n                        }\r\n                    }} style={{\r\n                        color: checked1 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Cuộc thi chưa diễn ra</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"50%\",\r\n                        backgroundColor: checked1 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked2 === false) {\r\n                            setChecked2(true)\r\n                            setChecked1(false)\r\n                            setChecked3(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked2 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Cuộc thi đang diễn ra</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"50%\",\r\n                        backgroundColor: checked2 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked3 === false) {\r\n                            setChecked3(true)\r\n                            setChecked1(false)\r\n                            setChecked2(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked3 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Cuộc thi đã kết thúc</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"50%\",\r\n                        backgroundColor: checked3 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                function () {\r\n                    if (checked2 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\">Danh sách cuộc thi đang diễn ra</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ContestIsOnList\r\n                                                    onSelect={onContestSelectOnList}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else if (checked1 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\">Danh sách cuộc thi chưa diễn ra</h6>\r\n                                                <div className=\"header-buttons\">\r\n                                                    <button className=\"btn btn-success btn-green\" onClick={() => {\r\n                                                        dispatch(setModificationState(ContestModificationStatus.Create))\r\n                                                        routeChange()\r\n                                                    }}>\r\n                                                        <i className=\"fas fa fa-plus\"></i>\r\n                                                        Thêm cuộc thi\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ContestNotOnYetList\r\n                                                    onSelect={onContestSelectNotOnYetList}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {\r\n                                    function () {\r\n                                        if ((contests.selectedContest) && (contests.modificationState === ContestModificationStatus.Remove)) {\r\n                                            return (\r\n                                                <Popup\r\n                                                    open={popup1}\r\n                                                    onClose={() => setPopup1(false)}\r\n                                                    closeOnDocumentClick\r\n                                                >\r\n                                                    <div className=\"popup-modal\" id=\"popup-modal\">\r\n                                                        <div className=\"popup-title\">\r\n                                                            Are you sure?\r\n                                                        </div>\r\n                                                        <div className=\"popup-content\">\r\n                                                            <button type=\"button\"\r\n                                                                className=\"btn btn-danger\"\r\n                                                                onClick={() => {\r\n                                                                    if (!contests.selectedContest) {\r\n                                                                        return;\r\n                                                                    }\r\n                                                                    dispatch(deleteContest(contests.selectedContest.id))\r\n                                                                    dispatch(addNotification(\"Khóa học \", `${contests.selectedContest.id} đã được xóa`));\r\n                                                                    dispatch(removeContest(contests.selectedContest.id));\r\n                                                                    dispatch(clearSelectedContest());\r\n                                                                    setPopup1(false);\r\n                                                                }}>Remove\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Popup>\r\n                                            )\r\n                                        }\r\n                                    }()\r\n                                }\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n\r\n                    else if (checked3 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\">Danh sách cuộc thi đã kết thúc</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ContestEndList\r\n                                                    onSelect={onContestSelectEndList}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Contest;\r\n","import { fetchDataRequest, fetchDataError, removeContest } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteContest(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/contest/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteContest(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(removeContest(id))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Fragment, Dispatch } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\n\r\nconst DegreePhoto: React.FC = () => {\r\n\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  dispatch(updateCurrentPath(\"Bằng cấp\", \"\"));\r\n\r\n  const { state } = useLocation<any>();\r\n  let x = \"\";\r\n  if (typeof state !== undefined){\r\n    x= state.degree_photo\r\n  }\r\n  console.log(x)\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"h3 mb-2 text-gray-800\">Bằng cấp</h1>\r\n      {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n      <div className=\"row\">\r\n\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-green\">Hình ảnh</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n            <img src={x} alt=\"\"/>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DegreePhoto;\r\n","import React, { useState, ChangeEvent } from \"react\";\nimport { CheckboxProps } from \"../types/Checkbox.types\";\n\nfunction Checkbox(props: CheckboxProps): JSX.Element {\n    const [touched, setTouch] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [htmlClass, setHtmlClass] = useState(\"\");\n    const [, setValue] = useState(false);\n\n\n    function onValueChanged(event: ChangeEvent<HTMLInputElement>): void {\n        let [error, validClass, elementValue] = [\"\", \"\", event.target.checked];\n\n        [error, validClass] = (!elementValue && props.required) ?\n            [\"Value has to be checked\", \"is-invalid\"] : [\"\", \"is-valid\"];\n\n\n        props.onChange({ value: elementValue, error: error, touched: touched, field: props.field });\n\n        setTouch(true);\n        setError(error);\n        setHtmlClass(validClass);\n        setValue(elementValue);\n    }\n\n    return (\n        <div className=\"form-check\">\n            <input\n                className={`form-check-input ${props.inputClass ? props.inputClass : \"\"} ${htmlClass}`}\n                type=\"checkbox\"\n                id={`id_${props.label}`}\n                checked={props.value}\n                onChange={onValueChanged} />\n            <label className=\"form-check-label\" htmlFor={props.id.toString()}>\n                {props.label}\n            </label>\n\n            {error ?\n                <div className=\"invalid-feedback\">\n                    {error}\n                </div> : null\n            }\n        </div>\n    );\n}\n\nexport default Checkbox;","import React, {useRef} from \"react\";\r\nimport ReactQuill, { Quill } from 'react-quill';\r\nimport EditorToolbar, { modules, formats } from \"./EditorToolbar\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"./Style.css\";\r\nimport ImageResize from 'quill-image-resize-module-react';\r\n\r\nQuill.register('modules/imageResize', ImageResize);\r\n\r\nexport const Editor = (props) => {\r\n  console.log('editor')\r\n  const reactQuillRef = useRef(null);\r\n  React.useEffect(() => {\r\n    if (reactQuillRef.current.getEditor() && !props.isCreate){\r\n        reactQuillRef.current.getEditor().clipboard.dangerouslyPasteHTML(props.setValue)\r\n    }\r\n  }, [reactQuillRef, props.isCreate, props.setValue]);\r\n  //console.log(reactQuillRef)\r\n  \r\n  //const quill = reactQuillRef.current.editor;\r\n  //console.log(quill)\r\n  //quill.clipboard.dangerouslyPasteHTML(props.setValue);\r\n  const [state, setState] = React.useState({ value: null });\r\n  const handleChange = value => {\r\n    setState({ value });\r\n    props.getValue(value)\r\n    //console.log(value)\r\n  };\r\n\r\n  console.log(state.value)\r\n  return (\r\n    <div className=\"text-editor\">\r\n      <EditorToolbar />\r\n      <ReactQuill\r\n        ref={reactQuillRef}\r\n        theme=\"snow\"\r\n        value={state.value}\r\n        onChange={handleChange}\r\n        placeholder={\"Write something awesome...\"}\r\n        modules={modules}\r\n        formats={formats}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import { ISectionTemplate, SectionTemplateModificationStatus } from \"../models/section_template.interface\";\r\nexport const ADD_SECTION_TEMPLATE: string = \"ADD_SECTION_TEMPLATE\";\r\nexport const EDIT_SECTION_TEMPLATE: string = \"EDIT_SECTION_TEMPLATE\";\r\nexport const REMOVE_SECTION_TEMPLATE: string = \"REMOVE_SECTION_TEMPLATE\";\r\nexport const CHANGE_SECTION_TEMPLATE_AMOUNT: string = \"CHANGE_SECTION_TEMPLATE_AMOUNT\";\r\nexport const CHANGE_SECTION_TEMPLATE_PENDING_EDIT: string = \"CHANGE_SECTION_TEMPLATE_PENDING_EDIT\";\r\nexport const CLEAR_SECTION_TEMPLATE_PENDING_EDIT: string = \"CLEAR_SECTION_TEMPLATE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SECTION_TEMPLATE_ALL: string = \"REMOVE_SECTION_TEMPLATE_ALL\";\r\nexport const INITIAL_SECTION_TEMPLATE: string = \"INITIAL_SECTION_TEMPLATE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(section_template: ISectionTemplate) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        section_template\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSectionTemplate(section_template: ISectionTemplate): IInitialSectionTemplateActionType {\r\n    return { type: INITIAL_SECTION_TEMPLATE, section_template: section_template };\r\n}\r\n\r\nexport function removeSectionTemplateAll(): IRemoveSectionTemplateAllActionType {\r\n    return { type: REMOVE_SECTION_TEMPLATE_ALL };\r\n}\r\n\r\nexport function addSectionTemplate(section_template: ISectionTemplate): IAddSectionTemplateActionType {\r\n    return { type: ADD_SECTION_TEMPLATE, section_template: section_template };\r\n}\r\n\r\nexport function editSectionTemplate(section_template: ISectionTemplate): IEditSectionTemplateActionType {\r\n    return { type: EDIT_SECTION_TEMPLATE, section_template: section_template };\r\n}\r\n\r\nexport function removeSectionTemplate(id: any): IRemoveSectionTemplateActionType {\r\n    return { type: REMOVE_SECTION_TEMPLATE, id: id };\r\n}\r\n\r\nexport function changeSelectedSectionTemplate(section_template: ISectionTemplate): IChangeSelectedSectionTemplateActionType {\r\n    return { type: CHANGE_SECTION_TEMPLATE_PENDING_EDIT, section_template: section_template };\r\n}\r\n\r\nexport function clearSelectedSectionTemplate(): IClearSelectedSectionTemplateActionType {\r\n    return { type: CLEAR_SECTION_TEMPLATE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateSectionTemplate(value: SectionTemplateModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddSectionTemplateActionType { type: string, section_template: ISectionTemplate };\r\ninterface IEditSectionTemplateActionType { type: string, section_template: ISectionTemplate };\r\ninterface IRemoveSectionTemplateActionType { type: string, id: any };\r\ninterface IChangeSelectedSectionTemplateActionType { type: string, section_template: ISectionTemplate };\r\ninterface IClearSelectedSectionTemplateActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  SectionTemplateModificationStatus};\r\ninterface IRemoveSectionTemplateAllActionType { type: string }\r\ninterface IInitialSectionTemplateActionType {type: string, section_template: ISectionTemplate}","import { ITutorialTemplate, TutorialTemplateModificationStatus } from \"../models/tutorial_template.interface\";\r\nexport const ADD_TUTORIAL_TEMPLATE: string = \"ADD_TUTORIAL_TEMPLATE\";\r\nexport const EDIT_TUTORIAL_TEMPLATE: string = \"EDIT_TUTORIAL_TEMPLATE\";\r\nexport const REMOVE_TUTORIAL_TEMPLATE: string = \"REMOVE_TUTORIAL_TEMPLATE\";\r\nexport const CHANGE_TUTORIAL_TEMPLATE_AMOUNT: string = \"CHANGE_TUTORIAL_TEMPLATE_AMOUNT\";\r\nexport const CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT: string = \"CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT\";\r\nexport const CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT: string = \"CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_TUTORIAL_TEMPLATE_ALL: string = \"REMOVE_TUTORIAL_TEMPLATE_ALL\";\r\nexport const INITIAL_TUTORIAL_TEMPLATE: string = \"INITIAL_TUTORIAL_TEMPLATE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(tutorial_template: ITutorialTemplate) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        tutorial_template\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialTutorialTemplate(tutorial_template: ITutorialTemplate): IInitialTutorialTemplateActionType {\r\n    return { type: INITIAL_TUTORIAL_TEMPLATE, tutorial_template: tutorial_template };\r\n}\r\n\r\nexport function removeTutorialTemplateAll(): IRemoveTutorialTemplateAllActionType {\r\n    return { type: REMOVE_TUTORIAL_TEMPLATE_ALL };\r\n}\r\n\r\nexport function addTutorialTemplate(tutorial_template: ITutorialTemplate): IAddTutorialTemplateActionType {\r\n    return { type: ADD_TUTORIAL_TEMPLATE, tutorial_template: tutorial_template };\r\n}\r\n\r\nexport function editTutorialTemplate(tutorial_template: ITutorialTemplate): IEditTutorialTemplateActionType {\r\n    return { type: EDIT_TUTORIAL_TEMPLATE, tutorial_template: tutorial_template };\r\n}\r\n\r\nexport function removeTutorialTemplate(id: any): IRemoveTutorialTemplateActionType {\r\n    return { type: REMOVE_TUTORIAL_TEMPLATE, id: id };\r\n}\r\n\r\nexport function changeSelectedTutorialTemplate(tutorial_template: ITutorialTemplate): IChangeSelectedTutorialTemplateActionType {\r\n    return { type: CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT, tutorial_template: tutorial_template };\r\n}\r\n\r\nexport function clearSelectedTutorialTemplate(): IClearSelectedTutorialTemplateActionType {\r\n    return { type: CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateTutorialTemplate(value: TutorialTemplateModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddTutorialTemplateActionType { type: string, tutorial_template: ITutorialTemplate };\r\ninterface IEditTutorialTemplateActionType { type: string, tutorial_template: ITutorialTemplate };\r\ninterface IRemoveTutorialTemplateActionType { type: string, id: any };\r\ninterface IChangeSelectedTutorialTemplateActionType { type: string, tutorial_template: ITutorialTemplate };\r\ninterface IClearSelectedTutorialTemplateActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  TutorialTemplateModificationStatus};\r\ninterface IRemoveTutorialTemplateAllActionType { type: string }\r\ninterface IInitialTutorialTemplateActionType {type: string, tutorial_template: ITutorialTemplate}","import { fetchDataRequest } from \"../../../store/actions/tutorial_template.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postTutorialTemplatePage } from \"../TutorialTemplatePage/PostTutorialTemplatePage\";\r\n\r\nexport function postTutorialTemplate1(data: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/tutorial-template`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postTutorialTemplate1(data))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (xx => {\r\n                console.log(xx)\r\n                dispatch(postTutorialTemplatePage({\r\n                    tutorial_template_id: xx.id,\r\n                    name: \"\",\r\n                    description: \"\",\r\n                    number: 1\r\n                }))\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getTutorialTemplatePageByTutorialTemplateId } from \"./GetTutorialTemplatePageByTutorialTemplateId\";\r\n\r\nexport function postTutorialTemplatePage(tutorialtemplatepage: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/tutorial-template-page`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(tutorialtemplatepage)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postTutorialTemplatePage(tutorialtemplatepage))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(getTutorialTemplatePageByTutorialTemplateId(tutorialtemplatepage.tutorial_template_id))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataSuccess, fetchDataError, removeSectionTemplateAll, initialSectionTemplate, addSectionTemplate } from \"../../../store/actions/section_template.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface SectionTemplate {\r\n    id: any;\r\n    creator_id: number;\r\n    course_id: number;\r\n    name: string;\r\n    description: string;\r\n    number: number;\r\n    teaching_form: boolean;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getSectionTemplate(dispatch:  any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/section-template?page=0&size=5`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSectionTemplate(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeSectionTemplateAll())\r\n                console.log(data.body.SectionTemplate)\r\n                data.body.SectionTemplate.map((ele: any, index: any) => {\r\n                    var section_template: SectionTemplate = {\r\n                        id: ele.id,\r\n                        creator_id: ele.creator_id,\r\n                        course_id: ele.course_id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        number: ele.number,\r\n                        teaching_form: ele.teaching_form,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialSectionTemplate(section_template));\r\n                    }\r\n                    else{\r\n                        return dispatch(addSectionTemplate(section_template))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/course.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postSectionTemplate1 } from \"../SectionTemplate/PostSectionTemplate1\";\r\nimport { getCourse } from \"./GetCourse\";\r\n\r\nexport function postCourse(course: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/course`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(course)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postCourse(course, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Thêm khóa học thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                getCourse(dispatch)\r\n                dispatch(postSectionTemplate1({\r\n                    creator_id: localStorage.getItem('id'),\r\n                    course_id: data.id,\r\n                    name: \"\",\r\n                    number: 1,\r\n                    teaching_form: true\r\n                }, data.num_of_section))\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Thêm khóa học không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/section_template.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postTutorialTemplate1 } from \"../TutorialTemplate/PostTutorialTemplate1\";\r\nimport { getSectionTemplate } from \"./GetSectionTemplate\";\r\n\r\nexport function postSectionTemplate1(data: any, num_of_section: number) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/section-template`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postSectionTemplate1(data, num_of_section))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (xx => {\r\n                console.log(xx)\r\n                getSectionTemplate(dispatch)\r\n                dispatch(postTutorialTemplate1({\r\n                        section_template_id: xx.id,\r\n                        name: data.name,\r\n                        creator_id: localStorage.getItem('id')\r\n                }))\r\n                if (data.number+1 <= num_of_section) {\r\n                    dispatch(postSectionTemplate1({\r\n                        creator_id: localStorage.getItem('id'),\r\n                        course_id: data.course_id,\r\n                        name: \"\",\r\n                        number: data.number + 1,\r\n                        teaching_form: \"\"\r\n                    }, num_of_section))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/course.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getCourse } from \"./GetCourse\";\r\n\r\nexport function putCourse(id: any,data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/course/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putCourse(id, data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                console.log(id)\r\n                toast.update(idx, { render: \"Chỉnh khóa học thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                getCourse(dispatch)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Chỉnh khóa học không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch, Fragment, useEffect } from \"react\";\r\nimport { IStateType, IRootPageStateType, IArtLevelState, IArtTypeState, IArtAgeState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ICourse, CourseModificationStatus } from \"../../store/models/course.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editCourse, clearSelectedCourse, setModificationState, addCourse } from \"../../store/actions/course.action\";\r\nimport NumberInput from \"../../common/components/NumberInput\";\r\nimport Checkbox from \"../../common/components/Checkbox\";\r\nimport { OnChangeModel, ICourseNomalFormState } from \"../../common/types/Form.types\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport Editor from \"../../common/components/Quill/Editor\";\r\nimport { IArtLevel } from \"../../store/models/art_level.interface\";\r\nimport { IArtType } from \"../../store/models/art_type.interface\";\r\nimport { IArtAge } from \"../../store/models/art_age.interface\";\r\nimport SelectKeyValue from \"../../common/components/SelectKeyValue\";\r\nimport { getArtType } from \"../../common/service/ArtType/GetArtType\";\r\nimport { getArtLevel } from \"../../common/service/ArtLevel/GetArtLevel\";\r\nimport { getArtAge } from \"../../common/service/ArtAge/GetArtAge\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { postCourse } from \"../../common/service/Course/PostCourse\";\r\nimport { putCourse } from \"../../common/service/Course/PutCourse\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\ntype Options = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\n\r\nconst CourseNomalForm: React.FC = () => {\r\n    //console.log(id)\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n    //console.log(courses)\r\n    const { state } = useLocation()\r\n    console.log(state)\r\n    let course: ICourse | null = null;\r\n    if (typeof state != \"undefined\"){\r\n        course = state.course_value;\r\n    }\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    //console.log(course)\r\n    const isCreate: boolean = true;\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khóa học\", \"\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    useEffect(() => {\r\n        trackPromise(getArtType(dispatch))\r\n        trackPromise(getArtLevel(dispatch))\r\n        trackPromise(getArtAge(dispatch))\r\n\r\n    }, [dispatch])\r\n\r\n    if (!course || isCreate) {\r\n        course = { id: 0, name: \"\", description: \"\", max_participant: 0, num_of_section: 0, price: 0, image_url: \"\", is_enabled: false, creator_id: 0, art_age_id: 0, art_level_id: 0, art_type_id: 0, create_time: \"\", update_time: \"\", art_age_name: \"\", art_level_name: \"\", art_type_name: \"\", checked_tutoral: false };\r\n    }\r\n\r\n    const levels: IArtLevelState = useSelector((state: IStateType) => state.art_levels);\r\n    const listLevel: IArtLevel[] = levels.artLevels\r\n    //console.log(listLevel)\r\n    const listLevels: Options[] = [];\r\n    listLevel.map((ele) => {\r\n        let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n        return listLevels.push(item)\r\n    })\r\n\r\n    const mytypes: IArtTypeState = useSelector((state: IStateType) => state.art_types);\r\n    const listMytype: IArtType[] = mytypes.artTypes\r\n    const listMytypes: Options[] = [];\r\n    listMytype.map((ele) => {\r\n        let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n        return listMytypes.push(item)\r\n    })\r\n\r\n    const art_ages: IArtAgeState = useSelector((state: IStateType) => state.art_ages);\r\n    const listArtAge: IArtAge[] = art_ages.artAges\r\n    const listArtAges: Options[] = [];\r\n    listArtAge.map((ele) => {\r\n        let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n        return listArtAges.push(item)\r\n    })\r\n\r\n    const history = useHistory();\r\n\r\n    function routeHome() {\r\n        dispatch(setModificationState(CourseModificationStatus.None));\r\n        let path = `/courses`;\r\n        history.push(path);\r\n    }\r\n\r\n    const src = \"https://thumbs.dreamstime.com/b/default-avatar-profile-vector-user-profile-default-avatar-profile-vector-user-profile-profile-179376714.jpg\"\r\n\r\n    const [preview, setPreview] = useState(src)\r\n\r\n    const [formState, setFormState] = useState({\r\n        name: { error: \"\", value: course.name },\r\n        description: { error: \"\", value: course.description },\r\n        art_type_id: { error: \"\", value: course.art_type_id },\r\n        art_level_id: { error: \"\", value: course.art_level_id },\r\n        art_age_id: { error: \"\", value: course.art_age_id },\r\n        num_of_section: { error: \"\", value: course.num_of_section },\r\n        price: { error: \"\", value: course.price },\r\n        image_url: { error: \"\", value: course.image_url },\r\n        is_enabled: { error: \"\", value: course.is_enabled },\r\n        creator_id: { error: \"\", value: course.creator_id },\r\n        create_time: { error: \"\", value: course.create_time },\r\n        update_time: { error: \"\", value: course.update_time }\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    async function saveUser(e: FormEvent<HTMLFormElement>){\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n\r\n        const id = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n\r\n        var url = await setImageAction();\r\n\r\n        let saveUserFn: Function = (isCreate) ? addCourse : editCourse;\r\n        saveForm(formState, saveUserFn, url, id);\r\n    }\r\n\r\n    function saveForm(formState: ICourseNomalFormState, saveFn: Function, url: string, idx: any): void {\r\n        if (course) {\r\n            if (saveFn === addCourse) {\r\n                dispatch(postCourse({\r\n                    name: formState.name.value,\r\n                    description: textHtml,\r\n                    num_of_section: formState.num_of_section.value,\r\n                    price: formState.price.value,\r\n                    image_url: url,\r\n                    is_enabled: formState.is_enabled.value,\r\n                    art_type_id: formState.art_type_id.value,\r\n                    art_age_id: formState.art_age_id.value,\r\n                    art_level_id: formState.art_level_id.value,\r\n                    creator_id: localStorage.getItem('id')\r\n                }, idx))\r\n            }\r\n\r\n            else if (saveFn === editCourse) {\r\n                dispatch(putCourse(course.id, {\r\n                    name: formState.name.value,\r\n                    description: textHtml,\r\n                    num_of_section: formState.num_of_section.value,\r\n                    price: formState.price.value,\r\n                    image_url: url,\r\n                    is_enabled: formState.is_enabled.value,\r\n                    art_type_id: formState.art_type_id.value,\r\n                    art_age_id: formState.art_age_id.value,\r\n                    art_level_id: formState.art_level_id.value,\r\n                    creator_id: localStorage.getItem('id')\r\n                }, idx))\r\n            }\r\n\r\n            dispatch(clearSelectedCourse());\r\n            dispatch(setModificationState(CourseModificationStatus.None));\r\n            setTimeout(function () {\r\n                routeHome();\r\n            }, 2000); \r\n        }\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        dispatch(setModificationState(CourseModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.description.error\r\n            || formState.name.error || formState.num_of_section.error || formState.price.error\r\n            || preview === \"https://thumbs.dreamstime.com/b/default-avatar-profile-vector-user-profile-default-avatar-profile-vector-user-profile-profile-179376714.jpg\" || !formState.name.value || !formState.num_of_section.value ) as boolean;\r\n    }\r\n\r\n    const [textHtml, setTextHtml] = useState<string>(\"\")\r\n    function getValue(value: string) {\r\n        setTextHtml(value);\r\n    }\r\n\r\n    const [image, setImage] = useState<any>();\r\n\r\n    const uploadPicture = (e: any) => {\r\n        setImage({\r\n            /* contains the preview, if you want to show the picture to the user\r\n                you can access it with this.state.currentPicture\r\n           */\r\n            picturePreview : URL.createObjectURL(e.target.files[0]),\r\n            /* this contains the file we want to send */\r\n            pictureAsFile : e.target.files[0]\r\n        })\r\n        setPreview(URL.createObjectURL(e.target.files[0]))\r\n    };\r\n\r\n    console.log(image)\r\n\r\n    async function setImageAction(){\r\n        const formData = new FormData();\r\n        formData.append(\r\n            \"gifFile\",\r\n            image.pictureAsFile\r\n        );\r\n        // do your post request\r\n        const res = await fetch(\r\n            `${process.env.REACT_APP_API_URL}/cloudinary/gifs`, {\r\n                method: \"POST\",\r\n                body: formData\r\n            }\r\n        )\r\n        const data = await res.json()\r\n        return data.url_image\r\n\r\n    };\r\n\r\n    //console.log('Input',textHtml)\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"col-xl-12 col-lg-12\">\r\n                <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} khóa học chung</h6>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={saveUser}>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label htmlFor=\"profile_image\">Chọn ảnh:</label>\r\n                                    <input type=\"file\" id=\"profile_image\" name=\"profile_image\" onChange={uploadPicture}/>\r\n                                </div>\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <img src={preview} alt=\"Preview\" id=\"avatar\"/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <TextInput id=\"input_name\"\r\n                                        field=\"name\"\r\n                                        value={formState.name.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        maxLength={100}\r\n                                        label=\"Tên khóa học\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <NumberInput id=\"input_price\"\r\n                                        value={formState.price.value}\r\n                                        field=\"price\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        max={10000000}\r\n                                        min={0}\r\n                                        label=\"Giá\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                <SelectKeyValue id=\"input_art_type_id\"\r\n                                    field = \"art_type_id\"\r\n                                    value={formState.art_type_id.value}\r\n                                    onChange={hasFormValueChanged}\r\n                                    required={true}\r\n                                    label=\"Thể loại\"\r\n                                    options={listMytypes}\r\n                                />\r\n                                </div>\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <SelectKeyValue\r\n                                        id=\"input_art_level_id\"\r\n                                        field=\"art_level_id\"\r\n                                        label=\"Mức độ\"\r\n                                        options={listLevels}\r\n                                        required={true}\r\n                                        onChange={hasFormValueChanged}\r\n                                        value={formState.art_level_id.value}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <SelectKeyValue\r\n                                        id=\"input_art_age_id\"\r\n                                        field=\"art_age_id\"\r\n                                        label=\"Mức độ\"\r\n                                        options={listArtAges}\r\n                                        required={true}\r\n                                        onChange={hasFormValueChanged}\r\n                                        value={formState.art_age_id.value}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <Checkbox\r\n                                        id=\"input_is_enabled\"\r\n                                        field=\"is_enabled\"\r\n                                        value={formState.is_enabled.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        label=\"Mở\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <NumberInput id=\"input_num_of_section\"\r\n                                        value={formState.num_of_section.value}\r\n                                        field=\"num_of_section\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        max={1000}\r\n                                        min={0}\r\n                                        label=\"Số buổi học\" \r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Miêu tả</label>\r\n                                <Editor getValue={getValue} isCreate={isCreate} setValue={formState.description.value}/>\r\n                            </div>\r\n\r\n                            <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                            <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default CourseNomalForm;\r\n","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester.actions\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postUserGradeContest(data: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-grade-contest`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postUserGradeContest(data))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { deleteUserGradeContestByContest } from \"../UserGradeContest/DeleteUserGradeContestByContest\";\r\nimport { postUserGradeContest } from \"../UserGradeContest/PostUserGradeContest\";\r\nimport { getContest } from \"./GetContest\";\r\n\r\nexport function putContest(id: any,data: any, valueTeacher: any[], idx: any, routeHome: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putContest(id,data, valueTeacher, idx, routeHome))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                console.log(id)\r\n                dispatch(deleteUserGradeContestByContest(id));\r\n                valueTeacher.map((value, index) =>  {\r\n                    return dispatch(postUserGradeContest({\r\n                        contest_id: id,\r\n                        teacher_id: value.value\r\n                    }))\r\n                })\r\n                toast.update(idx, { render: \"Chỉnh cuộc thi thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                setTimeout(function () {\r\n                    routeHome(true);\r\n                }, 2000);\r\n                getContest(dispatch) \r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Chỉnh cuộc thi không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteUserGradeContestByContest(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/user-grade-contest/contest/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteUserGradeContestByContest(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState } from 'react';\r\nimport Select from 'react-select';\r\n\r\nexport default function ReactSelect(props) {\r\n    const [selectedOption, setSelectedOption] = useState(props.value);\r\n    const handleChange = (selectedOption) => {\r\n        setSelectedOption(selectedOption);\r\n        props.changeValue(selectedOption)\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Select\r\n                isMulti={true}\r\n                defaultValue={selectedOption}\r\n                onChange={handleChange}\r\n                options={props.setValue}\r\n            />\r\n        </div>\r\n    );\r\n}","import { IUserGradeContest, UserGradeContestModificationStatus } from \"../models/user_grade_contest.interface\";\r\nexport const ADD_TUTORIAL_TEMPLATE: string = \"ADD_TUTORIAL_TEMPLATE\";\r\nexport const EDIT_TUTORIAL_TEMPLATE: string = \"EDIT_TUTORIAL_TEMPLATE\";\r\nexport const REMOVE_TUTORIAL_TEMPLATE: string = \"REMOVE_TUTORIAL_TEMPLATE\";\r\nexport const CHANGE_TUTORIAL_TEMPLATE_AMOUNT: string = \"CHANGE_TUTORIAL_TEMPLATE_AMOUNT\";\r\nexport const CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT: string = \"CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT\";\r\nexport const CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT: string = \"CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_TUTORIAL_TEMPLATE_ALL: string = \"REMOVE_TUTORIAL_TEMPLATE_ALL\";\r\nexport const INITIAL_TUTORIAL_TEMPLATE: string = \"INITIAL_TUTORIAL_TEMPLATE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(user_grade_contest: IUserGradeContest) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        user_grade_contest\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialUserGradeContest(user_grade_contest: IUserGradeContest): IInitialUserGradeContestActionType {\r\n    return { type: INITIAL_TUTORIAL_TEMPLATE, user_grade_contest: user_grade_contest };\r\n}\r\n\r\nexport function removeUserGradeContestAll(): IRemoveUserGradeContestAllActionType {\r\n    return { type: REMOVE_TUTORIAL_TEMPLATE_ALL };\r\n}\r\n\r\nexport function addUserGradeContest(user_grade_contest: IUserGradeContest): IAddUserGradeContestActionType {\r\n    return { type: ADD_TUTORIAL_TEMPLATE, user_grade_contest: user_grade_contest };\r\n}\r\n\r\nexport function editUserGradeContest(user_grade_contest: IUserGradeContest): IEditUserGradeContestActionType {\r\n    return { type: EDIT_TUTORIAL_TEMPLATE, user_grade_contest: user_grade_contest };\r\n}\r\n\r\nexport function removeUserGradeContest(id: any): IRemoveUserGradeContestActionType {\r\n    return { type: REMOVE_TUTORIAL_TEMPLATE, id: id };\r\n}\r\n\r\nexport function changeSelectedUserGradeContest(user_grade_contest: IUserGradeContest): IChangeSelectedUserGradeContestActionType {\r\n    return { type: CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT, user_grade_contest: user_grade_contest };\r\n}\r\n\r\nexport function clearSelectedUserGradeContest(): IClearSelectedUserGradeContestActionType {\r\n    return { type: CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateUserGradeContest(value: UserGradeContestModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddUserGradeContestActionType { type: string, user_grade_contest: IUserGradeContest };\r\ninterface IEditUserGradeContestActionType { type: string, user_grade_contest: IUserGradeContest };\r\ninterface IRemoveUserGradeContestActionType { type: string, id: any };\r\ninterface IChangeSelectedUserGradeContestActionType { type: string, user_grade_contest: IUserGradeContest };\r\ninterface IClearSelectedUserGradeContestActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  UserGradeContestModificationStatus};\r\ninterface IRemoveUserGradeContestAllActionType { type: string }\r\ninterface IInitialUserGradeContestActionType {type: string, user_grade_contest: IUserGradeContest}","import { fetchDataSuccess, fetchDataError, initialUserGradeContest, addUserGradeContest, removeUserGradeContestAll} from \"../../../store/actions/user_grade_contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user_grade_contest {\r\n    id: any;\r\n    contest_id: number;\r\n    teacher_id: number;\r\n    teacher_name: string;\r\n    contest_name: string;\r\n}\r\nexport function getUserGradeContestByContestId(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-grade-contest/contest/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserGradeContestByContestId(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeUserGradeContestAll())\r\n                console.log(data.body.teacher_grade_contest)\r\n                data.body.teacher_grade_contest.map((ele: any, index: any) => {\r\n                    var user_grade_contest: user_grade_contest = {\r\n                        id: ele.id,\r\n                        contest_id: ele.contest_id,\r\n                        teacher_id: ele.teacher_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        contest_name: ele.contest_name\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialUserGradeContest(user_grade_contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addUserGradeContest(user_grade_contest))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, ChangeEvent } from \"react\";\r\nimport { DateInputProps } from \"../types/DateInput.types\";\r\n\r\nfunction DateInput1(props: DateInputProps): JSX.Element {\r\n    const [touched, setTouch] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [htmlClass, setHtmlClass] = useState(\"\");\r\n    const [, setValue] = useState(\"\");\r\n\r\n\r\n    function onValueChanged(event: ChangeEvent<HTMLInputElement>): void {\r\n        let [error, validClass, elementValue] = [\"\", \"\", event.target.value];\r\n\r\n        [error, validClass] = (!elementValue && props.required) ?\r\n            [\"Value cannot be empty\", \"is-invalid\"] : [\"\", \"is-valid\"];\r\n\r\n        if (!error) {\r\n            [error, validClass] = (props.maxLength && elementValue && elementValue < (props.maxLength)) ?\r\n            [`Value can't have more than ${props.maxLength.substring(0,10)} ${props.maxLength.substring(11,25)} characters`, \"is-invalid\"] : [\"\", \"is-valid\"];\r\n        }\r\n\r\n        props.onChange({ value: elementValue, error: error, touched: touched, field: props.field });\r\n\r\n        setTouch(true);\r\n        setError(error);\r\n        setHtmlClass(validClass);\r\n        setValue(elementValue);\r\n    }\r\n\r\n    console.log(props.active)\r\n\r\n    return (\r\n        <div>\r\n            <label htmlFor={props.id.toString()}>{props.label}</label>\r\n            <input\r\n                value={props.value}\r\n                type={props.type}\r\n                onChange={onValueChanged}\r\n                className={`form-control ${props.inputClass} ${htmlClass}'}`}\r\n                disabled={props.active}\r\n                id={`id_${props.label}`}\r\n                placeholder={props.placeholder} />\r\n            {error ?\r\n                <div className=\"invalid-feedback\">\r\n                    {error}\r\n                </div> : null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DateInput1;","import React, { useState, FormEvent, Dispatch, Fragment, useEffect } from \"react\";\r\nimport { IStateType, IContestState, IArtTypeState, IArtAgeState, IUserState, IUserGradeContestState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ContestModificationStatus, IContest } from \"../../store/models/contest.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editContest, clearSelectedContest, setModificationState, addContest } from \"../../store/actions/contest.action\";\r\nimport NumberInput from \"../../common/components/NumberInput\";\r\nimport Checkbox from \"../../common/components/Checkbox\";\r\nimport { OnChangeModel, IContestFormState } from \"../../common/types/Form.types\";\r\nimport { postContest } from \"../../common/service/Contest/PostContest\";\r\nimport { putContest } from \"../../common/service/Contest/PutContest\";\r\nimport SelectKeyValue from \"../../common/components/SelectKeyValue\";\r\nimport { getArtType } from \"../../common/service/ArtType/GetArtType\";\r\nimport { getArtAge } from \"../../common/service/ArtAge/GetArtAge\";\r\nimport { IArtType } from \"../../store/models/art_type.interface\";\r\nimport { IArtAge } from \"../../store/models/art_age.interface\";\r\nimport Editor from \"../../common/components/Quill/Editor\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactSelect from \"../../common/components/ReactSelect\";\r\nimport { IUser } from \"../../store/models/user.interface\";\r\nimport { getUserGradeContestByContestId } from \"../../common/service/UserGradeContest/GetUserGradeContestByContestId\";\r\nimport { getTeacher } from \"../../common/service/Teacher/GetTeacher\";\r\nimport { IUserGradeContest } from \"../../store/models/user_grade_contest.interface\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport DateInput from \"../../common/components/DateInput\";\r\nimport DateInput2 from \"../../common/components/DateInput2\";\r\nimport DateInput1 from \"../../common/components/DateInput1\";\r\n\r\ntype Options = {\r\n  name: string;\r\n  value: any;\r\n}\r\n\r\ntype Option1 = {\r\n  label: string;\r\n  value: number;\r\n}\r\n\r\nconst ContestForm: React.FC = () => {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const contests: IContestState | null = useSelector((state: IStateType) => state.contests);\r\n  var contest: IContest | null = contests.selectedContest;\r\n  var id_x = localStorage.getItem('contest_id');\r\n  let contest_id: number = 0;\r\n  if (id_x !== null) {\r\n    contest_id = parseInt(id_x)\r\n  }\r\n\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n  const isCreate: boolean = (contests.modificationState === ContestModificationStatus.Create);\r\n\r\n  if (isCreate || contest === null){\r\n      contest = { id: 0, name: \"\", total_contest_submission: 0, total_contest_submission_graded: 0, total_register_contest: 0,  description: \"\", max_participant: 0, creator_id: 0, is_enabled: false, registration_time: \"\", start_time: \"\", end_time: \"\", create_time: \"\", update_time: \"\", image_url: \"https://thumbs.dreamstime.com/b/default-avatar-profile-vector-user-profile-default-avatar-profile-vector-user-profile-profile-179376714.jpg\", art_age_id: 0, art_type_id: 0, art_age_name: \"\", art_type_name: \"\" };\r\n  }\r\n  useEffect(() => {\r\n    trackPromise(getArtType(dispatch))\r\n    trackPromise(getArtAge(dispatch))\r\n    trackPromise(getTeacher(dispatch))\r\n    trackPromise(getUserGradeContestByContestId(dispatch, contest_id))\r\n  }, [dispatch, contest_id])\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getArtAge(dispatch))\r\n                    trackPromise(getArtType(dispatch))\r\n                    trackPromise(getTeacher(dispatch))\r\n                    trackPromise(getUserGradeContestByContestId(dispatch, contest_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getArtAge(dispatch))\r\n                trackPromise(getArtType(dispatch))\r\n                trackPromise(getTeacher(dispatch))\r\n                trackPromise(getUserGradeContestByContestId(dispatch, contest_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, contest_id])\r\n  \r\n\r\n  const mytypes: IArtTypeState = useSelector((state: IStateType) => state.art_types);\r\n  const listMytype: IArtType[] = mytypes.artTypes\r\n  const listMytypes: Options[] = [];\r\n  listMytype.map((ele) => {\r\n    let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n    return listMytypes.push(item)\r\n  })\r\n\r\n  const users: IUserState = useSelector((state: IStateType) => state.users);\r\n  const listTeacher: IUser[] = users.teachers\r\n  const listTeachers: Option1[] = [];\r\n  listTeacher.map((ele) => {\r\n    let item: Option1 = { \"label\": ele.username, \"value\": ele.id }\r\n    return listTeachers.push(item)\r\n  })\r\n\r\n  const user_grade_contests: IUserGradeContestState = useSelector((state: IStateType) => state.user_grade_contests);\r\n  const listTeacherGradeContest: IUserGradeContest[] = user_grade_contests.userGradeContests;\r\n  const listTeacherGradeContests: Option1[] = [];\r\n  listTeacherGradeContest.map((ele) => {\r\n    let item: Option1 = { \"label\": ele.teacher_name, \"value\": ele.teacher_id }\r\n    return listTeacherGradeContests.push(item)\r\n  })\r\n\r\n  console.log(listTeacherGradeContests)\r\n  const art_ages: IArtAgeState = useSelector((state: IStateType) => state.art_ages);\r\n  const listArtAge: IArtAge[] = art_ages.artAges\r\n  const listArtAges: Options[] = [];\r\n  listArtAge.map((ele) => {\r\n    let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n    return listArtAges.push(item)\r\n  })\r\n\r\n  const src = contest.image_url;\r\n\r\n  const [preview, setPreview] = useState(src)\r\n\r\n  const [formState, setFormState] = useState({\r\n    name: { error: \"\", value: contest.name },\r\n    description: { error: \"\", value: contest.description },\r\n    max_participant: { error: \"\", value: contest.max_participant },\r\n    registration_time: { error: \"\", value: contest.registration_time },\r\n    is_enabled: { error: \"\", value: contest.is_enabled },\r\n    image_url: { error: \"\", value: contest.image_url },\r\n    start_time: { error: \"\", value: contest.start_time },\r\n    end_time: { error: \"\", value: contest.end_time },\r\n    creator_id: { error: \"\", value: contest.creator_id },\r\n    create_time: { error: \"\", value: contest.create_time },\r\n    update_time: { error: \"\", value: contest.update_time },\r\n    art_age_id: { error: \"\", value: contest.art_age_id },\r\n    art_type_id: { error: \"\", value: contest.art_type_id },\r\n  });\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n  }\r\n\r\n  async function saveUser(e: FormEvent<HTMLFormElement>) {\r\n    e.preventDefault();\r\n    if (isFormInvalid()) {\r\n      return;\r\n    }\r\n\r\n    const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n      position: toast.POSITION.TOP_CENTER\r\n    });\r\n\r\n    var url = await setImageAction();\r\n\r\n    let saveUserFn: Function = (isCreate) ? addContest : editContest;\r\n    saveForm(formState, saveUserFn, url, idx);\r\n  }\r\n\r\n  const history = useHistory();\r\n\r\n  function routeHome() {\r\n      let path = `/contests`;\r\n      history.push(path);\r\n  }\r\n\r\n  function saveForm(formState: IContestFormState, saveFn: Function, url: string, idx: any):void {\r\n    if (contest) {\r\n      if (saveFn === addContest) {\r\n        dispatch(postContest(valueTeacher,{\r\n          name: formState.name.value,\r\n          description: textHtml,\r\n          registration_time: formState.registration_time.value,\r\n          image_url: url,\r\n          is_enabled: formState.is_enabled.value,\r\n          creator_id: localStorage.getItem('id'),\r\n          max_participant: formState.max_participant.value,\r\n          start_time: formState.start_time.value,\r\n          end_time: formState.end_time.value,\r\n          art_age_id: formState.art_age_id.value,\r\n          art_type_id: formState.art_type_id.value\r\n        }, idx, routeHome))\r\n      }\r\n\r\n      else if (saveFn === editContest) {\r\n        dispatch(putContest(contest.id, {\r\n          name: formState.name.value,\r\n          description: textHtml,\r\n          registration_time: formState.registration_time.value,\r\n          image_url: url,\r\n          is_enabled: formState.is_enabled.value,\r\n          creator_id: localStorage.getItem('id'),\r\n          max_participant: formState.max_participant.value,\r\n          start_time: formState.start_time.value,\r\n          end_time: formState.end_time.value,\r\n          art_age_id: formState.art_age_id.value,\r\n          art_type_id: formState.art_type_id.value\r\n        },valueTeacher,  idx, routeHome))\r\n      }\r\n\r\n      dispatch(clearSelectedContest());\r\n      dispatch(setModificationState(ContestModificationStatus.None)); \r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    dispatch(setModificationState(ContestModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid();\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  function isFormInvalid(): boolean {\r\n    return (formState.max_participant.error || formState.description.error\r\n      || formState.name.error || formState.registration_time.error || formState.start_time.error\r\n      || formState.end_time.error || !formState.art_age_id.value || !formState.art_type_id.value\r\n      || !formState.name.value || !formState.registration_time.value || !formState.start_time.value\r\n      || !formState.end_time.value) as boolean;\r\n  }\r\n\r\n  const [textHtml, setTextHtml] = useState<string>(\"\")\r\n  function getValue(value: string) {\r\n    setTextHtml(value);\r\n  }\r\n\r\n\r\n  const [image, setImage] = useState<any>();\r\n\r\n  const uploadPicture = (e: any) => {\r\n    setImage({\r\n      /* contains the preview, if you want to show the picture to the user\r\n          you can access it with this.state.currentPicture\r\n     */\r\n      picturePreview: URL.createObjectURL(e.target.files[0]),\r\n      /* this contains the file we want to send */\r\n      pictureAsFile: e.target.files[0]\r\n    })\r\n    setPreview(URL.createObjectURL(e.target.files[0]))\r\n  };\r\n\r\n  async function setImageAction() {\r\n    const formData = new FormData();\r\n    formData.append(\r\n      \"gifFile\",\r\n      image.pictureAsFile\r\n    );\r\n    // do your post request\r\n    const res = await fetch(\r\n      `${process.env.REACT_APP_API_URL}/cloudinary/gifs`, {\r\n      method: \"POST\",\r\n      body: formData\r\n    }\r\n    )\r\n    const data = await res.json()\r\n    return data.url_image\r\n\r\n  };\r\n\r\n  const [valueTeacher, setValueTeacher] = useState<any[]>([])\r\n\r\n  function changeValueTeacher(value: any){\r\n    setValueTeacher(value)\r\n  }\r\n\r\n  var now = new Date();\r\n  now.setMinutes(now.getMinutes() - now.getTimezoneOffset());\r\n  var time_now = now.toISOString().slice(0,16);\r\n\r\n  console.log(formState.start_time.value)\r\n\r\n  console.log(formState.start_time.value !== null && formState.start_time.value !== \"\" ? false: true)\r\n\r\n  return (\r\n    promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n      <ToastContainer />\r\n      <div className=\"col-xl-12 col-lg-12\">\r\n        <div className=\"card shadow mb-4\">\r\n          <div className=\"card-header py-3\">\r\n            <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} cuộc thi</h6>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={saveUser}>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <label htmlFor=\"profile_image\">Chọn ảnh:</label>\r\n                  <input type=\"file\" id=\"profile_image\" name=\"profile_image\" onChange={uploadPicture} />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <img src={preview} alt=\"Preview\" id=\"avatar\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                  <TextInput id=\"input_name\"\r\n                    field=\"name\"\r\n                    value={formState.name.value}\r\n                    onChange={hasFormValueChanged}\r\n                    required={false}\r\n                    maxLength={100}\r\n                    label=\"Tên khóa học\"\r\n                    placeholder=\"\" />\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <SelectKeyValue id=\"input_art_type_id\"\r\n                    field=\"art_type_id\"\r\n                    value={formState.art_type_id.value}\r\n                    onChange={hasFormValueChanged}\r\n                    required={true}\r\n                    label=\"Thể loại\"\r\n                    options={listMytypes}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <SelectKeyValue\r\n                    id=\"input_art_age_id\"\r\n                    field=\"art_age_id\"\r\n                    label=\"Mức độ\"\r\n                    options={listArtAges}\r\n                    required={true}\r\n                    onChange={hasFormValueChanged}\r\n                    value={formState.art_age_id.value}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <Checkbox\r\n                    id=\"input_is_enabled\"\r\n                    field=\"is_enabled\"\r\n                    value={formState.is_enabled.value}\r\n                    onChange={hasFormValueChanged}\r\n                    required={false}\r\n                    label=\"Mở\"\r\n                  />\r\n                </div>\r\n                  <div className=\"form-group col-md-6\">\r\n                    <label>Giáo viên chấm</label>\r\n                    <ReactSelect setValue={listTeachers} value={listTeacherGradeContests} changeValue={changeValueTeacher}/>\r\n                  </div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <NumberInput id=\"input_max_participant\"\r\n                    value={formState.max_participant.value}\r\n                    field=\"max_participant\"\r\n                    onChange={hasFormValueChanged}\r\n                    max={1000}\r\n                    min={0}\r\n                    label=\"Số người đăng kí tối đa\" />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <DateInput id=\"input_registration_time\"\r\n                    field=\"registration_time\"\r\n                    value={formState.registration_time.value}\r\n                    onChange={hasFormValueChanged}\r\n                    type=\"datetime-local\"\r\n                    active={false}\r\n                    required={false}\r\n                    maxLength={time_now}\r\n                    label=\"Thời gian bắt đầu đăng kí\"\r\n                    placeholder=\"\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <DateInput2 id=\"input_start_time\"\r\n                    field=\"start_time\"\r\n                    value={formState.start_time.value}\r\n                    onChange={hasFormValueChanged}\r\n                    type=\"datetime-local\"\r\n                    active={formState.registration_time.value !== null && formState.registration_time.value !== \"\" ? false: true}\r\n                    required={false}\r\n                    maxLength={formState.registration_time.value}\r\n                    label=\"Thời gian bắt đầu cuộc thi\"\r\n                    placeholder=\"\" />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <DateInput1 id=\"input_end_time\"\r\n                    field=\"end_time\"\r\n                    value={formState.end_time.value}\r\n                    onChange={hasFormValueChanged}\r\n                    type=\"datetime-local\"\r\n                    active={formState.start_time.value !== null && formState.start_time.value !== \"\"? false: true}\r\n                    required={false}\r\n                    maxLength={formState.start_time.value}\r\n                    label=\"Thời gian kết thúc cuộc thi\"\r\n                    placeholder=\"\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Miêu tả</label>\r\n                <Editor getValue={getValue} isCreate={isCreate} setValue={formState.description.value} />\r\n              </div>\r\n\r\n              <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n              <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ContestForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postUserGradeContest } from \"../UserGradeContest/PostUserGradeContest\";\r\nimport { getContest } from \"./GetContest\";\r\n\r\nexport function postContest(lst: any[], contest: any, idx: any, routeHome: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(contest)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postContest(lst,contest,idx, routeHome))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                getContest(dispatch)\r\n                lst.map((value, index) =>  {\r\n                    return dispatch(postUserGradeContest({\r\n                        contest_id: data.id,\r\n                        teacher_id: value.value\r\n                    }))\r\n                })\r\n                toast.update(idx, { render: \"Thêm cuộc thi thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                setTimeout(function () {\r\n                    routeHome(true);\r\n                }, 2000); \r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Thêm cuộc thi không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch, Fragment, useEffect } from \"react\";\r\nimport { IStateType, IRootPageStateType, IArtLevelState, IArtTypeState, IArtAgeState, ICourseState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ICourse, CourseModificationStatus } from \"../../store/models/course.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editCourse, clearSelectedCourse, setModificationState, addCourse } from \"../../store/actions/course.action\";\r\nimport NumberInput from \"../../common/components/NumberInput\";\r\nimport Checkbox from \"../../common/components/Checkbox\";\r\nimport { OnChangeModel, ICourseNomalFormState } from \"../../common/types/Form.types\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport Editor from \"../../common/components/Quill/Editor\";\r\nimport { IArtLevel } from \"../../store/models/art_level.interface\";\r\nimport { IArtType } from \"../../store/models/art_type.interface\";\r\nimport { IArtAge } from \"../../store/models/art_age.interface\";\r\nimport SelectKeyValue from \"../../common/components/SelectKeyValue\";\r\nimport { getArtType } from \"../../common/service/ArtType/GetArtType\";\r\nimport { getArtLevel } from \"../../common/service/ArtLevel/GetArtLevel\";\r\nimport { getArtAge } from \"../../common/service/ArtAge/GetArtAge\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getCourse } from \"../../common/service/Course/GetCourse\";\r\n\r\nimport { postCourse } from \"../../common/service/Course/PostCourse\";\r\nimport { putCourse } from \"../../common/service/Course/PutCourse\";\r\nimport { toast } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\ntype Options = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\n\r\nconst CourseNomalFormEdit: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const courses: ICourseState = useSelector((state: IStateType) => state.courses);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n    //console.log(course)\r\n    const isCreate: boolean = false;\r\n    let course: ICourse | null = courses.selectedCourse;\r\n    console.log(course)\r\n    if (!course || isCreate) {\r\n        course = { id: 0, name: \"\", description: \"\", max_participant: 0, num_of_section: 0, price: 0, image_url: \"\", is_enabled: false, creator_id: 0, art_age_id: 0, art_level_id: 0, art_type_id: 0, create_time: \"\", update_time: \"\", art_age_name: \"\", art_level_name:\"\", art_type_name: \"\", checked_tutoral: false };\r\n    }\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khóa học\", \"\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    useEffect(() => {\r\n        trackPromise(getCourse(dispatch))\r\n        trackPromise(getArtType(dispatch))\r\n        trackPromise(getArtLevel(dispatch))\r\n        trackPromise(getArtAge(dispatch))\r\n\r\n    }, [dispatch])\r\n\r\n    const levels: IArtLevelState = useSelector((state: IStateType) => state.art_levels);\r\n    const listLevel: IArtLevel[] = levels.artLevels\r\n    //console.log(listLevel)\r\n    const listLevels: Options[] = [];\r\n    listLevel.map((ele) => {\r\n        let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n        return listLevels.push(item)\r\n    })\r\n\r\n    const mytypes: IArtTypeState = useSelector((state: IStateType) => state.art_types);\r\n    const listMytype: IArtType[] = mytypes.artTypes\r\n    const listMytypes: Options[] = [];\r\n    listMytype.map((ele) => {\r\n        let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n        return listMytypes.push(item)\r\n    })\r\n\r\n    const art_ages: IArtAgeState = useSelector((state: IStateType) => state.art_ages);\r\n    const listArtAge: IArtAge[] = art_ages.artAges\r\n    const listArtAges: Options[] = [];\r\n    listArtAge.map((ele) => {\r\n        let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n        return listArtAges.push(item)\r\n    })\r\n\r\n    const src = course.image_url;\r\n\r\n    const [formState, setFormState] = useState({\r\n        name: { error: \"\", value: course.name },\r\n        description: { error: \"\", value: course.description },\r\n        art_type_id: { error: \"\", value: course.art_type_id },\r\n        art_level_id: { error: \"\", value: course.art_level_id },\r\n        art_age_id: { error: \"\", value: course.art_age_id },\r\n        num_of_section: { error: \"\", value: course.num_of_section },\r\n        price: { error: \"\", value: course.price },\r\n        image_url: { error: \"\", value: course.image_url },\r\n        is_enabled: { error: \"\", value: course.is_enabled },\r\n        creator_id: { error: \"\", value: course.creator_id },\r\n        create_time: { error: \"\", value: course.create_time },\r\n        update_time: { error: \"\", value: course.update_time }\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    function routeHome() {\r\n        dispatch(setModificationState(CourseModificationStatus.None));\r\n        let path = `/courses`;\r\n        history.push(path);\r\n    }\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    async function saveUser(e: FormEvent<HTMLFormElement>){\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        var url = await setImageAction();\r\n\r\n        let saveUserFn: Function = (isCreate) ? addCourse : editCourse;\r\n        saveForm(formState, saveUserFn, url);\r\n    }\r\n\r\n    function saveForm(formState: ICourseNomalFormState, saveFn: Function, url: string): void {\r\n        if (course) {\r\n            const id = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n\r\n            if (saveFn === addCourse) {\r\n                dispatch(postCourse({\r\n                    name: formState.name.value,\r\n                    description: textHtml,\r\n                    num_of_section: formState.num_of_section.value,\r\n                    price: formState.price.value,\r\n                    image_url: url,\r\n                    is_enabled: formState.is_enabled.value,\r\n                    art_type_id: formState.art_type_id.value,\r\n                    art_age_id: formState.art_age_id.value,\r\n                    art_level_id: formState.art_level_id.value,\r\n                    creator_id: localStorage.getItem('id')\r\n                }, id))\r\n            }\r\n\r\n            else if (saveFn === editCourse) {\r\n                dispatch(putCourse(course.id, {\r\n                    name: formState.name.value,\r\n                    description: textHtml,\r\n                    num_of_section: formState.num_of_section.value,\r\n                    price: formState.price.value,\r\n                    image_url: url,\r\n                    is_enabled: formState.is_enabled.value,\r\n                    art_type_id: formState.art_type_id.value,\r\n                    art_age_id: formState.art_age_id.value,\r\n                    art_level_id: formState.art_level_id.value,\r\n                    creator_id: localStorage.getItem('id')\r\n                }, id))\r\n            }\r\n\r\n            dispatch(clearSelectedCourse());\r\n            dispatch(setModificationState(CourseModificationStatus.None));\r\n            setTimeout(function () {\r\n                routeHome();\r\n            }, 2000); \r\n        }\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        dispatch(setModificationState(CourseModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.description.error\r\n            || formState.name.error || formState.num_of_section.error || formState.price.error\r\n            || formState.image_url.error || !formState.name.value || !formState.num_of_section.value) as boolean;\r\n    }\r\n\r\n    const [textHtml, setTextHtml] = useState<string>(\"\")\r\n    function getValue(value: string) {\r\n        setTextHtml(value);\r\n    }\r\n\r\n    const [image, setImage] = useState<any>(null);\r\n\r\n    const uploadPicture = (e: any) => {\r\n        setImage({\r\n            /* contains the preview, if you want to show the picture to the user\r\n                you can access it with this.state.currentPicture\r\n           */\r\n            picturePreview : URL.createObjectURL(e.target.files[0]),\r\n            /* this contains the file we want to send */\r\n            pictureAsFile : e.target.files[0]\r\n        })\r\n    };\r\n\r\n    async function setImageAction(){\r\n        if (image === null && course){\r\n            return course.image_url\r\n        }\r\n        else {\r\n            const formData = new FormData();\r\n            formData.append(\r\n                \"gifFile\",\r\n                image.pictureAsFile\r\n            );\r\n            // do your post request\r\n            const res = await fetch(\r\n                `${process.env.REACT_APP_API_URL}/cloudinary/gifs`, {\r\n                    method: \"POST\",\r\n                    body: formData\r\n                }\r\n            )\r\n            const data = await res.json()\r\n            return data.url_image\r\n        }\r\n    };\r\n\r\n    //console.log('Input',textHtml)\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n\r\n            <div className=\"col-xl-12 col-lg-12\">\r\n                <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} khóa học chung</h6>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={saveUser}>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label htmlFor=\"profile_image\">Chọn ảnh:</label>\r\n                                    <input type=\"file\" id=\"profile_image\" name=\"profile_image\" onChange={uploadPicture}/>\r\n                                </div>\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <img src={src} alt=\"Preview\" id=\"avatar\"/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <TextInput id=\"input_name\"\r\n                                        field=\"name\"\r\n                                        value={formState.name.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        maxLength={100}\r\n                                        label=\"Tên khóa học\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <NumberInput id=\"input_price\"\r\n                                        value={formState.price.value}\r\n                                        field=\"price\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        max={10000000}\r\n                                        min={0}\r\n                                        label=\"Giá\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                <SelectKeyValue id=\"input_art_type_id\"\r\n                                    field = \"art_type_id\"\r\n                                    value={formState.art_type_id.value}\r\n                                    onChange={hasFormValueChanged}\r\n                                    required={true}\r\n                                    label=\"Thể loại\"\r\n                                    options={listMytypes}\r\n                                />\r\n                                </div>\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <SelectKeyValue\r\n                                        id=\"input_art_level_id\"\r\n                                        field=\"art_level_id\"\r\n                                        label=\"Mức độ\"\r\n                                        options={listLevels}\r\n                                        required={true}\r\n                                        onChange={hasFormValueChanged}\r\n                                        value={formState.art_level_id.value}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <SelectKeyValue\r\n                                        id=\"input_art_age_id\"\r\n                                        field=\"art_age_id\"\r\n                                        label=\"Mức độ\"\r\n                                        options={listArtAges}\r\n                                        required={true}\r\n                                        onChange={hasFormValueChanged}\r\n                                        value={formState.art_age_id.value}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <Checkbox\r\n                                        id=\"input_is_enabled\"\r\n                                        field=\"is_enabled\"\r\n                                        value={formState.is_enabled.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        label=\"Mở\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <NumberInput id=\"input_num_of_section\"\r\n                                        value={formState.num_of_section.value}\r\n                                        field=\"num_of_section\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        max={1000}\r\n                                        min={0}\r\n                                        label=\"Số buổi học\" \r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Miêu tả</label>\r\n                                <Editor getValue={getValue} isCreate={isCreate} setValue={formState.description.value}/>\r\n                            </div>\r\n\r\n                            <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                            <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default CourseNomalFormEdit;\r\n","import React, { useState, ChangeEvent, Fragment } from \"react\";\nimport { SelectProps } from \"../types/Select.types\";\n\nfunction SelectInput(props: SelectProps): JSX.Element {\n    const [touched, setTouch] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [htmlClass, setHtmlClass] = useState(\"\");\n    const [value, setValue] = useState(props.value);\n\n\n    function onValueChanged(event: ChangeEvent<HTMLSelectElement>): void {\n        let [error, validClass, elementValue] = [\"\", \"\", event.target.value];\n\n        [error, validClass] = (!elementValue && props.required) ?\n            [\"Value has to be selected\", \"is-invalid\"] : [\"\", \"is-valid\"];\n\n\n        props.onChange({ value: elementValue, error: error, touched: touched, field: props.field });\n\n        setTouch(true);\n        setError(error);\n        setHtmlClass(validClass);\n        setValue(elementValue);\n    }\n\n    const getOptions: (JSX.Element | null)[] = props.options.map((option: any, index: number) => {\n        return (\n            <option key={index} value={`${option}`}>{option}</option>\n        )\n    });\n\n    return (\n        <Fragment>\n            <label htmlFor={`${props.id}`}>{props.label}</label>\n            <select\n                value={value}\n                id={`${props.id}`}\n                className={`form-control ${props.inputClass ? props.inputClass : \"\"} ${htmlClass}`}\n                onChange={onValueChanged}>\n                <option value=\"\">Choose...</option>\n                {getOptions}\n            </select>\n\n            {error ?\n                <div className=\"invalid-feedback\">\n                    {error}\n                </div> : null\n            }\n        </Fragment>\n    );\n}\n\nexport default SelectInput;","import React, { useState, FormEvent, Dispatch, Fragment, useEffect } from \"react\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editTeacher, clearSelectedUser, setModificationState, addTeacher } from \"../../store/actions/users.action\";\r\nimport { OnChangeModel, IUser1FormState } from \"../../common/types/Form.types\";\r\nimport { postTeacher } from \"../../common/service/Teacher/PostTeacher\";\r\nimport { putTeacher } from \"../../common/service/Teacher/PutTeacher\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport SelectInput from \"../../common/components/Select\";\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nexport type teacherListProps = {\r\n    isCheck: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nconst Account: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const id = localStorage.getItem('id')\r\n    const { promiseInProgress } = usePromiseTracker();\r\n    useEffect(() => {\r\n        trackPromise(getUserById(dispatch, id))\r\n    }, [dispatch, id])\r\n    var role_privilege = localStorage.getItem('role_privilege')\r\n    let rolePrivilege: any = []\r\n    let userRole: any = \"\"\r\n    if (role_privilege !== null) {\r\n        rolePrivilege = (role_privilege.split(','))\r\n        userRole = (rolePrivilege[0])\r\n    }\r\n    let users: IUserState = useSelector((state: IStateType) => state.users);\r\n    console.log(users.teachers)\r\n\r\n    let user =  users.teachers.length > 0 ? users.teachers[0] : { id: 0, username: \"\", email: \"\", status: true, firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: 0 }\r\n\r\n    console.log(user)\r\n    let [formState, setFormState] = useState({\r\n        username: { error: \"\", value: user.username },\r\n        email: { error: \"\", value: user.email },\r\n        password: { error: \"\", value: \"\" },\r\n        firstName: { error: \"\", value: user.firstName },\r\n        lastName: { error: \"\", value: user.lastName },\r\n        dateOfBirth: { error: \"\", value: user.dateOfBirth },\r\n        profile_image_url: { error: \"\", value: user.profile_image_url },\r\n        sex: { error: \"\", value: user.sex },\r\n        phone: { error: \"\", value: user.phone },\r\n        address: { error: \"\", value: user.address }\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    async function saveUser(e: FormEvent<HTMLFormElement>) {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        const id = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n        var url = await setImageAction();\r\n        let saveUserFn: Function =editTeacher;\r\n        saveForm(formState, saveUserFn, url, id);\r\n    }\r\n\r\n    function saveForm(formState: IUser1FormState, saveFn: Function, url: string, id: any): void {\r\n        if (user) {\r\n            \r\n            let username = formState.username.value === \"\" ? user.username : formState.username.value;\r\n            let email = formState.email.value === \"\" ? user.email : formState.email.value;\r\n            let firstName = formState.firstName.value === \"\" ? user.firstName : formState.firstName.value;\r\n            let lastName = formState.lastName.value === \"\" ? user.lastName : formState.lastName.value;\r\n            let dateOfBirth = formState.dateOfBirth.value === \"\" ? user.dateOfBirth : formState.dateOfBirth.value;\r\n            let sex = formState.sex.value === \"\" ? user.sex : formState.sex.value;\r\n            let phone = formState.phone.value === \"\" ? user.phone : formState.phone.value;\r\n            let address = formState.address.value === \"\" ? user.address : formState.address.value\r\n            let url_x = url === \"\" ? user.profile_image_url : url;\r\n\r\n            if (saveFn === addTeacher) {\r\n                dispatch(postTeacher({\r\n                    username: username,\r\n                    email: email,\r\n                    password: \"\",\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    dateOfBirth: dateOfBirth,\r\n                    profile_image_url: url_x,\r\n                    sex: sex,\r\n                    phone: phone,\r\n                    address: address,\r\n                    parent_ids: user.parents,\r\n                    roleNames: [userRole]\r\n                }, id));\r\n            }\r\n\r\n            else if (saveFn === editTeacher) {\r\n                dispatch(putTeacher(user.id, {\r\n                    username: username,\r\n                    email: email,\r\n                    password: \"\",\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    dateOfBirth: dateOfBirth,\r\n                    profile_image_url: url_x,\r\n                    sex: sex,\r\n                    phone: phone,\r\n                    address: address,\r\n                    parent_ids: user.parents,\r\n                    roleNames: [userRole]\r\n                }, id));\r\n            }\r\n\r\n            dispatch(clearSelectedUser());\r\n            dispatch(setModificationState(UserModificationStatus.None));\r\n        }\r\n    }\r\n\r\n    console.log(formState)\r\n\r\n    function cancelForm(): void {\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return ((!formState.email.value && user.email === \"\") || (!formState.username.value && user.username === \"\")\r\n             ) as boolean;\r\n    }\r\n\r\n    let src = user.profile_image_url;\r\n\r\n    const [preview, setPreview] = useState(src)\r\n    const [image, setImage] = useState<any>();\r\n\r\n    const uploadPicture = (e: any) => {\r\n        setImage({\r\n            /* contains the preview, if you want to show the picture to the user\r\n                you can access it with this.state.currentPicture\r\n           */\r\n            picturePreview : URL.createObjectURL(e.target.files[0]),\r\n            /* this contains the file we want to send */\r\n            pictureAsFile : e.target.files[0]\r\n        })\r\n        setPreview(URL.createObjectURL(e.target.files[0]))\r\n    };\r\n\r\n    async function setImageAction(){\r\n        const formData = new FormData();\r\n        if (image === undefined){\r\n            return \"\"\r\n        }\r\n        else {\r\n            formData.append(\r\n                \"gifFile\",\r\n                image.pictureAsFile\r\n            );\r\n            // do your post request\r\n            const res = await fetch(\r\n                `${process.env.REACT_APP_API_URL}/cloudinary/gifs`, {\r\n                    method: \"POST\",\r\n                    body: formData\r\n                }\r\n            )\r\n            const data = await res.json()\r\n            return data.url_image\r\n        }\r\n    };\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Chỉnh thông tin cá nhân</h6>\r\n                        </div>\r\n                        <ToastContainer />\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <label htmlFor=\"profile_image\">Chọn ảnh:</label>\r\n                                        <input type=\"file\" id=\"profile_image\" name=\"profile_image\" onChange={uploadPicture} />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <img src={preview === \"\" ? user.profile_image_url : preview} alt=\"Preview\" id=\"avatar\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_username\"\r\n                                            field=\"username\"\r\n                                            value={formState.username.value === \"\" ? user.username : formState.username.value}\r\n                                            onChange={hasFormValueChanged}\r\n                                            required={true}\r\n                                            maxLength={100}\r\n                                            label=\"Tên đăng nhập\"\r\n                                            placeholder=\"\" />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_email\"\r\n                                            field=\"email\"\r\n                                            value={formState.email.value === \"\" ? user.email : formState.email.value}\r\n                                            onChange={hasFormValueChanged}\r\n                                            required={true}\r\n                                            maxLength={200}\r\n                                            label=\"Email\"\r\n                                            placeholder=\"\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_firstName\"\r\n                                            field=\"firstName\"\r\n                                            value={formState.firstName.value === \"\" ? user.firstName : formState.firstName.value}\r\n                                            onChange={hasFormValueChanged}\r\n                                            required={false}\r\n                                            maxLength={100}\r\n                                            label=\"Họ\"\r\n                                            placeholder=\"\" />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_lastName\"\r\n                                            field=\"lastName\"\r\n                                            value={formState.lastName.value === \"\" ? user.lastName : formState.lastName.value}\r\n                                            onChange={hasFormValueChanged}\r\n                                            required={false}\r\n                                            maxLength={200}\r\n                                            label=\"Tên\"\r\n                                            placeholder=\"\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                    <SelectInput\r\n                                        id=\"input_sex\"\r\n                                        field=\"sex\"\r\n                                        label=\"Giới tính\"\r\n                                        options={[\"Nam\", \"Nữ\"]}\r\n                                        required={true}\r\n                                        onChange={hasFormValueChanged}\r\n                                        value={formState.sex.value === \"\" ? user.sex : formState.sex.value}\r\n                                    />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_phone\"\r\n                                            field=\"phone\"\r\n                                            value={formState.phone.value === \"\" ? user.phone : formState.phone.value}\r\n                                            onChange={hasFormValueChanged}\r\n                                            required={false}\r\n                                            maxLength={200}\r\n                                            label=\"Số điện thoại\"\r\n                                            placeholder=\"\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_address\"\r\n                                        field=\"address\"\r\n                                        value={formState.address.value === \"\" ? user.address : formState.address.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        maxLength={200}\r\n                                        label=\"Địa chỉ\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_dateOfBirth\"\r\n                                            field=\"dateOfBirth\"\r\n                                            value={formState.dateOfBirth.value === \"\" ? user.dateOfBirth : formState.dateOfBirth.value}\r\n                                            onChange={hasFormValueChanged}\r\n                                            type=\"date\"\r\n                                            required={false}\r\n                                            maxLength={200}\r\n                                            label=\"Ngày sinh\"\r\n                                            placeholder=\"\" />\r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useState, FormEvent, Dispatch, Fragment, useEffect } from \"react\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editTeacher, clearSelectedUser, setModificationState, addTeacher } from \"../../store/actions/users.action\";\r\nimport { OnChangeModel, IUser1FormState } from \"../../common/types/Form.types\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\nimport { putPassword } from \"../../common/service/User/UpdatePassword\";\r\n\r\nexport type teacherListProps = {\r\n    isCheck: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction ChangePassword(): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    \r\n    const id = localStorage.getItem('id')\r\n    let user_id: number = 0;\r\n    if (id !== null) {\r\n        user_id = parseInt(id)\r\n    }\r\n    useEffect(() => {\r\n        getUserById(dispatch, user_id)\r\n    }, [dispatch, user_id])\r\n    let user: IUser = users.teachers[0];\r\n    const isCreate: boolean = (users.modificationState === UserModificationStatus.Create);\r\n\r\n    if (!user || isCreate) {\r\n        user = { id: 0, username: \"\", email: \"\", password: \"\", status: \"\", firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: 0 };\r\n    }\r\n\r\n    const [formState, setFormState] = useState({\r\n        username: { error: \"\", value: user.username },\r\n        email: { error: \"\", value: user.email },\r\n        password: { error: \"\", value: \"\" },\r\n        firstName: { error: \"\", value: user.firstName },\r\n        lastName: { error: \"\", value: user.lastName },\r\n        dateOfBirth: { error: \"\", value: user.dateOfBirth },\r\n        profile_image_url: { error: \"\", value: user.profile_image_url },\r\n        sex: { error: \"\", value: user.sex },\r\n        phone: { error: \"\", value: user.phone },\r\n        address: { error: \"\", value: user.address }\r\n    });\r\n\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        let saveUserFn: Function = (isCreate) ? addTeacher : editTeacher;\r\n        saveForm(formState, saveUserFn);\r\n    }\r\n\r\n    function saveForm(formState: IUser1FormState, saveFn: Function): void {\r\n        if (user) {\r\n            const idx = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n\r\n            dispatch(putPassword(user.id, {\r\n                    pre_password: formState.username.value,\r\n                    new_password: formState.phone.value\r\n            }, idx));\r\n            \r\n            dispatch(clearSelectedUser());\r\n            dispatch(setModificationState(UserModificationStatus.None));\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function cancelForm(): void {\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.username.error || formState.phone.error\r\n            || !formState.username.value || !formState.phone.value ) as boolean;\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Thay đổi mật khẩu</h6>\r\n                        </div>\r\n                        <ToastContainer />\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <TextInput id=\"input_username\"\r\n                                        field=\"username\"\r\n                                        value={formState.username.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={100}\r\n                                        label=\"Mật khẩu cũ\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <TextInput id=\"input_phone\"\r\n                                            field=\"phone\"\r\n                                            value={formState.phone.value}\r\n                                            onChange={hasFormValueChanged}\r\n                                            required={true}\r\n                                            maxLength={200}\r\n                                            label=\"Mật khẩu mới\"\r\n                                            placeholder=\"\" />\r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess, fetchDataError } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function putPassword(id: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/change-password/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putPassword(id,data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                console.log(id)\r\n                toast.update(idx, { render: \"Thay đổi mật khẩu thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataSuccess(data))\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Thay đổi mật khẩu không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IUserGradeContestSubmissionState } from \"../../store/models/root.interface\";\r\nimport { IUserRegisterJoinSemester } from \"../../store/models/user_register_join_semester.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport type user_register_semesterListProps = {\r\n    onSelect?: (user_register_semester: IUserRegisterJoinSemester) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\n\r\nfunction TopStudent(props: user_register_semesterListProps): JSX.Element {\r\n    const user_gradee_contest_submissions: IUserGradeContestSubmissionState = useSelector((state: IStateType) => state.user_grade_contest_submissions);\r\n    const history = useHistory();\r\n\r\n    const routeChange = () => {\r\n        let path = '/semester-class/detail';\r\n        history.push(path);\r\n    }\r\n\r\n\r\n    const user_register_semesterElements: (JSX.Element | null)[] = user_gradee_contest_submissions.userGradeContestSubmissions.map((user_register_semester, index) => {\r\n        if (!user_register_semester) { return null; }\r\n        return (<tr className={`table-row`}\r\n            key={`user_register_semester_${index}`}>\r\n            <th scope=\"row\">{index + 1}</th>\r\n            <td onClick={routeChange}>{user_register_semester.student_name}</td>\r\n            <td onClick={routeChange}>{user_register_semester.score}</td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"table-responsive portlet\">\r\n            <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Tên</th>\r\n                        <th scope=\"col\">Điểm</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {user_register_semesterElements}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default TopStudent;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IContestSubmissionState, IStateType, IUserGradeContestState } from \"../../store/models/root.interface\";\r\nimport { IUserRegisterJoinSemester } from \"../../store/models/user_register_join_semester.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport type user_grade_contestListProps = {\r\n    onSelect?: (user_grade_contest: IUserRegisterJoinSemester) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction TopTeacher(props: user_grade_contestListProps): JSX.Element {\r\n    const user_grade_contests: IUserGradeContestState = useSelector((state: IStateType) => state.user_grade_contests);\r\n    const contest_submissions: IContestSubmissionState = useSelector((state: IStateType) => state.contest_submissions);\r\n    \r\n    const history = useHistory();\r\n\r\n    const routeChange = () => {\r\n        let path = '/semester-class/detail';\r\n        history.push(path);\r\n    }\r\n\r\n\r\n    let total = Math.round((contest_submissions.contest_gradeds.length+ contest_submissions.contest_not_gradeds.length) / user_grade_contests.userGradeContests.length);\r\n    const user_grade_contestElements: (JSX.Element | null)[] = user_grade_contests.userGradeContests.map((user_grade_contest, index) => {\r\n        if (!user_grade_contest) { return null; }\r\n        if (index === user_grade_contests.userGradeContests.length - 1){\r\n            return (<tr className={`table-row `}\r\n                key={`user_grade_contest_${index}`}>\r\n                <th scope=\"row\">{index + 1}</th>\r\n                <td onClick={routeChange}>{user_grade_contest.teacher_name}</td>\r\n                <th scope=\"row\">{(contest_submissions.contest_gradeds.length+ contest_submissions.contest_not_gradeds.length) - total*index}</th>\r\n                <th scope=\"row\"></th>\r\n            </tr>);\r\n        }\r\n        return (<tr className={`table-row }`}\r\n            key={`user_grade_contest_${index}`}>\r\n            <th scope=\"row\">{index + 1}</th>\r\n            <td onClick={routeChange}>{user_grade_contest.teacher_name}</td>\r\n            <th scope=\"row\">{total}</th>\r\n            <th scope=\"row\"></th>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"table-responsive portlet\">\r\n            <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Tên</th>\r\n                        <th scope=\"col\">Số bài được giao</th>\r\n                        <th scope=\"col\">Đã chấm</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {user_grade_contestElements}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default TopTeacher;\r\n","import { IUserGradeContestSubmission, UserGradeContestSubmissionModificationStatus } from \"../models/user_grade_contest_submission.interface\";\r\nexport const ADD_USER_GRADE_CONTEST_SUBMISSION: string = \"ADD_USER_GRADE_CONTEST_SUBMISSION\";\r\nexport const EDIT_USER_GRADE_CONTEST_SUBMISSION: string = \"EDIT_USER_GRADE_CONTEST_SUBMISSION\";\r\nexport const REMOVE_USER_GRADE_CONTEST_SUBMISSION: string = \"REMOVE_USER_GRADE_CONTEST_SUBMISSION\";\r\nexport const CHANGE_USER_GRADE_CONTEST_SUBMISSION_AMOUNT: string = \"CHANGE_USER_GRADE_CONTEST_SUBMISSION_AMOUNT\";\r\nexport const CHANGE_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT: string = \"CHANGE_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT\";\r\nexport const CLEAR_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT: string = \"CLEAR_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_USER_GRADE_CONTEST_SUBMISSION_ALL: string = \"REMOVE_USER_GRADE_CONTEST_SUBMISSION_ALL\";\r\nexport const INITIAL_USER_GRADE_CONTEST_SUBMISSION: string = \"INITIAL_USER_GRADE_CONTEST_SUBMISSION\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(user_grade_contest_submission: IUserGradeContestSubmission) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        user_grade_contest_submission\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialUserGradeContestSubmission(user_grade_contest_submission: IUserGradeContestSubmission): IInitialUserGradeContestSubmissionActionType {\r\n    return { type: INITIAL_USER_GRADE_CONTEST_SUBMISSION, user_grade_contest_submission: user_grade_contest_submission };\r\n}\r\n\r\nexport function removeUserGradeContestSubmissionAll(): IRemoveUserGradeContestSubmissionAllActionType {\r\n    return { type: REMOVE_USER_GRADE_CONTEST_SUBMISSION_ALL };\r\n}\r\n\r\nexport function addUserGradeContestSubmission(user_grade_contest_submission: IUserGradeContestSubmission): IAddUserGradeContestSubmissionActionType {\r\n    return { type: ADD_USER_GRADE_CONTEST_SUBMISSION, user_grade_contest_submission: user_grade_contest_submission };\r\n}\r\n\r\nexport function editUserGradeContestSubmission(user_grade_contest_submission: IUserGradeContestSubmission): IEditUserGradeContestSubmissionActionType {\r\n    return { type: EDIT_USER_GRADE_CONTEST_SUBMISSION, user_grade_contest_submission: user_grade_contest_submission };\r\n}\r\n\r\nexport function removeUserGradeContestSubmission(id: any): IRemoveUserGradeContestSubmissionActionType {\r\n    return { type: REMOVE_USER_GRADE_CONTEST_SUBMISSION, id: id };\r\n}\r\n\r\nexport function changeSelectedUserGradeContestSubmission(user_grade_contest_submission: IUserGradeContestSubmission): IChangeSelectedUserGradeContestSubmissionActionType {\r\n    return { type: CHANGE_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT, user_grade_contest_submission: user_grade_contest_submission };\r\n}\r\n\r\nexport function clearSelectedUserGradeContestSubmission(): IClearSelectedUserGradeContestSubmissionActionType {\r\n    return { type: CLEAR_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateUserGradeContestSubmission(value: UserGradeContestSubmissionModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddUserGradeContestSubmissionActionType { type: string, user_grade_contest_submission: IUserGradeContestSubmission };\r\ninterface IEditUserGradeContestSubmissionActionType { type: string, user_grade_contest_submission: IUserGradeContestSubmission };\r\ninterface IRemoveUserGradeContestSubmissionActionType { type: string, id: any };\r\ninterface IChangeSelectedUserGradeContestSubmissionActionType { type: string, user_grade_contest_submission: IUserGradeContestSubmission };\r\ninterface IClearSelectedUserGradeContestSubmissionActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  UserGradeContestSubmissionModificationStatus};\r\ninterface IRemoveUserGradeContestSubmissionAllActionType { type: string }\r\ninterface IInitialUserGradeContestSubmissionActionType {type: string, user_grade_contest_submission: IUserGradeContestSubmission}","import { fetchDataSuccess, fetchDataError, removeUserGradeContestSubmissionAll, addUserGradeContestSubmission} from \"../../../store/actions/user_grade_contest_submission.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user_grade_contest {\r\n    student_id: number;\r\n    teacher_name: string;\r\n    teacher_id: number;\r\n    student_name: string;\r\n    contest_id: number;\r\n    contest_name: string;\r\n    contest_submission_id: number;\r\n    feedback: string;\r\n    score: number;\r\n    time: string;\r\n}\r\nexport function getUserGradeContestSubmissionByContestId(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-grade-contest-submission/contest/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserGradeContestSubmissionByContestId(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeUserGradeContestSubmissionAll())\r\n                console.log(data.body.UserGradeContestSubmission)\r\n                data.body.UserGradeContestSubmission.map((ele: any, index: any) => {\r\n                    var user_grade_contest: user_grade_contest = {\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        teacher_id: ele.teacher_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        contest_id: ele.contest_id,\r\n                        contest_name: ele.contest_name,\r\n                        contest_submission_id: ele.contest_submission_id,\r\n                        feedback: ele.feedback,\r\n                        score: ele.score,\r\n                        time: ele.time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addUserGradeContestSubmission(user_grade_contest))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { IContestSubmission, ContestSubmissionModificationStatus } from \"../models/contest_submission.interface\";\r\n\r\n// register_successfull_contest_submissions\r\nexport const ADD_EXERCISE_SUBMISSION_NOT_GRADED: string = \"ADD_EXERCISE_SUBMISSION_NOT_GRADED\";\r\nexport const EDIT_EXERCISE_SUBMISSION_NOT_GRADED: string = \"EDIT_EXERCISE_SUBMISSION_NOT_GRADED\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_NOT_GRADED: string = \"REMOVE_EXERCISE_SUBMISSION_NOT_GRADED\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_AMOUNT: string = \"CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: string = \"CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: string = \"CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL: string = \"REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL\";\r\nexport const INITIAL_EXERCISE_SUBMISSION_NOT_GRADED: string = \"INITIAL_EXERCISE_SUBMISSION_NOT_GRADED\";\r\n\r\n// not_register_contest_submissions\r\nexport const ADD_EXERCISE_SUBMISSION_GRADED: string = \"ADD_EXERCISE_SUBMISSION_GRADED\";\r\nexport const EDIT_EXERCISE_SUBMISSION_GRADED: string = \"EDIT_EXERCISE_SUBMISSION_GRADED\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_GRADED: string = \"REMOVE_EXERCISE_SUBMISSION_GRADED\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_GRADED_AMOUNT: string = \"CHANGE_EXERCISE_SUBMISSION_GRADED_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: string = \"CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: string = \"CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_GRADED_ALL: string = \"REMOVE_EXERCISE_SUBMISSION_GRADED_ALL\";\r\nexport const INITIAL_EXERCISE_SUBMISSION_GRADED: string = \"INITIAL_EXERCISE_SUBMISSION_GRADED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(contest_submission: IContestSubmission) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        contest_submission\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialContestNotGraded(contest_submission: IContestSubmission): IInitialContestNotGradedActionType {\r\n    return { type: INITIAL_EXERCISE_SUBMISSION_NOT_GRADED, contest_submission: contest_submission };\r\n}\r\n\r\nexport function removeContestNotGradedAll(): IRemoveContestNotGradedAllActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL };\r\n}\r\n\r\nexport function addContestNotGraded(contest_submission: IContestSubmission): IAddContestNotGradedActionType {\r\n    return { type: ADD_EXERCISE_SUBMISSION_NOT_GRADED, contest_submission: contest_submission };\r\n}\r\n\r\nexport function editContestNotGraded(contest_submission: IContestSubmission): IEditContestNotGradedActionType {\r\n    return { type: EDIT_EXERCISE_SUBMISSION_NOT_GRADED, contest_submission: contest_submission };\r\n}\r\n\r\nexport function removeContestNotGraded(id: any): IRemoveContestNotGradedActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_NOT_GRADED, id: id };\r\n}\r\n\r\nexport function changeSelectedContestNotGraded(contest_submission: IContestSubmission): IChangeSelectedContestNotGradedActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT, contest_submission: contest_submission };\r\n}\r\n\r\nexport function clearSelectedContestNotGraded(): IClearSelectedContestNotGradedActionType {\r\n    return { type: CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialContestGraded(contest_submission: IContestSubmission): IInitialContestGradedActionType {\r\n    return { type: INITIAL_EXERCISE_SUBMISSION_GRADED, contest_submission: contest_submission };\r\n}\r\n\r\nexport function removeContestGradedAll(): IRemoveContestGradedAllActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_GRADED_ALL };\r\n}\r\n\r\nexport function addContestGraded(contest_submission: IContestSubmission): IAddContestGradedActionType {\r\n    return { type: ADD_EXERCISE_SUBMISSION_GRADED, contest_submission: contest_submission };\r\n}\r\n\r\nexport function editContestGraded(contest_submission: IContestSubmission): IEditContestGradedActionType {\r\n    return { type: EDIT_EXERCISE_SUBMISSION_GRADED, contest_submission: contest_submission };\r\n}\r\n\r\nexport function removeContestGraded(id: any): IRemoveContestGradedActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_GRADED, id: id };\r\n}\r\n\r\nexport function changeSelectedContestGraded(contest_submission: IContestSubmission): IChangeSelectedContestGradedActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT, contest_submission: contest_submission };\r\n}\r\n\r\nexport function clearSelectedContestGraded(): IClearSelectedContestGradedActionType {\r\n    return { type: CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ContestSubmissionModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_contest_submissions\r\ninterface IAddContestNotGradedActionType { type: string, contest_submission: IContestSubmission };\r\ninterface IEditContestNotGradedActionType { type: string, contest_submission: IContestSubmission };\r\ninterface IRemoveContestNotGradedActionType { type: string, id: any };\r\ninterface IChangeSelectedContestNotGradedActionType { type: string, contest_submission: IContestSubmission };\r\ninterface IClearSelectedContestNotGradedActionType { type: string };\r\ninterface IRemoveContestNotGradedAllActionType { type: string }\r\ninterface IInitialContestNotGradedActionType {type: string, contest_submission: IContestSubmission}\r\n\r\n// not_register_contest_submissions\r\ninterface IAddContestGradedActionType { type: string, contest_submission: IContestSubmission };\r\ninterface IEditContestGradedActionType { type: string, contest_submission: IContestSubmission };\r\ninterface IRemoveContestGradedActionType { type: string, id: any };\r\ninterface IChangeSelectedContestGradedActionType { type: string, contest_submission: IContestSubmission };\r\ninterface IClearSelectedContestGradedActionType { type: string };\r\ninterface IRemoveContestGradedAllActionType { type: string }\r\ninterface IInitialContestGradedActionType {type: string, contest_submission: IContestSubmission}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ContestSubmissionModificationStatus};","import { fetchDataSuccess, fetchDataError, removeContestGradedAll, removeContestNotGradedAll, addContestGraded, addContestNotGraded } from \"../../../store/actions/contest_submission.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ContestSubmission {\r\n    id: any;\r\n    student_id: number;\r\n    contest_id: number;\r\n    student_name: string;\r\n    contest_name: string;\r\n    image_url: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getContestSubmissionByContest(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest-submission/contest/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getContestSubmissionByContest(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeContestGradedAll())\r\n                dispatch(removeContestNotGradedAll())\r\n                console.log(data.body.contest_not_graded)\r\n                data.body.contest_not_graded.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var contest_submission: ContestSubmission = {\r\n                        id: ele.id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        contest_id: ele.contest_id,\r\n                        contest_name: ele.contest_name,\r\n                        image_url: ele.image_url,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    return dispatch(addContestNotGraded(contest_submission));\r\n                })\r\n\r\n                data.body.contest_graded.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var contest_submission: ContestSubmission = {\r\n                        id: ele.id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        contest_id: ele.contest_id,\r\n                        contest_name: ele.contest_name,\r\n                        image_url: ele.image_url,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    return dispatch(addContestGraded(contest_submission));\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./Contest.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IStateType, IRootPageStateType, IUserGradeContestSubmissionState, IContestSubmissionState, IUserGradeContestState } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedContest\r\n} from \"../../store/actions/contest.action\";\r\nimport { getArtType } from \"../../common/service/ArtType/GetArtType\";\r\nimport { getArtLevel } from \"../../common/service/ArtLevel/GetArtLevel\";\r\nimport { getArtAge } from \"../../common/service/ArtAge/GetArtAge\";\r\nimport { getContest } from \"../../common/service/Contest/GetContest\";\r\nimport { getTeacher } from \"../../common/service/Teacher/GetTeacher\";\r\nimport TopStudent from \"./TopStudent\";\r\nimport TopTeacher from \"./TopTeacher\";\r\nimport { getUserGradeContestSubmissionByContestId } from \"../../common/service/UserGradeContestSubmission/GetUserGradeContestSubmissionByContest\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { getContestSubmissionByContest } from \"../../common/service/ContestSubmission/GetContestSubmissionByContest\";\r\nimport { ChartLine } from \"../../common/components/CharLine\";\r\nimport { getUserGradeContestByContestId } from \"../../common/service/UserGradeContest/GetUserGradeContestByContestId\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\n\r\nconst ResultContest: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const user_gradee_contest_submissions: IUserGradeContestSubmissionState = useSelector((state: IStateType) => state.user_grade_contest_submissions);\r\n    const user_grade_contests: IUserGradeContestState = useSelector((state: IStateType) => state.user_grade_contests);\r\n    const contest_submissions: IContestSubmissionState = useSelector((state: IStateType) => state.contest_submissions);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    \r\n\r\n    var id_x = localStorage.getItem('contest_id');\r\n    let contest_id: number = 0;\r\n    if (id_x !== null){\r\n        contest_id = parseInt(id_x)\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getUserGradeContestSubmissionByContestId(dispatch, contest_id))\r\n                    trackPromise(getContestSubmissionByContest(dispatch, contest_id))\r\n                    trackPromise(getUserGradeContestByContestId(dispatch, contest_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getUserGradeContestSubmissionByContestId(dispatch, contest_id))\r\n                trackPromise(getContestSubmissionByContest(dispatch, contest_id))\r\n                trackPromise(getUserGradeContestByContestId(dispatch, contest_id))\r\n            }\r\n        }\r\n    }, [dispatch, contest_id, access_token, refresh_token])\r\n\r\n    \r\n    useEffect(() => {\r\n        dispatch(clearSelectedContest());\r\n        dispatch(updateCurrentPath(\"Cuộc thi\", \"danh sách\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    useEffect(() => {\r\n        trackPromise(getTeacher(dispatch))\r\n        trackPromise(getContest(dispatch))\r\n        trackPromise(getArtType(dispatch))\r\n        trackPromise(getArtLevel(dispatch))\r\n        trackPromise(getArtAge(dispatch))\r\n    }, [dispatch])\r\n\r\n    let student: string[] = []\r\n    let scores: number[] = []\r\n    if (user_gradee_contest_submissions.userGradeContestSubmissions.length > 0){\r\n        user_gradee_contest_submissions.userGradeContestSubmissions.map(ele => {\r\n            student.push(ele.student_name)\r\n            scores.push(ele.score)\r\n            return ele\r\n        })\r\n    }\r\n\r\n    const labels = student;\r\n    let data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Điêm',\r\n                data: scores,\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            }\r\n        ],\r\n    };\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Cuộc thi</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ BÀI NỘP\" text={`${contest_submissions.contest_gradeds.length + contest_submissions.contest_not_gradeds.length}`} icon=\"box\" class=\"primary\" />\r\n                <TopCard title=\"GIÁO VIÊN CHẤM\" text={`${user_grade_contests.userGradeContests.length}`} icon=\"box\" class=\"primary\" />\r\n                <TopCard title=\"ĐÃ CHẤM\" text={`${user_gradee_contest_submissions.userGradeContestSubmissions.length}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n\r\n            {/* <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n        <div className=\"row\">\r\n\r\n        <div className=\"col-xl-6 col-lg-6\">\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-green\">Danh sách điểm thi</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <TopStudent />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"col-xl-6 col-lg-6\">\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-green\">Danh sách giáo viên</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n            <TopTeacher />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n            <div className=\"row justify-content-center\">\r\n                <ChartLine data={data} />\r\n            </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default ResultContest;\r\n","export interface ISectionTemplate {\r\n    id: any;\r\n    creator_id: number;\r\n    course_id: number;\r\n    name: string;\r\n    number: number;\r\n    teaching_form: boolean;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum SectionTemplateModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","// This function keeps the casing unchanged for str, then perform the conversion\r\nexport function toNonAccentVietnamese(str: string) {\r\n    str = str.replace(/A|Á|À|Ã|Ạ|Â|Ấ|Ầ|Ẫ|Ậ|Ă|Ắ|Ằ|Ẵ|Ặ/g, \"A\");\r\n    str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, \"a\");\r\n    str = str.replace(/E|É|È|Ẽ|Ẹ|Ê|Ế|Ề|Ễ|Ệ/, \"E\");\r\n    str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, \"e\");\r\n    str = str.replace(/I|Í|Ì|Ĩ|Ị/g, \"I\");\r\n    str = str.replace(/ì|í|ị|ỉ|ĩ/g, \"i\");\r\n    str = str.replace(/O|Ó|Ò|Õ|Ọ|Ô|Ố|Ồ|Ỗ|Ộ|Ơ|Ớ|Ờ|Ỡ|Ợ/g, \"O\");\r\n    str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, \"o\");\r\n    str = str.replace(/U|Ú|Ù|Ũ|Ụ|Ư|Ứ|Ừ|Ữ|Ự/g, \"U\");\r\n    str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, \"u\");\r\n    str = str.replace(/Y|Ý|Ỳ|Ỹ|Ỵ/g, \"Y\");\r\n    str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, \"y\");\r\n    str = str.replace(/Đ/g, \"D\");\r\n    str = str.replace(/đ/g, \"d\");\r\n    // Some system encode vietnamese combining accent as individual utf-8 characters\r\n    str = str.replace(/\\u0300|\\u0301|\\u0303|\\u0309|\\u0323/g, \"\"); // Huyền sắc hỏi ngã nặng \r\n    str = str.replace(/\\u02C6|\\u0306|\\u031B/g, \"\"); // Â, Ê, Ă, Ơ, Ư\r\n    return str;\r\n}","import React, { Dispatch, Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, ISectionTemplateState, ITutorialTemplateState, ITutorialTemplatePageState } from \"../../store/models/root.interface\";\r\nimport { ISectionTemplate, SectionTemplateModificationStatus } from \"../../store/models/section_template.interface\";\r\nimport { setModificationStateSectionTemplate } from \"../../store/actions/section_template.action\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport type section_templateListProps = {\r\n  onSelect?: (section_template: ISectionTemplate) => void;\r\n  value?: string;\r\n  children?: React.ReactNode;\r\n};\r\n\r\n\r\nfunction SectionTemplateList(props: section_templateListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const section_templates: ISectionTemplateState = useSelector((state: IStateType) => state.section_templates);\r\n  const tutorial_templates: ITutorialTemplateState = useSelector((state: IStateType) => state.tutorial_templates);\r\n  const tutorial_template_pages: ITutorialTemplatePageState = useSelector((state: IStateType) => state.tutorial_template_pages);\r\n  console.log(tutorial_template_pages)\r\n  console.log(tutorial_templates)\r\n\r\n  const history = useHistory();\r\n  const routeChange = (section_template: ISectionTemplate) => {\r\n    let path = '/section-template/edit';\r\n    localStorage.removeItem('section_template_id')\r\n    localStorage.setItem('section_template_id', section_template.id.toString())\r\n    localStorage.removeItem('section_number')\r\n    localStorage.setItem('section_number', section_template.number.toString())\r\n    localStorage.removeItem('teaching_form')\r\n    localStorage.setItem('teaching_form', section_template.teaching_form.toString())\r\n    let tutorial_template_page_list: any[] = []\r\n    tutorial_templates.tutorialTemplates.map(ele => {\r\n      if (ele.section_template_id === section_template.id){\r\n        localStorage.removeItem('tutorial_template_id')\r\n        localStorage.setItem('tutorial_template_id', ele.id.toString())\r\n        tutorial_template_pages.tutorialTemplatePages.map(element => {\r\n          if (element.tutorial_template_id === ele.id){\r\n            tutorial_template_page_list.push({\r\n              description: element.description,\r\n              id: element.id,\r\n              name: element.name,\r\n              tutorial_template_id: element.tutorial_template_id,\r\n              number: element.number\r\n            })\r\n          }\r\n          return null\r\n        })\r\n      }\r\n      return null\r\n    })\r\n    console.log(tutorial_template_page_list)\r\n    localStorage.removeItem('description_tutorial_template_page_list')\r\n    localStorage.setItem('description_tutorial_template_page_list', JSON.stringify(tutorial_template_page_list.sort((a, b) => a.number - b.number)))\r\n    history.push({\r\n      pathname: path\r\n    });\r\n\r\n    localStorage.removeItem(\"tutorial_name\");\r\n    localStorage.setItem('tutorial_name', section_template.name)\r\n  }\r\n\r\n  var id_x = localStorage.getItem('course_name');\r\n  let course_name: string = \"\";\r\n  if (id_x !== null) {\r\n    course_name = id_x;\r\n  }\r\n\r\n\r\n  const section_templateElements: (JSX.Element | null)[] = section_templates.sectionTemplates.filter((val) => {\r\n    if (props.value === \"\") {\r\n      return val;\r\n    }\r\n    else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))) {\r\n      return val;\r\n    }\r\n    return null\r\n  }).sort((a, b) => a.number - b.number).map((section_template, index) => {\r\n    //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n    if (!section_template) { return null; }\r\n    return (<tr className={`table-row ${(section_templates.selectedSectionTemplate && section_templates.selectedSectionTemplate.id === section_template.id) ? \"selected\" : \"\"}`}\r\n      key={`section_template_${section_template.id}`}>\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td>{section_template.name}</td>\r\n      <td>{course_name}</td>\r\n      <td>{section_template.teaching_form === true ? \"Dạy thông qua jisti\" : \"Tự đọc giáo trình\"}</td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n          if (props.onSelect) props.onSelect(section_template);\r\n          dispatch(setModificationStateSectionTemplate(SectionTemplateModificationStatus.Edit))\r\n          routeChange(section_template)\r\n        }}>Chỉnh sửa</button>\r\n      </td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"table-responsive portlet\">\r\n        <table className=\"table\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Tên</th>\r\n              <th scope=\"col\">Khóa học</th>\r\n              <th scope=\"col\">Hình thức</th>\r\n              <th scope=\"col\">Hành động</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {section_templateElements}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default SectionTemplateList;\r\n","import { fetchDataSuccess, fetchDataError, removeSectionTemplateAll, initialSectionTemplate, addSectionTemplate } from \"../../../store/actions/section_template.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface SectionTemplate {\r\n    id: any;\r\n    creator_id: number;\r\n    course_id: number;\r\n    name: string;\r\n    description: string;\r\n    number: number;\r\n    teaching_form: boolean;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getSectionTemplateByCourseId(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/section-template/course/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSectionTemplateByCourseId(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeSectionTemplateAll())\r\n                console.log(data.body.SectionTemplate)\r\n                data.body.SectionTemplate.map((ele: any, index: any) => {\r\n                    var section_template: SectionTemplate = {\r\n                        id: ele.id,\r\n                        creator_id: ele.creator_id,\r\n                        course_id: ele.course_id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        number: ele.number,\r\n                        teaching_form: ele.teaching_form,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialSectionTemplate(section_template));\r\n                    }\r\n                    else{\r\n                        return dispatch(addSectionTemplate(section_template))\r\n                    }\r\n                })\r\n                \r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { fetchDataSuccess, fetchDataError, removeTutorialTemplateAll, initialTutorialTemplate, addTutorialTemplate } from \"../../../store/actions/tutorial_template.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface TutorialTemplate {\r\n    id: any;\r\n    section_template_id: number;\r\n    name: string;\r\n    description: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getTutorialTemplate(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/tutorial-template`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTutorialTemplate(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeTutorialTemplateAll())\r\n                //console.log(data.body.lessons)\r\n                data.body.TutorialTemplate.map((ele: any, index: any) => {\r\n                    var tutorial_template: TutorialTemplate = {\r\n                        id: ele.id,\r\n                        section_template_id: ele.section_template_id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialTutorialTemplate(tutorial_template));\r\n                    }\r\n                    else{\r\n                        return dispatch(addTutorialTemplate(tutorial_template))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { fetchDataSuccess, fetchDataError, removeTutorialTemplatePageAll, initialTutorialTemplatePage } from \"../../../store/actions/tutorial_template_page.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface TutorialTemplatePage {\r\n    id: any;\r\n    tutorial_template_id: number;\r\n    name: string;\r\n    description: string;\r\n    number: number;\r\n}\r\nexport function getTutorialTemplatePage(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/tutorial-template-page`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTutorialTemplatePage(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeTutorialTemplatePageAll())\r\n                console.log(data.body.TutorialTemplatePage)\r\n                data.body.TutorialTemplatePage.map((ele: any, index: any) => {\r\n                    var tutorial_template_page: TutorialTemplatePage = {\r\n                        id: ele.id,\r\n                        tutorial_template_id: ele.tutorial_template_id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        number: ele.number\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(initialTutorialTemplatePage(tutorial_template_page));\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useState, useEffect } from \"react\";\r\nimport SectionTemplateList from \"./SectionTemplateList\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport \"./SectionTemplate.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { ISectionTemplateState, IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedSectionTemplate, setModificationStateSectionTemplate,\r\n    changeSelectedSectionTemplate\r\n} from \"../../store/actions/section_template.action\";\r\nimport { SectionTemplateModificationStatus, ISectionTemplate } from \"../../store/models/section_template.interface\";\r\nimport { getSectionTemplateByCourseId } from \"../../common/service/SectionTemplate/GetSectionTemplateByCourseId\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { getTutorialTemplate } from \"../../common/service/TutorialTemplate/GetTutorialTemplate\";\r\nimport { getTutorialTemplatePage } from \"../../common/service/TutorialTemplatePage/GetTutorialTemplatePage\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst SectionTemplate: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const SectionTemplates: ISectionTemplateState = useSelector((state: IStateType) => state.section_templates);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberItemsCount: number = SectionTemplates.sectionTemplates.length;\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    \r\n    var id_x = localStorage.getItem('course_id');\r\n    let course_id: number = 0;\r\n    if (id_x != null){\r\n        course_id = parseInt(id_x);\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getSectionTemplateByCourseId(dispatch, course_id)) \r\n                    trackPromise(getTutorialTemplatePage(dispatch))\r\n                    trackPromise(getTutorialTemplate(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getSectionTemplateByCourseId(dispatch, course_id)) \r\n                trackPromise(getTutorialTemplate(dispatch))\r\n                trackPromise(getTutorialTemplatePage(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, course_id])\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedSectionTemplate());\r\n        dispatch(updateCurrentPath(\"Buổi học\", \"Danh sách\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    function onSectionTemplateSelect(SectionTemplate: ISectionTemplate): void {\r\n        dispatch(changeSelectedSectionTemplate(SectionTemplate));\r\n        dispatch(setModificationStateSectionTemplate(SectionTemplateModificationStatus.None));\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <ToastContainer />\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Buổi học</h1>\r\n            <p className=\"mb-4\">Thông tin chung</p>\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ Buổi học\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"text\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                                setSearchTerm(event.target.value)\r\n                                console.log(searchTerm)\r\n                            }}/>\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Danh sách buổi học</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <SectionTemplateList\r\n                                onSelect={onSectionTemplateSelect} value={searchTerm}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default SectionTemplate;\r\n","import React, {useRef} from \"react\";\r\nimport ReactQuill, { Quill } from 'react-quill';\r\nimport EditorToolbar, { modules, formats } from \"./EditorToolbar\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"./Style.css\";\r\nimport ImageResize from 'quill-image-resize-module-react';\r\n\r\nQuill.register('modules/imageResize', ImageResize);\r\n\r\nexport const Editor = (props) => {\r\n  console.log(`Input: ${props.setValue}`)\r\n  const reactQuillRef = useRef(null);\r\n  React.useEffect(() => {\r\n    if (reactQuillRef.current.getEditor() && props.isCreate === false){\r\n        reactQuillRef.current.getEditor().clipboard.dangerouslyPasteHTML(props.setValue)\r\n    }\r\n  }, [reactQuillRef, props.setValue, props.isCreate]);\r\n  //console.log(reactQuillRef)\r\n  \r\n  //const quill = reactQuillRef.current.editor;\r\n  //console.log(quill)\r\n  //quill.clipboard.dangerouslyPasteHTML(props.setValue);\r\n  \r\n  const [state, setState] = React.useState({ value: null });\r\n  const handleChange = value => {\r\n    setState({ value });\r\n    props.getValue(value)\r\n    //console.log(value)\r\n  };\r\n\r\n  console.log(`State: ${state.value}`)\r\n  return (\r\n    <div className=\"text-editor\">\r\n      <EditorToolbar />\r\n      <ReactQuill\r\n        ref={reactQuillRef}\r\n        theme=\"snow\"\r\n        value={state.value}\r\n        onChange={handleChange}\r\n        placeholder={\"Write something awesome...\"}\r\n        modules={modules}\r\n        formats={formats}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getTutorialTemplatePageByTutorialTemplateId } from \"./GetTutorialTemplatePageByTutorialTemplateId\";\r\n\r\nexport function putTutorialTemplatePage(id: any, tutorialtemplatepage: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/tutorial-template-page/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(tutorialtemplatepage)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putTutorialTemplatePage(id, tutorialtemplatepage, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(getTutorialTemplatePageByTutorialTemplateId(tutorialtemplatepage.tutorial_template_id))\r\n                toast.update(idx, { render: \"Điều chỉnh thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Điều chỉnh không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/tutorial_template.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteTutorialTemplatePage(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/tutorial-template-page/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    'Authorization': bearer,\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                    'Access-Control-Allow-Credentials': 'true'\r\n                }\r\n            }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteTutorialTemplatePage(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getTutorialTemplatePageByTutorialTemplateId } from \"./GetTutorialTemplatePageByTutorialTemplateId\";\r\n\r\nexport function putTutorialTemplatePage1(id: any, tutorialtemplatepage: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/tutorial-template-page/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(tutorialtemplatepage)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putTutorialTemplatePage1(id, tutorialtemplatepage))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(getTutorialTemplatePageByTutorialTemplateId(tutorialtemplatepage.tutorial_template_id))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch, Fragment, useEffect, ChangeEvent } from \"react\";\r\nimport { IStateType, ISectionTemplateState, ITutorialTemplatePageState, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ISectionTemplate } from \"../../store/models/section_template.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport Editor from \"../../common/components/Quill/EditorEditSection\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { putTutorialTemplatePage } from \"../../common/service/TutorialTemplatePage/PutTutorialTemplatePage\";\r\n\r\n\r\nimport { deleteTutorialTemplatePage } from \"../../common/service/TutorialTemplatePage/DeleteTutorialTemplatePage\";\r\nimport \"./SectionTemplate.css\"\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { getTutorialTemplatePageByTutorialTemplateId } from \"../../common/service/TutorialTemplatePage/GetTutorialTemplatePageByTutorialTemplateId\";\r\nimport { postTutorialTemplatePage1 } from \"../../common/service/TutorialTemplatePage/PostTutorialTemplatePage1\";\r\nimport { putTutorialTemplatePage1 } from \"../../common/service/TutorialTemplatePage/PutTutorialTemplatePage1\";\r\nimport { putSectionTemplate } from \"../../common/service/SectionTemplate/PutSectionTemplate\";\r\n\r\n\r\nexport type SectionTemplateListProps = {\r\n    children?: React.ReactNode;\r\n};\r\n\r\ntype Options = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\ntype PageContent = {\r\n    page: number;\r\n    content: string;\r\n}\r\n\r\ntype TutorialPageTemplate = {\r\n    id: any;\r\n    tutorial_template_id: number;\r\n    name: string;\r\n    number: number;\r\n    description: string;\r\n}\r\n\r\nfunction SectionTemplateForm(props: SectionTemplateListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const section_templates: ISectionTemplateState | null = useSelector((state: IStateType) => state.section_templates);\r\n    const tutorial_template_pages: ITutorialTemplatePageState | null = useSelector((state: IStateType) => state.tutorial_template_pages);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    console.log(tutorial_template_pages.tutorialTemplatePages)\r\n    let section_template: ISectionTemplate | null = section_templates.selectedSectionTemplate;\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    var id_x = localStorage.getItem('section_template_id');\r\n    let section_template_id: number = 0;\r\n    if (id_x !== null) {\r\n        section_template_id = parseInt(id_x)\r\n    }\r\n\r\n    var id_y = localStorage.getItem('section_number');\r\n    let section_number: number = 0;\r\n    if (id_y !== null) {\r\n        section_number = parseInt(id_y)\r\n    }\r\n\r\n    var id_z = localStorage.getItem('description_tutorial_template_page_list');\r\n    let list_description: TutorialPageTemplate[] = []\r\n    let initial_text = \"\"\r\n    if (id_z !== null) {\r\n        list_description = JSON.parse(id_z);\r\n        initial_text = list_description.length !== 0 ? list_description[0].description : \"\";\r\n    }\r\n\r\n\r\n    var id_t = localStorage.getItem('tutorial_template_id');\r\n    let tutorial_template_id: number = 0;\r\n    if (id_t !== null) {\r\n        tutorial_template_id = parseInt(id_t)\r\n    }\r\n\r\n    var id_h = localStorage.getItem('tutorial_name');\r\n    let tutorial_name: string = \"\";\r\n    if (id_h !== null) {\r\n        tutorial_name = id_h\r\n    }\r\n\r\n    var id_k = localStorage.getItem('teaching_form');\r\n    let teaching_form: string = \"\";\r\n    if (id_k !== null) {\r\n        teaching_form = id_k\r\n    }\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    dispatch(getTutorialTemplatePageByTutorialTemplateId(tutorial_template_id))\r\n                }\r\n            }\r\n            else {\r\n                dispatch(getTutorialTemplatePageByTutorialTemplateId(tutorial_template_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, tutorial_template_id])\r\n\r\n    let [textHtml, setTextHtml] = useState(initial_text);\r\n\r\n    if (!section_template) {\r\n        section_template = { id: 0, name: \"\", creator_id: 0, course_id: 0, number: 0, teaching_form: false, create_time: \"\", update_time: \"\" };\r\n    }\r\n\r\n    console.log(tutorial_template_pages.tutorialTemplatePages)\r\n    if (tutorial_template_pages.tutorialTemplatePages.length === 0) {\r\n        section_template = { id: 0, name: \"\", creator_id: 0, course_id: 0, number: 0, teaching_form: false, create_time: \"\", update_time: \"\" };\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khóa học chung\", \"Soạn giáo án\"));\r\n    }, [path.area, dispatch]);\r\n\r\n\r\n    const [formState, setFormState] = useState({\r\n        name: { error: \"\", value: section_template.name },\r\n        number: { error: \"\", value: section_template.number },\r\n        teaching_form: { error: \"\", value: section_template.teaching_form },\r\n        course_id: { error: \"\", value: section_template.course_id },\r\n        creator_id: { error: \"\", value: section_template.creator_id },\r\n        create_time: { error: \"\", value: section_template.create_time },\r\n        update_time: { error: \"\", value: section_template.update_time }\r\n    });\r\n    const [totalPage, setTotalPage] = useState(list_description.length);\r\n    const [currentPage, setCurrentPage] = useState<number>(1)\r\n    const [value, setValue] = useState(\"\")\r\n\r\n    const [checkCreateNew, setCheckCreateNew] = useState(false);\r\n    const [checkAfterCreate, setCheckAfterCreate] = useState(false);\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    //console.log(totalPage)\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n\r\n        handleSave()\r\n    }\r\n\r\n    function handleRemove() {\r\n        if (tutorial_template_pages !== null) {\r\n            if (checkCreateNew === true  && currentPage === totalPage && checkAfterCreate === false) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n            else if (checkCreateNew === true  && currentPage !== totalPage) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n            else {\r\n                const k = currentPage;\r\n                let x = totalPage - 1;\r\n                setTotalPage(x)\r\n\r\n                const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                    position: toast.POSITION.TOP_CENTER\r\n                });\r\n                if (k === tutorial_template_pages.tutorialTemplatePages.length) {\r\n                    let y = k - 1;\r\n                    setCurrentPage(y)\r\n                    dispatch(deleteTutorialTemplatePage(tutorial_template_pages.tutorialTemplatePages[k - 1].id))\r\n                    handleBackPage()\r\n                }\r\n                else {\r\n                    tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number).map((ele, idx) => {\r\n                        if (k - 1 === ele.number) {\r\n                            dispatch(deleteTutorialTemplatePage(ele.id));\r\n                        }\r\n                        else if (ele.number > k - 1) {\r\n                            dispatch(putTutorialTemplatePage1(ele.id, {\r\n                                description: ele.description,\r\n                                name: ele.name,\r\n                                tutorial_template_id: tutorial_template_id,\r\n                                number: ele.number - 1\r\n                            }))\r\n                        }\r\n                        return 2\r\n                    })\r\n                    handleBackPage()\r\n                }\r\n                toast.update(idx, { render: \"Xóa bước thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleSave() {\r\n        if (tutorial_template_pages !== null) {\r\n            const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            const k = currentPage;\r\n\r\n            dispatch(putSectionTemplate(section_template_id, {\r\n                name: formState.name.value,\r\n                teaching_form: value2 === \"true\" ? true : false,\r\n                number: section_number,\r\n                creator_id: localStorage.getItem('id'),\r\n                course_id: localStorage.getItem('course_id')\r\n            }))\r\n\r\n            if (checkCreateNew === true) {\r\n                if (k - 1 === tutorial_template_pages.tutorialTemplatePages.length) {\r\n                    dispatch(postTutorialTemplatePage1({\r\n                        description: value,\r\n                        name: formState.name.value,\r\n                        tutorial_template_id: tutorial_template_id,\r\n                        number: tutorial_template_pages.tutorialTemplatePages.length\r\n                    }, idx))\r\n                }\r\n                else {\r\n                    tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number).map((ele, idx) => {\r\n                        if (ele.number === k - 1) {\r\n                            console.log('1')\r\n                            dispatch(putTutorialTemplatePage1(ele.id, {\r\n                                description: ele.description,\r\n                                name: ele.name,\r\n                                tutorial_template_id: tutorial_template_id,\r\n                                number: ele.number + 1\r\n                            }))\r\n                            dispatch(postTutorialTemplatePage1({\r\n                                description: value,\r\n                                name: formState.name.value,\r\n                                tutorial_template_id: tutorial_template_id,\r\n                                number: ele.number\r\n                            }, idx))\r\n                        }\r\n                        else if (ele.number > k - 1) {\r\n                            if (ele.number < tutorial_template_pages.tutorialTemplatePages.length - 1) {\r\n                                console.log('2')\r\n                                dispatch(putTutorialTemplatePage1(ele.id, {\r\n                                    description: ele.description,\r\n                                    name: ele.name,\r\n                                    tutorial_template_id: tutorial_template_id,\r\n                                    number: ele.number + 1\r\n                                }))\r\n                            }\r\n                            else {\r\n                                dispatch(putTutorialTemplatePage(ele.id, {\r\n                                    description: ele.description,\r\n                                    name: ele.name,\r\n                                    tutorial_template_id: tutorial_template_id,\r\n                                    number: ele.number + 1\r\n                                }, idx))\r\n                            }\r\n                        }\r\n                        return 1\r\n                    })\r\n\r\n                    /* dispatch(postTutorialTemplatePage({\r\n                        description: value,\r\n                        name: formState.name.value,\r\n                        tutorial_template_id: tutorial_template_id,\r\n                        number: k - 1\r\n                    })) */\r\n                }\r\n                setCheckCreateNew(false)\r\n            }\r\n            else {\r\n                if (k < tutorial_template_pages.tutorialTemplatePages.length + 1) {\r\n                    dispatch(putTutorialTemplatePage(tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number)[k - 1].id, {\r\n                        description: value,\r\n                        name: tutorial_name,\r\n                        tutorial_template_id: tutorial_template_id,\r\n                        number: k - 1\r\n                    }, idx))\r\n                    console.log({\r\n                        description: value,\r\n                        name: tutorial_name,\r\n                        tutorial_template_id: tutorial_template_id,\r\n                        number: k - 1\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch(postTutorialTemplatePage1({\r\n                        description: value,\r\n                        name: formState.name.value,\r\n                        tutorial_template_id: tutorial_template_id,\r\n                        number: tutorial_template_pages.tutorialTemplatePages.length\r\n                    }, idx))\r\n\r\n                    console.log({\r\n                        description: value,\r\n                        name: tutorial_name,\r\n                        tutorial_template_id: tutorial_template_id,\r\n                        number: tutorial_template_pages.tutorialTemplatePages.length\r\n                    })\r\n                }\r\n            }\r\n            setCheckAfterCreate(true)\r\n\r\n            toast.update(idx, { render: \"Điều chỉnh thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n        }\r\n    }\r\n\r\n\r\n    function handleNextPage() {\r\n        if (tutorial_template_pages !== null) {\r\n            if (checkCreateNew === true || (currentPage === totalPage && checkAfterCreate === false)) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n            else {\r\n                if (checkAfterCreate === true) {\r\n                    let x = currentPage + 1;\r\n                    setCurrentPage(x)\r\n                    console.log(tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number))\r\n                    setTextHtml(tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number)[x - 1] !== undefined ? tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number)[x - 1].description : \"\")\r\n                    setChecked(false)\r\n                    setValue(\"\")\r\n                    setCheckAfterCreate(false);\r\n                }\r\n                else {\r\n                    let x = currentPage + 1;\r\n                    setCurrentPage(x)\r\n                    console.log(tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number))\r\n                    setTextHtml(tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number)[x - 1] !== undefined ? tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number)[x - 1].description : \"\")\r\n                    setChecked(false)\r\n                    setValue(\"\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function getValue(value: any) {\r\n        setValue(value);\r\n        setChecked(true)\r\n    }\r\n\r\n    console.log(checkCreateNew)\r\n    console.log(checkAfterCreate)\r\n    function handleBackPage() {\r\n        if (tutorial_template_pages !== null) {\r\n            if (checkCreateNew === true  && currentPage === totalPage && checkAfterCreate === false) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n            else if (checkCreateNew === true  && currentPage !== totalPage) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n            else {\r\n                let x = currentPage - 1;\r\n                setCurrentPage(x)\r\n                console.log(tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number))\r\n                setTextHtml(tutorial_template_pages.tutorialTemplatePages.sort((a, b) => a.number - b.number)[x - 1].description)\r\n                setChecked(false)\r\n                setValue(\"\")\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function handleNewPage() {\r\n        if (checkCreateNew === true  && currentPage === totalPage && checkAfterCreate === false) {\r\n            toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 2000,\r\n            });\r\n        }\r\n        else if (checkCreateNew === true  && currentPage !== totalPage) {\r\n            toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 2000,\r\n            });\r\n        }\r\n        else {\r\n            let x = currentPage + 1;\r\n            setCurrentPage(x)\r\n            setCheckCreateNew(true)\r\n            let y = totalPage + 1;\r\n            setTotalPage(y)\r\n            console.log(currentPage - 1)\r\n            setChecked(false)\r\n            setTextHtml(\"\")\r\n            setValue(\"\")\r\n        }\r\n    }\r\n    const listTeachingForm: Options[] = [\r\n        {\r\n            \"name\": \"Dạy thông qua Jitsi\",\r\n            \"value\": \"true\"\r\n        },\r\n        {\r\n            \"name\": \"Tự đọc giáo trình\",\r\n            \"value\": \"false\"\r\n        }\r\n    ]\r\n\r\n    const [error2, setError2] = useState(\"\");\r\n    const [htmlClass2, setHtmlClass2] = useState(\"\");\r\n    const [value2, setValue2] = useState(teaching_form);\r\n\r\n\r\n    function onValueChanged2(event: ChangeEvent<HTMLSelectElement>): void {\r\n        let [error2, validClass2, elementValue2] = [\"\", \"\", event.target.value];\r\n\r\n        [error2, validClass2] = (!elementValue2) ?\r\n            [\"Value has to be selected\", \"is-invalid\"] : [\"\", \"is-valid\"];\r\n\r\n        setError2(error2);\r\n        setHtmlClass2(validClass2);\r\n        setValue2(elementValue2);\r\n    }\r\n\r\n\r\n    const getOptions2: (JSX.Element | null)[] = listTeachingForm.map((option: any, index: number) => {\r\n        return (\r\n            <option key={index} value={option.value}>{option.name}</option>\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"col-xl-12 col-lg-12\">\r\n                <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\">Buổi {section_number}</h6>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={saveUser}>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <TextInput id=\"input_name\"\r\n                                        value={formState.name.value}\r\n                                        field=\"name\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={2000}\r\n                                        label=\"Tên giáo trình\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label htmlFor={`input_teaching_form`}>Hình thức dạy</label>\r\n                                    <select\r\n                                        value={value2}\r\n                                        id={`input_teaching_form`}\r\n                                        className={`form-control  ${htmlClass2}`}\r\n                                        onChange={onValueChanged2}>\r\n                                        <option value={0}>Choose...</option>\r\n                                        {getOptions2}\r\n                                    </select>\r\n\r\n                                    {error2 ?\r\n                                        <div className=\"invalid-feedback\">\r\n                                            {error2}\r\n                                        </div> : null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Nội dung bước {currentPage} / {totalPage}</label>\r\n                                <Editor getValue={getValue} isCreate={checked} setValue={textHtml} />\r\n                            </div>\r\n                            {\r\n                                function () {\r\n                                    if (currentPage < totalPage) {\r\n                                        if (currentPage === 1) {\r\n                                            return (\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                                                        <button type=\"button\" className=\"btn btn-info right-margin\" onClick={handleSave}>Lưu</button>\r\n                                                        <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleNextPage}>Bước tiếp theo</button>\r\n                                                    </div>\r\n                                                    <div className=\"col-xl-8 col-md-8 col-xs-8\">\r\n                                                        <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNewPage}>Thêm bước</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        else {\r\n                                            return (\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                                                        <button type=\"button\" className=\"btn btn-info right-margin\" onClick={handleBackPage}>Trở về</button>\r\n                                                        <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleSave}>Lưu</button>\r\n                                                        <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleNextPage}>Bước tiếp theo</button>\r\n                                                    </div>\r\n                                                    <div className=\"col-xl-8 col-md-8 col-xs-8\">\r\n                                                        <button type=\"button\" className=\"btn btn-error right-margin add-step btn-remove ml-2\" onClick={handleRemove}>Xóa bước</button>\r\n                                                        <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNewPage}>Thêm bước</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    }\r\n                                }()\r\n                            }\r\n                            {\r\n                                function () {\r\n                                    if (currentPage === totalPage) {\r\n                                        if (totalPage === 1) {\r\n                                            return (\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-xl-6 col-md-6 col-xs-6\">\r\n                                                        <button type=\"submit\" className={`btn btn-primary left-margin ml-2`}>Hoàn thành</button>\r\n                                                    </div>\r\n                                                    <div className=\"col-xl-6 col-md-6 col-xs-6\">\r\n                                                        <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNewPage}>Thêm bước</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        else {\r\n\r\n                                        }\r\n                                        return (\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-xl-6 col-md-6 col-xs-6\">\r\n                                                    <button type=\"button\" className=\"btn btn-info right-margin\" onClick={handleBackPage}>Trở về</button>\r\n                                                    <button type=\"submit\" className={`btn btn-primary left-margin ml-2`}>Hoàn thành</button>\r\n                                                </div>\r\n                                                <div className=\"col-xl-6 col-md-6 col-xs-6\">\r\n                                                    <button type=\"button\" className=\"btn btn-error right-margin add-step btn-remove ml-2\" onClick={handleRemove}>Xóa bước</button>\r\n                                                    <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNewPage}>Thêm bước</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                }()\r\n                            }\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default SectionTemplateForm;","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/section_template.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getSectionTemplate } from \"./GetSectionTemplate\";\r\n\r\nexport function putSectionTemplate(id: any, data: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/section-template/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putSectionTemplate(id,data))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                console.log(id)\r\n                getSectionTemplate(dispatch)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { PropsWithChildren, ReactElement } from \"react\";\r\nimport { ICardProperties } from \"../types/TopCard.types\";\r\n\r\nfunction TopCard(props: PropsWithChildren<ICardProperties>): ReactElement {\r\n    return (\r\n        <div className=\"col-xl-3 col-md-6 mb-4\">\r\n            <div className={`card border-left-${props.class} shadow h-100 py-2`} id=\"topcard-teacher\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row no-gutters align-items-center\">\r\n                        <div className=\"col mr-2\">\r\n                            <div className=\"text-xs font-weight-bold text-green text-uppercase mb-1\">{props.title}</div>\r\n                            <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{props.text}</div>\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                            <i className={`fas fa-${props.icon} fa-2x text-gray-300`} id=\"icon-teacher\"></i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default TopCard;\r\n","export interface ITeacherRegisterQuantification {\r\n    id: any;\r\n    teacher_id: number;\r\n    teacher_name: string;\r\n    reviewer_id: number;\r\n    course_id: number;\r\n    course_name: string;\r\n    art_age_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    degree_photo_url: string;\r\n    status: string;\r\n}\r\n\r\nexport enum TeacherRegisterQuantificationModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import React, { Dispatch, PropsWithChildren, ReactElement } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { changeSelectedTeacherRegisterQuatificationApproved, setModificationState } from \"../../store/actions/teacher_register_quantification.action\";\r\nimport { TeacherRegisterQuantificationModificationStatus } from \"../../store/models/teacher_register_quantification.interface\";\r\nimport { ICardProperties } from \"../types/TopCardLevel.types\";\r\n\r\nfunction TopCardLevel(props: PropsWithChildren<ICardProperties>): ReactElement {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const history = useHistory();\r\n    const routeChange = (course_name: string, art_age_name: string, art_level_name: string, art_type_name: string, degree_photo_url: string) =>{ \r\n        let path = '/teacher-level/detail'; \r\n        history.push({\r\n            pathname: path,\r\n            state: { course_name: course_name, art_age_name: art_age_name, art_level_name: art_level_name, art_type_name: art_type_name, degree_photo_url: degree_photo_url}\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-xl-12 col-md-12 mb-4\" onClick={() => {\r\n            routeChange(props.course_name, props.art_age_name, props.art_level_name, props.art_type_name,\r\n                props.degree_photo_url)}}\r\n        >\r\n            <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row no-gutters align-items-center\">\r\n                        <div className=\"col mr-2\">\r\n                            <div className=\"text-xs font-weight-bold text-green text-uppercase mb-1\">{props.course_name}</div>\r\n                        </div>\r\n                        <div className=\"col-auto\" onClick={(e: any) => {\r\n                            e.stopPropagation()\r\n                            console.log(\"hello\")\r\n                            dispatch(changeSelectedTeacherRegisterQuatificationApproved(props.teacher_level));\r\n                            dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Edit))\r\n                        }}>\r\n                            <i className={`fas fa-${props.icon} fa-2x text-gray-300`} id=\"icon-user\"></i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default TopCardLevel;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TopCardLevel from \"../../common/components/TopCardLevel\";\r\nimport { IStateType, ITeacherRegisterQuantificationState } from \"../../store/models/root.interface\";\r\nimport { ITeacherRegisterQuantification } from \"../../store/models/teacher_register_quantification.interface\";\r\n\r\nexport type teacherRegisterQuantificationListProps = {\r\n    onSelect?: (teacherRegisterQuantification: ITeacherRegisterQuantification) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction TeacherRegisterQuantificationList(props: teacherRegisterQuantificationListProps): JSX.Element {\r\n    const teacherRegisterQuantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n\r\n    const teacherRegisterQuantificationElements: (JSX.Element | null)[] = teacherRegisterQuantifications.approveds.map((ele, index) => {\r\n        if (!ele) { return null; }\r\n        return (\r\n            <TopCardLevel \r\n                course_name={ele.course_name} \r\n                icon=\"book\" class=\"primary\" \r\n                art_age_name={ele.art_age_name}\r\n                art_level_name={ele.art_level_name}\r\n                art_type_name={ele.art_type_name}\r\n                degree_photo_url={ele.degree_photo_url} \r\n                teacher_level={ele}\r\n            />\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            {teacherRegisterQuantificationElements}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TeacherRegisterQuantificationList;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getTeacherRegisterQuantificationByTeacherId } from \"../../common/service/TeacherRegisterQuantification/GetTeacherRegisterQuantificationByTeacherId\";\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { changeSelectedTeacherRegisterQuatificationApproved, setModificationState } from \"../../store/actions/teacher_register_quantification.action\";\r\nimport { IStateType, ITeacherRegisterQuantificationState, IUserState } from \"../../store/models/root.interface\";\r\nimport { ITeacherRegisterQuantification, TeacherRegisterQuantificationModificationStatus } from \"../../store/models/teacher_register_quantification.interface\";\r\nimport \"./TeacherHome.css\"\r\nimport TeacherRegisterQuantificationList from \"./TeacherLevelList\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst TeacherHome: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const teacherRegisterQuantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const numberApprovedCount: number = teacherRegisterQuantifications.approveds.length;\r\n    const numberNotApprovedNowCount: number = teacherRegisterQuantifications.not_approved_now.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getTeacherRegisterQuantificationByTeacherId(dispatch, id))\r\n                    trackPromise(getUserById(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getTeacherRegisterQuantificationByTeacherId(dispatch, id))\r\n                trackPromise(getUserById(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, id]);\r\n\r\n    function onTeacherRegisterQuantificationSelect(teacherRegisterQuantification: ITeacherRegisterQuantification): void {\r\n        dispatch(changeSelectedTeacherRegisterQuatificationApproved(teacherRegisterQuantification));\r\n        dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.None));\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`${numberApprovedCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`${numberNotApprovedNowCount}`} icon=\"book\" class=\"danger\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <h3 className=\" mb-2\" id=\"level-teacher\">Trình độ đã duyệt</h3>\r\n                    <TeacherRegisterQuantificationList\r\n                        onSelect={onTeacherRegisterQuantificationSelect}\r\n                    />\r\n                    {/* <TopCardLevel title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`2`} icon=\"book\" class=\"primary\" />\r\n                    <TopCardLevel title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`1`} icon=\"book\" class=\"danger\" /> */}\r\n                </div>\r\n\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <h3 className=\" mb-2\" id=\"level-teacher\">Thông tin cá nhân</h3>\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                        <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row text-center text-center justify-content-center\">\r\n                                    <i className={`fas fa-user fa-10x`} id=\"icon-user\"></i>\r\n                                </div>\r\n                                <div className=\"row no-gutters justify-content-center\">\r\n                                    <h4 id=\"full-name\">{users.teachers.length === 0 ? \"\" : (users.teachers[0].firstName + \" \"+ users.teachers[0].lastName)}</h4>\r\n                                </div>\r\n                                <div className=\"row no-gutters justify-content-center\">\r\n                                    <p id=\"username-teacher\">{users.teachers.length === 0 ? \"\" : users.teachers[0].username}</p>\r\n                                </div>\r\n                                <div className=\"row no-gutters\">\r\n                                    <i className={`fas fa-phone fa-2x`} id=\"icon-phone\"></i>\r\n                                    <p id=\"phone\">{users.teachers.length === 0 ? \"\" : users.teachers[0].phone}</p>\r\n                                </div>\r\n\r\n                                <div className=\"row no-gutters\">\r\n                                    <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                    <p id=\"phone\">{users.teachers.length === 0 ? \"\" : users.teachers[0].email}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default TeacherHome;\r\n","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction ScheduleForClassList(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const time_schedules = useSelector((state) => state.time_schedules);\r\n  \r\n\r\n\r\n\r\n  const datas = time_schedules.timeSchedules;\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n\r\n  function viewStartTime(cell, row) {\r\n    return (\r\n        <span>{row.start_time.replaceAll('T', \" \")}</span>\r\n    )\r\n  }\r\n\r\n  function viewEndTime(cell, row) {\r\n    return (\r\n        <span>{row.end_time.replaceAll('T', \" \")}</span>\r\n    )\r\n  }\r\n\r\n  function viewSection(cell, row, rowIndex) {\r\n    return (\r\n        <span>Buổi {rowIndex + 1}</span>\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'name',\r\n      text: 'Buổi học',\r\n      filter: textFilter(),\r\n      formatter: viewSection\r\n    },\r\n    {\r\n      dataField: 'start_time',\r\n      text: 'Thời gian bắt đầu',\r\n      formatter: viewStartTime\r\n    },\r\n    {\r\n        dataField: 'end_time',\r\n        text: 'Thời gian kết thúc',\r\n        formatter: viewEndTime\r\n      },\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default ScheduleForClassList;\r\n","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IStateType, IRootPageStateType, ITimeScheduleState } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedProduct\r\n} from \"../../store/actions/products.action\";\r\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, ViewsDirective, ViewDirective } from \"@syncfusion/ej2-react-schedule\";\r\n\r\nimport \"@syncfusion/ej2-base/styles/material.css\";\r\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\r\nimport { getInfoMyClass } from \"../../common/service/MyClass/GetInfoMyClass\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport ScheduleForClassList from \"./ScheduleForClassList\";\r\n\r\nconst ScheduleClass: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const time_schedules: ITimeScheduleState = useSelector((state: IStateType) => state.time_schedules);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let data: object[] = []\r\n\r\n    time_schedules.timeSchedules.map((ele: any, index: any) => {\r\n        return data.push({\r\n            Id: index,\r\n            Subject: `Buổi học ${index + 1}`,\r\n            StartTime: new Date(ele.start_time),\r\n            EndTime: new Date(ele.end_time),\r\n            IsAllDay: false\r\n        })\r\n    })\r\n\r\n    var id_x = localStorage.getItem('class_id')\r\n    let class_id: number = 0;\r\n    if (id_x !== null){\r\n        class_id = parseInt(id_x)\r\n    }\r\n\r\n\r\n    var id_y = localStorage.getItem('class_name')\r\n    let class_name: string = \"\";\r\n    if (id_y !== null){\r\n        class_name = id_y\r\n    }\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getInfoMyClass(dispatch, class_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getInfoMyClass(dispatch, class_id))\r\n            }\r\n        }\r\n    }, [dispatch, class_id, access_token, refresh_token]);\r\n\r\n    console.log(new Date(2018, 1, 15, 12, 30))\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedProduct());\r\n        dispatch(updateCurrentPath(\"Lớp\",\"\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> :<Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">{class_name}</h1>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Lịch học chi tiết</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <ScheduleForClassList />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default ScheduleClass;\r\n","import { ICourseTeacherNew, CourseTeacherNewModificationStatus } from \"../models/course_teacher_new.interface\";\r\nexport const ADD_COURSE_TEACHER_NEW: string = \"ADD_COURSE_TEACHER_NEW\";\r\nexport const EDIT_COURSE_TEACHER_NEW: string = \"EDIT_COURSE_TEACHER_NEW\";\r\nexport const REMOVE_COURSE_TEACHER_NEW: string = \"REMOVE_COURSE_TEACHER_NEW\";\r\nexport const CHANGE_COURSE_TEACHER_NEW_AMOUNT: string = \"CHANGE_COURSE_TEACHER_NEW_AMOUNT\";\r\nexport const CHANGE_COURSE_TEACHER_NEW_PENDING_EDIT: string = \"CHANGE_COURSE_TEACHER_NEW_PENDING_EDIT\";\r\nexport const CLEAR_COURSE_TEACHER_NEW_PENDING_EDIT: string = \"CLEAR_COURSE_TEACHER_NEW_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_COURSE_TEACHER_NEW_ALL: string = \"REMOVE_COURSE_TEACHER_NEW_ALL\";\r\nexport const INITIAL_COURSE_TEACHER_NEW: string = \"INITIAL_COURSE_TEACHER_NEW\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course_teacher_new: ICourseTeacherNew) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course_teacher_new\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCourseTeacherNew(course_teacher_new: ICourseTeacherNew): IInitialCourseTeacherNewActionType {\r\n    return { type: INITIAL_COURSE_TEACHER_NEW, course_teacher_new: course_teacher_new };\r\n}\r\n\r\nexport function removeCourseTeacherNewAll(): IRemoveCourseTeacherNewAllActionType {\r\n    return { type: REMOVE_COURSE_TEACHER_NEW_ALL };\r\n}\r\n\r\nexport function addCourseTeacherNew(course_teacher_new: ICourseTeacherNew): IAddCourseTeacherNewActionType {\r\n    return { type: ADD_COURSE_TEACHER_NEW, course_teacher_new: course_teacher_new };\r\n}\r\n\r\nexport function editCourseTeacherNew(course_teacher_new: ICourseTeacherNew): IEditCourseTeacherNewActionType {\r\n    return { type: EDIT_COURSE_TEACHER_NEW, course_teacher_new: course_teacher_new };\r\n}\r\n\r\nexport function removeCourseTeacherNew(id: any): IRemoveCourseTeacherNewActionType {\r\n    return { type: REMOVE_COURSE_TEACHER_NEW, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseTeacherNew(course_teacher_new: ICourseTeacherNew): IChangeSelectedCourseTeacherNewActionType {\r\n    return { type: CHANGE_COURSE_TEACHER_NEW_PENDING_EDIT, course_teacher_new: course_teacher_new };\r\n}\r\n\r\nexport function clearSelectedCourseTeacherNew(): IClearSelectedCourseTeacherNewActionType {\r\n    return { type: CLEAR_COURSE_TEACHER_NEW_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseTeacherNewModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddCourseTeacherNewActionType { type: string, course_teacher_new: ICourseTeacherNew };\r\ninterface IEditCourseTeacherNewActionType { type: string, course_teacher_new: ICourseTeacherNew };\r\ninterface IRemoveCourseTeacherNewActionType { type: string, id: any };\r\ninterface IChangeSelectedCourseTeacherNewActionType { type: string, course_teacher_new: ICourseTeacherNew };\r\ninterface IClearSelectedCourseTeacherNewActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  CourseTeacherNewModificationStatus};\r\ninterface IRemoveCourseTeacherNewAllActionType { type: string }\r\ninterface IInitialCourseTeacherNewActionType {type: string, course_teacher_new: ICourseTeacherNew}","import { logout } from \"../../../store/actions/account.actions\";\r\nimport { fetchDataSuccess, fetchDataError, removeCourseTeacherNewAll, initialCourseTeacherNew, addCourseTeacherNew } from \"../../../store/actions/course_teacher_new.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface CourseTeacherNew {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    art_type_id: number;\r\n    art_level_id: number;\r\n    art_age_id: number;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    total: number;\r\n    total_registed: number;\r\n    student_registered_name: string[];\r\n    student_registered_id: number[];\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getCourseTeacherNew(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/course/teacher/new/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getCourseTeacherNew(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeCourseTeacherNewAll())\r\n                console.log(data.body.courses)\r\n                data.body.courses.map((ele: any, index: any) => {\r\n                    var course: CourseTeacherNew = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        is_enabled: ele.is_enabled,\r\n                        art_type_id: ele.art_type_id,\r\n                        art_level_id: ele.art_level_id,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        total: ele.total,\r\n                        total_registed: ele.total_registed,\r\n                        student_registered_id: ele.student_registered_id,\r\n                        student_registered_name: ele.student_registered_name,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n\r\n                    }\r\n                    console.log(course)\r\n                    if (index === 0){\r\n                        return dispatch(initialCourseTeacherNew(course));\r\n                    }\r\n                    else{\r\n                        return dispatch(addCourseTeacherNew(course))\r\n                    }\r\n                })\r\n                dispatch(logout())\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\nimport { ICourseTeacherNew } from \"../../store/models/course_teacher_new.interface\";\r\nimport { IArtAgeState, IArtLevelState, IArtTypeState, ICourseTeacherNewState, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./CourseTeacherList.css\"\r\n\r\nexport type semesterListProps = {\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n  };\r\n\r\nfunction CourseTeacherList(props: semesterListProps): JSX.Element {\r\n    const course_teachers: ICourseTeacherNewState = useSelector((state: IStateType) => state.course_teacher_new);\r\n    const art_types: IArtTypeState = useSelector((state: IStateType) => state.art_types);\r\n    const art_ages: IArtAgeState = useSelector((state: IStateType) => state.art_ages);\r\n    const art_levels: IArtLevelState = useSelector((state: IStateType) => state.art_levels);\r\n    \r\n    const [totalPage, setTotalPage] = useState(0)\r\n    const [element, setElement] = useState<ICourseTeacherNew[]>([])\r\n    const history = useHistory();\r\n    const routeChange = (course: ICourseTeacherNew) =>{ \r\n        localStorage.removeItem('course_id');\r\n        localStorage.setItem('course_id', course.id.toString())\r\n        let path = '/courses/semester-classes'; \r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        let x = (course_teachers.courses.length - course_teachers.courses.length % 6) /6;\r\n        if (x === 0) {\r\n            setElement(course_teachers.courses)\r\n        }\r\n        else {\r\n            setElement(course_teachers.courses.slice(0,6))\r\n        }\r\n        \r\n         setTotalPage((x+1))\r\n    }, [course_teachers.courses])\r\n\r\n    console.log((totalPage))\r\n\r\n    function handlePagination(count: number) {\r\n        console.log(count)\r\n        if (count === totalPage) {\r\n            setElement(course_teachers.courses.slice(count*6))\r\n        }\r\n        else {\r\n            setElement(course_teachers.courses.slice(count*6,count*6 + 6))\r\n        }\r\n    }\r\n\r\n    const [filter, setFilter] = useState(1)\r\n    const [filter1, setFilter1] = useState(1)\r\n    const [filter2, setFilter2] = useState(1)\r\n\r\n\r\n    function handleChange(e: any) {\r\n        setFilter(e.target.value)\r\n    }\r\n\r\n    function handleChange1(e: any) {\r\n        setFilter1(e.target.value)\r\n    }\r\n\r\n    function handleChange2(e: any) {\r\n        setFilter2(e.target.value)\r\n    }\r\n\r\n    console.log(element)\r\n\r\n    function handleFilter() {\r\n        console.log(filter)\r\n        console.log(filter1)\r\n        console.log(filter2)\r\n        let k = course_teachers.courses.filter((ele, idx) => \r\n        ele !== undefined && ele.art_type_id == filter && ele.art_age_id == filter1 && ele.art_level_id == filter2\r\n        )\r\n\r\n        let x = (k.length - (k.length) % 6) / 6;\r\n        if (x === 0) {\r\n            setElement(k)\r\n        }\r\n        else {\r\n            setElement(k.slice(0, 6))\r\n        }\r\n        setTotalPage((x + 1))\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"d-flex flex-row justify-content-between align-items-center filters\">\r\n                            <h6 className=\"ml-3\">Có {element.filter((val) => {\r\n                            if (props.value === \"\"){\r\n                              return val;\r\n                            }\r\n                            else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))){\r\n                              return val;\r\n                            }\r\n                            return null\r\n                          }).length} kết quả</h6>\r\n                            <div className=\"right-sort\">\r\n                                <div className=\"sort-by mr-3\">\r\n                                    <span className=\"mr-1\">Lọc theo:</span>\r\n                                    <select name=\"cars\" id=\"cars\"\r\n                                        value={filter}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        {\r\n                                            art_types.artTypes.map((ele, idx) => {\r\n                                                return (\r\n                                                    <option value={ele.id}>{ele.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select>   \r\n                                    <select name=\"cars\" id=\"cars\" className=\"pl-2\"\r\n                                        value={filter1}\r\n                                        onChange={handleChange1}\r\n                                    >\r\n                                        {\r\n                                            art_ages.artAges.map((ele, idx) => {\r\n                                                return (\r\n                                                    <option value={ele.id}>{ele.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                    <select name=\"cars\" id=\"cars\" className=\"pl-2\"\r\n                                        value={filter2}\r\n                                        onChange={handleChange2}\r\n                                    >\r\n                                        {\r\n                                            art_levels.artLevels.map((ele, idx) => {\r\n                                                return (\r\n                                                    <option value={ele.id}>{ele.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select>                                 \r\n                                    <button className=\"btn btn-outline-dark btn-sm ml-3 filter\" type=\"button\" onClick={() => handleFilter()}>Lọc&nbsp;<i className=\"fa fa-flask\"></i></button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-1\">\r\n                    {\r\n                        element.filter((val) => {\r\n                            if (props.value === \"\"){\r\n                              return val;\r\n                            }\r\n                            else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))){\r\n                              return val;\r\n                            }\r\n                            return null\r\n                          }).map((ele, index) => {\r\n                            return (\r\n                                <div className=\"col-md-4\" onClick={() => {routeChange(ele)}}>\r\n                                    <div className=\"p-card bg-white p-2 rounded px-3 product-x\">\r\n                                        <div className=\"d-flex align-items-center credits\"><img src={ele.image_url} width=\"100%\" alt=\"\"/></div>\r\n                                        <h5 className=\"mt-2\">{ele.name}</h5><span className=\"badge badge-danger py-1 mb-2\">{ele.art_type_name} &amp; {ele.art_age_name} &amp; {ele.art_level_name}</span><span className=\"d-block mb-5\">Hiện tại khóa học mở {ele.total} lớp.</span>\r\n                                        <div\r\n                                            className=\"d-flex justify-content-between stats\">\r\n                                            <div><i className=\"fa fa-calendar-o\"></i><span className=\"ml-2\">Giá: {ele.price} VND</span></div>\r\n                                            <div className=\"d-flex flex-row align-items-center\">\r\n                                                <div className=\"profiles\"><img className=\"rounded-circle\" src=\"https://i.imgur.com/4nUVGjW.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\" https://i.imgur.com/GHCtqgp.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\"https://i.imgur.com/UL0GS75.jpg\" alt=\"\" width=\"30\" /></div><span className=\"ml-3\">12</span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"d-flex justify-content-end text-right mt-2\">\r\n                    <nav>\r\n                        <ul className=\"pagination\">\r\n                        <li className=\"page-item\">\r\n                            <a className=\"page-link\" aria-label=\"Previous\" href=\"javascript:void(0);\" onClick={(e) => e.preventDefault()}>\r\n                                <span aria-hidden=\"true\">&laquo;</span>\r\n                            </a>\r\n                        </li>\r\n                            {\r\n                                Array.from(Array((totalPage)).keys()).map((ele, idx) => {\r\n                                    return (\r\n                                        <li className=\"page-item\"><a className=\"page-link\" href=\"javascript:void(0);\" onClick={(e) => {\r\n                                            e.preventDefault()\r\n                                            handlePagination(ele)}}>{ele+1}</a></li>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Next\" href=\"javascript:void(0);\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&raquo;</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default CourseTeacherList;\r\n","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./CourseTeacher.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getCourseTeacherNew } from \"../../common/service/CourseTeacherNew/GetCourseTeacherNew\";\r\nimport CourseTeacherList from \"./CourseTeacherList\";\r\nimport { getArtType } from \"../../common/service/ArtType/GetArtType\";\r\nimport { getArtAge } from \"../../common/service/ArtAge/GetArtAge\";\r\nimport { getArtLevel } from \"../../common/service/ArtLevel/GetArtLevel\";\r\n\r\nconst CourseTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    //const semester_classs: ISemesterClassState = useSelector((state: IStateType) => state.semester_classes);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getCourseTeacherNew(dispatch, id))\r\n                    trackPromise(getArtType(dispatch))\r\n                    trackPromise(getArtAge(dispatch))\r\n                    trackPromise(getArtLevel(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getCourseTeacherNew(dispatch, id))\r\n                trackPromise(getArtType(dispatch))\r\n                trackPromise(getArtAge(dispatch))\r\n                trackPromise(getArtLevel(dispatch))\r\n            }\r\n        }      \r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khám phá\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"input-group\" id=\"search-content\">\r\n                            <div className=\"form-outline\">\r\n                                <input type=\"text\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                                    setSearchTerm(event.target.value)\r\n                                    console.log(searchTerm)\r\n                                }} />\r\n                            </div>\r\n                            <button type=\"button\" className=\"btn btn-primary\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            <div className=\"row\">\r\n                <CourseTeacherList\r\n                    value={searchTerm}\r\n                />\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default CourseTeacher;\r\n","import { ITimeScheduleTeacher, TimeScheduleTeacherModificationStatus } from \"../models/time_schedule_teacher.interface\";\r\nexport const ADD_TIME_SCHEDULE_TEACHER: string = \"ADD_TIME_SCHEDULE_TEACHER\";\r\nexport const EDIT_TIME_SCHEDULE_TEACHER: string = \"EDIT_TIME_SCHEDULE_TEACHER\";\r\nexport const REMOVE_TIME_SCHEDULE_TEACHER: string = \"REMOVE_TIME_SCHEDULE_TEACHER\";\r\nexport const CHANGE_TIME_SCHEDULE_TEACHER_AMOUNT: string = \"CHANGE_TIME_SCHEDULE_TEACHER_AMOUNT\";\r\nexport const CHANGE_TIME_SCHEDULE_TEACHER_PENDING_EDIT: string = \"CHANGE_TIME_SCHEDULE_TEACHER_PENDING_EDIT\";\r\nexport const CLEAR_TIME_SCHEDULE_TEACHER_PENDING_EDIT: string = \"CLEAR_TIME_SCHEDULE_TEACHER_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_TIME_SCHEDULE_TEACHER_ALL: string = \"REMOVE_TIME_SCHEDULE_TEACHER_ALL\";\r\nexport const INITIAL_TIME_SCHEDULE_TEACHER: string = \"INITIAL_TIME_SCHEDULE_TEACHER\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(time_schedule_teacher: ITimeScheduleTeacher) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        time_schedule_teacher\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialTimeScheduleTeacher(time_schedule_teacher: ITimeScheduleTeacher): IInitialTimeScheduleActionType {\r\n    return { type: INITIAL_TIME_SCHEDULE_TEACHER, time_schedule_teacher: time_schedule_teacher };\r\n}\r\n\r\nexport function removeTimeScheduleTeacherAll(): IRemoveTimeScheduleAllActionType {\r\n    return { type: REMOVE_TIME_SCHEDULE_TEACHER_ALL };\r\n}\r\n\r\nexport function addTimeScheduleTeacher(time_schedule_teacher: ITimeScheduleTeacher): IAddTimeScheduleActionType {\r\n    return { type: ADD_TIME_SCHEDULE_TEACHER, time_schedule_teacher: time_schedule_teacher };\r\n}\r\n\r\nexport function editTimeScheduleTeacher(time_schedule_teacher: ITimeScheduleTeacher): IEditTimeScheduleActionType {\r\n    return { type: EDIT_TIME_SCHEDULE_TEACHER, time_schedule_teacher: time_schedule_teacher };\r\n}\r\n\r\nexport function removeTimeScheduleTeacher(id: any): IRemoveTimeScheduleActionType {\r\n    return { type: REMOVE_TIME_SCHEDULE_TEACHER, id: id };\r\n}\r\n\r\nexport function changeSelectedTimeScheduleTeacher(time_schedule_teacher: ITimeScheduleTeacher): IChangeSelectedTimeScheduleActionType {\r\n    return { type: CHANGE_TIME_SCHEDULE_TEACHER_PENDING_EDIT, time_schedule_teacher: time_schedule_teacher };\r\n}\r\n\r\nexport function clearSelectedTimeScheduleTeacher(): IClearSelectedTimeScheduleActionType {\r\n    return { type: CLEAR_TIME_SCHEDULE_TEACHER_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: TimeScheduleTeacherModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddTimeScheduleActionType { type: string, time_schedule_teacher: ITimeScheduleTeacher };\r\ninterface IEditTimeScheduleActionType { type: string, time_schedule_teacher: ITimeScheduleTeacher };\r\ninterface IRemoveTimeScheduleActionType { type: string, id: any };\r\ninterface IChangeSelectedTimeScheduleActionType { type: string, time_schedule_teacher: ITimeScheduleTeacher };\r\ninterface IClearSelectedTimeScheduleActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  TimeScheduleTeacherModificationStatus};\r\ninterface IRemoveTimeScheduleAllActionType { type: string }\r\ninterface IInitialTimeScheduleActionType {type: string, time_schedule_teacher: ITimeScheduleTeacher}","import { fetchDataSuccess, fetchDataError, addTimeScheduleTeacher, removeTimeScheduleTeacherAll } from \"../../../store/actions/time_schedule_teacher.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\ninterface TimeScheduleTeacher {\r\n    class_name: string;\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\nexport function getScheduleTeacher(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/classes/teacher/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getScheduleTeacher(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeTimeScheduleTeacherAll())\r\n                //console.log(data.body.schedule_time)\r\n                data.body.schedule_time.map((ele: any, index: any) => {\r\n                    let x = Object.values(ele)\r\n                    let y = Object.keys(ele)\r\n                    return x.map((ele_1: any, idx: any) => {\r\n                        //console.log(ele_1)\r\n                        return Object.values(ele_1).map((ele_2: any) => {\r\n                            //console.log(ele_2)\r\n                            let x_1 = Object.values(ele_2)\r\n                            return x_1.map((ele_3: any) => {\r\n                                return ele_3.map((ele_4: any) => {\r\n                                    console.log(ele_4)\r\n                                    if (ele_4.length !== 0){\r\n                                        let time: TimeScheduleTeacher = {\r\n                                            class_name: y[idx],\r\n                                            start_time: ele_4[0],\r\n                                            end_time: ele_4[1]\r\n                                        }\r\n                                        dispatch(addTimeScheduleTeacher(time))\r\n                                    }\r\n                                    return ele_4\r\n                                })\r\n                            })\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IRootPageStateType, ITimeScheduleTeacherState } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedProduct\r\n} from \"../../store/actions/products.action\";\r\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, ViewsDirective, ViewDirective } from \"@syncfusion/ej2-react-schedule\";\r\n\r\nimport \"@syncfusion/ej2-base/styles/material.css\";\r\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\r\n\r\nimport { getScheduleTeacher } from \"../../common/service/ScheduleTeacher/GetScheduleTeacher\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst ScheduleTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const time_schedule_teacherss: ITimeScheduleTeacherState = useSelector((state: IStateType) => state.time_schedule_teachers);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getScheduleTeacher(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getScheduleTeacher(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, id])\r\n    let data: object[] = []\r\n\r\n    //console.log(time_schedules.timeSchedules)\r\n\r\n    time_schedule_teacherss.timeScheduleTeachers.map((ele: any, index: any) => {\r\n        //console.log(ele)\r\n        if (ele !== undefined && ele !== null) {\r\n            return data.push({\r\n                Id: index,\r\n                Subject: `Lớp ${ele.class_name}:  Buổi học ${index + 1}`,\r\n                StartTime: new Date(ele.start_time),\r\n                EndTime: new Date(ele.end_time),\r\n                IsAllDay: false\r\n            })\r\n        }\r\n        return 1\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedProduct());\r\n        dispatch(updateCurrentPath(\"Thời khóa biểu\", \"\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-body\">\r\n                            <ScheduleComponent height='550px' selectedDate={new Date()} eventSettings={{\r\n                                dataSource: data, fields: {\r\n                                    id: 'Id',\r\n                                    subject: { name: 'Subject' },\r\n                                    isAllDay: { name: 'IsAllDay' },\r\n                                    startTime: { name: 'StartTime' },\r\n                                    endTime: { name: 'EndTime' }\r\n                                }\r\n                            }}>\r\n\r\n                                <ViewsDirective>\r\n                                    <ViewDirective option='WorkWeek' startHour='07:00' endHour='22:00' />\r\n                                    <ViewDirective option='Week' startHour='07:00' endHour='22:00' />\r\n                                    <ViewDirective option='Month' showWeekend={false} />\r\n                                </ViewsDirective>\r\n                                <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\r\n                            </ScheduleComponent>;\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default ScheduleTeacher;\r\n","import { ICourseTeacher, CourseTeacherModificationStatus } from \"../models/course_teacher.interface\";\r\n\r\n// register_successfull_courses\r\nexport const ADD_REGISTER_SUCCESSFULL_COURSE: string = \"ADD_REGISTER_SUCCESSFULL_COURSE\";\r\nexport const EDIT_REGISTER_SUCCESSFULL_COURSE: string = \"EDIT_REGISTER_SUCCESSFULL_COURSE\";\r\nexport const REMOVE_REGISTER_SUCCESSFULL_COURSE: string = \"REMOVE_REGISTER_SUCCESSFULL_COURSE\";\r\nexport const CHANGE_REGISTER_SUCCESSFULL_COURSE_AMOUNT: string = \"CHANGE_REGISTER_SUCCESSFULL_COURSE_AMOUNT\";\r\nexport const CHANGE_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT: string = \"CHANGE_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT\";\r\nexport const CLEAR_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT: string = \"CLEAR_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT\";\r\nexport const REMOVE_REGISTER_SUCCESSFULL_COURSE_ALL: string = \"REMOVE_REGISTER_SUCCESSFULL_COURSE_ALL\";\r\nexport const INITIAL_REGISTER_SUCCESSFULL_COURSE: string = \"INITIAL_REGISTER_SUCCESSFULL_COURSE\";\r\n\r\n// not_register_courses\r\nexport const ADD_NOT_REGISTER_COURSE: string = \"ADD_NOT_REGISTER_COURSE\";\r\nexport const EDIT_NOT_REGISTER_COURSE: string = \"EDIT_NOT_REGISTER_COURSE\";\r\nexport const REMOVE_NOT_REGISTER_COURSE: string = \"REMOVE_NOT_REGISTER_COURSE\";\r\nexport const CHANGE_NOT_REGISTER_COURSE_AMOUNT: string = \"CHANGE_NOT_REGISTER_COURSE_AMOUNT\";\r\nexport const CHANGE_NOT_REGISTER_COURSE_PENDING_EDIT: string = \"CHANGE_NOT_REGISTER_COURSE_PENDING_EDIT\";\r\nexport const CLEAR_NOT_REGISTER_COURSE_PENDING_EDIT: string = \"CLEAR_NOT_REGISTER_COURSE_PENDING_EDIT\";\r\nexport const REMOVE_NOT_REGISTER_COURSE_ALL: string = \"REMOVE_NOT_REGISTER_COURSE_ALL\";\r\nexport const INITIAL_NOT_REGISTER_COURSE: string = \"INITIAL_NOT_REGISTER_COURSE\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course: ICourseTeacher) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialRegisterSuccessfullCourse(course: ICourseTeacher): IInitialRegisterSuccessfullCourseActionType {\r\n    return { type: INITIAL_REGISTER_SUCCESSFULL_COURSE, course: course };\r\n}\r\n\r\nexport function removeRegisterSuccessfullCourseAll(): IRemoveRegisterSuccessfullCourseAllActionType {\r\n    return { type: REMOVE_REGISTER_SUCCESSFULL_COURSE_ALL };\r\n}\r\n\r\nexport function addRegisterSuccessfullCourse(course: ICourseTeacher): IAddRegisterSuccessfullCourseActionType {\r\n    return { type: ADD_REGISTER_SUCCESSFULL_COURSE, course: course };\r\n}\r\n\r\nexport function editRegisterSuccessfullCourse(course: ICourseTeacher): IEditRegisterSuccessfullCourseActionType {\r\n    return { type: EDIT_REGISTER_SUCCESSFULL_COURSE, course: course };\r\n}\r\n\r\nexport function removeRegisterSuccessfullCourse(id: any): IRemoveRegisterSuccessfullCourseActionType {\r\n    return { type: REMOVE_REGISTER_SUCCESSFULL_COURSE, id: id };\r\n}\r\n\r\nexport function changeSelectedRegisterSuccessfullCourse(course: ICourseTeacher): IChangeSelectedRegisterSuccessfullCourseActionType {\r\n    return { type: CHANGE_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT, course: course };\r\n}\r\n\r\nexport function clearSelectedRegisterSuccessfullCourse(): IClearSelectedRegisterSuccessfullCourseActionType {\r\n    return { type: CLEAR_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialNotRegisterCourse(course: ICourseTeacher): IInitialNotRegisterCourseActionType {\r\n    return { type: INITIAL_NOT_REGISTER_COURSE, course: course };\r\n}\r\n\r\nexport function removeNotRegisterCourseAll(): IRemoveNotRegisterCourseAllActionType {\r\n    return { type: REMOVE_NOT_REGISTER_COURSE_ALL };\r\n}\r\n\r\nexport function addNotRegisterCourse(course: ICourseTeacher): IAddNotRegisterCourseActionType {\r\n    return { type: ADD_NOT_REGISTER_COURSE, course: course };\r\n}\r\n\r\nexport function editNotRegisterCourse(course: ICourseTeacher): IEditNotRegisterCourseActionType {\r\n    return { type: EDIT_NOT_REGISTER_COURSE, course: course };\r\n}\r\n\r\nexport function removeNotRegisterCourse(id: any): IRemoveNotRegisterCourseActionType {\r\n    return { type: REMOVE_NOT_REGISTER_COURSE, id: id };\r\n}\r\n\r\nexport function changeSelectedCourse(course: ICourseTeacher): IChangeSelectedNotRegisterCourseActionType {\r\n    return { type: CHANGE_NOT_REGISTER_COURSE_PENDING_EDIT, course: course };\r\n}\r\n\r\nexport function clearSelectedNotRegisterCourse(): IClearSelectedNotRegisterCourseActionType {\r\n    return { type: CLEAR_NOT_REGISTER_COURSE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseTeacherModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_courses\r\ninterface IAddRegisterSuccessfullCourseActionType { type: string, course: ICourseTeacher };\r\ninterface IEditRegisterSuccessfullCourseActionType { type: string, course: ICourseTeacher };\r\ninterface IRemoveRegisterSuccessfullCourseActionType { type: string, id: any };\r\ninterface IChangeSelectedRegisterSuccessfullCourseActionType { type: string, course: ICourseTeacher };\r\ninterface IClearSelectedRegisterSuccessfullCourseActionType { type: string };\r\ninterface IRemoveRegisterSuccessfullCourseAllActionType { type: string }\r\ninterface IInitialRegisterSuccessfullCourseActionType {type: string, course: ICourseTeacher}\r\n\r\n// not_register_courses\r\ninterface IAddNotRegisterCourseActionType { type: string, course: ICourseTeacher };\r\ninterface IEditNotRegisterCourseActionType { type: string, course: ICourseTeacher };\r\ninterface IRemoveNotRegisterCourseActionType { type: string, id: any };\r\ninterface IChangeSelectedNotRegisterCourseActionType { type: string, course: ICourseTeacher };\r\ninterface IClearSelectedNotRegisterCourseActionType { type: string };\r\ninterface IRemoveNotRegisterCourseAllActionType { type: string }\r\ninterface IInitialNotRegisterCourseActionType {type: string, course: ICourseTeacher}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  CourseTeacherModificationStatus};","import { fetchDataSuccess, fetchDataError, removeNotRegisterCourseAll, removeRegisterSuccessfullCourseAll, initialNotRegisterCourse, initialRegisterSuccessfullCourse, addNotRegisterCourse, addRegisterSuccessfullCourse } from \"../../../store/actions/course_teacher.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface CourseTeacher {\r\n    id: any;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: number;\r\n    semester_class_id: number;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    semester_name: string;\r\n    image_url: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n    registration_deadline: string;\r\n}\r\nexport function getCourseTeacher(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/course/teacher/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getCourseTeacher(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeNotRegisterCourseAll())\r\n                dispatch(removeRegisterSuccessfullCourseAll())\r\n                console.log(data.body.register_successfull_courses.length)\r\n                data.body.register_successfull_courses.map((ele: any, index: any) => {\r\n                    var course: CourseTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        course_name: ele.course_name,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semster_class_id,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        schedule: ele.schedule,\r\n                        registration_deadline: ele.registration_deadline\r\n\r\n                    }\r\n                    console.log(course)\r\n                    if (index === 0){\r\n                        return dispatch(initialRegisterSuccessfullCourse(course));\r\n                    }\r\n                    else{\r\n                        return dispatch(addRegisterSuccessfullCourse(course))\r\n                    }\r\n                })\r\n\r\n                console.log(data.body.not_register_courses.length)\r\n                data.body.not_register_courses.map((ele: any, index: any) => {\r\n                    var course: CourseTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        course_name: ele.course_name,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semster_class_id,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        schedule: ele.schedule,\r\n                        registration_deadline: ele.registration_deadline\r\n\r\n                    }\r\n                    console.log(course)\r\n                    if (index === 0){\r\n                        return dispatch(initialNotRegisterCourse(course));\r\n                    }\r\n                    else{\r\n                        return dispatch(addNotRegisterCourse(course))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./CourseTeacherDetail.css\"\r\nimport { postRegisterTeachSemester } from \"../../common/service/UserTeachSemester/PostRegisterTeachSemester\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { GrLinkDown } from \"react-icons/gr\";\r\n\r\nconst CourseTeacherDetail: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khóa học\", \"\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    function handleClick() {\r\n        setChecked(!checked)\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    var id_a = localStorage.getItem('description_course');\r\n    var description_course: string = '';\r\n    if (id_a !== null) {\r\n        description_course = id_a;\r\n    }\r\n\r\n    var id_c = localStorage.getItem('course_name');\r\n    var course_name: string = '';\r\n    if (id_c !== null) {\r\n        course_name = id_c;\r\n    }\r\n\r\n    var id_d = localStorage.getItem('art_age_name');\r\n    var art_age_name: string = '';\r\n    if (id_d !== null) {\r\n        art_age_name = id_d;\r\n    }\r\n\r\n    var id_e = localStorage.getItem('art_type_name');\r\n    var art_type_name: string = '';\r\n    if (id_e !== null) {\r\n        art_type_name = id_e;\r\n    }\r\n\r\n    var id_f = localStorage.getItem('num_of_section');\r\n    var num_of_section: string = '';\r\n    if (id_f !== null) {\r\n        num_of_section = id_f;\r\n    }\r\n\r\n    var id_h = localStorage.getItem('schedule');\r\n    var schedule: string = '';\r\n    if (id_h !== null) {\r\n        schedule = id_h;\r\n    }\r\n\r\n    var id_k = localStorage.getItem('art_level_name');\r\n    var art_level_name: string = '';\r\n    if (id_k !== null) {\r\n        art_level_name = id_k;\r\n    }\r\n\r\n    var id_l = localStorage.getItem('semester_class_name');\r\n    var semester_class_name: string = '';\r\n    if (id_l !== null) {\r\n        semester_class_name = id_l;\r\n    }\r\n\r\n    var id_n = localStorage.getItem('semester_class_id');\r\n    var semester_class_id: number = 0;\r\n    if (id_n !== null) {\r\n        semester_class_id = parseInt(id_n);\r\n    }\r\n\r\n    var id_nx = localStorage.getItem('status');\r\n    var status: string = '';\r\n    if (id_nx !== null) {\r\n        status = id_nx;\r\n    }\r\n\r\n    function handleRegister() {\r\n        const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n        dispatch(postRegisterTeachSemester({\r\n            teacher_id: id,\r\n            semester_classes_id: semester_class_id\r\n        }, idx, routeHome))\r\n        console.log({\r\n            teacher_id: id,\r\n            semester_classes_id: semester_class_id\r\n        })\r\n        \r\n    }\r\n\r\n    function routeHome() {\r\n        let path = '/courses';\r\n        history.push(path)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"col-xl-12 col-lg-12\">\r\n                <div className=\"card shadow mb-4 shadow-1\">\r\n                    <div className=\"row no-gutters align-items-center\">\r\n                        <div className=\"text-xs font-weight-bold text-green text-uppercase \">\r\n                            <p className=\"fullname ml-2 mt-4\">{semester_class_name}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-6 col-md-6\">\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                                <div className=\"text-xs \">\r\n                                    <p className=\"birthday ml-2\">Khóa học: {course_name}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                                <div className=\"text-xs\">\r\n                                    <p className=\"birthday ml-2\">Thể loại: {art_type_name}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                                <div className=\"text-xs\">\r\n                                    <p className=\"birthday ml-2\">Độ tuổi: {art_age_name}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                                <div className=\"text-xs\">\r\n                                    <p className=\"birthday ml-2\">Trình độ: {art_level_name}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-xl-6 col-md-6\">\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                                <div className=\"text-xs mr-2\">\r\n                                    <p className=\"birthday\">Lịch học: {schedule}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                                <div className=\"text-xs\">\r\n                                    <p className=\"birthday\">Số buổi học: {num_of_section}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        function() {\r\n                            if (status === \"Not register\") {\r\n                                return (\r\n                                    <div className=\"row text-center justify-content-center\" id=\"btn-register-course\">\r\n                                        <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course\" onClick={() => handleRegister()}>\r\n                                            <i className=\"fas fa fa-plus\"></i>\r\n                                            Đăng kí ngay\r\n                                        </button>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        }()\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"btn-register-course\">\r\n                <div className=\"col-lg-12 col-md-12 col-xs-12 text-center justify-content-center\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course4\" onClick={() => handleClick()}>\r\n                        <GrLinkDown id=\"btn-payment\" color=\"#ffffff\" />\r\n                        Xem miêu tả\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <div className=\"col-xl-12 col-lg-12\">\r\n                                <div className=\"card-header py-3\">\r\n                                    <h6 className=\"m-0 font-weight-bold text-green\">Chi tiết</h6>\r\n                                </div>\r\n                                <div className=\"card shadow mb-4\">\r\n                                    <div className=\"card-body\" dangerouslySetInnerHTML={{ __html: description_course }}>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default CourseTeacherDetail;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester.actions\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getCourseTeacher } from \"../CourseTeacher/GetCourseTeacherByTeacher\";\r\n\r\nexport function postRegisterTeachSemester(data: any, idx: any,routeHome: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/teacher-teach-semester`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postRegisterTeachSemester(data, idx, routeHome))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (x => {\r\n                console.log(x)\r\n                getCourseTeacher(dispatch, data.teacher_id)\r\n                toast.update(idx, { render: \"Đăng kí thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                setTimeout(() => {\r\n                    routeHome()\r\n                }, 2000)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Đăng kí không thành công vì trùng lịch!\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch, Fragment, useEffect } from \"react\";\r\nimport { ICourseState, IStateType, ITeacherRegisterQuantificationState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ITeacherRegisterQuantification, TeacherRegisterQuantificationModificationStatus } from \"../../store/models/teacher_register_quantification.interface\";\r\nimport { editTeacherRegisterQuatificationNotApproved, clearSelectedTeacherRegisterNotQuatificationNow, setModificationState, addTeacherRegisterQuatificationNotApprovedNow } from \"../../store/actions/teacher_register_quantification.action\";\r\nimport { OnChangeModel, ITeacherRegisterLevelFormState } from \"../../common/types/Form.types\";\r\nimport { postTeaherLevel } from \"../../common/service/TeacherRegisterQuantification/PostTeacherLevel\";\r\nimport { ICourse } from \"../../store/models/course.interface\";\r\nimport SelectKeyValue from \"../../common/components/SelectKeyValue\";\r\nimport { putTeacherRegisterLevel } from \"../../common/service/TeacherRegisterQuantification/PutTeacherRegisterLevel\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type lessonListProps = {\r\n  isCheck: (value: boolean) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\ntype Options = {\r\n    name: string;\r\n    value: any;\r\n  }\r\n\r\nfunction TeacherLevelForm(props: lessonListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const teacher_register_not_approved_nows: ITeacherRegisterQuantificationState | null = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n  let teacher_register_not_approved: ITeacherRegisterQuantification | null = teacher_register_not_approved_nows.selectedTeacherRegisterQuantification;\r\n  const isCreate: boolean = (teacher_register_not_approved_nows.modificationState === TeacherRegisterQuantificationModificationStatus.Create);\r\n  const courses: ICourseState = useSelector((state: IStateType) => state.courses);\r\n  const listCourse: ICourse[] = courses.courses\r\n  //console.log(listLevel)\r\n  const listCourses: Options[] = [];\r\n  listCourse.map((ele) => {\r\n      let item: Options = { \"name\": ele.name, \"value\": ele.id }\r\n      return listCourses.push(item)\r\n  })\r\n  console.log(listCourses)\r\n  if (!teacher_register_not_approved || isCreate) {\r\n    teacher_register_not_approved = { id: 0, teacher_id: 0,teacher_name: \"\", reviewer_id: 0, course_id: 0, course_name: \"\", art_age_name: \"\", art_level_name: \"\", art_type_name: \"\", degree_photo_url: \"\", status: \"Not approved now\"};\r\n  }\r\n\r\n  const [formState, setFormState] = useState({\r\n    teacher_id: { error: \"\", value: teacher_register_not_approved.teacher_id },\r\n    course_id: { error: \"\", value: teacher_register_not_approved.course_id },\r\n    degree_photo_url: { error: \"\", value: teacher_register_not_approved.degree_photo_url },\r\n    status: { error: \"\", value: teacher_register_not_approved.status }\r\n  });\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    //console.log(formState)\r\n    console.log(formState.course_id)\r\n  }\r\n\r\n  async function saveUser(e: FormEvent<HTMLFormElement>){\r\n    e.preventDefault();\r\n    if (isFormInvalid()) {\r\n      return;\r\n    }\r\n    const id = toast.loading(\"Yêu cầu đang được gửi. Vui lòng đợi giây lát...\", {\r\n      position: toast.POSITION.TOP_CENTER\r\n    });\r\n\r\n    props.isCheck(false);\r\n\r\n    let saveUserFn: Function = (isCreate) ? addTeacherRegisterQuatificationNotApprovedNow : editTeacherRegisterQuatificationNotApproved;\r\n    \r\n    if (saveUserFn === addTeacherRegisterQuatificationNotApprovedNow) {\r\n      var url = await setImageAction();\r\n      saveForm(formState, saveUserFn, url, id);\r\n    }\r\n    else {\r\n      saveForm(formState, saveUserFn, preview, id);\r\n    }\r\n  }\r\n\r\n  function saveForm(formState: ITeacherRegisterLevelFormState, saveFn: Function, url: string, idx: any): void {\r\n    if (teacher_register_not_approved) {\r\n      \r\n      if (saveFn === addTeacherRegisterQuatificationNotApprovedNow) {\r\n        dispatch(postTeaherLevel({\r\n            teacher_id: localStorage.getItem('id'),\r\n            course_id: formState.course_id.value,\r\n            degree_photo_url: url,\r\n            status: \"Not approved now\"\r\n        }, idx));\r\n      }\r\n      else {\r\n        dispatch(putTeacherRegisterLevel(teacher_register_not_approved.id, {\r\n            teacher_id: localStorage.getItem('id'),\r\n            course_id: formState.course_id.value,\r\n            degree_photo_url: url,\r\n            status: \"Not approved now\"\r\n        }, idx));\r\n      }\r\n\r\n      console.log(saveFn)\r\n\r\n      dispatch(clearSelectedTeacherRegisterNotQuatificationNow());\r\n      dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.None));\r\n    }\r\n  }\r\n\r\n  function cancelForm(): void {\r\n    props.isCheck(false);\r\n    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.None));\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid();\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  function isFormInvalid(): boolean {\r\n    return (formState.course_id.error \r\n      || !formState.course_id.value) as boolean;\r\n  }\r\n\r\n  const [image, setImage] = useState<any>();\r\n\r\n    const uploadPicture = (e: any) => {\r\n        setImage({\r\n            /* contains the preview, if you want to show the picture to the user\r\n                you can access it with this.state.currentPicture\r\n           */\r\n            picturePreview : URL.createObjectURL(e.target.files[0]),\r\n            /* this contains the file we want to send */\r\n            pictureAsFile : e.target.files[0]\r\n        })\r\n        setPreview(URL.createObjectURL(e.target.files[0]))\r\n    };\r\n\r\n    console.log(image)\r\n\r\n    async function setImageAction(){\r\n        const formData = new FormData();\r\n        formData.append(\r\n            \"gifFile\",\r\n            image.pictureAsFile\r\n        );\r\n        // do your post request\r\n        const res = await fetch(\r\n            `${process.env.REACT_APP_API_URL}/cloudinary/gifs`, {\r\n                method: \"POST\",\r\n                body: formData\r\n            }\r\n        )\r\n        const data = await res.json()\r\n        return data.url_image\r\n\r\n    };\r\n\r\n    const src = \"https://phutungnhapkhauchinhhang.com/wp-content/uploads/2020/06/default-thumbnail.jpg\"\r\n\r\n    const [preview, setPreview] = useState(src)\r\n    useEffect(() => {\r\n      if (isCreate === false && teacher_register_not_approved !== null) {\r\n        setPreview(teacher_register_not_approved.degree_photo_url)\r\n      }\r\n    }, [isCreate, teacher_register_not_approved])\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row text-left\">\r\n      <div className=\"col-xl-12 col-lg-12\">\r\n        <div className=\"card shadow shadow-xx\">\r\n          <div className=\"card-header py-3\">\r\n            <h6 className=\"m-0 font-weight-bold text-green\" id=\"header-form-teacher-level\">{(isCreate ? \"Đăng kí\" : \"Chỉnh\")} trình độ</h6>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={saveUser}>\r\n              <div className=\"form-group\">\r\n                    <SelectKeyValue id=\"input_course_id\"\r\n                      field = \"course_id\"\r\n                      value={formState.course_id.value}\r\n                      onChange={hasFormValueChanged}\r\n                      required={true}\r\n                      label=\"Khóa học\"\r\n                      options={listCourses}\r\n                  />\r\n                </div>\r\n                <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <label htmlFor=\"profile_image\">Băng cấp (Chấp nhận: jpg, svg, png):</label>\r\n                                    <input type=\"file\" id=\"profile_image\" name=\"profile_image\" onChange={uploadPicture}/>\r\n                                </div>\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <img src={preview} alt=\"Preview\" id=\"avatar\"/>\r\n                                </div>\r\n                            </div>\r\n              <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n              <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TeacherLevelForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess } from \"../../../store/actions/teacher_register_quantification.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postNotifyDb } from \"../NotifyDb/PostNotifyDb\";\r\nimport { getTeacherRegisterQuantificationByTeacherId } from \"./GetTeacherRegisterQuantificationByTeacherId\";\r\n\r\nexport function postTeaherLevel(teacher_level: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    console.log(teacher_level)\r\n    let id_x = localStorage.getItem('id');\r\n    var id = 0;\r\n    if (id_x !== null) {\r\n        id = parseInt(id_x);\r\n    }\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/teacher-register-level`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(teacher_level)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postTeaherLevel(teacher_level, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(postNotifyDb({\r\n                    name: `Gửi yêu cầu đăng kí trình độ!`,\r\n                    description: `Giáo viên gửi yêu cầu đăng kí trình độ!`\r\n                }, id))\r\n                toast.update(idx, { render: \"Gửi yêu cầu thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });           \r\n                dispatch(fetchDataSuccess(teacher_level))\r\n                getTeacherRegisterQuantificationByTeacherId(dispatch, teacher_level.teacher_id)\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Gửi yêu cầu không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess } from \"../../../store/actions/teacher_register_quantification.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getTeacherRegisterQuantificationByTeacherId } from \"./GetTeacherRegisterQuantificationByTeacherId\";\r\n\r\nexport function putTeacherRegisterLevel(id: any, teacher_level: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/teacher-register-level/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(teacher_level)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putTeacherRegisterLevel(id, teacher_level, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                toast.update(idx, { render: \"Gửi yêu cầu thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataSuccess(teacher_level))\r\n                getTeacherRegisterQuantificationByTeacherId(dispatch, teacher_level.teacher_id)\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Gửi yêu cầu không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TopCardLevel from \"../../common/components/TopCardLevel\";\r\nimport { IStateType, ITeacherRegisterQuantificationState } from \"../../store/models/root.interface\";\r\nimport { ITeacherRegisterQuantification } from \"../../store/models/teacher_register_quantification.interface\";\r\n\r\nexport type teacherRegisterQuantificationListProps = {\r\n    onSelect?: (teacherRegisterQuantification: ITeacherRegisterQuantification) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction TeacherLevelList(props: teacherRegisterQuantificationListProps): JSX.Element {\r\n    const teacherRegisterQuantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n\r\n    const teacherRegisterQuantificationElements: (JSX.Element | null)[] = teacherRegisterQuantifications.approveds.map((ele, index) => {\r\n        if (!ele) { return null; }\r\n        return (\r\n            <tr className={`table-row`} key={`semester_class_${index}`}>\r\n            <TopCardLevel \r\n                course_name={ele.course_name} \r\n                icon=\"edit\" class=\"warning\" \r\n                art_age_name={ele.art_age_name}\r\n                art_level_name={ele.art_level_name}\r\n                art_type_name={ele.art_type_name}\r\n                degree_photo_url={ele.degree_photo_url}\r\n                teacher_level={ele}\r\n            />\r\n            </tr>\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n         <div className=\"table-responsive portlet\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {teacherRegisterQuantificationElements}\r\n        </tbody>\r\n        </table>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default TeacherLevelList;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TopCardLevel from \"../../common/components/TopCardLevel\";\r\nimport { IStateType, ITeacherRegisterQuantificationState } from \"../../store/models/root.interface\";\r\nimport { ITeacherRegisterQuantification } from \"../../store/models/teacher_register_quantification.interface\";\r\n\r\nexport type teacherRegisterQuantificationListProps = {\r\n    onSelect?: (teacherRegisterQuantification: ITeacherRegisterQuantification) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction TeacherLevelNotApprovedNowList(props: teacherRegisterQuantificationListProps): JSX.Element {\r\n    const teacherRegisterQuantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n\r\n    const teacherRegisterQuantificationElements: (JSX.Element | null)[] = teacherRegisterQuantifications.not_approved_now.map((ele, index) => {\r\n        if (!ele) { return null; }\r\n        return (\r\n            <TopCardLevel \r\n                course_name={ele.course_name} \r\n                icon=\"edit\" class=\"warning\" \r\n                art_age_name={ele.art_age_name}\r\n                art_level_name={ele.art_level_name}\r\n                art_type_name={ele.art_type_name}\r\n                degree_photo_url={ele.degree_photo_url}\r\n                teacher_level={ele}\r\n             />\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                function () {\r\n                    if (teacherRegisterQuantificationElements.length === 0) {\r\n                        return (\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <p id=\"not-data-not-register-now\">Không có dữ liệu!</p>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return teacherRegisterQuantificationElements\r\n                    } \r\n                }()\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TeacherLevelNotApprovedNowList;\r\n","export interface IClassTeacher {\r\n    id: any;\r\n    name: string;\r\n    course_id: number;\r\n    link_url: string;\r\n    semester_class_id: number;\r\n    user_register_teach_semester: number;\r\n    security_code: string;\r\n    total_student: number;\r\n    num_of_section: number;\r\n    course_name: string;\r\n    semester_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n}\r\n\r\nexport enum ClassTeacherModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Popup from \"reactjs-popup\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getTeacherRegisterQuantificationByTeacherId } from \"../../common/service/TeacherRegisterQuantification/GetTeacherRegisterQuantificationByTeacherId\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { changeSelectedTeacherRegisterQuatificationApproved, setModificationState } from \"../../store/actions/teacher_register_quantification.action\";\r\nimport { IRootPageStateType, IStateType, ITeacherRegisterQuantificationState } from \"../../store/models/root.interface\";\r\nimport { ITeacherRegisterQuantification, TeacherRegisterQuantificationModificationStatus } from \"../../store/models/teacher_register_quantification.interface\";\r\nimport \"./TeacherLevel.css\"\r\nimport TeacherLevelForm from \"./TeacherLevelForm\";\r\nimport TeacherLevelList from \"./TeacherLevelList\";\r\nimport TeacherLevelNotApprovedNowList from \"./TeacherLevelNotApprovedNowList\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getCourse } from \"../../common/service/Course/GetCourse\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\n\r\nconst TeacherLevel: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const teacherRegisterQuantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n    const numberApprovedCount: number = teacherRegisterQuantifications.approveds.length;\r\n    const numberNotApprovedNowCount: number = teacherRegisterQuantifications.not_approved_now.length;\r\n    const numberNotApprovedCount: number = teacherRegisterQuantifications.not_approves.length;\r\n    const [popup, setPopup] = useState(false);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getTeacherRegisterQuantificationByTeacherId(dispatch, id))\r\n                    trackPromise(getCourse(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getTeacherRegisterQuantificationByTeacherId(dispatch, id))\r\n                trackPromise(getCourse(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    function onTeacherRegisterQuantificationSelect(teacherRegisterQuantification: ITeacherRegisterQuantification): void {\r\n        dispatch(changeSelectedTeacherRegisterQuatificationApproved(teacherRegisterQuantification));\r\n        dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.None));\r\n    }\r\n\r\n    function onRemovePopup(value: boolean) {\r\n        setPopup(false);\r\n    }\r\n\r\n    function onTeacherLevelRemove() {\r\n        setPopup(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (teacherRegisterQuantifications.modificationState === TeacherRegisterQuantificationModificationStatus.Edit){\r\n            setPopup(true)\r\n        }\r\n    }, [teacherRegisterQuantifications.modificationState, popup])\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Trình độ\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n            <div className=\"row\">\r\n                <TopCard title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`${numberApprovedCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`${numberNotApprovedNowCount}`} icon=\"book\" class=\"danger\" />\r\n                <TopCard title=\"TRÌNH ĐỘ KHÔNG ĐƯỢC DUYỆT\" text={`${numberNotApprovedCount}`} icon=\"book\" class=\"danger\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n            <ToastContainer />\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12 mb-4\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() => \r\n                        {\r\n                            dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))\r\n                            onTeacherLevelRemove()\r\n                        }}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <h3 className=\" mb-2\" id=\"level-teacher\">Trình độ đã duyệt</h3>\r\n                    <TeacherLevelList\r\n                        onSelect={onTeacherRegisterQuantificationSelect}\r\n                    />\r\n                    {/* <TopCardLevel title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`2`} icon=\"book\" class=\"primary\" />\r\n                    <TopCardLevel title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`1`} icon=\"book\" class=\"danger\" /> */}\r\n                </div>\r\n\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <h3 className=\" mb-2\" id=\"level-teacher\">Trình độ chưa được duyệt</h3>\r\n                    <TeacherLevelNotApprovedNowList\r\n                        onSelect={onTeacherRegisterQuantificationSelect}\r\n                    />\r\n                    {/* <TopCardLevel title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`2`} icon=\"book\" class=\"primary\" />\r\n                    <TopCardLevel title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`1`} icon=\"book\" class=\"danger\" /> */}\r\n                </div>\r\n            </div>\r\n\r\n            <Popup\r\n                open={popup}\r\n                onClose={() => {\r\n                    setPopup(false)\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.None))\r\n                }}\r\n                closeOnDocumentClick\r\n            >\r\n                <>\r\n                    {\r\n                        function () {\r\n                            if ((teacherRegisterQuantifications.modificationState === TeacherRegisterQuantificationModificationStatus.Create) || ( teacherRegisterQuantifications.modificationState === TeacherRegisterQuantificationModificationStatus.Edit)) {\r\n                                return <TeacherLevelForm isCheck={onRemovePopup}/>\r\n                            }\r\n                        }()\r\n                    }\r\n                </>\r\n            </Popup>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default TeacherLevel;\r\n","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { clearSelectedTeacherRegisterNotQuatificationNow } from \"../../store/actions/teacher_register_quantification.action\";\r\n\r\ninterface DetailTeacherLevel {\r\n    art_age_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    course_name: string;\r\n    degree_photo_url: string;\r\n}\r\n\r\nconst TeacherLevelDetail: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n\r\n    const { state } = useLocation<any>();\r\n    let data: DetailTeacherLevel = {\r\n        art_age_name: \"\",\r\n        art_level_name: \"\",\r\n        art_type_name: \"\",\r\n        course_name: \"\",\r\n        degree_photo_url: \"\"\r\n    }\r\n    if (state !== undefined && state !== null) {\r\n        data = state\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedTeacherRegisterNotQuatificationNow());\r\n        dispatch(updateCurrentPath(\"Đăng kí trình độ\", \"Chi tiết\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"col-xl-12 col-lg-12\">\r\n                <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row no-gutters justify-content-center\">\r\n                            <h4 id=\"full-name\">{data.course_name}</h4>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <p className=\"col-4\" id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">Thể loại:</span> <span className=\"header-card-course-value-teacher\">{data.art_type_name}</span></p>\r\n                            <p className=\"col-4\" id=\"level-name-teacher\"><span className=\"header-card-course-teacher\">Trình độ:</span> <span className=\"header-card-course-value-teacher\">{data.art_level_name}</span></p>\r\n                            <p className=\"col-4\" id=\"age-name-teacher\"><span className=\"header-card-course-teacher\">Độ tuổi:</span> <span className=\"header-card-course-value-teacher\">{data.art_age_name}</span></p>\r\n                        </div>  \r\n                        <div className=\"row justify-content-center\">\r\n                            <img src={data.degree_photo_url} alt=\"Preview\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default TeacherLevelDetail;\r\n","import { IClassTeacher, ClassTeacherModificationStatus } from \"../models/class_teacher.interface\";\r\n\r\n// register_successfull_class_teachers\r\nexport const ADD_DOING_CLASS: string = \"ADD_DOING_CLASS\";\r\nexport const EDIT_DOING_CLASS: string = \"EDIT_DOING_CLASS\";\r\nexport const REMOVE_DOING_CLASS: string = \"REMOVE_DOING_CLASS\";\r\nexport const CHANGE_DOING_CLASS_AMOUNT: string = \"CHANGE_DOING_CLASS_AMOUNT\";\r\nexport const CHANGE_DOING_CLASS_PENDING_EDIT: string = \"CHANGE_DOING_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_DOING_CLASS_PENDING_EDIT: string = \"CLEAR_DOING_CLASS_PENDING_EDIT\";\r\nexport const REMOVE_DOING_CLASS_ALL: string = \"REMOVE_DOING_CLASS_ALL\";\r\nexport const INITIAL_DOING_CLASS: string = \"INITIAL_DOING_CLASS\";\r\n\r\n// not_register_class_teachers\r\nexport const ADD_DONE_CLASS: string = \"ADD_DONE_CLASS\";\r\nexport const EDIT_DONE_CLASS: string = \"EDIT_DONE_CLASS\";\r\nexport const REMOVE_DONE_CLASS: string = \"REMOVE_DONE_CLASS\";\r\nexport const CHANGE_DONE_CLASS_AMOUNT: string = \"CHANGE_DONE_CLASS_AMOUNT\";\r\nexport const CHANGE_DONE_CLASS_PENDING_EDIT: string = \"CHANGE_DONE_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_DONE_CLASS_PENDING_EDIT: string = \"CLEAR_DONE_CLASS_PENDING_EDIT\";\r\nexport const REMOVE_DONE_CLASS_ALL: string = \"REMOVE_DONE_CLASS_ALL\";\r\nexport const INITIAL_DONE_CLASS: string = \"INITIAL_DONE_CLASS\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(class_teacher: IClassTeacher) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        class_teacher\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialDoinglClass(class_teacher: IClassTeacher): IInitialDoinglClassActionType {\r\n    return { type: INITIAL_DOING_CLASS, class_teacher: class_teacher };\r\n}\r\n\r\nexport function removeDoinglClassAll(): IRemoveDoinglClassAllActionType {\r\n    return { type: REMOVE_DOING_CLASS_ALL };\r\n}\r\n\r\nexport function addDoinglClass(class_teacher: IClassTeacher): IAddDoinglClassActionType {\r\n    return { type: ADD_DOING_CLASS, class_teacher: class_teacher };\r\n}\r\n\r\nexport function editDoinglClass(class_teacher: IClassTeacher): IEditDoinglClassActionType {\r\n    return { type: EDIT_DOING_CLASS, class_teacher: class_teacher };\r\n}\r\n\r\nexport function removeDoinglClass(id: any): IRemoveDoinglClassActionType {\r\n    return { type: REMOVE_DOING_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedDoinglClass(class_teacher: IClassTeacher): IChangeSelectedDoinglClassActionType {\r\n    return { type: CHANGE_DOING_CLASS_PENDING_EDIT, class_teacher: class_teacher };\r\n}\r\n\r\nexport function clearSelectedDoinglClass(): IClearSelectedDoinglClassActionType {\r\n    return { type: CLEAR_DOING_CLASS_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialDoneClass(class_teacher: IClassTeacher): IInitialDoneClassActionType {\r\n    return { type: INITIAL_DONE_CLASS, class_teacher: class_teacher };\r\n}\r\n\r\nexport function removeDoneClassAll(): IRemoveDoneClassAllActionType {\r\n    return { type: REMOVE_DONE_CLASS_ALL };\r\n}\r\n\r\nexport function addDoneClass(class_teacher: IClassTeacher): IAddDoneClassActionType {\r\n    return { type: ADD_DONE_CLASS, class_teacher: class_teacher };\r\n}\r\n\r\nexport function editDoneClass(class_teacher: IClassTeacher): IEditDoneClassActionType {\r\n    return { type: EDIT_DONE_CLASS, class_teacher: class_teacher };\r\n}\r\n\r\nexport function removeDoneClass(id: any): IRemoveDoneClassActionType {\r\n    return { type: REMOVE_DONE_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedDoneClass(class_teacher: IClassTeacher): IChangeSelectedDoneClassActionType {\r\n    return { type: CHANGE_DONE_CLASS_PENDING_EDIT, class_teacher: class_teacher };\r\n}\r\n\r\nexport function clearSelectedDoneClass(): IClearSelectedDoneClassActionType {\r\n    return { type: CLEAR_DONE_CLASS_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ClassTeacherModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_class_teachers\r\ninterface IAddDoinglClassActionType { type: string, class_teacher: IClassTeacher };\r\ninterface IEditDoinglClassActionType { type: string, class_teacher: IClassTeacher };\r\ninterface IRemoveDoinglClassActionType { type: string, id: any };\r\ninterface IChangeSelectedDoinglClassActionType { type: string, class_teacher: IClassTeacher };\r\ninterface IClearSelectedDoinglClassActionType { type: string };\r\ninterface IRemoveDoinglClassAllActionType { type: string }\r\ninterface IInitialDoinglClassActionType {type: string, class_teacher: IClassTeacher}\r\n\r\n// not_register_class_teachers\r\ninterface IAddDoneClassActionType { type: string, class_teacher: IClassTeacher };\r\ninterface IEditDoneClassActionType { type: string, class_teacher: IClassTeacher };\r\ninterface IRemoveDoneClassActionType { type: string, id: any };\r\ninterface IChangeSelectedDoneClassActionType { type: string, class_teacher: IClassTeacher };\r\ninterface IClearSelectedDoneClassActionType { type: string };\r\ninterface IRemoveDoneClassAllActionType { type: string }\r\ninterface IInitialDoneClassActionType {type: string, class_teacher: IClassTeacher}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ClassTeacherModificationStatus};","import { fetchDataSuccess, fetchDataError, removeDoinglClassAll, removeDoneClassAll, initialDoinglClass, initialDoneClass,  addDoinglClass, addDoneClass } from \"../../../store/actions/class_teacher.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ClassTeacher {\r\n    id: any;\r\n    name: string;\r\n    course_id: number;\r\n    link_url: string;\r\n    semester_class_id: number;\r\n    user_register_teach_semester: number;\r\n    security_code: string;\r\n    total_student: number;\r\n    num_of_section: number;\r\n    course_name: string;\r\n    semester_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n}\r\nexport function getClassTeacher(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/classes/teacher/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getClassTeacher(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeDoinglClassAll())\r\n                dispatch(removeDoneClassAll())\r\n                console.log(data.body.classes_done)\r\n                console.log(data.body.classes_doing)\r\n                data.body.classes_done.map((ele: any, index: any) => {\r\n                    var class_teacher: ClassTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semester_class_id,\r\n                        link_url: ele.link_url,\r\n                        user_register_teach_semester: ele.user_register_teach_semester,\r\n                        security_code: ele.security_code,\r\n                        total_student: ele.total_student,\r\n                        num_of_section: ele.num_of_section,\r\n                        schedule: ele.schedule,\r\n                        course_name: ele.course_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name\r\n                    }\r\n                    console.log(class_teacher)\r\n                    if (index === 0){\r\n                        return dispatch(initialDoneClass(class_teacher));\r\n                    }\r\n                    else{\r\n                        return dispatch(addDoneClass(class_teacher))\r\n                    }\r\n                })\r\n\r\n                data.body.classes_doing.map((ele: any, index: any) => {\r\n                    var class_teacher: ClassTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        link_url: ele.link_url,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semester_class_id,\r\n                        user_register_teach_semester: ele.user_register_teach_semester,\r\n                        security_code: ele.security_code,\r\n                        total_student: ele.total_student,\r\n                        num_of_section: ele.num_of_section,\r\n                        schedule: ele.schedule,\r\n                        course_name: ele.course_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name\r\n                    }\r\n                    console.log(class_teacher)\r\n                    if (index === 0){\r\n                        return dispatch(initialDoinglClass(class_teacher));\r\n                    }\r\n                    else{\r\n                        return dispatch(addDoinglClass(class_teacher))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MyClassModificationStatus } from \"../../store/models/my_class.interface\";\r\nimport { setModificationState } from \"../../store/actions/my_class.action\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction ClassTeacherDoingList(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const class_teachers = useSelector((state) => state.class_teachers);\r\n  \r\n    const history = useHistory();\r\n  \r\n    \r\n    const routeChange = (class_teacher) => {\r\n        let path = '/classes/detail';\r\n        localStorage.removeItem(\"class_id\");\r\n        localStorage.setItem(\"class_id\", class_teacher.id.toString())\r\n        localStorage.removeItem('class_end');\r\n        localStorage.setItem('class_end', 'false');\r\n        history.push({\r\n          pathname: path,\r\n          state: { class_id: class_teacher.id }\r\n        });\r\n      }\r\n\r\n\r\n  const routeViewSchedule = (class_id, class_name) =>{ \r\n    localStorage.removeItem('class_id')\r\n    localStorage.setItem('class_id', class_id.toString())\r\n    localStorage.removeItem('class_name')\r\n    localStorage.setItem('class_name', class_name)\r\n    let path = '/class/schedule'; \r\n    history.push({\r\n      pathname: path,\r\n      state: { class_id: class_id }\r\n    });\r\n  }\r\n\r\n\r\n  const datas = class_teachers.class_doing;\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  function viewScheduleButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n            if(props.onSelect) props.onSelect(row);\r\n            routeViewSchedule(row.id, row.name)}}\r\n          >Chi tiết</button>\r\n    )\r\n  }\r\n\r\n  function detailClassButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-info\" onClick={() => {\r\n            if(props.onSelect) props.onSelect(row);\r\n            routeChange(row)}}\r\n          >Vào lớp</button>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'name',\r\n      text: 'Tên',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n        dataField: 'course_name',\r\n        text: 'Thuộc khóa học',\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: 'total_student',\r\n        text: 'Số học sinh',\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: 'num_of_section',\r\n        text: 'Số buổi học',\r\n        filter: textFilter()\r\n      },\r\n    {\r\n      dataField: '',\r\n      text: 'Lịch học',\r\n      formatter: viewScheduleButton\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: 'Hành động',\r\n      formatter: detailClassButton\r\n    },\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default ClassTeacherDoingList;\r\n","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MyClassModificationStatus } from \"../../store/models/my_class.interface\";\r\nimport { setModificationState } from \"../../store/actions/my_class.action\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction ClassTeacherEndList(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const class_teachers = useSelector((state) => state.class_teachers);\r\n  \r\n    const history = useHistory();\r\n  \r\n    \r\n    const routeChange = (class_teacher) => {\r\n        let path = '/classes-end/detail';\r\n        localStorage.removeItem(\"class_id\");\r\n        localStorage.setItem(\"class_id\", class_teacher.id.toString())\r\n        localStorage.removeItem('class_end');\r\n        localStorage.setItem('class_end', 'true');\r\n        history.push({\r\n          pathname: path,\r\n          state: { class_id: class_teacher.id }\r\n        });\r\n      }\r\n\r\n\r\n\r\n  const datas = class_teachers.class_done;\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  function detailClassButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n            if(props.onSelect) props.onSelect(row);\r\n            routeChange(row)}}\r\n          >Chi tiết</button>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'name',\r\n      text: 'Tên',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n        dataField: 'course_name',\r\n        text: 'Thuộc khóa học',\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: 'total_student',\r\n        text: 'Số học sinh',\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: 'num_of_section',\r\n        text: 'Số buổi học',\r\n        filter: textFilter()\r\n      },\r\n    {\r\n      dataField: '',\r\n      text: 'Hành động',\r\n      formatter: detailClassButton\r\n    },\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default ClassTeacherEndList;\r\n","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\nimport { changeSelectedDoinglClass, setModificationState } from \"../../store/actions/class_teacher.action\";\r\nimport { IClassTeacherState, IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport { IClassTeacher, ClassTeacherModificationStatus } from \"../../store/models/class_teacher.interface\";\r\nimport \"./ClassTeacher.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport ClassDoingList from \"./ClassTeachingTeacherList\";\r\nimport ClassDoneList from \"./ClassDoneTeacherList\";\r\nimport { getClassTeacher } from \"../../common/service/ClassTeacher/GetClassTeacher\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { getCourse } from \"../../common/service/Course/GetCourse\";\r\nimport { getSemester } from \"../../common/service/semester/GetSemester\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport ClassDoingList1 from \"./ClassTeachingTeacherList1\";\r\nimport ClassTeacherDoingList from \"./ClassTeacherDoingList\";\r\nimport ClassTeacherEndList from \"./ClassTeacherEndList\";\r\n\r\nconst ClassTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const class_teachers: IClassTeacherState = useSelector((state: IStateType) => state.class_teachers);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberClassDoingCount: number = class_teachers.class_doing.length;\r\n    const numberClassDoneCount: number = class_teachers.class_done.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getUserById(dispatch, id))\r\n                    trackPromise(getClassTeacher(dispatch, id))\r\n                    trackPromise(getCourse(dispatch))\r\n                    trackPromise(getSemester(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getUserById(dispatch, id))\r\n                trackPromise(getClassTeacher(dispatch,id))\r\n                trackPromise(getCourse(dispatch))\r\n                trackPromise(getSemester(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khóa học\", \"\"));\r\n    }, [dispatch, path.area])\r\n\r\n    function onClassTeacherSelect(class_teacher: IClassTeacher): void {\r\n        dispatch(changeSelectedDoinglClass(class_teacher));\r\n        dispatch(setModificationState(ClassTeacherModificationStatus.None));\r\n    }\r\n\r\n    const [checked, setChecked] = useState(true);\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ LỚP ĐANG DẠY\" text={`${numberClassDoingCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"SỐ LỚP ĐÃ DẠY\" text={`${numberClassDoneCount}`} icon=\"book\" class=\"primary\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(ClassTeacherModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked === false) {\r\n                            setChecked(true)\r\n                        }\r\n                    }} style={{\r\n                        color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Đang dạy</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked === true) {\r\n                            setChecked(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                        }}>Đã dạy</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#ffffff\" : \"#F24E1E\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách lớp</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ClassTeacherDoingList\r\n                                                    onSelect={onClassTeacherSelect}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách lớp</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ClassTeacherEndList\r\n                                                    onSelect={onClassTeacherSelect}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ClassTeacher;\r\n","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IAnonymousNotificationState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IAnonymousNotification, AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editAnonymousNotification, clearSelectedAnonymousNotification, setModificationStateAnonymousNotification, addAnonymousNotification } from \"../../store/actions/anonymous_notification.action\";\r\nimport { OnChangeModel, IAnonymousNotificationFormState } from \"../../common/types/Form.types\";\r\nimport { postNotificationByClass } from \"../../common/service/Notification/PostNotificationByClass\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type artAgeListProps = {\r\n    isCheck: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n    data?: any;\r\n};\r\n\r\n\r\nfunction NotificationClassTeacher(props: artAgeListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const notifications: IAnonymousNotificationState | null = useSelector((state: IStateType) => state.anonymous_notifications);\r\n    let notification: IAnonymousNotification | null = notifications.selectedAnonymousNotification;\r\n    const isCreate: boolean = (notifications.modificationState === AnonymousNotificationModificationStatus.Create);\r\n\r\n    if (!notification || isCreate) {\r\n        notification = { id: 0, name: \"\", description: \"\", time: \"\" };\r\n    }\r\n\r\n    const [formState, setFormState] = useState({\r\n        name: { error: \"\", value: notification.name },\r\n        description: { error: \"\", value: notification.description },\r\n        type_send: { error: \"\", value: \"Chon gửi tới\" },\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        props.isCheck(false);\r\n        let saveUserFn: Function = (isCreate) ? addAnonymousNotification : editAnonymousNotification;\r\n        saveForm(formState, saveUserFn);\r\n    }\r\n\r\n    function saveForm(formState: IAnonymousNotificationFormState, saveFn: Function): void {\r\n        if (notification) {\r\n            const id = toast.loading(\"Đang gửi thông báo. Vui lòng đợi trong giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            if (saveFn === addAnonymousNotification) {\r\n                if (props.data === undefined || props.data === null) {\r\n                    return \r\n                }\r\n                else {\r\n                    dispatch(postNotificationByClass(props.data.class_id,{\r\n                        name: formState.name.value,\r\n                        description: formState.description.value\r\n                    }, id))\r\n\r\n                    console.log({\r\n                        name: formState.name.value,\r\n                        description: formState.description.value,\r\n                        type_send: props.data.class_id\r\n                    })\r\n                }\r\n            }\r\n\r\n            dispatch(clearSelectedAnonymousNotification());\r\n            dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.None));\r\n        }\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        props.isCheck(false);\r\n        dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.name.error || !formState.name.value) as boolean;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} độ tuổi</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_email\"\r\n                                        value={formState.name.value}\r\n                                        field=\"name\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={20}\r\n                                        label=\"Tên\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_description\"\r\n                                        field=\"description\"\r\n                                        value={formState.description.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        maxLength={100}\r\n                                        label=\"Miêu tả\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default NotificationClassTeacher;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/art_age.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postNotificationByClass(id: any,data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/sendEmail/class/${id}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Authorization': bearer,\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                'Access-Control-Allow-Credentials': 'true'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }\r\n        )\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postNotificationByClass(id,data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then(data => {\r\n                toast.update(idx, { render: \"Thông báo gửi thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Thông báo gửi không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction StudentList(): JSX.Element {\r\n\r\n    const students: IUserState = useSelector((state: IStateType) => state.users);\r\n    const history = useHistory();\r\n\r\n    var id_x = localStorage.getItem('class_end');\r\n    let class_end = false;\r\n    if (id_x !== null) {\r\n        if (id_x === 'true') {\r\n            class_end = true;\r\n        }\r\n        else {\r\n            class_end = false;\r\n        }\r\n    }\r\n\r\n\r\n    const routeChange = (student_id: number, parent_id: number) => {\r\n        localStorage.removeItem('student_id');\r\n        localStorage.setItem('student_id', student_id.toString());\r\n        localStorage.removeItem('parent_id');\r\n        localStorage.setItem('parent_id', parent_id.toString());\r\n        if (class_end === true) {\r\n            let path = '/manage-student-end';\r\n            history.push(path);\r\n        }else {\r\n            let path = '/manage-student';\r\n            history.push(path);\r\n        }\r\n    }\r\n\r\n\r\n    const studentElements: (JSX.Element | null)[] = students.students.map((student, idx) => {\r\n        if (!student) { return null; }\r\n        return (<tr className={`table-row ${(students.selectedUser && students.selectedUser.id === student.id) ? \"selected\" : \"\"}`}\r\n            key={`student_${idx}`} onClick={() => {routeChange(student.id, student.parents)}}>\r\n            <div className=\"col-xl-12 col-md-12 mb-4\" >\r\n            <div className={`card shadow h-100 py-0 content-student-teacher`} id=\"topcard-user\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 col-xs-12\">\r\n                            <div className=\"row\">\r\n                                <p className=\"col-4\"><span className=\"header-card-course-teacher\" id=\"index-infor-student-teacher\">{idx + 1}</span></p>\r\n                                <i className={`col-4 fas fa-user-circle fa-2x`} id=\"icon-user\"></i>\r\n                                <p className=\"col-4\"id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.username}</span></p>\r\n                            </div>  \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"table-responsive portlet\">\r\n            <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {studentElements}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default StudentList;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Popup from \"reactjs-popup\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getInfoMyClass } from \"../../common/service/MyClass/GetInfoMyClass\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { setModificationStateAnonymousNotification } from \"../../store/actions/anonymous_notification.action\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { clearSelectedTeacherRegisterQuatification } from \"../../store/actions/teacher_register_quantification.action\";\r\nimport { AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\r\nimport { IAnonymousNotificationState, IRootPageStateType, IStateType, ITeacherRegisterQuantificationState, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ClassTeacherDetail.css\"\r\nimport NotificationClassTeacher from \"./NotificationClassTeacher\";\r\nimport StudentList from \"./StudentForTeacherList\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst ClassTeacherDetail: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const teacherRegisterQuantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n    const anonymous_notifications: IAnonymousNotificationState | null = useSelector((state: IStateType) => state.anonymous_notifications);\r\n    console.log(teacherRegisterQuantifications)\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const students: IUserState = useSelector((state: IStateType) => state.users);\r\n    const numberStudentsCount: number = students.students.length;\r\n    var id_x = localStorage.getItem('class_id');\r\n    let class_id: number = 0;\r\n    if (id_x !== null) {\r\n        class_id = parseInt(id_x);\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    dispatch(clearSelectedTeacherRegisterQuatification());       \r\n                    trackPromise(getInfoMyClass(dispatch, class_id))\r\n                }\r\n            }\r\n            else {\r\n                dispatch(clearSelectedTeacherRegisterQuatification());       \r\n                trackPromise(getInfoMyClass(dispatch, class_id))\r\n            }\r\n        }\r\n    }, [dispatch, class_id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp\", \"Chi tiết\"));\r\n    }, [dispatch, path.area])\r\n\r\n\r\n    const [popup1, setPopup1] = useState(false);\r\n\r\n    function onAnonymousNotificationRemove() {\r\n        setPopup1(true);\r\n    }\r\n\r\n\r\n    function onRemovePopup1(value: boolean) {\r\n        setPopup1(false);\r\n    }\r\n\r\n    const history = useHistory();\r\n    const onRouteChange = () =>{ \r\n        let path = '/classes/detail-student'; \r\n        history.push({\r\n            pathname: path,\r\n            state: {class_id: class_id}\r\n        });\r\n    }\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n            <ToastContainer />\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ BUỔI ĐÃ DẠY\" text={`${numberStudentsCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"SỐ HỌC SINH\" text={`${numberStudentsCount}`} icon=\"book\" class=\"danger\" />\r\n                <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button \r\n                        className=\"btn btn-success btn-green\" \r\n                        id=\"btn-create-teacher-level\" \r\n                        onClick={() => {\r\n                            dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.Create))\r\n                            onAnonymousNotificationRemove()\r\n                        }}\r\n                    >\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Gửi thông báo\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <Popup\r\n                open={popup1}\r\n                onClose={() => setPopup1(false)}\r\n                closeOnDocumentClick\r\n            >\r\n                <>\r\n                    {\r\n                        function () {\r\n                            if ((anonymous_notifications.modificationState === AnonymousNotificationModificationStatus.Create)) {\r\n                                return <NotificationClassTeacher isCheck={onRemovePopup1} data={class_id}/>\r\n                            }\r\n                        }()\r\n                    }\r\n                </>\r\n            </Popup>\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-xl-8 col-md-8 mb-4\">\r\n                    <h3 className=\" mb-2\" id=\"level-teacher\">Danh sách học sinh</h3>\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                        <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                            <div className=\"card-body\">\r\n                                <StudentList />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-xl-4 col-md-4 mb-4\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <button className=\"btn btn-success btn-green\" id=\"btn-into-class\" onClick={() =>{\r\n                        onRouteChange()}}>\r\n                            Vào lớp\r\n                            <i className=\"fas fa fa-arrow-right\"></i>\r\n                    </button>\r\n                    </div>\r\n                    {/* <TopCardLevel title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`2`} icon=\"book\" class=\"primary\" />\r\n                    <TopCardLevel title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`1`} icon=\"book\" class=\"danger\" /> */}\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ClassTeacherDetail;\r\n","import { IContestTeacher, ContestTeacherModificationStatus } from \"../models/contest_teacher.interface\";\r\n\r\n// contest_opening\r\nexport const ADD_CONTEST_TEACHER_OPENING: string = \"ADD_CONTEST_TEACHER_OPENING\";\r\nexport const EDIT_CONTEST_TEACHER_OPENING: string = \"EDIT_CONTEST_TEACHER_OPENING\";\r\nexport const REMOVE_CONTEST_TEACHER_OPENING: string = \"REMOVE_CONTEST_TEACHER_OPENING\";\r\nexport const CHANGE_CONTEST_TEACHER_OPENING_AMOUNT: string = \"CHANGE_CONTEST_TEACHER_OPENING_AMOUNT\";\r\nexport const CHANGE_CONTEST_TEACHER_OPENING_PENDING_EDIT: string = \"CHANGE_CONTEST_TEACHER_OPENING_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_TEACHER_OPENING_PENDING_EDIT: string = \"CLEAR_CONTEST_TEACHER_OPENING_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_TEACHER_OPENING_ALL: string = \"REMOVE_CONTEST_TEACHER_OPENING_ALL\";\r\nexport const INITIAL_CONTEST_TEACHER_OPENING: string = \"INITIAL_CONTEST_TEACHER_OPENING\";\r\n\r\n// contest_not_open_now_not_teacher\r\nexport const ADD_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: string = \"ADD_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER\";\r\nexport const EDIT_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: string = \"EDIT_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER\";\r\nexport const REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: string = \"REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER\";\r\nexport const CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_AMOUNT: string = \"CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_AMOUNT\";\r\nexport const CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT: string = \"CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT: string = \"CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_ALL: string = \"REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_ALL\";\r\nexport const INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: string = \"INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER\";\r\n\r\n// contest_end\r\nexport const ADD_CONTEST_TEACHER_END: string = \"ADD_CONTEST_TEACHER_END\";\r\nexport const EDIT_CONTEST_TEACHER_END: string = \"EDIT_CONTEST_TEACHER_END\";\r\nexport const REMOVE_CONTEST_TEACHER_END: string = \"REMOVE_CONTEST_TEACHER_END\";\r\nexport const CHANGE_CONTEST_TEACHER_END_AMOUNT: string = \"CHANGE_CONTEST_TEACHER_END_AMOUNT\";\r\nexport const CHANGE_CONTEST_TEACHER_END_PENDING_EDIT: string = \"CHANGE_CONTEST_TEACHER_END_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_TEACHER_END_PENDING_EDIT: string = \"CLEAR_CONTEST_TEACHER_END_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_TEACHER_END_ALL: string = \"REMOVE_CONTEST_TEACHER_END_ALL\";\r\nexport const INITIAL_CONTEST_TEACHER_END: string = \"INITIAL_CONTEST_TEACHER_END\";\r\n\r\n//contest_not_open_now\r\nexport const ADD_CONTEST_TEACHER_NOT_OPEN_NOW: string = \"ADD_CONTEST_TEACHER_NOT_OPEN_NOW\";\r\nexport const EDIT_CONTEST_TEACHER_NOT_OPEN_NOW: string = \"EDIT_CONTEST_TEACHER_NOT_OPEN_NOW\";\r\nexport const REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW: string = \"REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW\";\r\nexport const CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_AMOUNT: string = \"CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_AMOUNT\";\r\nexport const CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT: string = \"CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT: string = \"CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_ALL: string = \"REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_ALL\";\r\nexport const INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW: string = \"INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW\";\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(contest: IContestTeacher) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        contest\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\n// Opening\r\nexport function initialContestTeacherOpening(contest: IContestTeacher): IInitialContestTeacherOpeningActionType {\r\n    return { type: INITIAL_CONTEST_TEACHER_OPENING, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherOpeningAll(): IRemoveContestTeacherOpeningAllActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_OPENING_ALL };\r\n}\r\n\r\nexport function addContestTeacherOpening(contest: IContestTeacher): IAddContestTeacherOpeningActionType {\r\n    return { type: ADD_CONTEST_TEACHER_OPENING, contest: contest };\r\n}\r\n\r\nexport function editContestTeacherOpening(contest: IContestTeacher): IEditContestTeacherOpeningActionType {\r\n    return { type: EDIT_CONTEST_TEACHER_OPENING, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherOpening(id: any): IRemoveContestTeacherOpeningActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_OPENING, id: id };\r\n}\r\n\r\nexport function changeSelectedContestTeacherOpening(contest: IContestTeacher): IChangeSelectedContestTeacherOpeningActionType {\r\n    return { type: CHANGE_CONTEST_TEACHER_OPENING_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestTeacherOpening(): IClearSelectedContestTeacherOpeningActionType {\r\n    return { type: CLEAR_CONTEST_TEACHER_OPENING_PENDING_EDIT };\r\n}\r\n\r\n// Not open not teacher\r\nexport function initialContestTeacherNotOpenNowNotTeacher(contest: IContestTeacher): IInitialContestTeacherNotOpenNowNotTeacherActionType {\r\n    return { type: INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherNotOpenNowNotTeacherAll(): IRemoveContestTeacherNotOpenNowNotTeacherAllActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_ALL };\r\n}\r\n\r\nexport function addContestTeacherNotOpenNowNotTeacher(contest: IContestTeacher): IAddContestTeacherNotOpenNowNotTeacherActionType {\r\n    return { type: ADD_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, contest: contest };\r\n}\r\n\r\nexport function editContestTeacherNotOpenNowNotTeacher(contest: IContestTeacher): IEditContestTeacherNotOpenNowNotTeacherActionType {\r\n    return { type: EDIT_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherNotOpenNowNotTeacher(id: any): IRemoveContestTeacherNotOpenNowNotTeacherActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, id: id };\r\n}\r\n\r\nexport function changeSelectedContestNotOpenNowNotTeacher(contest: IContestTeacher): IChangeSelectedContestTeacherNotOpenNowNotTeacherActionType {\r\n    return { type: CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestTeacherNotOpenNowNotTeacher(): IClearSelectedContestTeacherNotOpenNowNotTeacherActionType {\r\n    return { type: CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT };\r\n}\r\n\r\n// End\r\nexport function initialContestTeacherEnd(contest: IContestTeacher): IInitialContestTeacherEndActionType {\r\n    return { type: INITIAL_CONTEST_TEACHER_END, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherEndAll(): IRemoveContestTeacherEndAllActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_END_ALL };\r\n}\r\n\r\nexport function addContestTeacherEnd(contest: IContestTeacher): IAddContestTeacherEndActionType {\r\n    return { type: ADD_CONTEST_TEACHER_END, contest: contest };\r\n}\r\n\r\nexport function editContestTeacherEnd(contest: IContestTeacher): IEditContestTeacherEndActionType {\r\n    return { type: EDIT_CONTEST_TEACHER_END, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherEnd(id: any): IRemoveContestTeacherEndActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_END, id: id };\r\n}\r\n\r\nexport function changeSelectedContestTeacherEnd(contest: IContestTeacher): IChangeSelectedContestTeacherEndActionType {\r\n    return { type: CHANGE_CONTEST_TEACHER_END_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestTeacherEnd(): IClearSelectedContestTeacherEndActionType {\r\n    return { type: CLEAR_CONTEST_TEACHER_END_PENDING_EDIT };\r\n}\r\n\r\n// Not open now\r\nexport function initialContestTeacherNotOpenNow(contest: IContestTeacher): IInitialContestTeacherNotOpenNowActionType {\r\n    return { type: INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherNotOpenNowAll(): IRemoveContestTeacherNotOpenNowAllActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_ALL };\r\n}\r\n\r\nexport function addContestTeacherNotOpenNow(contest: IContestTeacher): IAddContestTeacherNotOpenNowActionType {\r\n    return { type: ADD_CONTEST_TEACHER_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function editContestTeacherNotOpenNow(contest: IContestTeacher): IEditContestTeacherNotOpenNowActionType {\r\n    return { type: EDIT_CONTEST_TEACHER_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherNotOpenNow(id: any): IRemoveContestTeacherNotOpenNowActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedContestTeacherNotOpenNow(contest: IContestTeacher): IChangeSelectedContestTeacherNotOpenNowActionType {\r\n    return { type: CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestTeacherNotOpenNow(): IClearSelectedContestTeacherNotOpenNowActionType {\r\n    return { type: CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function setModificationState(value: ContestTeacherModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_contests\r\ninterface IAddContestTeacherOpeningActionType { type: string, contest: IContestTeacher };\r\ninterface IEditContestTeacherOpeningActionType { type: string, contest: IContestTeacher };\r\ninterface IRemoveContestTeacherOpeningActionType { type: string, id: any };\r\ninterface IChangeSelectedContestTeacherOpeningActionType { type: string, contest: IContestTeacher };\r\ninterface IClearSelectedContestTeacherOpeningActionType { type: string };\r\ninterface IRemoveContestTeacherOpeningAllActionType { type: string }\r\ninterface IInitialContestTeacherOpeningActionType {type: string, contest: IContestTeacher}\r\n\r\n// not_register_contests\r\ninterface IAddContestTeacherNotOpenNowNotTeacherActionType { type: string, contest: IContestTeacher };\r\ninterface IEditContestTeacherNotOpenNowNotTeacherActionType { type: string, contest: IContestTeacher };\r\ninterface IRemoveContestTeacherNotOpenNowNotTeacherActionType { type: string, id: any };\r\ninterface IChangeSelectedContestTeacherNotOpenNowNotTeacherActionType { type: string, contest: IContestTeacher };\r\ninterface IClearSelectedContestTeacherNotOpenNowNotTeacherActionType { type: string };\r\ninterface IRemoveContestTeacherNotOpenNowNotTeacherAllActionType { type: string }\r\ninterface IInitialContestTeacherNotOpenNowNotTeacherActionType {type: string, contest: IContestTeacher}\r\n\r\n// not_register_contests\r\ninterface IAddContestTeacherEndActionType { type: string, contest: IContestTeacher };\r\ninterface IEditContestTeacherEndActionType { type: string, contest: IContestTeacher };\r\ninterface IRemoveContestTeacherEndActionType { type: string, id: any };\r\ninterface IChangeSelectedContestTeacherEndActionType { type: string, contest: IContestTeacher };\r\ninterface IClearSelectedContestTeacherEndActionType { type: string };\r\ninterface IRemoveContestTeacherEndAllActionType { type: string }\r\ninterface IInitialContestTeacherEndActionType {type: string, contest: IContestTeacher}\r\n\r\n// not_register_contests\r\ninterface IAddContestTeacherNotOpenNowActionType { type: string, contest: IContestTeacher };\r\ninterface IEditContestTeacherNotOpenNowActionType { type: string, contest: IContestTeacher };\r\ninterface IRemoveContestTeacherNotOpenNowActionType { type: string, id: any };\r\ninterface IChangeSelectedContestTeacherNotOpenNowActionType { type: string, contest: IContestTeacher };\r\ninterface IClearSelectedContestTeacherNotOpenNowActionType { type: string };\r\ninterface IRemoveContestTeacherNotOpenNowAllActionType { type: string }\r\ninterface IInitialContestTeacherNotOpenNowActionType {type: string, contest: IContestTeacher}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ContestTeacherModificationStatus};","import { fetchDataSuccess, fetchDataError, \r\n    removeContestTeacherEndAll, removeContestTeacherNotOpenNowAll, \r\n    removeContestTeacherNotOpenNowNotTeacherAll, removeContestTeacherOpeningAll,\r\n    initialContestTeacherEnd, initialContestTeacherNotOpenNow,\r\n    initialContestTeacherNotOpenNowNotTeacher, initialContestTeacherOpening, \r\n    addContestTeacherEnd, addContestTeacherNotOpenNow,\r\n    addContestTeacherNotOpenNowNotTeacher, addContestTeacherOpening } from \"../../../store/actions/contest_teacher.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ContestTeacher {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    total_contest_submission: number;\r\n    total_contest_submission_graded: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n}\r\nexport function getContestTeacher(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest/teacher/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getContestTeacher(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeContestTeacherEndAll())\r\n                dispatch(removeContestTeacherNotOpenNowAll())\r\n                dispatch(removeContestTeacherNotOpenNowNotTeacherAll())\r\n                dispatch(removeContestTeacherOpeningAll())\r\n                console.log(data)\r\n                data.body.contest_opening.map((ele: any, index: any) => {\r\n                    var contest: ContestTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestTeacherOpening(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestTeacherOpening(contest))\r\n                    }\r\n                })\r\n\r\n                data.body.contest_not_open_now_not_teacher.map((ele: any, index: any) => {\r\n                    var contest: ContestTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestTeacherNotOpenNowNotTeacher(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestTeacherNotOpenNowNotTeacher(contest))\r\n                    }\r\n                })\r\n\r\n\r\n                data.body.contest_end.map((ele: any, index: any) => {\r\n                    var contest: ContestTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestTeacherEnd(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestTeacherEnd(contest))\r\n                    }\r\n                })\r\n\r\n\r\n                data.body.contest_not_open_now.map((ele: any, index: any) => {\r\n                    var contest: ContestTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestTeacherNotOpenNow(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestTeacherNotOpenNow(contest))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { formatDate } from \"../../common/components/ConverDate\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction ContestTeacherNotDoingList(props) {\r\n\r\n    const contest_teachers = useSelector((state) => state.contest_teachers);\r\n    const history = useHistory();\r\n\r\n    const onChangeRoute = (contest_teacher) =>{ \r\n        localStorage.removeItem(\"contest_id\")\r\n        localStorage.setItem('contest_id', contest_teacher.id.toString())\r\n        localStorage.removeItem(\"contest_name\")\r\n        localStorage.setItem('contest_name', contest_teacher.name)\r\n        localStorage.removeItem(\"contest_description\")\r\n        localStorage.setItem('contest_description', contest_teacher.description)\r\n        localStorage.removeItem(\"max_participant\")\r\n        localStorage.setItem('max_participant', contest_teacher.max_participant.toString())\r\n        localStorage.removeItem(\"art_type_contest\")\r\n        localStorage.setItem('art_type_contest', contest_teacher.art_type_name)\r\n        localStorage.removeItem(\"art_age_contest\")\r\n        localStorage.setItem('art_age_contest', contest_teacher.art_age_name)\r\n        localStorage.removeItem(\"registration_time\")\r\n        localStorage.setItem('registration_time', contest_teacher.registration_time)\r\n        localStorage.removeItem(\"start_time\")\r\n        localStorage.setItem('start_time', contest_teacher.start_time)\r\n        localStorage.removeItem(\"end_time\")\r\n        localStorage.setItem('end_time', contest_teacher.end_time)\r\n        let path = '/contests/detail-contest'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n    \r\n    const date_0 = new Date();\r\n    const date = date_0.toUTCString()\r\n    //console.log(date)\r\n    const date_now = formatDate(new Date(date)).substring(0, 10) + \"Z\" + formatDate(new Date(date)).substring(11, 16);\r\n    console.log(formatDate(new Date(date)).substring(0, 10) + \"Z\" + formatDate(new Date(date)).substring(11, 16))\r\n\r\n    const datas = contest_teachers.contest_not_open_now.filter((contest, index) => {\r\n        var strDate1 = contest.start_time;\r\n        if (!contest || strDate1 < date_now) {\r\n            return null\r\n        }\r\n        else {\r\n            return contest\r\n        }\r\n    })\r\n\r\n    const options = {\r\n        paginationSize: 5,\r\n        pageStartIndex: 1,\r\n        firstPageText: 'First',\r\n        prePageText: 'Back',\r\n        nextPageText: 'Next',\r\n        lastPageText: 'Last',\r\n        nextPageTitle: 'First page',\r\n        prePageTitle: 'Pre page',\r\n        firstPageTitle: 'Next page',\r\n        lastPageTitle: 'Last page',\r\n        showTotal: true,\r\n        totalSize: datas.length,\r\n        onSizePerPageChange: (sizePerPage, page) => {\r\n            console.log('Size per page change!!!');\r\n            console.log('Newest size per page:' + sizePerPage);\r\n            console.log('Newest page:' + page);\r\n        },\r\n        onPageChange: (page, sizePerPage) => {\r\n            console.log('Page change!!!');\r\n            console.log('Newest size per page:' + sizePerPage);\r\n            console.log('Newest page:' + page);\r\n        }\r\n    };\r\n\r\n    function viewDetailButton(cell, row) {\r\n        return (\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n                if (props.onSelect) props.onSelect(row);\r\n                onChangeRoute(row)\r\n            }}>Chi tiết</button>\r\n        )\r\n    }\r\n\r\n\r\n    function showStartTime(cell, row) {\r\n        var strDate = row.start_time;\r\n        return (\r\n            <span>{strDate.substring(0, 10) + \" \" + strDate.substring(11, 19)}</span>\r\n        )\r\n    }\r\n\r\n    function showEndTime(cell, row) {\r\n        var strDate = row.start_time;\r\n        return (\r\n            <span>{strDate.substring(0, 10) + \" \" + strDate.substring(11, 19)}</span>\r\n        )\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'name',\r\n            text: 'Tên',\r\n            filter: textFilter()\r\n        },\r\n        {\r\n            dataField: 'art_type_name',\r\n            text: 'Thể loại',\r\n            filter: textFilter()\r\n        },\r\n        {\r\n            dataField: 'art_age_name',\r\n            text: 'Độ tuổi',\r\n            filter: textFilter()\r\n        },\r\n        {\r\n            dataField: 'start_time',\r\n            text: 'Thời gian bắt đầu',\r\n            formatter: showStartTime,\r\n        },\r\n        {\r\n            dataField: 'end_time',\r\n            text: 'Thời gian kết thúc',\r\n            formatter: showEndTime,\r\n        },\r\n        {\r\n            dataField: 'total_register_contest',\r\n            text: 'Đã đăng kí',\r\n        },\r\n        {\r\n            dataField: 'total_contest_submission_graded',\r\n            text: 'Đã nộp',\r\n        },\r\n        {\r\n            dataField: '',\r\n            text: 'Hành động',\r\n            formatter: viewDetailButton\r\n        }\r\n    ];\r\n\r\n    const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n        <div>\r\n            {/* <PaginationListStandalone {...paginationProps} /> */}\r\n            <div>\r\n                <div>\r\n                    <BootstrapTable\r\n                        hover\r\n                        keyField=\"id\"\r\n                        data={datas}\r\n                        columns={columns}\r\n                        filter={filterFactory()}\r\n                        {...paginationTableProps}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {/* <PaginationListStandalone {...paginationProps} /> */}\r\n        </div>\r\n    );\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div>\r\n                <PaginationProvider\r\n                    pagination={\r\n                        paginationFactory(options)\r\n                    }\r\n                >\r\n                    {contentTable}\r\n                </PaginationProvider>\r\n            </div >\r\n        </Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default ContestTeacherNotDoingList;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { formatDate } from \"../../common/components/ConverDate\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction ContestTeacherEndList(props) {\r\n\r\n    const contest_teachers = useSelector((state) => state.contest_teachers);\r\n    const history = useHistory();\r\n\r\n    const onChangeRoute = (contest_teacher) =>{ \r\n        localStorage.removeItem(\"contest_id\")\r\n        localStorage.setItem('contest_id', contest_teacher.id.toString())\r\n        localStorage.removeItem(\"contest_name\")\r\n        localStorage.setItem('contest_name', contest_teacher.name)\r\n        localStorage.removeItem(\"contest_description\")\r\n        localStorage.setItem('contest_description', contest_teacher.description)\r\n        localStorage.removeItem(\"max_participant\")\r\n        localStorage.setItem('max_participant', contest_teacher.max_participant.toString())\r\n        localStorage.removeItem(\"art_type_contest\")\r\n        localStorage.setItem('art_type_contest', contest_teacher.art_type_name)\r\n        localStorage.removeItem(\"art_age_contest\")\r\n        localStorage.setItem('art_age_contest', contest_teacher.art_age_name)\r\n        localStorage.removeItem(\"registration_time\")\r\n        localStorage.setItem('registration_time', contest_teacher.registration_time)\r\n        localStorage.removeItem(\"start_time\")\r\n        localStorage.setItem('start_time', contest_teacher.start_time)\r\n        localStorage.removeItem(\"end_time\")\r\n        localStorage.setItem('end_time', contest_teacher.end_time)\r\n        let path = '/contests/detail'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n    \r\n    const date_0 = new Date();\r\n    const date = date_0.toUTCString()\r\n    //console.log(date)\r\n    const date_now = formatDate(new Date(date)).substring(0, 10) + \"Z\" + formatDate(new Date(date)).substring(11, 16);\r\n    console.log(formatDate(new Date(date)).substring(0, 10) + \"Z\" + formatDate(new Date(date)).substring(11, 16))\r\n\r\n    const datas = contest_teachers.contest_end.filter((contest, index) => {\r\n        var strDate2 = contest.end_time;\r\n        if (!contest || strDate2 > date_now) {\r\n            return null\r\n        }\r\n        else {\r\n            return contest\r\n        }\r\n      })\r\n\r\n    const options = {\r\n        paginationSize: 5,\r\n        pageStartIndex: 1,\r\n        firstPageText: 'First',\r\n        prePageText: 'Back',\r\n        nextPageText: 'Next',\r\n        lastPageText: 'Last',\r\n        nextPageTitle: 'First page',\r\n        prePageTitle: 'Pre page',\r\n        firstPageTitle: 'Next page',\r\n        lastPageTitle: 'Last page',\r\n        showTotal: true,\r\n        totalSize: datas.length,\r\n        onSizePerPageChange: (sizePerPage, page) => {\r\n            console.log('Size per page change!!!');\r\n            console.log('Newest size per page:' + sizePerPage);\r\n            console.log('Newest page:' + page);\r\n        },\r\n        onPageChange: (page, sizePerPage) => {\r\n            console.log('Page change!!!');\r\n            console.log('Newest size per page:' + sizePerPage);\r\n            console.log('Newest page:' + page);\r\n        }\r\n    };\r\n\r\n    function viewDetailButton(cell, row) {\r\n        return (\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n                if (props.onSelect) props.onSelect(row);\r\n                onChangeRoute(row)\r\n            }}>Chi tiết</button>\r\n        )\r\n    }\r\n\r\n\r\n    function showStartTime(cell, row) {\r\n        var strDate = row.start_time;\r\n        return (\r\n            <span>{strDate.substring(0, 10) + \" \" + strDate.substring(11, 19)}</span>\r\n        )\r\n    }\r\n\r\n    function showEndTime(cell, row) {\r\n        var strDate = row.start_time;\r\n        return (\r\n            <span>{strDate.substring(0, 10) + \" \" + strDate.substring(11, 19)}</span>\r\n        )\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'name',\r\n            text: 'Tên',\r\n            filter: textFilter()\r\n        },\r\n        {\r\n            dataField: 'art_type_name',\r\n            text: 'Thể loại',\r\n            filter: textFilter()\r\n        },\r\n        {\r\n            dataField: 'art_age_name',\r\n            text: 'Độ tuổi',\r\n            filter: textFilter()\r\n        },\r\n        {\r\n            dataField: 'start_time',\r\n            text: 'Thời gian bắt đầu',\r\n            formatter: showStartTime,\r\n        },\r\n        {\r\n            dataField: 'end_time',\r\n            text: 'Thời gian kết thúc',\r\n            formatter: showEndTime,\r\n        },\r\n        {\r\n            dataField: 'total_register_contest',\r\n            text: 'Đã đăng kí',\r\n        },\r\n        {\r\n            dataField: 'total_contest_submission_graded',\r\n            text: 'Đã nộp',\r\n        },\r\n        {\r\n            dataField: '',\r\n            text: 'Hành động',\r\n            formatter: viewDetailButton\r\n        }\r\n    ];\r\n\r\n    const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n        <div>\r\n            {/* <PaginationListStandalone {...paginationProps} /> */}\r\n            <div>\r\n                <div>\r\n                    <BootstrapTable\r\n                        hover\r\n                        keyField=\"id\"\r\n                        data={datas}\r\n                        columns={columns}\r\n                        filter={filterFactory()}\r\n                        {...paginationTableProps}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {/* <PaginationListStandalone {...paginationProps} /> */}\r\n        </div>\r\n    );\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div>\r\n                <PaginationProvider\r\n                    pagination={\r\n                        paginationFactory(options)\r\n                    }\r\n                >\r\n                    {contentTable}\r\n                </PaginationProvider>\r\n            </div >\r\n        </Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default ContestTeacherEndList;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { formatDate } from \"../../common/components/ConverDate\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction ContestTeacherDoingList(props) {\r\n\r\n    const contest_teachers = useSelector((state) => state.contest_teachers);\r\n    const history = useHistory();\r\n\r\n    const onChangeRoute = (contest_teacher) =>{ \r\n        localStorage.removeItem(\"contest_id\")\r\n        localStorage.setItem('contest_id', contest_teacher.id.toString())\r\n        localStorage.removeItem(\"contest_name\")\r\n        localStorage.setItem('contest_name', contest_teacher.name)\r\n        localStorage.removeItem(\"contest_description\")\r\n        localStorage.setItem('contest_description', contest_teacher.description)\r\n        localStorage.removeItem(\"max_participant\")\r\n        localStorage.setItem('max_participant', contest_teacher.max_participant.toString())\r\n        localStorage.removeItem(\"art_type_contest\")\r\n        localStorage.setItem('art_type_contest', contest_teacher.art_type_name)\r\n        localStorage.removeItem(\"art_age_contest\")\r\n        localStorage.setItem('art_age_contest', contest_teacher.art_age_name)\r\n        localStorage.removeItem(\"registration_time\")\r\n        localStorage.setItem('registration_time', contest_teacher.registration_time)\r\n        localStorage.removeItem(\"start_time\")\r\n        localStorage.setItem('start_time', contest_teacher.start_time)\r\n        localStorage.removeItem(\"end_time\")\r\n        localStorage.setItem('end_time', contest_teacher.end_time)\r\n        let path = '/contests/detail-contest'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n    \r\n    const date_0 = new Date();\r\n    const date = date_0.toUTCString()\r\n    //console.log(date)\r\n    const date_now = formatDate(new Date(date)).substring(0, 10) + \"Z\" + formatDate(new Date(date)).substring(11, 16);\r\n    console.log(formatDate(new Date(date)).substring(0, 10) + \"Z\" + formatDate(new Date(date)).substring(11, 16))\r\n\r\n    const datas = contest_teachers.contest_opening.filter((contest, index) => {\r\n        var strDate1 = contest.start_time;\r\n        var strDate2 = contest.end_time;\r\n        if (!contest || strDate1 > date_now || date_now > strDate2) {\r\n            return null\r\n        }\r\n        else {\r\n            return contest\r\n        }\r\n      })\r\n\r\n    const options = {\r\n        paginationSize: 5,\r\n        pageStartIndex: 1,\r\n        firstPageText: 'First',\r\n        prePageText: 'Back',\r\n        nextPageText: 'Next',\r\n        lastPageText: 'Last',\r\n        nextPageTitle: 'First page',\r\n        prePageTitle: 'Pre page',\r\n        firstPageTitle: 'Next page',\r\n        lastPageTitle: 'Last page',\r\n        showTotal: true,\r\n        totalSize: datas.length,\r\n        onSizePerPageChange: (sizePerPage, page) => {\r\n            console.log('Size per page change!!!');\r\n            console.log('Newest size per page:' + sizePerPage);\r\n            console.log('Newest page:' + page);\r\n        },\r\n        onPageChange: (page, sizePerPage) => {\r\n            console.log('Page change!!!');\r\n            console.log('Newest size per page:' + sizePerPage);\r\n            console.log('Newest page:' + page);\r\n        }\r\n    };\r\n\r\n    function viewDetailButton(cell, row) {\r\n        return (\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n                if (props.onSelect) props.onSelect(row);\r\n                onChangeRoute(row)\r\n            }}>Chi tiết</button>\r\n        )\r\n    }\r\n\r\n\r\n    function showStartTime(cell, row) {\r\n        var strDate = row.start_time;\r\n        return (\r\n            <span>{strDate.substring(0, 10) + \" \" + strDate.substring(11, 19)}</span>\r\n        )\r\n    }\r\n\r\n    function showEndTime(cell, row) {\r\n        var strDate = row.start_time;\r\n        return (\r\n            <span>{strDate.substring(0, 10) + \" \" + strDate.substring(11, 19)}</span>\r\n        )\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'name',\r\n            text: 'Tên',\r\n            filter: textFilter()\r\n        },\r\n        {\r\n            dataField: 'art_type_name',\r\n            text: 'Thể loại',\r\n            filter: textFilter()\r\n        },\r\n        {\r\n            dataField: 'art_age_name',\r\n            text: 'Độ tuổi',\r\n            filter: textFilter()\r\n        },\r\n        {\r\n            dataField: 'start_time',\r\n            text: 'Thời gian bắt đầu',\r\n            formatter: showStartTime,\r\n        },\r\n        {\r\n            dataField: 'end_time',\r\n            text: 'Thời gian kết thúc',\r\n            formatter: showEndTime,\r\n        },\r\n        {\r\n            dataField: 'total_register_contest',\r\n            text: 'Đã đăng kí',\r\n        },\r\n        {\r\n            dataField: 'total_contest_submission_graded',\r\n            text: 'Đã nộp',\r\n        },\r\n        {\r\n            dataField: '',\r\n            text: 'Hành động',\r\n            formatter: viewDetailButton\r\n        }\r\n    ];\r\n\r\n    const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n        <div>\r\n            {/* <PaginationListStandalone {...paginationProps} /> */}\r\n            <div>\r\n                <div>\r\n                    <BootstrapTable\r\n                        hover\r\n                        keyField=\"id\"\r\n                        data={datas}\r\n                        columns={columns}\r\n                        filter={filterFactory()}\r\n                        {...paginationTableProps}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {/* <PaginationListStandalone {...paginationProps} /> */}\r\n        </div>\r\n    );\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div>\r\n                <PaginationProvider\r\n                    pagination={\r\n                        paginationFactory(options)\r\n                    }\r\n                >\r\n                    {contentTable}\r\n                </PaginationProvider>\r\n            </div >\r\n        </Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default ContestTeacherDoingList;\r\n","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getTeacherRegisterQuantificationByTeacherId } from \"../../common/service/TeacherRegisterQuantification/GetTeacherRegisterQuantificationByTeacherId\";\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\nimport { IContestTeacherState, IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./ContestTeacher.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { getContestTeacher } from \"../../common/service/ContestTeacher/GetContestTeacher\";\r\nimport ContestDoingList from \"./ContestDoingTeacherList\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport ContestTeacherNotDoingList from \"./ContestTeacherNotDoingList\";\r\nimport ContestTeacherEndList from \"./ContestTeacherEndList\";\r\nimport ContestTeacherDoingList from \"./ContestTeacherDoingList\";\r\n\r\nconst ContestTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const contest_teachers: IContestTeacherState = useSelector((state: IStateType) => state.contest_teachers);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberContestOpeningCount: number = contest_teachers.contest_opening.length;\r\n    const numberContestEndCount: number = contest_teachers.contest_end.length;\r\n    const numberContestNotOpenNowCount: number = contest_teachers.contest_not_open_now.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n    const { promiseInProgress } = usePromiseTracker();\r\n    console.log(contest_teachers)\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getTeacherRegisterQuantificationByTeacherId(dispatch, id))\r\n                    trackPromise(getUserById(dispatch, id))\r\n                    trackPromise(getContestTeacher(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getTeacherRegisterQuantificationByTeacherId(dispatch, id))\r\n                trackPromise(getUserById(dispatch, id))\r\n                trackPromise(getContestTeacher(dispatch, id))\r\n            }\r\n        }\r\n        \r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Cuộc thi\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n\r\n    const [checked1, setChecked1] = useState(true);\r\n    const [checked2, setChecked2] = useState(false);\r\n    const [checked3, setChecked3] = useState(false);\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"CHƯA DIỄN RA\" text={`${numberContestNotOpenNowCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"ĐANG DIỄN RA\" text={`${numberContestOpeningCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"ĐÃ KẾT THÚC\" text={`${numberContestEndCount}`} icon=\"book\" class=\"primary\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked1 === false) {\r\n                            setChecked1(true)\r\n                            setChecked2(false)\r\n                            setChecked3(false)\r\n                        }\r\n                    }} style={{\r\n                        color: checked1 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Chưa diễn ra</h6>\r\n\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked1 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked2 === false) {\r\n                            setChecked2(true)\r\n                            setChecked1(false)\r\n                            setChecked3(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked2 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Đang diễn ra</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked2 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n\r\n                <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked3 === false) {\r\n                            setChecked3(true)\r\n                            setChecked1(false)\r\n                            setChecked2(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked3 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Đã kết thúc</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked3 ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {\r\n                function () {\r\n                    if (checked1 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách cuộc thi</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ContestTeacherNotDoingList />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else if ( checked2 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách cuộc thi</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ContestTeacherDoingList />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n\r\n                    else if ( checked3 === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách cuộc thi</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ContestTeacherEndList />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ContestTeacher;\r\n","import { IExerciseStudent, ExerciseStudentModificationStatus } from \"../models/exercise_student.interface\";\r\n\r\n// register_successfull_exercise_students\r\nexport const ADD_EXERCISE_NOT_SUBMIT: string = \"ADD_EXERCISE_NOT_SUBMIT\";\r\nexport const EDIT_EXERCISE_NOT_SUBMIT: string = \"EDIT_EXERCISE_NOT_SUBMIT\";\r\nexport const REMOVE_EXERCISE_NOT_SUBMIT: string = \"REMOVE_EXERCISE_NOT_SUBMIT\";\r\nexport const CHANGE_EXERCISE_NOT_SUBMIT_AMOUNT: string = \"CHANGE_EXERCISE_NOT_SUBMIT_AMOUNT\";\r\nexport const CHANGE_EXERCISE_NOT_SUBMIT_PENDING_EDIT: string = \"CHANGE_EXERCISE_NOT_SUBMIT_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_NOT_SUBMIT_PENDING_EDIT: string = \"CLEAR_EXERCISE_NOT_SUBMIT_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_NOT_SUBMIT_ALL: string = \"REMOVE_EXERCISE_NOT_SUBMIT_ALL\";\r\nexport const INITIAL_EXERCISE_NOT_SUBMIT: string = \"INITIAL_EXERCISE_NOT_SUBMIT\";\r\n\r\n// not_register_exercise_students\r\nexport const ADD_EXERCISE_SUBMITED_NOT_GRADE: string = \"ADD_EXERCISE_SUBMITED_NOT_GRADE\";\r\nexport const EDIT_EXERCISE_SUBMITED_NOT_GRADE: string = \"EDIT_EXERCISE_SUBMITED_NOT_GRADE\";\r\nexport const REMOVE_EXERCISE_SUBMITED_NOT_GRADE: string = \"REMOVE_EXERCISE_SUBMITED_NOT_GRADE\";\r\nexport const CHANGE_EXERCISE_SUBMITED_NOT_GRADE_AMOUNT: string = \"CHANGE_EXERCISE_SUBMITED_NOT_GRADE_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT: string = \"CHANGE_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT: string = \"CLEAR_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL: string = \"REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL\";\r\nexport const INITIAL_EXERCISE_SUBMITED_NOT_GRADE: string = \"INITIAL_EXERCISE_SUBMITED_NOT_GRADE\";\r\n\r\n\r\n// not_register_exercise_students\r\nexport const ADD_EXERCISE_SUBMITED_GRADED: string = \"ADD_EXERCISE_SUBMITED_GRADED\";\r\nexport const EDIT_EXERCISE_SUBMITED_GRADED: string = \"EDIT_EXERCISE_SUBMITED_GRADED\";\r\nexport const REMOVE_EXERCISE_SUBMITED_GRADED: string = \"REMOVE_EXERCISE_SUBMITED_GRADED\";\r\nexport const CHANGE_EXERCISE_SUBMITED_GRADED_AMOUNT: string = \"CHANGE_EXERCISE_SUBMITED_GRADED_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SUBMITED_GRADED_PENDING_EDIT: string = \"CHANGE_EXERCISE_SUBMITED_GRADED_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SUBMITED_GRADED_PENDING_EDIT: string = \"CLEAR_EXERCISE_SUBMITED_GRADED_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SUBMITED_GRADED_ALL: string = \"REMOVE_EXERCISE_SUBMITED_GRADED_ALL\";\r\nexport const INITIAL_EXERCISE_SUBMITED_GRADED: string = \"INITIAL_EXERCISE_SUBMITED_GRADED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(exercise_student: IExerciseStudent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        exercise_student\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialExerciseNotSubmit(exercise_student: IExerciseStudent): IInitialExerciseNotSubmitActionType {\r\n    return { type: INITIAL_EXERCISE_NOT_SUBMIT, exercise_student: exercise_student };\r\n}\r\n\r\nexport function removeExerciseNotSubmitAll(): IRemoveExerciseNotSubmitAllActionType {\r\n    return { type: REMOVE_EXERCISE_NOT_SUBMIT_ALL };\r\n}\r\n\r\nexport function addExerciseNotSubmit(exercise_student: IExerciseStudent): IAddExerciseNotSubmitActionType {\r\n    return { type: ADD_EXERCISE_NOT_SUBMIT, exercise_student: exercise_student };\r\n}\r\n\r\nexport function editExerciseNotSubmit(exercise_student: IExerciseStudent): IEditExerciseNotSubmitActionType {\r\n    return { type: EDIT_EXERCISE_NOT_SUBMIT, exercise_student: exercise_student };\r\n}\r\n\r\nexport function removeExerciseNotSubmit(id: any): IRemoveExerciseNotSubmitActionType {\r\n    return { type: REMOVE_EXERCISE_NOT_SUBMIT, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseNotSubmit(exercise_student: IExerciseStudent): IChangeSelectedExerciseNotSubmitActionType {\r\n    return { type: CHANGE_EXERCISE_NOT_SUBMIT_PENDING_EDIT, exercise_student: exercise_student };\r\n}\r\n\r\nexport function clearSelectedExerciseNotSubmit(): IClearSelectedExerciseNotSubmitActionType {\r\n    return { type: CLEAR_EXERCISE_NOT_SUBMIT_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialExerciseSubmitNotGrade(exercise_student: IExerciseStudent): IInitialExerciseSubmitNotGradeActionType {\r\n    return { type: INITIAL_EXERCISE_SUBMITED_NOT_GRADE, exercise_student: exercise_student };\r\n}\r\n\r\nexport function removeExerciseSubmitNotGradeAll(): IRemoveExerciseSubmitNotGradeAllActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL };\r\n}\r\n\r\nexport function addExerciseSubmitNotGrade(exercise_student: IExerciseStudent): IAddExerciseSubmitNotGradeActionType {\r\n    return { type: ADD_EXERCISE_SUBMITED_NOT_GRADE, exercise_student: exercise_student };\r\n}\r\n\r\nexport function editExerciseSubmitNotGrade(exercise_student: IExerciseStudent): IEditExerciseSubmitNotGradeActionType {\r\n    return { type: EDIT_EXERCISE_SUBMITED_NOT_GRADE, exercise_student: exercise_student };\r\n}\r\n\r\nexport function removeExerciseSubmitNotGrade(id: any): IRemoveExerciseSubmitNotGradeActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMITED_NOT_GRADE, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseSubmitNotGrade(exercise_student: IExerciseStudent): IChangeSelectedExerciseSubmitNotGradeActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT, exercise_student: exercise_student };\r\n}\r\n\r\nexport function clearSelectedExerciseSubmitNotGrade(): IClearSelectedExerciseSubmitNotGradeActionType {\r\n    return { type: CLEAR_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ExerciseStudentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n\r\nexport function initialExerciseSubmitGraded(exercise_student: IExerciseStudent): IInitialExerciseSubmitGradedActionType {\r\n    return { type: INITIAL_EXERCISE_SUBMITED_GRADED, exercise_student: exercise_student };\r\n}\r\n\r\nexport function removeExerciseSubmitGradedAll(): IRemoveExerciseSubmitGradedAllActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMITED_GRADED_ALL };\r\n}\r\n\r\nexport function addExerciseSubmitGraded(exercise_student: IExerciseStudent): IAddExerciseSubmitGradedActionType {\r\n    return { type: ADD_EXERCISE_SUBMITED_GRADED, exercise_student: exercise_student };\r\n}\r\n\r\nexport function editExerciseSubmitGraded(exercise_student: IExerciseStudent): IEditExerciseSubmitGradedActionType {\r\n    return { type: EDIT_EXERCISE_SUBMITED_GRADED, exercise_student: exercise_student };\r\n}\r\n\r\nexport function removeExerciseSubmitGraded(id: any): IRemoveExerciseSubmitGradedActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMITED_GRADED, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseSubmitGraded(exercise_student: IExerciseStudent): IChangeSelectedExerciseSubmitGradedActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMITED_GRADED_AMOUNT, exercise_student: exercise_student };\r\n}\r\n\r\nexport function clearSelectedExerciseSubmitGraded(): IClearSelectedExerciseSubmitGradedActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMITED_GRADED_PENDING_EDIT };\r\n}\r\n\r\n// register_successfull_exercise_students\r\ninterface IAddExerciseNotSubmitActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IEditExerciseNotSubmitActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IRemoveExerciseNotSubmitActionType { type: string, id: any };\r\ninterface IChangeSelectedExerciseNotSubmitActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IClearSelectedExerciseNotSubmitActionType { type: string };\r\ninterface IRemoveExerciseNotSubmitAllActionType { type: string }\r\ninterface IInitialExerciseNotSubmitActionType {type: string, exercise_student: IExerciseStudent}\r\n\r\n// not_register_exercise_students\r\ninterface IAddExerciseSubmitNotGradeActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IEditExerciseSubmitNotGradeActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IRemoveExerciseSubmitNotGradeActionType { type: string, id: any };\r\ninterface IChangeSelectedExerciseSubmitNotGradeActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IClearSelectedExerciseSubmitNotGradeActionType { type: string };\r\ninterface IRemoveExerciseSubmitNotGradeAllActionType { type: string }\r\ninterface IInitialExerciseSubmitNotGradeActionType {type: string, exercise_student: IExerciseStudent}\r\n\r\n\r\n// register_successfull_exercise_students\r\ninterface IAddExerciseSubmitGradedActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IEditExerciseSubmitGradedActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IRemoveExerciseSubmitGradedActionType { type: string, id: any };\r\ninterface IChangeSelectedExerciseSubmitGradedActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IClearSelectedExerciseSubmitGradedActionType { type: string };\r\ninterface IRemoveExerciseSubmitGradedAllActionType { type: string }\r\ninterface IInitialExerciseSubmitGradedActionType {type: string, exercise_student: IExerciseStudent}\r\n\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ExerciseStudentModificationStatus};","import { fetchDataSuccess, fetchDataError, removeExerciseNotSubmitAll, addExerciseNotSubmit, removeExerciseSubmitNotGradeAll, addExerciseSubmitNotGrade } from \"../../../store/actions/exercise_student.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface exercise {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    section_id: number;\r\n    teacher_name: string;\r\n    exercise_submission_id: number;\r\n    time_submit: string;\r\n    deadline: string;\r\n    level_id: number;\r\n    level_name: string;\r\n    section_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getExerciseForClassStudent(dispatch: any, class_id: number, student_id: number) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/exercises/class-student/${class_id}/${student_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getExerciseForClassStudent(dispatch, class_id, student_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeExerciseNotSubmitAll())\r\n                dispatch(removeExerciseSubmitNotGradeAll())\r\n                console.log(data.body.exercise_not_submit)\r\n                data.body.exercise_not_submit.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var exercise: exercise = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        level_id: ele.level_id,\r\n                        exercise_submission_id: ele.exercise_submission_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        time_submit: ele.time_submit,\r\n                        deadline: ele.deadline,\r\n                        level_name: ele.level_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addExerciseNotSubmit(exercise))\r\n                })\r\n\r\n                data.body.exercise_submitted.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var exercise: exercise = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        level_id: ele.level_id,\r\n                        exercise_submission_id: ele.exercise_submission_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        time_submit: ele.time_submit,\r\n                        deadline: ele.deadline,\r\n                        level_name: ele.level_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addExerciseSubmitNotGrade(exercise))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { fetchDataSuccess, fetchDataError, removeParentAll, initialParent } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user {\r\n    id: any,\r\n    username: string,\r\n    email: string,\r\n    password: string,\r\n    status: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    dateOfBirth: string,\r\n    profile_image_url: string,\r\n    sex: string,\r\n    phone: string,\r\n    address: string,\r\n    parents: number,\r\n    createTime: string\r\n}\r\nexport function getParentById(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getParentById(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeParentAll())\r\n                var user: user = {\r\n                    id: data.id,\r\n                    username: data.username,\r\n                    email: data.email,\r\n                    password: \"\",\r\n                    status: data.status,\r\n                    firstName: data.firstName,\r\n                    lastName: data.lastName,\r\n                    dateOfBirth: data.dateOfBirth,\r\n                    profile_image_url: data.profile_image_url,\r\n                    sex: data.sex,\r\n                    phone: data.phone,\r\n                    address: data.address,\r\n                    parents: data.parents,\r\n                    createTime: data.createTime\r\n                }\r\n                return dispatch(initialParent(user));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { IStudentLeave, StudentLeaveModificationStatus } from \"../models/student_leave.interface\";\r\n\r\n// register_successfull_student_leaves\r\nexport const ADD_STUDENT_LEAVE_NOT_APPROVED_NOW: string = \"ADD_STUDENT_LEAVE_NOT_APPROVED_NOW\";\r\nexport const EDIT_STUDENT_LEAVE_NOT_APPROVED_NOW: string = \"EDIT_STUDENT_LEAVE_NOT_APPROVED_NOW\";\r\nexport const REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW: string = \"REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW\";\r\nexport const CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_AMOUNT: string = \"CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_AMOUNT\";\r\nexport const CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT: string = \"CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT\";\r\nexport const CLEAR_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT: string = \"CLEAR_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT\";\r\nexport const REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW_ALL: string = \"REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW_ALL\";\r\nexport const INITIAL_STUDENT_LEAVE_NOT_APPROVED_NOW: string = \"INITIAL_STUDENT_LEAVE_NOT_APPROVED_NOW\";\r\n\r\n// not_register_student_leaves\r\nexport const ADD_STUDENT_LEAVE_APPROVED: string = \"ADD_STUDENT_LEAVE_APPROVED\";\r\nexport const EDIT_STUDENT_LEAVE_APPROVED: string = \"EDIT_STUDENT_LEAVE_APPROVED\";\r\nexport const REMOVE_STUDENT_LEAVE_APPROVED: string = \"REMOVE_STUDENT_LEAVE_APPROVED\";\r\nexport const CHANGE_STUDENT_LEAVE_APPROVED_AMOUNT: string = \"CHANGE_STUDENT_LEAVE_APPROVED_AMOUNT\";\r\nexport const CHANGE_STUDENT_LEAVE_APPROVED_PENDING_EDIT: string = \"CHANGE_STUDENT_LEAVE_APPROVED_PENDING_EDIT\";\r\nexport const CLEAR_STUDENT_LEAVE_APPROVED_PENDING_EDIT: string = \"CLEAR_STUDENT_LEAVE_APPROVED_PENDING_EDIT\";\r\nexport const REMOVE_STUDENT_LEAVE_APPROVED_ALL: string = \"REMOVE_STUDENT_LEAVE_APPROVED_ALL\";\r\nexport const INITIAL_STUDENT_LEAVE_APPROVED: string = \"INITIAL_STUDENT_LEAVE_APPROVED\";\r\n\r\n\r\n// not_register_student_leaves\r\nexport const ADD_STUDENT_LEAVE_NOT_APPROVED: string = \"ADD_STUDENT_LEAVE_NOT_APPROVED\";\r\nexport const EDIT_STUDENT_LEAVE_NOT_APPROVED: string = \"EDIT_STUDENT_LEAVE_NOT_APPROVED\";\r\nexport const REMOVE_STUDENT_LEAVE_NOT_APPROVED: string = \"REMOVE_STUDENT_LEAVE_NOT_APPROVED\";\r\nexport const CHANGE_STUDENT_LEAVE_NOT_APPROVED_AMOUNT: string = \"CHANGE_STUDENT_LEAVE_NOT_APPROVED_AMOUNT\";\r\nexport const CHANGE_STUDENT_LEAVE_NOT_APPROVED_PENDING_EDIT: string = \"CHANGE_STUDENT_LEAVE_NOT_APPROVED_PENDING_EDIT\";\r\nexport const CLEAR_STUDENT_LEAVE_NOT_APPROVED_PENDING_EDIT: string = \"CLEAR_STUDENT_LEAVE_NOT_APPROVED_PENDING_EDIT\";\r\nexport const REMOVE_STUDENT_LEAVE_NOT_APPROVED_ALL: string = \"REMOVE_STUDENT_LEAVE_NOT_APPROVED_ALL\";\r\nexport const INITIAL_STUDENT_LEAVE_NOT_APPROVED: string = \"INITIAL_STUDENT_LEAVE_NOT_APPROVED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(student_leave: IStudentLeave) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        student_leave\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialStudentLeaveNotApprovedNow(student_leave: IStudentLeave): IInitialStudentLeaveNotApprovedNowActionType {\r\n    return { type: INITIAL_STUDENT_LEAVE_NOT_APPROVED_NOW, student_leave: student_leave };\r\n}\r\n\r\nexport function removeStudentLeaveNotApprovedNowAll(): IRemoveStudentLeaveNotApprovedNowAllActionType {\r\n    return { type: REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW_ALL };\r\n}\r\n\r\nexport function addStudentLeaveNotApprovedNow(student_leave: IStudentLeave): IAddStudentLeaveNotApprovedNowActionType {\r\n    return { type: ADD_STUDENT_LEAVE_NOT_APPROVED_NOW, student_leave: student_leave };\r\n}\r\n\r\nexport function editStudentLeaveNotApprovedNow(student_leave: IStudentLeave): IEditStudentLeaveNotApprovedNowActionType {\r\n    return { type: EDIT_STUDENT_LEAVE_NOT_APPROVED_NOW, student_leave: student_leave };\r\n}\r\n\r\nexport function removeStudentLeaveNotApprovedNow(id: any): IRemoveStudentLeaveNotApprovedNowActionType {\r\n    return { type: REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedStudentLeaveNotApprovedNow(student_leave: IStudentLeave): IChangeSelectedStudentLeaveNotApprovedNowActionType {\r\n    return { type: CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT, student_leave: student_leave };\r\n}\r\n\r\nexport function clearSelectedStudentLeaveNotApprovedNow(): IClearSelectedStudentLeaveNotApprovedNowActionType {\r\n    return { type: CLEAR_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialStudentLeaveApproved(student_leave: IStudentLeave): IInitialStudentLeaveApprovedActionType {\r\n    return { type: INITIAL_STUDENT_LEAVE_APPROVED, student_leave: student_leave };\r\n}\r\n\r\nexport function removeStudentLeaveApprovedAll(): IRemoveStudentLeaveApprovedAllActionType {\r\n    return { type: REMOVE_STUDENT_LEAVE_APPROVED_ALL };\r\n}\r\n\r\nexport function addStudentLeaveApproved(student_leave: IStudentLeave): IAddStudentLeaveApprovedActionType {\r\n    return { type: ADD_STUDENT_LEAVE_APPROVED, student_leave: student_leave };\r\n}\r\n\r\nexport function editStudentLeaveApproved(student_leave: IStudentLeave): IEditStudentLeaveApprovedActionType {\r\n    return { type: EDIT_STUDENT_LEAVE_APPROVED, student_leave: student_leave };\r\n}\r\n\r\nexport function removeStudentLeaveApproved(id: any): IRemoveStudentLeaveApprovedActionType {\r\n    return { type: REMOVE_STUDENT_LEAVE_APPROVED, id: id };\r\n}\r\n\r\nexport function changeSelectedStudentLeaveApproved(student_leave: IStudentLeave): IChangeSelectedStudentLeaveApprovedActionType {\r\n    return { type: CHANGE_STUDENT_LEAVE_APPROVED_PENDING_EDIT, student_leave: student_leave };\r\n}\r\n\r\nexport function clearSelectedStudentLeaveApproved(): IClearSelectedStudentLeaveApprovedActionType {\r\n    return { type: CLEAR_STUDENT_LEAVE_APPROVED_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: StudentLeaveModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n\r\nexport function initialStudentLeaveNotApproved(student_leave: IStudentLeave): IInitialStudentLeaveNotApprovedActionType {\r\n    return { type: INITIAL_STUDENT_LEAVE_NOT_APPROVED, student_leave: student_leave };\r\n}\r\n\r\nexport function removeStudentLeaveNotApprovedAll(): IRemoveStudentLeaveNotApprovedAllActionType {\r\n    return { type: REMOVE_STUDENT_LEAVE_NOT_APPROVED_ALL };\r\n}\r\n\r\nexport function addStudentLeaveNotApproved(student_leave: IStudentLeave): IAddStudentLeaveNotApprovedActionType {\r\n    return { type: ADD_STUDENT_LEAVE_NOT_APPROVED, student_leave: student_leave };\r\n}\r\n\r\nexport function editStudentLeaveNotApproved(student_leave: IStudentLeave): IEditStudentLeaveNotApprovedActionType {\r\n    return { type: EDIT_STUDENT_LEAVE_NOT_APPROVED, student_leave: student_leave };\r\n}\r\n\r\nexport function removeStudentLeaveNotApproved(id: any): IRemoveStudentLeaveNotApprovedActionType {\r\n    return { type: REMOVE_STUDENT_LEAVE_NOT_APPROVED, id: id };\r\n}\r\n\r\nexport function changeSelectedStudentLeaveNotApproved(student_leave: IStudentLeave): IChangeSelectedStudentLeaveNotApprovedActionType {\r\n    return { type: CHANGE_STUDENT_LEAVE_NOT_APPROVED_AMOUNT, student_leave: student_leave };\r\n}\r\n\r\nexport function clearSelectedStudentLeaveNotApproved(): IClearSelectedStudentLeaveNotApprovedActionType {\r\n    return { type: CHANGE_STUDENT_LEAVE_NOT_APPROVED_PENDING_EDIT };\r\n}\r\n\r\n// register_successfull_student_leaves\r\ninterface IAddStudentLeaveNotApprovedNowActionType { type: string, student_leave: IStudentLeave };\r\ninterface IEditStudentLeaveNotApprovedNowActionType { type: string, student_leave: IStudentLeave };\r\ninterface IRemoveStudentLeaveNotApprovedNowActionType { type: string, id: any };\r\ninterface IChangeSelectedStudentLeaveNotApprovedNowActionType { type: string, student_leave: IStudentLeave };\r\ninterface IClearSelectedStudentLeaveNotApprovedNowActionType { type: string };\r\ninterface IRemoveStudentLeaveNotApprovedNowAllActionType { type: string }\r\ninterface IInitialStudentLeaveNotApprovedNowActionType {type: string, student_leave: IStudentLeave}\r\n\r\n// not_register_student_leaves\r\ninterface IAddStudentLeaveApprovedActionType { type: string, student_leave: IStudentLeave };\r\ninterface IEditStudentLeaveApprovedActionType { type: string, student_leave: IStudentLeave };\r\ninterface IRemoveStudentLeaveApprovedActionType { type: string, id: any };\r\ninterface IChangeSelectedStudentLeaveApprovedActionType { type: string, student_leave: IStudentLeave };\r\ninterface IClearSelectedStudentLeaveApprovedActionType { type: string };\r\ninterface IRemoveStudentLeaveApprovedAllActionType { type: string }\r\ninterface IInitialStudentLeaveApprovedActionType {type: string, student_leave: IStudentLeave}\r\n\r\n\r\n// register_successfull_student_leaves\r\ninterface IAddStudentLeaveNotApprovedActionType { type: string, student_leave: IStudentLeave };\r\ninterface IEditStudentLeaveNotApprovedActionType { type: string, student_leave: IStudentLeave };\r\ninterface IRemoveStudentLeaveNotApprovedActionType { type: string, id: any };\r\ninterface IChangeSelectedStudentLeaveNotApprovedActionType { type: string, student_leave: IStudentLeave };\r\ninterface IClearSelectedStudentLeaveNotApprovedActionType { type: string };\r\ninterface IRemoveStudentLeaveNotApprovedAllActionType { type: string }\r\ninterface IInitialStudentLeaveNotApprovedActionType {type: string, student_leave: IStudentLeave}\r\n\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  StudentLeaveModificationStatus};","import { fetchDataSuccess, fetchDataError, removeStudentLeaveApprovedAll, removeStudentLeaveNotApprovedAll, removeStudentLeaveNotApprovedNowAll, addStudentLeaveApproved, addStudentLeaveNotApproved, addStudentLeaveNotApprovedNow } from \"../../../store/actions/student_leave.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface StudentLeave {\r\n    id: any;\r\n    section_id: number;\r\n    section_name: string;\r\n    class_id: number;\r\n    class_name: string;\r\n    student_id: number;\r\n    section_number: number;\r\n    student_name: string;\r\n    reviewer_id: number;\r\n    description: string;\r\n    status: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getStudentLeaveByClassAndStudent(dispatch: any, class_id: number, student_id: number) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/student-leave/class-student/${class_id}/${student_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getStudentLeaveByClassAndStudent(dispatch, class_id, student_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeStudentLeaveApprovedAll())\r\n                dispatch(removeStudentLeaveNotApprovedNowAll())\r\n                dispatch(removeStudentLeaveNotApprovedAll())\r\n                console.log(data.body.student_leave)\r\n                data.body.student_leave.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var student_leave: StudentLeave = {\r\n                        id: ele.id,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        class_id: ele.class_id,\r\n                        class_name: ele.class_name,\r\n                        student_id: ele.student_id,\r\n                        reviewer_id: ele.reviewer_id,\r\n                        status: ele.status,\r\n                        section_number: ele.section_number,\r\n                        student_name: ele.student_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (student_leave.status === \"Approved\"){\r\n                        return dispatch(addStudentLeaveApproved(student_leave));\r\n                    }\r\n                    else if (student_leave.status === \"Not Approved\"){\r\n                        return dispatch(addStudentLeaveNotApproved(student_leave));\r\n                    }\r\n                    else {\r\n                        return dispatch(addStudentLeaveNotApprovedNow(student_leave));\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { IUserGradeExerciseSubmission, UserGradeExerciseSubmissionModificationStatus } from \"../models/user_grade_exercise_submission.interface\";\r\nexport const ADD_USER_GRADE_EXERCISE_SUBMISSION: string = \"ADD_USER_GRADE_EXERCISE_SUBMISSION\";\r\nexport const EDIT_USER_GRADE_EXERCISE_SUBMISSION: string = \"EDIT_USER_GRADE_EXERCISE_SUBMISSION\";\r\nexport const REMOVE_USER_GRADE_EXERCISE_SUBMISSION: string = \"REMOVE_USER_GRADE_EXERCISE_SUBMISSION\";\r\nexport const CHANGE_USER_GRADE_EXERCISE_SUBMISSION_AMOUNT: string = \"CHANGE_USER_GRADE_EXERCISE_SUBMISSION_AMOUNT\";\r\nexport const CHANGE_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT: string = \"CHANGE_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT\";\r\nexport const CLEAR_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT: string = \"CLEAR_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_USER_GRADE_EXERCISE_SUBMISSION_ALL: string = \"REMOVE_USER_GRADE_EXERCISE_SUBMISSION_ALL\";\r\nexport const INITIAL_USER_GRADE_EXERCISE_SUBMISSION: string = \"INITIAL_USER_GRADE_EXERCISE_SUBMISSION\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(user_grade_exercise_submission: IUserGradeExerciseSubmission) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        user_grade_exercise_submission\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialUserGradeExerciseSubmission(user_grade_exercise_submission: IUserGradeExerciseSubmission): IInitialUserGradeExerciseSubmissionActionType {\r\n    return { type: INITIAL_USER_GRADE_EXERCISE_SUBMISSION, user_grade_exercise_submission: user_grade_exercise_submission };\r\n}\r\n\r\nexport function removeUserGradeExerciseSubmissionAll(): IRemoveUserGradeExerciseSubmissionAllActionType {\r\n    return { type: REMOVE_USER_GRADE_EXERCISE_SUBMISSION_ALL };\r\n}\r\n\r\nexport function addUserGradeExerciseSubmission(user_grade_exercise_submission: IUserGradeExerciseSubmission): IAddUserGradeExerciseSubmissionActionType {\r\n    return { type: ADD_USER_GRADE_EXERCISE_SUBMISSION, user_grade_exercise_submission: user_grade_exercise_submission };\r\n}\r\n\r\nexport function editUserGradeExerciseSubmission(user_grade_exercise_submission: IUserGradeExerciseSubmission): IEditUserGradeExerciseSubmissionActionType {\r\n    return { type: EDIT_USER_GRADE_EXERCISE_SUBMISSION, user_grade_exercise_submission: user_grade_exercise_submission };\r\n}\r\n\r\nexport function removeUserGradeExerciseSubmission(id: any): IRemoveUserGradeExerciseSubmissionActionType {\r\n    return { type: REMOVE_USER_GRADE_EXERCISE_SUBMISSION, id: id };\r\n}\r\n\r\nexport function changeSelectedUserGradeExerciseSubmission(user_grade_exercise_submission: IUserGradeExerciseSubmission): IChangeSelectedUserGradeExerciseSubmissionActionType {\r\n    return { type: CHANGE_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT, user_grade_exercise_submission: user_grade_exercise_submission };\r\n}\r\n\r\nexport function clearSelectedUserGradeExerciseSubmission(): IClearSelectedUserGradeExerciseSubmissionActionType {\r\n    return { type: CLEAR_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: UserGradeExerciseSubmissionModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddUserGradeExerciseSubmissionActionType { type: string, user_grade_exercise_submission: IUserGradeExerciseSubmission };\r\ninterface IEditUserGradeExerciseSubmissionActionType { type: string, user_grade_exercise_submission: IUserGradeExerciseSubmission };\r\ninterface IRemoveUserGradeExerciseSubmissionActionType { type: string, id: any };\r\ninterface IChangeSelectedUserGradeExerciseSubmissionActionType { type: string, user_grade_exercise_submission: IUserGradeExerciseSubmission };\r\ninterface IClearSelectedUserGradeExerciseSubmissionActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  UserGradeExerciseSubmissionModificationStatus};\r\ninterface IRemoveUserGradeExerciseSubmissionAllActionType { type: string }\r\ninterface IInitialUserGradeExerciseSubmissionActionType {type: string, user_grade_exercise_submission: IUserGradeExerciseSubmission}","import { fetchDataError, addUserGradeExerciseSubmission, removeUserGradeExerciseSubmissionAll} from \"../../../store/actions/user_grade_exercise_submission.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user_grade_contest {\r\n    student_id: number;\r\n    student_name: string;\r\n    exercise_name: string;\r\n    time_submit: string;\r\n    image_url: string;\r\n    deadline: string;\r\n    description: string;\r\n    exercise_submission_id: number;\r\n    feedback: string;\r\n    score: number;\r\n    time: string;\r\n}\r\nexport function getUserGradeExerciseByStudentAndClass(dispatch: any, class_id: number, student_id: number) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-grade-exercise-submission/class-student/${class_id}/${student_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserGradeExerciseByStudentAndClass(dispatch, class_id, student_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(removeUserGradeExerciseSubmissionAll())\r\n                console.log(data.body.UserGradeExerciseSubmission)\r\n                data.body.UserGradeExerciseSubmission.map((ele: any, index: any) => {\r\n                    var user_grade_contest: user_grade_contest = {\r\n                        student_id: ele.student_id,\r\n                        exercise_name: ele.exercise_name,\r\n                        time_submit: ele.time_submit,\r\n                        description: ele.description,\r\n                        deadline: ele.deadline,\r\n                        image_url: ele.image_url,\r\n                        exercise_submission_id: ele.exercise_submission_id,\r\n                        student_name: ele.student_name,\r\n                        feedback: ele.feedback,\r\n                        score: ele.score,\r\n                        time: ele.time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addUserGradeExerciseSubmission(user_grade_contest))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChartLine } from \"../../common/components/CharLine\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getExerciseForClassStudent } from \"../../common/service/ExerciseStudent/GetExerciseForClassStudent\";\r\nimport { getParentById } from \"../../common/service/Parent/GetParentById\";\r\nimport { getStudentLeaveByClassAndStudent } from \"../../common/service/StudentLeave/GetStudentLeaveByClassStudent\";\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\nimport { getUserGradeExerciseByStudentAndClass } from \"../../common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByClassStudent\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IExerciseStudentState, IStateType, IStudentLeaveState, IUserGradeExerciseSubmissionState, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ManageStudent.css\"\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst ManageStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const exercise_students: IExerciseStudentState = useSelector((state: IStateType) => state.exercise_students);\r\n    const student_leave: IStudentLeaveState = useSelector((state: IStateType) => state.student_leaves);\r\n    const user_grade_exercise_submission: IUserGradeExerciseSubmissionState = useSelector((state: IStateType) => state.user_grade_exercise_submissions);\r\n    const numberSubmittedCount: number = exercise_students.exercise_submitted_not_grade.length + exercise_students.exercise_submitted_graded.length;\r\n    const numberNotSubmitNowCount: number = exercise_students.exercise_not_submit.length;\r\n    const numberStudentLeaveCount: number = student_leave.acceptLeaves.length;\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    \r\n    var id_z = localStorage.getItem('parent_id');\r\n    var parent_id: number = 0;\r\n    if (id_z !== null) {\r\n        parent_id = parseInt(id_z);\r\n    }\r\n\r\n    var id_y = localStorage.getItem('student_id');\r\n    var student_id: number= 0;\r\n    if (id_y !== null) {\r\n        student_id = parseInt(id_y);\r\n    }\r\n\r\n    var id_t = localStorage.getItem('class_id');\r\n    var class_id: number = 0;\r\n    if (id_t !== null) {\r\n        class_id = parseInt(id_t);\r\n    }\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getUserById(dispatch, student_id))\r\n                    trackPromise(getParentById(dispatch, parent_id))\r\n                    trackPromise(getExerciseForClassStudent(dispatch, class_id, student_id))\r\n                    trackPromise(getStudentLeaveByClassAndStudent(dispatch, class_id, student_id))\r\n                    trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id,student_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getUserById(dispatch, student_id))\r\n                trackPromise(getParentById(dispatch, parent_id))\r\n                trackPromise(getExerciseForClassStudent(dispatch, class_id, student_id))\r\n                trackPromise(getStudentLeaveByClassAndStudent(dispatch, class_id, student_id))\r\n                trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id,student_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, student_id, parent_id, class_id]);\r\n\r\n    let list_score_user_grade_exercise : number[] = [];\r\n    let list_name_user_grade_exercise : string[] = [];\r\n    user_grade_exercise_submission.user_grade_exercise_submissions.map((ele, idx) => {\r\n        list_score_user_grade_exercise.push(ele.score)\r\n        list_name_user_grade_exercise.push(ele.exercise_name)\r\n        return ele\r\n    })\r\n\r\n\r\n    const labels = list_name_user_grade_exercise;\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Điểm kiểm tra',\r\n                data: list_score_user_grade_exercise,\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            }\r\n        ],\r\n    };\r\n\r\n    const history = useHistory();\r\n    const routeChange = () =>{ \r\n        let path = '/class/exercise-student'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n    \r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"BÀI TẬP ĐÃ NỘP\" text={`${numberSubmittedCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"BÀI TẬP CHƯA NỘP\" text={`${numberNotSubmitNowCount}`} icon=\"book\" class=\"danger\" />\r\n                <TopCard title=\"SỐ BUỔI NGHỈ\" text={`${numberStudentLeaveCount}`} icon=\"book\" class=\"danger\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <h3 className=\" mb-2\" id=\"level-teacher\">Thông tin học sinh</h3>\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <h4 id=\"full-name\">Tên : {users.teachers.length > 0 ? users.teachers[0].username : \"\"}</h4>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <p id=\"username-teacher\">Giới tính: {users.teachers.length > 0 ? users.teachers[0].sex : \"\"}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-phone fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Số điện thoại: {users.teachers.length > 0 ? users.teachers[0].phone : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Ngày sinh: {users.teachers.length > 0 ? users.teachers[0].dateOfBirth : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Email: {users.teachers.length > 0 ? users.teachers[0].email : \"\"}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <h3 className=\" mb-2\" id=\"level-teacher\">Thông tin phụ huynh</h3>\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <h4 id=\"full-name\">Tên : {users.parents.length > 0 ? users.parents[0].username : \"\"}</h4>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <p id=\"username-teacher\">Giới tính: {users.parents.length > 0 ? users.parents[0].sex : \"\"}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-phone fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Số điện thoại: {users.parents.length > 0 ? users.parents[0].phone : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-calendar fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Ngày sinh: {users.parents.length > 0 ? users.parents[0].dateOfBirth : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Email: {users.parents.length > 0 ? users.parents[0].email : \"\"}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <TopCardLevel title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`2`} icon=\"book\" class=\"primary\" />\r\n                    <TopCardLevel title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`1`} icon=\"book\" class=\"danger\" /> */}\r\n                </div>\r\n\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <h3 className=\" mb-2\" id=\"level-teacher\">Thống kê điểm</h3>\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                        <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row no-gutters\">\r\n                                    <ChartLine data={data} />\r\n                                </div>\r\n                                <div className=\"row justify-content-center\">\r\n                                    <button \r\n                                        className=\"btn btn-success btn-green\" \r\n                                        id=\"btn-into-class-student\"\r\n                                        onClick={() => {routeChange()}}\r\n                                    >\r\n                                        Xem chi tiết\r\n                                        <i className={`fas fa-arrow-right fa-1x`} id=\"icon-arrow-right\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ManageStudent;\r\n","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CourseModificationStatus } from \"../../store/models/course.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setModificationState } from \"../../store/actions/course.action\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction ExerciseStudentList(props) {\r\n\r\n    const user_grade_exercise_submission = useSelector((state) => state.user_grade_exercise_submissions);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n  \r\n  \r\n  \r\n    const onChangeRoute = (exercise) =>{ \r\n      localStorage.removeItem('image_url_exercise')\r\n      localStorage.setItem('image_url_exercise', exercise.image_url)\r\n      localStorage.removeItem('score')\r\n      localStorage.setItem('score', exercise.score.toString())\r\n      localStorage.removeItem('description')\r\n      localStorage.setItem('description', exercise.description)\r\n      localStorage.removeItem('time_submit')\r\n      localStorage.setItem('time_submit', exercise.time_submit)\r\n      localStorage.removeItem('feedback')\r\n      localStorage.setItem('feedback', exercise.feedback)\r\n      let path = '/exercise/detail'; \r\n      history.push({\r\n          pathname: path,\r\n      });\r\n  }\r\n\r\n\r\n  const datas = user_grade_exercise_submission.user_grade_exercise_submissions;\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n\r\n  function editButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-warning\" onClick={() => {\r\n            if (props.onSelect) props.onSelect(row);\r\n            onChangeRoute(row)\r\n          }}\r\n          >Chi tiết</button>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'exercise_name',\r\n      text: 'Tên',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'deadline',\r\n      text: 'Thời hạn nộp',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'time_submit',\r\n      text: 'Thời gian nộp',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'score',\r\n      text: 'Điểm',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: 'Hành động',\r\n      formatter: editButton\r\n    },\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default ExerciseStudentList;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getUserGradeExerciseByStudentAndClass } from \"../../common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByClassStudent\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IExerciseStudentState, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./ManageStudent.css\"\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport ExerciseSectionList from \"./ExerciseSectionList\";\r\n\r\nconst ExerciseStudentList: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const exercise_students: IExerciseStudentState = useSelector((state: IStateType) => state.exercise_students);\r\n    const numberSubmittedCount: number = exercise_students.exercise_submitted_graded.length + exercise_students.exercise_submitted_not_grade.length;\r\n    const numberNotSubmitNowCount: number = exercise_students.exercise_not_submit.length;\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    var id_y = localStorage.getItem('student_id');\r\n    var student_id: number= 0;\r\n    if (id_y !== null) {\r\n        student_id = parseInt(id_y);\r\n    }\r\n\r\n    var id_z = localStorage.getItem('class_id');\r\n    var class_id: number= 0;\r\n    if (id_z !== null) {\r\n        class_id = parseInt(id_z);\r\n    }\r\n    \r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    dispatch(logout())\r\n                    trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id,student_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id,student_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, student_id, class_id]);\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"BÀI TẬP ĐÃ NỘP\" text={`${numberSubmittedCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"BÀI TẬP CHƯA NỘP\" text={`${numberNotSubmitNowCount}`} icon=\"book\" class=\"danger\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Bài kiểm tra buổi 1</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <ExerciseSectionList />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ExerciseStudentList;\r\n","import React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IRootPageStateType, IStateType, ITeacherRegisterQuantificationState, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ManageStudent.css\"\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nconst DetailExerciseStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const teacherRegisterQuantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    console.log(users.teachers)\r\n    console.log(teacherRegisterQuantifications)\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n\r\n    var id_y = localStorage.getItem('image_url_exercise');\r\n    var image_url_exercise: string = \"\";\r\n    if (id_y !== null) {\r\n        image_url_exercise = id_y;\r\n    }\r\n\r\n    var id_z = localStorage.getItem('score');\r\n    var score: number = 0;\r\n    if (id_z !== null) {\r\n        score = parseInt(id_z);\r\n    }\r\n\r\n    var id_t = localStorage.getItem('description');\r\n    var description: string = \"\";\r\n    if (id_t !== null) {\r\n        description = id_t;\r\n    }\r\n\r\n    var id_h = localStorage.getItem('time_submit');\r\n    var time_submit: string = \"\";\r\n    if (id_h !== null) {\r\n        time_submit = id_h;\r\n    }\r\n\r\n    var id_k = localStorage.getItem('feedback');\r\n    var feedback: string = \"\";\r\n    if (id_k !== null) {\r\n        feedback = id_k;\r\n    }\r\n\r\n    let percentage = score * 10;\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Bài tập\", \"Chi tiết\"));\r\n    }, [path.area, dispatch]);\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4 form-review\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Nhận xét</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            {feedback}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Bài làm của bé</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <img className=\"img-exercise\" src={image_url_exercise} alt=\"\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default DetailExerciseStudent;\r\n","import { IExerciseSubmission, ExerciseSubmissionModificationStatus } from \"../models/exercise_submission.interface\";\r\n\r\n// register_successfull_exercise_submissions\r\nexport const ADD_EXERCISE_SUBMISSION_NOT_GRADED: string = \"ADD_EXERCISE_SUBMISSION_NOT_GRADED\";\r\nexport const EDIT_EXERCISE_SUBMISSION_NOT_GRADED: string = \"EDIT_EXERCISE_SUBMISSION_NOT_GRADED\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_NOT_GRADED: string = \"REMOVE_EXERCISE_SUBMISSION_NOT_GRADED\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_AMOUNT: string = \"CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: string = \"CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: string = \"CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL: string = \"REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL\";\r\nexport const INITIAL_EXERCISE_SUBMISSION_NOT_GRADED: string = \"INITIAL_EXERCISE_SUBMISSION_NOT_GRADED\";\r\n\r\n// not_register_exercise_submissions\r\nexport const ADD_EXERCISE_SUBMISSION_GRADED: string = \"ADD_EXERCISE_SUBMISSION_GRADED\";\r\nexport const EDIT_EXERCISE_SUBMISSION_GRADED: string = \"EDIT_EXERCISE_SUBMISSION_GRADED\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_GRADED: string = \"REMOVE_EXERCISE_SUBMISSION_GRADED\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_GRADED_AMOUNT: string = \"CHANGE_EXERCISE_SUBMISSION_GRADED_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: string = \"CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: string = \"CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_GRADED_ALL: string = \"REMOVE_EXERCISE_SUBMISSION_GRADED_ALL\";\r\nexport const INITIAL_EXERCISE_SUBMISSION_GRADED: string = \"INITIAL_EXERCISE_SUBMISSION_GRADED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(exercise_submission: IExerciseSubmission) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        exercise_submission\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialExerciseNotGraded(exercise_submission: IExerciseSubmission): IInitialExerciseNotGradedActionType {\r\n    return { type: INITIAL_EXERCISE_SUBMISSION_NOT_GRADED, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function removeExerciseNotGradedAll(): IRemoveExerciseNotGradedAllActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL };\r\n}\r\n\r\nexport function addExerciseNotGraded(exercise_submission: IExerciseSubmission): IAddExerciseNotGradedActionType {\r\n    return { type: ADD_EXERCISE_SUBMISSION_NOT_GRADED, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function editExerciseNotGraded(exercise_submission: IExerciseSubmission): IEditExerciseNotGradedActionType {\r\n    return { type: EDIT_EXERCISE_SUBMISSION_NOT_GRADED, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function removeExerciseNotGraded(id: any): IRemoveExerciseNotGradedActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_NOT_GRADED, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseNotGraded(exercise_submission: IExerciseSubmission): IChangeSelectedExerciseNotGradedActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function clearSelectedExerciseNotGraded(): IClearSelectedExerciseNotGradedActionType {\r\n    return { type: CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialExerciseGraded(exercise_submission: IExerciseSubmission): IInitialExerciseGradedActionType {\r\n    return { type: INITIAL_EXERCISE_SUBMISSION_GRADED, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function removeExerciseGradedAll(): IRemoveExerciseGradedAllActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_GRADED_ALL };\r\n}\r\n\r\nexport function addExerciseGraded(exercise_submission: IExerciseSubmission): IAddExerciseGradedActionType {\r\n    return { type: ADD_EXERCISE_SUBMISSION_GRADED, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function editExerciseGraded(exercise_submission: IExerciseSubmission): IEditExerciseGradedActionType {\r\n    return { type: EDIT_EXERCISE_SUBMISSION_GRADED, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function removeExerciseGraded(id: any): IRemoveExerciseGradedActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_GRADED, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseGraded(exercise_submission: IExerciseSubmission): IChangeSelectedExerciseGradedActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function clearSelectedExerciseGraded(): IClearSelectedExerciseGradedActionType {\r\n    return { type: CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ExerciseSubmissionModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_exercise_submissions\r\ninterface IAddExerciseNotGradedActionType { type: string, exercise_submission: IExerciseSubmission };\r\ninterface IEditExerciseNotGradedActionType { type: string, exercise_submission: IExerciseSubmission };\r\ninterface IRemoveExerciseNotGradedActionType { type: string, id: any };\r\ninterface IChangeSelectedExerciseNotGradedActionType { type: string, exercise_submission: IExerciseSubmission };\r\ninterface IClearSelectedExerciseNotGradedActionType { type: string };\r\ninterface IRemoveExerciseNotGradedAllActionType { type: string }\r\ninterface IInitialExerciseNotGradedActionType {type: string, exercise_submission: IExerciseSubmission}\r\n\r\n// not_register_exercise_submissions\r\ninterface IAddExerciseGradedActionType { type: string, exercise_submission: IExerciseSubmission };\r\ninterface IEditExerciseGradedActionType { type: string, exercise_submission: IExerciseSubmission };\r\ninterface IRemoveExerciseGradedActionType { type: string, id: any };\r\ninterface IChangeSelectedExerciseGradedActionType { type: string, exercise_submission: IExerciseSubmission };\r\ninterface IClearSelectedExerciseGradedActionType { type: string };\r\ninterface IRemoveExerciseGradedAllActionType { type: string }\r\ninterface IInitialExerciseGradedActionType {type: string, exercise_submission: IExerciseSubmission}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ExerciseSubmissionModificationStatus};","import { fetchDataSuccess, fetchDataError, removeExerciseGradedAll, removeExerciseNotGradedAll, addExerciseGraded, addExerciseNotGraded } from \"../../../store/actions/exercise_submission.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ExerciseSubmission {\r\n    id: any;\r\n    student_id: number;\r\n    exercise_id: number;\r\n    student_name: string;\r\n    exercise_name: string;\r\n    image_url: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getExerciseSubmissionByClass(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/exercise-submission/class/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getExerciseSubmissionByClass(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeExerciseGradedAll())\r\n                dispatch(removeExerciseNotGradedAll())\r\n                console.log(data.body.exercise_not_graded)\r\n                data.body.exercise_not_graded.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var exercise_submission: ExerciseSubmission = {\r\n                        id: ele.id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        exercise_id: ele.exercise_id,\r\n                        exercise_name: ele.exercise_name,\r\n                        image_url: ele.image_url,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    return dispatch(addExerciseNotGraded(exercise_submission));\r\n                })\r\n\r\n                data.body.exercise_graded.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var exercise_submission: ExerciseSubmission = {\r\n                        id: ele.id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        exercise_id: ele.exercise_id,\r\n                        exercise_name: ele.exercise_name,\r\n                        image_url: ele.image_url,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    return dispatch(addExerciseGraded(exercise_submission));\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { fetchDataSuccess, fetchDataError, removeAcceptTeacherLeaveAll, removeLeavesAll,  addAcceptTeacherLeave, removeRemoveTeacherLeaveAll, addRemoveTeacherLeave, addLeaves } from \"../../../store/actions/teacher_leave.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface TeacherLeave {\r\n    id: any;\r\n    section_id: number;\r\n    section_name: string;\r\n    class_id: number;\r\n    class_name: string;\r\n    teacher_id: number;\r\n    teacher_name: string;\r\n    section_number: number;\r\n    reviewer_id: number;\r\n    substitute_teacher_id: number;\r\n    substitute_teacher_name: string;\r\n    description: string;\r\n    status: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getTeacherLeaveByTeacher(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/teacher-leave/teacher/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTeacherLeaveByTeacher(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeAcceptTeacherLeaveAll())\r\n                dispatch(removeRemoveTeacherLeaveAll())\r\n                dispatch(removeLeavesAll())\r\n                //console.log(data.body.teacher_leaves)\r\n                data.body.teacher_leave.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var teacher_leave: TeacherLeave = {\r\n                        id: ele.id,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        class_id: ele.class_id,\r\n                        class_name: ele.class_name,\r\n                        section_number: ele.section_number,\r\n                        teacher_id: ele.teacher_id,\r\n                        reviewer_id: ele.reviewer_id,\r\n                        substitute_teacher_id: ele.substitute_teacher_id,\r\n                        substitute_teacher_name: ele.substitute_teacher_name,\r\n                        status: ele.status,\r\n                        teacher_name: ele.teacher_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (teacher_leave.status === \"Approved\"){\r\n                        return dispatch(addAcceptTeacherLeave(teacher_leave));\r\n                    }\r\n                    else if (teacher_leave.status === \"Not Approved\") {\r\n                        return dispatch(addRemoveTeacherLeave(teacher_leave));\r\n                    }\r\n                    else {\r\n                        return dispatch(addLeaves(teacher_leave));\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, ITeacherLeaveState, IUserState, ISectionState, IAnonymousNotificationState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { addLeaves } from \"../../store/actions/teacher_leave.action\";\r\nimport { OnChangeModel, ITeacherLeaveFormState } from \"../../common/types/Form.types\";\r\nimport SelectKeyValue from \"../../common/components/SelectKeyValue\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { IUser } from \"../../store/models/user.interface\";\r\nimport { ITeacherLeave, TeacherLeaveModificationStatus } from \"../../store/models/teacher_leave.interface\";\r\nimport { postTeacherLeave } from \"../../common/service/TeacherLeave/PostTeacherLeave\";\r\nimport { AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\r\n\r\nexport type artAgeListProps = {\r\n    isCheck: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n    data?: any;\r\n};\r\n\r\ntype Option1 = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\n\r\nfunction RequestOffSectionForm(props: artAgeListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const teacherleaves: ITeacherLeaveState | null = useSelector((state: IStateType) => state.teacher_leaves);\r\n    let teacher_leave: ITeacherLeave | null = teacherleaves.selectedTeacherLeave;\r\n    const anonymous_notifications: IAnonymousNotificationState | null = useSelector((state: IStateType) => state.anonymous_notifications);\r\n    const isCreate: boolean = (anonymous_notifications.modificationState === AnonymousNotificationModificationStatus.Create);\r\n    \r\n    var id_y = localStorage.getItem('class_id');\r\n    let class_id = 0;\r\n    if (id_y !== null) {\r\n        class_id = parseInt(id_y);\r\n    }\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    var teacher_id: number = 0;\r\n    if (id_x !== null) {\r\n        teacher_id = parseInt(id_x);\r\n    }\r\n\r\n    var id_z = localStorage.getItem('section_id');\r\n    var section_id: number = 0;\r\n    if (id_z !== null) {\r\n        section_id = parseInt(id_z);\r\n    }\r\n\r\n    var id_k = localStorage.getItem('section_number');\r\n    var section_number: number = 0;\r\n    if (id_k !== null) {\r\n        section_number = parseInt(id_k);\r\n    }\r\n\r\n    var id_h = localStorage.getItem('substitute_teacher_id');\r\n    var substitute_teacher_id: number = 0;\r\n    if (id_h !== null) {\r\n        substitute_teacher_id = parseInt(id_h);\r\n    }\r\n\r\n    var id_k = localStorage.getItem('teacher_leave_id');\r\n    var teacher_leave_id: number = 0;\r\n    if (id_k !== null) {\r\n        teacher_leave_id = parseInt(id_k);\r\n    }\r\n\r\n    var id_t = localStorage.getItem('description');\r\n    var description = \"\";\r\n    if (id_t !== null) {\r\n        description = id_t;\r\n    }\r\n    \r\n    if (isCreate){\r\n        teacher_leave = { id: 0, section_id: 0, class_id: 0, section_number: 0, teacher_id: 0, substitute_teacher_id: 0, description: \"\", section_name: \"\", class_name: \"\", teacher_name: \"\", reviewer_id: 0, status: \"\", substitute_teacher_name: \"\", create_time: \"\", update_time: \"\" }\r\n    }else {\r\n        teacher_leave = { id: teacher_leave_id, section_id: section_id, class_id: class_id, section_number: section_number, teacher_id: teacher_id, substitute_teacher_id: substitute_teacher_id, description: description, section_name: \"\", class_name: \"\", teacher_name: \"\", reviewer_id: 0, status: \"\", substitute_teacher_name: \"\", create_time: \"\", update_time: \"\" }\r\n    }\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const listTeacher: IUser[] = users.teachers\r\n    const listTeachers: Option1[] = [];\r\n    const sections: ISectionState | null = useSelector((state: IStateType) => state.sections);\r\n\r\n    listTeacher.map((ele) => {\r\n        let item: Option1 = { \"name\": ele.username, \"value\": ele.id }\r\n        return listTeachers.push(item)\r\n    })\r\n\r\n    const listSections: Option1[] = [];\r\n    sections.sections.map((ele) => {\r\n        let item: Option1 = { \"name\": ele.name, \"value\": ele.id }\r\n        return listSections.push(item)\r\n    })\r\n\r\n\r\n    const [formState, setFormState] = useState({\r\n        section_id: { error: \"\", value: teacher_leave.section_id },\r\n        substitute_teacher_id: { error: \"\", value: teacher_leave.substitute_teacher_id },\r\n        description: { error: \"\", value: teacher_leave.description },\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        props.isCheck(false);\r\n        let saveUserFn: Function = addLeaves;\r\n        saveForm(formState, saveUserFn);\r\n    }\r\n\r\n    function saveForm(formState: ITeacherLeaveFormState, saveFn: Function): void {\r\n        if (teacher_leave) {\r\n            const id = toast.loading(\"Đang gửi yêu cầu. Vui lòng đợi trong giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 2000\r\n            });\r\n\r\n            dispatch(postTeacherLeave({\r\n                section_id: formState.section_id.value,\r\n                substitute_teacher_id: formState.substitute_teacher_id.value,\r\n                teacher_id: teacher_id,\r\n                classes_id: class_id,\r\n                description: formState.description.value\r\n            }, id))\r\n\r\n            console.log({\r\n                section_id: formState.section_id.value,\r\n                substitute_teacher_id: formState.substitute_teacher_id.value,\r\n                teacher_id: teacher_id,\r\n                classes_id: class_id,\r\n                description: formState.description.value\r\n            })\r\n        }\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        props.isCheck(false);\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.description.error || !formState.description.value) as boolean;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow shadow-xx\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Gửi yêu cầu nghỉ dạy</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-group\">\r\n                                    <SelectKeyValue\r\n                                        id=\"input_section_id\"\r\n                                        field=\"section_id\"\r\n                                        label=\"Buổi học\"\r\n                                        options={listSections}\r\n                                        required={true}\r\n                                        onChange={hasFormValueChanged}\r\n                                        value={formState.section_id.value}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <SelectKeyValue\r\n                                            id=\"input_substitute_teacher_id\"\r\n                                            field=\"substitute_teacher_id\"\r\n                                            label=\"Giáo viên dạy thay\"\r\n                                            options={listTeachers}\r\n                                            required={true}\r\n                                            onChange={hasFormValueChanged}\r\n                                            value={formState.substitute_teacher_id.value}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_description\"\r\n                                        field=\"description\"\r\n                                        value={formState.description.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        maxLength={100}\r\n                                        label=\"Lý do\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default RequestOffSectionForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/teacher_leave.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postNotifyDb } from \"../NotifyDb/PostNotifyDb\";\r\nimport { getTeacherLeaveByTeacher } from \"./GetTeacherLeaveByTeacher\";\r\n\r\nexport function postTeacherLeave(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/teacher-leave`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postTeacherLeave(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                dispatch(postNotifyDb({\r\n                    name: `Gửi yêu cầu nghỉ dạy buổi học ${val.section_number} lớp ${val.class_name}!`,\r\n                    description: `Bạn đã gửi yêu cầu nghỉ dạy buổi học ${val.section_number} lớp ${val.class_name}!`\r\n                }, 0))\r\n                getTeacherLeaveByTeacher(dispatch, data.teacher_id)\r\n                toast.update(idx, { render: \"Yêu cầu nghỉ dạy đã được gửi thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Yêu cầu nghỉ dạy đã được gửi không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            });\r\n    };\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Popup from \"reactjs-popup\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getExerciseSubmissionByClass } from \"../../common/service/ExerciseSubmission/GetExerciseSubmissionByClass\";\r\nimport { getSectionByClass } from \"../../common/service/Section/GetSectionByClass\";\r\nimport { getTeacherLeaveByTeacher } from \"../../common/service/TeacherLeave/GetTeacherLeaveByTeacher\";\r\nimport { getTeacher } from \"../../common/service/Teacher/GetTeacher\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { setModificationStateAnonymousNotification } from \"../../store/actions/anonymous_notification.action\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\r\nimport { IAnonymousNotificationState, IExerciseSubmissionState, IRootPageStateType, ISectionState, IStateType, ITeacherLeaveState, ITimeScheduleState, ITutorialPageState } from \"../../store/models/root.interface\";\r\nimport \"./DetailClassTeacher.css\"\r\nimport RequestOffSectionForm from \"./RequestOffSectionForm\";\r\nimport { ISection } from \"../../store/models/section.interface\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getInfoMyClass } from \"../../common/service/MyClass/GetInfoMyClass\";\r\nimport { IExerciseSubmission } from \"../../store/models/exercise_submission.interface\";\r\nimport { ITeacherLeave } from \"../../store/models/teacher_leave.interface\";\r\n\r\n\r\nconst DetailClassTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const sections: ISectionState = useSelector((state: IStateType) => state.sections);\r\n    const time_schedules: ITimeScheduleState = useSelector((state: IStateType) => state.time_schedules);\r\n    const tutorial_pages: ITutorialPageState = useSelector((state: IStateType) => state.tutorial_pages);\r\n    const anonymous_notifications: IAnonymousNotificationState | null = useSelector((state: IStateType) => state.anonymous_notifications);\r\n    const teacher_leaves: ITeacherLeaveState = useSelector((state: IStateType) => state.teacher_leaves);\r\n    const exercise_submissions: IExerciseSubmissionState = useSelector((state: IStateType) => state.exercise_submissions);\r\n    console.log(tutorial_pages)\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberNotApprovedNowCount: number = exercise_submissions.exercise_not_gradeds.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('class_id');\r\n\r\n    let class_id: number = 0;\r\n\r\n    if (id_y !== null) {\r\n        class_id = parseInt(id_y);\r\n    }\r\n\r\n    const [checked1, setChecked1] = useState(true);\r\n    const [checked2, setChecked2] = useState(false);\r\n    const [checked3, setChecked3] = useState(false);\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getInfoMyClass(dispatch, class_id))\r\n                    trackPromise(getSectionByClass(dispatch, class_id))\r\n                    trackPromise(getTeacher(dispatch))\r\n                    trackPromise(getExerciseSubmissionByClass(dispatch, class_id))\r\n                    trackPromise(getTeacherLeaveByTeacher(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getInfoMyClass(dispatch, class_id))\r\n                trackPromise(getSectionByClass(dispatch, class_id))\r\n                trackPromise(getTeacher(dispatch))\r\n                trackPromise(getExerciseSubmissionByClass(dispatch, class_id))\r\n                trackPromise(getTeacherLeaveByTeacher(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, class_id, id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp học\", \"Buổi học\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    const [popup1, setPopup1] = useState(false);\r\n\r\n    function onAnonymousNotificationRemove() {\r\n        setPopup1(true);\r\n    }\r\n\r\n    function onRemovePopup1(value: boolean) {\r\n        setPopup1(false);\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    const routeChange1 = (exercise_submission: IExerciseSubmission) => {\r\n        let path = '/exercise-grade';\r\n        localStorage.setItem('student_name', exercise_submission.student_name);\r\n        localStorage.setItem('student_id', exercise_submission.student_id.toString())\r\n        localStorage.setItem('exercise_submission_id', exercise_submission.id.toString())\r\n        localStorage.setItem('exercise_name', exercise_submission.exercise_name)\r\n        localStorage.setItem('exercise_id', exercise_submission.exercise_id.toString())\r\n        localStorage.setItem('image_url_exercise_submission', exercise_submission.image_url)\r\n        localStorage.setItem('time_submit', exercise_submission.update_time)\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    const routeChange2 = (teacher_leave: ITeacherLeave) => {\r\n        localStorage.setItem('section_name', teacher_leave.section_name);\r\n        localStorage.setItem('section_number', teacher_leave.section_number.toString());\r\n        localStorage.setItem('section_id', teacher_leave.section_id.toString());\r\n        localStorage.setItem('teacher_name', teacher_leave.teacher_name.toString());\r\n        localStorage.setItem('substitute_teacher_id', teacher_leave.substitute_teacher_id.toString());\r\n        localStorage.setItem('substitute_teacher_name', teacher_leave.substitute_teacher_name.toString());\r\n        localStorage.setItem('description', teacher_leave.description.toString());\r\n        localStorage.setItem('update_time', teacher_leave.update_time);\r\n        localStorage.setItem('class_name', teacher_leave.class_name);\r\n        localStorage.setItem('teacher_leave_id', teacher_leave.id.toString())\r\n        dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.Edit))\r\n        onAnonymousNotificationRemove()\r\n    }\r\n\r\n    const onChangeRoute = (section: ISection) => {\r\n        let path = \"/classes/section\";\r\n        localStorage.removeItem('section_id')\r\n        localStorage.setItem('section_id', section.id.toString())\r\n        localStorage.removeItem('section_number')\r\n        localStorage.setItem('section_number', section.number.toString())\r\n        localStorage.removeItem('recording')\r\n        localStorage.setItem('recording', section.recording !== undefined ? section.recording : \"\")\r\n        /* let tutorial_page_list: any[] = []\r\n        localStorage.removeItem('tutorial_name')\r\n        localStorage.removeItem('tutorial_id')\r\n        tutorials.tutorials.map(ele => {\r\n            if (ele.section_id === section.id) {\r\n                localStorage.setItem('tutorial_id', ele.id.toString())\r\n                localStorage.setItem('tutorial_name', ele.name.toString())\r\n                tutorial_pages.tutorialPages.map(element => {\r\n                    if (element.tutorial_id === ele.id) {\r\n                        tutorial_page_list.push({\r\n                            description: element.description,\r\n                            id: element.id,\r\n                            name: element.name,\r\n                            tutorial_id: element.tutorial_id,\r\n                            number: element.number\r\n                        })\r\n                    }\r\n                    return null\r\n                })\r\n            }\r\n            return null\r\n        })\r\n        console.log(tutorial_page_list)\r\n        localStorage.removeItem('description_tutorial_page_list')\r\n        localStorage.setItem('description_tutorial_page_list', JSON.stringify(tutorial_page_list.sort((a, b) => a.number - b.number))) */\r\n        history.push({\r\n            pathname: path\r\n        })\r\n    }\r\n\r\n    let data: string[] = []\r\n    let total_time = \"\";\r\n    let check_active: string[] = [];\r\n\r\n    if (time_schedules.timeSchedules.length > 1 && promiseInProgress === false) {\r\n        if (time_schedules.timeSchedules[0] !== undefined && time_schedules.timeSchedules[0] !== null) {\r\n            var start_time_0 = time_schedules.timeSchedules[0].start_time.split(\"T\");\r\n            var end_time_0 = time_schedules.timeSchedules[0].end_time.split(\"T\");\r\n            var hour_start = parseInt(start_time_0[1].substring(0, 2));\r\n            var minus_tart = parseInt(start_time_0[1].substring(3, 5));\r\n            var sercon_start = parseInt(start_time_0[1].substring(6, 8));\r\n            var hour_end = parseInt(end_time_0[1].substring(0, 2));\r\n            var minus_end = parseInt(end_time_0[1].substring(3, 5));\r\n            var sercon_end = parseInt(end_time_0[1].substring(6, 8));\r\n\r\n            total_time = (hour_end - hour_start).toString() + \" giờ \" + (minus_end - minus_tart).toString() + \" phút \" + (sercon_end - sercon_start).toString() + \" giây\";\r\n            time_schedules.timeSchedules.map((ele, index) => {\r\n                var start_date = new Date(ele.start_time);\r\n                var end_date = new Date(ele.end_time);\r\n                // Do your operations\r\n                var date_now = new Date();\r\n\r\n                if ((date_now.getTime() - start_date.getTime()) / 1000 < 0) {\r\n                    check_active.push('Chưa diễn ra');\r\n                }\r\n                else if ((date_now.getTime() - start_date.getTime()) / 1000 > 0 && (end_date.getTime() - date_now.getTime()) / 1000 > 0) {\r\n                    check_active.push('Đang diễn ra');\r\n                }\r\n                else {\r\n                    check_active.push('Đã diễn ra');\r\n                }\r\n\r\n                var start_time = ele.start_time.split(\"T\");\r\n                var end_time = ele.end_time.split(\"T\");\r\n                return data.push(\"Từ \" + start_time[0] + \" \" + start_time[1] + \" -> \" + end_time[0] + \" \" + end_time[1])\r\n            })\r\n        }\r\n    }\r\n\r\n    function checkActive(index: number) {\r\n        if (check_active[index] === \"Chưa diễn ra\") {\r\n            return \"not_active_now\";\r\n        }\r\n        else if (check_active[index] === \"Đang diễn ra\") {\r\n            return 'active_now';\r\n        }\r\n        else {\r\n            return \"not_active\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                <div className=\"row\">\r\n                    <TopCard title=\"SỐ BUỔI ĐÃ DẠY\" text={`${check_active.filter((ele, index) => ele === \"Đã diễn ra\").length}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"SỐ BÀI KIỂM TRA CHƯA CHẤM\" text={`${numberNotApprovedNowCount}`} icon=\"book\" class=\"danger\" />\r\n                    <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                        <button\r\n                            className=\"btn btn-success btn-green\"\r\n                            id=\"btn-create-teacher-level\"\r\n                            onClick={() => {\r\n                                dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.Create))\r\n                                onAnonymousNotificationRemove()\r\n                            }}\r\n                        >\r\n                            <i className=\"fas fa fa-plus\"></i>\r\n                            Đăng kí nghỉ dạy\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                            if (checked1 === false) {\r\n                                setChecked1(true)\r\n                                setChecked2(false)\r\n                                setChecked3(false)\r\n                            }\r\n                        }} style={{\r\n                            color: checked1 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Buổi học</h6>\r\n\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"30%\",\r\n                            backgroundColor: checked1 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                            if (checked2 === false) {\r\n                                setChecked2(true)\r\n                                setChecked1(false)\r\n                                setChecked3(false)\r\n                            }\r\n                        }}\r\n                            style={{\r\n                                color: checked2 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                            }}>Bài tập chưa chấm</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"30%\",\r\n                            backgroundColor: checked2 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                            if (checked3 === false) {\r\n                                setChecked3(true)\r\n                                setChecked1(false)\r\n                                setChecked2(false)\r\n                            }\r\n                        }}\r\n                            style={{\r\n                                color: checked3 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                            }}>Nghỉ dạy</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"30%\",\r\n                            backgroundColor: checked3 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Popup\r\n                    open={popup1}\r\n                    onClose={() => setPopup1(false)}\r\n                    closeOnDocumentClick\r\n                >\r\n                    <>\r\n                        {\r\n                            function () {\r\n                                if ((anonymous_notifications.modificationState === AnonymousNotificationModificationStatus.Create || anonymous_notifications.modificationState === AnonymousNotificationModificationStatus.Edit)) {\r\n                                    return <RequestOffSectionForm isCheck={onRemovePopup1} />\r\n                                }\r\n                            }()\r\n                        }\r\n                    </>\r\n                </Popup>\r\n\r\n                {\r\n                    function () {\r\n                        if (checked1 === true) {\r\n                            return (\r\n                                <div className=\"row\">\r\n                                    {\r\n                                        sections.sections.sort((a, b) => a.number - b.number).map((ele, index) => {\r\n                                            return (\r\n                                                <div className=\"col-xl-6 col-md-6 mb-4 pr-4 pl-4\">\r\n                    \r\n\r\n                                                    <div className={`row section-ele row-section mb-2 ${checkActive(index)}`} onClick={() => { onChangeRoute(ele) }}>\r\n                                                        <div className=\"col-xl-2 col-md-2 pt-4 pb-4 avatar-x\">\r\n                                                            <img className=\"img-exam\" src=\"http://res.cloudinary.com/djtmwajiu/image/upload/v1667395965/inl1eekblioz9s5iqed1.png\" alt=\"\" />\r\n                                                        </div>\r\n                                                        <div className=\"col-xl-10 col-md-10\">\r\n                                                            <div className=\"row mt-2\">\r\n                                                                <div className=\"col-md-3\">\r\n                                                                    Buổi {ele.number}\r\n                                                                </div>\r\n                                                                <div className=\"col-md-9\">\r\n                                                                    {ele.name}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-md-3\">\r\n                                                                    Lịch học:\r\n                                                                </div>\r\n                                                                <div className=\"col-md-9\">\r\n                                                                    {data[index]}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-md-3\">\r\n                                                                    Thời lượng:\r\n                                                                </div>\r\n                                                                <div className=\"col-md-9\">\r\n                                                                    {total_time}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-md-3\">\r\n                                                                    Hình thức:\r\n                                                                </div>\r\n                                                                <div className=\"col-md-9\">\r\n                                                                    {ele.teach_form === true ? \"Dạy bằng jisti\" : \"Đọc hiểu giáo trình\"}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"row mb-2\">\r\n                                                                <div className=\"col-md-3\">\r\n                                                                    Giáo viên:\r\n                                                                </div>\r\n                                                                <div className=\"col-md-9\">\r\n                                                                    {ele.teacher_name}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            )\r\n\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        }\r\n                        else if (checked2 === true) {\r\n                            return (\r\n                                <div className=\"row mb-4\">\r\n                                    <div className=\"col-xl-6 col-md-6\">\r\n                                        <h3 className=\" mb-2\" id=\"level-teacher\">Bài kiểm tra cần chấm</h3>\r\n                                        <div className=\"table-responsive portlet table-section\">\r\n                                            <table className=\"table\">\r\n                                                <thead className=\"thead-light\">\r\n                                                    <tr>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        exercise_submissions.exercise_not_gradeds.map((ele, index) => {\r\n                                                            return (\r\n                                                                <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                    <div className=\"row row-section mb-4 ml-2 mr-2\" onClick={() => { routeChange1(ele) }}>\r\n                                                                        <div className=\"col-xl-3 col-md-3 avatar-x\">\r\n                                                                            <img className=\"img-exam\" src=\"http://res.cloudinary.com/djtmwajiu/image/upload/v1667399202/ersndjmp6ppmvohvekpr.png\" alt=\"\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"col-xl-9 col-md-9 mt-2\">\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-md-5\">\r\n                                                                                    Tên:\r\n                                                                                </div>\r\n                                                                                <div className=\"col-md-7\">\r\n                                                                                    {ele.exercise_name}\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-md-5\">\r\n                                                                                    Học sinh:\r\n                                                                                </div>\r\n                                                                                <div className=\"col-md-7\">\r\n                                                                                    {ele.student_name}\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-md-5\">\r\n                                                                                    Thời gian nộp bài:\r\n                                                                                </div>\r\n                                                                                <div className=\"col-md-7\">\r\n                                                                                    {ele.update_time.replaceAll(\"T\", \" \")}\r\n                                                                                </div>\r\n                                                                            </div>\r\n\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        else if (checked3 === true) {\r\n                            return (\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                                        <h3 className=\" mb-2\" id=\"level-teacher\">Yêu cầu nghỉ dạy</h3>\r\n                                        <div className=\"table-responsive portlet table-section\">\r\n                                            <table className=\"table\">\r\n                                                <thead className=\"thead-light \">\r\n                                                    <tr>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        teacher_leaves.leaves.map((ele, index) => {\r\n                                                            return (\r\n                                                                <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                    <div className=\"row row-section mb-4 ml-2 mr-2\" onClick={() => { routeChange2(ele) }}>\r\n                                                                        <div className=\"col-xl-3 col-md-3 avatar-x\">\r\n                                                                            <img className=\"img-exam mt-2 mb-2\" src=\"http://res.cloudinary.com/djtmwajiu/image/upload/v1667399584/wazcmdgbmxy2amdmjjdv.png\" alt=\"\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"col-xl-9 col-md-9 mt-2\">\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-md-5\">\r\n                                                                                    Buổi:\r\n                                                                                </div>\r\n                                                                                <div className=\"col-md-7\">\r\n                                                                                    {ele.section_number}\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-md-5\">\r\n                                                                                    Giáo viên thay:\r\n                                                                                </div>\r\n                                                                                <div className=\"col-md-7\">\r\n                                                                                    {ele.substitute_teacher_name}\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-md-5\">\r\n                                                                                    Trạng thái:\r\n                                                                                </div>\r\n                                                                                <div className=\"col-md-7\">\r\n                                                                                    {ele.status}\r\n                                                                                </div>\r\n                                                                            </div>\r\n\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }()\r\n                }\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default DetailClassTeacher;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/semester.actions\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postUserGradeExercise(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-grade-exercise-submission`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postUserGradeExercise(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Chấm điểm bài tập thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Chấm điểm bài tập không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataSuccess, fetchDataError, removeExerciseGradedAll, removeExerciseNotGradedAll, addExerciseGraded, addExerciseNotGraded } from \"../../../store/actions/exercise_submission.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ExerciseSubmission {\r\n    id: any;\r\n    student_id: number;\r\n    exercise_id: number;\r\n    student_name: string;\r\n    exercise_name: string;\r\n    image_url: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getExerciseSubmissionByExercise(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/exercise-submission/exercise/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getExerciseSubmissionByExercise(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeExerciseGradedAll())\r\n                dispatch(removeExerciseNotGradedAll())\r\n                console.log(data.body.exercise_not_graded)\r\n                data.body.exercise_not_graded.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var exercise_submission: ExerciseSubmission = {\r\n                        id: ele.id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        exercise_id: ele.exercise_id,\r\n                        exercise_name: ele.exercise_name,\r\n                        image_url: ele.image_url,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    return dispatch(addExerciseNotGraded(exercise_submission));\r\n                })\r\n\r\n                data.body.exercise_graded.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var exercise_submission: ExerciseSubmission = {\r\n                        id: ele.id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        exercise_id: ele.exercise_id,\r\n                        exercise_name: ele.exercise_name,\r\n                        image_url: ele.image_url,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    return dispatch(addExerciseGraded(exercise_submission));\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IExerciseSubmissionState, IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./GradeExamTeacher.css\"\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport NumberInput from \"../../common/components/NumberInput\";\r\nimport { postUserGradeExercise } from \"../../common/service/UserGradeExercise/PostUserGradeExercise\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { getExerciseSubmissionByExercise } from \"../../common/service/ExerciseSubmission/GetExerciseSubmissionByExeercise\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { PhotoProvider, PhotoView } from \"react-photo-view\";\r\nimport 'react-photo-view/dist/react-photo-view.css';\r\n\r\nconst GradeExamTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const exercise_submissions: IExerciseSubmissionState = useSelector((state: IStateType) => state.exercise_submissions);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    let user_grade_exercise_submission = {\r\n        feedback: \"\",\r\n        score: 0\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    const [formState, setFormState] = useState({\r\n        feedback: { error: \"\", value: user_grade_exercise_submission.feedback },\r\n        score: { error: \"\", value: user_grade_exercise_submission.score },\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    function saveForm() {\r\n        const id = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n\r\n        if (student_id === 0 && exercise_submission_id === 0) {\r\n            let y = exercise_submissions.exercise_not_gradeds[0].id;\r\n            console.log({\r\n                teacher_id: localStorage.getItem('id'),\r\n                exercise_submission_id: y,\r\n                score: formState.score.value,\r\n                feedback: formState.feedback.value\r\n            })\r\n\r\n            dispatch(postUserGradeExercise({\r\n                teacher_id: localStorage.getItem('id'),\r\n                exercise_submission_id: y,\r\n                score: formState.score.value,\r\n                feedback: formState.feedback.value\r\n            }, id))\r\n        }\r\n        else {\r\n            dispatch(postUserGradeExercise({\r\n                teacher_id: localStorage.getItem('id'),\r\n                exercise_submission_id: exercise_submission_id,\r\n                score: formState.score.value,\r\n                feedback: formState.feedback.value\r\n            }, id))\r\n        }\r\n    }\r\n\r\n    var id_y = localStorage.getItem('exercise_id');\r\n    let exercise_id = 0;\r\n\r\n    if (id_y !== null) {\r\n        exercise_id = parseInt(id_y);\r\n    }\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getExerciseSubmissionByExercise(dispatch, exercise_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getExerciseSubmissionByExercise(dispatch, exercise_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, exercise_id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Bài tập\", \"Chi tiết\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    const history = useHistory();\r\n    const routeChange = () => {\r\n        let x = count + 1;\r\n        setCount(x);\r\n        if (x < exercise_submissions.exercise_not_gradeds.length) {\r\n            let image_url_ = exercise_submissions.exercise_not_gradeds[x].image_url;\r\n            let student_name_ = exercise_submissions.exercise_not_gradeds[x].student_name;\r\n            let time_submit_ = exercise_submissions.exercise_not_gradeds[x].update_time;\r\n            let student_id_ = exercise_submissions.exercise_not_gradeds[x].student_id;\r\n            let exercise_submission_id_ = exercise_submissions.exercise_not_gradeds[x].id;\r\n            setImageUrl(image_url_);\r\n            setStudentName(student_name_);\r\n            setTimeSubmit(time_submit_);\r\n            setStudentId(student_id_);\r\n            setExerciseSubmissionId(exercise_submission_id_);\r\n        }\r\n    }\r\n\r\n    const routeChange1 = () => {\r\n        let path = '/exercise/result-grade';\r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    const [count, setCount] = useState(0);\r\n    const [image_url, setImageUrl] = useState(\"\");\r\n    const [student_name, setStudentName] = useState(\"\");\r\n    const [student_id, setStudentId] = useState(0);\r\n    const [exercise_submission_id, setExerciseSubmissionId] = useState(0);\r\n    const [time_submit, setTimeSubmit] = useState(\"\");\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                <ToastContainer />\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-6 col-lg-6\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Bài làm của bé</h6>\r\n                        </div>\r\n                        <div className=\"card-body mx-auto\">\r\n                        {\r\n                            function () {\r\n                                if (count > 0)\r\n                                    return (\r\n                                        <PhotoProvider>\r\n                                            <PhotoView src={image_url}>\r\n                                                <img src={image_url} alt=\"\" className=\"center-x\" />\r\n                                            </PhotoView>\r\n                                        </PhotoProvider>\r\n                                    )\r\n                                else {\r\n                                    if (exercise_submissions.exercise_not_gradeds.length > 0) {\r\n                                        return (\r\n                                            <PhotoProvider>\r\n                                                <PhotoView src={exercise_submissions.exercise_not_gradeds[0].image_url}>\r\n                                                    <img src={exercise_submissions.exercise_not_gradeds[0].image_url} className=\"center-x\" alt=\"\" />\r\n                                                </PhotoView>\r\n                                            </PhotoProvider>\r\n\r\n\r\n                                        )\r\n                                    }\r\n                                }\r\n                            }()\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-6 col-lg-6\">\r\n                        <div className=\"row\">\r\n                            <div className={`card shadow h-100 py-2 ml-4 mr-4`} id=\"topcard-user\">\r\n                                {\r\n                                    function () {\r\n                                        if (count > 0)\r\n                                            return (\r\n                                                <div className=\"card-body\">\r\n                                                    <div className=\"row no-gutters justify-content-left\">\r\n                                                        <h4 id=\"full-name\">Thông tin bài nộp</h4>\r\n                                                    </div>\r\n                                                    <div className=\"row no-gutters justify-content-left\">\r\n                                                        <p id=\"username-teacher\">Tên học sinh: {student_name}</p>\r\n                                                    </div>\r\n                                                    <div className=\"row no-gutters justify-content-left\">\r\n                                                        <p id=\"username-teacher\">Thời gian nộp: {time_submit.replaceAll(\"T\", \" \")}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        else {\r\n                                            if (exercise_submissions.exercise_not_gradeds.length > 0) {\r\n                                                return (\r\n                                                    <div className=\"card-body\">\r\n                                                        <div className=\"row no-gutters justify-content-left\">\r\n                                                            <h4 id=\"full-name\">Thông tin bài nộp</h4>\r\n                                                        </div>\r\n                                                        <div className=\"row no-gutters justify-content-left\">\r\n                                                            <p id=\"username-teacher\">Tên học sinh: {exercise_submissions.exercise_not_gradeds[0].student_name}</p>\r\n                                                        </div>\r\n                                                        <div className=\"row no-gutters justify-content-left\">\r\n                                                            <p id=\"username-teacher\">Thời gian nộp: {exercise_submissions.exercise_not_gradeds[0].update_time.replaceAll(\"T\", \" \")}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        }\r\n                                    }()\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-4 ml-4\">\r\n                            <NumberInput\r\n                                id=\"input_score\"\r\n                                value={formState.score.value}\r\n                                field=\"score\"\r\n                                onChange={hasFormValueChanged}\r\n                                max={10}\r\n                                min={0}\r\n                                label=\"Nhập điểm\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"card shadow mb-4\">\r\n                            <div className=\"card-header py-3\">\r\n                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Nhận xét</h6>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_feedback\"\r\n                                        field=\"feedback\"\r\n                                        value={formState.feedback.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        maxLength={100}\r\n                                        label=\"\"\r\n                                        placeholder=\"\"\r\n                                    />\r\n                                </div>\r\n                                <button className=\"btn btn-warning\" onClick={() => { saveForm() }}>Lưu</button>\r\n                                {\r\n                                    function () {\r\n                                        if (count === exercise_submissions.exercise_not_gradeds.length - 1) {\r\n                                            return (\r\n                                                <button className={`btn btn-success left-margin`} onClick={() => { routeChange1() }}>Hoàn thành</button>\r\n                                            )\r\n                                        }\r\n                                        else {\r\n                                            return (\r\n                                                <button className={`btn btn-success left-margin`} onClick={() => { routeChange() }}>Bài tiếp</button>\r\n                                            )\r\n                                        }\r\n                                    }()\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default GradeExamTeacher;\r\n","import { fetchDataRequest, fetchDataSuccess, fetchDataError, addUserGradeExerciseSubmission, removeUserGradeExerciseSubmissionAll} from \"../../../store/actions/user_grade_exercise_submission.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user_grade_contest {\r\n    student_id: number;\r\n    student_name: string;\r\n    exercise_name: string;\r\n    time_submit: string;\r\n    image_url: string;\r\n    description: string;\r\n    deadline: string;\r\n    exercise_submission_id: number;\r\n    feedback: string;\r\n    score: number;\r\n    time: string;\r\n}\r\nexport function getUserGradeExerciseByExerciseAndClass(exercise_id: number, class_id: number) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-grade-exercise-submission/exercise-class/${exercise_id}/${class_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserGradeExerciseByExerciseAndClass(exercise_id, class_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeUserGradeExerciseSubmissionAll())\r\n                console.log(data.body.UserGradeExerciseSubmission)\r\n                data.body.UserGradeExerciseSubmission.map((ele: any, index: any) => {\r\n                    var user_grade_contest: user_grade_contest = {\r\n                        student_id: ele.student_id,\r\n                        exercise_name: ele.exercise_name,\r\n                        time_submit: ele.time_submit,\r\n                        deadline: ele.deadline,\r\n                        description: ele.description,\r\n                        image_url: ele.image_url,\r\n                        exercise_submission_id: ele.exercise_submission_id,\r\n                        student_name: ele.student_name,\r\n                        feedback: ele.feedback,\r\n                        score: ele.score,\r\n                        time: ele.time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addUserGradeExerciseSubmission(user_grade_contest))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IUserGradeExerciseSubmissionState } from \"../../store/models/root.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IUserGradeExerciseSubmission } from \"../../store/models/user_grade_exercise_submission.interface\";\r\n\r\nfunction ScoreExamList(): JSX.Element {\r\n\r\n    const user_grade_exercise_submissions: IUserGradeExerciseSubmissionState  = useSelector((state: IStateType) => state.user_grade_exercise_submissions);\r\n    const history = useHistory();\r\n\r\n\r\n    const routeChange = (user_grade_exercise_submission: IUserGradeExerciseSubmission) => {\r\n        let path = '/exercise/student';\r\n        localStorage.setItem('feedback', user_grade_exercise_submission.feedback)\r\n        localStorage.setItem('score_exercise', user_grade_exercise_submission.score.toString())\r\n        localStorage.setItem('student_name', user_grade_exercise_submission.student_name)\r\n        localStorage.setItem('image_url_exercise_submission', user_grade_exercise_submission.image_url)\r\n        localStorage.setItem('exercise_name', user_grade_exercise_submission.exercise_name)\r\n        localStorage.setItem('exercise_submission_id', user_grade_exercise_submission.exercise_submission_id.toString())\r\n        localStorage.setItem('time_submit', user_grade_exercise_submission.time_submit)\r\n        history.push(path);\r\n    }\r\n\r\n    console.log(user_grade_exercise_submissions.user_grade_exercise_submissions)\r\n\r\n\r\n    const studentElements: (JSX.Element | null)[] = user_grade_exercise_submissions.user_grade_exercise_submissions.map((student, idx) => {\r\n        if (!student) { return null; }\r\n        return (<tr className={`table-row`}\r\n            key={`student_${idx}`} onClick={() => routeChange(student)}>\r\n            <div className=\"col-xl-12 col-md-12 mb-4\" >\r\n            <div className={`card shadow h-100 py-0 content-student-teacher`} id=\"topcard-user\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 col-xs-12\">\r\n                            <div className=\"row\">\r\n                                <p className=\"col-xl-2 col-md-2 col-xs-2\"><span className=\"header-card-course-teacher\" id=\"index-infor-student-teacher\">{idx + 1}</span></p>\r\n                                <i className={`col-xl-2 col-md-2 col-xs-2 fas fa-user-circle fa-2x`} id=\"icon-user\"></i>\r\n                                <p className=\"col-xl-6 col-md-6 col-xs-6\"id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.student_name}</span></p>\r\n                                <p className=\"col-xl-2 col-md-2 col-xs-2\"id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.score}</span></p>\r\n                            </div>  \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"table-responsive portlet\">\r\n            <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {studentElements}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ScoreExamList;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getUserGradeExerciseByExerciseAndClass } from \"../../common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByExeerciseAndClass\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IRootPageStateType, IStateType, IUserGradeExerciseSubmissionState } from \"../../store/models/root.interface\";\r\nimport ScoreExamList from \"./ScoreExamList\";\r\n\r\nconst ResultGradeExamTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const user_grade_exercise_submissions: IUserGradeExerciseSubmissionState  = useSelector((state: IStateType) => state.user_grade_exercise_submissions);\r\n    const max = user_grade_exercise_submissions.user_grade_exercise_submissions.reduce((a, b) => Math.max(a, b.score), -Infinity);\r\n    const min = user_grade_exercise_submissions.user_grade_exercise_submissions.reduce((a, b) => Math.min(a, b.score), 0);\r\n    var class_id = localStorage.getItem('class_id');\r\n    var class_id_: number = 0;\r\n    if (class_id !== null) {\r\n        class_id_ = parseInt(class_id);\r\n    }\r\n\r\n    var id_y = localStorage.getItem('exercise_id');\r\n    let exercise_id = 0;\r\n\r\n    if (id_y !== null) {\r\n        exercise_id = parseInt(id_y);\r\n    }\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {    \r\n                    dispatch(getUserGradeExerciseByExerciseAndClass(exercise_id, class_id_))\r\n                }\r\n            }\r\n            else {     \r\n                dispatch(getUserGradeExerciseByExerciseAndClass(exercise_id, class_id_))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, class_id_, exercise_id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp\", \"Chi tiết\"));\r\n    }, [dispatch, path.area])\r\n\r\n\r\n    const history = useHistory();\r\n    const onRouteChange = () =>{ \r\n        let path = '/exercise/result-analytis'; \r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n    return (\r\n        <Fragment>\r\n            \r\n            <div className=\"row\">\r\n                <TopCard title=\"ĐIỂM CAO NHẤT\" text={`${max}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"ĐIỂM THẤP NHẤT\" text={`${min}`} icon=\"book\" class=\"danger\" />\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-xl-8 col-md-8 mb-4\">\r\n                    <h3 className=\" mb-2\" id=\"level-teacher\">Danh sách học sinh</h3>\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                        <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                            <div className=\"card-body\">\r\n                                <ScoreExamList />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-xl-4 col-md-4 mb-4\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <button className=\"btn btn-success btn-green\" id=\"btn-into-class\" onClick={() =>{\r\n                        onRouteChange()}}>\r\n                            Xem review\r\n                            <i className=\"fas fa fa-arrow-right\"></i>\r\n                    </button>\r\n                    </div>\r\n                    {/* <TopCardLevel title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`2`} icon=\"book\" class=\"primary\" />\r\n                    <TopCardLevel title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`1`} icon=\"book\" class=\"danger\" /> */}\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ResultGradeExamTeacher;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ChartLine } from \"../../common/components/CharLine\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getUserGradeExerciseByExerciseAndClass } from \"../../common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByExeerciseAndClass\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IRootPageStateType, IStateType, IUserGradeExerciseSubmissionState } from \"../../store/models/root.interface\";\r\nimport ScoreExamList from \"./ScoreExamList\";\r\n\r\n\r\n\r\nconst AnalytisResultGradeExamTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const user_grade_exercise_submissions: IUserGradeExerciseSubmissionState  = useSelector((state: IStateType) => state.user_grade_exercise_submissions);\r\n    const max = user_grade_exercise_submissions.user_grade_exercise_submissions.reduce((a, b) => Math.max(a, b.score), -Infinity);\r\n    const min = user_grade_exercise_submissions.user_grade_exercise_submissions.reduce((a, b) => Math.min(a, b.score), 0);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n\r\n    let student: string[] = []\r\n    let scores: number[] = []\r\n    if (user_grade_exercise_submissions.user_grade_exercise_submissions.length > 0){\r\n        user_grade_exercise_submissions.user_grade_exercise_submissions.map(ele => {\r\n            student.push(ele.student_name)\r\n            scores.push(ele.score)\r\n            return ele\r\n        })\r\n    }\r\n\r\n    var id_x = localStorage.getItem('class_id');\r\n    var class_id: number = 0;\r\n    if (id_x !== null) {\r\n        class_id = parseInt(id_x);\r\n    }\r\n\r\n    var id_y = localStorage.getItem('exercise_id');\r\n    let exercise_id = 0;\r\n\r\n    if (id_y !== null) {\r\n        exercise_id = parseInt(id_y);\r\n    }\r\n\r\n    const labels = student;\r\n    let data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Điêm',\r\n                data: scores,\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            }\r\n        ],\r\n    };\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    dispatch(getUserGradeExerciseByExerciseAndClass(exercise_id, class_id))\r\n                }\r\n            }\r\n            else {   \r\n                dispatch(getUserGradeExerciseByExerciseAndClass(exercise_id, class_id)) \r\n            }\r\n        }\r\n        \r\n    }, [dispatch, exercise_id, class_id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp\", \"Chi tiết\"));\r\n    }, [path.area, dispatch])\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"ĐIỂM CAO NHẤT\" text={`${max}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"ĐIỂM THẤP NHẤT\" text={`${min}`} icon=\"book\" class=\"danger\" />\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <h3 className=\" mb-2\" id=\"level-teacher\">Danh sách học sinh</h3>\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                        <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                            <div className=\"card-body\">\r\n                                <ScoreExamList />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <ChartLine data={data} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default AnalytisResultGradeExamTeacher;\r\n\r\n","import { IExercise, ExerciseModificationStatus } from \"../models/exercise.interface\";\r\nexport const ADD_EXERCISE: string = \"ADD_EXERCISE\";\r\nexport const EDIT_EXERCISE: string = \"EDIT_EXERCISE\";\r\nexport const REMOVE_EXERCISE: string = \"REMOVE_EXERCISE\";\r\nexport const CHANGE_EXERCISE_AMOUNT: string = \"CHANGE_EXERCISE_AMOUNT\";\r\nexport const CHANGE_EXERCISE_PENDING_EDIT: string = \"CHANGE_EXERCISE_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_PENDING_EDIT: string = \"CLEAR_EXERCISE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_EXERCISE_ALL: string = \"REMOVE_EXERCISE_ALL\";\r\nexport const INITIAL_EXERCISE: string = \"INITIAL_EXERCISE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(exercise: IExercise) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        exercise\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialExercise(exercise: IExercise): IInitialExerciseActionType {\r\n    return { type: INITIAL_EXERCISE, exercise: exercise };\r\n}\r\n\r\nexport function removeExerciseAll(): IRemoveExerciseAllActionType {\r\n    return { type: REMOVE_EXERCISE_ALL };\r\n}\r\n\r\nexport function addExercise(exercise: IExercise): IAddExerciseActionType {\r\n    return { type: ADD_EXERCISE, exercise: exercise };\r\n}\r\n\r\nexport function editExercise(exercise: IExercise): IEditExerciseActionType {\r\n    return { type: EDIT_EXERCISE, exercise: exercise };\r\n}\r\n\r\nexport function removeExercise(id: any): IRemoveExerciseActionType {\r\n    return { type: REMOVE_EXERCISE, id: id };\r\n}\r\n\r\nexport function changeSelectedExercise(exercise: IExercise): IChangeSelectedExerciseActionType {\r\n    return { type: CHANGE_EXERCISE_PENDING_EDIT, exercise: exercise };\r\n}\r\n\r\nexport function clearSelectedExercise(): IClearSelectedExerciseActionType {\r\n    return { type: CLEAR_EXERCISE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ExerciseModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddExerciseActionType { type: string, exercise: IExercise };\r\ninterface IEditExerciseActionType { type: string, exercise: IExercise };\r\ninterface IRemoveExerciseActionType { type: string, id: any };\r\ninterface IChangeSelectedExerciseActionType { type: string, exercise: IExercise };\r\ninterface IClearSelectedExerciseActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ExerciseModificationStatus};\r\ninterface IRemoveExerciseAllActionType { type: string }\r\ninterface IInitialExerciseActionType {type: string, exercise: IExercise}","import { fetchDataSuccess, fetchDataError, removeExerciseAll, initialExercise, addExercise } from \"../../../store/actions/exercise.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface exercise {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    section_id: number;\r\n    deadline: string;\r\n    level_id: number;\r\n    level_name: string;\r\n    section_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getExerciseBySection(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/exercises/section/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getExerciseBySection(dispatch,id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeExerciseAll())\r\n                //console.log(data.body.exercises)\r\n                data.body.Exercise.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var exercise: exercise = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        level_id: ele.level_id,\r\n                        deadline: ele.deadline,\r\n                        level_name: ele.level_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialExercise(exercise));\r\n                    }\r\n                    else{\r\n                        return dispatch(addExercise(exercise))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { IExerciseLevel, ExerciseLevelModificationStatus } from \"../models/exercise_level.interface\";\r\nexport const ADD_EXERCISE_LEVEL: string = \"ADD_EXERCISE_LEVEL\";\r\nexport const EDIT_EXERCISE_LEVEL: string = \"EDIT_EXERCISE_LEVEL\";\r\nexport const REMOVE_EXERCISE_LEVEL: string = \"REMOVE_EXERCISE_LEVEL\";\r\nexport const CHANGE_EXERCISE_LEVEL_AMOUNT: string = \"CHANGE_EXERCISE_LEVEL_AMOUNT\";\r\nexport const CHANGE_EXERCISE_LEVEL_PENDING_EDIT: string = \"CHANGE_EXERCISE_LEVEL_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_LEVEL_PENDING_EDIT: string = \"CLEAR_EXERCISE_LEVEL_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_EXERCISE_LEVEL_ALL: string = \"REMOVE_EXERCISE_LEVEL_ALL\";\r\nexport const INITIAL_EXERCISE_LEVEL: string = \"INITIAL_EXERCISE_LEVEL\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(exercise_level: IExerciseLevel) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        exercise_level\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialExerciseLevel(exercise_level: IExerciseLevel): IInitialExerciseLevelActionType {\r\n    return { type: INITIAL_EXERCISE_LEVEL, exercise_level: exercise_level };\r\n}\r\n\r\nexport function removeExerciseLevelAll(): IRemoveExerciseLevelAllActionType {\r\n    return { type: REMOVE_EXERCISE_LEVEL_ALL };\r\n}\r\n\r\nexport function addExerciseLevel(exercise_level: IExerciseLevel): IAddExerciseLevelActionType {\r\n    return { type: ADD_EXERCISE_LEVEL, exercise_level: exercise_level };\r\n}\r\n\r\nexport function editExerciseLevel(exercise_level: IExerciseLevel): IEditExerciseLevelActionType {\r\n    return { type: EDIT_EXERCISE_LEVEL, exercise_level: exercise_level };\r\n}\r\n\r\nexport function removeExerciseLevel(id: any): IRemoveExerciseLevelActionType {\r\n    return { type: REMOVE_EXERCISE_LEVEL, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseLevel(exercise_level: IExerciseLevel): IChangeSelectedExerciseLevelActionType {\r\n    return { type: CHANGE_EXERCISE_LEVEL_PENDING_EDIT, exercise_level: exercise_level };\r\n}\r\n\r\nexport function clearSelectedExerciseLevel(): IClearSelectedExerciseLevelActionType {\r\n    return { type: CLEAR_EXERCISE_LEVEL_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ExerciseLevelModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddExerciseLevelActionType { type: string, exercise_level: IExerciseLevel };\r\ninterface IEditExerciseLevelActionType { type: string, exercise_level: IExerciseLevel };\r\ninterface IRemoveExerciseLevelActionType { type: string, id: any };\r\ninterface IChangeSelectedExerciseLevelActionType { type: string, exercise_level: IExerciseLevel };\r\ninterface IClearSelectedExerciseLevelActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ExerciseLevelModificationStatus};\r\ninterface IRemoveExerciseLevelAllActionType { type: string }\r\ninterface IInitialExerciseLevelActionType {type: string, exercise_level: IExerciseLevel}","export interface IExercise {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    deadline: string;\r\n    section_id: number;\r\n    level_id: number;\r\n    level_name: string;\r\n    section_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ExerciseModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4,\r\n    Create1 = 5\r\n}","import { fetchDataSuccess, fetchDataError, removeExerciseLevelAll, addExerciseLevel } from \"../../../store/actions/exercise_level.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ExerciseLevel {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    weight: number;\r\n}\r\nexport function getExerciseLevel(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/exercise-level`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getExerciseLevel(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeExerciseLevelAll())\r\n                //console.log(data.body.exercise_levels)\r\n                data.body.ExerciseLevel.map((ele: any, index: any) => {\r\n                    var exercise_level: ExerciseLevel = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        weight: ele.weight\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addExerciseLevel(exercise_level))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { fetchDataSuccess, fetchDataError, removeSectionAll, addSection } from \"../../../store/actions/section.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface Section {\r\n    id: any;\r\n    class_id: number;\r\n    name: string;\r\n    description: string;\r\n    number: number;\r\n    teacher_name: string;\r\n    teach_form: boolean;\r\n    recording: string;\r\n    message: string;\r\n}\r\nexport function getSectionById(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/section/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSectionById(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeSectionAll())\r\n                var section: Section = {\r\n                    id: data.id,\r\n                    class_id: data.class_id,\r\n                    name: data.name,\r\n                    teacher_name: data.teacher_name,\r\n                    description: data.description,\r\n                    number: data.number,\r\n                    teach_form: data.teach_form,\r\n                    recording: data.recording,\r\n                    message: data.message\r\n                }\r\n                return dispatch(addSection(section))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IExerciseState, IExerciseLevelState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IExercise, ExerciseModificationStatus } from \"../../store/models/exercise.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editExercise, clearSelectedExercise, setModificationState, addExercise } from \"../../store/actions/exercise.action\";\r\nimport { OnChangeModel, IExerciseFormState } from \"../../common/types/Form.types\";\r\nimport { IExerciseLevel } from \"../../store/models/exercise_level.interface\";\r\nimport SelectKeyValue from \"../../common/components/SelectKeyValue\";\r\nimport { postExercise } from \"../../common/service/Exercise/PostExercise\";\r\nimport { toast } from \"react-toastify\";\r\nimport DateInput from \"../../common/components/DateInput\";\r\n\r\nexport type exerciseListProps = {\r\n    isCheck: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n    data?: any;\r\n};\r\n\r\ntype Options = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\n\r\nfunction ExerciseForm(props: exerciseListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const exercises: IExerciseState | null = useSelector((state: IStateType) => state.exercises);\r\n    const exercise_levels: IExerciseLevelState | null = useSelector((state: IStateType) => state.exercise_levels);\r\n    let exercise: IExercise | null = exercises.selectedExercise;\r\n    const isCreate: boolean = (exercises.modificationState === ExerciseModificationStatus.Create);\r\n\r\n    if (!exercise || isCreate) {\r\n        exercise = { id: 0, name: \"\", deadline: \"\", description: \"\", section_id: 0, section_name: \"\", level_id: 0, level_name: \"\", create_time: \"\", update_time: \"\" };\r\n    }\r\n\r\n    var id_y = localStorage.getItem('section_id');\r\n    \r\n    let section_id = 0;\r\n\r\n    if (id_y !== null) {\r\n        section_id = parseInt(id_y);\r\n    }\r\n\r\n    const listExerciseLevel: IExerciseLevel[] = exercise_levels.exercise_levels\r\n    const listExerciseLevels: Options[] = [];\r\n    listExerciseLevel.map((ele) => {\r\n        let item: Options = { \"name\": ele.weight.toString() + \"%\", \"value\": ele.id }\r\n        return listExerciseLevels.push(item)\r\n    })\r\n\r\n    const [formState, setFormState] = useState({\r\n        section_id: { error: \"\", value: exercise.section_id },\r\n        level_id: { error: \"\", value: exercise.level_id },\r\n        name: { error: \"\", value: exercise.name },\r\n        description: { error: \"\", value: exercise.description },\r\n        deadline: { error: \"\", value: exercise.deadline },\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        props.isCheck(false);\r\n        let saveUserFn: Function = (isCreate) ? addExercise : editExercise;\r\n        saveForm(formState, saveUserFn);\r\n    }\r\n\r\n    function saveForm(formState: IExerciseFormState, saveFn: Function): void {\r\n        if (exercise) {\r\n            const id = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            if (saveFn === addExercise) {\r\n                dispatch(postExercise({\r\n                    section_id: section_id,\r\n                    level_id: formState.level_id.value ,\r\n                    name: formState.name.value,\r\n                    description: formState.description.value ,\r\n                    deadline: formState.deadline.value\r\n                }, id))\r\n            }\r\n\r\n            dispatch(clearSelectedExercise());\r\n            dispatch(setModificationState(ExerciseModificationStatus.None));\r\n        }\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        props.isCheck(false);\r\n        dispatch(setModificationState(ExerciseModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.name.error || !formState.name.value) as boolean;\r\n    }\r\n\r\n    var now = new Date();\r\n  now.setMinutes(now.getMinutes() - now.getTimezoneOffset());\r\n  var time_now = now.toISOString().slice(0,16);\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow shadow-xx\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} độ tuổi</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_email\"\r\n                                        value={formState.name.value}\r\n                                        field=\"name\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={20}\r\n                                        label=\"Tên\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_description\"\r\n                                        field=\"description\"\r\n                                        value={formState.description.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        maxLength={100}\r\n                                        label=\"Miêu tả\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <SelectKeyValue\r\n                                        id=\"input_level_id\"\r\n                                        field=\"level_id\"\r\n                                        label=\"Mức độ\"\r\n                                        options={listExerciseLevels}\r\n                                        required={true}\r\n                                        onChange={hasFormValueChanged}\r\n                                        value={formState.level_id.value}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <DateInput id=\"input_deadline\"\r\n                                        field=\"deadline\"\r\n                                        value={formState.deadline.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        maxLength={time_now}\r\n                                        active={false}\r\n                                        type=\"datetime-local\"\r\n                                        label=\"Hạn nộp\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ExerciseForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/exercise.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getExerciseBySection } from \"./GetExerciseBySection\";\r\n\r\n\r\nexport function postExercise(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    var id_x = localStorage.getItem('section_id');\r\n    let section_id: number = 0;\r\n    if(id_x !== null){\r\n        section_id = parseInt(id_x)\r\n    }\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/exercises`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postExercise(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                toast.update(idx, { render: \"Thêm bài tập thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER , autoClose: 2000});\r\n                getExerciseBySection(dispatch, section_id);\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Thêm bài tập không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { ITutorialPage, TutorialPageModificationStatus } from \"../models/tutorial_page.interface\";\r\nexport const ADD_TUTORIAL_PAGE: string = \"ADD_TUTORIAL_PAGE\";\r\nexport const EDIT_TUTORIAL_PAGE: string = \"EDIT_TUTORIAL_PAGE\";\r\nexport const REMOVE_TUTORIAL_PAGE: string = \"REMOVE_TUTORIAL_PAGE\";\r\nexport const REMOVE_TUTORIAL_PAGE_BY_NUMBER: string = \"REMOVE_TUTORIAL_PAGE_BY_NUMBER\";\r\nexport const CHANGE_TUTORIAL_PAGE_AMOUNT: string = \"CHANGE_TUTORIAL_PAGE_AMOUNT\";\r\nexport const CHANGE_TUTORIAL_PAGE_PENDING_EDIT: string = \"CHANGE_TUTORIAL_PAGE_PENDING_EDIT\";\r\nexport const CLEAR_TUTORIAL_PAGE_PENDING_EDIT: string = \"CLEAR_TUTORIAL_PAGE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_TUTORIAL_PAGE_ALL: string = \"REMOVE_TUTORIAL_PAGE_ALL\";\r\nexport const INITIAL_TUTORIAL_PAGE: string = \"INITIAL_TUTORIAL_PAGE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(tutorial_page: ITutorialPage) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        tutorial_page\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialTutorialPage(tutorial_page: ITutorialPage): IInitialTutorialPageActionType {\r\n    return { type: INITIAL_TUTORIAL_PAGE, tutorial_page: tutorial_page };\r\n}\r\n\r\nexport function removeTutorialPageAll(): IRemoveTutorialPageAllActionType {\r\n    return { type: REMOVE_TUTORIAL_PAGE_ALL };\r\n}\r\n\r\nexport function addTutorialPage(tutorial_page: ITutorialPage): IAddTutorialPageActionType {\r\n    return { type: ADD_TUTORIAL_PAGE, tutorial_page: tutorial_page };\r\n}\r\n\r\nexport function editTutorialPage(tutorial_page: ITutorialPage): IEditTutorialPageActionType {\r\n    return { type: EDIT_TUTORIAL_PAGE, tutorial_page: tutorial_page };\r\n}\r\n\r\nexport function removeTutorialPage(id: any): IRemoveTutorialPageActionType {\r\n    return { type: REMOVE_TUTORIAL_PAGE, id: id };\r\n}\r\n\r\nexport function removeTutorialPageByNumber(number: number): IRemoveTutorialPageByNumberActionType {\r\n    return { type: REMOVE_TUTORIAL_PAGE_BY_NUMBER, number: number };\r\n}\r\n\r\nexport function changeSelectedTutorialPage(tutorial_page: ITutorialPage): IChangeSelectedTutorialPageActionType {\r\n    return { type: CHANGE_TUTORIAL_PAGE_PENDING_EDIT, tutorial_page: tutorial_page };\r\n}\r\n\r\nexport function clearSelectedTutorialPage(): IClearSelectedTutorialPageActionType {\r\n    return { type: CLEAR_TUTORIAL_PAGE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateTutorialPage(value: TutorialPageModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddTutorialPageActionType { type: string, tutorial_page: ITutorialPage };\r\ninterface IEditTutorialPageActionType { type: string, tutorial_page: ITutorialPage };\r\ninterface IRemoveTutorialPageActionType { type: string, id: any };\r\ninterface IChangeSelectedTutorialPageActionType { type: string, tutorial_page: ITutorialPage };\r\ninterface IClearSelectedTutorialPageActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  TutorialPageModificationStatus};\r\ninterface IRemoveTutorialPageAllActionType { type: string }\r\ninterface IRemoveTutorialPageByNumberActionType { type: string, number: number }\r\ninterface IInitialTutorialPageActionType {type: string, tutorial_page: ITutorialPage}","import { fetchDataSuccess, fetchDataError, removeTutorialPageAll, initialTutorialPage, addTutorialPage } from \"../../../store/actions/tutorial_page.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface TutorialPage {\r\n    id: any;\r\n    tutorial_id: number;\r\n    name: string;\r\n    description: string;\r\n    number: number;\r\n}\r\nexport function getTutorialPageBySection(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/tutorial-page/section/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTutorialPageBySection(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeTutorialPageAll())\r\n                console.log(data.body.TutorialPage)\r\n                data.body.TutorialPage.map((ele: any, index: any) => {\r\n                    var tutorial_page: TutorialPage = {\r\n                        id: ele.id,\r\n                        tutorial_id: ele.tutorial_id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        number: ele.number\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialTutorialPage(tutorial_page));\r\n                    }\r\n                    else{\r\n                        return dispatch(addTutorialPage(tutorial_page))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { ITutorial, TutorialModificationStatus } from \"../models/tutorial.interface\";\r\n\r\n// register_successfull_tutorials\r\nexport const ADD_TUTORIAL: string = \"ADD_TUTORIAL\";\r\nexport const EDIT_TUTORIAL: string = \"EDIT_TUTORIAL\";\r\nexport const REMOVE_TUTORIAL: string = \"REMOVE_TUTORIAL\";\r\nexport const CHANGE_TUTORIAL_AMOUNT: string = \"CHANGE_TUTORIAL_AMOUNT\";\r\nexport const CHANGE_TUTORIAL_PENDING_EDIT: string = \"CHANGE_TUTORIAL_PENDING_EDIT\";\r\nexport const CLEAR_TUTORIAL_PENDING_EDIT: string = \"CLEAR_TUTORIAL_PENDING_EDIT\";\r\nexport const REMOVE_TUTORIAL_ALL: string = \"REMOVE_TUTORIAL_ALL\";\r\nexport const INITIAL_TUTORIAL: string = \"INITIAL_TUTORIAL\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(tutorial: ITutorial) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        tutorial\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialTutorial(tutorial: ITutorial): IInitialTutorialActionType {\r\n    return { type: INITIAL_TUTORIAL, tutorial: tutorial };\r\n}\r\n\r\nexport function removeTutorialAll(): IRemoveTutorialAllActionType {\r\n    return { type: REMOVE_TUTORIAL_ALL };\r\n}\r\n\r\nexport function addTutorial(tutorial: ITutorial): IAddTutorialActionType {\r\n    return { type: ADD_TUTORIAL, tutorial: tutorial };\r\n}\r\n\r\nexport function editTutorial(tutorial: ITutorial): IEditTutorialActionType {\r\n    return { type: EDIT_TUTORIAL, tutorial: tutorial };\r\n}\r\n\r\nexport function removeTutorial(id: any): IRemoveTutorialActionType {\r\n    return { type: REMOVE_TUTORIAL, id: id };\r\n}\r\n\r\nexport function changeSelectedTutorial(tutorial: ITutorial): IChangeSelectedTutorialActionType {\r\n    return { type: CHANGE_TUTORIAL_PENDING_EDIT, tutorial: tutorial };\r\n}\r\n\r\nexport function clearSelectedTutorial(): IClearSelectedTutorialActionType {\r\n    return { type: CLEAR_TUTORIAL_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function setModificationState(value: TutorialModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n// register_successfull_tutorials\r\ninterface IAddTutorialActionType { type: string, tutorial: ITutorial };\r\ninterface IEditTutorialActionType { type: string, tutorial: ITutorial };\r\ninterface IRemoveTutorialActionType { type: string, id: any };\r\ninterface IChangeSelectedTutorialActionType { type: string, tutorial: ITutorial };\r\ninterface IClearSelectedTutorialActionType { type: string };\r\ninterface IRemoveTutorialAllActionType { type: string }\r\ninterface IInitialTutorialActionType {type: string, tutorial: ITutorial}\r\ninterface ISetModificationStateActionType { type: string, value:  TutorialModificationStatus};","import { fetchDataSuccess, fetchDataError, removeTutorialAll, addTutorial } from \"../../../store/actions/tutorial.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface Tutorial {\r\n    id: any;\r\n    section_id: number;\r\n    creator_id: number;\r\n    creator_name: string;\r\n    class_name: string;\r\n    class_id: number;\r\n    section_number: number;\r\n    name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getTutorialBySection(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/tutorial/section/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTutorialBySection(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (ele => {\r\n                dispatch(fetchDataSuccess(ele))\r\n                dispatch(removeTutorialAll())\r\n                //console.log(data.body.lessons)\r\n                var tutorial: Tutorial = {\r\n                    id: ele.id,\r\n                    section_id: ele.section_id,\r\n                    name: ele.name,\r\n                    creator_id: ele.creator_id,\r\n                    creator_name: ele.creator_name,\r\n                    class_id: ele.class_id,\r\n                    class_name: ele.class_name,\r\n                    section_number: ele.section_number,\r\n                    create_time: ele.create_time,\r\n                    update_time: ele.update_time\r\n                }\r\n                return dispatch(addTutorial(tutorial))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/schedule.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function putSection(id: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/section/teacher/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putSection(id,data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                console.log(id)\r\n                toast.update(idx, { render: \"Gửi record thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Gửi record không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, Dispatch, Fragment } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { TeacherRegisterQuantificationModificationStatus } from \"../../store/models/teacher_register_quantification.interface\";\r\nimport { setModificationState } from \"../../store/actions/teacher_register_quantification.action\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport { putSection } from \"../../common/service/Section/PutSection\";\r\n\r\nexport type lessonListProps = {\r\n    isCheck: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\n\r\nfunction SubmitRecordForm(props: lessonListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n\r\n    function cancelForm(): void {\r\n        props.isCheck(false);\r\n        dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (!isFilePicked) as boolean;\r\n    }\r\n\r\n    var id_x = localStorage.getItem('section_id');\r\n    let section_id = 0;\r\n    if (id_x !== null) {\r\n        section_id = parseInt(id_x)\r\n    }\r\n\r\n    const [selectedFile, setSelectedFile] = useState<any>();\r\n    const [isFilePicked, setIsFilePicked] = useState(false);\r\n\r\n    const changeHandler = (event: any) => {\r\n        setSelectedFile(event.target.files[0]);\r\n        setIsFilePicked(true);\r\n    };\r\n\r\n    const handleSubmission = async () => {\r\n        const formData = new FormData();\r\n\r\n        formData.append('gifFile', selectedFile);\r\n\r\n        const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n\r\n        const res = await fetch(\r\n            `${process.env.REACT_APP_API_URL}/cloudinary/video/gifs`, {\r\n                method: \"POST\",\r\n                body: formData\r\n            }\r\n        )\r\n        const data = await res.json()\r\n        console.log(data)\r\n        dispatch(putSection(section_id, {recording: data.url_video}, idx))\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow shadow-xx\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\" id=\"header-form-teacher-level\">Nộp record</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <label htmlFor=\"profile_image\">Record (Chấp nhận: mp4, webm):</label>\r\n                                        <input type=\"file\" id=\"profile_image\" name=\"profile_image\" onChange={changeHandler} />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        {isFilePicked ? (\r\n                                            <div>\r\n                                                <p>Filename: {selectedFile.name}</p>\r\n                                                <p>Filetype: {selectedFile.type}</p>\r\n                                                <p>Size in bytes: {selectedFile.size}</p>\r\n                                                <p>\r\n                                                    lastModifiedDate:{' '}\r\n                                                    {selectedFile.lastModifiedDate.toLocaleDateString()}\r\n                                                </p>\r\n                                            </div>\r\n                                        ) : (\r\n                                            <p>Select a file to show details</p>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"button\" className={`btn btn-success left-margin ${getDisabledClass()}`} onClick={handleSubmission}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default SubmitRecordForm;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { getExerciseBySection } from \"../../common/service/Exercise/GetExerciseBySection\";\r\nimport { getExerciseLevel } from \"../../common/service/ExerciseLevel/GetExerciseLevel\";\r\nimport { getSectionById } from \"../../common/service/Section/GetSectionById\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { setModificationState } from \"../../store/actions/exercise.action\";\r\nimport { ExerciseModificationStatus } from \"../../store/models/exercise.interface\";\r\nimport { IClassTeacherState, IExerciseState, ISectionState, IStateType, ITutorialPageState, ITutorialState, IUserState } from \"../../store/models/root.interface\";\r\nimport ExerciseForm from \"../Exercise/ExerciseForm\";\r\nimport \"./SectionTeacher.css\"\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getClassTeacher } from \"../../common/service/ClassTeacher/GetClassTeacher\";\r\nimport { getTutorialPageBySection } from \"../../common/service/TutorialPage/GetTutorialPageBySection\";\r\nimport { getTutorialBySection } from \"../../common/service/Tutorial/GetTutorialBySection\";\r\nimport SubmitRecordForm from \"./SubmitRecordForm\";\r\n\r\nconst SectionTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const sections: ISectionState = useSelector((state: IStateType) => state.sections);\r\n    const exercises: IExerciseState = useSelector((state: IStateType) => state.exercises);\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const tutorial_pages: ITutorialPageState | null = useSelector((state: IStateType) => state.tutorial_pages);\r\n    const tutorials: ITutorialState | null = useSelector((state: IStateType) => state.tutorials);\r\n    const class_teachers: IClassTeacherState = useSelector((state: IStateType) => state.class_teachers);\r\n    console.log(users.teachers)\r\n\r\n    const [popup, setPopup] = useState(false);\r\n    const [popup1, setPopup1] = useState(false);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    function onExerciseRemove() {\r\n        setPopup(true);\r\n    }\r\n\r\n    function onRecordRemove() {\r\n        setPopup1(true);\r\n    }\r\n\r\n    function onRemovePopup(value: boolean) {\r\n        setPopup(false);\r\n    }\r\n\r\n    function onRemovePopup1(value: boolean) {\r\n        setPopup1(false);\r\n    }\r\n\r\n    var id_y = localStorage.getItem('section_id');\r\n\r\n    let section_id = 0;\r\n\r\n    if (id_y !== null) {\r\n        section_id = parseInt(id_y);\r\n    }\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n\r\n    var id_z = localStorage.getItem('class_id');\r\n    var class_id: number = 0;\r\n    if (id_z !== null) {\r\n        class_id = parseInt(id_z);\r\n    }\r\n\r\n    let link_jisti = \"\";\r\n    if (class_teachers.class_doing.length > 0) {\r\n        class_teachers.class_doing.map((ele, idx) => {\r\n            if (ele.id === class_id) {\r\n                link_jisti = ele.link_url;\r\n            }\r\n            return ele\r\n        })\r\n    }\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getClassTeacher(dispatch, id))\r\n                    trackPromise(getSectionById(dispatch, section_id))\r\n                    trackPromise(getExerciseBySection(dispatch, section_id))\r\n                    trackPromise(getExerciseLevel(dispatch))\r\n                    trackPromise(getTutorialPageBySection(dispatch, section_id))\r\n                    trackPromise(getTutorialBySection(dispatch, section_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getClassTeacher(dispatch, id))\r\n                trackPromise(getSectionById(dispatch, section_id))\r\n                trackPromise(getExerciseBySection(dispatch, section_id))\r\n                trackPromise(getExerciseLevel(dispatch))\r\n                trackPromise(getTutorialPageBySection(dispatch, section_id))\r\n                trackPromise(getTutorialBySection(dispatch, section_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, section_id, id]);\r\n\r\n    const history = useHistory();\r\n    const routeChange2 = () => {\r\n        let path = \"/section/view\";\r\n        history.push({\r\n            pathname: path,\r\n            state: { section_id: section_id }\r\n        });\r\n    }\r\n\r\n    const routeChange4 = () => {\r\n        if (link_jisti !== null) {\r\n            window.open(link_jisti, '_blank');\r\n        }\r\n    }\r\n\r\n    const routeChange5 = () => {\r\n        let path = \"/attendance\";\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    const onChangeRoute1 = () => {\r\n        localStorage.removeItem('description_tutorial_page_list')\r\n        localStorage.setItem('description_tutorial_page_list', JSON.stringify(tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number)))\r\n        let path = \"/section/edit\";\r\n        if (tutorials !== null && tutorials.tutorials.length > 0) {\r\n            localStorage.setItem('tutorial_name', tutorials.tutorials[0].name);\r\n            localStorage.setItem('tutorial_id', tutorials.tutorials[0].id.toString())\r\n        }\r\n        history.push({\r\n            pathname: path,\r\n            state: { section_id: section_id }\r\n        })\r\n    }\r\n\r\n    const routeChange3 = (description: string, name: string, level_name: string, id: any) => {\r\n        let path = '/exercise';\r\n        localStorage.removeItem('exercise_description');\r\n        localStorage.removeItem('exercise_name');\r\n        localStorage.removeItem('exercise_level_name');\r\n        localStorage.removeItem('exercise_id');\r\n        localStorage.setItem('exercise_description', description);\r\n        localStorage.setItem('exercise_name', name);\r\n        localStorage.setItem('exercise_level_name', level_name);\r\n        localStorage.setItem('exercise_id', id.toString());\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                <ToastContainer />\r\n                {\r\n                    function () {\r\n                        if (sections.sections.length <= 0) {\r\n                            return \"\"\r\n                        }\r\n                        else {\r\n                            if (sections.sections[0].recording === \"\") {\r\n                                return <div className=\"row mb-2\">\r\n                                    <div className=\"col-xl-4 col-md-4 col-xs-4 md-4 \">\r\n                                        <button\r\n                                            className=\"btn btn-success ml-3\"\r\n                                            id=\"btn-edit-tutorial\"\r\n                                            onClick={onChangeRoute1}\r\n                                        >\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                            Chỉnh giáo án\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-xl-4 col-md-4 col-xs-4 md-4\">\r\n                                        <button\r\n                                            className=\"btn btn-success ml-3\"\r\n                                            id=\"btn-add-exercise\"\r\n                                            onClick={() => {\r\n                                                dispatch(setModificationState(ExerciseModificationStatus.Create))\r\n                                                onExerciseRemove()\r\n                                            }}\r\n                                        >\r\n                                            <i className=\"fas fa fa-plus\"></i>\r\n                                            Thêm bài tập\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-xl-4 col-md-4 col-xs-4 md-4\">\r\n                                        <button\r\n                                            className=\"btn btn-info ml-3\"\r\n                                            id=\"btn-add-exercise1\"\r\n                                            onClick={() => {\r\n                                                dispatch(setModificationState(ExerciseModificationStatus.Create1))\r\n                                                onRecordRemove()\r\n                                            }}\r\n                                        >\r\n                                            <i className=\"fas fa fa-plus\"></i>\r\n                                            Nộp record\r\n                                        </button>\r\n                                    </div>\r\n                                </div>;\r\n                            }\r\n                            else {\r\n                                return <div className=\"row mb-2\">\r\n                                    <div className=\"col-xl-6 col-md-6 col-xs-6 md-4 \">\r\n                                        <button\r\n                                            className=\"btn btn-success ml-3\"\r\n                                            id=\"btn-edit-tutorial\"\r\n                                            onClick={onChangeRoute1}\r\n                                        >\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                            Chỉnh giáo án\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-xl-6 col-md-6 col-xs-6 md-4\">\r\n                                        <button\r\n                                            className=\"btn btn-success ml-3\"\r\n                                            id=\"btn-add-exercise\"\r\n                                            onClick={() => {\r\n                                                dispatch(setModificationState(ExerciseModificationStatus.Create))\r\n                                                onExerciseRemove()\r\n                                            }}\r\n                                        >\r\n                                            <i className=\"fas fa fa-plus\"></i>\r\n                                            Thêm bài tập\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                </div>;\r\n                            }\r\n                        }\r\n                    }()\r\n                }\r\n\r\n                <Popup\r\n                    open={popup}\r\n                    onClose={() => setPopup(false)}\r\n                    closeOnDocumentClick\r\n                >\r\n                    <>\r\n                        {\r\n                            function () {\r\n                                if ((exercises.modificationState === ExerciseModificationStatus.Create) || (exercises.modificationState === ExerciseModificationStatus.Edit)) {\r\n                                    return <ExerciseForm isCheck={onRemovePopup} />\r\n                                }\r\n                            }()\r\n                        }\r\n                    </>\r\n                </Popup>\r\n\r\n                <Popup\r\n                    open={popup1}\r\n                    onClose={() => setPopup1(false)}\r\n                    closeOnDocumentClick\r\n                >\r\n                    <>\r\n                        {\r\n                            function () {\r\n                                if ((exercises.modificationState === ExerciseModificationStatus.Create1)) {\r\n                                    return <SubmitRecordForm isCheck={onRemovePopup1} />\r\n                                }\r\n                            }()\r\n                        }\r\n                    </>\r\n                </Popup>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                    <div className={`card shadow h-100 py-2`} id=\"normal-tutorial\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"row no-gutters justify-content-left\">\r\n                                                <h4 id=\"full-name\">Giáo án chung</h4>\r\n                                            </div>\r\n                                            <div className=\"row no-gutters\">\r\n                                                <p id=\"phone\">Tên: {\r\n                                                    function () {\r\n                                                        if (sections.sections.length <= 0) {\r\n                                                            return \"\"\r\n                                                        }\r\n                                                        else {\r\n                                                            return sections.sections[0].name;\r\n                                                        }\r\n                                                    }()\r\n                                                }</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"row no-gutters\">\r\n                                                <p id=\"phone\">Nội dung: </p>\r\n                                            </div>\r\n\r\n                                            <div className=\"row  justify-content-center\">\r\n                                                <button\r\n                                                    className=\"btn btn-success ml-2\"\r\n                                                    id=\"btn-view-tutorial\"\r\n                                                    onClick={routeChange2}\r\n                                                >\r\n                                                    Xem nội dung\r\n                                                </button>\r\n                                            </div>\r\n\r\n                                            <div className=\"row no-gutters\">\r\n                                                <p id=\"phone\">Hình thức:\r\n                                                    {\r\n                                                        function () {\r\n                                                            if (sections.sections.length <= 0) {\r\n                                                                return \"\"\r\n                                                            }\r\n                                                            else {\r\n                                                                if (sections.sections[0].teach_form === true) {\r\n                                                                    return \"Dạy bằng jitsi\";\r\n                                                                }\r\n                                                                else {\r\n                                                                    return \"Dạy bằng giáo trình\";\r\n                                                                }\r\n                                                            }\r\n                                                        }()\r\n                                                    }\r\n                                                </p>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-xl-6 col-md-6 col-xs-6\">\r\n                                                    {\r\n                                                        function () {\r\n                                                            if (sections.sections.length <= 0) {\r\n                                                                return \"\"\r\n                                                            }\r\n                                                            else {\r\n                                                                if (sections.sections[0].teach_form === true) {\r\n                                                                    return (\r\n                                                                        <button\r\n                                                                            className=\"btn btn-success ml-2\"\r\n                                                                            id=\"btn-into-room\"\r\n                                                                            onClick={routeChange4}\r\n                                                                        >\r\n                                                                            Vào metting room\r\n                                                                        </button>\r\n                                                                    )\r\n                                                                }\r\n                                                            }\r\n                                                        }()\r\n                                                    }\r\n                                                </div>\r\n                                                <div className=\"col-xl-6 col-md-6 col-xs-6\">\r\n                                                    {\r\n                                                        function () {\r\n                                                            if (sections.sections.length <= 0) {\r\n                                                                return \"\"\r\n                                                            }\r\n                                                            else {\r\n                                                                if (sections.sections[0].teach_form === true) {\r\n                                                                    return (\r\n                                                                        <button\r\n                                                                            className=\"btn btn-success ml-2\"\r\n                                                                            id=\"btn-into-attendance\"\r\n                                                                            onClick={routeChange5}\r\n                                                                        >\r\n                                                                            Điểm danh\r\n                                                                        </button>\r\n                                                                    )\r\n                                                                }\r\n                                                            }\r\n                                                        }()\r\n                                                    }\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                    <div className={`card shadow h-100 py-2`} >\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"row no-gutters justify-content-left\">\r\n                                                <h4 id=\"full-name\">Bài tập</h4>\r\n                                                <div className=\"table-responsive portlet\">\r\n                                                    <table className=\"table\">\r\n                                                        <thead className=\"thead-light\">\r\n                                                            <tr>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {\r\n                                                                exercises.exercises.map((ele, index) => {\r\n                                                                    return (\r\n                                                                        <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                            <div className=\"row row-section section-ele mb-4 ml-2 mr-2\" onClick={() => { routeChange3(ele.description, ele.name, ele.level_name, ele.id) }}>\r\n                                                                                <div className=\"col-xl-3 col-md-3 avatar-x pt-4 pb-2\">\r\n                                                                                    <img className=\"img-exam\" src=\"http://res.cloudinary.com/djtmwajiu/image/upload/v1667395965/inl1eekblioz9s5iqed1.png\" alt=\"\" />\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9 mt-4\">\r\n                                                                                    <h3 className=\" mb-2\" id=\"level-teacher\">{ele.name}</h3>\r\n                                                                                    <h4 className=\" mb-2\" id=\"level-teacher\">Phần trăm đánh giá: {ele.level_name}</h4>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </tr>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default SectionTeacher;\r\n","import { fetchDataRequest, fetchDataSuccess, fetchDataError, removeTutorialPageAll, initialTutorialPage, addTutorialPage } from \"../../../store/actions/tutorial_page.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface TutorialPage {\r\n    id: any;\r\n    tutorial_id: number;\r\n    name: string;\r\n    description: string;\r\n    number: number;\r\n}\r\nexport function getTutorialPageByTutorialId(id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/tutorial-page/tutorial/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTutorialPageByTutorialId(id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeTutorialPageAll())\r\n                //console.log(data.body.lessons)\r\n                data.body.TutorialPage.map((ele: any, index: any) => {\r\n                    var tutorial_page: TutorialPage = {\r\n                        id: ele.id,\r\n                        tutorial_id: ele.tutorial_id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        number: ele.number\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialTutorialPage(tutorial_page));\r\n                    }\r\n                    else{\r\n                        return dispatch(addTutorialPage(tutorial_page))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/tutorial.action\";\r\nimport { ITutorialPage } from \"../../../store/models/tutorial_page.interface\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postUserRegisterTutorialPage } from \"../UserRegisterTutorialPage/PostUserRegisterTutorialPage\";\r\nimport { postUserRegisterTutorialPageToast } from \"../UserRegisterTutorialPage/PostUserRegisterTutorialPageToast\";\r\n\r\n\r\nexport function postUserRegisterTutorial(tutorial: ITutorialPage[], data: any, idx: any, routeHome: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-tutorial`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postUserRegisterTutorial(tutorial, data, idx, routeHome))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                var total = tutorial.length;\r\n                console.log(total)\r\n                tutorial.map((value, index) => {\r\n                    if (index === total - 1){\r\n                        routeHome()\r\n                        return dispatch(postUserRegisterTutorialPageToast({\r\n                            user_register_tutorial_id: data.id,\r\n                            name: data.name,\r\n                            description: value.description,\r\n                            number: value.number\r\n                        }, idx))\r\n                    }\r\n                    return dispatch(postUserRegisterTutorialPage({\r\n                        user_register_tutorial_id: data.id,\r\n                        name: data.name,\r\n                        description: value.description,\r\n                        number: value.number\r\n                    }))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Yêu cầu chỉnh giáo án được gửi không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postUserRegisterTutorialPageToast(tutorialtemplatepage: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-tutorial-page`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(tutorialtemplatepage)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postUserRegisterTutorialPageToast(tutorialtemplatepage, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Yêu cầu chỉnh giáo án được gửi không thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/semester_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postUserRegisterTutorialPage(tutorialtemplatepage: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-tutorial-page`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(tutorialtemplatepage)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        return dispatch(postUserRegisterTutorialPage(tutorialtemplatepage))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch, Fragment, useEffect } from \"react\";\r\nimport { IStateType, ISectionState, ITutorialPageState, IRootPageStateType } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ISection } from \"../../store/models/section.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport Editor from \"../../common/components/Quill/EditorEditSection\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { getTutorialPageByTutorialId } from \"../../common/service/TutorialPage/GetTutorialPageByTutorialId\";\r\nimport { postUserRegisterTutorial } from \"../../common/service/UserRegisterTutorial/PostUserRegisterTutorial\";\r\nimport { addTutorialPage, editTutorialPage, removeTutorialPage } from \"../../store/actions/tutorial_page.action\";\r\n\r\n\r\nexport type SectionListProps = {\r\n    children?: React.ReactNode;\r\n};\r\n\r\ntype Options = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\ntype PageContent = {\r\n    page: number;\r\n    content: string;\r\n}\r\n\r\ntype TutorialPage = {\r\n    id: any;\r\n    tutorial_id: number;\r\n    name: string;\r\n    number: number;\r\n    description: string;\r\n}\r\n\r\nfunction EditSectionTeacher(props: SectionListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const sections: ISectionState | null = useSelector((state: IStateType) => state.sections);\r\n    const tutorial_pages: ITutorialPageState | null = useSelector((state: IStateType) => state.tutorial_pages);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    console.log(tutorial_pages.tutorialPages)\r\n    let section: ISection | null = sections.selectedSection;\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    var id_x = localStorage.getItem('section_id');\r\n    let section_id: number = 0;\r\n    if (id_x !== null) {\r\n        section_id = parseInt(id_x)\r\n    }\r\n\r\n    var id_y = localStorage.getItem('section_number');\r\n    let section_number: number = 0;\r\n    if (id_y !== null) {\r\n        section_number = parseInt(id_y)\r\n    }\r\n\r\n    var id_z = localStorage.getItem('description_tutorial_page_list');\r\n    let list_description: TutorialPage[] = []\r\n    let initial_text = \"\"\r\n    if (id_z !== null) {\r\n        list_description = JSON.parse(id_z);\r\n        initial_text = list_description.length !== 0 ? list_description[0].description: \"\";\r\n    }\r\n\r\n\r\n    var id_t = localStorage.getItem('tutorial_id');\r\n    let tutorial_id: number = 0;\r\n    if (id_t !== null) {\r\n        tutorial_id = parseInt(id_t)\r\n    }\r\n\r\n    var id_h = localStorage.getItem('tutorial_name');\r\n    let tutorial_name: string = \"\";\r\n    if (id_h !== null) {\r\n        tutorial_name = id_h\r\n    }\r\n\r\n    var id_k = localStorage.getItem('id');\r\n    let id: any = \"\";\r\n    if (id_k !== null) {\r\n        id = id_k\r\n    }\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    dispatch(getTutorialPageByTutorialId(tutorial_id))      \r\n                }\r\n            }\r\n            else {\r\n                dispatch(getTutorialPageByTutorialId(tutorial_id)) \r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, tutorial_id])\r\n\r\n    const history = useHistory();\r\n    function routeHome() {\r\n        let path = `/classes/section`;\r\n        history.push(path);\r\n    }\r\n\r\n    let [textHtml, setTextHtml] = useState(initial_text);\r\n\r\n    if (!section) {\r\n        section = { id: 0, name: \"\", number: 0,  class_id: 0, teach_form: false, recording: \"\", message: \"\", teacher_name: \"\" };\r\n    }\r\n\r\n    console.log(tutorial_pages.tutorialPages)\r\n    if (tutorial_pages.tutorialPages.length === 0) {\r\n        section = { id: 0, name: \"\", number: 0,  class_id: 0, teach_form: false, recording: \"\", message: \"\", teacher_name: \"\" };\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khóa học chung\", \"Soạn giáo án\"));\r\n    }, [path.area, dispatch]);\r\n\r\n\r\n    const [formState, setFormState] = useState({\r\n        name: { error: \"\", value: tutorial_name},\r\n        number: { error: \"\", value: section.number },\r\n        teach_form: { error: \"\", value: section.teach_form },\r\n        class_id: { error: \"\", value: section.class_id },\r\n        recording: { error: \"\", value: section.recording },\r\n        message: { error: \"\", value: section.message }\r\n    });\r\n\r\n    const [totalPage, setTotalPage] = useState(list_description.length);\r\n    const [currentPage, setCurrentPage] = useState<number>(1)\r\n    const [currentPageOld, setCurrentPageOld] = useState<number>(1)\r\n\r\n    const [checkCreateNew, setCheckCreateNew] = useState(false);\r\n    const [checkAfterCreate, setCheckAfterCreate] = useState(false);\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    //console.log(totalPage)\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();     \r\n    }\r\n\r\n    function saveForm(): void {\r\n        if (section) {\r\n            if (checkCreateNew === true || (currentPage === totalPage && checkAfterCreate === false)) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n\r\n            else {\r\n                const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                    position: toast.POSITION.TOP_CENTER\r\n                });\r\n                /* let contentPage: PageContent = {\r\n                    page: currentPage,\r\n                    content: value\r\n                }*/\r\n    \r\n                if (tutorial_pages !== null) {\r\n                    if (tutorial_pages.tutorialPages.length > 0) {\r\n                        dispatch(postUserRegisterTutorial(tutorial_pages.tutorialPages, {\r\n                            section_id: section_id,\r\n                            creator_id: id,\r\n                            name: formState.name.value,\r\n                            status: \"Not approved now\"\r\n                        }, idx, routeHome)) \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function handleNextPage() {  \r\n        if (tutorial_pages !== null) {\r\n            if (checkCreateNew === true || (currentPage === totalPage && checkAfterCreate === false)) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n            else {\r\n                if (checkAfterCreate === true) {\r\n                    let x = currentPage + 1;\r\n                    setCurrentPageOld(x-1)\r\n                    setCurrentPage(x)\r\n                    console.log(tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number))\r\n                    setTextHtml(tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number)[x-1] !== undefined ? tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number)[x-1].description : \"\")\r\n                    setChecked(false)\r\n                    setValue(\"\")\r\n                    setCheckAfterCreate(false);\r\n                }\r\n                else {\r\n                    let x = currentPage + 1;\r\n                    setCurrentPage(x)\r\n                    console.log(tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number))\r\n                    setTextHtml(tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number)[x-1] !== undefined ? tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number)[x-1].description : \"\")\r\n                    setChecked(false)\r\n                    setValue(\"\")\r\n                }\r\n            }\r\n        }     \r\n    }\r\n\r\n    function handleBackPage () {\r\n        if (tutorial_pages !== null) {\r\n            if (checkCreateNew === true  && currentPage === totalPage && checkAfterCreate === false) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n            else if (checkCreateNew === true  && currentPage !== totalPage) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n            else {\r\n                let x = currentPage - 1;\r\n                setCurrentPageOld(x-1)\r\n                setCurrentPage(x)\r\n                console.log(tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number))\r\n                setTextHtml(tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number)[x-1].description)\r\n                setChecked(false)\r\n                setValue(\"\")\r\n            }\r\n        }     \r\n    }\r\n\r\n\r\n    function handleRemove() {\r\n        if (tutorial_pages !== null){\r\n            if (checkCreateNew === true  && currentPage === totalPage && checkAfterCreate === false) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n            else if (checkCreateNew === true  && currentPage !== totalPage) {\r\n                toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    autoClose: 2000,\r\n                });\r\n            }\r\n            else {\r\n                const k = currentPage;\r\n                let x = totalPage - 1;\r\n                setTotalPage(x)\r\n\r\n                setCurrentPageOld(k-2)\r\n    \r\n                const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                    position: toast.POSITION.TOP_CENTER\r\n                });\r\n                if (k === tutorial_pages.tutorialPages.length) {\r\n                    let y = k - 1;\r\n                    setCurrentPage(y)\r\n                    dispatch(removeTutorialPage(tutorial_pages.tutorialPages[k-1].id))\r\n                    handleBackPage()\r\n                }\r\n                else {\r\n                    tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number).map((ele, idx) => {\r\n                        if (k -1 === ele.number) {\r\n                            dispatch(removeTutorialPage(ele.id));\r\n                        }\r\n                        else if (ele.number > k - 1 ) {\r\n                            dispatch(editTutorialPage({\r\n                                id: ele.id,\r\n                                description: ele.description,\r\n                                name: ele.name,\r\n                                tutorial_id: tutorial_id,\r\n                                number: ele.number - 1\r\n                            }))\r\n                        }\r\n                        return 2\r\n                    })\r\n                    handleBackPage()\r\n                }\r\n                toast.update(idx, { render: \"Xóa bước thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            }\r\n        }\r\n    }\r\n\r\n    console.log('CurrentPage', currentPage);\r\n    console.log('OldPage', currentPageOld)\r\n\r\n\r\n\r\n    function handleNewPage() {\r\n        if (checkCreateNew === true  && currentPage === totalPage && checkAfterCreate === false) {\r\n            toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 2000,\r\n            });\r\n        }\r\n        else if (checkCreateNew === true  && currentPage !== totalPage) {\r\n            toast.warning(\"Vui lòng lưu bước trước khi chuyển bước!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 2000,\r\n            });\r\n        }\r\n        else {\r\n            let x = currentPage + 1;\r\n            setCurrentPageOld(x-1)\r\n            setCurrentPage(x)\r\n            setCheckCreateNew(true)\r\n            let y = totalPage + 1;\r\n            setTotalPage(y)\r\n            console.log(currentPage - 1)\r\n            setChecked(false)\r\n            setTextHtml(\"\")\r\n            setValue(\"\")\r\n        }\r\n    }\r\n\r\n    const [value, setValue] = useState(\"\")\r\n    console.log('value', value)\r\n\r\n    function getValue(value: any){\r\n        setValue(value);\r\n        setChecked(true)\r\n    }\r\n\r\n    function handleSave(){\r\n        if (tutorial_pages !== null){\r\n            const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            const k = currentPage;\r\n\r\n            if (checkCreateNew === true) {\r\n                if (k - 1 === tutorial_pages.tutorialPages.length) {\r\n                    console.log('yyy')\r\n                    dispatch(addTutorialPage({\r\n                        description: value,\r\n                        name: formState.name.value,\r\n                        tutorial_id: tutorial_id,\r\n                        number: tutorial_pages.tutorialPages.length,\r\n                        id: (tutorial_pages.tutorialPages.length + 1).toString()\r\n                    }))\r\n                }\r\n                else {\r\n                    console.log('xxx')\r\n                    tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number).map((ele, idx) => {\r\n                        if (ele.number === k -1) {\r\n                            console.log('1')\r\n                            dispatch(editTutorialPage({\r\n                                description: ele.description,\r\n                                name: ele.name,\r\n                                tutorial_id: tutorial_id,\r\n                                number: ele.number + 1,\r\n                                id: ele.id\r\n                            }))\r\n                            dispatch(addTutorialPage({\r\n                                description: value,\r\n                                name: formState.name.value,\r\n                                tutorial_id: tutorial_id,\r\n                                number: ele.number,\r\n                                id: (tutorial_pages.tutorialPages.length + 1).toString()\r\n                            }))\r\n                        }\r\n                        else if (ele.number > k - 1) {\r\n                            console.log('2')\r\n                            if (ele.number < tutorial_pages.tutorialPages.length - 1) {\r\n                                dispatch(editTutorialPage({\r\n                                    description: ele.description,\r\n                                    name: ele.name,\r\n                                    tutorial_id: tutorial_id,\r\n                                    number: ele.number + 1,\r\n                                    id: ele.id\r\n                                }))\r\n                            }\r\n                            else {\r\n                                dispatch(editTutorialPage({\r\n                                    description: ele.description,\r\n                                    name: ele.name,\r\n                                    tutorial_id: tutorial_id,\r\n                                    number: ele.number + 1,\r\n                                    id: ele.id\r\n                                }))\r\n                            }\r\n                        }\r\n                        return 1\r\n                    })\r\n\r\n                    /* dispatch(addTutorialPage({\r\n                        description: value,\r\n                        name: formState.name.value,\r\n                        tutorial_id: tutorial_id,\r\n                        number: k - 1,\r\n                        id: (tutorial_pages.tutorialPages.length + 1).toString()\r\n                    })) */\r\n                }\r\n                setCheckCreateNew(false)\r\n            }\r\n            else {\r\n                if (k < tutorial_pages.tutorialPages.length + 1) {\r\n                    dispatch(editTutorialPage({\r\n                        description: value,\r\n                        name: tutorial_name,\r\n                        tutorial_id: tutorial_id,\r\n                        number: k-1,\r\n                        id: tutorial_pages.tutorialPages.sort((a, b) => a.number - b.number)[k-1].id\r\n                    }))\r\n                   console.log({\r\n                        description: value,\r\n                        name: tutorial_name,\r\n                        tutorial_id: tutorial_id,\r\n                        number: k-1\r\n                   })\r\n                }\r\n                else {\r\n                    dispatch(addTutorialPage({\r\n                        description: value,\r\n                        name: formState.name.value,\r\n                        tutorial_id: tutorial_id,\r\n                        number: tutorial_pages.tutorialPages.length,\r\n                        id: (tutorial_pages.tutorialPages.length + 1).toString()\r\n                    }))\r\n    \r\n                    console.log({\r\n                        description: value,\r\n                        name: tutorial_name,\r\n                        tutorial_id: tutorial_id,\r\n                        number: tutorial_pages.tutorialPages.length\r\n                   })\r\n                }\r\n            }\r\n            console.log(tutorial_pages.tutorialPages)\r\n            setCheckAfterCreate(true)\r\n\r\n            toast.update(idx, { render: \"Điều chỉnh thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"col-xl-12 col-lg-12\">\r\n                <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\">Buổi {section_number}</h6>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={saveUser}>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <TextInput id=\"input_name\"\r\n                                        value={formState.name.value}\r\n                                        field=\"name\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={2000}\r\n                                        label=\"Tên giáo trình\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Nội dung bước {currentPage} / {totalPage}</label>\r\n                                <Editor getValue={getValue} isCreate={checked} setValue={textHtml} />\r\n                            </div>\r\n                            {\r\n                                function () {\r\n                                    if (currentPage < totalPage) {\r\n                                        if (currentPage === 1) {\r\n                                            return (\r\n                                                <div className=\"row\">\r\n                                                <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                                                    <button type=\"button\" className=\"btn btn-info right-margin\" onClick={handleSave}>Lưu tạm</button>\r\n                                                    <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleNextPage}>Bước tiếp theo</button>\r\n                                                </div>\r\n                                                <div className=\"col-xl-8 col-md-8 col-xs-8\">\r\n                                                    <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNewPage}>Thêm bước</button>\r\n                                                </div>\r\n                                            </div>\r\n                                            )\r\n                                        }\r\n                                        else {\r\n                                            return (\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-xl-4 col-md-4 col-xs-4\">\r\n                                                        <button type=\"button\" className=\"btn btn-info right-margin\" onClick={handleBackPage}>Trở về</button>\r\n                                                        <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleSave}>Lưu tạm</button>\r\n                                                        <button type=\"button\" className=\"btn left-margin ml-2 step-continue\" onClick={handleNextPage}>Bước tiếp theo</button>\r\n                                                    </div>\r\n                                                    <div className=\"col-xl-8 col-md-8 col-xs-8\">\r\n                                                        <button type=\"button\" className=\"btn btn-error right-margin add-step btn-remove ml-2\" onClick={handleRemove}>Xóa bước</button>\r\n                                                        <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNewPage}>Thêm bước</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    }\r\n                                }()\r\n                            }\r\n                            {\r\n                                function () {\r\n                                    if (currentPage === totalPage) {\r\n                                        return (\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-xl-6 col-md-6 col-xs-6\">\r\n                                                    <button type=\"button\" className=\"btn btn-info right-margin\" onClick={handleSave}>Lưu tạm</button>\r\n                                                    <button type=\"button\" className={`btn btn-primary left-margin ml-2 step-continue`} onClick={saveForm}>Hoàn thành</button>\r\n                                                </div>\r\n                                                <div className=\"col-xl-6 col-md-6 col-xs-6\">\r\n                                                    <button type=\"button\" className=\"btn btn-success right-margin add-step\" onClick={handleNewPage}>Thêm bước</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                }()\r\n                            }\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default EditSectionTeacher;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getTutorialPageBySection } from \"../../common/service/TutorialPage/GetTutorialPageBySection\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IStateType, ITutorialPageState } from \"../../store/models/root.interface\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst ViewSectionTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const TutorialPages: ITutorialPageState = useSelector((state: IStateType) => state.tutorial_pages);\r\n\r\n    var id_y = localStorage.getItem('section_id');\r\n    \r\n    let section_id = 0;\r\n\r\n    if (id_y !== null) {\r\n        section_id = parseInt(id_y);\r\n    }\r\n\r\n    const [count, setCount] = useState(1);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    function setChangeCount() {\r\n        let x = count;\r\n        let y = x + 1;\r\n        if (x < TutorialPages.tutorialPages.length){\r\n            console.log(\"Count\")\r\n            setCount(y);\r\n        }\r\n        console.log(count)\r\n    }\r\n\r\n    function setChangeCountBack() {\r\n        let x = count;\r\n        let y = x - 1;\r\n        if (x > 1){\r\n            setCount(y);\r\n        }\r\n    }\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getTutorialPageBySection(dispatch, section_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getTutorialPageBySection(dispatch, section_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, section_id]);\r\n    \r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> :  <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`}>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters justify-content-left\">\r\n                                            <h4 id=\"full-name\">{TutorialPages.tutorialPages.length !== 0 ? TutorialPages.tutorialPages[0].name : \"\"}</h4>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            {\r\n                                                function () {\r\n                                                    if (TutorialPages.tutorialPages.length < 1) {\r\n                                                        return \"\"\r\n                                                    }\r\n                                                    else {\r\n                                                        return <div className=\"card-body\" dangerouslySetInnerHTML={{ __html: TutorialPages.tutorialPages.sort((a, b) => a.number - b.number)[count-1].description }}>\r\n                                                        </div>\r\n                                                    }\r\n                                                }()\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"row no-gutters justify-content-right\">\r\n                                            {\r\n                                                function () {\r\n                                                    if (count < TutorialPages.tutorialPages.length) {\r\n                                                        if (count === 1){\r\n                                                            return (\r\n                                                                <button className={`btn btn-success left-margin`} onClick={() => {setChangeCount()}}>Trang tiếp</button>\r\n                                                            )\r\n                                                        }\r\n                                                        else if (count > 1){\r\n                                                            return (\r\n                                                                <> \r\n                                                                    <button className={`btn btn-warning left-margin`} onClick={() => {setChangeCountBack()}}>Trở về</button>\r\n                                                                    <button className={`btn btn-success left-margin`} onClick={() => {setChangeCount()}}>Trang tiếp</button>\r\n                                                                </>\r\n                                                            )\r\n                                                        }\r\n                                                        \r\n                                                    }\r\n                                                    else {\r\n                                                        return (\r\n                                                            <button className={`btn btn-warning left-margin`} onClick={() => {setChangeCountBack()}}>Trở về</button>\r\n                                                        )\r\n                                                    }\r\n                                                }()\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewSectionTeacher;\r\n","import { fetchDataSuccess, fetchDataError, removeStudentLeaveApprovedAll, removeStudentLeaveNotApprovedAll, removeStudentLeaveNotApprovedNowAll, addStudentLeaveApproved, addStudentLeaveNotApproved, addStudentLeaveNotApprovedNow } from \"../../../store/actions/student_leave.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface StudentLeave {\r\n    id: any;\r\n    section_id: number;\r\n    section_name: string;\r\n    class_id: number;\r\n    class_name: string;\r\n    student_id: number;\r\n    student_name: string;\r\n    reviewer_id: number;\r\n    section_number: number;\r\n    description: string;\r\n    status: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getStudentLeaveByTeacher(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/student-leave/teacher/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getStudentLeaveByTeacher(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeStudentLeaveApprovedAll())\r\n                dispatch(removeStudentLeaveNotApprovedAll())\r\n                dispatch(removeStudentLeaveNotApprovedNowAll())\r\n                //console.log(data.body.student_leaves)\r\n                data.body.student_leave.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var student_leave: StudentLeave = {\r\n                        id: ele.id,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        class_id: ele.class_id,\r\n                        section_number: ele.section_number,\r\n                        class_name: ele.class_name,\r\n                        student_id: ele.student_id,\r\n                        reviewer_id: ele.reviewer_id,\r\n                        status: ele.status,\r\n                        student_name: ele.student_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (student_leave.status === \"Approved\"){\r\n                        return dispatch(addStudentLeaveApproved(student_leave));\r\n                    }\r\n                    else if (student_leave.status === \"Not approved\"){\r\n                        return dispatch(addStudentLeaveNotApproved(student_leave));\r\n                    }\r\n                    else {\r\n                        return dispatch(addStudentLeaveNotApprovedNow(student_leave));\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\nimport { putStudentLeaveStatus } from \"../../common/service/StudentLeave/PutStudentLeave\";\r\n\r\n\r\nfunction StudentLeaveList(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const student_leaves = useSelector((state) => state.student_leaves);\r\n    const history = useHistory();\r\n\r\n    const onChangeRoute = (student_leave) =>{ \r\n        localStorage.removeItem(\"detail_resson\")\r\n        localStorage.setItem('detail_resson', student_leave.description)\r\n        let path = '/student-leave/detail'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    const handleStudentLeave = (student_leave, status) => {\r\n        const id = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n        dispatch(putStudentLeaveStatus(student_leave.id, {\r\n            status: status\r\n        }, id))\r\n    }\r\n\r\n  const datas = student_leaves.leaves\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n  function viewDetailButton(cell, row) {\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n        onChangeRoute(row)\r\n      }}>Chi tiết</button>\r\n    )\r\n  }\r\n\r\n  function acceptLeaveButton(cell, row) {\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-success\" onClick={() => {\r\n        handleStudentLeave(row, \"Approved\")\r\n      }}>Chấp nhận</button>\r\n    )\r\n  }\r\n\r\n  function removeLeaveButton(cell, row) {\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-warning\" onClick={() => {\r\n        handleStudentLeave(row, \"Not approved\")\r\n      }}>Xóa </button>\r\n    )\r\n  }\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'class_name',\r\n      text: 'Lớp',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'section_name',\r\n      text: 'Buổi học',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'student_name',\r\n      text: 'Học sinh',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'section_number',\r\n      text: 'Buổi thứ',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: 'Hành động',\r\n      formatter: viewDetailButton\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: '',\r\n      formatter: acceptLeaveButton\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: '',\r\n      formatter: removeLeaveButton\r\n    },\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default StudentLeaveList;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/student_leave.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nexport function putStudentLeaveStatus(id: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/student-leave/admin/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putStudentLeaveStatus(id, data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                toast.update(idx, { render: \"Yêu cầu thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            });\r\n    };\r\n}","import React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { IRootPageStateType, IStateType, IStudentLeaveState, ITeacherLeaveState } from \"../../store/models/root.interface\";\r\nimport \"./RequestTeacher.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { getStudentLeaveByTeacher } from \"../../common/service/StudentLeave/GetStudentLeaveByTeacher\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport StudentLeaveList from \"./StudentLeaveList1\";\r\n\r\nconst RequestTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const student_leaves: IStudentLeaveState = useSelector((state: IStateType) => state.student_leaves);\r\n    const teacher_leaves: ITeacherLeaveState = useSelector((state: IStateType) => state.teacher_leaves);\r\n    console.log(student_leaves)\r\n    console.log(teacher_leaves)\r\n    const { promiseInProgress } = usePromiseTracker();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberTeacherRegisterSuccessfullCount: number = student_leaves.leaves.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getStudentLeaveByTeacher(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getStudentLeaveByTeacher(dispatch, id))\r\n            }\r\n        }\r\n\r\n    }, [dispatch, access_token, refresh_token, id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Yêu cầu\", \"Học sinh\"));\r\n    }, [path.area, dispatch])\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n                <ToastContainer />\r\n                <div className=\"row\">\r\n                    <TopCard title=\"SỐ YÊU CẦU NGHỈ HỌC\" text={`${numberTeacherRegisterSuccessfullCount}`} icon=\"book\" class=\"primary\" />\r\n                    {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n                </div>\r\n\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                            <div className=\"card-header py-3\">\r\n                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách yêu cầu nghỉ học</h6>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <StudentLeaveList />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default RequestTeacher;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getExerciseSubmissionByExercise } from \"../../common/service/ExerciseSubmission/GetExerciseSubmissionByExeercise\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IExerciseSubmissionState, IStateType } from \"../../store/models/root.interface\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst ExamTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const exercise_submissions: IExerciseSubmissionState = useSelector((state: IStateType) => state.exercise_submissions);\r\n    const numberApprovedCount: number = exercise_submissions.exercise_gradeds.length;\r\n    const numberNotApprovedNowCount: number = exercise_submissions.exercise_not_gradeds.length;\r\n    const numberGradedCount: number = exercise_submissions.exercise_gradeds.length;\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    var exercise_description = localStorage.getItem('exercise_description');\r\n    var exercise_description_: string = \"\";\r\n    if (exercise_description !== null) {\r\n        exercise_description_ = exercise_description;\r\n    }\r\n\r\n    var exercise_name = localStorage.getItem('exercise_name');\r\n    var exercise_name_: string = \"\";\r\n    if (exercise_name !== null) {\r\n        exercise_name_ = exercise_name;\r\n    }\r\n\r\n    var exercise_level_name = localStorage.getItem('exercise_level_name');\r\n    var exercise_level_name_: string = \"\";\r\n    if (exercise_level_name !== null) {\r\n        exercise_level_name_ = exercise_level_name;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('exercise_id');\r\n    let exercise_id = 0;\r\n\r\n    if (id_y !== null) {\r\n        exercise_id = parseInt(id_y);\r\n    }\r\n\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getExerciseSubmissionByExercise(dispatch, exercise_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getExerciseSubmissionByExercise(dispatch, exercise_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, exercise_id]);\r\n\r\n    \r\n\r\n    const history = useHistory();\r\n    const routeChange = () =>{ \r\n        let path = '/exercise/grade'; \r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    const routeChange1 = () => {\r\n        let path = '/exercise/result-grade';\r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n    \r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ BÀI ĐÃ CHẤM\" text={`${numberApprovedCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"CHƯA CHẤM\" text={`${numberNotApprovedNowCount}`} icon=\"book\" class=\"danger\" />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters justify-content-left\">\r\n                                            <h4 id=\"full-name\">Đề bài</h4>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <p id=\"phone\">{exercise_name_}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\" dangerouslySetInnerHTML={{ __html: exercise_description_ }}></div>\r\n                                        <div className=\"row\">\r\n                                            <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Phần trăm đánh giá:</span> <span className=\"header-card-course-value-teacher\">{exercise_level_name_}%</span></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>              \r\n            </div>\r\n\r\n            {\r\n                function () {\r\n                    if (numberGradedCount > 0) {\r\n                        return (\r\n                            <div className=\"row justify-content-center mb-4\">\r\n                                <button \r\n                                    className=\"btn btn-success btn-green\" \r\n                                    id=\"btn-into-view-score\"\r\n                                    onClick={() => {routeChange1()}}\r\n                                >\r\n                                    Xem điểm\r\n                                    <i className={`fas fa-arrow-right fa-1x`} id=\"icon-arrow-right\"></i>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n            {\r\n                function () {\r\n                    if (numberNotApprovedNowCount > 0) {\r\n                        return (\r\n                            <div className=\"row justify-content-center mb-4\">\r\n                                <button \r\n                                    className=\"btn btn-success btn-green\" \r\n                                    id=\"btn-into-class-student\"\r\n                                    onClick={() => {routeChange()}}\r\n                                >\r\n                                    Chấm bài\r\n                                    <i className={`fas fa-arrow-right fa-1x`} id=\"icon-arrow-right\"></i>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ExamTeacher;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nconst StudentLeaveDetail: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    var id_y = localStorage.getItem('detail_resson');\r\n    var detail_resson: string = \"\";\r\n    if (id_y !== null) {\r\n        detail_resson = id_y;\r\n    }\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    \r\n                }\r\n            }\r\n            else {\r\n                \r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token]);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Yêu cầu nghỉ học\", \"Chi tiết\"));\r\n    }, [path.area, dispatch]);\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Lý do</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <p>\r\n                                {detail_resson}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default StudentLeaveDetail;\r\n","import React, { Fragment, Dispatch } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\n\r\nconst DetailTeacherRequest: React.FC = () => {\r\n\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    dispatch(updateCurrentPath(\"Bằng cấp\", \"\"));\r\n    var id_x = localStorage.getItem('resson_off_teacher')\r\n    let description = \"\";\r\n    if (id_x !== null) {\r\n        description = id_x\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Lý do xin nghỉ</h1>\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Nội dung</h6>\r\n                        </div>\r\n                        <div className=\"card-body\" dangerouslySetInnerHTML={{ __html: description }}>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default DetailTeacherRequest;\r\n","import { IUserRegisterTutorial, UserRegisterTutorialModificationStatus } from \"../models/user_register_tutorial.interface\";\r\n\r\n// register_successfull_user_register_tutorials\r\nexport const ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: string = \"ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW\";\r\nexport const EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: string = \"EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: string = \"REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_AMOUNT: string = \"CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_AMOUNT\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT: string = \"CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT\";\r\nexport const CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT: string = \"CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_ALL: string = \"REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_ALL\";\r\nexport const INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: string = \"INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW\";\r\n\r\n// not_register_user_register_tutorials\r\nexport const ADD_USER_REGISTER_TUTORIAL_APPROVED: string = \"ADD_USER_REGISTER_TUTORIAL_APPROVED\";\r\nexport const EDIT_USER_REGISTER_TUTORIAL_APPROVED: string = \"EDIT_USER_REGISTER_TUTORIAL_APPROVED\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_APPROVED: string = \"REMOVE_USER_REGISTER_TUTORIAL_APPROVED\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_APPROVED_AMOUNT: string = \"CHANGE_USER_REGISTER_TUTORIAL_APPROVED_AMOUNT\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_APPROVED_PENDING_EDIT: string = \"CHANGE_USER_REGISTER_TUTORIAL_APPROVED_PENDING_EDIT\";\r\nexport const CLEAR_USER_REGISTER_TUTORIAL_APPROVED_PENDING_EDIT: string = \"CLEAR_USER_REGISTER_TUTORIAL_APPROVED_PENDING_EDIT\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_APPROVED_ALL: string = \"REMOVE_USER_REGISTER_TUTORIAL_APPROVED_ALL\";\r\nexport const INITIAL_USER_REGISTER_TUTORIAL_APPROVED: string = \"INITIAL_USER_REGISTER_TUTORIAL_APPROVED\";\r\n\r\n\r\n// Approved to tutorial template\r\nexport const ADD_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: string = \"ADD_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE\";\r\nexport const EDIT_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: string = \"EDIT_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: string = \"REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_AMOUNT: string = \"CHANGE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_AMOUNT\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_PENDING_EDIT: string = \"CHANGE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_PENDING_EDIT\";\r\nexport const CLEAR_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_PENDING_EDIT: string = \"CLEAR_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_PENDING_EDIT\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_ALL: string = \"REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_ALL\";\r\nexport const INITIAL_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: string = \"INITIAL_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE\";\r\n\r\n\r\n// not_register_user_register_tutorials\r\nexport const ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED: string = \"ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED\";\r\nexport const EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED: string = \"EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED: string = \"REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_AMOUNT: string = \"CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_AMOUNT\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_PENDING_EDIT: string = \"CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_PENDING_EDIT\";\r\nexport const CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_PENDING_EDIT: string = \"CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_PENDING_EDIT\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_ALL: string = \"REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_ALL\";\r\nexport const INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED: string = \"INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(user_register_tutorial: IUserRegisterTutorial) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        user_register_tutorial\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialUserRegisterTutorialNotApprovedNow(user_register_tutorial: IUserRegisterTutorial): IInitialUserRegisterTutorialNotApprovedNowActionType {\r\n    return { type: INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialNotApprovedNowAll(): IRemoveUserRegisterTutorialNotApprovedNowAllActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_ALL };\r\n}\r\n\r\nexport function addUserRegisterTutorialNotApprovedNow(user_register_tutorial: IUserRegisterTutorial): IAddUserRegisterTutorialNotApprovedNowActionType {\r\n    return { type: ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function editUserRegisterTutorialNotApprovedNow(user_register_tutorial: IUserRegisterTutorial): IEditUserRegisterTutorialNotApprovedNowActionType {\r\n    return { type: EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialNotApprovedNow(id: any): IRemoveUserRegisterTutorialNotApprovedNowActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedUserRegisterTutorialNotApprovedNow(user_register_tutorial: IUserRegisterTutorial): IChangeSelectedUserRegisterTutorialNotApprovedNowActionType {\r\n    return { type: CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function clearSelectedUserRegisterTutorialNotApprovedNow(): IClearSelectedUserRegisterTutorialNotApprovedNowActionType {\r\n    return { type: CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialUserRegisterTutorialApproved(user_register_tutorial: IUserRegisterTutorial): IInitialUserRegisterTutorialApprovedActionType {\r\n    return { type: INITIAL_USER_REGISTER_TUTORIAL_APPROVED, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialApprovedAll(): IRemoveUserRegisterTutorialApprovedAllActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_APPROVED_ALL };\r\n}\r\n\r\nexport function addUserRegisterTutorialApproved(user_register_tutorial: IUserRegisterTutorial): IAddUserRegisterTutorialApprovedActionType {\r\n    return { type: ADD_USER_REGISTER_TUTORIAL_APPROVED, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function editUserRegisterTutorialApproved(user_register_tutorial: IUserRegisterTutorial): IEditUserRegisterTutorialApprovedActionType {\r\n    return { type: EDIT_USER_REGISTER_TUTORIAL_APPROVED, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialApproved(id: any): IRemoveUserRegisterTutorialApprovedActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_APPROVED, id: id };\r\n}\r\n\r\nexport function changeSelectedUserRegisterTutorialApproved(user_register_tutorial: IUserRegisterTutorial): IChangeSelectedUserRegisterTutorialApprovedActionType {\r\n    return { type: CHANGE_USER_REGISTER_TUTORIAL_APPROVED_PENDING_EDIT, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function clearSelectedUserRegisterTutorialApproved(): IClearSelectedUserRegisterTutorialApprovedActionType {\r\n    return { type: CLEAR_USER_REGISTER_TUTORIAL_APPROVED_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: UserRegisterTutorialModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n\r\n\r\nexport function initialUserRegisterTutorialApprovedToTutorialTemplate(user_register_tutorial: IUserRegisterTutorial): IInitialUserRegisterTutorialApprovedToTutorialTemplateActionType {\r\n    return { type: INITIAL_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialApprovedToTutorialTemplateAll(): IRemoveUserRegisterTutorialApprovedToTutorialTemplateAllActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_ALL };\r\n}\r\n\r\nexport function addUserRegisterTutorialApprovedToTutorialTemplate(user_register_tutorial: IUserRegisterTutorial): IAddUserRegisterTutorialApprovedToTutorialTemplateActionType {\r\n    return { type: ADD_USER_REGISTER_TUTORIAL_APPROVED, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function editUserRegisterTutorialApprovedToTutorialTemplate(user_register_tutorial: IUserRegisterTutorial): IEditUserRegisterTutorialApprovedToTutorialTemplateActionType {\r\n    return { type: EDIT_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialApprovedToTutorialTemplate(id: any): IRemoveUserRegisterTutorialApprovedToTutorialTemplateActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE, id: id };\r\n}\r\n\r\nexport function changeSelectedUserRegisterTutorialApprovedToTutorialTemplate(user_register_tutorial: IUserRegisterTutorial): IChangeSelectedUserRegisterTutorialApprovedToTutorialTemplateActionType {\r\n    return { type: CHANGE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_PENDING_EDIT, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function clearSelectedUserRegisterTutorialApprovedToTutorialTemplate(): IClearSelectedUserRegisterTutorialApprovedToTutorialTemplateActionType {\r\n    return { type: CLEAR_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_PENDING_EDIT };\r\n}\r\n\r\n\r\n\r\nexport function initialUserRegisterTutorialNotApproved(user_register_tutorial: IUserRegisterTutorial): IInitialUserRegisterTutorialNotApprovedActionType {\r\n    return { type: INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialNotApprovedAll(): IRemoveUserRegisterTutorialNotApprovedAllActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_ALL };\r\n}\r\n\r\nexport function addUserRegisterTutorialNotApproved(user_register_tutorial: IUserRegisterTutorial): IAddUserRegisterTutorialNotApprovedActionType {\r\n    return { type: ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function editUserRegisterTutorialNotApproved(user_register_tutorial: IUserRegisterTutorial): IEditUserRegisterTutorialNotApprovedActionType {\r\n    return { type: EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialNotApproved(id: any): IRemoveUserRegisterTutorialNotApprovedActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED, id: id };\r\n}\r\n\r\nexport function changeSelectedUserRegisterTutorialNotApproved(user_register_tutorial: IUserRegisterTutorial): IChangeSelectedUserRegisterTutorialNotApprovedActionType {\r\n    return { type: CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_AMOUNT, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function clearSelectedUserRegisterTutorialNotApproved(): IClearSelectedUserRegisterTutorialNotApprovedActionType {\r\n    return { type: CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_PENDING_EDIT };\r\n}\r\n\r\n// register_successfull_user_register_tutorials\r\ninterface IAddUserRegisterTutorialNotApprovedNowActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IEditUserRegisterTutorialNotApprovedNowActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IRemoveUserRegisterTutorialNotApprovedNowActionType { type: string, id: any };\r\ninterface IChangeSelectedUserRegisterTutorialNotApprovedNowActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IClearSelectedUserRegisterTutorialNotApprovedNowActionType { type: string };\r\ninterface IRemoveUserRegisterTutorialNotApprovedNowAllActionType { type: string }\r\ninterface IInitialUserRegisterTutorialNotApprovedNowActionType {type: string, user_register_tutorial: IUserRegisterTutorial}\r\n\r\n// not_register_user_register_tutorials\r\ninterface IAddUserRegisterTutorialApprovedActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IEditUserRegisterTutorialApprovedActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IRemoveUserRegisterTutorialApprovedActionType { type: string, id: any };\r\ninterface IChangeSelectedUserRegisterTutorialApprovedActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IClearSelectedUserRegisterTutorialApprovedActionType { type: string };\r\ninterface IRemoveUserRegisterTutorialApprovedAllActionType { type: string }\r\ninterface IInitialUserRegisterTutorialApprovedActionType {type: string, user_register_tutorial: IUserRegisterTutorial}\r\n\r\n\r\n// not_register_user_register_tutorials\r\ninterface IAddUserRegisterTutorialApprovedToTutorialTemplateActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IEditUserRegisterTutorialApprovedToTutorialTemplateActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IRemoveUserRegisterTutorialApprovedToTutorialTemplateActionType { type: string, id: any };\r\ninterface IChangeSelectedUserRegisterTutorialApprovedToTutorialTemplateActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IClearSelectedUserRegisterTutorialApprovedToTutorialTemplateActionType { type: string };\r\ninterface IRemoveUserRegisterTutorialApprovedToTutorialTemplateAllActionType { type: string }\r\ninterface IInitialUserRegisterTutorialApprovedToTutorialTemplateActionType {type: string, user_register_tutorial: IUserRegisterTutorial}\r\n\r\n\r\n// register_successfull_user_register_tutorials\r\ninterface IAddUserRegisterTutorialNotApprovedActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IEditUserRegisterTutorialNotApprovedActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IRemoveUserRegisterTutorialNotApprovedActionType { type: string, id: any };\r\ninterface IChangeSelectedUserRegisterTutorialNotApprovedActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IClearSelectedUserRegisterTutorialNotApprovedActionType { type: string };\r\ninterface IRemoveUserRegisterTutorialNotApprovedAllActionType { type: string }\r\ninterface IInitialUserRegisterTutorialNotApprovedActionType {type: string, user_register_tutorial: IUserRegisterTutorial}\r\n\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  UserRegisterTutorialModificationStatus};","import { fetchDataSuccess, fetchDataError, removeUserRegisterTutorialApprovedAll, initialUserRegisterTutorialApproved, addUserRegisterTutorialApproved, removeUserRegisterTutorialNotApprovedNowAll, removeUserRegisterTutorialNotApprovedAll, initialUserRegisterTutorialNotApproved, addUserRegisterTutorialNotApproved, initialUserRegisterTutorialNotApprovedNow, addUserRegisterTutorialNotApprovedNow, initialUserRegisterTutorialApprovedToTutorialTemplate, addUserRegisterTutorialApprovedToTutorialTemplate } from \"../../../store/actions/user_register_tutorial.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface UserRegisterTutorial {\r\n    id: any;\r\n    section_id: number;\r\n    creator_id: number;\r\n    creator_name: string;\r\n    section_name: string;\r\n    section_number: number;\r\n    class_id: number;\r\n    class_name: string;\r\n    name: string;\r\n    status: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getUserRegisterTutorial(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-tutorial`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserRegisterTutorial(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeUserRegisterTutorialApprovedAll())\r\n                dispatch(removeUserRegisterTutorialNotApprovedNowAll())\r\n                dispatch(removeUserRegisterTutorialNotApprovedAll())\r\n                console.log(data.body.user_register_tutorial)\r\n                data.body.user_register_tutorial.map((ele: any, index: any) => {\r\n                    var UserRegisterTutorial: UserRegisterTutorial = {\r\n                        id: ele.id,\r\n                        section_id: ele.section_id,\r\n                        section_name: ele.section_name,\r\n                        creator_name: ele.creator_name,\r\n                        creator_id: ele.creator_id,\r\n                        class_id: ele.class_id,\r\n                        class_name: ele.class_name,\r\n                        section_number:ele.section_number,\r\n                        name: ele.name,\r\n                        status: ele.status,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (ele.status === \"Approved\"){\r\n                        if (index === 0){\r\n                            return dispatch(initialUserRegisterTutorialApproved(UserRegisterTutorial));\r\n                        }\r\n                        else{\r\n                            return dispatch(addUserRegisterTutorialApproved(UserRegisterTutorial))\r\n                        }\r\n                    }\r\n                    else if (ele.status === \"Not approved now\"){\r\n                        if (index === 0){\r\n                            return dispatch(initialUserRegisterTutorialNotApprovedNow(UserRegisterTutorial));\r\n                        }\r\n                        else{\r\n                            return dispatch(addUserRegisterTutorialNotApprovedNow(UserRegisterTutorial))\r\n                        }\r\n                    }\r\n                    else if (ele.status === \"Approved to tutorial template\"){\r\n                        if (index === 0){\r\n                            return dispatch(initialUserRegisterTutorialApprovedToTutorialTemplate(UserRegisterTutorial));\r\n                        }\r\n                        else{\r\n                            return dispatch(addUserRegisterTutorialApprovedToTutorialTemplate(UserRegisterTutorial))\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (index === 0){\r\n                            return dispatch(initialUserRegisterTutorialNotApproved(UserRegisterTutorial));\r\n                        }\r\n                        else{\r\n                            return dispatch(addUserRegisterTutorialNotApproved(UserRegisterTutorial))\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess } from \"../../../store/actions/user_register_tutorial.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postNotifyDb } from \"../NotifyDb/PostNotifyDb\";\r\nimport { getUserRegisterTutorial } from \"./GetUserRegisterTutorial\";\r\n\r\nexport function putUserRegisterTutorial(id: any, tutorial: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-tutorial/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(tutorial)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putUserRegisterTutorial(id, tutorial, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(postNotifyDb({\r\n                    name: 'Chấp nhận giáo án giáo viên!',\r\n                    description: `Quản trị viên đã chấp nhận yêu cầu chỉnh giáo án ${tutorial.name} của giáo viên!`\r\n                }, tutorial.creator_id))\r\n                toast.update(idx, { render: \"Bạn đã xác nhận trình độ cho giáo viên thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataSuccess(tutorial))\r\n                getUserRegisterTutorial(dispatch)\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Bạn đã xác nhận trình độ cho giáo viên không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { putUserRegisterTutorial } from \"../../common/service/UserRegisterTutorial/PutUserRegisterTutorial\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n\r\nfunction TutorialEditRequestList(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user_register_tutorials = useSelector((state) => state.user_register_tutorials);\r\n  \r\n    function approvedTutorial(ele) {\r\n      const id = toast.info(\"Chấp nhận giáo án giáo viên!\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n        autoClose: 2000\r\n      });\r\n      dispatch(putUserRegisterTutorial(ele.id, {\r\n        status: \"Approved\",\r\n        section_id: ele.section_id,\r\n        name: ele.name,\r\n        creator_id: ele.creator_id\r\n      }, id))\r\n    }\r\n  \r\n    function notApprovedTutorial(ele) {\r\n      const id = toast.info(\"Chấp nhận giáo án giáo viên!\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n        autoClose: 2000\r\n      });\r\n      dispatch(putUserRegisterTutorial(ele.id, {\r\n        status: \"Not approved\",\r\n        section_id: ele.section_id,\r\n        name: ele.name,\r\n        creator_id: ele.creator_id\r\n      }, id))\r\n    }\r\n\r\n\r\n  const datas = user_register_tutorials.user_register_tutorial_not_approved_nows;\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n  function removeButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() => {\r\n            notApprovedTutorial(row)\r\n          }}>Xóa</button>\r\n    );\r\n  }\r\n\r\n  function editButton(cell, row) {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n            approvedTutorial(row)\r\n          }}>Chấp nhận</button>\r\n    )\r\n  }\r\n\r\n  function showStartTime(cell, row) {\r\n    var strDate = row.create_time;\r\n    return (\r\n        <span>{strDate.substring(0, 10) + \" \" + strDate.substring(11,19)}</span>\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'name',\r\n      text: 'Tên giáo án',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'class_name',\r\n      text: 'Lớp',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n        dataField: 'section_number',\r\n        text: 'Buổi',\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: 'creator_name',\r\n        text: 'Giáo viên',\r\n        filter: textFilter()\r\n      },\r\n      {\r\n        dataField: 'create_time',\r\n        text: 'Thời gian',\r\n        formatter: showStartTime,\r\n      },\r\n      \r\n    {\r\n      dataField: '',\r\n      text: 'Hành động',\r\n      formatter: editButton\r\n    },\r\n    {\r\n      dataField: 'address',\r\n      text: '',\r\n      formatter: removeButton\r\n    },\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default TutorialEditRequestList;\r\n","import React, { Dispatch } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { putUserRegisterTutorial } from \"../../common/service/UserRegisterTutorial/PutUserRegisterTutorial\";\r\nimport { IStateType, IUserRegisterTutorialState } from \"../../store/models/root.interface\";\r\nimport { IUserRegisterTutorial } from \"../../store/models/user_register_tutorial.interface\";\r\n\r\nexport type studentListProps = {\r\n  onSelect?: (student: IUserRegisterTutorial) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction UserRegisterTutorialEditRequestList(props: studentListProps): JSX.Element {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n\r\n  const user_register_tutorials: IUserRegisterTutorialState = useSelector((state: IStateType) => state.user_register_tutorials);\r\n\r\n  function approvedTutorial(ele: IUserRegisterTutorial) {\r\n    const id = toast.info(\"Chấp nhận giáo án giáo viên cho giáo án chung!\", {\r\n      position: toast.POSITION.TOP_CENTER,\r\n      autoClose: 2000\r\n    });\r\n    dispatch(putUserRegisterTutorial(ele.id, {\r\n      status: \"Approved to tutorial template\",\r\n      section_id: ele.section_id,\r\n      name: ele.name,\r\n      creator_id: ele.creator_id\r\n    }, id))\r\n  }\r\n\r\n  const studentElements: (JSX.Element | null)[] = user_register_tutorials.user_register_tutorial_approveds.map((student, index) => {\r\n    if (!student) { return null; }\r\n    return (<tr className={`table-row ${(user_register_tutorials.selectedUserRegisterTutorial && user_register_tutorials.selectedUserRegisterTutorial.id === student.id) ? \"selected\" : \"\"}`}\r\n      key={`student_${student.id}`}>\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td>{student.name}</td>\r\n      <td>{student.section_number}</td>\r\n      <td>{student.creator_name}</td>\r\n      <td>{student.create_time}</td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n          approvedTutorial(student)\r\n        }}>Chấp nhận</button>\r\n      </td>\r\n    </tr>);\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"table-responsive portlet\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Tên giáo án</th>\r\n            <th scope=\"col\">Buổi</th>\r\n            <th scope=\"col\">Giáo viên</th>\r\n            <th scope=\"col\">Thời gian</th>\r\n            <th scope=\"col\">Làm giáo trình chung</th>\r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {studentElements}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default UserRegisterTutorialEditRequestList;\r\n","import React, { Fragment, Dispatch, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport { IStateType, IUserRegisterTutorialState } from \"../../store/models/root.interface\";\r\nimport TutorialEditRequestList from \"./TutorialEditRequestList\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { getUserRegisterTutorial } from \"../../common/service/UserRegisterTutorial/GetUserRegisterTutorial\";\r\nimport UserRegisterTutorialEditRequestList from \"./UserRegisterTutorialEditRequestList\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst TutorialEditRequest: React.FC = () => {\r\n  const user_register_tutorials: IUserRegisterTutorialState = useSelector((state: IStateType) => state.user_register_tutorials);\r\n  const numberItemsCount: number = user_register_tutorials.user_register_tutorial_not_approved_nows.length;\r\n  const numberItemsApprovedCount: number = user_register_tutorials.user_register_tutorial_approveds.length;\r\n\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  dispatch(updateCurrentPath(\"Yêu cầu chỉnh giáo án\", \"\"));\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n  let access_token = localStorage.getItem(\"access_token\");\r\n  let refresh_token = localStorage.getItem(\"refresh_token\");\r\n  useEffect(() => {\r\n    if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n      let access_token_decode: any = jwt_decode(access_token)\r\n      let refresh_token_decode: any = jwt_decode(refresh_token)\r\n      let exp_access_token_decode = access_token_decode.exp;\r\n      let exp_refresh_token_decode = refresh_token_decode.exp;\r\n      let now_time = Date.now() / 1000;\r\n      console.log(exp_access_token_decode)\r\n      console.log(now_time)\r\n      if (exp_access_token_decode < now_time) {\r\n        if (exp_refresh_token_decode < now_time) {\r\n          localStorage.removeItem('access_token') // Authorization\r\n          localStorage.removeItem('refresh_token')\r\n          localStorage.removeItem('username')\r\n          localStorage.removeItem('role_privilege')\r\n          localStorage.removeItem('id')\r\n          localStorage.removeItem('contest_id')\r\n          localStorage.removeItem('schedule_id')\r\n          dispatch(logout())\r\n        }\r\n        else {\r\n          trackPromise(getUserRegisterTutorial(dispatch))\r\n        }\r\n      }\r\n      else {\r\n        trackPromise(getUserRegisterTutorial(dispatch))\r\n      }\r\n    }\r\n  }, [dispatch, access_token, refresh_token]);\r\n\r\n  const [checked, setChecked] = useState(true);\r\n\r\n  return (\r\n    promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n      <ToastContainer />\r\n      <h1 className=\"h3 mb-2 text-gray-800\">Yêu cầu chỉnh giáo án</h1>\r\n      {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n      <div className=\"row\">\r\n        <TopCard title=\"SỐ YÊU CẦU CHƯA DUYỆT\" text={`${numberItemsCount}`} icon=\"box\" class=\"primary\" />\r\n        <TopCard title=\"SỐ YÊU CẦU ĐÃ DUYỆT\" text={`${numberItemsApprovedCount}`} icon=\"box\" class=\"primary\" />\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n          <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n            if (checked === false) {\r\n              setChecked(true)\r\n            }\r\n          }} style={{\r\n            color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n          }}>Chưa duyệt</h6>\r\n          <div style={{\r\n            height: \"5px\",\r\n            textAlign: \"center\",\r\n            margin: \"auto\",\r\n            width: \"30%\",\r\n            backgroundColor: checked ? \"#F24E1E\" : \"#ffffff\"\r\n          }}></div>\r\n        </div>\r\n        <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n          <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n            if (checked === true) {\r\n              setChecked(false)\r\n            }\r\n          }}\r\n            style={{\r\n              color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n            }}>Đã duyệt</h6>\r\n          <div style={{\r\n            height: \"5px\",\r\n            textAlign: \"center\",\r\n            margin: \"auto\",\r\n            width: \"30%\",\r\n            backgroundColor: checked ? \"#ffffff\" : \"#F24E1E\"\r\n          }}></div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {\r\n        function () {\r\n          if (checked === true) {\r\n            return (\r\n              <div className=\"row\">\r\n\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                  <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-header py-3\">\r\n                      <h6 className=\"m-0 font-weight-bold text-green\">Danh sách yêu cầu</h6>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <TutorialEditRequestList />\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            )\r\n          }\r\n          else {\r\n            return (\r\n              <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                  <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-header py-3\">\r\n                      <h6 className=\"m-0 font-weight-bold text-green\">Danh sách yêu cầu</h6>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <UserRegisterTutorialEditRequestList />\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            )\r\n          }\r\n        }()\r\n      }\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TutorialEditRequest;\r\n","import { IContestSubmissionTeacher, ContestSubmissionTeacherModificationStatus } from \"../models/contest_submission_teacher.interface\";\r\n\r\n// register_successfull_contest_submission_teachers\r\nexport const ADD_CONTEST_SUBMISSION_TEACHER_NOT_GRADED: string = \"ADD_CONTEST_SUBMISSION_TEACHER_NOT_GRADED\";\r\nexport const EDIT_CONTEST_SUBMISSION_TEACHER_NOT_GRADED: string = \"EDIT_CONTEST_SUBMISSION_TEACHER_NOT_GRADED\";\r\nexport const REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED: string = \"REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED\";\r\nexport const CHANGE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_AMOUNT: string = \"CHANGE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_AMOUNT\";\r\nexport const CHANGE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT: string = \"CHANGE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT: string = \"CLEAR_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_ALL: string = \"REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_ALL\";\r\nexport const INITIAL_CONTEST_SUBMISSION_TEACHER_NOT_GRADED: string = \"INITIAL_CONTEST_SUBMISSION_TEACHER_NOT_GRADED\";\r\n\r\n// not_register_contest_submission_teachers\r\nexport const ADD_CONTEST_SUBMISSION_TEACHER_GRADED: string = \"ADD_CONTEST_SUBMISSION_TEACHER_GRADED\";\r\nexport const EDIT_CONTEST_SUBMISSION_TEACHER_GRADED: string = \"EDIT_CONTEST_SUBMISSION_TEACHER_GRADED\";\r\nexport const REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED: string = \"REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED\";\r\nexport const CHANGE_CONTEST_SUBMISSION_TEACHER_GRADED_AMOUNT: string = \"CHANGE_CONTEST_SUBMISSION_TEACHER_GRADED_AMOUNT\";\r\nexport const CHANGE_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT: string = \"CHANGE_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT: string = \"CLEAR_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED_ALL: string = \"REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED_ALL\";\r\nexport const INITIAL_CONTEST_SUBMISSION_TEACHER_GRADED: string = \"INITIAL_CONTEST_SUBMISSION_TEACHER_GRADED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(contest_submission_teacher: IContestSubmissionTeacher) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        contest_submission_teacher\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialContestSubmissionNotGrade(contest_submission_teacher: IContestSubmissionTeacher): IInitialContestSubmissionNotGradeActionType {\r\n    return { type: INITIAL_CONTEST_SUBMISSION_TEACHER_NOT_GRADED, contest_submission_teacher: contest_submission_teacher };\r\n}\r\n\r\nexport function removeContestSubmissionNotGradeAll(): IRemoveContestSubmissionNotGradeAllActionType {\r\n    return { type: REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_ALL };\r\n}\r\n\r\nexport function addContestSubmissionNotGrade(contest_submission_teacher: IContestSubmissionTeacher): IAddContestSubmissionNotGradeActionType {\r\n    return { type: ADD_CONTEST_SUBMISSION_TEACHER_NOT_GRADED, contest_submission_teacher: contest_submission_teacher };\r\n}\r\n\r\nexport function editContestSubmissionNotGrade(contest_submission_teacher: IContestSubmissionTeacher): IEditContestSubmissionNotGradeActionType {\r\n    return { type: EDIT_CONTEST_SUBMISSION_TEACHER_NOT_GRADED, contest_submission_teacher: contest_submission_teacher };\r\n}\r\n\r\nexport function removeContestSubmissionNotGrade(id: any): IRemoveContestSubmissionNotGradeActionType {\r\n    return { type: REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED, id: id };\r\n}\r\n\r\nexport function changeSelectedContestSubmissionNotGrade(contest_submission_teacher: IContestSubmissionTeacher): IChangeSelectedContestSubmissionNotGradeActionType {\r\n    return { type: CHANGE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT, contest_submission_teacher: contest_submission_teacher };\r\n}\r\n\r\nexport function clearSelectedContestSubmissionNotGrade(): IClearSelectedContestSubmissionNotGradeActionType {\r\n    return { type: CLEAR_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialContestSubmissionGrade(contest_submission_teacher: IContestSubmissionTeacher): IInitialContestSubmissionGradeActionType {\r\n    return { type: INITIAL_CONTEST_SUBMISSION_TEACHER_GRADED, contest_submission_teacher: contest_submission_teacher };\r\n}\r\n\r\nexport function removeContestSubmissionGradeAll(): IRemoveContestSubmissionGradeAllActionType {\r\n    return { type: REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED_ALL };\r\n}\r\n\r\nexport function addContestSubmissionGrade(contest_submission_teacher: IContestSubmissionTeacher): IAddContestSubmissionGradeActionType {\r\n    return { type: ADD_CONTEST_SUBMISSION_TEACHER_GRADED, contest_submission_teacher: contest_submission_teacher };\r\n}\r\n\r\nexport function editContestSubmissionGrade(contest_submission_teacher: IContestSubmissionTeacher): IEditContestSubmissionGradeActionType {\r\n    return { type: EDIT_CONTEST_SUBMISSION_TEACHER_GRADED, contest_submission_teacher: contest_submission_teacher };\r\n}\r\n\r\nexport function removeContestSubmissionGrade(id: any): IRemoveContestSubmissionGradeActionType {\r\n    return { type: REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED, id: id };\r\n}\r\n\r\nexport function changeSelectedContestSubmissionGrade(contest_submission_teacher: IContestSubmissionTeacher): IChangeSelectedContestSubmissionGradeActionType {\r\n    return { type: CHANGE_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT, contest_submission_teacher: contest_submission_teacher };\r\n}\r\n\r\nexport function clearSelectedContestSubmissionGrade(): IClearSelectedContestSubmissionGradeActionType {\r\n    return { type: CLEAR_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ContestSubmissionTeacherModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_contest_submission_teachers\r\ninterface IAddContestSubmissionNotGradeActionType { type: string, contest_submission_teacher: IContestSubmissionTeacher };\r\ninterface IEditContestSubmissionNotGradeActionType { type: string, contest_submission_teacher: IContestSubmissionTeacher };\r\ninterface IRemoveContestSubmissionNotGradeActionType { type: string, id: any };\r\ninterface IChangeSelectedContestSubmissionNotGradeActionType { type: string, contest_submission_teacher: IContestSubmissionTeacher };\r\ninterface IClearSelectedContestSubmissionNotGradeActionType { type: string };\r\ninterface IRemoveContestSubmissionNotGradeAllActionType { type: string }\r\ninterface IInitialContestSubmissionNotGradeActionType {type: string, contest_submission_teacher: IContestSubmissionTeacher}\r\n\r\n// not_register_contest_submission_teachers\r\ninterface IAddContestSubmissionGradeActionType { type: string, contest_submission_teacher: IContestSubmissionTeacher };\r\ninterface IEditContestSubmissionGradeActionType { type: string, contest_submission_teacher: IContestSubmissionTeacher };\r\ninterface IRemoveContestSubmissionGradeActionType { type: string, id: any };\r\ninterface IChangeSelectedContestSubmissionGradeActionType { type: string, contest_submission_teacher: IContestSubmissionTeacher };\r\ninterface IClearSelectedContestSubmissionGradeActionType { type: string };\r\ninterface IRemoveContestSubmissionGradeAllActionType { type: string }\r\ninterface IInitialContestSubmissionGradeActionType {type: string, contest_submission_teacher: IContestSubmissionTeacher}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ContestSubmissionTeacherModificationStatus};","import { fetchDataSuccess, fetchDataError, removeContestSubmissionGradeAll, removeContestSubmissionNotGradeAll, addContestSubmissionGrade, addContestSubmissionNotGrade } from \"../../../store/actions/contest_submission_teacher.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ContestSubmission {\r\n    id: any;\r\n    student_id: number;\r\n    contest_id: number;\r\n    student_name: string;\r\n    contest_name: string;\r\n    image_url: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getContestSubmissionByContestAndTeacher(dispatch: any, contest_id: number, teacher_id: number) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest-submission/contest-teacher/${contest_id}/${teacher_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getContestSubmissionByContestAndTeacher(dispatch, contest_id, teacher_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeContestSubmissionGradeAll())\r\n                dispatch(removeContestSubmissionNotGradeAll())\r\n                console.log(data.body.contest_submission_not_grade)\r\n                data.body.contest_submission_not_grade.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var contest_submission_teacher: ContestSubmission = {\r\n                        id: ele.id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        contest_id: ele.contest_id,\r\n                        contest_name: ele.contest_name,\r\n                        image_url: ele.image_url,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    return dispatch(addContestSubmissionNotGrade(contest_submission_teacher));\r\n                })\r\n\r\n                data.body.contest_submission_grade.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var contest_submission_teacher: ContestSubmission = {\r\n                        id: ele.id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        contest_id: ele.contest_id,\r\n                        contest_name: ele.contest_name,\r\n                        image_url: ele.image_url,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    return dispatch(addContestSubmissionGrade(contest_submission_teacher));\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IContestSubmissionTeacherState, IStateType } from \"../../store/models/root.interface\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getContestSubmissionByContestAndTeacher } from \"../../common/service/ContestSubmission/GetContestSubmissonForTeacherAndContest\";\r\nimport { GrLinkDown } from \"react-icons/gr\";\r\n\r\nconst ContestDetailTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const contest_submissions: IContestSubmissionTeacherState = useSelector((state: IStateType) => state.contest_submission_teacher);\r\n    const numberNotGradedCount: number = contest_submissions.contest_submission_not_grade.length;\r\n    const numberGradedCount: number = contest_submissions.contest_submission_grade.length;\r\n\r\n\r\n    var contest_description = localStorage.getItem('contest_description');\r\n    var contest_description_: string = \"\";\r\n    if (contest_description !== null) {\r\n        contest_description_ = contest_description;\r\n    }\r\n\r\n    var contest_name = localStorage.getItem('contest_name');\r\n    var contest_name_: string = \"\";\r\n    if (contest_name !== null) {\r\n        contest_name_ = contest_name;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('contest_id');\r\n    let contest_id = 0;\r\n\r\n    if (id_y !== null) {\r\n        contest_id = parseInt(id_y);\r\n    }\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    let id = 0;\r\n\r\n    if (id_x !== null) {\r\n        id = parseInt(id_x);\r\n    }\r\n\r\n    var id_z = localStorage.getItem('max_participant');\r\n    let max_participant = 0;\r\n\r\n    if (id_z !== null) {\r\n        max_participant = parseInt(id_z);\r\n    }\r\n\r\n    var id_t = localStorage.getItem('art_type_contest');\r\n    let art_type_contest: string = \"\";\r\n\r\n    if (id_t !== null) {\r\n        art_type_contest = id_t;\r\n    }\r\n\r\n    var id_h = localStorage.getItem('art_age_contest');\r\n    let art_age_contest: string = \"\";\r\n\r\n    if (id_h !== null) {\r\n        art_age_contest = id_h;\r\n    }\r\n\r\n    var id_k = localStorage.getItem('registration_time');\r\n    let registration_time: string = \"\";\r\n\r\n    if (id_k !== null) {\r\n        registration_time = id_k;\r\n    }\r\n\r\n    var id_l = localStorage.getItem('start_time');\r\n    let start_time: string = \"\";\r\n\r\n    if (id_l !== null) {\r\n        start_time = id_l;\r\n    }\r\n\r\n    var id_m = localStorage.getItem('end_time');\r\n    let end_time: string = \"\";\r\n\r\n    if (id_m !== null) {\r\n        end_time = id_m;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getContestSubmissionByContestAndTeacher(dispatch, contest_id, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getContestSubmissionByContestAndTeacher(dispatch, contest_id, id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, contest_id, id]);\r\n\r\n\r\n\r\n    const history = useHistory();\r\n    const routeChange = () => {\r\n        let path = '/contest/grade';\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    const routeChange1 = () => {\r\n        let path = '/contest/result-grade';\r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    function handleClick() {\r\n        setChecked(!checked)\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                <div className=\"row\">\r\n                    <TopCard title=\"SỐ BÀI ĐÃ CHẤM\" text={`${numberGradedCount}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"CHƯA CHẤM\" text={`${numberNotGradedCount}`} icon=\"book\" class=\"danger\" />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"card shadow mb-4\">\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                                <div className=\"text-xs font-weight-bold text-green text-uppercase \">\r\n                                    <p className=\"fullname ml-4 mt-4\">{contest_name}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-6 col-md-6\">\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"text-xs \">\r\n                                            <p className=\"birthday ml-4\">Độ tuổi đăng kí: {art_age_contest}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"text-xs\">\r\n                                            <p className=\"birthday ml-4\">Thể loại: {art_type_contest}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"text-xs\">\r\n                                            <p className=\"birthday ml-4\">Thời gian đăng kí: {registration_time.replaceAll(\"T\", \" \")}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-xl-6 col-md-6\">\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"text-xs \">\r\n                                            <p className=\"birthday\">Thời gian bắt đầu: {start_time.replaceAll(\"T\", \" \")}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"text-xs\">\r\n                                            <p className=\"birthday\">Thời gian kết thúc: {end_time.replaceAll(\"T\", \" \")}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"text-xs\">\r\n                                            <p className=\"birthday\">Số người tham gia tối đa: {max_participant}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\" id=\"btn-register-course\">\r\n                    <div className=\"col-lg-12 col-md-12 col-xs-12 text-center justify-content-center\">\r\n                        <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course4\" onClick={() => handleClick()}>\r\n                            <GrLinkDown id=\"btn-payment\" color=\"#ffffff\" />\r\n                            Xem miêu tả\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    function () {\r\n                        if (checked === true) {\r\n                            return (\r\n                                <div className=\"col-xl-12 col-lg-12\">\r\n                                    <div className=\"card-header py-3\">\r\n                                        <h6 className=\"m-0 font-weight-bold text-green\">Chi tiết</h6>\r\n                                    </div>\r\n                                    <div className=\"card shadow mb-4\">\r\n                                        <div className=\"card-body\" dangerouslySetInnerHTML={{ __html: contest_description_ }}>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }()\r\n                }\r\n\r\n                {\r\n                    function () {\r\n                        if (numberNotGradedCount === 0) {\r\n                            return (\r\n                                <div className=\"row justify-content-center mb-4\">\r\n                                    <button\r\n                                        className=\"btn btn-success btn-green\"\r\n                                        id=\"btn-into-class-student\"\r\n                                        onClick={() => { routeChange1() }}\r\n                                    >\r\n                                        Xem điểm\r\n                                        <i className={`fas fa-arrow-right fa-1x`} id=\"icon-arrow-right\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        else {\r\n                            return (\r\n                                <div className=\"row justify-content-center mb-4\">\r\n                                    <button\r\n                                        className=\"btn btn-success btn-green\"\r\n                                        id=\"btn-into-class-student\"\r\n                                        onClick={() => { routeChange() }}\r\n                                    >\r\n                                        Chấm bài\r\n                                        <i className={`fas fa-arrow-right fa-1x`} id=\"icon-arrow-right\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }()\r\n                }\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default ContestDetailTeacher;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/semester.actions\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postUserGradeContestSubmission(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-grade-contest-submission`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postUserGradeContestSubmission(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Chấm điểm bài tập thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Chấm điểm bài tập không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IContestSubmissionTeacherState, IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./GradeContestTeacher.css\"\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport NumberInput from \"../../common/components/NumberInput\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { postUserGradeContestSubmission } from \"../../common/service/UserGradeContestSubmission/PostUserGradeContestSubmission\";\r\nimport { getContestSubmissionByContestAndTeacher } from \"../../common/service/ContestSubmission/GetContestSubmissonForTeacherAndContest\";\r\n\r\n\r\nconst GradeContestTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const contest_submissions: IContestSubmissionTeacherState = useSelector((state: IStateType) => state.contest_submission_teacher);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const { promiseInProgress } = usePromiseTracker();\r\n    let user_grade_contest_submission = {\r\n        feedback: \"\",\r\n        score: 0\r\n    }\r\n\r\n    const [formState, setFormState] = useState({\r\n        feedback: { error: \"\", value: user_grade_contest_submission.feedback },\r\n        score: { error: \"\", value: user_grade_contest_submission.score },\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    let id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x\r\n    }\r\n\r\n    function saveForm(){\r\n        const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n        \r\n        if (contest_submission_id === \"\"){\r\n            let y = contest_submissions.contest_submission_not_grade[0].id;\r\n            console.log({\r\n                teacher_id: id,\r\n                contest_submission_id: y,\r\n                score: formState.score.value,\r\n                feedback: formState.feedback.value\r\n            })\r\n\r\n            dispatch(postUserGradeContestSubmission({\r\n                teacher_id: id,\r\n                contest_submission_id: y,\r\n                score: formState.score.value,\r\n                feedback: formState.feedback.value\r\n            }, idx))\r\n        }\r\n        else {\r\n            dispatch(postUserGradeContestSubmission({\r\n                teacher_id: id,\r\n                contest_submission_id: contest_submission_id,\r\n                score: formState.score.value,\r\n                feedback: formState.feedback.value\r\n            }, idx))\r\n        }\r\n    }\r\n    \r\n    var id_y = localStorage.getItem('contest_id');\r\n    let contest_id = 0;\r\n\r\n    if (id_y !== null) {\r\n        contest_id = parseInt(id_y);\r\n    }\r\n    \r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getContestSubmissionByContestAndTeacher(dispatch, contest_id, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getContestSubmissionByContestAndTeacher(dispatch, contest_id, id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, contest_id, id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Bài tập\", \"Chi tiết\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    const history = useHistory();\r\n    const routeChange = () => {\r\n        let x = count + 1;\r\n        setCount(x);\r\n        if (x < contest_submissions.contest_submission_not_grade.length){\r\n            let image_url_ = contest_submissions.contest_submission_not_grade[x].image_url;\r\n            let student_name_ = contest_submissions.contest_submission_not_grade[x].student_name;\r\n            let time_submit_ = contest_submissions.contest_submission_not_grade[x].update_time;\r\n            let contest_submission_id_ = contest_submissions.contest_submission_not_grade[x].id;\r\n            setImageUrl(image_url_);\r\n            setStudentName(student_name_);\r\n            setTimeSubmit(time_submit_);\r\n            setContestSubmissionTeacherId(contest_submission_id_);\r\n        }\r\n    }\r\n\r\n    const routeChange1 = () => {\r\n        let path = '/contest/result-grade';\r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    const [count, setCount] = useState(0);\r\n    const [image_url, setImageUrl] = useState(\"\");\r\n    const [student_name, setStudentName] = useState(\"\");\r\n    const [contest_submission_id, setContestSubmissionTeacherId] = useState(\"\");\r\n    const [time_submit, setTimeSubmit] = useState(\"\");\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6\">\r\n                    <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Bài làm của bé</h6>\r\n                    </div>\r\n                    {\r\n                        function () {\r\n                            if (count > 0)\r\n                                return (\r\n                                    <img className=\"card-img-top\" src={image_url} alt=\"\" />\r\n                                )\r\n                            else {\r\n                                if (contest_submissions.contest_submission_not_grade.length > 0) {\r\n                                    return (\r\n                                        <img className=\"card-img-top\" src={contest_submissions.contest_submission_not_grade[0].image_url} alt=\"\" />\r\n                                    )\r\n                                }\r\n                            }\r\n                        }()\r\n                    }\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6\">\r\n                    <div className=\"row\">\r\n                        <div className={`card shadow h-100 py-2 ml-4 mr-4`} id=\"topcard-user\">\r\n                            {\r\n                                function () {\r\n                                    if (count > 0)\r\n                                        return (\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"row no-gutters justify-content-left\">\r\n                                                    <h4 id=\"full-name\">Thông tin bài nộp</h4>\r\n                                                </div>\r\n                                                <div className=\"row no-gutters justify-content-left\">\r\n                                                    <p id=\"username-teacher\">Tên học sinh: {student_name}</p>\r\n                                                </div>\r\n                                                <div className=\"row no-gutters justify-content-left\">\r\n                                                    <p id=\"username-teacher\">Thời gian nộp: {time_submit}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    else {\r\n                                        if (contest_submissions.contest_submission_not_grade.length > 0) {\r\n                                            return (\r\n                                                <div className=\"card-body\">\r\n                                                    <div className=\"row no-gutters justify-content-left\">\r\n                                                        <h4 id=\"full-name\">Thông tin bài nộp</h4>\r\n                                                    </div>\r\n                                                    <div className=\"row no-gutters justify-content-left\">\r\n                                                        <p id=\"username-teacher\">Tên học sinh: {contest_submissions.contest_submission_not_grade[0].student_name}</p>\r\n                                                    </div>\r\n                                                    <div className=\"row no-gutters justify-content-left\">\r\n                                                        <p id=\"username-teacher\">Thời gian nộp: {contest_submissions.contest_submission_not_grade[0].update_time}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    }\r\n                                }()\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-4 ml-4\">\r\n                        <NumberInput \r\n                            id=\"input_score\"\r\n                            value={formState.score.value}\r\n                            field=\"score\"\r\n                            onChange={hasFormValueChanged}\r\n                            max={10}\r\n                            min={0}\r\n                            label=\"Nhập điểm\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Nhận xét</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                                <TextInput id=\"input_feedback\"\r\n                                    field=\"feedback\"\r\n                                    value={formState.feedback.value}\r\n                                    onChange={hasFormValueChanged}\r\n                                    required={false}\r\n                                    maxLength={100}\r\n                                    label=\"\"\r\n                                    placeholder=\"\"\r\n                                />\r\n                            </div>\r\n                            <button className=\"btn btn-warning\" onClick={() => {saveForm()}}>Lưu</button>\r\n                            {\r\n                                function () {\r\n                                    if (count === contest_submissions.contest_submission_not_grade.length - 1) {\r\n                                        return (\r\n                                            <button className={`btn btn-success left-margin`} onClick={() => { routeChange1() }}>Hoàn thành</button>\r\n                                        )\r\n                                    }\r\n                                    else {\r\n                                        return (\r\n                                            <button className={`btn btn-success left-margin`} onClick={() => { routeChange() }}>Bài tiếp</button>\r\n                                        )\r\n                                    }\r\n                                }()\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default GradeContestTeacher;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IUserGradeContestSubmissionState, IUserState } from \"../../store/models/root.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IUserGradeContestSubmission } from \"../../store/models/user_grade_contest_submission.interface\";\r\n\r\nfunction ScoreContestList(): JSX.Element {\r\n\r\n    const user_grade_contest_submissions: IUserGradeContestSubmissionState = useSelector((state: IStateType) => state.user_grade_contest_submissions);\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    let childs: IUserGradeContestSubmission[] = [];\r\n    users.students.map((ele, idx) => {\r\n        return user_grade_contest_submissions.userGradeContestSubmissions.map((element, idx) => {\r\n            if (ele.id === element.student_id) {\r\n                childs.push(element)\r\n            }\r\n            return element\r\n        })\r\n    })\r\n    const history = useHistory();\r\n\r\n    var role_privilege = localStorage.getItem('role_privilege')\r\n    var rolePrivilege: string[] = []\r\n    var roleUser: string = \"\"\r\n    if (role_privilege !== null) {\r\n        rolePrivilege = role_privilege.split(',')\r\n        roleUser = rolePrivilege[0]\r\n    }\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    let id: number = 0;\r\n    if (id_x !== null) {\r\n        id = parseInt(id_x)\r\n    }\r\n\r\n\r\n    const routeChange = (student: IUserGradeContestSubmission) => {\r\n        localStorage.removeItem(\"child_id\");\r\n        localStorage.setItem(\"child_id\", student.student_id.toString())\r\n        localStorage.setItem('score_contest', student.score.toString())\r\n        localStorage.setItem('feedback_contest', student.feedback.toString())\r\n        let path = '/contest/detail';\r\n        history.push(path);\r\n    }\r\n\r\n    console.log(user_grade_contest_submissions.userGradeContestSubmissions)\r\n\r\n\r\n    const parentElements: (JSX.Element | null)[] = user_grade_contest_submissions.userGradeContestSubmissions.sort((a, b) => b.score - a.score).map((student, idx) => {\r\n        if (!student) { return null; }\r\n        else if (childs.includes(student)) {\r\n            return (\r\n                <tr className=\"table-row\"\r\n                    key={`student_${idx}`} onClick={() => {routeChange(student)}}>\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\" >\r\n                        <div className={`card shadow h-100 py-0 child-row`}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-md-12 col-xs-12\">\r\n                                        <div className=\"row\">\r\n                                            <p className=\"col-xl-2 col-md-2 col-xs-2\"><span className=\"header-card-course-teacher\" id=\"index-infor-student-teacher\">{idx + 1}</span></p>\r\n                                            <i className={`col-xl-2 col-md-2 col-xs-2 fas fa-user-circle fa-2x`} id=\"icon-user\"></i>\r\n                                            <p className=\"col-xl-6 col-md-6 col-xs-6\" id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.student_name}</span></p>\r\n                                            <p className=\"col-xl-2 col-md-2 col-xs-2\" id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.score}</span></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </tr>\r\n            )\r\n        }\r\n        return (<tr className={`table-row`}\r\n            key={`student_${idx}`}>\r\n            <div className=\"col-xl-12 col-md-12 mb-4\" >\r\n                <div className={`card shadow h-100 py-0 content-student-teacher`} id=\"topcard-user\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-md-12 col-xs-12\">\r\n                                <div className=\"row\">\r\n                                    <p className=\"col-xl-2 col-md-2 col-xs-2\"><span className=\"header-card-course-teacher\" id=\"index-infor-student-teacher\">{idx + 1}</span></p>\r\n                                    <i className={`col-xl-2 col-md-2 col-xs-2 fas fa-user-circle fa-2x`} id=\"icon-user\"></i>\r\n                                    <p className=\"col-xl-6 col-md-6 col-xs-6\" id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.student_name}</span></p>\r\n                                    <p className=\"col-xl-2 col-md-2 col-xs-2\" id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.score}</span></p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    const studentElements: (JSX.Element | null)[] = user_grade_contest_submissions.userGradeContestSubmissions.sort((a, b) => b.score - a.score).map((student, idx) => {\r\n        if (!student) { return null; }\r\n        else if (student.student_id === id) {\r\n            return (\r\n                <tr className=\"table-row\"\r\n                    key={`student_${idx}`} onClick={() => {routeChange(student)}}>\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\" >\r\n                        <div className={`card shadow h-100 py-0 child-row`}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-md-12 col-xs-12\">\r\n                                        <div className=\"row\">\r\n                                            <p className=\"col-xl-2 col-md-2 col-xs-2\"><span className=\"header-card-course-teacher\" id=\"index-infor-student-teacher\">{idx + 1}</span></p>\r\n                                            <i className={`col-xl-2 col-md-2 col-xs-2 fas fa-user-circle fa-2x`} id=\"icon-user\"></i>\r\n                                            <p className=\"col-xl-6 col-md-6 col-xs-6\" id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.student_name}</span></p>\r\n                                            <p className=\"col-xl-2 col-md-2 col-xs-2\" id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.score}</span></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </tr>\r\n            )\r\n        }\r\n        return (<tr className={`table-row`}\r\n            key={`student_${idx}`}>\r\n            <div className=\"col-xl-12 col-md-12 mb-4\" >\r\n                <div className={`card shadow h-100 py-0 content-student-teacher`} id=\"topcard-user\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-md-12 col-xs-12\">\r\n                                <div className=\"row\">\r\n                                    <p className=\"col-xl-2 col-md-2 col-xs-2\"><span className=\"header-card-course-teacher\" id=\"index-infor-student-teacher\">{idx + 1}</span></p>\r\n                                    <i className={`col-xl-2 col-md-2 col-xs-2 fas fa-user-circle fa-2x`} id=\"icon-user\"></i>\r\n                                    <p className=\"col-xl-6 col-md-6 col-xs-6\" id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.student_name}</span></p>\r\n                                    <p className=\"col-xl-2 col-md-2 col-xs-2\" id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.score}</span></p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </tr>);\r\n    });\r\n\r\n    const teacherElements: (JSX.Element | null)[] = user_grade_contest_submissions.userGradeContestSubmissions.sort((a, b) => b.score - a.score).map((student, idx) => {\r\n        if (!student) { return null; }\r\n            return (\r\n                <tr className=\"table-row\"\r\n                    key={`student_${idx}`} onClick={() => {routeChange(student)}}>\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\" >\r\n                        <div className={`card shadow h-100 py-0 element-row`}>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-md-12 col-xs-12\">\r\n                                        <div className=\"row\">\r\n                                            <p className=\"col-xl-2 col-md-2 col-xs-2\"><span className=\"header-card-course-teacher\" id=\"index-infor-student-teacher\">{idx + 1}</span></p>\r\n                                            <i className={`col-xl-2 col-md-2 col-xs-2 fas fa-user-circle fa-2x`} id=\"icon-user\"></i>\r\n                                            <p className=\"col-xl-6 col-md-6 col-xs-6\" id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.student_name}</span></p>\r\n                                            <p className=\"col-xl-2 col-md-2 col-xs-2\" id=\"type-name-teacher\"><span className=\"header-card-course-teacher\">{student.score}</span></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </tr>\r\n            )\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"table-responsive portlet\">\r\n            <table className=\"table\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        function () {\r\n                            if (roleUser === \"STUDENT_USER\") {\r\n                                return studentElements\r\n                            }\r\n                            else if (roleUser === \"PARENT_USER\") {\r\n                                return parentElements\r\n                            }\r\n                            else {\r\n                                return teacherElements\r\n                            }\r\n                        }()\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ScoreContestList;\r\n","import { fetchDataSuccess, fetchDataError, removeStudentAll, initialStudent } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user {\r\n    id: any,\r\n    username: string,\r\n    email: string,\r\n    password: string,\r\n    status: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    dateOfBirth: string,\r\n    profile_image_url: string,\r\n    sex: string,\r\n    phone: string,\r\n    address: string,\r\n    parents: number,\r\n    createTime: string\r\n}\r\nexport function getStudentByParent(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/childs/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        postRefreshToken()\r\n                        getStudentByParent(dispatch, id)\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeStudentAll())\r\n                console.log(data.body.childs)\r\n                data.body.childs.map ((ele: any) => {\r\n                    var user: user = {\r\n                        id: ele.id,\r\n                        username: ele.username,\r\n                        email: ele.email,\r\n                        password: \"\",\r\n                        status: ele.status,\r\n                        firstName: ele.firstName,\r\n                        lastName: ele.lastName,\r\n                        dateOfBirth: ele.dateOfBirth,\r\n                        profile_image_url: ele.profile_image_url,\r\n                        sex: ele.sex,\r\n                        phone: ele.phone,\r\n                        address: ele.address,\r\n                        parents: ele.parents,\r\n                        createTime: ele.createTime\r\n                    }\r\n                    return dispatch(initialStudent(user));\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getUserGradeContestSubmissionByContestId } from \"../../common/service/UserGradeContestSubmission/GetUserGradeContestSubmissionByContest\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IStateType, IUserGradeContestSubmissionState } from \"../../store/models/root.interface\";\r\nimport ScoreContestList from \"./ScoreContestList\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getStudentByParent } from \"../../common/service/Student/GetStudentByParent\";\r\nimport ScoreContestListStudent from \"./ScoreContestListStudent\";\r\n\r\nconst ResultGradeContestTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const user_grade_contest_submissions: IUserGradeContestSubmissionState = useSelector((state: IStateType) => state.user_grade_contest_submissions);\r\n    const max = user_grade_contest_submissions.userGradeContestSubmissions.reduce((a, b) => Math.max(a, b.score), -Infinity);\r\n    const min = user_grade_contest_submissions.userGradeContestSubmissions.reduce((a, b) => Math.min(a, b.score), 0);\r\n\r\n    var role_privilege = localStorage.getItem('role_privilege')\r\n    var rolePrivilege: string[] = []\r\n    var roleUser: string = \"\"\r\n    if (role_privilege !== null) {\r\n        rolePrivilege = role_privilege.split(',')\r\n        roleUser = rolePrivilege[0]\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    var id_y = localStorage.getItem('contest_id');\r\n    let contest_id = 0;\r\n\r\n    if (id_y !== null) {\r\n        contest_id = parseInt(id_y);\r\n    }\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getStudentByParent(dispatch, id))\r\n                    trackPromise(getUserGradeContestSubmissionByContestId(dispatch, contest_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getStudentByParent(dispatch, id))\r\n                trackPromise(getUserGradeContestSubmissionByContestId(dispatch, contest_id))\r\n            }\r\n        }\r\n        dispatch(updateCurrentPath(\"Cuoc thi\", \"Chi tiết\"));\r\n    }, [dispatch, access_token, refresh_token, contest_id, id]);\r\n\r\n\r\n    const history = useHistory();\r\n    const onRouteChange = () => {\r\n        let path = '/contest/result-analytis';\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n\r\n                <div className=\"row\">\r\n                    <TopCard title=\"ĐIỂM CAO NHẤT\" text={`${max}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"ĐIỂM THẤP NHẤT\" text={`${min}`} icon=\"book\" class=\"danger\" />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n\r\n                    {\r\n                        function () {\r\n                            if (roleUser === \"TEACHER_USER\") {\r\n                                return (\r\n                                    <div className=\"col-xl-8 col-md-8 mb-4\">\r\n                                        <h3 className=\" mb-2\" id=\"level-teacher\">Danh sách học sinh</h3>\r\n                                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                            <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                                <div className=\"card-body\">\r\n                                                    <ScoreContestList />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n\r\n                            else if (roleUser === \"PARENT_USER\") {\r\n                                return (\r\n                                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                        <h3 className=\" mb-2\" id=\"level-teacher\">Bảng xếp hạng</h3>\r\n                                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                            <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                                <div className=\"card-body\">\r\n                                                    <ScoreContestList />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n\r\n                            else if (roleUser === \"STUDENT_USER\") {\r\n                                return (\r\n                                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                        <h3 className=\" mb-2\" id=\"level-teacher\">Bảng xếp hạng</h3>\r\n                                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                            <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                                <div className=\"card-body\">\r\n                                                    <ScoreContestList />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n\r\n                        }()\r\n                    }\r\n\r\n                    {\r\n                        function () {\r\n                            if (roleUser === \"TEACHER_USER\") {\r\n                                return (\r\n                                    <div className=\"col-xl-4 col-md-4 mb-4\">\r\n                                        <div className=\"row justify-content-center\">\r\n                                            <button className=\"btn btn-success btn-green\" id=\"btn-into-class\" onClick={() => {\r\n                                                onRouteChange()\r\n                                            }}>\r\n                                                Xem review\r\n                                                <i className=\"fas fa fa-arrow-right\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                        {/* <TopCardLevel title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`2`} icon=\"book\" class=\"primary\" />\r\n                                    <TopCardLevel title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`1`} icon=\"book\" class=\"danger\" /> */}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        }()\r\n                    }\r\n                </div>\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default ResultGradeContestTeacher;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ChartLine } from \"../../common/components/CharLine\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getUserGradeContestByContestId } from \"../../common/service/UserGradeContest/GetUserGradeContestByContestId\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IRootPageStateType, IStateType, IUserGradeContestSubmissionState } from \"../../store/models/root.interface\";\r\nimport ScoreContestList from \"./ScoreContestList\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\n\r\nconst AnalytisResultGradeContestTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const user_grade_contest_submissions: IUserGradeContestSubmissionState  = useSelector((state: IStateType) => state.user_grade_contest_submissions);\r\n    const max = user_grade_contest_submissions.userGradeContestSubmissions.reduce((a, b) => Math.max(a, b.score), -Infinity);\r\n    const min = user_grade_contest_submissions.userGradeContestSubmissions.reduce((a, b) => Math.min(a, b.score), 0);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n\r\n    let student: string[] = []\r\n    let scores: number[] = []\r\n    if (user_grade_contest_submissions.userGradeContestSubmissions.length > 0){\r\n        user_grade_contest_submissions.userGradeContestSubmissions.map(ele => {\r\n            student.push(ele.student_name)\r\n            scores.push(ele.score)\r\n            return ele\r\n        })\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    var id_x = localStorage.getItem('class_id');\r\n    var class_id: number = 0;\r\n    if (id_x !== null) {\r\n        class_id = parseInt(id_x);\r\n    }\r\n\r\n    var id_y = localStorage.getItem('contest_id');\r\n    let contest_id = 0;\r\n\r\n    if (id_y !== null) {\r\n        contest_id = parseInt(id_y);\r\n    }\r\n\r\n    const labels = student;\r\n    let data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Điêm',\r\n                data: scores,\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            }\r\n        ],\r\n    };\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getUserGradeContestByContestId(dispatch, contest_id))\r\n                }\r\n            }\r\n            else {   \r\n                trackPromise(getUserGradeContestByContestId(dispatch, contest_id))\r\n            }\r\n        }\r\n    }, [dispatch, contest_id, class_id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp\", \"Chi tiết\"));\r\n    }, [path.area, dispatch])\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"ĐIỂM CAO NHẤT\" text={`${max}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"ĐIỂM THẤP NHẤT\" text={`${min}`} icon=\"book\" class=\"danger\" />\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <h3 className=\" mb-2\" id=\"level-teacher\">Danh sách học sinh</h3>\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                        <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                            <div className=\"card-body\">\r\n                                <ScoreContestList />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <ChartLine data={data} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default AnalytisResultGradeContestTeacher;\r\n\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IContestSubmissionTeacherState, IStateType } from \"../../store/models/root.interface\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getContestSubmissionByContestAndTeacher } from \"../../common/service/ContestSubmission/GetContestSubmissonForTeacherAndContest\";\r\nimport { GrLinkDown } from \"react-icons/gr\";\r\n\r\nconst DetailContestTeacher: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const contest_submissions: IContestSubmissionTeacherState = useSelector((state: IStateType) => state.contest_submission_teacher);\r\n    const numberNotGradedCount: number = contest_submissions.contest_submission_not_grade.length;\r\n    const numberGradedCount: number = contest_submissions.contest_submission_grade.length;\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n\r\n    var contest_description = localStorage.getItem('contest_description');\r\n    var contest_description_: string = \"\";\r\n    if (contest_description !== null) {\r\n        contest_description_ = contest_description;\r\n    }\r\n\r\n    var contest_name = localStorage.getItem('contest_name');\r\n    var contest_name_: string = \"\";\r\n    if (contest_name !== null) {\r\n        contest_name_ = contest_name;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('contest_id');\r\n    let contest_id = 0;\r\n\r\n    if (id_y !== null) {\r\n        contest_id = parseInt(id_y);;\r\n    }\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    let id = 0;\r\n\r\n    if (id_x !== null) {\r\n        id = parseInt(id_x);\r\n    }\r\n\r\n\r\n    var id_z = localStorage.getItem('max_participant');\r\n    let max_participant = 0;\r\n\r\n    if (id_z !== null) {\r\n        max_participant = parseInt(id_z);\r\n    }\r\n\r\n    var id_t = localStorage.getItem('art_type_contest');\r\n    let art_type_contest: string = \"\";\r\n\r\n    if (id_t !== null) {\r\n        art_type_contest = id_t;\r\n    }\r\n\r\n    var id_h = localStorage.getItem('art_age_contest');\r\n    let art_age_contest: string = \"\";\r\n\r\n    if (id_h !== null) {\r\n        art_age_contest = id_h;\r\n    }\r\n\r\n    var id_k = localStorage.getItem('registration_time');\r\n    let registration_time: string = \"\";\r\n\r\n    if (id_k !== null) {\r\n        registration_time = id_k;\r\n    }\r\n\r\n    var id_l = localStorage.getItem('start_time');\r\n    let start_time: string = \"\";\r\n\r\n    if (id_l !== null) {\r\n        start_time = id_l;\r\n    }\r\n\r\n    var id_m = localStorage.getItem('end_time');\r\n    let end_time: string = \"\";\r\n\r\n    if (id_m !== null) {\r\n        end_time = id_m;\r\n    }\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    function handleClick() {\r\n        setChecked(!checked)\r\n    }\r\n\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getContestSubmissionByContestAndTeacher(dispatch, contest_id, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getContestSubmissionByContestAndTeacher(dispatch, contest_id, id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, contest_id, id]);\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                <div className=\"row\">\r\n                    <TopCard title=\"SỐ BÀI ĐÃ NỘP\" text={`${numberGradedCount + numberNotGradedCount}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"SỐ BÀI ĐÃ CHẤM\" text={`${numberGradedCount}`} icon=\"book\" class=\"primary\" />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"card shadow mb-4\">\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                                <div className=\"text-xs font-weight-bold text-green text-uppercase \">\r\n                                    <p className=\"fullname ml-4 mt-4\">{contest_name}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-6 col-md-6\">\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"text-xs \">\r\n                                            <p className=\"birthday ml-4\">Độ tuổi đăng kí: {art_age_contest}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"text-xs\">\r\n                                            <p className=\"birthday ml-4\">Thể loại: {art_type_contest}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"text-xs\">\r\n                                            <p className=\"birthday ml-4\">Thời gian đăng kí: {registration_time}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-xl-6 col-md-6\">\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"text-xs \">\r\n                                            <p className=\"birthday\">Thời gian bắt đầu: {start_time}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"text-xs\">\r\n                                            <p className=\"birthday\">Thời gian kết thúc: {end_time}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"text-xs\">\r\n                                            <p className=\"birthday\">Số người tham gia tối đa: {max_participant}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\" id=\"btn-register-course\">\r\n                    <div className=\"col-lg-12 col-md-12 col-xs-12 text-center justify-content-center\">\r\n                        <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course4\" onClick={() => handleClick()}>\r\n                            <GrLinkDown id=\"btn-payment\" color=\"#ffffff\" />\r\n                            Xem miêu tả\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    function () {\r\n                        if (checked === true) {\r\n                            return (\r\n                                <div className=\"col-xl-12 col-lg-12\">\r\n                                    <div className=\"card-header py-3\">\r\n                                        <h6 className=\"m-0 font-weight-bold text-green\">Chi tiết</h6>\r\n                                    </div>\r\n                                    <div className=\"card shadow mb-4\">\r\n                                        <div className=\"card-body\" dangerouslySetInnerHTML={{ __html: contest_description_ }}>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }()\r\n                }\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default DetailContestTeacher;\r\n","import React, { Fragment, Dispatch } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\n\r\nconst NotificationDetail: React.FC = () => {\r\n\r\n\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  dispatch(updateCurrentPath(\"Thông báo\", \"Chi tiết\"));\r\n\r\n  var id_x = localStorage.getItem('notification_name');\r\n  let notification_name = \"\";\r\n  if (id_x !== null){\r\n    notification_name = id_x;\r\n  }\r\n\r\n  var id_y = localStorage.getItem('notification_desciption');\r\n  let notification_desciption = \"\";\r\n  if (id_y !== null){\r\n    notification_desciption = id_y;\r\n  }\r\n\r\n  var id_z = localStorage.getItem('notification_time');\r\n  let notification_time = \"\";\r\n  if (id_z !== null){\r\n    notification_time = id_z;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-green\">{notification_name}</h6>\r\n              <div className=\"header-buttons\">\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <p>{notification_desciption}</p>\r\n                <p>{notification_time}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment >\r\n  );\r\n};\r\n\r\nexport default NotificationDetail;","import { INotifyDb, NotifyDbModificationStatus } from \"../models/notify_db.interface\";\r\nexport const ADD_NOTIFY_DB: string = \"ADD_NOTIFY_DB\";\r\nexport const EDIT_NOTIFY_DB: string = \"EDIT_NOTIFY_DB\";\r\nexport const REMOVE_NOTIFY_DB: string = \"REMOVE_NOTIFY_DB\";\r\nexport const CHANGE_NOTIFY_DB_AMOUNT: string = \"CHANGE_NOTIFY_DB_AMOUNT\";\r\nexport const CHANGE_NOTIFY_DB_PENDING_EDIT: string = \"CHANGE_NOTIFY_DB_PENDING_EDIT\";\r\nexport const CLEAR_NOTIFY_DB_PENDING_EDIT: string = \"CLEAR_NOTIFY_DB_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_NOTIFY_DB_ALL: string = \"REMOVE_NOTIFY_DB_ALL\";\r\nexport const INITIAL_NOTIFY_DB: string = \"INITIAL_NOTIFY_DB\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(notify_db: INotifyDb) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        notify_db\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialNotifyDb(notify_db: INotifyDb): IInitialNotifyDbActionType {\r\n    return { type: INITIAL_NOTIFY_DB, notify_db: notify_db };\r\n}\r\n\r\nexport function removeNotifyDbAll(): IRemoveNotifyDbAllActionType {\r\n    return { type: REMOVE_NOTIFY_DB_ALL };\r\n}\r\n\r\nexport function addNotifyDb(notify_db: INotifyDb): IAddNotifyDbActionType {\r\n    return { type: ADD_NOTIFY_DB, notify_db: notify_db };\r\n}\r\n\r\nexport function editNotifyDb(notify_db: INotifyDb): IEditNotifyDbActionType {\r\n    return { type: EDIT_NOTIFY_DB, notify_db: notify_db };\r\n}\r\n\r\nexport function removeNotifyDb(id: any): IRemoveNotifyDbActionType {\r\n    return { type: REMOVE_NOTIFY_DB, id: id };\r\n}\r\n\r\nexport function changeSelectedNotifyDb(notify_db: INotifyDb): IChangeSelectedNotifyDbActionType {\r\n    return { type: CHANGE_NOTIFY_DB_PENDING_EDIT, notify_db: notify_db };\r\n}\r\n\r\nexport function clearSelectedNotifyDb(): IClearSelectedNotifyDbActionType {\r\n    return { type: CLEAR_NOTIFY_DB_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: NotifyDbModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddNotifyDbActionType { type: string, notify_db: INotifyDb };\r\ninterface IEditNotifyDbActionType { type: string, notify_db: INotifyDb };\r\ninterface IRemoveNotifyDbActionType { type: string, id: any };\r\ninterface IChangeSelectedNotifyDbActionType { type: string, notify_db: INotifyDb };\r\ninterface IClearSelectedNotifyDbActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  NotifyDbModificationStatus};\r\ninterface IRemoveNotifyDbAllActionType { type: string }\r\ninterface IInitialNotifyDbActionType {type: string, notify_db: INotifyDb}","import { fetchDataRequest, fetchDataError, removeNotifyDbAll, initialNotifyDb } from \"../../../store/actions/notify_db.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface NotifyDb {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    time: string;\r\n}\r\nexport function getNotifyDb() {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/notification-database`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getNotifyDb())\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(removeNotifyDbAll())\r\n                console.log(data.body.notifications)\r\n                data.body.notifications.map((ele: any, index: any) => {\r\n                    let notificationDb: NotifyDb = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        time: ele.time\r\n                    }\r\n                    console.log(ele)\r\n                    return dispatch(initialNotifyDb(notificationDb))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","export interface IChild {\r\n    id: any,\r\n    username: string,\r\n    email: string,\r\n    password: string,\r\n    status: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    dateOfBirth: string,\r\n    profile_image_url: string,\r\n    sex: string,\r\n    phone: string,\r\n    total_course: number;\r\n    total_contest: number;\r\n    address: string,\r\n    parents: number,\r\n    createTime: string\r\n}\r\n\r\nexport enum ChildModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4,\r\n    ImportFile = 5\r\n}","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getNotifyDb } from \"../../common/service/NotifyDb/GetNotifyDb\";\r\nimport { getUserReadNotification } from \"../../common/service/UserReadNotification/GetUserReadNotificationByUser\";\r\nimport { putUserReadNotification } from \"../../common/service/UserReadNotification/PutUserReadNotification\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { INotifyDbState, IStateType, IUserReadNotificationState } from \"../../store/models/root.interface\";\r\nimport './Notification.css'\r\n\r\ntype Options = {\r\n    notification_id: number;\r\n    user_id: number;\r\n    notification_name: string;\r\n    notification_desciption: string;\r\n    notification_time: string;\r\n    is_read: boolean;\r\n}\r\n\r\nconst Notification: React.FC = () => {\r\n\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    dispatch(updateCurrentPath(\"Thông báo\", \"Danh sách\"));\r\n\r\n    const notificationDbs: INotifyDbState = useSelector((state: IStateType) => state.notify_dbs);\r\n    const user_read_notifications: IUserReadNotificationState = useSelector((state: IStateType) => state.user_read_notifications);\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    let user_id: number = 0;\r\n    if (id_x !== null) {\r\n        user_id = parseInt(id_x)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getNotifyDb())\r\n        dispatch(getUserReadNotification(user_id))\r\n    }, [dispatch, user_id])\r\n\r\n    let data_not_read: Options[] = [];\r\n    user_read_notifications.user_not_readed_notifications.map((ele, idx) => {\r\n        let notification = notificationDbs.notify_dbs.find(o => o.id = ele.notification_id);\r\n        if (notification !== undefined) {\r\n            let item: Options = {\r\n                notification_id: ele.notification_id,\r\n                notification_name: notification.name,\r\n                user_id: ele.user_id,\r\n                notification_time: notification.time,\r\n                notification_desciption: notification.description,\r\n                is_read: ele.is_read\r\n            }\r\n            return data_not_read.push(item)\r\n        }\r\n        return idx\r\n    })\r\n\r\n    let data_readed: Options[] = [];\r\n    user_read_notifications.user_readed_notifications.map((ele, idx) => {\r\n        let notification = notificationDbs.notify_dbs.find(o => o.id = ele.notification_id);\r\n        if (notification !== undefined) {\r\n            let item: Options = {\r\n                notification_id: ele.notification_id,\r\n                notification_name: notification.name,\r\n                user_id: ele.user_id,\r\n                notification_time: notification.time,\r\n                notification_desciption: notification.description,\r\n                is_read: ele.is_read\r\n            }\r\n            return data_readed.push(item)\r\n        }\r\n        return idx\r\n    })\r\n\r\n    const history = useHistory();\r\n    const routeChange = (props: Options) => {\r\n        dispatch(putUserReadNotification({\r\n            user_id: user_id,\r\n            notification_id: props.notification_id,\r\n            is_read: true\r\n        }))\r\n        localStorage.removeItem('notification_id');\r\n        localStorage.setItem('notification_id', props.notification_id.toString());\r\n        localStorage.removeItem('user_id');\r\n        localStorage.setItem('user_id', props.user_id.toString());\r\n        localStorage.removeItem('notification_name');\r\n        localStorage.setItem('notification_name', props.notification_name);\r\n        localStorage.removeItem('notification_desciption');\r\n        localStorage.setItem('notification_desciption', props.notification_desciption);\r\n        localStorage.removeItem('notification_time');\r\n        localStorage.setItem('notification_time', props.notification_time);\r\n        let path = '/notification/detail';\r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"h3 mb-2 text-gray-800\">Danh sách thông báo</h1>\r\n            {\r\n                data_not_read.map((ele, idx) => {\r\n                    return (\r\n                        <div className=\"row\" onClick={() => {\r\n                            routeChange(ele)\r\n                        }}>\r\n                            <div className=\"col-xl-12 col-lg-12\">\r\n                                <div className=\"card shadow mb-4\">\r\n                                    <div className=\"card-header py-3\">\r\n                                        <h6 className=\"m-0 font-weight-bold text-green\">{ele.notification_name}</h6>\r\n                                        <div className=\"header-buttons\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card-body has-view\">\r\n                                        <p>{ele.notification_time}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n\r\n\r\n            {\r\n                data_readed.map((ele, idx) => {\r\n                    return (\r\n                        <div className=\"row\" onClick={() => {\r\n                            routeChange(ele)\r\n                        }}>\r\n                            <div className=\"col-xl-12 col-lg-12\">\r\n                                <div className=\"card shadow mb-4\">\r\n                                    <div className=\"card-header py-3\">\r\n                                        <h6 className=\"m-0 font-weight-bold text-green\">{ele.notification_name}</h6>\r\n                                        <div className=\"header-buttons\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <p>{ele.notification_time}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default Notification;\r\n","import { IChild, ChildModificationStatus } from \"../models/child.interface\";\r\nexport const ADD_CHILD: string = \"ADD_CHILD\";\r\nexport const EDIT_CHILD: string = \"EDIT_CHILD\";\r\nexport const REMOVE_CHILD: string = \"REMOVE_CHILD\";\r\nexport const CHANGE_CHILD_AMOUNT: string = \"CHANGE_CHILD_AMOUNT\";\r\nexport const CHANGE_CHILD_PENDING_EDIT: string = \"CHANGE_CHILD_PENDING_EDIT\";\r\nexport const CLEAR_CHILD_PENDING_EDIT: string = \"CLEAR_CHILD_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_CHILD_ALL: string = \"REMOVE_CHILD_ALL\";\r\nexport const INITIAL_CHILD: string = \"INITIAL_CHILD\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(child: IChild) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        child\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialChild(child: IChild): IInitialChildActionType {\r\n    return { type: INITIAL_CHILD, child: child };\r\n}\r\n\r\nexport function removeChildAll(): IRemoveChildAllActionType {\r\n    return { type: REMOVE_CHILD_ALL };\r\n}\r\n\r\nexport function addChild(child: IChild): IAddChildActionType {\r\n    return { type: ADD_CHILD, child: child };\r\n}\r\n\r\nexport function editChild(child: IChild): IEditChildActionType {\r\n    return { type: EDIT_CHILD, child: child };\r\n}\r\n\r\nexport function removeChild(id: any): IRemoveChildActionType {\r\n    return { type: REMOVE_CHILD, id: id };\r\n}\r\n\r\nexport function changeSelectedChild(child: IChild): IChangeSelectedChildActionType {\r\n    return { type: CHANGE_CHILD_PENDING_EDIT, child: child };\r\n}\r\n\r\nexport function clearSelectedChild(): IClearSelectedChildActionType {\r\n    return { type: CLEAR_CHILD_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ChildModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddChildActionType { type: string, child: IChild };\r\ninterface IEditChildActionType { type: string, child: IChild };\r\ninterface IRemoveChildActionType { type: string, id: any };\r\ninterface IChangeSelectedChildActionType { type: string, child: IChild };\r\ninterface IClearSelectedChildActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ChildModificationStatus};\r\ninterface IRemoveChildAllActionType { type: string }\r\ninterface IInitialChildActionType {type: string, child: IChild}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IChildState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { editChild, clearSelectedChild, setModificationState, addChild } from \"../../store/actions/child.action\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IChild, ChildModificationStatus } from \"../../store/models/child.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { postUser } from \"../../common/service/User/PostUser\";\r\n\r\nexport type lessonListProps = {\r\n    isCheck: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\ntype Options = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\nfunction AccountChildForm(props: lessonListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const childs: IChildState | null = useSelector((state: IStateType) => state.childs);\r\n    let user: IChild | null = childs.selectedChild;\r\n    const isCreate: boolean = (childs.modificationState === ChildModificationStatus.Create);\r\n\r\n    if (!user || isCreate) {\r\n        user = { id: 0, total_contest: 0, total_course: 0,  username: \"\", email: \"\", status: \"\", password: \"\", firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: 0 }\r\n    }\r\n\r\n    const [formState, setFormState] = useState({\r\n        username: { error: \"\", value: user.username },\r\n        email: { error: \"\", value: user.email },\r\n        password: { error: \"\", value: user.password },\r\n        birthday: { error: \"\", value: user.dateOfBirth }\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>) {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        props.isCheck(false);\r\n\r\n        let saveUserFn: Function = (isCreate) ? addChild : editChild;\r\n        saveForm(formState, saveUserFn);\r\n    }\r\n\r\n    function saveForm(formState: any, saveFn: Function): void {\r\n        if (user) {\r\n\r\n            const idx = toast.loading(\"Yêu cầu đang được gửi. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n\r\n            if (saveFn === addChild) {\r\n                dispatch(postUser({\r\n                    username: formState.username.value,\r\n                    password: formState.password.value,\r\n                    email: formState.email.value,\r\n                    firstName: null,\r\n                    lastName: null,\r\n                    dateOfBirth: formState.birthday.value,\r\n                    profile_image_url: null,\r\n                    sex: null,\r\n                    phone: null,\r\n                    address: null,\r\n                    parent_id: localStorage.getItem('id'),\r\n                    roleNames: [\"STUDENT_USER\"]\r\n                }, idx))\r\n            }\r\n\r\n            console.log(saveFn)\r\n\r\n            dispatch(clearSelectedChild());\r\n            dispatch(setModificationState(ChildModificationStatus.None));\r\n        }\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        props.isCheck(false);\r\n        dispatch(setModificationState(ChildModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.username.error || formState.email.error || formState.password.error\r\n            || !formState.username.value || !formState.email.value || !formState.password.value) as boolean;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow shadow-xx\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\" id=\"header-form-teacher-level\">Đăng kí tài khoản con</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-group\">\r\n\r\n                                    <TextInput id=\"input_username\"\r\n                                        field=\"username\"\r\n                                        value={formState.username.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={100}\r\n                                        label=\"Tên đăng nhập\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n\r\n                                    <TextInput id=\"input_email\"\r\n                                        field=\"email\"\r\n                                        value={formState.email.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={100}\r\n                                        label=\"Email\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_password\"\r\n                                        field=\"password\"\r\n                                        value={formState.password.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={100}\r\n                                        type=\"password\"\r\n                                        label=\"Mật khẩu\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n\r\n                                    <TextInput id=\"input_birthday\"\r\n                                        field=\"birthday\"\r\n                                        value={formState.birthday.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        type=\"date\"\r\n                                        required={true}\r\n                                        maxLength={100}\r\n                                        label=\"Ngày sinh\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default AccountChildForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess, fetchDataError } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getStudentByParent } from \"../Student/GetStudentByParent\";\r\n\r\nexport function postUser(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/registration`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postUser(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                getStudentByParent(dispatch, localStorage.getItem('id'))\r\n                toast.update(idx, { render: \"Thêm tài khoản con thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataSuccess(data))\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Thêm tài khoản con không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataSuccess, fetchDataError, addScheduleTimeClass, removeScheduleTimeClassAll } from \"../../../store/actions/schedule_time_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\ninterface ScheduleTimeClass {\r\n    class_name: string;\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\nexport function getScheduleTimeByParent(dispatch: any, parent_id: number) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/classes/schedule-allchild/${parent_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getScheduleTimeByParent(dispatch, parent_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeScheduleTimeClassAll())\r\n                //console.log(data.body.schedule_time)\r\n                data.body.schedules.map((ele: any, index: any) => {\r\n                        let k = Object.values(ele)\r\n                        let xxas = Object.keys(ele)\r\n                        console.log(xxas)\r\n                        return k.map((ele_2: any) => {\r\n                            return Object.values(ele_2).map((ele_3: any) => {\r\n                                //console.log(ele_2)\r\n                                let x_1 = Object.values(ele_3)\r\n                                let y_1 = Object.keys(ele_3)\r\n                                console.log(y_1)\r\n                                return x_1.map((ele_4: any) => {\r\n                                    return ele_4.map((ele_5: any) => {\r\n                                        console.log(ele_5)\r\n                                        let xx = Object.values(ele_5)\r\n                                        return xx.map((ele_6: any) => {\r\n                                            return ele_6.map((ele_7: any) => {\r\n                                                if (ele_7.length > 0){\r\n                                                    let time: ScheduleTimeClass = {\r\n                                                        class_name: y_1[0] + \"( \" + xxas[0] + \" )\",\r\n                                                        start_time: ele_7[0],\r\n                                                        end_time: ele_7[1]\r\n                                                    }\r\n                                                    dispatch(addScheduleTimeClass(time))\r\n                                                }\r\n                                                return ele_7\r\n                                            })\r\n                                        }) \r\n                                        \r\n                                    })\r\n                                })\r\n                            })\r\n                        })\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IChildState } from \"../../store/models/root.interface\";\r\nimport { IChild } from \"../../store/models/child.interface\";\r\nimport \"./AccountChildList.css\"\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport type accountChildListProps = {\r\n    onSelect?: (accountChild: IChild) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction AccountChildList1(props: accountChildListProps): JSX.Element {\r\n    const childs: IChildState = useSelector((state: IStateType) => state.childs);\r\n\r\n    const history = useHistory();\r\n    const routeChange = (student_id: number) =>{ \r\n        let path = '/students/detail'; \r\n        localStorage.removeItem('student_id');\r\n        localStorage.setItem('student_id', student_id.toString())\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            {\r\n                childs.childs.map((ele, index) => {\r\n                    if (!ele) { return null; }\r\n                    return (\r\n                        <div className=\"col-md-8 col-xd-8 col-xs-8 mx-auto\" onClick={() => {routeChange(ele.id)}}>\r\n\r\n\r\n\r\n                            <div className=\"card-cc green\">\r\n                                <div className=\"additional\">\r\n                                    <div className=\"row\">\r\n                                    <div className=\"user-card-cc col-md-4 col-lg-4\">\r\n                                        <svg width=\"110\" height=\"110\" viewBox=\"0 0 250 250\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" aria-labelledby=\"title desc\" className=\"image-child\">\r\n                                            <title id=\"title\">Teacher</title>\r\n                                            <desc id=\"desc\">Cartoon of a Caucasian woman smiling, and wearing black glasses and a purple shirt with white collar drawn by Alvaro Montoro.</desc>\r\n                                            <style>\r\n                                            </style>\r\n                                            <defs>\r\n                                                <clipPath id=\"scene\">\r\n                                                    <circle cx=\"125\" cy=\"125\" r=\"115\" />\r\n                                                </clipPath>\r\n                                                <clipPath id=\"lips\">\r\n                                                    <path d=\"M 106,132 C 113,127 125,128 125,132 125,128 137,127 144,132 141,142  134,146  125,146  116,146 109,142 106,132 Z\" />\r\n                                                </clipPath>\r\n                                            </defs>\r\n                                            <circle cx=\"125\" cy=\"125\" r=\"120\" fill=\"rgba(0,0,0,0.15)\" />\r\n                                            <g stroke=\"none\" stroke-width=\"0\" clip-path=\"url(#scene)\">\r\n                                                <rect x=\"0\" y=\"0\" width=\"250\" height=\"250\" fill=\"#b0d2e5\" />\r\n                                                <g id=\"head\">\r\n                                                    <path fill=\"none\" stroke=\"#111111\" stroke-width=\"2\" d=\"M 68,103 83,103.5\" />\r\n                                                    <path className=\"hair\" fill=\"#2f1b0d\" d=\"M 67,90 67,169 78,164 89,169 100,164 112,169 125,164 138,169 150,164 161,169 172,164 183,169 183,90 Z\" />\r\n                                                    <circle cx=\"125\" cy=\"100\" r=\"55\" className=\"skin\" fill=\"#eab38f\" />\r\n                                                    <ellipse cx=\"102\" cy=\"107\" rx=\"5\" ry=\"5\" className=\"eyes\" fill=\"#1f1f1f\" id=\"eye-left\" />\r\n                                                    <ellipse cx=\"148\" cy=\"107\" rx=\"5\" ry=\"5\" className=\"eyes\" fill=\"#1f1f1f\" id=\"eye-right\" />\r\n                                                    <rect x=\"119\" y=\"140\" width=\"12\" height=\"40\" className=\"skin\" fill=\"#eab38f\" />\r\n                                                    <path className=\"line eyebrow\" fill=\"none\" stroke=\"#2f1b0d\" stroke-width=\"2px\" d=\"M 90,98 C 93,90 103,89 110,94\" id=\"eyebrow-left\" />\r\n                                                    <path className=\"line eyebrow\" fill=\"none\" stroke=\"#2f1b0d\" stroke-width=\"2px\" d=\"M 160,98 C 157,90 147,89 140,94\" id=\"eyebrow-right\" />\r\n                                                    <path stroke=\"#111111\" stroke-width=\"4\" d=\"M 68,103 83,102.5\" />\r\n                                                    <path stroke=\"#111111\" stroke-width=\"4\" d=\"M 182,103 167,102.5\" />\r\n                                                    <path stroke=\"#050505\" stroke-width=\"3\" fill=\"none\" d=\"M 119,102 C 123,99 127,99 131,102\" />\r\n                                                    <path fill=\"#050505\" d=\"M 92,97 C 85,97 79,98 80,101 81,104 84,104 85,102\" />\r\n                                                    <path fill=\"#050505\" d=\"M 158,97 C 165,97 171,98 170,101 169,104 166,104 165,102\" />\r\n                                                    <path stroke=\"#050505\" stroke-width=\"3\" fill=\"rgba(240,240,255,0.4)\" d=\"M 119,102 C 118,111 115,119 98,117 85,115 84,108 84,104 84,97 94,96 105,97 112,98 117,98 119,102 Z\" />\r\n                                                    <path stroke=\"#050505\" stroke-width=\"3\" fill=\"rgba(240,240,255,0.4)\" d=\"M 131,102 C 132,111 135,119 152,117 165,115 166,108 166,104 166,97 156,96 145,97 138,98 133,98 131,102 Z\" />\r\n                                                    <path className=\"hair\" fill=\"#2f1b0d\" d=\"M 60,109 C 59,39 118,40 129,40 139,40 187,43 189,99 135,98 115,67 115,67 115,67 108,90 80,109 86,101 91,92 92,87 85,99 65,108 60,109\" />\r\n                                                    <path id=\"mouth\" fill=\"#d73e3e\" d=\"M 106,132 C 113,127 125,128 125,132 125,128 137,127 144,132 141,142  134,146  125,146  116,146 109,142 106,132 Z\" />\r\n                                                    <path id=\"smile\" fill=\"white\" d=\"M125,141 C 140,141 143,132 143,132 143,132 125,133 125,133 125,133 106.5,132 106.5,132 106.5,132 110,141 125,141 Z\" clip-path=\"url(#lips)\" />\r\n                                                </g>\r\n                                                <g id=\"shirt\">\r\n                                                    <path fill=\"#8665c2\" d=\"M 132,170 C 146,170 154,200 154,200 154,200 158,250 158,250 158,250 92,250 92,250 92,250 96,200 96,200 96,200 104,170 118,170 118,170 125,172 125,172 125,172 132,170 132,170 Z\" />\r\n                                                    <path id=\"arm-left\" className=\"arm\" stroke=\"#8665c2\" fill=\"none\" stroke-width=\"14\" d=\"M 118,178 C 94,179 66,220 65,254\" />\r\n                                                    <path id=\"arm-right\" className=\"arm\" stroke=\"#8665c2\" fill=\"none\" stroke-width=\"14\" d=\"M 132,178 C 156,179 184,220 185,254\" />\r\n                                                    <path fill=\"white\" d=\"M 117,166 C 117,166 125,172 125,172 125,182 115,182 109,170 Z\" />\r\n                                                    <path fill=\"white\" d=\"M 133,166 C 133,166 125,172 125,172 125,182 135,182 141,170 Z\" />\r\n                                                    <circle cx=\"125\" cy=\"188\" r=\"4\" fill=\"#5a487b\" />\r\n                                                    <circle cx=\"125\" cy=\"202\" r=\"4\" fill=\"#5a487b\" />\r\n                                                    <circle cx=\"125\" cy=\"216\" r=\"4\" fill=\"#5a487b\" />\r\n                                                    <circle cx=\"125\" cy=\"230\" r=\"4\" fill=\"#5a487b\" />\r\n                                                    <circle cx=\"125\" cy=\"244\" r=\"4\" fill=\"#5a487b\" />\r\n                                                    <path stroke=\"#daa37f\" stroke-width=\"1\" className=\"skin hand\" fill=\"#eab38f\" id=\"hand-left\" d=\"M 51,270 C 46,263 60,243 63,246 65,247 66,248 61,255 72,243 76,238 79,240 82,243 72,254 69,257 72,254 82,241 86,244 89,247 75,261 73,263 77,258 84,251 86,253 89,256 70,287 59,278\" />\r\n                                                    <path stroke=\"#daa37f\" stroke-width=\"1\" className=\"skin hand\" fill=\"#eab38f\" id=\"hand-right\" d=\"M 199,270 C 204,263 190,243 187,246 185,247 184,248 189,255 178,243 174,238 171,240 168,243 178,254 181,257 178,254 168,241 164,244 161,247 175,261 177,263 173,258 166,251 164,253 161,256 180,287 191,278\" />\r\n                                                </g>\r\n                                            </g>\r\n                                        </svg>\r\n                                    </div>\r\n                                    <div className=\"more-info col-md-8 col-lg-8 mx-auto\">\r\n                                        <h1>{ele.username}</h1>\r\n                                        <div className=\"coords pl-2\">\r\n                                            <span>Tham gia ngày: {ele.createTime.substring(0, 10) + \" \" + ele.createTime.substring(11,19)}</span>\r\n                                        </div>\r\n                                        <div className=\"coords pl-2\">\r\n                                            <span>Ngày sinh: {ele.dateOfBirth}</span>\r\n                                        </div>\r\n                                        <div className=\"coords pl-2\">\r\n                                            <span>Giới tính: {ele.sex}</span>\r\n                                        </div>\r\n                                        <div className=\"coords pl-2\">\r\n                                            <span>Trạng thái: {ele.status}</span>\r\n                                        </div>\r\n                                        <div className=\"stats\">\r\n                                            <div>\r\n                                                <div className=\"title\">Khóa học đã học</div>\r\n                                                <i className=\"fa fa-trophy\"></i>\r\n                                                <div className=\"value\">{ele.total_course}</div>\r\n                                            </div>\r\n                                            <div>\r\n                                                <div className=\"title\">Cuộc thi đã tham gia</div>\r\n                                                <i className=\"fa fa-gamepad\"></i>\r\n                                                <div className=\"value\">{ele.total_contest}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"general\">\r\n                                    <h1>{ele.username}</h1>\r\n                                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce a volutpat mauris, at molestie lacus. Nam vestibulum sodales odio ut pulvinar.</p>\r\n                                    <span className=\"more\">Mouse over the card-cc for more info</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AccountChildList1;\r\n","import { fetchDataSuccess, fetchDataError, removeChildAll, initialChild } from \"../../../store/actions/child.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user {\r\n    id: any,\r\n    username: string,\r\n    email: string,\r\n    password: string,\r\n    status: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    dateOfBirth: string,\r\n    profile_image_url: string,\r\n    total_course: number,\r\n    total_contest: number,\r\n    sex: string,\r\n    phone: string,\r\n    address: string,\r\n    parents: number,\r\n    createTime: string\r\n}\r\nexport function getInforChildByParent(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/childs/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        postRefreshToken()\r\n                        getInforChildByParent(dispatch, id)\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeChildAll())\r\n                console.log(data.body.childs)\r\n                data.body.childs.map ((ele: any) => {\r\n                    var user: user = {\r\n                        id: ele.id,\r\n                        username: ele.username,\r\n                        email: ele.email,\r\n                        password: \"\",\r\n                        total_contest: ele.total_contest,\r\n                        total_course: ele.total_course,\r\n                        status: ele.status,\r\n                        firstName: ele.firstName,\r\n                        lastName: ele.lastName,\r\n                        dateOfBirth: ele.dateOfBirth,\r\n                        profile_image_url: ele.profile_image_url,\r\n                        sex: ele.sex,\r\n                        phone: ele.phone,\r\n                        address: ele.address,\r\n                        parents: ele.parents,\r\n                        createTime: ele.createTime\r\n                    }\r\n                    return dispatch(initialChild(user));\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { changeSelectedChild, setModificationState } from \"../../store/actions/child.action\";\r\nimport { IChildState, IScheduleTimeClassState, IStateType, IUserRegisterJoinSemesterState } from \"../../store/models/root.interface\";\r\nimport { IChild, ChildModificationStatus } from \"../../store/models/child.interface\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport \"./ParentHome.css\"\r\nimport Popup from \"reactjs-popup\";\r\nimport AccountChildForm from \"../AccountChild/AccountChildForm\";\r\nimport { getScheduleTimeByParent } from \"../../common/service/ScheduleTimeClass/GetScheduleTimeByParent\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { ScheduleComponent, Day, Inject, ViewsDirective, ViewDirective } from \"@syncfusion/ej2-react-schedule\";\r\n\r\nimport \"@syncfusion/ej2-base/styles/material.css\";\r\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\r\nimport { getUserRegisterJoinSemesterByPayer } from \"../../common/service/UserRegisterJoinSemester/GetUserRegisterJoinSemesterByPayer\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport AccountChildList1 from \"./AccountChildList1\";\r\nimport { getInforChildByParent } from \"../../common/service/Childs/GetInforChildByParent\";\r\n\r\n\r\nconst ParentHome: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const childs: IChildState = useSelector((state: IStateType) => state.childs);\r\n    const schedule_time_classes: IScheduleTimeClassState = useSelector((state: IStateType) => state.schedule_time_classes);\r\n    const user_register_join_semesters: IUserRegisterJoinSemesterState = useSelector((state: IStateType) => state.user_register_join_semesters);\r\n    const numberChildCount: number = childs.childs.length;\r\n    const totalMoney: number = user_register_join_semesters.completed.reduce((prev, next) => prev + ((next.price * 1) || 0), 0);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const [checked, setChecked] = useState(true);\r\n\r\n    console.log(schedule_time_classes.schedule_time_classes)\r\n\r\n    const [popup, setPopup] = useState(false);\r\n\r\n    function onUserSelect(lesson: IChild): void {\r\n        dispatch(changeSelectedChild(lesson));\r\n        onUserRemove();\r\n        dispatch(setModificationState(ChildModificationStatus.None));\r\n    }\r\n\r\n    function onUserRemove() {\r\n        setPopup(true);\r\n    }\r\n\r\n    function onRemovePopup(value: boolean) {\r\n        setPopup(false);\r\n    }\r\n\r\n    dispatch(updateCurrentPath(\"Trang chủ\", \"\"));\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getInforChildByParent(dispatch, id))\r\n                    trackPromise(getScheduleTimeByParent(dispatch, id))\r\n                    trackPromise(getUserRegisterJoinSemesterByPayer(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getInforChildByParent(dispatch, id))\r\n                trackPromise(getScheduleTimeByParent(dispatch, id))\r\n                trackPromise(getUserRegisterJoinSemesterByPayer(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, id]);\r\n\r\n    let data: object[] = []\r\n\r\n    schedule_time_classes.schedule_time_classes.map((ele, index) => {\r\n        if (ele !== undefined) {\r\n            return data.push({\r\n                Id: index,\r\n                Subject: ele.class_name !== undefined && ele.class_name !== null ? ele.class_name : \"\",\r\n                StartTime: new Date(ele.start_time),\r\n                EndTime: new Date(ele.end_time),\r\n                IsAllDay: false\r\n            })\r\n        }\r\n        return 1\r\n    })\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n                <ToastContainer />\r\n                <div className=\"row\">\r\n                    <TopCard title=\"TÀI KHOẢN CON\" text={`${numberChildCount}`} icon=\"user\" class=\"primary\" />\r\n                    <TopCard title=\"SỐ TIỀN\" text={`${totalMoney}`} icon=\"donate\" class=\"primary\" />\r\n                    <div className=\"col-xl-6 col-md-6 mb-4\" id=\"content-button-create-teacher-level\">\r\n                        <button className=\"btn btn-success btn-green mr-0\" id=\"btn-create-teacher-level\" onClick={() => {\r\n                            dispatch(setModificationState(ChildModificationStatus.Create))\r\n                            onUserRemove()\r\n                        }}>\r\n                            <i className=\"fas fa fa-plus\"></i>\r\n                            Thêm tài khoản con\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\" id=\"search-box\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"input-group\" id=\"search-content\">\r\n                            <div className=\"form-outline\">\r\n                                <input type=\"text\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                                    setSearchTerm(event.target.value)\r\n                                    console.log(searchTerm)\r\n                                }} />\r\n                            </div>\r\n                            <button type=\"button\" className=\"btn btn-primary\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Popup\r\n                    open={popup}\r\n                    onClose={() => setPopup(false)}\r\n                    closeOnDocumentClick\r\n                >\r\n                    <>\r\n                        {\r\n                            function () {\r\n                                if ((childs.modificationState === ChildModificationStatus.Create) || ((childs.selectedChild) && (childs.modificationState === ChildModificationStatus.Edit))) {\r\n                                    return <AccountChildForm isCheck={onRemovePopup} />\r\n                                }\r\n                            }()\r\n                        }\r\n                    </>\r\n                </Popup>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                            if (checked === false) {\r\n                                setChecked(true)\r\n                            }\r\n                        }} style={{\r\n                            color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Tài khoản con</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"30%\",\r\n                            backgroundColor: checked ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n                    <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                            if (checked === true) {\r\n                                setChecked(false)\r\n                            }\r\n                        }}\r\n                            style={{\r\n                                color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                            }}>Lịch trong ngày</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"30%\",\r\n                            backgroundColor: checked ? \"#ffffff\" : \"#F24E1E\"\r\n                        }}></div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    function () {\r\n                        if (checked === true) {\r\n                            return (\r\n                                <Fragment>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                            <h3 className=\" mb-2\" id=\"level-teacher\">Danh sách tài khoản con</h3>\r\n                                            <AccountChildList1\r\n                                                onSelect={onUserSelect}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        else {\r\n                            return (\r\n                                <Fragment>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                            <h3 className=\" mb-2\" id=\"level-teacher\">Lịch trong ngày</h3>\r\n                                            <div className=\"card shadow mb-4\">\r\n                                                <div className=\"card-body\">\r\n                                                    <ScheduleComponent height='550px' selectedDate={new Date()} eventSettings={{\r\n                                                        dataSource: data, fields: {\r\n                                                            id: 'Id',\r\n                                                            subject: { name: 'Subject' },\r\n                                                            isAllDay: { name: 'IsAllDay' },\r\n                                                            startTime: { name: 'StartTime' },\r\n                                                            endTime: { name: 'EndTime' }\r\n                                                        }\r\n                                                    }}>\r\n\r\n                                                        <ViewsDirective>\r\n                                                            <ViewDirective option='Day' startHour='00:00' endHour='23:59' /> \r\n                                                        </ViewsDirective>\r\n                                                        <Inject services={[Day]} />\r\n                                                    </ScheduleComponent>\r\n\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                    }()\r\n                }\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default ParentHome;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ntype Props = {\r\n  correct: Boolean;\r\n  pickedColor: string;\r\n};\r\n\r\nconst ContentHeader = styled.header<Props>`\r\n  display: flex;\r\n  justify-content: center;\r\n  text-align: center;\r\n  letter-spacing: 4px;\r\n  padding-bottom: 24px;\r\n  background: ${(props) =>\r\n    props.correct ? props.pickedColor : \"rgb(68, 120, 197)\"};\r\n  color: white;\r\n  font-family: \"Dosis\", sans-serif;\r\n\r\n  h1 {\r\n    -webkit-text-stroke-width: 0.1px;\r\n    -webkit-text-stroke-color: black;\r\n    font-size: 3em;\r\n  }\r\n`;\r\n\r\n/* const PickedColor = styled.span`\r\n  font-size: 18px;\r\n  text-decoration: underline;\r\n`; */\r\n\r\nconst Header: React.FC<Props> = ({ correct, pickedColor }: Props) => {\r\n  return (\r\n    <ContentHeader correct={correct} pickedColor={pickedColor}>\r\n      <div>\r\n        <h1>Color Guessing Game</h1>\r\n        <p>\r\n          {/* Guess which block below is: <PickedColor>{pickedColor}</PickedColor> */}\r\n          Guess which block below is:\r\n        </p>\r\n      </div>\r\n    </ContentHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\n\r\ntype Props = {\r\n  color: string;\r\n  correct: Boolean;\r\n  pickedColor: string;\r\n  checkColor: Function;\r\n  visible: string;\r\n};\r\n\r\nconst MotionBlock = styled(motion.div)<{ visible: string }>`\r\n  border: 4px solid white;\r\n  width: 175px;\r\n  height: 175px;\r\n  border-radius: 30px;\r\n  margin: 40px;\r\n  background: ${(props) => props.color};\r\n  visibility: ${(props) => props.visible};\r\n\r\n  transition: border 0.5s;\r\n  :hover {\r\n    border: 3px solid black;\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    width: 100px;\r\n    height: 100px;\r\n    margin: 16px;\r\n  }\r\n`;\r\n\r\nconst ColorBlock: React.FC<Props> = ({\r\n  color,\r\n  correct,\r\n  pickedColor,\r\n  checkColor,\r\n}: Props) => {\r\n  const [visible, setVisibility] = useState(\"visible\");\r\n\r\n  useEffect(() => {\r\n    setVisibility(\"visible\");\r\n  }, [color]);\r\n\r\n  return (\r\n    <MotionBlock\r\n      transition={{ duration: 0.2 }}\r\n      whileHover={{ scale: 1.2, rotate: 90, y: -13 }}\r\n      whileTap={{ scale: 0.8, rotate: -90, borderRadius: \"100%\" }}\r\n      color={color}\r\n      visible={visible}\r\n      onClick={() => !correct && setVisibility(checkColor(color, pickedColor))}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ColorBlock;\r\n","import React from \"react\";\r\nimport ColorBlock from \"./components/ColorBlock\";\r\nimport styled from \"styled-components\";\r\n\r\ntype Props = {\r\n  colors: Array<string>;\r\n  correct: Boolean;\r\n  difficulty: number;\r\n  pickedColor: string;\r\n  handleCorrect: Function;\r\n  handleGameColors: Function;\r\n  handleMessage: Function;\r\n  handleButtonMessage: Function;\r\n};\r\n\r\nconst GameSection = styled.section`\r\n  padding: 64px 0px;\r\n  padding-bottom: 120px;\r\n  display: flex;\r\n  justify-content: center;\r\n  background: rgb(22, 20, 68);\r\n  background: linear-gradient(\r\n    90deg,\r\n    rgba(22, 20, 68, 1) 0%,\r\n    rgba(32, 32, 72, 1) 100%\r\n  );\r\n\r\n  @media (max-width: 767px) {\r\n    padding: 32px 0px;\r\n    padding-bottom: 80px;\r\n  }\r\n`;\r\n\r\nconst ColorGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 30% 30% 30%;\r\n`;\r\n\r\nconst Game: React.FC<Props> = ({\r\n  colors,\r\n  correct,\r\n  difficulty,\r\n  pickedColor,\r\n  handleCorrect,\r\n  handleGameColors,\r\n  handleMessage,\r\n  handleButtonMessage,\r\n}: Props) => {\r\n  const changeColors = (color: string) => {\r\n    colors = [];\r\n    for (let i = 0; i < difficulty; i++) {\r\n      colors.push(color);\r\n    }\r\n    handleGameColors(colors);\r\n  };\r\n\r\n  const checkColor = (divColor: string, correctColor: string) => {\r\n    if (divColor === correctColor) {\r\n      changeColors(correctColor);\r\n      handleCorrect(true);\r\n      handleMessage(\"CORRECT!\");\r\n      handleButtonMessage(\"PLAY AGAIN?\");\r\n\r\n      let gamesWonArr: string[] = [];\r\n      var id_x = localStorage.getItem(\"gamesWon\");\r\n\r\n      if (id_x !== null) {\r\n        gamesWonArr = id_x.split(\",\")!;\r\n        gamesWonArr.push(\"1\");\r\n      }\r\n      localStorage.setItem(\"gamesWon\", gamesWonArr.toString());\r\n\r\n      let averageDifficultyArr: string[] = [];\r\n      var id_y = localStorage.getItem(\"averageDifficulty\");\r\n\r\n      if ( id_y !== null) {\r\n        averageDifficultyArr = id_y.split(\",\")!;\r\n        averageDifficultyArr.push(difficulty.toString());\r\n      }\r\n      localStorage.setItem(\r\n        \"averageDifficulty\",\r\n        averageDifficultyArr.toString()\r\n      );\r\n\r\n      return \"visible\";\r\n    } else {\r\n      handleMessage(\"TRY AGAIN\");\r\n      return \"hidden\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GameSection>\r\n      <ColorGrid>\r\n        {colors.map((color: string, index: number) => {\r\n          return (\r\n            <ColorBlock\r\n              key={index}\r\n              color={color}\r\n              correct={correct}\r\n              pickedColor={pickedColor}\r\n              checkColor={checkColor}\r\n              visible={\"visible\"}\r\n            />\r\n          );\r\n        })}\r\n      </ColorGrid>\r\n    </GameSection>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ntype Props = {\r\n  correct: Boolean;\r\n};\r\n\r\nconst PageBase = styled.section`\r\n  display: flex;\r\n  justify-content: center;\r\n  background: rgb(22, 20, 68);\r\n  background: linear-gradient(\r\n    90deg,\r\n    rgba(22, 20, 68, 1) 0%,\r\n    rgba(32, 32, 72, 1) 100%\r\n  );\r\n`;\r\n\r\nconst ScoreboardContainer = styled.div`\r\n  font-family: \"Dosis\", sans-serif;\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  padding-bottom: 50px;\r\n  margin-bottom: 100px;\r\n  width: 60%;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst ScoreboardTitle = styled.h1`\r\n  font-size: 40px;\r\n  letter-spacing: 4px;\r\n  text-align: center;\r\n  margin-top: 0px;\r\n  margin-bottom: 0px;\r\n  padding-top: 12px;\r\n  padding-bottom: 24px;\r\n  background-image: linear-gradient(\r\n    90deg,\r\n    rgba(199, 0, 205, 1) 0%,\r\n    rgba(91, 12, 121, 1) 100%,\r\n    rgba(22, 20, 68, 1) 100%\r\n  );\r\n  background-size: 100%;\r\n  background-repeat: repeat;\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n`;\r\n\r\nconst FlexWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst StatTitle = styled.p`\r\n  width: 70%;\r\n  font-size: 40px;\r\n  letter-spacing: 4px;\r\n  color: rgba(199, 0, 205, 1);\r\n  padding-left: 20px;\r\n  padding-bottom: 12px;\r\n  border-bottom: 4px solid black;\r\n  @media (max-width: 768px) {\r\n    font-weight: 600;\r\n    font-size: 24px;\r\n  }\r\n`;\r\n\r\nconst StatValue = styled.p`\r\n  width: 30%;\r\n  font-size: 40px;\r\n  letter-spacing: 4px;\r\n  color: rgba(199, 0, 205, 1);\r\n  text-align: center;\r\n  border-left: 4px solid black;\r\n  border-bottom: 4px solid black;\r\n  @media (max-width: 768px) {\r\n    font-weight: 600;\r\n    font-size: 24px;\r\n  }\r\n`;\r\n\r\nconst Scoreboard = ({ correct }: Props) => {\r\n  const [gamesWon, setGamesWon] = useState(0);\r\n  const [averageDifficulty, setAverageDifficulty] = useState(\"6\");\r\n\r\n  useEffect(() => {\r\n    if (correct === true) {\r\n      let wins: string[] = [];\r\n      var id_x = localStorage.getItem(\"gamesWon\");\r\n      if (id_x !== null) {\r\n        wins = id_x.split(\",\")!;\r\n      }\r\n      setGamesWon(wins.length - 1);\r\n\r\n      let avgDifficulty: string[] = [];\r\n      var id_y = localStorage.getItem(\"averageDifficulty\");\r\n      if (id_y !== null) {\r\n        avgDifficulty = id_y.split(\",\")!;\r\n        const difficultyMode = mode(avgDifficulty);\r\n        if (difficultyMode) {\r\n          setAverageDifficulty(difficultyMode);\r\n        }\r\n      }\r\n    }\r\n  }, [correct]);\r\n\r\n  const mode = (arr: string[]) => {\r\n    return arr\r\n      .sort(\r\n        (a, b) =>\r\n          arr.filter((v) => v === a).length - arr.filter((v) => v === b).length\r\n      )\r\n      .pop();\r\n  };\r\n\r\n  const init = () => {\r\n    let wins: string[] = [];\r\n    var id_x = localStorage.getItem(\"gamesWon\");\r\n    if ( id_x !== null) {\r\n      wins = id_x.split(\",\")!;\r\n    }\r\n    setGamesWon(wins.length === 0 ? 0 : wins.length - 1);\r\n\r\n    let avgDifficulty: string[] = [];\r\n    var id_y = localStorage.getItem(\"averageDifficulty\");\r\n    if (id_y != null) {\r\n      avgDifficulty = id_y.split(\",\")!;\r\n      const difficultyMode = mode(avgDifficulty);\r\n      if (difficultyMode) {\r\n        setAverageDifficulty(difficultyMode);\r\n      }\r\n    } else {\r\n      setAverageDifficulty(avgDifficulty.length.toString());\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n  });\r\n\r\n  const difficultyMap = useMemo(() => {\r\n    if (averageDifficulty === \"3\") {\r\n      return \"Easy\";\r\n    } else if (averageDifficulty === \"6\") {\r\n      return \"Medium\";\r\n    } else if (averageDifficulty === \"9\") {\r\n      return \"Hard\";\r\n    }\r\n  }, [averageDifficulty]);\r\n\r\n  const scoreBoardStats: object[] = [\r\n    {\r\n      title: \"Games Won\",\r\n      value: gamesWon,\r\n    },\r\n    {\r\n      title: \"Favorite Difficulty\",\r\n      value: difficultyMap ? difficultyMap : \"Medium\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageBase>\r\n      <ScoreboardContainer>\r\n        <ScoreboardTitle>SCOREBOARD</ScoreboardTitle>\r\n        {scoreBoardStats.map((stat: any) => {\r\n          return (\r\n            <FlexWrap>\r\n              <StatTitle>{stat.title}</StatTitle>\r\n              <StatValue>{stat.value}</StatValue>\r\n            </FlexWrap>\r\n          );\r\n        })}\r\n      </ScoreboardContainer>\r\n    </PageBase>\r\n  );\r\n};\r\n\r\nexport default Scoreboard;\r\n","import React, { useCallback, useState, useEffect, Dispatch } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport Header from \"./Header\";\r\nimport Game from \"./Game\";\r\nimport Scoreboard from \"./Scoreboard\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\ntype ButtonTypes = {\r\n  buttonDifficulty: number;\r\n  gameDifficulty: number;\r\n};\r\n\r\nconst MenuBar = styled.section`\r\n  display: flex;\r\n  justify-content: center;\r\n  background: rgb(22, 20, 68);\r\n  background: linear-gradient(\r\n    90deg,\r\n    rgba(22, 20, 68, 1) 0%,\r\n    rgba(32, 32, 72, 1) 100%\r\n  );\r\n  height: 40px;\r\n  font-family: \"Dosis\", sans-serif;\r\n`;\r\n\r\nconst MenuButton = styled(motion.button)`\r\n  font-family: \"Dosis\", sans-serif;\r\n  border: 0px;\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  letter-spacing: 1.5px;\r\n  background: rgba(0, 0, 0, 0);\r\n  color: white;\r\n  outline: none;\r\n  font-weight: 600;\r\n\r\n  transition: background 0.3s, color 0.3s;\r\n  :hover {\r\n    color: rgb(22, 20, 68);\r\n    background: white;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst DifficultyButton = styled(MenuButton)<ButtonTypes>`\r\n  margin: 0px 4px;\r\n\r\n  background: ${(props) =>\r\n    props.buttonDifficulty === props.gameDifficulty && \"white\"};\r\n\r\n  color: ${(props) =>\r\n    props.buttonDifficulty === props.gameDifficulty\r\n      ? \"rgb(22, 20, 68)\"\r\n      : \"white\"};\r\n`;\r\n\r\nconst Message = styled.span`\r\n  width: 30%;\r\n  padding: 8px 0px;\r\n  text-align: center;\r\n  letter-spacing: 1.5px;\r\n  color: white;\r\n`;\r\n\r\nconst GuessColor = () => {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  dispatch(updateCurrentPath(\"Trò chơi\", \"\"));\r\n  const [difficulty, setDifficulty] = useState(6);\r\n  const [gameColors, setGameColors] = useState([\r\n    \"rgb(91, 99, 77)\",\r\n    \"rgb(200, 88, 111)\",\r\n    \"rgb(90, 90, 88)\",\r\n    \"rgb(100, 110, 120)\",\r\n    \"rgb(91, 200, 105)\",\r\n    \"rgb(8, 38, 240)\",\r\n  ]);\r\n  const [pickedColor, setPickedColor] = useState(\"rgb(200, 88, 111)\");\r\n  const [correct, setCorrect] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [playButtonMessage, setPlayButtonMessage] = useState(\"NEW COLORS\");\r\n\r\n  const randomColor = () => {\r\n    const r = Math.floor(Math.random() * 256);\r\n    const g = Math.floor(Math.random() * 256);\r\n    const b = Math.floor(Math.random() * 256);\r\n    return `rgb(${r}, ${g}, ${b})`;\r\n  };\r\n\r\n  const generateRandomColors = useCallback((num: number) => {\r\n    let colors = [];\r\n    for (let i = 0; i < num; i++) {\r\n      colors.push(randomColor());\r\n    }\r\n\r\n    const randomIndex = Math.floor(Math.random() * colors.length);\r\n    setPickedColor(colors[randomIndex]);\r\n\r\n    return colors;\r\n  }, []);\r\n\r\n  const resetGame = useCallback(() => {\r\n    setCorrect(false);\r\n    setGameColors(generateRandomColors(difficulty));\r\n    setPlayButtonMessage(\"NEW COLORS\");\r\n    setMessage(\"\");\r\n  }, [generateRandomColors, difficulty]);\r\n\r\n  const setupLocalStorage = () => {\r\n    let gamesWon: string[] = [];\r\n    var id_x = localStorage.getItem(\"gamesWon\");\r\n    if (id_x !== null) {\r\n      gamesWon = id_x.split(\",\")!;\r\n    }\r\n    localStorage.setItem(\"gamesWon\", gamesWon.toString());\r\n\r\n    let averageDifficulty: string[] = [];\r\n    var id_y = localStorage.getItem(\"averageDifficulty\");\r\n    if ( id_y !== null) {\r\n      averageDifficulty = id_y.split(\",\")!;\r\n    }\r\n    localStorage.setItem(\"averageDifficulty\", averageDifficulty.toString());\r\n  };\r\n\r\n  const init = useCallback(() => {\r\n    setGameColors(generateRandomColors(difficulty));\r\n    setupLocalStorage();\r\n  }, [generateRandomColors, difficulty]);\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, [init]);\r\n\r\n  useEffect(() => {\r\n    resetGame();\r\n  }, [resetGame, difficulty]);\r\n\r\n  const difficultyButtons = [\r\n    {\r\n      difficulty: 3,\r\n      text: \"EASY\",\r\n    },\r\n    {\r\n      difficulty: 6,\r\n      text: \"MEDIUM\",\r\n    },\r\n    {\r\n      difficulty: 9,\r\n      text: \"HARD\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Header pickedColor={pickedColor} correct={correct} />\r\n      <div className=\"row pick-color mb-2 mt-2 mr-2 ml-2 text-center justify-content-md-center justify-content-center\">\r\n        <div className=\"col-xl-2 col-md-12 col-xs-12\" style={{backgroundColor: pickedColor, height: \"160px\", width: '100px', border: 'border: 4px solid white', borderRadius: '30px'}}>\r\n        </div>\r\n      </div>\r\n      \r\n      <MenuBar>\r\n        <MenuButton\r\n          onClick={() => resetGame()}\r\n          whileHover={{ scale: 1.1, transition: { duration: 0.75 } }}\r\n          whileTap={{ scale: 1 }}\r\n        >\r\n          {playButtonMessage}\r\n        </MenuButton>\r\n        <Message>{message}</Message>\r\n        {difficultyButtons.map((button) => {\r\n          return (\r\n            <DifficultyButton\r\n              key={button.difficulty}\r\n              onClick={() => setDifficulty(button.difficulty)}\r\n              buttonDifficulty={button.difficulty}\r\n              gameDifficulty={difficulty}\r\n              whileHover={{ scale: 1.1, transition: { duration: 0.75 } }}\r\n              whileTap={{ scale: 1 }}\r\n            >\r\n              {button.text}\r\n            </DifficultyButton>\r\n          );\r\n        })}\r\n      </MenuBar>\r\n      <Game\r\n        pickedColor={pickedColor}\r\n        colors={gameColors}\r\n        difficulty={difficulty}\r\n        correct={correct}\r\n        handleGameColors={setGameColors}\r\n        handleCorrect={setCorrect}\r\n        handleMessage={setMessage}\r\n        handleButtonMessage={setPlayButtonMessage}\r\n      />\r\n      <Scoreboard correct={correct} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GuessColor;\r\n","import { ICourseParent, CourseParentModificationStatus } from \"../models/course_parent.interface\";\r\n\r\n// register_successfull_course_parents\r\nexport const ADD_DOING_COURSE: string = \"ADD_DOING_COURSE\";\r\nexport const EDIT_DOING_COURSE: string = \"EDIT_DOING_COURSE\";\r\nexport const REMOVE_DOING_COURSE: string = \"REMOVE_DOING_COURSE\";\r\nexport const CHANGE_DOING_COURSE_AMOUNT: string = \"CHANGE_DOING_COURSE_AMOUNT\";\r\nexport const CHANGE_DOING_COURSE_PENDING_EDIT: string = \"CHANGE_DOING_COURSE_PENDING_EDIT\";\r\nexport const CLEAR_DOING_COURSE_PENDING_EDIT: string = \"CLEAR_DOING_COURSE_PENDING_EDIT\";\r\nexport const REMOVE_DOING_COURSE_ALL: string = \"REMOVE_DOING_COURSE_ALL\";\r\nexport const INITIAL_DOING_COURSE: string = \"INITIAL_DOING_COURSE\";\r\n\r\n// not_register_course_parents\r\nexport const ADD_DONE_COURSE: string = \"ADD_DONE_COURSE\";\r\nexport const EDIT_DONE_COURSE: string = \"EDIT_DONE_COURSE\";\r\nexport const REMOVE_DONE_COURSE: string = \"REMOVE_DONE_COURSE\";\r\nexport const CHANGE_DONE_COURSE_AMOUNT: string = \"CHANGE_DONE_COURSE_AMOUNT\";\r\nexport const CHANGE_DONE_COURSE_PENDING_EDIT: string = \"CHANGE_DONE_COURSE_PENDING_EDIT\";\r\nexport const CLEAR_DONE_COURSE_PENDING_EDIT: string = \"CLEAR_DONE_COURSE_PENDING_EDIT\";\r\nexport const REMOVE_DONE_COURSE_ALL: string = \"REMOVE_DONE_COURSE_ALL\";\r\nexport const INITIAL_DONE_COURSE: string = \"INITIAL_DONE_COURSE\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course_parent: ICourseParent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course_parent\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCourseNotRegistedNow(course_parent: ICourseParent): IInitialCourseNotRegistedNowActionType {\r\n    return { type: INITIAL_DOING_COURSE, course_parent: course_parent };\r\n}\r\n\r\nexport function removeCourseNotRegistedNowAll(): IRemoveCourseNotRegistedNowAllActionType {\r\n    return { type: REMOVE_DOING_COURSE_ALL };\r\n}\r\n\r\nexport function addCourseNotRegistedNow(course_parent: ICourseParent): IAddCourseNotRegistedNowActionType {\r\n    return { type: ADD_DOING_COURSE, course_parent: course_parent };\r\n}\r\n\r\nexport function editCourseNotRegistedNow(course_parent: ICourseParent): IEditCourseNotRegistedNowActionType {\r\n    return { type: EDIT_DOING_COURSE, course_parent: course_parent };\r\n}\r\n\r\nexport function removeCourseNotRegistedNow(id: any): IRemoveCourseNotRegistedNowActionType {\r\n    return { type: REMOVE_DOING_COURSE, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseNotRegistedNow(course_parent: ICourseParent): IChangeSelectedCourseNotRegistedNowActionType {\r\n    return { type: CHANGE_DOING_COURSE_PENDING_EDIT, course_parent: course_parent };\r\n}\r\n\r\nexport function clearSelectedCourseNotRegistedNow(): IClearSelectedCourseNotRegistedNowActionType {\r\n    return { type: CLEAR_DOING_COURSE_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialCourseRegisted(course_parent: ICourseParent): IInitialCourseRegistedActionType {\r\n    return { type: INITIAL_DONE_COURSE, course_parent: course_parent };\r\n}\r\n\r\nexport function removeCourseRegistedAll(): IRemoveCourseRegistedAllActionType {\r\n    return { type: REMOVE_DONE_COURSE_ALL };\r\n}\r\n\r\nexport function addCourseRegisted(course_parent: ICourseParent): IAddCourseRegistedActionType {\r\n    return { type: ADD_DONE_COURSE, course_parent: course_parent };\r\n}\r\n\r\nexport function editCourseRegisted(course_parent: ICourseParent): IEditCourseRegistedActionType {\r\n    return { type: EDIT_DONE_COURSE, course_parent: course_parent };\r\n}\r\n\r\nexport function removeCourseRegisted(id: any): IRemoveCourseRegistedActionType {\r\n    return { type: REMOVE_DONE_COURSE, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseRegisted(course_parent: ICourseParent): IChangeSelectedCourseRegistedActionType {\r\n    return { type: CHANGE_DONE_COURSE_PENDING_EDIT, course_parent: course_parent };\r\n}\r\n\r\nexport function clearSelectedCourseRegisted(): IClearSelectedCourseRegistedActionType {\r\n    return { type: CLEAR_DONE_COURSE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseParentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_course_parents\r\ninterface IAddCourseNotRegistedNowActionType { type: string, course_parent: ICourseParent };\r\ninterface IEditCourseNotRegistedNowActionType { type: string, course_parent: ICourseParent };\r\ninterface IRemoveCourseNotRegistedNowActionType { type: string, id: any };\r\ninterface IChangeSelectedCourseNotRegistedNowActionType { type: string, course_parent: ICourseParent };\r\ninterface IClearSelectedCourseNotRegistedNowActionType { type: string };\r\ninterface IRemoveCourseNotRegistedNowAllActionType { type: string }\r\ninterface IInitialCourseNotRegistedNowActionType {type: string, course_parent: ICourseParent}\r\n\r\n// not_register_course_parents\r\ninterface IAddCourseRegistedActionType { type: string, course_parent: ICourseParent };\r\ninterface IEditCourseRegistedActionType { type: string, course_parent: ICourseParent };\r\ninterface IRemoveCourseRegistedActionType { type: string, id: any };\r\ninterface IChangeSelectedCourseRegistedActionType { type: string, course_parent: ICourseParent };\r\ninterface IClearSelectedCourseRegistedActionType { type: string };\r\ninterface IRemoveCourseRegistedAllActionType { type: string }\r\ninterface IInitialCourseRegistedActionType {type: string, course_parent: ICourseParent}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  CourseParentModificationStatus};","import { fetchDataSuccess, fetchDataError, removeCourseRegistedAll, removeCourseNotRegistedNowAll, addCourseNotRegistedNow, addCourseRegisted } from \"../../../store/actions/course_parent.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface CourseParent {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    creator_id: number;\r\n    art_type_id: number;\r\n    art_type_name: string;\r\n    art_level_id: number;\r\n    art_level_name: string;\r\n    art_age_id: number;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getCourseParent(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/course/parent/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getCourseParent(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeCourseNotRegistedNowAll())\r\n                dispatch(removeCourseRegistedAll())\r\n                console.log(data.body.courses_registed)\r\n                console.log(data.body.courses_not_registed_now)\r\n                data.body.courses_registed.map((ele: any, index: any) => {\r\n                    var classes_parent: CourseParent = {\r\n                        id: ele.id,\r\n                        is_enabled: ele.is_enabled,\r\n                        creator_id: ele.creator_id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_level_id: ele.art_level_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    console.log(classes_parent)\r\n                    return dispatch(addCourseRegisted(classes_parent))\r\n                })\r\n\r\n                data.body.courses_not_registed_now.map((ele: any, index: any) => {\r\n                    var classes_parent: CourseParent = {\r\n                        id: ele.id,\r\n                        is_enabled: ele.is_enabled,\r\n                        creator_id: ele.creator_id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_level_id: ele.art_level_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    console.log(classes_parent)\r\n                    return dispatch(addCourseNotRegistedNow(classes_parent))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { ICourseParentState, IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./CourseTeacher.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getCourseParent } from \"../../common/service/CourseParent/GetCourseParent\";\r\n\r\nconst CourseParent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const course_teachers: ICourseParentState = useSelector((state: IStateType) => state.course_parents);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberParentRegisterSuccessfullCount: number = course_teachers.courses_registed.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    console.log(course_teachers)\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getCourseParent(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getCourseParent(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khóa học\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n    const [checked, setChecked] = useState(true);\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"ĐÃ ĐĂNG KÍ\" text={`${numberParentRegisterSuccessfullCount}`} icon=\"book\" class=\"primary\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(ParentRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked === false) {\r\n                            setChecked(true)\r\n                        }\r\n                    }} style={{\r\n                        color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Khám phá</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked === true) {\r\n                            setChecked(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                        }}>Đã đăng kí</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#ffffff\" : \"#F24E1E\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    \r\n\r\n\r\n                                </div>\r\n\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    \r\n                                </div>\r\n\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default CourseParent;\r\n","import { IContestStudent, ContestStudentModificationStatus } from \"../models/contest_student.interface\";\r\n\r\n// contest_opening\r\nexport const ADD_CONTEST_STUDENT_OPENING: string = \"ADD_CONTEST_STUDENT_OPENING\";\r\nexport const EDIT_CONTEST_STUDENT_OPENING: string = \"EDIT_CONTEST_STUDENT_OPENING\";\r\nexport const REMOVE_CONTEST_STUDENT_OPENING: string = \"REMOVE_CONTEST_STUDENT_OPENING\";\r\nexport const CHANGE_CONTEST_STUDENT_OPENING_AMOUNT: string = \"CHANGE_CONTEST_STUDENT_OPENING_AMOUNT\";\r\nexport const CHANGE_CONTEST_STUDENT_OPENING_PENDING_EDIT: string = \"CHANGE_CONTEST_STUDENT_OPENING_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_STUDENT_OPENING_PENDING_EDIT: string = \"CLEAR_CONTEST_STUDENT_OPENING_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_STUDENT_OPENING_ALL: string = \"REMOVE_CONTEST_STUDENT_OPENING_ALL\";\r\nexport const INITIAL_CONTEST_STUDENT_OPENING: string = \"INITIAL_CONTEST_STUDENT_OPENING\";\r\n\r\n// contest_not_open_now_not_student\r\nexport const ADD_CONTEST_STUDENT_NEW: string = \"ADD_CONTEST_STUDENT_NEW\";\r\nexport const EDIT_CONTEST_STUDENT_NEW: string = \"EDIT_CONTEST_STUDENT_NEW\";\r\nexport const REMOVE_CONTEST_STUDENT_NEW: string = \"REMOVE_CONTEST_STUDENT_NEW\";\r\nexport const CHANGE_CONTEST_STUDENT_NEW_AMOUNT: string = \"CHANGE_CONTEST_STUDENT_NEW_AMOUNT\";\r\nexport const CHANGE_CONTEST_STUDENT_NEW_PENDING_EDIT: string = \"CHANGE_CONTEST_STUDENT_NEW_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_STUDENT_NEW_PENDING_EDIT: string = \"CLEAR_CONTEST_STUDENT_NEW_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_STUDENT_NEW_ALL: string = \"REMOVE_CONTEST_STUDENT_NEW_ALL\";\r\nexport const INITIAL_CONTEST_STUDENT_NEW: string = \"INITIAL_CONTEST_STUDENT_NEW\";\r\n\r\n// contest_end\r\nexport const ADD_CONTEST_STUDENT_END: string = \"ADD_CONTEST_STUDENT_END\";\r\nexport const EDIT_CONTEST_STUDENT_END: string = \"EDIT_CONTEST_STUDENT_END\";\r\nexport const REMOVE_CONTEST_STUDENT_END: string = \"REMOVE_CONTEST_STUDENT_END\";\r\nexport const CHANGE_CONTEST_STUDENT_END_AMOUNT: string = \"CHANGE_CONTEST_STUDENT_END_AMOUNT\";\r\nexport const CHANGE_CONTEST_STUDENT_END_PENDING_EDIT: string = \"CHANGE_CONTEST_STUDENT_END_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_STUDENT_END_PENDING_EDIT: string = \"CLEAR_CONTEST_STUDENT_END_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_STUDENT_END_ALL: string = \"REMOVE_CONTEST_STUDENT_END_ALL\";\r\nexport const INITIAL_CONTEST_STUDENT_END: string = \"INITIAL_CONTEST_STUDENT_END\";\r\n\r\n//contest_not_open_now\r\nexport const ADD_CONTEST_STUDENT_NOT_OPEN_NOW: string = \"ADD_CONTEST_STUDENT_NOT_OPEN_NOW\";\r\nexport const EDIT_CONTEST_STUDENT_NOT_OPEN_NOW: string = \"EDIT_CONTEST_STUDENT_NOT_OPEN_NOW\";\r\nexport const REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW: string = \"REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW\";\r\nexport const CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_AMOUNT: string = \"CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_AMOUNT\";\r\nexport const CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT: string = \"CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT: string = \"CLEAR_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW_ALL: string = \"REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW_ALL\";\r\nexport const INITIAL_CONTEST_STUDENT_NOT_OPEN_NOW: string = \"INITIAL_CONTEST_STUDENT_NOT_OPEN_NOW\";\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(contest: IContestStudent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        contest\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\n// Opening\r\nexport function initialContestStudentOpening(contest: IContestStudent): IInitialContestStudentOpeningActionType {\r\n    return { type: INITIAL_CONTEST_STUDENT_OPENING, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentOpeningAll(): IRemoveContestStudentOpeningAllActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_OPENING_ALL };\r\n}\r\n\r\nexport function addContestStudentOpening(contest: IContestStudent): IAddContestStudentOpeningActionType {\r\n    return { type: ADD_CONTEST_STUDENT_OPENING, contest: contest };\r\n}\r\n\r\nexport function editContestStudentOpening(contest: IContestStudent): IEditContestStudentOpeningActionType {\r\n    return { type: EDIT_CONTEST_STUDENT_OPENING, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentOpening(id: any): IRemoveContestStudentOpeningActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_OPENING, id: id };\r\n}\r\n\r\nexport function changeSelectedContestStudentOpening(contest: IContestStudent): IChangeSelectedContestStudentOpeningActionType {\r\n    return { type: CHANGE_CONTEST_STUDENT_OPENING_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestStudentOpening(): IClearSelectedContestStudentOpeningActionType {\r\n    return { type: CLEAR_CONTEST_STUDENT_OPENING_PENDING_EDIT };\r\n}\r\n\r\n// Not open not student\r\nexport function initialContestStudentNew(contest: IContestStudent): IInitialContestStudentNewActionType {\r\n    return { type: INITIAL_CONTEST_STUDENT_NEW, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentNewAll(): IRemoveContestStudentNewAllActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_NEW_ALL };\r\n}\r\n\r\nexport function addContestStudentNew(contest: IContestStudent): IAddContestStudentNewActionType {\r\n    return { type: ADD_CONTEST_STUDENT_NEW, contest: contest };\r\n}\r\n\r\nexport function editContestStudentNew(contest: IContestStudent): IEditContestStudentNewActionType {\r\n    return { type: EDIT_CONTEST_STUDENT_NEW, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentNew(id: any): IRemoveContestStudentNewActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_NEW, id: id };\r\n}\r\n\r\nexport function changeSelectedContestNew(contest: IContestStudent): IChangeSelectedContestStudentNewActionType {\r\n    return { type: CHANGE_CONTEST_STUDENT_NEW_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestStudentNew(): IClearSelectedContestStudentNewActionType {\r\n    return { type: CLEAR_CONTEST_STUDENT_NEW_PENDING_EDIT };\r\n}\r\n\r\n// End\r\nexport function initialContestStudentEnd(contest: IContestStudent): IInitialContestStudentEndActionType {\r\n    return { type: INITIAL_CONTEST_STUDENT_END, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentEndAll(): IRemoveContestStudentEndAllActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_END_ALL };\r\n}\r\n\r\nexport function addContestStudentEnd(contest: IContestStudent): IAddContestStudentEndActionType {\r\n    return { type: ADD_CONTEST_STUDENT_END, contest: contest };\r\n}\r\n\r\nexport function editContestStudentEnd(contest: IContestStudent): IEditContestStudentEndActionType {\r\n    return { type: EDIT_CONTEST_STUDENT_END, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentEnd(id: any): IRemoveContestStudentEndActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_END, id: id };\r\n}\r\n\r\nexport function changeSelectedContestStudentEnd(contest: IContestStudent): IChangeSelectedContestStudentEndActionType {\r\n    return { type: CHANGE_CONTEST_STUDENT_END_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestStudentEnd(): IClearSelectedContestStudentEndActionType {\r\n    return { type: CLEAR_CONTEST_STUDENT_END_PENDING_EDIT };\r\n}\r\n\r\n// Not open now\r\nexport function initialContestStudentNotOpenNow(contest: IContestStudent): IInitialContestStudentNotOpenNowActionType {\r\n    return { type: INITIAL_CONTEST_STUDENT_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentNotOpenNowAll(): IRemoveContestStudentNotOpenNowAllActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW_ALL };\r\n}\r\n\r\nexport function addContestStudentNotOpenNow(contest: IContestStudent): IAddContestStudentNotOpenNowActionType {\r\n    return { type: ADD_CONTEST_STUDENT_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function editContestStudentNotOpenNow(contest: IContestStudent): IEditContestStudentNotOpenNowActionType {\r\n    return { type: EDIT_CONTEST_STUDENT_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentNotOpenNow(id: any): IRemoveContestStudentNotOpenNowActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedContestStudentNotOpenNow(contest: IContestStudent): IChangeSelectedContestStudentNotOpenNowActionType {\r\n    return { type: CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestStudentNotOpenNow(): IClearSelectedContestStudentNotOpenNowActionType {\r\n    return { type: CLEAR_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function setModificationState(value: ContestStudentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_contests\r\ninterface IAddContestStudentOpeningActionType { type: string, contest: IContestStudent };\r\ninterface IEditContestStudentOpeningActionType { type: string, contest: IContestStudent };\r\ninterface IRemoveContestStudentOpeningActionType { type: string, id: any };\r\ninterface IChangeSelectedContestStudentOpeningActionType { type: string, contest: IContestStudent };\r\ninterface IClearSelectedContestStudentOpeningActionType { type: string };\r\ninterface IRemoveContestStudentOpeningAllActionType { type: string }\r\ninterface IInitialContestStudentOpeningActionType {type: string, contest: IContestStudent}\r\n\r\n// not_register_contests\r\ninterface IAddContestStudentNewActionType { type: string, contest: IContestStudent };\r\ninterface IEditContestStudentNewActionType { type: string, contest: IContestStudent };\r\ninterface IRemoveContestStudentNewActionType { type: string, id: any };\r\ninterface IChangeSelectedContestStudentNewActionType { type: string, contest: IContestStudent };\r\ninterface IClearSelectedContestStudentNewActionType { type: string };\r\ninterface IRemoveContestStudentNewAllActionType { type: string }\r\ninterface IInitialContestStudentNewActionType {type: string, contest: IContestStudent}\r\n\r\n// not_register_contests\r\ninterface IAddContestStudentEndActionType { type: string, contest: IContestStudent };\r\ninterface IEditContestStudentEndActionType { type: string, contest: IContestStudent };\r\ninterface IRemoveContestStudentEndActionType { type: string, id: any };\r\ninterface IChangeSelectedContestStudentEndActionType { type: string, contest: IContestStudent };\r\ninterface IClearSelectedContestStudentEndActionType { type: string };\r\ninterface IRemoveContestStudentEndAllActionType { type: string }\r\ninterface IInitialContestStudentEndActionType {type: string, contest: IContestStudent}\r\n\r\n// not_register_contests\r\ninterface IAddContestStudentNotOpenNowActionType { type: string, contest: IContestStudent };\r\ninterface IEditContestStudentNotOpenNowActionType { type: string, contest: IContestStudent };\r\ninterface IRemoveContestStudentNotOpenNowActionType { type: string, id: any };\r\ninterface IChangeSelectedContestStudentNotOpenNowActionType { type: string, contest: IContestStudent };\r\ninterface IClearSelectedContestStudentNotOpenNowActionType { type: string };\r\ninterface IRemoveContestStudentNotOpenNowAllActionType { type: string }\r\ninterface IInitialContestStudentNotOpenNowActionType {type: string, contest: IContestStudent}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ContestStudentModificationStatus};","import { fetchDataSuccess, fetchDataError, \r\n    removeContestStudentEndAll, removeContestStudentNotOpenNowAll, \r\n    removeContestStudentNewAll, removeContestStudentOpeningAll,\r\n    initialContestStudentEnd, initialContestStudentNotOpenNow,\r\n    initialContestStudentNew, initialContestStudentOpening, \r\n    addContestStudentEnd, addContestStudentNotOpenNow,\r\n    addContestStudentNew, addContestStudentOpening } from \"../../../store/actions/contest_student.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ContestStudent {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    total_contest_submission: number;\r\n    total_contest_submission_graded: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n    art_type_id: number;\r\n    art_age_id: number;\r\n    student_id: number;\r\n    student_name: string;\r\n    creator_id: number;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getContestStudentByParent(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest/parent/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getContestStudentByParent(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeContestStudentEndAll())\r\n                dispatch(removeContestStudentNotOpenNowAll())\r\n                dispatch(removeContestStudentNewAll())\r\n                dispatch(removeContestStudentOpeningAll())\r\n                console.log(data)\r\n                data.body.contest_opening.map((ele: any, index: any) => {\r\n                    var contest: ContestStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        creator_id: ele.creator_id,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestStudentOpening(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestStudentOpening(contest))\r\n                    }\r\n                })\r\n\r\n                data.body.contest_new.map((ele: any, index: any) => {\r\n                    var contest: ContestStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        creator_id: ele.creator_id,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestStudentNew(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestStudentNew(contest))\r\n                    }\r\n                })\r\n\r\n\r\n                data.body.contest_end.map((ele: any, index: any) => {\r\n                    var contest: ContestStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        creator_id: ele.creator_id,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestStudentEnd(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestStudentEnd(contest))\r\n                    }\r\n                })\r\n\r\n\r\n                data.body.contest_not_open_now.map((ele: any, index: any) => {\r\n                    var contest: ContestStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        creator_id: ele.creator_id,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestStudentNotOpenNow(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestStudentNotOpenNow(contest))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport {  useSelector } from \"react-redux\";\r\nimport { IStateType, IContestStudentState } from \"../../store/models/root.interface\";\r\nimport { ILesson } from \"../../store/models/lesson.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IContestStudent } from \"../../store/models/contest_student.interface\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\n\r\nexport type lessonListProps = {\r\n    onSelect?: (lesson: ILesson) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction ContestStudentNotOpenNowList(props: lessonListProps): JSX.Element {\r\n    const contest_students: IContestStudentState = useSelector((state: IStateType) => state.contest_students);\r\n    const [totalPage, setTotalPage] = useState(0)\r\n    const [element, setElement] = useState<IContestStudent[]>([])\r\n    \r\n    const history = useHistory();\r\n    const routeChange = (contest_student: IContestStudent) =>{ \r\n        localStorage.removeItem(\"contest_id\")\r\n        localStorage.setItem('contest_id', contest_student.id.toString())\r\n        localStorage.removeItem(\"contest_name\")\r\n        localStorage.setItem('contest_name', contest_student.name)\r\n        localStorage.removeItem(\"contest_description\")\r\n        localStorage.setItem('contest_description', contest_student.description)\r\n        localStorage.removeItem(\"max_participant\")\r\n        localStorage.setItem('max_participant', contest_student.max_participant.toString())\r\n        localStorage.removeItem(\"art_type_contest\")\r\n        localStorage.setItem('art_type_contest', contest_student.art_type_name)\r\n        localStorage.removeItem(\"art_age_contest\")\r\n        localStorage.setItem('art_age_contest', contest_student.art_age_name)\r\n        localStorage.removeItem(\"registration_time\")\r\n        localStorage.setItem('registration_time', contest_student.registration_time)\r\n        localStorage.removeItem(\"start_time\")\r\n        localStorage.setItem('start_time', contest_student.start_time)\r\n        localStorage.removeItem(\"end_time\")\r\n        localStorage.setItem('end_time', contest_student.end_time)\r\n        let path = '/contests/detail-contest'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        let x = (contest_students.contest_not_open_now.length - contest_students.contest_not_open_now.length % 10) /10;\r\n        if (x === 0) {\r\n            setElement(contest_students.contest_not_open_now)\r\n        }\r\n        else {\r\n            setElement(contest_students.contest_not_open_now.slice(0,10))\r\n        }\r\n        \r\n         setTotalPage((x+1))\r\n    }, [contest_students.contest_not_open_now])\r\n\r\n    console.log((totalPage))\r\n\r\n    function handlePagination(count: number) {\r\n        console.log(count)\r\n        if (count === totalPage) {\r\n            setElement(contest_students.contest_not_open_now.slice(count*10))\r\n        }\r\n        else {\r\n            setElement(contest_students.contest_not_open_now.slice(count*10,count*10 + 10))\r\n        }\r\n    }\r\n\r\n    const [filter, setFilter] = useState(\"0\")\r\n\r\n\r\n    function handleChange(e: any) {\r\n        setFilter(e.target.value)\r\n    }\r\n    \r\n    function handleFilter() { \r\n    }\r\n\r\n    console.log(element)\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"d-flex flex-row justify-content-between align-items-center filters\">\r\n                            <h6 className=\"ml-3\">Có {element.filter((val) => {\r\n                                if (props.value === \"\") {\r\n                                    return val;\r\n                                }\r\n                                else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))) {\r\n                                    return val;\r\n                                }\r\n                                return null\r\n                            }).length} kết quả</h6>\r\n                            <div className=\"right-sort\">\r\n                                <div className=\"sort-by mr-3\">\r\n                                    <span className=\"mr-1\">Lọc theo:</span>\r\n                                    <select name=\"cars\" id=\"cars\"\r\n                                        value={filter}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        <option value=\"\">--Thể loại--</option>\r\n                                        <option value=\"0\">Chì màu</option>\r\n                                        <option value=\"1\">Sơn dầu</option>\r\n                                    </select>   \r\n                                    <select name=\"cars\" id=\"cars\" className=\"pl-2\"\r\n                                        value={filter}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        <option value=\"\">--Độ tuổi--</option>\r\n                                        <option value=\"0\">5-8 tuổi</option>\r\n                                        <option value=\"1\">10-12 tuổi</option>\r\n                                    </select>  \r\n                                    <select name=\"cars\" id=\"cars\" className=\"pl-2\"\r\n                                        value={filter}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        <option value=\"\">--Bé--</option>\r\n                                        <option value=\"0\">Nguyen X</option>\r\n                                        <option value=\"1\">Nguyen Y</option>\r\n                                    </select>                              \r\n                                    <button className=\"btn btn-outline-dark btn-sm ml-3 filter\" type=\"button\" onClick={() => {handleFilter()}}>Lọc&nbsp;<i className=\"fa fa-flask\"></i></button></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-1\">\r\n                    {\r\n                        element.filter((val) => {\r\n                            if (props.value === \"\") {\r\n                                return val;\r\n                            }\r\n                            else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))) {\r\n                                return val;\r\n                            }\r\n                            return null\r\n                        }).map((ele, index) => {\r\n                            if (ele === undefined) {\r\n                                return null\r\n                            }\r\n                            return (\r\n                                <div className=\"col-md-4\" onClick={() => { routeChange(ele) }}>\r\n                                    <div className=\"p-card bg-white p-2 rounded px-3 product-x\">\r\n                                        <div className=\"d-flex align-items-center credits\"><img src={ele.image_url} width=\"100%\" alt=\"\" /></div>\r\n                                        <h5 className=\"mt-2\">{ele.name}</h5><span className=\"badge badge-danger py-1 mb-2\">{ele.art_type_name} &amp; {ele.art_age_name}</span>\r\n                                        <span className=\"d-block\">Học sinh: {ele.student_name}</span>\r\n                                        <span className=\"d-block\">Ngày bắt đầu: {ele.start_time.replaceAll(\"T\", \" \")}</span>\r\n                                        <span className=\"d-block\">Ngày kết thúc đầu: {ele.end_time.replaceAll(\"T\", \" \")}</span>\r\n                                        <span className=\"d-block\">Số đăng kí tối đa: {ele.max_participant}</span>\r\n                                        <span className=\"d-block mb-5\">Ngày hết hạn đăng kí: {ele.registration_time.replaceAll(\"T\", \" \")}</span>\r\n                                        <div\r\n                                            className=\"d-flex justify-content-between stats\">\r\n                                                <div><i className=\"fa fa-calendar-o\"></i><span className=\"ml-2\"></span></div>\r\n                                            <div className=\"d-flex flex-row align-items-center\">\r\n                                                <div className=\"profiles\"><img className=\"rounded-circle\" src=\"https://i.imgur.com/4nUVGjW.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\" https://i.imgur.com/GHCtqgp.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\"https://i.imgur.com/UL0GS75.jpg\" alt=\"\" width=\"30\" /></div><span className=\"ml-3\">\r\n                                                    {ele.total_register_contest}\r\n                                                </span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"d-flex justify-content-end text-right mt-2\">\r\n                    <nav>\r\n                        <ul className=\"pagination\">\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Previous\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&laquo;</span>\r\n                                </a>\r\n                            </li>\r\n                            {\r\n                                Array.from(Array((totalPage)).keys()).map((ele, idx) => {\r\n                                    return (\r\n                                        <li className=\"page-item\"><a className=\"page-link\" href=\"/\" onClick={(e) => { \r\n                                            e.preventDefault()\r\n                                            handlePagination(ele) }}>{ele + 1}</a></li>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Next\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&raquo;</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ContestStudentNotOpenNowList;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport {  useSelector } from \"react-redux\";\r\nimport { IStateType, IContestStudentState } from \"../../store/models/root.interface\";\r\nimport { ILesson } from \"../../store/models/lesson.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IContestStudent } from \"../../store/models/contest_student.interface\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\n\r\nexport type lessonListProps = {\r\n    onSelect?: (lesson: ILesson) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction ContestStudentDoingList(props: lessonListProps): JSX.Element {\r\n    const contest_students: IContestStudentState = useSelector((state: IStateType) => state.contest_students);\r\n    const [totalPage, setTotalPage] = useState(0)\r\n    const [element, setElement] = useState<IContestStudent[]>([])\r\n    \r\n    const history = useHistory();\r\n    const routeChange = (contest_student: IContestStudent) =>{ \r\n        localStorage.removeItem(\"contest_id\")\r\n        localStorage.setItem('contest_id', contest_student.id.toString())\r\n        localStorage.removeItem(\"contest_name\")\r\n        localStorage.setItem('contest_name', contest_student.name)\r\n        localStorage.removeItem(\"contest_description\")\r\n        localStorage.setItem('contest_description', contest_student.description)\r\n        localStorage.removeItem(\"max_participant\")\r\n        localStorage.setItem('max_participant', contest_student.max_participant.toString())\r\n        localStorage.removeItem(\"art_type_contest\")\r\n        localStorage.setItem('art_type_contest', contest_student.art_type_name)\r\n        localStorage.removeItem(\"art_age_contest\")\r\n        localStorage.setItem('art_age_contest', contest_student.art_age_name)\r\n        localStorage.removeItem(\"registration_time\")\r\n        localStorage.setItem('registration_time', contest_student.registration_time)\r\n        localStorage.removeItem(\"start_time\")\r\n        localStorage.setItem('start_time', contest_student.start_time)\r\n        localStorage.removeItem(\"end_time\")\r\n        localStorage.setItem('end_time', contest_student.end_time)\r\n        let path = '/contests/detail-contest'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        let x = (contest_students.contest_opening.length - contest_students.contest_opening.length % 10) /10;\r\n        if (x === 0) {\r\n            setElement(contest_students.contest_opening)\r\n        }\r\n        else {\r\n            setElement(contest_students.contest_opening.slice(0,10))\r\n        }\r\n        \r\n         setTotalPage((x+1))\r\n    }, [contest_students.contest_opening])\r\n\r\n    console.log((totalPage))\r\n\r\n    function handlePagination(count: number) {\r\n        console.log(count)\r\n        if (count === totalPage) {\r\n            setElement(contest_students.contest_opening.slice(count*10))\r\n        }\r\n        else {\r\n            setElement(contest_students.contest_opening.slice(count*10,count*10 + 10))\r\n        }\r\n    }\r\n\r\n    const [filter, setFilter] = useState(\"0\")\r\n\r\n\r\n    function handleChange(e: any) {\r\n        setFilter(e.target.value)\r\n    }\r\n    \r\n    function handleFilter() { \r\n    }\r\n\r\n    console.log(element)\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"d-flex flex-row justify-content-between align-items-center filters\">\r\n                            <h6 className=\"ml-3\">Có {element.filter((val) => {\r\n                                if (props.value === \"\") {\r\n                                    return val;\r\n                                }\r\n                                else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))) {\r\n                                    return val;\r\n                                }\r\n                                return null\r\n                            }).length} kết quả</h6>\r\n                            <div className=\"right-sort\">\r\n                                <div className=\"sort-by mr-3\">\r\n                                    <span className=\"mr-1\">Lọc theo:</span>\r\n                                    <select name=\"cars\" id=\"cars\"\r\n                                        value={filter}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        <option value=\"\">--Thể loại--</option>\r\n                                        <option value=\"0\">Chì màu</option>\r\n                                        <option value=\"1\">Sơn dầu</option>\r\n                                    </select>   \r\n                                    <select name=\"cars\" id=\"cars\" className=\"pl-2\"\r\n                                        value={filter}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        <option value=\"\">--Độ tuổi--</option>\r\n                                        <option value=\"0\">5-8 tuổi</option>\r\n                                        <option value=\"1\">10-12 tuổi</option>\r\n                                    </select>  \r\n                                    <select name=\"cars\" id=\"cars\" className=\"pl-2\"\r\n                                        value={filter}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        <option value=\"\">--Bé--</option>\r\n                                        <option value=\"0\">Nguyen X</option>\r\n                                        <option value=\"1\">Nguyen Y</option>\r\n                                    </select>                              \r\n                                    <button className=\"btn btn-outline-dark btn-sm ml-3 filter\" type=\"button\" onClick={() => {handleFilter()}}>Lọc&nbsp;<i className=\"fa fa-flask\"></i></button></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-1\">\r\n                    {\r\n                        element.filter((val) => {\r\n                            if (props.value === \"\") {\r\n                                return val;\r\n                            }\r\n                            else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))) {\r\n                                return val;\r\n                            }\r\n                            return null\r\n                        }).map((ele, index) => {\r\n                            if (ele === undefined) {\r\n                                return null\r\n                            }\r\n                            return (\r\n                                <div className=\"col-md-4\" onClick={() => { routeChange(ele) }}>\r\n                                    <div className=\"p-card bg-white p-2 rounded px-3 product-x\">\r\n                                        <div className=\"d-flex align-items-center credits\"><img src={ele.image_url} width=\"100%\" alt=\"\" /></div>\r\n                                        <h5 className=\"mt-2\">{ele.name}</h5><span className=\"badge badge-danger py-1 mb-2\">{ele.art_type_name} &amp; {ele.art_age_name}</span>\r\n                                        <span className=\"d-block\">Học sinh: {ele.student_name}</span>\r\n                                        <span className=\"d-block\">Ngày bắt đầu: {ele.start_time.replaceAll(\"T\", \" \")}</span>\r\n                                        <span className=\"d-block\">Ngày kết thúc đầu: {ele.end_time.replaceAll(\"T\", \" \")}</span>\r\n                                        <span className=\"d-block\">Số đăng kí tối đa: {ele.max_participant}</span>\r\n                                        <span className=\"d-block mb-5\">Ngày hết hạn đăng kí: {ele.registration_time.replaceAll(\"T\", \" \")}</span>\r\n                                        <div\r\n                                            className=\"d-flex justify-content-between stats\">\r\n                                                <div><i className=\"fa fa-calendar-o\"></i><span className=\"ml-2\"></span></div>\r\n                                            <div className=\"d-flex flex-row align-items-center\">\r\n                                                <div className=\"profiles\"><img className=\"rounded-circle\" src=\"https://i.imgur.com/4nUVGjW.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\" https://i.imgur.com/GHCtqgp.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\"https://i.imgur.com/UL0GS75.jpg\" alt=\"\" width=\"30\" /></div><span className=\"ml-3\">\r\n                                                    {ele.total_register_contest}\r\n                                                </span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"d-flex justify-content-end text-right mt-2\">\r\n                    <nav>\r\n                        <ul className=\"pagination\">\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Previous\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&laquo;</span>\r\n                                </a>\r\n                            </li>\r\n                            {\r\n                                Array.from(Array((totalPage)).keys()).map((ele, idx) => {\r\n                                    return (\r\n                                        <li className=\"page-item\"><a className=\"page-link\" href=\"/\" onClick={(e) => { \r\n                                            e.preventDefault()\r\n                                            handlePagination(ele) }}>{ele + 1}</a></li>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Next\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&raquo;</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ContestStudentDoingList;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IContestStudentState } from \"../../store/models/root.interface\";\r\nimport { ILesson } from \"../../store/models/lesson.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IContestStudent } from \"../../store/models/contest_student.interface\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\n\r\nexport type lessonListProps = {\r\n    onSelect?: (lesson: ILesson) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction ContestStudentEndList(props: lessonListProps): JSX.Element {\r\n    const contest_students: IContestStudentState = useSelector((state: IStateType) => state.contest_students);\r\n    const [totalPage, setTotalPage] = useState(0)\r\n    const [element, setElement] = useState<IContestStudent[]>([])\r\n    \r\n    const history = useHistory();\r\n\r\n    const routeChange = (contest: IContestStudent) => {\r\n        let path = '/contest/result-grade';\r\n        localStorage.removeItem('contest_id');\r\n        localStorage.setItem('contest_id', contest.id.toString())\r\n        localStorage.removeItem('contest_name')\r\n        localStorage.setItem('contest_name', contest.name)\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        let x = (contest_students.contest_end.length - contest_students.contest_end.length % 10) /10;\r\n        if (x === 0) {\r\n            setElement(contest_students.contest_end)\r\n        }\r\n        else {\r\n            setElement(contest_students.contest_end.slice(0,10))\r\n        }\r\n        \r\n         setTotalPage((x+1))\r\n    }, [contest_students.contest_end])\r\n\r\n    console.log((totalPage))\r\n\r\n    function handlePagination(count: number) {\r\n        console.log(count)\r\n        if (count === totalPage) {\r\n            setElement(contest_students.contest_end.slice(count*10))\r\n        }\r\n        else {\r\n            setElement(contest_students.contest_end.slice(count*10,count*10 + 10))\r\n        }\r\n    }\r\n\r\n    const [filter, setFilter] = useState(\"0\")\r\n\r\n\r\n    function handleChange(e: any) {\r\n        setFilter(e.target.value)\r\n    }\r\n    \r\n    function handleFilter() { \r\n    }\r\n\r\n    console.log(element)\r\n\r\n\r\n    return (\r\n            <Fragment>\r\n            <div className=\"container mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"d-flex flex-row justify-content-between align-items-center filters\">\r\n                            <h6 className=\"ml-3\">Có {element.filter((val) => {\r\n                                if (props.value === \"\") {\r\n                                    return val;\r\n                                }\r\n                                else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))) {\r\n                                    return val;\r\n                                }\r\n                                return null\r\n                            }).length} kết quả</h6>\r\n                            <div className=\"right-sort\">\r\n                                <div className=\"sort-by mr-3\">\r\n                                    <span className=\"mr-1\">Lọc theo:</span>\r\n                                    <select name=\"cars\" id=\"cars\"\r\n                                        value={filter}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        <option value=\"\">--Thể loại--</option>\r\n                                        <option value=\"0\">Chì màu</option>\r\n                                        <option value=\"1\">Sơn dầu</option>\r\n                                    </select>   \r\n                                    <select name=\"cars\" id=\"cars\" className=\"pl-2\"\r\n                                        value={filter}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        <option value=\"\">--Độ tuổi--</option>\r\n                                        <option value=\"0\">5-8 tuổi</option>\r\n                                        <option value=\"1\">10-12 tuổi</option>\r\n                                    </select>  \r\n                                    <select name=\"cars\" id=\"cars\" className=\"pl-2\"\r\n                                        value={filter}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        <option value=\"\">--Bé--</option>\r\n                                        <option value=\"0\">Nguyen X</option>\r\n                                        <option value=\"1\">Nguyen Y</option>\r\n                                    </select>                                \r\n                                    <button className=\"btn btn-outline-dark btn-sm ml-3 filter\" type=\"button\" onClick={() => {handleFilter()}}>Lọc&nbsp;<i className=\"fa fa-flask\"></i></button></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-1\">\r\n                    {\r\n                        element.filter((val) => {\r\n                            if (props.value === \"\") {\r\n                                return val;\r\n                            }\r\n                            else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))) {\r\n                                return val;\r\n                            }\r\n                            return null\r\n                        }).map((ele, index) => {\r\n                            if (ele === undefined) {\r\n                                return null\r\n                            }\r\n                            return (\r\n                                <div className=\"col-md-4\" onClick={() => { routeChange(ele) }}>\r\n                                    <div className=\"p-card bg-white p-2 rounded px-3 product-x\">\r\n                                        <div className=\"d-flex align-items-center credits\"><img src={ele.image_url} width=\"100%\" alt=\"\" /></div>\r\n                                        <h5 className=\"mt-2\">{ele.name}</h5><span className=\"badge badge-danger py-1 mb-2\">{ele.art_type_name} &amp; {ele.art_age_name}</span>\r\n                                        <span className=\"d-block\">Học sinh: {ele.student_name}</span>\r\n                                        <span className=\"d-block\">Ngày bắt đầu: {ele.start_time.replaceAll(\"T\", \" \")}</span>\r\n                                        <span className=\"d-block\">Ngày kết thúc đầu: {ele.end_time.replaceAll(\"T\", \" \")}</span>\r\n                                        <span className=\"d-block\">Số đăng kí tối đa: {ele.max_participant}</span>\r\n                                        <span className=\"d-block mb-5\">Ngày hết hạn đăng kí: {ele.registration_time.replaceAll(\"T\", \" \")}</span>\r\n                                        <div\r\n                                            className=\"d-flex justify-content-between stats\">\r\n                                                <div><i className=\"fa fa-calendar-o\"></i><span className=\"ml-2\"></span></div>\r\n                                            <div className=\"d-flex flex-row align-items-center\">\r\n                                                <div className=\"profiles\"><img className=\"rounded-circle\" src=\"https://i.imgur.com/4nUVGjW.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\" https://i.imgur.com/GHCtqgp.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\"https://i.imgur.com/UL0GS75.jpg\" alt=\"\" width=\"30\" /></div><span className=\"ml-3\">\r\n                                                    {ele.total_register_contest}\r\n                                                </span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"d-flex justify-content-end text-right mt-2\">\r\n                    <nav>\r\n                        <ul className=\"pagination\">\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Previous\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&laquo;</span>\r\n                                </a>\r\n                            </li>\r\n                            {\r\n                                Array.from(Array((totalPage)).keys()).map((ele, idx) => {\r\n                                    return (\r\n                                        <li className=\"page-item\"><a className=\"page-link\" href=\"/\" onClick={(e) => { \r\n                                        e.preventDefault()\r\n                                        handlePagination(ele) }}>{ele + 1}</a></li>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Next\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&raquo;</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ContestStudentEndList;\r\n","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { IContestStudentState, IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getContestStudentByParent } from \"../../common/service/ContestStudent/GetContestStudentByParent\";\r\nimport ContestStudentNotOpenNowList from \"./ContestStudentNotOpenNowListList\";\r\nimport ContestStudentDoingList from \"./ContestDoingStudentList\";\r\nimport ContestStudentEndList from \"./ContestEndStudentList\";\r\n\r\nconst ContestParent: React.FC = () => {\r\n    const [checked1, setChecked1] = useState(true);\r\n    const [checked2, setChecked2] = useState(false);\r\n    const [checked3, setChecked3] = useState(false);\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const contest_student: IContestStudentState = useSelector((state: IStateType) => state.contest_students);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberNotOpenNowCount: number = contest_student.contest_not_open_now.length;\r\n    const numberContestEndCount: number = contest_student.contest_end.length;\r\n    const numberContestOpeningCount: number = contest_student.contest_opening.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getContestStudentByParent(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getContestStudentByParent(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Cuộc thi của bé\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                <div className=\"row\">\r\n                    <TopCard title=\"CHƯA DIỄN RA\" text={`${numberNotOpenNowCount}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"ĐANG DIỄN RA\" text={`${numberContestOpeningCount}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"ĐÃ KẾT THÚC\" text={`${numberContestEndCount}`} icon=\"book\" class=\"primary\" />\r\n                    {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(StudentRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n                </div>\r\n\r\n                <div className=\"row\" id=\"search-box\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"input-group\" id=\"search-content\">\r\n                            <div className=\"form-outline\">\r\n                                <input type=\"text\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                                    setSearchTerm(event.target.value)\r\n                                    console.log(searchTerm)\r\n                                }} />\r\n                            </div>\r\n                            <button type=\"button\" className=\"btn btn-primary\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                            if (checked1 === false) {\r\n                                setChecked1(true)\r\n                                setChecked2(false)\r\n                                setChecked3(false)\r\n                            }\r\n                        }} style={{\r\n                            color: checked1 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Cuộc thi chưa diễn ra</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"50%\",\r\n                            backgroundColor: checked1 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                            if (checked2 === false) {\r\n                                setChecked2(true)\r\n                                setChecked1(false)\r\n                                setChecked3(false)\r\n                            }\r\n                        }}\r\n                            style={{\r\n                                color: checked2 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                            }}>Cuộc thi đang diễn ra</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"50%\",\r\n                            backgroundColor: checked2 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                            if (checked3 === false) {\r\n                                setChecked3(true)\r\n                                setChecked1(false)\r\n                                setChecked2(false)\r\n                            }\r\n                        }}\r\n                            style={{\r\n                                color: checked3 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                            }}>Cuộc thi đã kết thúc</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"50%\",\r\n                            backgroundColor: checked3 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    function () {\r\n                        if (checked2 === true) {\r\n                            return (\r\n                                <Fragment>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                                <div className=\"card-header py-3\">\r\n                                                    <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách cuộc thi</h6>\r\n                                                </div>\r\n                                                <div className=\"card-body\">\r\n                                                    <ContestStudentDoingList />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        else if (checked1 === true) {\r\n                            return (\r\n                                <Fragment>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                                <div className=\"card-header py-3\">\r\n                                                    <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách cuộc thi</h6>\r\n                                                </div>\r\n                                                <div className=\"card-body\">\r\n                                                    <ContestStudentNotOpenNowList value={searchTerm}/>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n\r\n                        else if (checked3 === true) {\r\n                            return (\r\n                                <Fragment>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                                <div className=\"card-header py-3\">\r\n                                                    <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách cuộc thi</h6>\r\n                                                </div>\r\n                                                <div className=\"card-body\">\r\n                                                    <ContestStudentEndList value={searchTerm}/>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                    }()\r\n                }\r\n\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default ContestParent;\r\n","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IRootPageStateType, IScheduleTimeClassState } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedProduct\r\n} from \"../../store/actions/products.action\";\r\n\r\n\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, ViewsDirective, ViewDirective } from \"@syncfusion/ej2-react-schedule\";\r\n\r\nimport \"@syncfusion/ej2-base/styles/material.css\";\r\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\r\nimport { getScheduleTimeByParent } from \"../../common/service/ScheduleTimeClass/GetScheduleTimeByParent\";\r\n\r\n\r\nconst ScheduleParent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const schedule_time_classes: IScheduleTimeClassState = useSelector((state: IStateType) => state.schedule_time_classes);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getScheduleTimeByParent(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getScheduleTimeByParent(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, id])\r\n\r\n    let data: object[] = []\r\n\r\n  schedule_time_classes.schedule_time_classes.map((ele, index) => {\r\n    if (ele !== undefined && ele !== null) {\r\n      return data.push({\r\n        Id: index,\r\n        Subject: ele.class_name !== undefined && ele.class_name !== null ? ele.class_name : \"\",\r\n        StartTime: new Date(ele.start_time),\r\n        EndTime: new Date(ele.end_time),\r\n        IsAllDay: false\r\n      })\r\n    }\r\n    return 1\r\n  })\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedProduct());\r\n        dispatch(updateCurrentPath(\"Thời khóa biểu\", \"\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-body\">\r\n                        <ScheduleComponent height='550px' selectedDate={new Date()} eventSettings={{\r\n                  dataSource: data, fields: {\r\n                    id: 'Id',\r\n                    subject: { name: 'Subject' },\r\n                    isAllDay: { name: 'IsAllDay' },\r\n                    startTime: { name: 'StartTime' },\r\n                    endTime: { name: 'EndTime' }\r\n                  }\r\n                }}>\r\n\r\n                  <ViewsDirective>\r\n                    <ViewDirective option='WorkWeek' startHour='07:00' endHour='22:00' />\r\n                    <ViewDirective option='Week' startHour='07:00' endHour='22:00' />\r\n                    <ViewDirective option='Month' showWeekend={false} />\r\n                  </ViewsDirective>\r\n                  <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\r\n                </ScheduleComponent>;\r\n                                \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default ScheduleParent;\r\n","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { ICourseParentState, IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./CourseTeacher.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getCourseParent } from \"../../common/service/CourseParent/GetCourseParent\";\r\n\r\nconst CourseParent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const course_teachers: ICourseParentState = useSelector((state: IStateType) => state.course_parents);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberParentRegisterSuccessfullCount: number = course_teachers.courses_registed.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    console.log(course_teachers)\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getCourseParent(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getCourseParent(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khóa học\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n    const [checked, setChecked] = useState(true);\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"ĐÃ ĐĂNG KÍ\" text={`${numberParentRegisterSuccessfullCount}`} icon=\"book\" class=\"primary\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(ParentRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked === false) {\r\n                            setChecked(true)\r\n                        }\r\n                    }} style={{\r\n                        color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Khám phá</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked === true) {\r\n                            setChecked(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                        }}>Đã đăng kí</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#ffffff\" : \"#F24E1E\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    \r\n\r\n\r\n                                </div>\r\n\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    \r\n                                </div>\r\n\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default CourseParent;\r\n","import { fetchDataSuccess, fetchDataError, addScheduleTimeClass, removeScheduleTimeClassAll } from \"../../../store/actions/schedule_time_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\ninterface ScheduleTimeClass {\r\n    class_name: string;\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\nexport function getScheduleTimeByChild(dispatch: any, child_id: number) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/classes/schedule-child/${child_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getScheduleTimeByChild(dispatch, child_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeScheduleTimeClassAll())\r\n                //console.log(data.body.schedule_time)\r\n                data.body.schedules.map((ele: any, index: any) => {\r\n                        let k = Object.values(ele)\r\n                        let xxas = Object.keys(ele)\r\n                        console.log(xxas)\r\n                        return k.map((ele_2: any) => {\r\n                            return Object.values(ele_2).map((ele_3: any) => {\r\n                                //console.log(ele_2)\r\n                                let x_1 = Object.values(ele_3)\r\n                                let y_1 = Object.keys(ele_3)\r\n                                console.log(y_1)\r\n                                console.log(x_1)\r\n                                return x_1.map((ele_4: any) => {\r\n                                    return ele_4.map((ele_5: any) => {\r\n                                        console.log(ele_5)\r\n                                                if (ele_5.length > 0){\r\n                                                    let time: ScheduleTimeClass = {\r\n                                                        class_name: xxas[0],\r\n                                                        start_time: ele_5[0],\r\n                                                        end_time: ele_5[1]\r\n                                                    }\r\n                                                    dispatch(addScheduleTimeClass(time))\r\n                                                }\r\n                                                return ele_5\r\n                                        \r\n                                    })\r\n                                })\r\n                            })\r\n                        })\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IRootPageStateType, IScheduleTimeClassState } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedProduct\r\n} from \"../../store/actions/products.action\";\r\n\r\n\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, ViewsDirective, ViewDirective } from \"@syncfusion/ej2-react-schedule\";\r\n\r\nimport \"@syncfusion/ej2-base/styles/material.css\";\r\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\r\n\r\nimport { getScheduleTimeByChild } from \"../../common/service/ScheduleTimeClass/GetScheduleTimeByStudent\";\r\n\r\n\r\nconst ScheduleStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const schedule_time_classes: IScheduleTimeClassState = useSelector((state: IStateType) => state.schedule_time_classes);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    console.log(schedule_time_classes.schedule_time_classes)\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getScheduleTimeByChild(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getScheduleTimeByChild(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, id])\r\n\r\n    let data: object[] = []\r\n\r\n    if (schedule_time_classes.schedule_time_classes.length > 1 && promiseInProgress === false) {\r\n        schedule_time_classes.schedule_time_classes.map((ele, index) => {\r\n            if (ele !== undefined && ele !== null) {\r\n                return data.push({\r\n                    Id: index,\r\n                    Subject: (ele.class_name !== undefined && ele.class_name !== null) ? ele.class_name : \"\",\r\n                    StartTime: new Date(ele.start_time),\r\n                    EndTime: new Date(ele.end_time),\r\n                    IsAllDay: false\r\n                })\r\n            }\r\n            return 1\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedProduct());\r\n        dispatch(updateCurrentPath(\"Thời khóa biểu\", \"\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"card shadow mb-4\">\r\n                            <div className=\"card-body\">\r\n                                <ScheduleComponent height='550px' selectedDate={new Date()} eventSettings={{\r\n                                    dataSource: data, fields: {\r\n                                        id: 'Id',\r\n                                        subject: { name: 'Subject' },\r\n                                        isAllDay: { name: 'IsAllDay' },\r\n                                        startTime: { name: 'StartTime' },\r\n                                        endTime: { name: 'EndTime' }\r\n                                    }\r\n                                }}>\r\n\r\n                                    <ViewsDirective>\r\n                                        <ViewDirective option='WorkWeek' startHour='07:00' endHour='22:00' />\r\n                                        <ViewDirective option='Week' startHour='07:00' endHour='22:00' />\r\n                                        <ViewDirective option='Month' showWeekend={false} />\r\n                                    </ViewsDirective>\r\n                                    <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\r\n                                </ScheduleComponent>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment >\r\n    );\r\n};\r\n\r\nexport default ScheduleStudent;\r\n","import { fetchDataSuccess, fetchDataError, \r\n    removeContestStudentEndAll, removeContestStudentNotOpenNowAll, \r\n    removeContestStudentNewAll, removeContestStudentOpeningAll,\r\n    initialContestStudentEnd, initialContestStudentNotOpenNow,\r\n    initialContestStudentNew, initialContestStudentOpening, \r\n    addContestStudentEnd, addContestStudentNotOpenNow,\r\n    addContestStudentNew, addContestStudentOpening } from \"../../../store/actions/contest_student.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ContestStudent {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    total_contest_submission: number;\r\n    total_contest_submission_graded: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n    art_type_id: number;\r\n    art_age_id: number;\r\n    student_id: number;\r\n    student_name: string;\r\n    creator_id: number;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getContestStudentByStudent(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest/student/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getContestStudentByStudent(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeContestStudentEndAll())\r\n                dispatch(removeContestStudentNotOpenNowAll())\r\n                dispatch(removeContestStudentNewAll())\r\n                dispatch(removeContestStudentOpeningAll())\r\n                console.log(data)\r\n                data.body.contest_opening.map((ele: any, index: any) => {\r\n                    var contest: ContestStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        creator_id: ele.creator_id,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestStudentOpening(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestStudentOpening(contest))\r\n                    }\r\n                })\r\n\r\n                data.body.contest_new.map((ele: any, index: any) => {\r\n                    var contest: ContestStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        creator_id: ele.creator_id,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestStudentNew(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestStudentNew(contest))\r\n                    }\r\n                })\r\n\r\n\r\n                data.body.contest_end.map((ele: any, index: any) => {\r\n                    var contest: ContestStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        creator_id: ele.creator_id,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestStudentEnd(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestStudentEnd(contest))\r\n                    }\r\n                })\r\n\r\n\r\n                data.body.contest_not_open_now.map((ele: any, index: any) => {\r\n                    var contest: ContestStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        creator_id: ele.creator_id,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestStudentNotOpenNow(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestStudentNotOpenNow(contest))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport {  useSelector } from \"react-redux\";\r\nimport { IStateType, IContestStudentState } from \"../../store/models/root.interface\";\r\nimport { ILesson } from \"../../store/models/lesson.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IContestStudent } from \"../../store/models/contest_student.interface\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\n\r\nexport type lessonListProps = {\r\n    onSelect?: (lesson: ILesson) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction ContestStudentDoingList1(props: lessonListProps): JSX.Element {\r\n    const contest_students: IContestStudentState = useSelector((state: IStateType) => state.contest_students);\r\n    const [totalPage, setTotalPage] = useState(0)\r\n    const [element, setElement] = useState<IContestStudent[]>([])\r\n    \r\n    const history = useHistory();\r\n    const routeChange = (contest_student: IContestStudent) =>{ \r\n        localStorage.removeItem(\"contest_id\")\r\n        localStorage.setItem('contest_id', contest_student.id.toString())\r\n        localStorage.removeItem(\"contest_name\")\r\n        localStorage.setItem('contest_name', contest_student.name)\r\n        localStorage.removeItem(\"contest_description\")\r\n        localStorage.setItem('contest_description', contest_student.description)\r\n        localStorage.removeItem(\"max_participant\")\r\n        localStorage.setItem('max_participant', contest_student.max_participant.toString())\r\n        localStorage.removeItem(\"art_type_contest\")\r\n        localStorage.setItem('art_type_contest', contest_student.art_type_name)\r\n        localStorage.removeItem(\"art_age_contest\")\r\n        localStorage.setItem('art_age_contest', contest_student.art_age_name)\r\n        localStorage.removeItem(\"registration_time\")\r\n        localStorage.setItem('registration_time', contest_student.registration_time)\r\n        localStorage.removeItem(\"start_time\")\r\n        localStorage.setItem('start_time', contest_student.start_time)\r\n        localStorage.removeItem(\"end_time\")\r\n        localStorage.setItem('end_time', contest_student.end_time)\r\n        let path = '/contests/detail-contest'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        let x = (contest_students.contest_opening.length - contest_students.contest_opening.length % 10) /10;\r\n        if (x === 0) {\r\n            setElement(contest_students.contest_opening)\r\n        }\r\n        else {\r\n            setElement(contest_students.contest_opening.slice(0,10))\r\n        }\r\n        \r\n         setTotalPage((x+1))\r\n    }, [contest_students.contest_opening])\r\n\r\n    console.log((totalPage))\r\n\r\n    function handlePagination(count: number) {\r\n        console.log(count)\r\n        if (count === totalPage) {\r\n            setElement(contest_students.contest_opening.slice(count*10))\r\n        }\r\n        else {\r\n            setElement(contest_students.contest_opening.slice(count*10,count*10 + 10))\r\n        }\r\n    }\r\n\r\n    const [filter, setFilter] = useState(\"0\")\r\n\r\n\r\n    function handleChange(e: any) {\r\n        setFilter(e.target.value)\r\n    }\r\n    \r\n    function handleFilter() { \r\n    }\r\n\r\n    console.log(element)\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"d-flex flex-row justify-content-between align-items-center filters\">\r\n                            <h6 className=\"ml-3\">Có {element.filter((val) => {\r\n                                if (props.value === \"\") {\r\n                                    return val;\r\n                                }\r\n                                else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))) {\r\n                                    return val;\r\n                                }\r\n                                return null\r\n                            }).length} kết quả</h6>\r\n                            <div className=\"right-sort\">\r\n                                <div className=\"sort-by mr-3\">\r\n                                    <span className=\"mr-1\">Lọc theo:</span>\r\n                                    <select name=\"cars\" id=\"cars\"\r\n                                        value={filter}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        <option value=\"\">--Thể loại--</option>\r\n                                        <option value=\"0\">Chì màu</option>\r\n                                        <option value=\"1\">Sơn dầu</option>\r\n                                    </select>   \r\n                                    <select name=\"cars\" id=\"cars\" className=\"pl-2\"\r\n                                        value={filter}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        <option value=\"\">--Độ tuổi--</option>\r\n                                        <option value=\"0\">5-8 tuổi</option>\r\n                                        <option value=\"1\">10-12 tuổi</option>\r\n                                    </select>  \r\n                                    <select name=\"cars\" id=\"cars\" className=\"pl-2\"\r\n                                        value={filter}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        <option value=\"\">--Bé--</option>\r\n                                        <option value=\"0\">Nguyen X</option>\r\n                                        <option value=\"1\">Nguyen Y</option>\r\n                                    </select>                              \r\n                                    <button className=\"btn btn-outline-dark btn-sm ml-3 filter\" type=\"button\" onClick={() => {handleFilter()}}>Lọc&nbsp;<i className=\"fa fa-flask\"></i></button></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-1\">\r\n                    {\r\n                        element.filter((val) => {\r\n                            if (props.value === \"\") {\r\n                                return val;\r\n                            }\r\n                            else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))) {\r\n                                return val;\r\n                            }\r\n                            return null\r\n                        }).map((ele, index) => {\r\n                            if (ele === undefined) {\r\n                                return null\r\n                            }\r\n                            return (\r\n                                <div className=\"col-md-4\" onClick={() => { routeChange(ele) }}>\r\n                                    <div className=\"p-card bg-white p-2 rounded px-3 product-x\">\r\n                                        <div className=\"d-flex align-items-center credits\"><img src={ele.image_url} width=\"100%\" alt=\"\" /></div>\r\n                                        <h5 className=\"mt-2\">{ele.name}</h5><span className=\"badge badge-danger py-1 mb-2\">{ele.art_type_name} &amp; {ele.art_age_name}</span>\r\n                                        <span className=\"d-block\">Học sinh: {ele.student_name}</span>\r\n                                        <span className=\"d-block\">Ngày bắt đầu: {ele.start_time.replaceAll(\"T\", \" \")}</span>\r\n                                        <span className=\"d-block\">Ngày kết thúc đầu: {ele.end_time.replaceAll(\"T\", \" \")}</span>\r\n                                        <span className=\"d-block\">Số đăng kí tối đa: {ele.max_participant}</span>\r\n                                        <span className=\"d-block mb-5\">Ngày hết hạn đăng kí: {ele.registration_time.replaceAll(\"T\", \" \")}</span>\r\n                                        <div\r\n                                            className=\"d-flex justify-content-between stats\">\r\n                                                <div><i className=\"fa fa-calendar-o\"></i><span className=\"ml-2\"></span></div>\r\n                                            <div className=\"d-flex flex-row align-items-center\">\r\n                                                <div className=\"profiles\"><img className=\"rounded-circle\" src=\"https://i.imgur.com/4nUVGjW.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\" https://i.imgur.com/GHCtqgp.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\"https://i.imgur.com/UL0GS75.jpg\" alt=\"\" width=\"30\" /></div><span className=\"ml-3\">\r\n                                                    {ele.total_register_contest}\r\n                                                </span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"d-flex justify-content-end text-right mt-2\">\r\n                    <nav>\r\n                        <ul className=\"pagination\">\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Previous\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&laquo;</span>\r\n                                </a>\r\n                            </li>\r\n                            {\r\n                                Array.from(Array((totalPage)).keys()).map((ele, idx) => {\r\n                                    return (\r\n                                        <li className=\"page-item\"><a className=\"page-link\" href=\"/\" onClick={(e) => { \r\n                                            e.preventDefault()\r\n                                            handlePagination(ele) }}>{ele + 1}</a></li>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Next\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&raquo;</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ContestStudentDoingList1;\r\n","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { IContestStudentState, IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getContestStudentByStudent } from \"../../common/service/ContestStudent/GetContestStudent\";\r\nimport ContestStudentNotOpenNowList from \"./ContestStudentNotOpenNowListList\";\r\nimport ContestStudentEndList from \"./ContestEndStudentList\";\r\nimport ContestStudentDoingList1 from \"./ContestStudentDoingList1\";\r\n\r\nconst ContestStudent: React.FC = () => {\r\n    const [checked1, setChecked1] = useState(true);\r\n    const [checked2, setChecked2] = useState(false);\r\n    const [checked3, setChecked3] = useState(false);\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const contest_student: IContestStudentState = useSelector((state: IStateType) => state.contest_students);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberNotOpenNowCount: number = contest_student.contest_not_open_now.length;\r\n    const numberContestEndCount: number = contest_student.contest_end.length;\r\n    const numberContestOpeningCount: number = contest_student.contest_opening.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getContestStudentByStudent(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getContestStudentByStudent(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Cuộc thi của bé\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                <div className=\"row\">\r\n                    <TopCard title=\"CHƯA DIỄN RA\" text={`${numberNotOpenNowCount}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"ĐANG DIỄN RA\" text={`${numberContestOpeningCount}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"ĐÃ KẾT THÚC\" text={`${numberContestEndCount}`} icon=\"book\" class=\"primary\" />\r\n                    {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(StudentRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n                </div>\r\n\r\n<div className=\"row\" id=\"search-box\">\r\n<div className=\"col-xl-12 col-lg-12\">\r\n    <div className=\"input-group\" id=\"search-content\">\r\n        <div className=\"form-outline\">\r\n            <input type=\"text\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                setSearchTerm(event.target.value)\r\n                console.log(searchTerm)\r\n            }} />\r\n        </div>\r\n        <button type=\"button\" className=\"btn btn-primary\">\r\n            <i className=\"fas fa-search\"></i>\r\n        </button>\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                            if (checked1 === false) {\r\n                                setChecked1(true)\r\n                                setChecked2(false)\r\n                                setChecked3(false)\r\n                            }\r\n                        }} style={{\r\n                            color: checked1 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Cuộc thi chưa diễn ra</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"50%\",\r\n                            backgroundColor: checked1 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                            if (checked2 === false) {\r\n                                setChecked2(true)\r\n                                setChecked1(false)\r\n                                setChecked3(false)\r\n                            }\r\n                        }}\r\n                            style={{\r\n                                color: checked2 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                            }}>Cuộc thi đang diễn ra</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"50%\",\r\n                            backgroundColor: checked2 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                            if (checked3 === false) {\r\n                                setChecked3(true)\r\n                                setChecked1(false)\r\n                                setChecked2(false)\r\n                            }\r\n                        }}\r\n                            style={{\r\n                                color: checked3 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                            }}>Cuộc thi đã kết thúc</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"50%\",\r\n                            backgroundColor: checked3 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    function () {\r\n                        if (checked2 === true) {\r\n                            return (\r\n                                <Fragment>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                                <div className=\"card-header py-3\">\r\n                                                    <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách cuộc thi</h6>\r\n                                                </div>\r\n                                                <div className=\"card-body\">\r\n                                                    <ContestStudentDoingList1 value={searchTerm} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        else if (checked1 === true) {\r\n                            return (\r\n                                <Fragment>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                                <div className=\"card-header py-3\">\r\n                                                    <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách cuộc thi</h6>\r\n                                                </div>\r\n                                                <div className=\"card-body\">\r\n                                                    <ContestStudentNotOpenNowList value={searchTerm} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n\r\n                        else if (checked3 === true) {\r\n                            return (\r\n                                <Fragment>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                                <div className=\"card-header py-3\">\r\n                                                    <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách cuộc thi</h6>\r\n                                                </div>\r\n                                                <div className=\"card-body\">\r\n                                                    <ContestStudentEndList value={searchTerm}/>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                    }()\r\n                }\r\n\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default ContestStudent;","import { fetchDataSuccess, fetchDataError } from \"../../../store/actions/course.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalCourseForStudent(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/course/student/total/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalCourseForStudent(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                localStorage.removeItem('total_course_student');\r\n                localStorage.setItem('total_course_student', data.body.course)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { fetchDataSuccess, fetchDataError } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalContestForStudent(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest/student/total/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalContestForStudent(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                localStorage.removeItem('total_contest_student');\r\n                localStorage.setItem('total_contest_student', data.body.contest)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IRootPageStateType, IScheduleTimeClassState, IStateType } from \"../../store/models/root.interface\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport \"./ParentHome.css\"\r\nimport { ScheduleComponent, Day, Inject, ViewsDirective, ViewDirective } from \"@syncfusion/ej2-react-schedule\";\r\n\r\nimport \"@syncfusion/ej2-base/styles/material.css\";\r\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { getTotalCourseForStudent } from \"../../common/service/Course/GetTotalCourseForStudent\";\r\nimport { getTotalContestForStudent } from \"../../common/service/Contest/GetTotalContestForStudent\";\r\n\r\n\r\nconst StudentHome: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const schedule_time_classes: IScheduleTimeClassState = useSelector((state: IStateType) => state.schedule_time_classes);\r\n    let total_contest_student: number = 0;\r\n    let total_course_student: number = 0;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('total_contest_student');\r\n    if (id_y !== null) {\r\n        total_contest_student = parseInt(id_y)\r\n    }\r\n\r\n    var id_z = localStorage.getItem('total_course_student');\r\n    if (id_z !== null) {\r\n        total_course_student = parseInt(id_z)\r\n    }\r\n\r\n    console.log(schedule_time_classes.schedule_time_classes)\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getTotalContestForStudent(dispatch, id))\r\n                    trackPromise(getTotalCourseForStudent(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getTotalContestForStudent(dispatch, id))\r\n                trackPromise(getTotalCourseForStudent(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, id]);\r\n\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    \r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Trang chủ\", \"\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    let data: object[] = []\r\n\r\n    schedule_time_classes.schedule_time_classes.map((ele, index) => {\r\n        if (ele !== undefined) {\r\n            return data.push({\r\n                Id: index,\r\n                Subject: ele.class_name !== undefined && ele.class_name !== null ? ele.class_name : \"\",\r\n                StartTime: new Date(ele.start_time),\r\n                EndTime: new Date(ele.end_time),\r\n                IsAllDay: false\r\n            })\r\n        }\r\n        return 1\r\n    })\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                <div className=\"row\">\r\n                    <TopCard title=\"KHÓA HỌC\" text={`${total_course_student}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"CUỘC THI\" text={`${total_contest_student}`} icon=\"book\" class=\"primary\" />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                        <h3 className=\" mb-2\" id=\"level-teacher\">Lịch trong ngày</h3>\r\n                        <div className=\"card shadow mb-4\">\r\n                            <div className=\"card-body\">\r\n                                <ScheduleComponent height='550px' selectedDate={new Date()} eventSettings={{\r\n                                    dataSource: data, fields: {\r\n                                        id: 'Id',\r\n                                        subject: { name: 'Subject' },\r\n                                        isAllDay: { name: 'IsAllDay' },\r\n                                        startTime: { name: 'StartTime' },\r\n                                        endTime: { name: 'EndTime' }\r\n                                    }\r\n                                }}>\r\n\r\n                                    <ViewsDirective>\r\n                                        <ViewDirective option='Day' startHour='00:00' endHour='23:59' />\r\n                                    </ViewsDirective>\r\n                                    <Inject services={[Day]} />\r\n                                </ScheduleComponent>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default StudentHome;\r\n","import { fetchDataSuccess, fetchDataError, \r\n    removeContestTeacherEndAll, removeContestTeacherNotOpenNowAll, \r\n    removeContestTeacherNotOpenNowNotTeacherAll, removeContestTeacherOpeningAll,\r\n    initialContestTeacherEnd, initialContestTeacherNotOpenNow, initialContestTeacherOpening, \r\n    addContestTeacherEnd, addContestTeacherNotOpenNow, addContestTeacherOpening } from \"../../../store/actions/contest_teacher.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ContestTeacher {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    total_contest_submission: number;\r\n    total_contest_submission_graded: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n}\r\nexport function getContestByStudent(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest/student/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getContestByStudent(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeContestTeacherEndAll())\r\n                dispatch(removeContestTeacherNotOpenNowAll())\r\n                dispatch(removeContestTeacherNotOpenNowNotTeacherAll())\r\n                dispatch(removeContestTeacherOpeningAll())\r\n                console.log(data.body.contest_opening)\r\n                data.body.contest_opening.map((ele: any, index: any) => {\r\n                    var contest: ContestTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestTeacherOpening(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestTeacherOpening(contest))\r\n                    }\r\n                })\r\n\r\n\r\n                data.body.contest_end.map((ele: any, index: any) => {\r\n                    var contest: ContestTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestTeacherEnd(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestTeacherEnd(contest))\r\n                    }\r\n                })\r\n\r\n\r\n                data.body.contest_not_open_now.map((ele: any, index: any) => {\r\n                    var contest: ContestTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestTeacherNotOpenNow(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestTeacherNotOpenNow(contest))\r\n                    }\r\n                })\r\n\r\n                data.body.contest_new.map((ele: any, index: any) => {\r\n                    var contest: ContestTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        total_contest_submission_graded: ele.total_contest_submission_graded,\r\n                        total_contest_submission: ele.total_contest_submission,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        image_url: ele.image_url,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        is_enabled: ele.is_enabled\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestTeacherNotOpenNow(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestTeacherNotOpenNow(contest))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { IClassesStudent, ClassesStudentModificationStatus } from \"../models/classes_student.interface\";\r\n\r\n// register_successfull_classes_students\r\nexport const ADD_DOING_CLASS: string = \"ADD_DOING_CLASS\";\r\nexport const EDIT_DOING_CLASS: string = \"EDIT_DOING_CLASS\";\r\nexport const REMOVE_DOING_CLASS: string = \"REMOVE_DOING_CLASS\";\r\nexport const CHANGE_DOING_CLASS_AMOUNT: string = \"CHANGE_DOING_CLASS_AMOUNT\";\r\nexport const CHANGE_DOING_CLASS_PENDING_EDIT: string = \"CHANGE_DOING_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_DOING_CLASS_PENDING_EDIT: string = \"CLEAR_DOING_CLASS_PENDING_EDIT\";\r\nexport const REMOVE_DOING_CLASS_ALL: string = \"REMOVE_DOING_CLASS_ALL\";\r\nexport const INITIAL_DOING_CLASS: string = \"INITIAL_DOING_CLASS\";\r\n\r\n// not_register_classes_students\r\nexport const ADD_DONE_CLASS: string = \"ADD_DONE_CLASS\";\r\nexport const EDIT_DONE_CLASS: string = \"EDIT_DONE_CLASS\";\r\nexport const REMOVE_DONE_CLASS: string = \"REMOVE_DONE_CLASS\";\r\nexport const CHANGE_DONE_CLASS_AMOUNT: string = \"CHANGE_DONE_CLASS_AMOUNT\";\r\nexport const CHANGE_DONE_CLASS_PENDING_EDIT: string = \"CHANGE_DONE_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_DONE_CLASS_PENDING_EDIT: string = \"CLEAR_DONE_CLASS_PENDING_EDIT\";\r\nexport const REMOVE_DONE_CLASS_ALL: string = \"REMOVE_DONE_CLASS_ALL\";\r\nexport const INITIAL_DONE_CLASS: string = \"INITIAL_DONE_CLASS\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(classes_student: IClassesStudent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        classes_student\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialDoinglClass(classes_student: IClassesStudent): IInitialDoinglClassActionType {\r\n    return { type: INITIAL_DOING_CLASS, classes_student: classes_student };\r\n}\r\n\r\nexport function removeDoinglClassAll(): IRemoveDoinglClassAllActionType {\r\n    return { type: REMOVE_DOING_CLASS_ALL };\r\n}\r\n\r\nexport function addDoinglClass(classes_student: IClassesStudent): IAddDoinglClassActionType {\r\n    return { type: ADD_DOING_CLASS, classes_student: classes_student };\r\n}\r\n\r\nexport function editDoinglClass(classes_student: IClassesStudent): IEditDoinglClassActionType {\r\n    return { type: EDIT_DOING_CLASS, classes_student: classes_student };\r\n}\r\n\r\nexport function removeDoinglClass(id: any): IRemoveDoinglClassActionType {\r\n    return { type: REMOVE_DOING_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedDoinglClass(classes_student: IClassesStudent): IChangeSelectedDoinglClassActionType {\r\n    return { type: CHANGE_DOING_CLASS_PENDING_EDIT, classes_student: classes_student };\r\n}\r\n\r\nexport function clearSelectedDoinglClass(): IClearSelectedDoinglClassActionType {\r\n    return { type: CLEAR_DOING_CLASS_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialDoneClass(classes_student: IClassesStudent): IInitialDoneClassActionType {\r\n    return { type: INITIAL_DONE_CLASS, classes_student: classes_student };\r\n}\r\n\r\nexport function removeDoneClassAll(): IRemoveDoneClassAllActionType {\r\n    return { type: REMOVE_DONE_CLASS_ALL };\r\n}\r\n\r\nexport function addDoneClass(classes_student: IClassesStudent): IAddDoneClassActionType {\r\n    return { type: ADD_DONE_CLASS, classes_student: classes_student };\r\n}\r\n\r\nexport function editDoneClass(classes_student: IClassesStudent): IEditDoneClassActionType {\r\n    return { type: EDIT_DONE_CLASS, classes_student: classes_student };\r\n}\r\n\r\nexport function removeDoneClass(id: any): IRemoveDoneClassActionType {\r\n    return { type: REMOVE_DONE_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedDoneClass(classes_student: IClassesStudent): IChangeSelectedDoneClassActionType {\r\n    return { type: CHANGE_DONE_CLASS_PENDING_EDIT, classes_student: classes_student };\r\n}\r\n\r\nexport function clearSelectedDoneClass(): IClearSelectedDoneClassActionType {\r\n    return { type: CLEAR_DONE_CLASS_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ClassesStudentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_classes_students\r\ninterface IAddDoinglClassActionType { type: string, classes_student: IClassesStudent };\r\ninterface IEditDoinglClassActionType { type: string, classes_student: IClassesStudent };\r\ninterface IRemoveDoinglClassActionType { type: string, id: any };\r\ninterface IChangeSelectedDoinglClassActionType { type: string, classes_student: IClassesStudent };\r\ninterface IClearSelectedDoinglClassActionType { type: string };\r\ninterface IRemoveDoinglClassAllActionType { type: string }\r\ninterface IInitialDoinglClassActionType {type: string, classes_student: IClassesStudent}\r\n\r\n// not_register_classes_students\r\ninterface IAddDoneClassActionType { type: string, classes_student: IClassesStudent };\r\ninterface IEditDoneClassActionType { type: string, classes_student: IClassesStudent };\r\ninterface IRemoveDoneClassActionType { type: string, id: any };\r\ninterface IChangeSelectedDoneClassActionType { type: string, classes_student: IClassesStudent };\r\ninterface IClearSelectedDoneClassActionType { type: string };\r\ninterface IRemoveDoneClassAllActionType { type: string }\r\ninterface IInitialDoneClassActionType {type: string, classes_student: IClassesStudent}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ClassesStudentModificationStatus};","import { fetchDataSuccess, fetchDataError, removeDoinglClassAll, removeDoneClassAll, initialDoinglClass, initialDoneClass,  addDoinglClass, addDoneClass } from \"../../../store/actions/classes_student.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ClassesStudent {\r\n    id: any;\r\n    name: string;\r\n    link_url: string;\r\n    student_id: number;\r\n    student_name: string;\r\n    user_register_join_semester_id: number;\r\n    teacher_name: string;\r\n    teacher_id: number;\r\n    course_id: number;\r\n    schedule_section_next: string;\r\n    semester_class_id: number;\r\n    semester_class_name: string;\r\n    user_register_teach_semester: number;\r\n    security_code: string;\r\n    total_section_studied: number;\r\n    total_student: number;\r\n    total_section: number;\r\n    course_name: string;\r\n    semester_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_type_id: number;\r\n    art_level_id: number;\r\n    art_age_id: number;\r\n    art_age_name: string;\r\n}\r\nexport function getClassesStudent(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/classes/student/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getClassesStudent(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeDoinglClassAll())\r\n                dispatch(removeDoneClassAll())\r\n                console.log(data.body.classes_done)\r\n                console.log(data.body.classes_doing)\r\n                data.body.classes_done.map((ele: any, index: any) => {\r\n                    var classes_student: ClassesStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        semester_class_name: ele.semester_class_name,\r\n                        student_id: ele.student_id,\r\n                        schedule_section_next: ele.schedule_section_next,\r\n                        user_register_join_semester_id: ele.user_register_join_semester_id,\r\n                        student_name: ele.student_name,\r\n                        teacher_id: ele.teacher_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semester_class_id,\r\n                        user_register_teach_semester: ele.user_register_teach_semester,\r\n                        security_code: ele.security_code,\r\n                        total_student: ele.total_student,\r\n                        total_section: ele.total_section,\r\n                        total_section_studied: ele.total_section_studied,\r\n                        link_url: ele.link_url,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_level_id: ele.art_level_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        course_name: ele.course_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name\r\n                    }\r\n                    console.log(classes_student)\r\n                    if (index === 0){\r\n                        return dispatch(initialDoneClass(classes_student));\r\n                    }\r\n                    else{\r\n                        return dispatch(addDoneClass(classes_student))\r\n                    }\r\n                })\r\n\r\n                data.body.classes_doing.map((ele: any, index: any) => {\r\n                    var classes_student: ClassesStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        student_id: ele.student_id,\r\n                        semester_class_name: ele.semester_class_name,\r\n                        student_name: ele.student_name,\r\n                        teacher_id: ele.teacher_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        course_id: ele.course_id,\r\n                        schedule_section_next: ele.schedule_section_next,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semester_class_id,\r\n                        user_register_teach_semester: ele.user_register_teach_semester,\r\n                        security_code: ele.security_code,\r\n                        user_register_join_semester_id: ele.user_register_join_semester_id,\r\n                        total_student: ele.total_student,\r\n                        total_section: ele.total_section,\r\n                        link_url: ele.link_url,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_level_id: ele.art_level_id,\r\n                        total_section_studied: ele.total_section_studied,\r\n                        art_type_id: ele.art_type_id,\r\n                        course_name: ele.course_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name\r\n                    }\r\n                    console.log(classes_student)\r\n                    if (index === 0){\r\n                        return dispatch(initialDoinglClass(classes_student));\r\n                    }\r\n                    else{\r\n                        return dispatch(addDoinglClass(classes_student))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { FaHistory } from \"react-icons/fa\";\r\nimport { IoMdAnalytics } from \"react-icons/io\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChartLine } from \"../../common/components/CharLine\";\r\nimport SelectKeyValueNotField from \"../../common/components/SelectKeyValueNotField\";\r\nimport { getUserGradeExerciseByStudentAndClass } from \"../../common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByClassStudent\";\r\nimport { OnChangeModelNotFiled } from \"../../common/types/Form.types\";\r\nimport { IClassesStudent } from \"../../store/models/classes_student.interface\";\r\nimport { IContestStudent } from \"../../store/models/contest_student.interface\";\r\nimport { IContestTeacher } from \"../../store/models/contest_teacher.interface\";\r\nimport { IClassesStudentState, IContestTeacherState, IFinalScoreChildState, IStateType, IUserGradeContestSubmissionState, IUserGradeExerciseSubmissionState, IUserState } from \"../../store/models/root.interface\";\r\n\r\nexport type classTeacherListProps = {\r\n    onSelect?: (classTeacher: IClassesStudent) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\ntype Options = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\nfunction ManageStudyChild(props: classTeacherListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const [checked, setChecked] = useState<Boolean>(true);\r\n    \r\n    const classes_students: IClassesStudentState = useSelector((state: IStateType) => state.classes_students);\r\n    const contest_teachers: IContestTeacherState = useSelector((state: IStateType) => state.contest_teachers);\r\n    const user_grade_contest_submisson: IUserGradeContestSubmissionState = useSelector((state: IStateType) => state.user_grade_contest_submissions);\r\n    const final_score_childs: IFinalScoreChildState = useSelector((state: IStateType) => state.final_score_childs);\r\n\r\n    var id_x = localStorage.getItem('student_id');\r\n    var student_id: number = 0;\r\n    if (id_x !== null) {\r\n        student_id = parseInt(id_x);\r\n    }\r\n\r\n    const [value, setValue] = useState<number>(1);\r\n    const [value1, setValue1] = useState<number>(0);\r\n    console.log(checked)\r\n    console.log(value)\r\n    const listOptions: Options[] = [\r\n        {\r\n            name: 'Khóa học',\r\n            value: 1\r\n        },\r\n        {\r\n            name: 'Cuộc thi',\r\n            value: 2\r\n        },\r\n    ];\r\n\r\n    const listClasses: Options[] = [];\r\n    classes_students.classes_doing.map((ele, idx) => {\r\n        if (ele !== undefined && ele !== null ){\r\n            let item: Options = {\r\n                name: ele.name,\r\n                value: ele.id\r\n            };\r\n            return listClasses.push(item);\r\n        }\r\n        return null\r\n    })\r\n\r\n    function hasFormValueChangedNotFiled(model: OnChangeModelNotFiled): void {\r\n        setValue(model.value);\r\n    }\r\n\r\n    let list_score_final: number[] = [];\r\n    let list_name_final: string[] = [];\r\n    final_score_childs.final_score_childs.map((ele, idx) => {\r\n        if (ele !== undefined && ele !== null ){\r\n            list_score_final.push(ele.final_score * 10)\r\n            list_name_final.push(ele.course_name)\r\n            return ele\r\n        }\r\n        return null\r\n    })\r\n\r\n    let list_score_user_grade_contest: number[] = [];\r\n    let list_name_user_grade_contest: string[] = [];\r\n    console.log(user_grade_contest_submisson.userGradeContestSubmissions)\r\n    user_grade_contest_submisson.userGradeContestSubmissions.map((ele, idx) => {\r\n        if (ele !== undefined && ele !== null ){\r\n            list_score_user_grade_contest.push(ele.score)\r\n            list_name_user_grade_contest.push(ele.contest_name)\r\n            return ele\r\n        }\r\n        return null\r\n    })\r\n\r\n    const [totalPage, setTotalPage] = useState(0)\r\n    const [element, setElement] = useState<IClassesStudent[]>([])\r\n    useEffect(() => {\r\n        let x = (classes_students.classes_done.length - classes_students.classes_done.length % 10) / 10;\r\n        if (x === 0) {\r\n            setElement(classes_students.classes_done)\r\n        }\r\n        else {\r\n            setElement(classes_students.classes_done.slice(0, 10))\r\n        }\r\n\r\n        setTotalPage((x + 1))\r\n    }, [classes_students.classes_done])\r\n\r\n    function handlePagination(count: number) {\r\n        console.log(count)\r\n        if (count === totalPage) {\r\n            setElement(classes_students.classes_done.slice(count * 10))\r\n        }\r\n        else {\r\n            setElement(classes_students.classes_done.slice(count * 10, count * 10 + 10))\r\n        }\r\n    }\r\n\r\n    const [totalPage1, setTotalPage1] = useState(0)\r\n    const [element1, setElement1] = useState<IContestTeacher[]>([])\r\n    useEffect(() => {\r\n        let x = (contest_teachers.contest_end.length - contest_teachers.contest_end.length % 10) / 10;\r\n        if (x === 0) {\r\n            setElement1(contest_teachers.contest_end)\r\n        }\r\n        else {\r\n            setElement1(contest_teachers.contest_end.slice(0, 10))\r\n        }\r\n\r\n        setTotalPage((x + 1))\r\n    }, [contest_teachers.contest_end])\r\n\r\n    function handlePagination1(count: number) {\r\n        console.log(count)\r\n        if (count === totalPage) {\r\n            setElement1(contest_teachers.contest_end.slice(count * 10))\r\n        }\r\n        else {\r\n            setElement1(contest_teachers.contest_end.slice(count * 10, count * 10 + 10))\r\n        }\r\n    }\r\n    const history = useHistory();\r\n    const routeChange = (classes_student: IClassesStudent) => {\r\n        let path = '/student/class';\r\n        localStorage.removeItem('teacher_id');\r\n        localStorage.setItem('teacher_id', classes_student.teacher_id.toString())\r\n        localStorage.removeItem('student_id');\r\n        localStorage.setItem('student_id', classes_student.student_id.toString())\r\n        localStorage.removeItem('class_id');\r\n        localStorage.setItem('class_id', classes_student.id.toString());\r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    const routeChange1 = (contest: IContestTeacher) => {\r\n        let path = '/contest/result-grade';\r\n        localStorage.removeItem('contest_id');\r\n        localStorage.setItem('contest_id', contest.id.toString())\r\n        localStorage.removeItem('contest_name')\r\n        localStorage.setItem('contest_name', contest.name)\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n\r\n    const labels = list_name_final;\r\n    const datax = {\r\n        labels: labels,\r\n        datasets: [\r\n            {\r\n                label: 'Điểm tổng kết các khóa',\r\n                data: list_score_final,\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            }\r\n        ],\r\n    };\r\n\r\n    const labels_c = list_name_user_grade_contest;\r\n    const datax_c = {\r\n        labels: labels_c,\r\n        datasets: [\r\n            {\r\n                label: 'Điểm thi',\r\n                data: list_score_user_grade_contest,\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            }\r\n        ],\r\n    };\r\n\r\n    console.log(datax_c)\r\n\r\n    console.log(list_score_user_grade_contest)\r\n\r\n    function onChangeRoute2() {\r\n        let path = '/class/exercise-student';\r\n        localStorage.removeItem('class_id');\r\n        localStorage.setItem('class_id', value1.toString());\r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                    <h3 className=\" mb-2\" id=\"level-teacher\">Thống kê học tập của bé</h3>\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                        <div className={`card shadow h-100 py-2`} id=\"infor-student\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-6 col-lg-6 col-xs-6 text-center\">\r\n                                       <div className=\"row\">\r\n                                            <h6 className=\"ml-4\">Loại hình: </h6>\r\n                                       </div>\r\n                                        <SelectKeyValueNotField\r\n                                            value={value}\r\n                                            id=\"input_total_page\"\r\n                                            inputClass=\"select_type_study\"\r\n                                            onChange={hasFormValueChangedNotFiled}\r\n                                            required={true}\r\n                                            label=\" \"\r\n                                            options={listOptions}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                {\r\n                                    function () {\r\n                                        console.log(checked)\r\n                                        console.log(typeof (value))\r\n                                        if (value.toString() === \"1\") {\r\n                                            return (\r\n                                                <>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                                            <div className=\"card mb-4\">\r\n                                                                <div className=\"card-body chart-line\">\r\n                                                                    <ChartLine data={datax} />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                            )\r\n                                        }\r\n\r\n                                        else if (value.toString() === \"2\") {\r\n                                            return (\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                                        <div className=\"card mb-4\">\r\n                                                            <div className=\"card-body chart-line\">\r\n                                                                <ChartLine data={datax_c} />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n\r\n                                        \r\n\r\n                                        \r\n                                    }()\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ManageStudyChild;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IClassesStudent } from \"../../store/models/classes_student.interface\";\r\nimport { IScheduleTimeClassState, IStateType } from \"../../store/models/root.interface\";\r\n\r\nimport { ScheduleComponent, Day, Inject, ViewsDirective, ViewDirective } from \"@syncfusion/ej2-react-schedule\";\r\n\r\nimport \"@syncfusion/ej2-base/styles/material.css\";\r\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\r\n\r\nexport type classTeacherListProps = {\r\n    onSelect?: (classTeacher: IClassesStudent) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction ScheduleForChild(props: classTeacherListProps): JSX.Element {\r\n    const schedule_time_classes: IScheduleTimeClassState = useSelector((state: IStateType) => state.schedule_time_classes);\r\n\r\n\r\n    let data: object[] = []\r\n\r\n    schedule_time_classes.schedule_time_classes.map((ele, index) => {\r\n        return data.push({\r\n            Id: index,\r\n            Subject: ele.class_name !== undefined && ele.class_name !== null ? ele.class_name : \"\",\r\n            StartTime: new Date(ele.start_time),\r\n            EndTime: new Date(ele.end_time),\r\n            IsAllDay: false\r\n        })\r\n    })\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12 col-md-12 col-xs-12\">\r\n                    <h3 className=\" mb-2\" id=\"level-teacher\">Lịch học của bé</h3>\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-body\">\r\n                            <ScheduleComponent height='550px' selectedDate={new Date()} eventSettings={{\r\n                                dataSource: data, fields: {\r\n                                    id: 'Id',\r\n                                    subject: { name: 'Subject' },\r\n                                    isAllDay: { name: 'IsAllDay' },\r\n                                    startTime: { name: 'StartTime' },\r\n                                    endTime: { name: 'EndTime' }\r\n                                }\r\n                            }}>\r\n\r\n                                <ViewsDirective>\r\n                                    <ViewDirective option='Day' startHour='00:00' endHour='23:59' />\r\n                                </ViewsDirective>\r\n                                <Inject services={[Day]} />\r\n                            </ScheduleComponent>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ScheduleForChild;\r\n","import { fetchDataSuccess, fetchDataError, removeUserGradeContestSubmissionAll, addUserGradeContestSubmission} from \"../../../store/actions/user_grade_contest_submission.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user_grade_contest {\r\n    student_id: number;\r\n    teacher_name: string;\r\n    teacher_id: number;\r\n    student_name: string;\r\n    contest_id: number;\r\n    contest_name: string;\r\n    contest_submission_id: number;\r\n    feedback: string;\r\n    score: number;\r\n    time: string;\r\n}\r\nexport function getUserGradeContestSubmissionByStudent(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-grade-contest-submission/student/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserGradeContestSubmissionByStudent(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeUserGradeContestSubmissionAll())\r\n                console.log(data.body.UserGradeContestSubmission)\r\n                data.body.UserGradeContestSubmission.map((ele: any, index: any) => {\r\n                    var user_grade_contest: user_grade_contest = {\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        teacher_id: ele.teacher_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        contest_id: ele.contest_id,\r\n                        contest_name: ele.contest_name,\r\n                        contest_submission_id: ele.contest_submission_id,\r\n                        feedback: ele.feedback,\r\n                        score: ele.score,\r\n                        time: ele.time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addUserGradeContestSubmission(user_grade_contest))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { IFinalScoreChild, FinalScoreChildModificationStatus } from \"../models/final_score_child.interface\";\r\nexport const ADD_FINAL_SCORE_CHILD: string = \"ADD_FINAL_SCORE_CHILD\";\r\nexport const EDIT_FINAL_SCORE_CHILD: string = \"EDIT_FINAL_SCORE_CHILD\";\r\nexport const REMOVE_FINAL_SCORE_CHILD: string = \"REMOVE_FINAL_SCORE_CHILD\";\r\nexport const CHANGE_FINAL_SCORE_CHILD_AMOUNT: string = \"CHANGE_FINAL_SCORE_CHILD_AMOUNT\";\r\nexport const CHANGE_FINAL_SCORE_CHILD_PENDING_EDIT: string = \"CHANGE_FINAL_SCORE_CHILD_PENDING_EDIT\";\r\nexport const CLEAR_FINAL_SCORE_CHILD_PENDING_EDIT: string = \"CLEAR_FINAL_SCORE_CHILD_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_FINAL_SCORE_CHILD_ALL: string = \"REMOVE_FINAL_SCORE_CHILD_ALL\";\r\nexport const INITIAL_FINAL_SCORE_CHILD: string = \"INITIAL_FINAL_SCORE_CHILD\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(final_score_child: IFinalScoreChild) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        final_score_child\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialFinalScoreChild(final_score_child: IFinalScoreChild): IInitialFinalScoreChildActionType {\r\n    return { type: INITIAL_FINAL_SCORE_CHILD, final_score_child: final_score_child };\r\n}\r\n\r\nexport function removeFinalScoreChildAll(): IRemoveFinalScoreChildAllActionType {\r\n    return { type: REMOVE_FINAL_SCORE_CHILD_ALL };\r\n}\r\n\r\nexport function addFinalScoreChild(final_score_child: IFinalScoreChild): IAddFinalScoreChildActionType {\r\n    return { type: ADD_FINAL_SCORE_CHILD, final_score_child: final_score_child };\r\n}\r\n\r\nexport function editFinalScoreChild(final_score_child: IFinalScoreChild): IEditFinalScoreChildActionType {\r\n    return { type: EDIT_FINAL_SCORE_CHILD, final_score_child: final_score_child };\r\n}\r\n\r\nexport function removeFinalScoreChild(id: any): IRemoveFinalScoreChildActionType {\r\n    return { type: REMOVE_FINAL_SCORE_CHILD, id: id };\r\n}\r\n\r\nexport function changeSelectedFinalScoreChild(final_score_child: IFinalScoreChild): IChangeSelectedFinalScoreChildActionType {\r\n    return { type: CHANGE_FINAL_SCORE_CHILD_PENDING_EDIT, final_score_child: final_score_child };\r\n}\r\n\r\nexport function clearSelectedFinalScoreChild(): IClearSelectedFinalScoreChildActionType {\r\n    return { type: CLEAR_FINAL_SCORE_CHILD_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: FinalScoreChildModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddFinalScoreChildActionType { type: string, final_score_child: IFinalScoreChild };\r\ninterface IEditFinalScoreChildActionType { type: string, final_score_child: IFinalScoreChild };\r\ninterface IRemoveFinalScoreChildActionType { type: string, id: any };\r\ninterface IChangeSelectedFinalScoreChildActionType { type: string, final_score_child: IFinalScoreChild };\r\ninterface IClearSelectedFinalScoreChildActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  FinalScoreChildModificationStatus};\r\ninterface IRemoveFinalScoreChildAllActionType { type: string }\r\ninterface IInitialFinalScoreChildActionType {type: string, final_score_child: IFinalScoreChild}","import { fetchDataSuccess, fetchDataError, addFinalScoreChild, removeFinalScoreChildAll} from \"../../../store/actions/final_score_child.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface FinalScoreChild {\r\n    course_id: number;\r\n    course_name: string;\r\n    final_score: number;\r\n}\r\nexport function getFinalScoreChild(dispatch: any, id: number) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/final-course/student/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getFinalScoreChild(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeFinalScoreChildAll())\r\n                data.body.final_grade.map((ele: any, index: any) => {\r\n                    var val: FinalScoreChild = {\r\n                        course_id: ele.course_id,\r\n                        course_name: ele.course_name,\r\n                        final_score: ele.final_score\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addFinalScoreChild(val))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IClassesStudentState, IContestTeacherState, IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ManageChild.css\"\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\nimport { getContestByStudent } from \"../../common/service/Contest/GetContestByStudent\";\r\nimport { getClassesStudent } from \"../../common/service/ClassesStudent/GetClassesStudentByStudent\";\r\nimport { getScheduleTimeByChild } from \"../../common/service/ScheduleTimeClass/GetScheduleTimeByStudent\";\r\nimport TopCard from \"../../common/components/TopCard\";\r\nimport ManageStudyChild from \"./ManageStudyChild\";\r\nimport ScheduleForChild from \"./ScheduleForChild\";\r\nimport { getUserGradeContestSubmissionByStudent } from \"../../common/service/UserGradeContestSubmission/GetUserGradeContestSubmissionByStudent\";\r\nimport { getFinalScoreChild } from \"../../common/service/FinalScoreChild/GetFinalScoreChild\";\r\n\r\n\r\nconst ManageChild: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const [checked, setChecked] = useState<Boolean>(true);\r\n    const classes_students: IClassesStudentState = useSelector((state: IStateType) => state.classes_students);\r\n    const contest_teachers: IContestTeacherState = useSelector((state: IStateType) => state.contest_teachers);\r\n    const numberApprovedCount: number = classes_students.classes_done.length + classes_students.classes_doing.length;\r\n    const numberNotApprovedNowCount: number = contest_teachers.contest_end.length + contest_teachers.contest_not_open_now.length + contest_teachers.contest_opening.length;\r\n    var id_x = localStorage.getItem('student_id');\r\n    var student_id: number = 0;\r\n    if (id_x !== null) {\r\n        student_id = parseInt(id_x);\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getUserById(dispatch, student_id))\r\n                    trackPromise(getScheduleTimeByChild(dispatch, student_id))\r\n                    trackPromise(getContestByStudent(dispatch, student_id))\r\n                    trackPromise(getClassesStudent(dispatch, student_id))\r\n                    trackPromise(getUserGradeContestSubmissionByStudent(dispatch, student_id))\r\n                    trackPromise(getFinalScoreChild(dispatch, student_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getUserById(dispatch, student_id))\r\n                trackPromise(getScheduleTimeByChild(dispatch, student_id))\r\n                trackPromise(getContestByStudent(dispatch, student_id))\r\n                trackPromise(getClassesStudent(dispatch, student_id))\r\n                trackPromise(getUserGradeContestSubmissionByStudent(dispatch, student_id))\r\n                trackPromise(getFinalScoreChild(dispatch, student_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, student_id]);\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                <div className=\"row\">\r\n                    <TopCard title=\"KHÓA HỌC\" text={`${numberApprovedCount}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"CUỘC THI\" text={`${numberNotApprovedNowCount}`} icon=\"book\" class=\"danger\" />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                            if (checked === false) {\r\n                                setChecked(true)\r\n                            }\r\n                        }} style={{\r\n                            color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Học tập</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"30%\",\r\n                            backgroundColor: checked ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n                    <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                            if (checked === true) {\r\n                                setChecked(false)\r\n                            }\r\n                        }}\r\n                            style={{\r\n                                color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                            }}>Thời khóa biểu</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"30%\",\r\n                            backgroundColor: checked ? \"#ffffff\" : \"#F24E1E\"\r\n                        }}></div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    function () {\r\n                        if (checked === true) {\r\n                            return (\r\n                                <ManageStudyChild />\r\n                            )\r\n                        }\r\n                        else {\r\n                            return (\r\n                                <ScheduleForChild />\r\n                            )\r\n                        }\r\n                    }()\r\n                }\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default ManageChild;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/art_type.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function putReviewClassByStudent(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/class-has-register-join-semester/student`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putReviewClassByStudent(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (res => {\r\n                toast.update(idx, { render: \"Gửi nhận xét thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Gửi nhận xét không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { clearSelectedAnonymousNotification, setModificationStateAnonymousNotification, addAnonymousNotification } from \"../../store/actions/anonymous_notification.action\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Rating } from \"react-simple-star-rating\";\r\nimport { putReviewClassByStudent } from \"../../common/service/ClassHasRegisterJoinSemester/PutReviewClassByStudent\";\r\n\r\nexport type artAgeListProps = {\r\n    isCheck: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\n\r\nfunction FormReviewClass(props: artAgeListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n\r\n    const [formState, setFormState] = useState({\r\n        review_start: { error: \"\", value: 0 },\r\n        review: { error: \"\", value: \"\" }\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        props.isCheck(false);\r\n        let saveUserFn: Function =  addAnonymousNotification ;\r\n        saveForm(saveUserFn);\r\n    }\r\n\r\n    var id_x = localStorage.getItem('class_id');\r\n    let class_id = 0;\r\n    if (id_x !== null) {\r\n        class_id = parseInt(id_x)\r\n    }\r\n\r\n    var id_y = localStorage.getItem('student_id');\r\n    let student_id = 0;\r\n    if (id_y !== null) {\r\n        student_id = parseInt(id_y)\r\n    }\r\n\r\n    function saveForm(saveFn: Function): void {\r\n            const idx = toast.loading(\"Đang xử lý yêu cầu. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            \r\n            if (saveFn === addAnonymousNotification) {\r\n                console.log(idx)\r\n                let x = {\r\n                    classes_id: class_id,\r\n                    student_id: student_id,\r\n                    student_feedback: formState.review.value,\r\n                    review_star: rating\r\n                }\r\n\r\n                dispatch(putReviewClassByStudent(x, idx))\r\n            }\r\n\r\n            dispatch(clearSelectedAnonymousNotification());\r\n            dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.None));\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        props.isCheck(false);\r\n        dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (rating === null || rating === undefined\r\n            || formState.review.error || !formState.review.value ) as boolean;\r\n    }\r\n\r\n    const [rating, setRating] = useState(0) // initial rating value\r\n\r\n    // Catch Rating value\r\n    const handleRating = (rate: number) => {\r\n      setRating(rate)\r\n      // other logic\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Tạo nhận xét lớp</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-group\">\r\n                                    <label>Đánh giá</label>\r\n                                    <Rating\r\n                                      onClick={handleRating}\r\n                                      ratingValue={rating}\r\n                                      showTooltip\r\n                                      tooltipArray={['Terrible', 'Bad', 'Average', 'Great', 'Prefect']}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_review\"\r\n                                        value={formState.review.value}\r\n                                        field=\"review\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={20000}\r\n                                        label=\"Nhận xét\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default FormReviewClass;\r\n","export interface IClassesParent {\r\n    id: any;\r\n    name: string;\r\n    link_url: string;\r\n    student_id: number;\r\n    student_name: string;\r\n    teacher_name: string;\r\n    teacher_id: number;\r\n    course_id: number;\r\n    schedule_section_next: string;\r\n    semester_class_id: number;\r\n    semester_class_name: string;\r\n    user_register_teach_semester: number;\r\n    security_code: string;\r\n    total_section_studied: number;\r\n    total_student: number;\r\n    total_section: number;\r\n    course_name: string;\r\n    semester_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_type_id: number;\r\n    art_level_id: number;\r\n    art_age_id: number;\r\n    art_age_name: string;\r\n}\r\n\r\nexport enum ClassesParentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChartLine } from \"../../common/components/CharLine\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getExerciseForClassStudent } from \"../../common/service/ExerciseStudent/GetExerciseForClassStudent\";\r\nimport { getParentById } from \"../../common/service/Parent/GetParentById\";\r\nimport { getStudentLeaveByClassAndStudent } from \"../../common/service/StudentLeave/GetStudentLeaveByClassStudent\";\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\nimport { getUserGradeExerciseByStudentAndClass } from \"../../common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByClassStudent\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IExerciseStudentState, ILessonState, IStateType, IStudentLeaveState, IUserGradeExerciseSubmissionState, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ManageClasses.css\"\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { FcFeedback } from \"react-icons/fc\";\r\nimport { setModificationState } from \"../../store/actions/lesson.action\";\r\nimport { LessonModificationStatus } from \"../../store/models/lesson.interface\";\r\nimport Popup from \"reactjs-popup\";\r\nimport FormReviewClass from \"./FormReviewClass\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nconst ManageClassesDone: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const exercise_students: IExerciseStudentState = useSelector((state: IStateType) => state.exercise_students);\r\n    const student_leave: IStudentLeaveState = useSelector((state: IStateType) => state.student_leaves);\r\n    const user_grade_exercise_submission: IUserGradeExerciseSubmissionState = useSelector((state: IStateType) => state.user_grade_exercise_submissions);\r\n    const numberSubmittedCount: number = exercise_students.exercise_submitted_not_grade.length + exercise_students.exercise_submitted_graded.length;\r\n    const numberNotSubmitNowCount: number = exercise_students.exercise_not_submit.length;\r\n    const numberStudentLeaveCount: number = student_leave.acceptLeaves.length;\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    \r\n    var id_z = localStorage.getItem('teacher_id');\r\n    var teacher_id: number = 0;\r\n    if (id_z !== null) {\r\n        teacher_id = parseInt(id_z);\r\n    }\r\n\r\n    var id_y = localStorage.getItem('student_id');\r\n    var student_id: number= 0;\r\n    if (id_y !== null) {\r\n        student_id = parseInt(id_y);\r\n    }\r\n\r\n    var id_t = localStorage.getItem('class_id');\r\n    var class_id: number = 0;\r\n    if (id_t !== null) {\r\n        class_id = parseInt(id_t);\r\n    }\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getUserById(dispatch, student_id))\r\n                    trackPromise(getParentById(dispatch, teacher_id))\r\n                    trackPromise(getExerciseForClassStudent(dispatch, class_id, student_id))\r\n                    trackPromise(getStudentLeaveByClassAndStudent(dispatch, class_id, student_id))\r\n                    trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id,student_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getUserById(dispatch, student_id))\r\n                trackPromise(getParentById(dispatch, teacher_id))\r\n                trackPromise(getExerciseForClassStudent(dispatch, class_id, student_id))\r\n                trackPromise(getStudentLeaveByClassAndStudent(dispatch, class_id, student_id))\r\n                trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id,student_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, student_id, teacher_id, class_id]);\r\n\r\n    let list_score_user_grade_exercise : number[] = [];\r\n    let list_name_user_grade_exercise : string[] = [];\r\n    user_grade_exercise_submission.user_grade_exercise_submissions.map((ele, idx) => {\r\n        list_score_user_grade_exercise.push(ele.score)\r\n        list_name_user_grade_exercise.push(ele.exercise_name)\r\n        return ele\r\n    })\r\n\r\n\r\n    const labels = list_name_user_grade_exercise;\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Điểm kiểm tra',\r\n                data: list_score_user_grade_exercise,\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            }\r\n        ],\r\n    };\r\n\r\n    const lessons: ILessonState = useSelector((state: IStateType) => state.lessons);\r\n\r\n    const history = useHistory();\r\n    const routeChange = () =>{ \r\n        let path = '/class/exercise-student'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    const [popup, setPopup] = useState(false);\r\n\r\n    function onLessonRemove() {\r\n        setPopup(true);\r\n    }\r\n\r\n    function onRemovePopup(value: boolean) {\r\n        setPopup(false);\r\n    }\r\n    \r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n      <ToastContainer />\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"BÀI TẬP ĐÃ NỘP\" text={`${numberSubmittedCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"BÀI TẬP CHƯA NỘP\" text={`${numberNotSubmitNowCount}`} icon=\"book\" class=\"danger\" />\r\n                <TopCard title=\"SỐ BUỔI NGHỈ\" text={`${numberStudentLeaveCount}`} icon=\"book\" class=\"danger\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n            <Popup\r\n            open={popup}\r\n            onClose={() => setPopup(false)}\r\n            closeOnDocumentClick\r\n        >\r\n            <>\r\n                {\r\n                    function () {\r\n                        if ((lessons.modificationState === LessonModificationStatus.Create) || ((lessons.selectedLesson) && (lessons.modificationState === LessonModificationStatus.Edit))) {\r\n                            return <FormReviewClass isCheck={onRemovePopup}/>\r\n                        }\r\n                    }()\r\n                }\r\n            </>\r\n        </Popup>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <h3 className=\" mb-2\" id=\"level-teacher\">Thông tin học sinh</h3>\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <h4 id=\"full-name\">Tên : {users.teachers.length > 0 ? users.teachers[0].username : \"\"}</h4>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <p id=\"username-teacher\">Giới tính: {users.teachers.length > 0 ? users.teachers[0].sex : \"\"}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-phone fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Số điện thoại: {users.teachers.length > 0 ? users.teachers[0].phone : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Ngày sinh: {users.teachers.length > 0 ? users.teachers[0].dateOfBirth : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Email: {users.teachers.length > 0 ? users.teachers[0].email : \"\"}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <h3 className=\" mb-2\" id=\"level-teacher\">Thông tin giáo viên</h3>\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <h4 id=\"full-name\">Tên : {users.parents.length > 0 ? users.parents[0].username : \"\"}</h4>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <p id=\"username-teacher\">Giới tính: {users.parents.length > 0 ? users.parents[0].sex : \"\"}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-phone fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Số điện thoại: {users.parents.length > 0 ? users.parents[0].phone : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-calendar fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Ngày sinh: {users.parents.length > 0 ? users.parents[0].dateOfBirth : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Email: {users.parents.length > 0 ? users.parents[0].email : \"\"}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <TopCardLevel title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`2`} icon=\"book\" class=\"primary\" />\r\n                    <TopCardLevel title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`1`} icon=\"book\" class=\"danger\" /> */}\r\n                </div>\r\n\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <div className=\"row\">\r\n                        <h3 className=\" mb-2\" id=\"level-teacher\">Thống kê điểm</h3>\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row no-gutters\">\r\n                                        <ChartLine data={data} />\r\n                                    </div>\r\n                                    <div className=\"row justify-content-center\">\r\n                                        <button \r\n                                            className=\"btn btn-success btn-green\" \r\n                                            id=\"btn-into-class-student\"\r\n                                            onClick={() => {routeChange()}}\r\n                                        >\r\n                                            Xem chi tiết\r\n                                            <i className={`fas fa-arrow-right fa-1x`} id=\"icon-arrow-right\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <button \r\n                                className=\"btn btn-success btn-green\" \r\n                                id=\"btn-into-class-review\"\r\n                                onClick={() => {\r\n                                    dispatch(setModificationState(LessonModificationStatus.Create))\r\n                                    onLessonRemove()\r\n                                }}\r\n                            >\r\n                                Nhận xét\r\n                                <FcFeedback />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ManageClassesDone;\r\n","import { IClassesParent, ClassesParentModificationStatus } from \"../models/classes_parent.interface\";\r\n\r\n// register_successfull_classes_parents\r\nexport const ADD_DOING_CLASS: string = \"ADD_DOING_CLASS\";\r\nexport const EDIT_DOING_CLASS: string = \"EDIT_DOING_CLASS\";\r\nexport const REMOVE_DOING_CLASS: string = \"REMOVE_DOING_CLASS\";\r\nexport const CHANGE_DOING_CLASS_AMOUNT: string = \"CHANGE_DOING_CLASS_AMOUNT\";\r\nexport const CHANGE_DOING_CLASS_PENDING_EDIT: string = \"CHANGE_DOING_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_DOING_CLASS_PENDING_EDIT: string = \"CLEAR_DOING_CLASS_PENDING_EDIT\";\r\nexport const REMOVE_DOING_CLASS_ALL: string = \"REMOVE_DOING_CLASS_ALL\";\r\nexport const INITIAL_DOING_CLASS: string = \"INITIAL_DOING_CLASS\";\r\n\r\n// not_register_classes_parents\r\nexport const ADD_DONE_CLASS: string = \"ADD_DONE_CLASS\";\r\nexport const EDIT_DONE_CLASS: string = \"EDIT_DONE_CLASS\";\r\nexport const REMOVE_DONE_CLASS: string = \"REMOVE_DONE_CLASS\";\r\nexport const CHANGE_DONE_CLASS_AMOUNT: string = \"CHANGE_DONE_CLASS_AMOUNT\";\r\nexport const CHANGE_DONE_CLASS_PENDING_EDIT: string = \"CHANGE_DONE_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_DONE_CLASS_PENDING_EDIT: string = \"CLEAR_DONE_CLASS_PENDING_EDIT\";\r\nexport const REMOVE_DONE_CLASS_ALL: string = \"REMOVE_DONE_CLASS_ALL\";\r\nexport const INITIAL_DONE_CLASS: string = \"INITIAL_DONE_CLASS\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(classes_parent: IClassesParent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        classes_parent\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialDoinglClass(classes_parent: IClassesParent): IInitialDoinglClassActionType {\r\n    return { type: INITIAL_DOING_CLASS, classes_parent: classes_parent };\r\n}\r\n\r\nexport function removeDoinglClassAll(): IRemoveDoinglClassAllActionType {\r\n    return { type: REMOVE_DOING_CLASS_ALL };\r\n}\r\n\r\nexport function addDoinglClass(classes_parent: IClassesParent): IAddDoinglClassActionType {\r\n    return { type: ADD_DOING_CLASS, classes_parent: classes_parent };\r\n}\r\n\r\nexport function editDoinglClass(classes_parent: IClassesParent): IEditDoinglClassActionType {\r\n    return { type: EDIT_DOING_CLASS, classes_parent: classes_parent };\r\n}\r\n\r\nexport function removeDoinglClass(id: any): IRemoveDoinglClassActionType {\r\n    return { type: REMOVE_DOING_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedDoinglClass(classes_parent: IClassesParent): IChangeSelectedDoinglClassActionType {\r\n    return { type: CHANGE_DOING_CLASS_PENDING_EDIT, classes_parent: classes_parent };\r\n}\r\n\r\nexport function clearSelectedDoinglClass(): IClearSelectedDoinglClassActionType {\r\n    return { type: CLEAR_DOING_CLASS_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialDoneClass(classes_parent: IClassesParent): IInitialDoneClassActionType {\r\n    return { type: INITIAL_DONE_CLASS, classes_parent: classes_parent };\r\n}\r\n\r\nexport function removeDoneClassAll(): IRemoveDoneClassAllActionType {\r\n    return { type: REMOVE_DONE_CLASS_ALL };\r\n}\r\n\r\nexport function addDoneClass(classes_parent: IClassesParent): IAddDoneClassActionType {\r\n    return { type: ADD_DONE_CLASS, classes_parent: classes_parent };\r\n}\r\n\r\nexport function editDoneClass(classes_parent: IClassesParent): IEditDoneClassActionType {\r\n    return { type: EDIT_DONE_CLASS, classes_parent: classes_parent };\r\n}\r\n\r\nexport function removeDoneClass(id: any): IRemoveDoneClassActionType {\r\n    return { type: REMOVE_DONE_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedDoneClass(classes_parent: IClassesParent): IChangeSelectedDoneClassActionType {\r\n    return { type: CHANGE_DONE_CLASS_PENDING_EDIT, classes_parent: classes_parent };\r\n}\r\n\r\nexport function clearSelectedDoneClass(): IClearSelectedDoneClassActionType {\r\n    return { type: CLEAR_DONE_CLASS_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ClassesParentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_classes_parents\r\ninterface IAddDoinglClassActionType { type: string, classes_parent: IClassesParent };\r\ninterface IEditDoinglClassActionType { type: string, classes_parent: IClassesParent };\r\ninterface IRemoveDoinglClassActionType { type: string, id: any };\r\ninterface IChangeSelectedDoinglClassActionType { type: string, classes_parent: IClassesParent };\r\ninterface IClearSelectedDoinglClassActionType { type: string };\r\ninterface IRemoveDoinglClassAllActionType { type: string }\r\ninterface IInitialDoinglClassActionType {type: string, classes_parent: IClassesParent}\r\n\r\n// not_register_classes_parents\r\ninterface IAddDoneClassActionType { type: string, classes_parent: IClassesParent };\r\ninterface IEditDoneClassActionType { type: string, classes_parent: IClassesParent };\r\ninterface IRemoveDoneClassActionType { type: string, id: any };\r\ninterface IChangeSelectedDoneClassActionType { type: string, classes_parent: IClassesParent };\r\ninterface IClearSelectedDoneClassActionType { type: string };\r\ninterface IRemoveDoneClassAllActionType { type: string }\r\ninterface IInitialDoneClassActionType {type: string, classes_parent: IClassesParent}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ClassesParentModificationStatus};","import { fetchDataSuccess, fetchDataError, removeDoinglClassAll, removeDoneClassAll, initialDoinglClass, initialDoneClass,  addDoinglClass, addDoneClass } from \"../../../store/actions/classes_parent.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ClassesParent {\r\n    id: any;\r\n    name: string;\r\n    link_url: string;\r\n    student_id: number;\r\n    student_name: string;\r\n    teacher_name: string;\r\n    teacher_id: number;\r\n    course_id: number;\r\n    semester_class_id: number;\r\n    semester_class_name: string;\r\n    user_register_teach_semester: number;\r\n    security_code: string;\r\n    total_section_studied: number;\r\n    total_student: number;\r\n    total_section: number;\r\n    schedule_section_next: string;\r\n    course_name: string;\r\n    semester_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_type_id: number;\r\n    art_level_id: number;\r\n    art_age_id: number;\r\n    art_age_name: string;\r\n}\r\nexport function getClassesParent(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/classes/parent/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getClassesParent(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeDoinglClassAll())\r\n                dispatch(removeDoneClassAll())\r\n                console.log(data.body.classes_done)\r\n                console.log(data.body.classes_doing)\r\n                data.body.classes_done.map((ele: any, index: any) => {\r\n                    var classes_parent: ClassesParent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        semester_class_name: ele.semester_class_name,\r\n                        student_id: ele.student_id,\r\n                        student_name: ele.student_name,\r\n                        teacher_id: ele.teacher_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semester_class_id,\r\n                        user_register_teach_semester: ele.user_register_teach_semester,\r\n                        security_code: ele.security_code,\r\n                        schedule_section_next: ele.schedule_section_next,\r\n                        total_student: ele.total_student,\r\n                        total_section: ele.total_section,\r\n                        total_section_studied: ele.total_section_studied,\r\n                        link_url: ele.link_url,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_level_id: ele.art_level_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        course_name: ele.course_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name\r\n                    }\r\n                    console.log(classes_parent)\r\n                    if (index === 0){\r\n                        return dispatch(initialDoneClass(classes_parent));\r\n                    }\r\n                    else{\r\n                        return dispatch(addDoneClass(classes_parent))\r\n                    }\r\n                })\r\n\r\n                data.body.classes_doing.map((ele: any, index: any) => {\r\n                    var classes_parent: ClassesParent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        student_id: ele.student_id,\r\n                        semester_class_name: ele.semester_class_name,\r\n                        student_name: ele.student_name,\r\n                        teacher_id: ele.teacher_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        course_id: ele.course_id,\r\n                        schedule_section_next: ele.schedule_section_next,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semester_class_id,\r\n                        user_register_teach_semester: ele.user_register_teach_semester,\r\n                        security_code: ele.security_code,\r\n                        total_student: ele.total_student,\r\n                        total_section_studied: ele.total_section_studied,\r\n                        total_section: ele.total_section,\r\n                        link_url: ele.link_url,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_level_id: ele.art_level_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        course_name: ele.course_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        art_type_name: ele.art_type_name\r\n                    }\r\n                    console.log(classes_parent)\r\n                    if (index === 0){\r\n                        return dispatch(initialDoinglClass(classes_parent));\r\n                    }\r\n                    else{\r\n                        return dispatch(addDoinglClass(classes_parent))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\nimport { IClassesParent } from \"../../store/models/classes_parent.interface\";\r\nimport { IClassesParentState, IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ClassParentList.css\"\r\n\r\nexport type classTeacherListProps = {\r\n    onSelect?: (classTeacher: IClassesParent) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\n\r\nfunction ClassDoingList1(props: classTeacherListProps): JSX.Element {\r\n    const classes_parents: IClassesParentState = useSelector((state: IStateType) => state.classes_parents);\r\n    const users: IUserState  = useSelector((state: IStateType) => state.users);\r\n    const [totalPage, setTotalPage] = useState(0)\r\n    const [element, setElement] = useState<IClassesParent[]>([])\r\n    useEffect(() => {\r\n        let x = (classes_parents.classes_doing.length - classes_parents.classes_doing.length % 10) / 10;\r\n        if (x === 0) {\r\n            setElement(classes_parents.classes_doing)\r\n        }\r\n        else {\r\n            setElement(classes_parents.classes_doing.slice(0, 10))\r\n        }\r\n\r\n        setTotalPage((x + 1))\r\n    }, [classes_parents.classes_doing])\r\n\r\n    function handlePagination(count: number) {\r\n        console.log(count)\r\n        if (count === totalPage) {\r\n            setElement(classes_parents.classes_doing.slice(count * 10))\r\n        }\r\n        else {\r\n            setElement(classes_parents.classes_doing.slice(count * 10, count * 10 + 10))\r\n        }\r\n    }\r\n\r\n\r\n    const history = useHistory();\r\n    const routeChange = (classes_parent: IClassesParent) => {\r\n        let path = '/student/classes-doing';\r\n        localStorage.removeItem('teacher_id');\r\n        localStorage.setItem('teacher_id', classes_parent.teacher_id.toString())\r\n        localStorage.removeItem('student_id');\r\n        localStorage.setItem('student_id', classes_parent.student_id.toString())\r\n        localStorage.removeItem('class_id');\r\n        localStorage.setItem('class_id', classes_parent.id.toString());\r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    const [filter, setFilter] = useState(1)\r\n\r\n    function handleChange(e: any) {\r\n        setFilter(e.target.value)\r\n    }\r\n\r\n    function handleFilter() {\r\n        console.log(filter)\r\n\r\n        let k = classes_parents.classes_doing.filter((ele, idx) => \r\n            ele.student_id == filter\r\n        )\r\n\r\n        let x = (k.length - (k.length) % 10) / 10;\r\n        if (x === 0) {\r\n            setElement(k)\r\n        }\r\n        else {\r\n            setElement(k.slice(0, 10))\r\n        }\r\n        setTotalPage((x + 1))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"d-flex flex-row justify-content-between align-items-center filters\">\r\n                            <h6 className=\"ml-3\">Có {element.filter((val) => {\r\n                            if (props.value === \"\"){\r\n                              return val;\r\n                            }\r\n                            else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))){\r\n                              return val;\r\n                            }\r\n                            return null\r\n                          }).length} kết quả</h6>\r\n                            <div className=\"right-sort\">\r\n                                <div className=\"sort-by mr-3\">\r\n                                    <span className=\"mr-1\">Lọc theo:</span>\r\n                                    <select name=\"cars\" id=\"cars\"\r\n                                        value={filter}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        {\r\n                                            users.students.map((ele, idx) => {\r\n                                                return (\r\n                                                    <option value={ele.id}>{ele.username}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select>                                  \r\n                                    <button className=\"btn btn-outline-dark btn-sm ml-3 filter\" type=\"button\" onClick={() => handleFilter()}>Lọc&nbsp;<i className=\"fa fa-flask\"></i></button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-1\">\r\n                    {\r\n                        element.filter((val) => {\r\n                            if (props.value === \"\"){\r\n                              return val;\r\n                            }\r\n                            else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))){\r\n                              return val;\r\n                            }\r\n                            return null\r\n                          }).map((ele, index) => {\r\n                            return (\r\n                                <div className=\"courses-container\" key={`lesson_${ele.id}`} onClick={() => { routeChange(ele) }}>\r\n                                    <div className=\"course\">\r\n                                        <div className=\"course-preview\">\r\n                                            <h6>Khóa học</h6>\r\n                                            <h2>{ele.course_name}</h2>\r\n                                            <a href=\"/#\">Xem toàn bộ buổi <i className=\"fas fa-chevron-right\"></i></a>\r\n                                        </div>\r\n                                        <div className=\"course-info\">\r\n                                            <div className=\"progress-container\">\r\n                                                <div className=\"progress\"></div>\r\n                                                <span className=\"progress-text\">\r\n                                                    {ele.total_section_studied}/{ele.total_section} Buổi\r\n                                                </span>\r\n                                            </div>\r\n                                            <h2>{ele.student_name}</h2>\r\n                                            <h6 className=\"mt-4\">Giáo viên: {ele.teacher_name}</h6>\r\n                                            <h6 className=\"mt-4\">Lịch học buổi kế: {ele.schedule_section_next.replaceAll(\"T\", \" \")}</h6>\r\n                                            <button className=\"btn-x\" onClick={() => { routeChange(ele) }}>Chi tiết</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"d-flex justify-content-end text-right mt-2\">\r\n                    <nav>\r\n                        <ul className=\"pagination\">\r\n                        <li className=\"page-item\">\r\n                            <a className=\"page-link\" aria-label=\"Previous\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                <span aria-hidden=\"true\">&laquo;</span>\r\n                            </a>\r\n                        </li>\r\n                            {\r\n                                Array.from(Array((totalPage)).keys()).map((ele, idx) => {\r\n                                    return (\r\n                                        <li className=\"page-item\"><a className=\"page-link\" href=\"/\" onClick={(e) => {\r\n                                            e.preventDefault()\r\n                                            handlePagination(ele)}}>{ele+1}</a></li>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Next\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&raquo;</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ClassDoingList1;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\nimport { IClassesParent } from \"../../store/models/classes_parent.interface\";\r\nimport { IClassesParentState, IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ClassParentList.css\"\r\n\r\nexport type classTeacherListProps = {\r\n    onSelect?: (classTeacher: IClassesParent) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction ClassDoneList1(props: classTeacherListProps): JSX.Element {\r\n    const classes_parents: IClassesParentState = useSelector((state: IStateType) => state.classes_parents);\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n\r\n    const [totalPage, setTotalPage] = useState(0)\r\n    const [element, setElement] = useState<IClassesParent[]>([])\r\n    useEffect(() => {\r\n        let x = (classes_parents.classes_done.length - classes_parents.classes_done.length % 10) / 10;\r\n        if (x === 0) {\r\n            setElement(classes_parents.classes_done)\r\n        }\r\n        else {\r\n            setElement(classes_parents.classes_done.slice(0, 10))\r\n        }\r\n\r\n        setTotalPage((x + 1))\r\n    }, [classes_parents.classes_done])\r\n\r\n    function handlePagination(count: number) {\r\n        console.log(count)\r\n        if (count === totalPage) {\r\n            setElement(classes_parents.classes_done.slice(count * 10))\r\n        }\r\n        else {\r\n            setElement(classes_parents.classes_done.slice(count * 10, count * 10 + 10))\r\n        }\r\n    }\r\n\r\n    const history = useHistory();\r\n    const routeChange = (classes_parent: IClassesParent) => {\r\n        let path = '/student/class';\r\n        localStorage.removeItem('teacher_id');\r\n        localStorage.setItem('teacher_id', classes_parent.teacher_id.toString())\r\n        localStorage.removeItem('student_id');\r\n        localStorage.setItem('student_id', classes_parent.student_id.toString())\r\n        localStorage.removeItem('class_id');\r\n        localStorage.setItem('class_id', classes_parent.id.toString());\r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    const [filter, setFilter] = useState(1)\r\n\r\n    function handleChange(e: any) {\r\n        setFilter(e.target.value)\r\n    }\r\n\r\n    function handleFilter() {\r\n        console.log(filter)\r\n\r\n        let k = classes_parents.classes_done.filter((ele, idx) =>\r\n            ele.student_id == filter\r\n        )\r\n\r\n        let x = (k.length - (k.length) % 10) / 10;\r\n        if (x === 0) {\r\n            setElement(k)\r\n        }\r\n        else {\r\n            setElement(k.slice(0, 10))\r\n        }\r\n        setTotalPage((x + 1))\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"d-flex flex-row justify-content-between align-items-center filters\">\r\n                            <h6 className=\"ml-3\">Có {element.filter((val) => {\r\n                                if (props.value === \"\") {\r\n                                    return val;\r\n                                }\r\n                                else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))) {\r\n                                    return val;\r\n                                }\r\n                                return null\r\n                            }).length} kết quả</h6>\r\n                            <div className=\"right-sort\">\r\n                                <div className=\"sort-by mr-3\">\r\n                                    <span className=\"mr-1\">Lọc theo:</span>\r\n                                    <select name=\"cars\" id=\"cars\"\r\n                                        value={filter}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        {\r\n                                            users.students.map((ele, idx) => {\r\n                                                return (\r\n                                                    <option value={ele.id}>{ele.username}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                    <button className=\"btn btn-outline-dark btn-sm ml-3 filter\" type=\"button\" onClick={() => handleFilter()}>Lọc&nbsp;<i className=\"fa fa-flask\"></i></button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-1\">\r\n                    {\r\n                        element.filter((val) => {\r\n                            if (props.value === \"\") {\r\n                                return val;\r\n                            }\r\n                            else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))) {\r\n                                return val;\r\n                            }\r\n                            return null\r\n                        }).map((ele, index) => {\r\n                            return (\r\n                                <div className=\"courses-container\" key={`lesson_${ele.id}`}>\r\n                                    <div className=\"course\">\r\n                                        <div className=\"course-preview\">\r\n                                            <h6>Khóa học</h6>\r\n                                            <h2>{ele.course_name}</h2>\r\n                                            <a href=\"/#\">Xem toàn bộ buổi <i className=\"fas fa-chevron-right\"></i></a>\r\n                                        </div>\r\n                                        <div className=\"course-info\">\r\n                                            <div className=\"progress-container\">\r\n                                                <div className=\"progress\"></div>\r\n                                                <span className=\"progress-text\">\r\n                                                    {ele.total_section}/{ele.total_section} Buổi\r\n                                                </span>\r\n                                            </div>\r\n                                            <h2>{ele.student_name}</h2>\r\n                                            <h6>Giáo viên: {ele.teacher_name}</h6>\r\n                                            <button className=\"btn-x\" onClick={() => { routeChange(ele) }}>Chi tiết</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"d-flex justify-content-end text-right mt-2\">\r\n                    <nav>\r\n                        <ul className=\"pagination\">\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Previous\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&laquo;</span>\r\n                                </a>\r\n                            </li>\r\n                            {\r\n                                Array.from(Array((totalPage)).keys()).map((ele, idx) => {\r\n                                    return (\r\n                                        <li className=\"page-item\"><a className=\"page-link\" href=\"/\" onClick={(e) => { \r\n                                        e.preventDefault()\r\n                                        handlePagination(ele) }}>{ele + 1}</a></li>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Next\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&raquo;</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ClassDoneList1;\r\n","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { changeSelectedDoinglClass, setModificationState } from \"../../store/actions/classes_parent.action\";\r\nimport { IClassesParentState, IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport { IClassesParent, ClassesParentModificationStatus } from \"../../store/models/classes_parent.interface\";\r\nimport \"./ClassParent.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { getClassesParent } from \"../../common/service/ClassesParent/GetClassesParent\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport ClassDoingList1 from \"./ClassDoingList1\";\r\nimport ClassDoneList1 from \"./ClassDoneList1\";\r\nimport { getStudentByParent } from \"../../common/service/Student/GetStudentByParent\";\r\n\r\nconst ClassParent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const classes_parents: IClassesParentState = useSelector((state: IStateType) => state.classes_parents);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberClassDoingCount: number = classes_parents.classes_doing.length;\r\n    const numberClassDoneCount: number = classes_parents.classes_done.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getClassesParent(dispatch, id))\r\n                    trackPromise(getStudentByParent(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getClassesParent(dispatch, id))\r\n                trackPromise(getStudentByParent(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khóa học\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n    function onClassesParentSelect(classes_parent: IClassesParent): void {\r\n        dispatch(changeSelectedDoinglClass(classes_parent));\r\n        dispatch(setModificationState(ClassesParentModificationStatus.None));\r\n    }\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    const [checked, setChecked] = useState(true);\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                <div className=\"row\">\r\n                    <TopCard title=\"KHÓA HỌC\" text={`${numberClassDoingCount}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"KHÓA HỌC ĐÃ HỌC\" text={`${numberClassDoneCount}`} icon=\"book\" class=\"primary\" />\r\n                    {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(ClassesParentModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n                </div>\r\n\r\n                <div className=\"row\" id=\"search-box\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"input-group\" id=\"search-content\">\r\n                            <div className=\"form-outline\">\r\n                                <input type=\"text\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                                    setSearchTerm(event.target.value)\r\n                                    console.log(searchTerm)\r\n                                }} />\r\n                            </div>\r\n                            <button type=\"button\" className=\"btn btn-primary\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                            if (checked === false) {\r\n                                setChecked(true)\r\n                            }\r\n                        }} style={{\r\n                            color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Đang học</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"30%\",\r\n                            backgroundColor: checked ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n                    <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                            if (checked === true) {\r\n                                setChecked(false)\r\n                            }\r\n                        }}\r\n                            style={{\r\n                                color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                            }}>Đã học</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"30%\",\r\n                            backgroundColor: checked ? \"#ffffff\" : \"#F24E1E\"\r\n                        }}></div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {\r\n                    function () {\r\n                        if (checked === true) {\r\n                            return (\r\n                                <Fragment>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                                <div className=\"card-header py-3\">\r\n                                                    <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách lớp</h6>\r\n                                                </div>\r\n                                                <div className=\"card-body\">\r\n                                                    <ClassDoingList1\r\n                                                        onSelect={onClassesParentSelect} value={searchTerm}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                        else {\r\n                            return (\r\n                                <Fragment>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                                <div className=\"card-header py-3\">\r\n                                                    <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách lớp</h6>\r\n                                                </div>\r\n                                                <div className=\"card-body\">\r\n                                                    <ClassDoneList1\r\n                                                        onSelect={onClassesParentSelect} value={searchTerm}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n                    }()\r\n                }\r\n\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default ClassParent;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChartLine } from \"../../common/components/CharLine\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getExerciseForClassStudent } from \"../../common/service/ExerciseStudent/GetExerciseForClassStudent\";\r\nimport { getParentById } from \"../../common/service/Parent/GetParentById\";\r\nimport { getStudentLeaveByClassAndStudent } from \"../../common/service/StudentLeave/GetStudentLeaveByClassStudent\";\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\nimport { getUserGradeExerciseByStudentAndClass } from \"../../common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByClassStudent\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IExerciseStudentState, IStateType, IStudentLeaveState, IUserGradeExerciseSubmissionState, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ManageClasses.css\"\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst ManageClassesDoing: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const exercise_students: IExerciseStudentState = useSelector((state: IStateType) => state.exercise_students);\r\n    const student_leave: IStudentLeaveState = useSelector((state: IStateType) => state.student_leaves);\r\n    const user_grade_exercise_submission: IUserGradeExerciseSubmissionState = useSelector((state: IStateType) => state.user_grade_exercise_submissions);\r\n    const numberSubmittedCount: number = exercise_students.exercise_submitted_graded.length + exercise_students.exercise_submitted_not_grade.length;\r\n    const numberNotSubmitNowCount: number = exercise_students.exercise_not_submit.length;\r\n    const numberStudentLeaveCount: number = student_leave.acceptLeaves.length;\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    \r\n    var id_z = localStorage.getItem('teacher_id');\r\n    var teacher_id: number = 0;\r\n    if (id_z !== null) {\r\n        teacher_id = parseInt(id_z);\r\n    }\r\n\r\n    var id_y = localStorage.getItem('student_id');\r\n    var student_id: number= 0;\r\n    if (id_y !== null) {\r\n        student_id = parseInt(id_y);\r\n    }\r\n\r\n    var id_t = localStorage.getItem('class_id');\r\n    var class_id: number = 0;\r\n    if (id_t !== null) {\r\n        class_id = parseInt(id_t);\r\n    }\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getUserById(dispatch, student_id))\r\n                    trackPromise(getParentById(dispatch, teacher_id))\r\n                    trackPromise(getExerciseForClassStudent(dispatch, class_id, student_id))\r\n                    trackPromise(getStudentLeaveByClassAndStudent(dispatch, class_id, student_id))\r\n                    trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id,student_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getUserById(dispatch, student_id))\r\n                trackPromise(getParentById(dispatch, teacher_id))\r\n                trackPromise(getExerciseForClassStudent(dispatch, class_id, student_id))\r\n                trackPromise(getStudentLeaveByClassAndStudent(dispatch, class_id, student_id))\r\n                trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id,student_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, student_id, teacher_id, class_id]);\r\n\r\n    let list_score_user_grade_exercise : number[] = [];\r\n    let list_name_user_grade_exercise : string[] = [];\r\n    user_grade_exercise_submission.user_grade_exercise_submissions.map((ele, idx) => {\r\n        list_score_user_grade_exercise.push(ele.score)\r\n        list_name_user_grade_exercise.push(ele.exercise_name)\r\n        return ele\r\n    })\r\n\r\n\r\n    const labels = list_name_user_grade_exercise;\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Điểm kiểm tra',\r\n                data: list_score_user_grade_exercise,\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            }\r\n        ],\r\n    };\r\n\r\n    const history = useHistory();\r\n    const routeChange = () =>{ \r\n        let path = '/class/exercise-student'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"BÀI TẬP ĐÃ NỘP\" text={`${numberSubmittedCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"BÀI TẬP CHƯA NỘP\" text={`${numberNotSubmitNowCount}`} icon=\"book\" class=\"danger\" />\r\n                <TopCard title=\"SỐ BUỔI NGHỈ\" text={`${numberStudentLeaveCount}`} icon=\"book\" class=\"danger\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <h3 className=\" mb-2\" id=\"level-teacher\">Thông tin học sinh</h3>\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <h4 id=\"full-name\">Tên : {users.teachers.length > 0 ? users.teachers[0].username : \"\"}</h4>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <p id=\"username-teacher\">Giới tính: {users.teachers.length > 0 ? users.teachers[0].sex : \"\"}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-phone fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Số điện thoại: {users.teachers.length > 0 ? users.teachers[0].phone : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Ngày sinh: {users.teachers.length > 0 ? users.teachers[0].dateOfBirth : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Email: {users.teachers.length > 0 ? users.teachers[0].email : \"\"}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <h3 className=\" mb-2\" id=\"level-teacher\">Thông tin giáo viên</h3>\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <h4 id=\"full-name\">Tên : {users.parents.length > 0 ? users.parents[0].username : \"\"}</h4>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters justify-content-center\">\r\n                                            <p id=\"username-teacher\">Giới tính: {users.parents.length > 0 ? users.parents[0].sex : \"\"}</p>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-phone fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Số điện thoại: {users.parents.length > 0 ? users.parents[0].phone : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-calendar fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Ngày sinh: {users.parents.length > 0 ? users.parents[0].dateOfBirth : \"\"}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row no-gutters\">\r\n                                            <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                            <p id=\"phone\">Email: {users.parents.length > 0 ? users.parents[0].email : \"\"}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <TopCardLevel title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`2`} icon=\"book\" class=\"primary\" />\r\n                    <TopCardLevel title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`1`} icon=\"book\" class=\"danger\" /> */}\r\n                </div>\r\n\r\n                <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                    <div className=\"row\">\r\n                        <h3 className=\" mb-2\" id=\"level-teacher\">Thống kê điểm</h3>\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row no-gutters\">\r\n                                        <ChartLine data={data} />\r\n                                    </div>\r\n                                    <div className=\"row justify-content-center\">\r\n                                        <button \r\n                                            className=\"btn btn-success btn-green\" \r\n                                            id=\"btn-into-class-student\"\r\n                                            onClick={() => {routeChange()}}\r\n                                        >\r\n                                            Xem chi tiết\r\n                                            <i className={`fas fa-arrow-right fa-1x`} id=\"icon-arrow-right\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>              \r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ManageClassesDoing;\r\n","import { fetchDataSuccess, fetchDataError, removeRegisterSuccessfullCourseAll, addRegisterSuccessfullCourse } from \"../../../store/actions/course_teacher.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface CourseTeacher {\r\n    id: any;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: number;\r\n    semester_class_id: number;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    semester_name: string;\r\n    image_url: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n    registration_deadline: string;\r\n}\r\nexport function getSemesterClassNew(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester-class/new`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSemesterClassNew(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeRegisterSuccessfullCourseAll())\r\n                //console.log(data.body.lessons)\r\n                data.body.semester_classes.map((ele: any, index: any) => {\r\n                    var course: CourseTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        course_name: ele.course_name,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semster_class_id,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        schedule: ele.schedule,\r\n                        registration_deadline: ele.registration_deadline\r\n\r\n                    }\r\n                    console.log(course)\r\n                    return dispatch(addRegisterSuccessfullCourse(course))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { ICart, CartModificationStatus } from \"../models/cart.interface\";\r\nexport const ADD_CART: string = \"ADD_CART\";\r\nexport const EDIT_CART: string = \"EDIT_CART\";\r\nexport const REMOVE_CART: string = \"REMOVE_CART\";\r\nexport const INCREASE_QUANTITY: string = \"INCREASE_QUANTITY\";\r\nexport const DECREASE_QUANTITY: string = \"DECREASE_QUANTITY\";\r\nexport const CHANGE_CART_AMOUNT: string = \"CHANGE_CART_AMOUNT\";\r\nexport const CHANGE_CART_PENDING_EDIT: string = \"CHANGE_CART_PENDING_EDIT\";\r\nexport const CLEAR_CART_PENDING_EDIT: string = \"CLEAR_CART_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_CART_ALL: string = \"REMOVE_CART_ALL\";\r\nexport const INITIAL_CART: string = \"INITIAL_CART\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(cart: ICart) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        cart\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCart(cart: ICart): IInitialCartActionType {\r\n    return { type: INITIAL_CART, cart: cart };\r\n}\r\n\r\nexport function removeCartAll(): IRemoveCartAllActionType {\r\n    return { type: REMOVE_CART_ALL };\r\n}\r\n\r\nexport function addCart(cart: ICart): IAddCartActionType {\r\n    return { type: ADD_CART, cart: cart };\r\n}\r\n\r\nexport function editCart(cart: ICart): IEditCartActionType {\r\n    return { type: EDIT_CART, cart: cart };\r\n}\r\n\r\nexport function removeCart(id: any): IRemoveCartActionType {\r\n    return { type: REMOVE_CART, id: id };\r\n}\r\n\r\nexport function increaseQuantiry(id: any): IIncreaseQuantityCartActionType {\r\n    return { type: INCREASE_QUANTITY, id: id };\r\n}\r\n\r\nexport function decreaseQuantiry(id: any): IDecreaseQuantityCartActionType {\r\n    return { type: DECREASE_QUANTITY, id: id };\r\n}\r\n\r\nexport function changeSelectedCart(cart: ICart): IChangeSelectedCartActionType {\r\n    return { type: CHANGE_CART_PENDING_EDIT, cart: cart };\r\n}\r\n\r\nexport function clearSelectedCart(): IClearSelectedCartActionType {\r\n    return { type: CLEAR_CART_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CartModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddCartActionType { type: string, cart: ICart };\r\ninterface IEditCartActionType { type: string, cart: ICart };\r\ninterface IRemoveCartActionType { type: string, id: any };\r\ninterface IChangeSelectedCartActionType { type: string, cart: ICart };\r\ninterface IIncreaseQuantityCartActionType {type: string, id: any};\r\ninterface IDecreaseQuantityCartActionType {type: string, id: any};\r\ninterface IClearSelectedCartActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  CartModificationStatus};\r\ninterface IRemoveCartAllActionType { type: string }\r\ninterface IInitialCartActionType {type: string, cart: ICart}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/user_register_join_semester.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postUserRegisterJoinSemester(data: any, idx: any, routeHome: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-join-semester`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postUserRegisterJoinSemester(data, idx, routeHome))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Đăng kí thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                setTimeout(() => {\r\n                    routeHome()\r\n                }, 2000)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Đăng kí không thành công vì trùng lịch!\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postUserRegisterJoinSemester1(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-join-semester`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postUserRegisterJoinSemester1(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Đăng kí không thành công vì trùng lịch!\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Fragment, Dispatch, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IRootPageStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./SemesterClassDetail.css\"\r\nimport { IUser } from \"../../store/models/user.interface\";\r\nimport ReactSelect from \"../../common/components/ReactSelect\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { getSemesterClassNew } from \"../../common/service/SemesterClass/GetSemesterNew\";\r\nimport { getStudentByParent } from \"../../common/service/Student/GetStudentByParent\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { AiOutlineShoppingCart } from \"react-icons/ai\";\r\nimport { GrLinkDown, GrLinkNext } from \"react-icons/gr\";\r\nimport { addCart } from \"../../store/actions/cart.action\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { postUserRegisterJoinSemester } from \"../../common/service/UserRegisterJoinSemester/PostUserRegisterJoinSemester\";\r\nimport { postUserRegisterJoinSemester1 } from \"../../common/service/UserRegisterJoinSemester/postUserRegisterJoinSemester1\";\r\n\r\ntype Option1 = {\r\n    label: string;\r\n    value: string;\r\n}\r\n\r\nconst SemesterClassDetail: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const listTeacher: IUser[] = users.students\r\n    const listTeachers: Option1[] = [];\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    function handleClick() {\r\n        setChecked(!checked)\r\n    }\r\n\r\n    listTeacher.map((ele) => {\r\n        let item: Option1 = { \"label\": ele.username, \"value\": ele.id }\r\n        return listTeachers.push(item)\r\n    })\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    var id_a = localStorage.getItem('description_course');\r\n    var description_course: string = '';\r\n    if (id_a !== null) {\r\n        description_course = id_a;\r\n    }\r\n\r\n    var id_b = localStorage.getItem('course_id');\r\n    var course_id: number = 0;\r\n    if (id_b !== null) {\r\n        course_id = parseInt(id_b);\r\n    }\r\n\r\n    var id_c = localStorage.getItem('course_name');\r\n    var course_name: string = '';\r\n    if (id_c !== null) {\r\n        course_name = id_c;\r\n    }\r\n\r\n    var id_d = localStorage.getItem('art_age_name');\r\n    var art_age_name: string = '';\r\n    if (id_d !== null) {\r\n        art_age_name = id_d;\r\n    }\r\n\r\n    var id_e = localStorage.getItem('art_type_name');\r\n    var art_type_name: string = '';\r\n    if (id_e !== null) {\r\n        art_type_name = id_e;\r\n    }\r\n\r\n    var id_f = localStorage.getItem('num_of_section');\r\n    var num_of_section: string = '';\r\n    if (id_f !== null) {\r\n        num_of_section = id_f;\r\n    }\r\n\r\n    var id_h = localStorage.getItem('schedule');\r\n    var schedule: string = '';\r\n    if (id_h !== null) {\r\n        schedule = id_h;\r\n    }\r\n\r\n    var id_k = localStorage.getItem('art_level_name');\r\n    var art_level_name: string = '';\r\n    if (id_k !== null) {\r\n        art_level_name = id_k;\r\n    }\r\n\r\n    var id_l = localStorage.getItem('semester_class_name');\r\n    var semester_class_name: string = '';\r\n    if (id_l !== null) {\r\n        semester_class_name = id_l;\r\n    }\r\n\r\n    var id_m = localStorage.getItem('price');\r\n    var price: string = '';\r\n    if (id_m !== null) {\r\n        price = id_m;\r\n    }\r\n\r\n    var id_n = localStorage.getItem('semester_class_id');\r\n    var semester_class_id: number = 0;\r\n    if (id_n !== null) {\r\n        semester_class_id = parseInt(id_n);\r\n    }\r\n\r\n    var id_nx = localStorage.getItem('url_image');\r\n    var url_image: string = '';\r\n    if (id_nx !== null) {\r\n        url_image = id_nx;\r\n    }\r\n\r\n    console.log(course_id)\r\n    console.log(semester_class_id)\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getSemesterClassNew(dispatch))\r\n                    trackPromise(getStudentByParent(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getSemesterClassNew(dispatch))\r\n                trackPromise(getStudentByParent(dispatch, id))\r\n            }\r\n        }\r\n        \r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n    function handleRegister() {\r\n        if (valueTeacher.length === 0) {\r\n            toast.error(\"Vui lòng chọn ít nhất một bé!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 2000\r\n            });\r\n        }\r\n        else {\r\n            const idxx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n\r\n            valueTeacher.map((ele, idx) => {\r\n                if (idx !== valueTeacher.length - 1) {\r\n                    dispatch(postUserRegisterJoinSemester1({\r\n                        \"student_id\": ele.value,\r\n                        \"semester_classes_id\": semester_class_id,\r\n                        \"payer_id\": id,\r\n                        \"price\": price,\r\n                        \"status\": \"Waiting\"\r\n                    }, idxx))\r\n                }\r\n                else {\r\n                    dispatch(postUserRegisterJoinSemester({\r\n                        \"student_id\": ele.value,\r\n                        \"semester_classes_id\": semester_class_id,\r\n                        \"payer_id\": id,\r\n                        \"price\": price,\r\n                        \"status\": \"Waiting\"\r\n                    }, idxx, routeHome))\r\n                }\r\n                return dispatch(addCart({\r\n                    id: semester_class_id,\r\n                    name: semester_class_name,\r\n                    image: url_image,\r\n                    student_id: ele.value,\r\n                    student_name: ele.label,\r\n                    quantity: 1,\r\n                    price: parseInt(price)\r\n                }))\r\n            })\r\n        }\r\n    }\r\n\r\n    const history = useHistory();\r\n    function handleRegister1() {\r\n        if (valueTeacher.length === 0) {\r\n            toast.error(\"Vui lòng chọn ít nhất một bé!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 2000\r\n            });\r\n        }\r\n        else {\r\n            const idxx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n\r\n            valueTeacher.map((ele, idx) => {\r\n                if (idx !== valueTeacher.length - 1) {\r\n                    dispatch(postUserRegisterJoinSemester1({\r\n                        \"student_id\": ele.value,\r\n                        \"semester_classes_id\": semester_class_id,\r\n                        \"payer_id\": id,\r\n                        \"price\": price,\r\n                        \"status\": \"Waiting\"\r\n                    }, idxx))\r\n                }\r\n                else {\r\n                    dispatch(postUserRegisterJoinSemester({\r\n                        \"student_id\": ele.value,\r\n                        \"semester_classes_id\": semester_class_id,\r\n                        \"payer_id\": id,\r\n                        \"price\": price,\r\n                        \"status\": \"Waiting\"\r\n                    }, idxx, routeHome))\r\n                }\r\n                return dispatch(addCart({\r\n                    id: semester_class_id,\r\n                    name: semester_class_name,\r\n                    image: url_image,\r\n                    student_id: ele.value,\r\n                    student_name: ele.label,\r\n                    quantity: 1,\r\n                    price: parseInt(price)\r\n                }))\r\n            })\r\n            let path = '/cart';\r\n            history.push({\r\n                pathname: path\r\n            });\r\n        }\r\n    }\r\n\r\n    function routeHome() {\r\n        let path = '/discover/course';\r\n        history.push(path)\r\n    }\r\n\r\n    const [valueTeacher, setValueTeacher] = useState<any[]>([])\r\n\r\n    console.log(valueTeacher)\r\n\r\n    function changeValueTeacher(value: any) {\r\n        setValueTeacher(value)\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                <ToastContainer />\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4 shadow-1 card-semester-class-detail\">\r\n                        <div className=\"row no-gutters align-items-center\">\r\n                            <div className=\"text-xs font-weight-bold text-green text-uppercase \">\r\n                                <p className=\"fullname ml-4 mt-4\">{semester_class_name}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-6 col-md-6\">\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs \">\r\n                                        <p className=\"birthday ml-4\">Khóa học: {course_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday ml-4\">Thể loại: {art_type_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday ml-4\">Độ tuổi: {art_age_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday ml-4\">Trình độ: {art_level_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-xl-6 col-md-6\">\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs mr-2\">\r\n                                        <p className=\"birthday\">Lịch học: {schedule}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday\">Số buổi học: {num_of_section}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday\">Giá: {price}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group col-md-6 ml-4\">\r\n                                <label>Bé</label>\r\n                                <ReactSelect setValue={listTeachers} value={[]} changeValue={changeValueTeacher} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\" id=\"btn-register-course\">\r\n                            <div className=\"col-lg-6 col-md-6 col-xs-6 text-center justify-content-center\">\r\n                                <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course1\" onClick={() => handleRegister()}>\r\n                                    <AiOutlineShoppingCart />\r\n                                    Thêm vào giỏ hàng\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"col-lg-6 col-md-6 col-xs-6 text-center justify-content-center\">\r\n                                <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course2\" onClick={() => handleRegister1()}>\r\n                                    <GrLinkNext id=\"btn-payment\" color=\"#ffffff\" />\r\n                                    Thanh toán ngay\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <div className=\"row\" id=\"btn-register-course\">\r\n                <div className=\"col-lg-12 col-md-12 col-xs-12 text-center justify-content-center\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course4\" onClick={() => handleClick()}>\r\n                    <GrLinkDown id=\"btn-payment\" color=\"#ffffff\" />\r\n                    Xem miêu tả\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <div className=\"col-xl-12 col-lg-12\">\r\n                                <div className=\"card-header py-3\">\r\n                                    <h6 className=\"m-0 font-weight-bold text-green\">Chi tiết</h6>\r\n                                </div>\r\n                                <div className=\"card shadow mb-4\">\r\n                                    <div className=\"card-body\" dangerouslySetInnerHTML={{ __html: description_course }}>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n            </Fragment >\r\n    );\r\n};\r\n\r\nexport default SemesterClassDetail;\r\n","import React, { Fragment, Dispatch, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IRootPageStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport \"./ConestDetail.css\"\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IUser } from \"../../store/models/user.interface\";\r\nimport ReactSelect from \"../../common/components/ReactSelect\";\r\nimport { postUserRegisterContest } from \"../../common/service/UserRegisterContest/PostUserRegisterContest\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { getStudentByParent } from \"../../common/service/Student/GetStudentByParent\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { GrLinkDown } from \"react-icons/gr\";\r\ntype Option1 = {\r\n    label: string;\r\n    value: string;\r\n}\r\n\r\nconst ConestDetailStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const listTeacher: IUser[] = users.students\r\n    const listTeachers: Option1[] = [];\r\n    listTeacher.map((ele) => {\r\n        let item: Option1 = { \"label\": ele.username, \"value\": ele.id }\r\n        return listTeachers.push(item)\r\n    })\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    function handleClick() {\r\n        setChecked(!checked)\r\n    }\r\n\r\n    var id_x = localStorage.getItem('contest_id');\r\n    let contest_id: number = 0;\r\n    if (id_x !== null) {\r\n        contest_id = parseInt(id_x);\r\n    }\r\n\r\n    console.log(contest_id)\r\n\r\n    var id_y = localStorage.getItem('description_contest');\r\n    let description_contest: string = \"\";\r\n    if (id_y !== null) {\r\n        description_contest = id_y;\r\n    }\r\n\r\n    var id_z = localStorage.getItem('id');\r\n    let id: any = \"\";\r\n    if (id_z !== null) {\r\n        id = id_z;\r\n    }\r\n\r\n    var id_a = localStorage.getItem('art_age_name');\r\n    let art_age_name: string = \"\";\r\n    if (id_a !== null) {\r\n        art_age_name = id_a;\r\n    }\r\n\r\n    var id_b = localStorage.getItem('art_type_name');\r\n    let art_type_name: string = \"\";\r\n    if (id_b !== null) {\r\n        art_type_name = id_b;\r\n    }\r\n\r\n    var id_c = localStorage.getItem('registration_time');\r\n    let registration_time: string = \"\";\r\n    if (id_c !== null) {\r\n        registration_time = id_c;\r\n    }\r\n\r\n    var id_d = localStorage.getItem('start_time');\r\n    let start_time: string = \"\";\r\n    if (id_d !== null) {\r\n        start_time = id_d;\r\n    }\r\n\r\n    var id_e = localStorage.getItem('end_time');\r\n    let end_time: string = \"\";\r\n    if (id_e !== null) {\r\n        end_time = id_e;\r\n    }\r\n\r\n    var id_f = localStorage.getItem('contest_name');\r\n    let contest_name: string = \"\";\r\n    if (id_f !== null) {\r\n        contest_name = id_f;\r\n    }\r\n\r\n    var id_h = localStorage.getItem('max_participant');\r\n    let max_participant: string = \"\";\r\n    if (id_h !== null) {\r\n        max_participant = id_h;\r\n    }\r\n\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getStudentByParent(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getStudentByParent(dispatch, id))\r\n            }\r\n        }\r\n\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Cuộc thi\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n    const history = useHistory();\r\n    function routeHome() {\r\n        let path = `/contests`;\r\n        history.push(path);\r\n    }\r\n\r\n    function handleRegister() {\r\n        const id = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n        valueTeacher.map((ele, idx) => {\r\n            return dispatch(postUserRegisterContest({\r\n                student_id: ele.value,\r\n                contest_id: contest_id\r\n            }))\r\n        })\r\n\r\n        toast.update(id, { render: \"Đăng kí cuộc thi cho bé thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n        setTimeout(function () {\r\n            routeHome();\r\n        }, 2000);\r\n    }\r\n\r\n    const [valueTeacher, setValueTeacher] = useState<any[]>([])\r\n\r\n    console.log(valueTeacher)\r\n\r\n    function changeValueTeacher(value: any) {\r\n        setValueTeacher(value)\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                <ToastContainer />\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"row no-gutters align-items-center\">\r\n                            <div className=\"text-xs font-weight-bold text-green text-uppercase \">\r\n                                <p className=\"fullname ml-4 mt-4\">{contest_name}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-6 col-md-6\">\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs \">\r\n                                        <p className=\"birthday ml-4\">Độ tuổi đăng kí: {art_age_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday ml-4\">Thể loại: {art_type_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday ml-4\">Thời gian đăng kí: {registration_time}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-xl-6 col-md-6\">\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs \">\r\n                                        <p className=\"birthday\">Thời gian bắt đầu: {start_time}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday\">Thời gian kết thúc: {end_time}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday\">Số người tham gia tối đa: {max_participant}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group col-md-6 ml-4\">\r\n                                <label>Bé</label>\r\n                                <ReactSelect setValue={listTeachers} value={[]} changeValue={changeValueTeacher} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row text-center justify-content-center\" id=\"btn-register-course\">\r\n                            <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course\" onClick={() => handleRegister()}>\r\n                                <i className=\"fas fa fa-plus\"></i>\r\n                                Đăng kí ngay\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row\" id=\"btn-register-course\">\r\n                    <div className=\"col-lg-12 col-md-12 col-xs-12 text-center justify-content-center\">\r\n                        <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course4\" onClick={() => handleClick()}>\r\n                            <GrLinkDown id=\"btn-payment\" color=\"#ffffff\" />\r\n                            Xem miêu tả\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    function () {\r\n                        if (checked === true) {\r\n                            return (\r\n                                <div className=\"col-xl-12 col-lg-12\">\r\n                                    <div className=\"card-header py-3\">\r\n                                        <h6 className=\"m-0 font-weight-bold text-green\">Chi tiết</h6>\r\n                                    </div>\r\n                                    <div className=\"card shadow mb-4\">\r\n                                        <div className=\"card-body\" dangerouslySetInnerHTML={{ __html: description_contest }}>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }()\r\n                }\r\n\r\n            </Fragment >\r\n    );\r\n};\r\n\r\nexport default ConestDetailStudent;\r\n","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postUserRegisterContest(data: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-join-contest`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postUserRegisterContest(data))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/contest.action\";\r\nimport { removeWaiting } from \"../../../store/actions/user_register_join_semester.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function deleteUserRegisterJoinSemester1(id: number, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-join-semester/${id}`, {\r\n                    method: \"DELETE\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(deleteUserRegisterJoinSemester1(id, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Đăng kí không thành công vì trùng lịch!\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                removeWaiting(id)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Đăng kí không thành công vì trùng lịch!\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport \"./SemesterClassDetail.css\"\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { GrLinkNext } from \"react-icons/gr\";\r\nimport { IRootPageStateType, IStateType, IUserRegisterJoinSemesterState } from \"../../store/models/root.interface\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { postMomo } from \"../../common/service/Payment/PostPayment\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { getUserRegisterJoinSemesterByPayer } from \"../../common/service/UserRegisterJoinSemester/GetUserRegisterJoinSemesterByPayer\";\r\nimport { deleteUserRegisterJoinSemester1 } from \"../../common/service/UserRegisterJoinSemester/DeleteUserRegisterJoinSemester\";\r\nimport { getUserRegisterJoinSemesterByStudent } from \"../../common/service/UserRegisterJoinSemester/GetUserRegisterJoinSemesterStudent\";\r\n\r\n\r\nconst CartForm: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const user_register_join_semesters: IUserRegisterJoinSemesterState = useSelector((state: IStateType) => state.user_register_join_semesters);\r\n    var id_x = localStorage.getItem('id');\r\n    let id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    var role_privilege = localStorage.getItem('role_privilege')\r\n    var rolePrivilege: string[] = []\r\n    var roleUser: string = \"\"\r\n    if (role_privilege !== null) {\r\n        rolePrivilege = role_privilege.split(',')\r\n        roleUser = rolePrivilege[0]\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    if (roleUser === \"PARENT_USER\") {\r\n                        trackPromise(getUserRegisterJoinSemesterByPayer(dispatch, id))\r\n                    }else {\r\n                        trackPromise(getUserRegisterJoinSemesterByStudent(dispatch, id))\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (roleUser === \"PARENT_USER\") {\r\n                    trackPromise(getUserRegisterJoinSemesterByPayer(dispatch, id))\r\n                }else {\r\n                    trackPromise(getUserRegisterJoinSemesterByStudent(dispatch, id))\r\n                }\r\n            }\r\n        }\r\n        \r\n    }, [dispatch, id, access_token, refresh_token, roleUser]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Giỏ hàng\", \"\"));\r\n    }, [path.area, dispatch])\r\n    \r\n    function handlePayment() {\r\n        let ids: string[] = []; \r\n        user_register_join_semesters.waiting.map((ele, idx) => {\r\n            return ids.push(ele.id)\r\n        })\r\n        console.log(\"ids\", ids)\r\n        postMomo(user_register_join_semesters.waiting.reduce((prev, next) => prev + ((next.price * 1) || 0), 0), ids);\r\n    }\r\n\r\n    if (roleUser === \"PARENT_USER\") {\r\n        return (\r\n            promiseInProgress ?\r\n          <div className=\"row\" id=\"search-box\">\r\n            <div className=\"col-xl-12 col-lg-12\">\r\n              <div className=\"input-group\" id=\"search-content\">\r\n                <div className=\"form-outline\">\r\n                  <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div> : <Fragment>\r\n                <ToastContainer />\r\n                <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Tên</th>\r\n                            <th>Ảnh</th>\r\n                            <th>Bé</th>\r\n                            <th>Gía</th>\r\n                            <th>Số lượng</th>\r\n                            <th>Tiền</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        user_register_join_semesters.waiting.map((item,key)=>{\r\n                            return(\r\n                                <tr key={key}>   \r\n                                <td><i className=\"badge badge-danger\" onClick={()=>{\r\n                                    const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                                        position: toast.POSITION.TOP_CENTER\r\n                                      });\r\n                                    dispatch(deleteUserRegisterJoinSemester1(item.id, idx))\r\n                                }}>X</i></td>\r\n                                <td>{item.course_name}</td>\r\n                                <td><img src={item.link_url} style={{width:'100px',height:'80px'}} alt=\"\" /></td>\r\n                                <td>{item.student_name}</td>\r\n                                <td>{item.price} VND</td>\r\n                                <td>\r\n                                        <span className=\"btn btn-info\">1</span>\r\n                                </td>\r\n                                <td>{item.price * 1} VND</td>\r\n                            </tr>\r\n                            )\r\n                        })\r\n                             \r\n                    }\r\n                    <tr>\r\n                        <td colSpan={5}>Tổng tiền</td>\r\n                        <td>{user_register_join_semesters.waiting.reduce((prev, next) => prev + ((next.price * 1) || 0), 0)} $</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan={5}></td>\r\n                        <td>\r\n                            <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course3\" onClick={() => {handlePayment()}}>\r\n                                <GrLinkNext id=\"btn-payment\" color=\"#ffffff\"/>\r\n                                Thanh toán\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                   \r\n                </table>\r\n                </div>\r\n            </div>\r\n    \r\n    \r\n            </Fragment >\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            promiseInProgress ?\r\n          <div className=\"row\" id=\"search-box\">\r\n            <div className=\"col-xl-12 col-lg-12\">\r\n              <div className=\"input-group\" id=\"search-content\">\r\n                <div className=\"form-outline\">\r\n                  <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div> : <Fragment>\r\n                <ToastContainer />\r\n                <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Tên</th>\r\n                            <th>Ảnh</th>\r\n                            <th>Bé</th>\r\n                            <th>Gía</th>\r\n                            <th>Số lượng</th>\r\n                            <th>Tiền</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        user_register_join_semesters.waiting.map((item,key)=>{\r\n                            return(\r\n                                <tr key={key}>   \r\n                                <td><i className=\"badge badge-danger\" onClick={()=>{\r\n                                    const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n                                        position: toast.POSITION.TOP_CENTER\r\n                                      });\r\n                                    dispatch(deleteUserRegisterJoinSemester1(item.id, idx))\r\n                                }}>X</i></td>\r\n                                <td>{item.course_name}</td>\r\n                                <td><img src={item.link_url} style={{width:'100px',height:'80px'}} alt=\"\" /></td>\r\n                                <td>{item.student_name}</td>\r\n                                <td>{item.price} VND</td>\r\n                                <td>\r\n                                        <span className=\"btn btn-info\">1</span>\r\n                                </td>\r\n                                <td>{item.price * 1} VND</td>\r\n                            </tr>\r\n                            )\r\n                        })\r\n                             \r\n                    }\r\n                    <tr>\r\n                        <td colSpan={5}>Tổng tiền</td>\r\n                        <td>{user_register_join_semesters.waiting.reduce((prev, next) => prev + ((next.price * 1) || 0), 0)} $</td>\r\n                    </tr>\r\n                    </tbody>\r\n                   \r\n                </table>\r\n                </div>\r\n            </div>\r\n    \r\n    \r\n            </Fragment >\r\n        );\r\n    }\r\n};\r\n\r\nexport default CartForm;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IContestSubmissionState, IRootPageStateType, IStateType, IUserGradeContestSubmissionState, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ManageStudent.css\"\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { getUserGradeContestSubmissionByContestId } from \"../../common/service/UserGradeContestSubmission/GetUserGradeContestSubmissionByContest\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { IUserGradeContestSubmission } from \"../../store/models/user_grade_contest_submission.interface\";\r\nimport { getStudentByParent } from \"../../common/service/Student/GetStudentByParent\";\r\nimport { getContestSubmissionByContest } from \"../../common/service/ContestSubmission/GetContestSubmissionByContest\";\r\nimport { IContestSubmission } from \"../../store/models/contest_submission.interface\";\r\n\r\nconst DetailContestStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const user_grade_contest_submissions: IUserGradeContestSubmissionState = useSelector((state: IStateType) => state.user_grade_contest_submissions);\r\n    const contest_submissions: IContestSubmissionState = useSelector((state: IStateType) => state.contest_submissions);\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    console.log(users.students)\r\n    console.log(contest_submissions.contest_gradeds)\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n\r\n    var id_k = localStorage.getItem('child_id');\r\n    let child_id: number = 0;\r\n    if (id_k !== null) {\r\n        child_id = parseInt(id_k);\r\n    }\r\n\r\n    let childs: IUserGradeContestSubmission = {\r\n        student_id: 0,\r\n        student_name: \"\",\r\n        teacher_id: 0,\r\n        teacher_name: \"\",\r\n        contest_id: 0,\r\n        contest_name: '',\r\n        contest_submission_id: 0,\r\n        feedback: \"\",\r\n        score: 0,\r\n        time: \"\"\r\n    };\r\n    users.students.map((ele, idx) => {\r\n        return user_grade_contest_submissions.userGradeContestSubmissions.map((element, idx) => {\r\n            if (element.student_id === child_id) {\r\n                childs = element\r\n            }\r\n            return element\r\n        })\r\n    })\r\n\r\n    let submistions: IContestSubmission = {\r\n        id: 0,\r\n        student_id: 0,\r\n        student_name: '',\r\n        contest_id: 0,\r\n        contest_name: \"\",\r\n        image_url: '',\r\n        create_time: \"\",\r\n        update_time: \"\"\r\n    };\r\n    contest_submissions.contest_gradeds.map((element, idx) => {\r\n        if (element.student_id === child_id) {\r\n            submistions = element;\r\n        }\r\n        return element\r\n    })\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    var id_y = localStorage.getItem('contest_id');\r\n    let contest_id = 0;\r\n\r\n    if (id_y !== null) {\r\n        contest_id = parseInt(id_y);\r\n    }\r\n\r\n    var id_z = localStorage.getItem('contest_name');\r\n    let contest_name = \"\";\r\n\r\n    if (id_z !== null) {\r\n        contest_name = id_z;\r\n    }\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    var id_k = localStorage.getItem('score_contest');\r\n    var score_contest: number = 0;\r\n    if (id_k !== null) {\r\n        score_contest = parseFloat(id_k);\r\n    }\r\n\r\n    var id_e = localStorage.getItem('feedback_contest');\r\n    var feedback_contest: string = \"\";\r\n    if (id_e !== null) {\r\n        feedback_contest = id_e;\r\n    }\r\n\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getStudentByParent(dispatch, id))\r\n                    trackPromise(getContestSubmissionByContest(dispatch, contest_id))\r\n                    trackPromise(getUserGradeContestSubmissionByContestId(dispatch, contest_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getStudentByParent(dispatch, id))\r\n                trackPromise(getContestSubmissionByContest(dispatch, contest_id))\r\n                trackPromise(getUserGradeContestSubmissionByContestId(dispatch, contest_id))\r\n            }\r\n        }\r\n        dispatch(updateCurrentPath(\"Cuoc thi\", \"Chi tiết\"));\r\n    }, [dispatch, access_token, refresh_token, contest_id, id]);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Cuộc thi\", \"Chi tiết\"));\r\n    }, [path.area, dispatch]);\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-8 col-lg-8\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Bài làm của bé: {childs.student_name}</h6>\r\n                        </div>\r\n                        <img className=\"img-exercise\" src={submistions.image_url} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"col-xl-4 col-lg-4\">\r\n                        <div className=\"card shadow mb-4\">\r\n                            <div className=\"card-header py-3\">\r\n                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Điểm của bé</h6>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <CircularProgressbar value={score_contest * 10} text={`${score_contest}`} />;\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"card shadow mb-4\">\r\n                            <div className=\"card-header py-3\">\r\n                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Nhận xét</h6>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                {feedback_contest}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default DetailContestStudent;\r\n","import { IAttendance, AttendanceModificationStatus } from \"../models/attendance.interface\";\r\nexport const ADD_ATTENDANCE: string = \"ADD_ATTENDANCE\";\r\nexport const EDIT_ATTENDANCE: string = \"EDIT_ATTENDANCE\";\r\nexport const REMOVE_ATTENDANCE: string = \"REMOVE_ATTENDANCE\";\r\nexport const CHANGE_ATTENDANCE_AMOUNT: string = \"CHANGE_ATTENDANCE_AMOUNT\";\r\nexport const CHANGE_ATTENDANCE_PENDING_EDIT: string = \"CHANGE_ATTENDANCE_PENDING_EDIT\";\r\nexport const CLEAR_ATTENDANCE_PENDING_EDIT: string = \"CLEAR_ATTENDANCE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_ATTENDANCE_ALL: string = \"REMOVE_ATTENDANCE_ALL\";\r\nexport const INITIAL_ATTENDANCE: string = \"INITIAL_ATTENDANCE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(attendance: IAttendance) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        attendance\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialAttendance(attendance: IAttendance): IInitialAttendanceActionType {\r\n    return { type: INITIAL_ATTENDANCE, attendance: attendance };\r\n}\r\n\r\nexport function removeAttendanceAll(): IRemoveAttendanceAllActionType {\r\n    return { type: REMOVE_ATTENDANCE_ALL };\r\n}\r\n\r\nexport function addAttendance(attendance: IAttendance): IAddAttendanceActionType {\r\n    return { type: ADD_ATTENDANCE, attendance: attendance };\r\n}\r\n\r\nexport function editAttendance(attendance: IAttendance): IEditAttendanceActionType {\r\n    return { type: EDIT_ATTENDANCE, attendance: attendance };\r\n}\r\n\r\nexport function removeAttendance(id: any): IRemoveAttendanceActionType {\r\n    return { type: REMOVE_ATTENDANCE, id: id };\r\n}\r\n\r\nexport function changeSelectedAttendance(attendance: IAttendance): IChangeSelectedAttendanceActionType {\r\n    return { type: CHANGE_ATTENDANCE_PENDING_EDIT, attendance: attendance };\r\n}\r\n\r\nexport function clearSelectedAttendance(): IClearSelectedAttendanceActionType {\r\n    return { type: CLEAR_ATTENDANCE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: AttendanceModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddAttendanceActionType { type: string, attendance: IAttendance };\r\ninterface IEditAttendanceActionType { type: string, attendance: IAttendance };\r\ninterface IRemoveAttendanceActionType { type: string, id: any };\r\ninterface IChangeSelectedAttendanceActionType { type: string, attendance: IAttendance };\r\ninterface IClearSelectedAttendanceActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  AttendanceModificationStatus};\r\ninterface IRemoveAttendanceAllActionType { type: string }\r\ninterface IInitialAttendanceActionType {type: string, attendance: IAttendance}","import { fetchDataRequest } from \"../../../store/actions/art_type.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { getAttendance } from \"./GetAttendance\";\r\n\r\nexport function putAttendance(data: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-attendance/${id}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putAttendance(data, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (xx => {\r\n                getAttendance(dispatch)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataSuccess, fetchDataError, removeAttendanceAll, initialAttendance, addAttendance } from \"../../../store/actions/attendance.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface Attendance {\r\n    id: any;\r\n    student_id: number;\r\n    section_id: number;\r\n    status: string;\r\n    section_number: number;\r\n    email: string;\r\n    course_name: string;\r\n    course_id: number;\r\n    student_name: string;\r\n    section_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getAttendance(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-attendance`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getAttendance(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeAttendanceAll())\r\n                console.log(data.body.UserAttendance)\r\n                data.body.UserAttendance.map((ele: any, index: any) => {\r\n                    var attendance: Attendance = {\r\n                        id: ele.id,\r\n                        email: ele.email,\r\n                        student_id: ele.student_id,\r\n                        section_number: ele.section_number,\r\n                        course_id: ele.course_id,\r\n                        course_name: ele.course_name,\r\n                        student_name: ele.student_name,\r\n                        section_id: ele.section_id,\r\n                        section_name: ele.section_name,\r\n                        status: ele.status,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialAttendance(attendance));\r\n                    }\r\n                    else{\r\n                        return dispatch(addAttendance(attendance))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { ChangeEvent, Dispatch, Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { putAttendance } from \"../../common/service/Attendance/PutAttendance\";\r\nimport { ILesson } from \"../../store/models/lesson.interface\";\r\nimport { IAttendanceState, IStateType } from \"../../store/models/root.interface\";\r\n\r\nexport type lessonListProps = {\r\n    onSelect?: (lesson: ILesson) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\ntype Options = {\r\n    id: any;\r\n    student_id: number;\r\n    section_id: number;\r\n    status: boolean;\r\n}\r\n\r\n/* let data = [\r\n    {\r\n        id: 1,\r\n        student_name: 'A',\r\n        student_id: 1,\r\n        section_id: 1,\r\n        section_number: 1,\r\n        course_name: '',\r\n        email: ''\r\n    },\r\n    {\r\n        id: 2,\r\n        student_name: 'B',\r\n        student_id: 1,\r\n        section_id: 1,\r\n        section_number: 1,\r\n        course_name: '',\r\n        email: ''\r\n    },\r\n    {\r\n        id: 3,\r\n        student_id: 1,\r\n        section_id: 1,\r\n        student_name: 'C',\r\n        section_number: 1,\r\n        course_name: '',\r\n        email: ''\r\n    }\r\n] */\r\n\r\nfunction AttendanceList(props: lessonListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const attendances: IAttendanceState = useSelector((state: IStateType) => state.attendances);\r\n\r\n    let lst: Options[] = [];\r\n\r\n    if (attendances.attendances.length > 0) {\r\n        attendances.attendances.map((ele, idx) => {\r\n            return lst.push({\r\n                id: ele.id,\r\n                student_id: ele.student_id,\r\n                section_id: ele.section_id,\r\n                status: false\r\n            })\r\n        })\r\n    }\r\n\r\n    function onValueChanged(event: ChangeEvent<HTMLInputElement>, id: any): void {\r\n        lst.map((ele, idx) => {\r\n            if (ele.id === id) {\r\n                ele.status = !ele.status;\r\n            }\r\n            return ele\r\n        })\r\n\r\n        console.log(lst)\r\n    }\r\n\r\n    console.log(lst)\r\n    \r\n    const lessonElements: (JSX.Element | null)[] = attendances.attendances.map((exercise, index) => {\r\n        //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n        if (!exercise) { return null; }\r\n        return (<tr className={`table-row `}\r\n            key={`lesson_${index}`} >\r\n            <th scope=\"row\" className=\"data-table\">{index + 1}</th>\r\n            <td className=\"data-table\">{exercise.student_name}</td>\r\n            <td className=\"data-table\">{exercise.email}</td>\r\n            <td className=\"data-table\">{exercise.course_name}</td>\r\n            <td className=\"data-table\">{exercise.section_number}</td>\r\n            <td>\r\n                <input type=\"checkbox\" onChange={(e) => {onValueChanged(e, exercise.id)}}/>\r\n            </td>\r\n        </tr>);\r\n    });\r\n\r\n    function handlePutAttendance() {\r\n        lst.map((ele, idx) => {\r\n            return dispatch(putAttendance({\r\n                student_id: ele.student_id,\r\n                section_id: ele.section_id,\r\n                status: ele.status\r\n            }, ele.id))\r\n        })\r\n\r\n        toast.success(\"Điểm danh thành công!\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 2000\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"table-responsive portlet\">\r\n                <table className=\"table\">\r\n                    <thead id=\"table-thread-exercise-section\">\r\n                        <tr>\r\n                            <th scope=\"col\" className=\"name-row-table\">#</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Tên học sinh</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Email</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Khóa học</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Buổi</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Điểm danh</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {lessonElements}\r\n                        <tr className={`table-row `}>\r\n                            <button\r\n                                className=\"btn btn-success ml-2\"\r\n                                id=\"btn-into-room\"\r\n                                onClick={() => {handlePutAttendance()}}\r\n                            >\r\n                                Gửi\r\n                            </button>\r\n                            </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default AttendanceList;\r\n","import { fetchDataSuccess, fetchDataError, removeAttendanceAll, initialAttendance, addAttendance } from \"../../../store/actions/attendance.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface Attendance {\r\n    id: any;\r\n    student_id: number;\r\n    section_id: number;\r\n    status: string;\r\n    email: string;\r\n    section_number: number;\r\n    course_name: string;\r\n    course_id: number;\r\n    student_name: string;\r\n    section_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getAttendanceBySection(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-attendance/section/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getAttendanceBySection(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeAttendanceAll())\r\n                console.log(data.body.UserAttendance)\r\n                data.body.UserAttendance.map((ele: any, index: any) => {\r\n                    var attendance: Attendance = {\r\n                        id: ele.id,\r\n                        student_id: ele.student_id,\r\n                        email: ele.email,\r\n                        section_number: ele.section_number,\r\n                        course_id: ele.course_id,\r\n                        course_name: ele.course_name,\r\n                        student_name: ele.student_name,\r\n                        section_id: ele.section_id,\r\n                        section_name: ele.section_name,\r\n                        status: ele.status,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (index === 0){\r\n                        return dispatch(initialAttendance(attendance));\r\n                    }\r\n                    else{\r\n                        return dispatch(addAttendance(attendance))\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport \"./Attendance.css\"\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport AttendanceList from \"./AttendanceList\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { getAttendanceBySection } from \"../../common/service/Attendance/GetAttendanceBySection\";\r\n\r\nconst Attendance: React.FC = () => {\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n\r\n  var id_x = localStorage.getItem('section_id');\r\n  var section_id: number = 0;\r\n  if (id_x !== null) {\r\n    section_id = parseInt(id_x);\r\n  }\r\n\r\n  let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getAttendanceBySection(dispatch, section_id))\r\n                }\r\n            }\r\n            else {\r\n              trackPromise(getAttendanceBySection(dispatch, section_id))\r\n            }\r\n        }\r\n        dispatch(updateCurrentPath(\"Điểm danh\", \"\"));\r\n    }, [dispatch, access_token, refresh_token, section_id]);\r\n\r\n  return (\r\n    promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n        {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n        {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n        <ToastContainer />\r\n        <div className=\"row\">\r\n          <TopCard title=\"HỌC SINH\" text={``} icon=\"book\" class=\"primary\" />\r\n          <TopCard title=\"HỌC SINH THAM GIA\" text={``} icon=\"book\" class=\"primary\" />\r\n          {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n        </div>\r\n\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n              <div className=\"card-header py-3\">\r\n                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách học sinh</h6>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <AttendanceList />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n      </Fragment>\r\n  );\r\n};\r\n\r\nexport default Attendance;\r\n","export interface IClassesStudent {\r\n    id: any;\r\n    name: string;\r\n    link_url: string;\r\n    student_id: number;\r\n    student_name: string;\r\n    teacher_name: string;\r\n    teacher_id: number;\r\n    course_id: number;\r\n    schedule_section_next: string;\r\n    semester_class_id: number;\r\n    semester_class_name: string;\r\n    user_register_teach_semester: number;\r\n    security_code: string;\r\n    total_section_studied: number;\r\n    total_student: number;\r\n    total_section: number;\r\n    course_name: string;\r\n    semester_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_type_id: number;\r\n    art_level_id: number;\r\n    art_age_id: number;\r\n    art_age_name: string;\r\n    user_register_join_semester_id: number;\r\n}\r\n\r\nexport enum ClassesStudentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IClassesStudent } from \"../../store/models/classes_student.interface\";\r\nimport { IClassesStudentState, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./ClassStudentList.css\"\r\n\r\nexport type classTeacherListProps = {\r\n  onSelect?: (classTeacher: IClassesStudent) => void;\r\n  value?: string;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction ClassDoneList1(props: classTeacherListProps): JSX.Element {\r\n    const classes_students: IClassesStudentState = useSelector((state: IStateType) => state.classes_students);\r\n\r\n    const [totalPage, setTotalPage] = useState(0)\r\n    const [element, setElement] = useState<IClassesStudent[]>([])\r\n    useEffect(() => {\r\n        let x = (classes_students.classes_done.length - classes_students.classes_done.length % 10) /10;\r\n        if (x === 0) {\r\n            setElement(classes_students.classes_done)\r\n        }\r\n        else {\r\n            setElement(classes_students.classes_done.slice(0,10))\r\n        }\r\n        \r\n         setTotalPage((x+1))\r\n    }, [classes_students.classes_done])\r\n\r\n    function handlePagination(count: number) {\r\n        console.log(count)\r\n        if (count === totalPage) {\r\n            setElement(classes_students.classes_done.slice(count*10))\r\n        }\r\n        else {\r\n            setElement(classes_students.classes_done.slice(count*10,count*10 + 10))\r\n        }\r\n    }\r\n\r\n    const history = useHistory();\r\n    const routeChange = (classes_student: IClassesStudent) => {\r\n      let path = '/classes/review'; \r\n      localStorage.removeItem('teacher_id');\r\n      localStorage.setItem('teacher_id', classes_student.teacher_id.toString())\r\n      localStorage.removeItem('student_id');\r\n      localStorage.setItem('student_id', classes_student.student_id.toString())\r\n      localStorage.removeItem('class_id');\r\n      localStorage.setItem('class_id', classes_student.id.toString());\r\n      localStorage.removeItem('course_name');\r\n      localStorage.setItem('course_name', classes_student.course_name)\r\n      localStorage.removeItem('user_register_join_semester_id')\r\n      localStorage.setItem('user_register_join_semester_id', classes_student.user_register_join_semester_id.toString())\r\n      history.push({\r\n          pathname: path,\r\n      });\r\n    }\r\n\r\n  return (\r\n    <Fragment>\r\n        {\r\n            classes_students.classes_done.map((contest, index) => {\r\n                return (\r\n                    <>\r\n                        <div className=\"courses-container\" key={`lesson_${contest.id}`} onClick={() => { routeChange(contest) }}>\r\n                            <div className=\"course\">\r\n                                <div className=\"course-preview\">\r\n                                    <h6>Khóa học</h6>\r\n                                    <h2>{contest.course_name}</h2>\r\n                                    <a href=\"/#\">Xem toàn bộ buổi <i className=\"fas fa-chevron-right\"></i></a>\r\n                                </div>\r\n                                <div className=\"course-info\">\r\n                                    <div className=\"progress-container\">\r\n                                        <div className=\"progress\"></div>\r\n                                        <span className=\"progress-text\">\r\n                                            {contest.total_section}/{contest.total_section} Buổi\r\n                                        </span>\r\n                                    </div>\r\n                                    <h2>{contest.student_name}</h2>\r\n                                    <h6>Giáo viên: {contest.teacher_name}</h6>\r\n                                    <button className=\"btn-x\" onClick={() => { routeChange(contest) }}>Chi tiết</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-end text-right mt-2\">\r\n                    <nav>\r\n                        <ul className=\"pagination\">\r\n                        <li className=\"page-item\">\r\n                            <a className=\"page-link\" aria-label=\"Previous\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                <span aria-hidden=\"true\">&laquo;</span>\r\n                            </a>\r\n                        </li>\r\n                            {\r\n                                Array.from(Array((totalPage)).keys()).map((ele, idx) => {\r\n                                    return (\r\n                                        <li className=\"page-item\"><a className=\"page-link\" href=\"/\" onClick={(e) => {\r\n                                            e.preventDefault()\r\n                                            handlePagination(ele)}}>{ele+1}</a></li>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Next\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&raquo;</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    </Fragment>\r\n);\r\n}\r\n\r\nexport default ClassDoneList1;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IClassesStudent } from \"../../store/models/classes_student.interface\";\r\nimport { IClassesStudentState, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./ClassStudentList.css\"\r\n\r\nexport type classTeacherListProps = {\r\n  onSelect?: (classTeacher: IClassesStudent) => void;\r\n  value?: string;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction ClassDoingList1(props: classTeacherListProps): JSX.Element {\r\n  const classes_students: IClassesStudentState = useSelector((state: IStateType) => state.classes_students);\r\n\r\n    const [totalPage, setTotalPage] = useState(0)\r\n    const [element, setElement] = useState<IClassesStudent[]>([])\r\n    useEffect(() => {\r\n        let x = (classes_students.classes_doing.length - classes_students.classes_doing.length % 10) /10;\r\n        if (x === 0) {\r\n            setElement(classes_students.classes_doing)\r\n        }\r\n        else {\r\n            setElement(classes_students.classes_doing.slice(0,10))\r\n        }\r\n        \r\n         setTotalPage((x+1))\r\n    }, [classes_students.classes_doing])\r\n\r\n    function handlePagination(count: number) {\r\n        console.log(count)\r\n        if (count === totalPage) {\r\n            setElement(classes_students.classes_doing.slice(count*10))\r\n        }\r\n        else {\r\n            setElement(classes_students.classes_doing.slice(count*10,count*10 + 10))\r\n        }\r\n    }\r\n\r\n  const history = useHistory();\r\n  const routeChange = (classes_student: IClassesStudent) => {\r\n    let path = '/classes/detail-student'; \r\n    localStorage.removeItem('teacher_id');\r\n    localStorage.setItem('teacher_id', classes_student.teacher_id.toString())\r\n    localStorage.removeItem('student_id');\r\n    localStorage.setItem('student_id', classes_student.student_id.toString())\r\n    localStorage.removeItem('class_id');\r\n    localStorage.setItem('class_id', classes_student.id.toString());\r\n    history.push({\r\n        pathname: path,\r\n    });\r\n  }\r\n\r\n  const routeChange1 = (classes_student: IClassesStudent) => {\r\n    let path = '/classes/schedule'; \r\n    localStorage.removeItem('teacher_id');\r\n    localStorage.setItem('teacher_id', classes_student.teacher_id.toString())\r\n    localStorage.removeItem('student_id');\r\n    localStorage.setItem('student_id', classes_student.student_id.toString())\r\n    localStorage.removeItem('class_id');\r\n    localStorage.setItem('class_id', classes_student.id.toString());\r\n    localStorage.removeItem('course_name');\r\n    localStorage.setItem('course_name', classes_student.course_name.toString());\r\n    history.push({\r\n        pathname: path,\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n        {\r\n            classes_students.classes_doing.map((contest, index) => {\r\n                if (contest === null || contest === undefined){\r\n                    return null\r\n                }\r\n                return (\r\n                    <>\r\n                        <div className=\"courses-container\" key={`lesson_${contest.id}`} onClick={() => { routeChange(contest) }}>\r\n                            <div className=\"course\">\r\n                                <div className=\"course-preview\">\r\n                                    <h6>Khóa học</h6>\r\n                                    <h2>{contest.course_name}</h2>\r\n                                    <a href=\"/#\">Xem toàn bộ buổi <i className=\"fas fa-chevron-right\"></i></a>\r\n                                </div>\r\n                                <div className=\"course-info\">\r\n                                    <div className=\"progress-container\">\r\n                                        <div className=\"progress\"></div>\r\n                                        <span className=\"progress-text\">\r\n                                            {contest.total_section_studied}/{contest.total_section} Buổi\r\n                                        </span>\r\n                                    </div>\r\n                                    <h2>{contest.student_name}</h2>\r\n                                    <h6>Giáo viên: {contest.teacher_name}</h6>\r\n                                    <p className=\"pt-2\">Lịch học buổi kế: {contest.schedule_section_next.replaceAll(\"T\", \" \")}</p>\r\n                                    <button className=\"btn-x\" onClick={() => { routeChange(contest) }}>Chi tiết</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-end text-right mt-2\">\r\n                    <nav>\r\n                        <ul className=\"pagination\">\r\n                        <li className=\"page-item\">\r\n                            <a className=\"page-link\" aria-label=\"Previous\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                <span aria-hidden=\"true\">&laquo;</span>\r\n                            </a>\r\n                        </li>\r\n                            {\r\n                                Array.from(Array((totalPage)).keys()).map((ele, idx) => {\r\n                                    return (\r\n                                        <li className=\"page-item\"><a className=\"page-link\" href=\"/\" onClick={(e) => {\r\n                                            e.preventDefault()\r\n                                            handlePagination(ele)}}>{ele+1}</a></li>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Next\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&raquo;</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    </Fragment>\r\n);\r\n}\r\n\r\nexport default ClassDoingList1;\r\n","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { changeSelectedDoinglClass, setModificationState } from \"../../store/actions/classes_student.action\";\r\nimport { IClassesStudentState, IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport { IClassesStudent, ClassesStudentModificationStatus } from \"../../store/models/classes_student.interface\";\r\nimport \"./ClassStudent.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { getClassesStudent } from \"../../common/service/ClassesStudent/GetClassesStudentByStudent\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport ClassDoingList from \"./ClassDoingList\";\r\nimport ClassDoneList from \"./ClassDoneList\";\r\nimport ClassDoneList1 from \"./ClassDoneList1\";\r\nimport ClassDoingList1 from \"./ClassDoingList1\";\r\n\r\nconst ClassStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const classes_students: IClassesStudentState = useSelector((state: IStateType) => state.classes_students);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberClassDoingCount: number = classes_students.classes_doing.length;\r\n    const numberClassDoneCount: number = classes_students.classes_done.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getClassesStudent(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getClassesStudent(dispatch,id))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khóa học\", \"\"));\r\n    }, [path.area, dispatch]) \r\n\r\n    function onClassesStudentSelect(classes_student: IClassesStudent): void {\r\n        dispatch(changeSelectedDoinglClass(classes_student));\r\n        dispatch(setModificationState(ClassesStudentModificationStatus.None));\r\n    }\r\n\r\n    const [checked, setChecked] = useState(true);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\">\r\n                <TopCard title=\"KHÓA HỌC ĐANG HỌC\" text={`${numberClassDoingCount}`} icon=\"book\" class=\"primary\" />\r\n                <TopCard title=\"KHÓA HỌC ĐÃ HỌC\" text={`${numberClassDoneCount}`} icon=\"book\" class=\"primary\" />\r\n                {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(ClassesStudentModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n            </div>\r\n\r\n<div className=\"row\" id=\"search-box\">\r\n<div className=\"col-xl-12 col-lg-12\">\r\n    <div className=\"input-group\" id=\"search-content\">\r\n        <div className=\"form-outline\">\r\n            <input type=\"text\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                setSearchTerm(event.target.value)\r\n                console.log(searchTerm)\r\n            }} />\r\n        </div>\r\n        <button type=\"button\" className=\"btn btn-primary\">\r\n            <i className=\"fas fa-search\"></i>\r\n        </button>\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                        if (checked === false) {\r\n                            setChecked(true)\r\n                        }\r\n                    }} style={{\r\n                        color: checked ? \"#F24E1E\" : \"#2F4F4F\"\r\n                    }}>Đang học</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#F24E1E\" : \"#ffffff\"\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6 mb-4 col-xs-6 text-center\">\r\n                    <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                        if (checked === true) {\r\n                            setChecked(false)\r\n                        }\r\n                    }}\r\n                        style={{\r\n                            color: checked ? \"#2F4F4F\" : \"#F24E1E\"\r\n                        }}>Đã học</h6>\r\n                    <div style={{\r\n                        height: \"5px\",\r\n                        textAlign: \"center\",\r\n                        margin: \"auto\",\r\n                        width: \"30%\",\r\n                        backgroundColor: checked ? \"#ffffff\" : \"#F24E1E\"\r\n                    }}></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {\r\n                function () {\r\n                    if (checked === true) {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                            <div className=\"card-header py-3 card-header-new\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách khóa học</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ClassDoingList1\r\n                                                    onSelect={onClassesStudentSelect} value={searchTerm}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <Fragment>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-lg-12\">\r\n                                        <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                                            <div className=\"card-header py-3\">\r\n                                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách khóa học</h6>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <ClassDoneList1\r\n                                                    onSelect={onClassesStudentSelect} value={searchTerm}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                }()\r\n            }\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ClassStudent;\r\n","import { ICourseNew, CourseNewModificationStatus } from \"../models/course_new.interface\";\r\nexport const ADD_COURSE_NEW: string = \"ADD_COURSE_NEW\";\r\nexport const EDIT_COURSE_NEW: string = \"EDIT_COURSE_NEW\";\r\nexport const REMOVE_COURSE_NEW: string = \"REMOVE_COURSE_NEW\";\r\nexport const CHANGE_COURSE_NEW_AMOUNT: string = \"CHANGE_COURSE_NEW_AMOUNT\";\r\nexport const CHANGE_COURSE_NEW_PENDING_EDIT: string = \"CHANGE_COURSE_NEW_PENDING_EDIT\";\r\nexport const CLEAR_COURSE_NEW_PENDING_EDIT: string = \"CLEAR_COURSE_NEW_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_COURSE_NEW_ALL: string = \"REMOVE_COURSE_NEW_ALL\";\r\nexport const INITIAL_COURSE_NEW: string = \"INITIAL_COURSE_NEW\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course_new: ICourseNew) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course_new\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCourseNew(course_new: ICourseNew): IInitialCourseNewActionType {\r\n    return { type: INITIAL_COURSE_NEW, course_new: course_new };\r\n}\r\n\r\nexport function removeCourseNewAll(): IRemoveCourseNewAllActionType {\r\n    return { type: REMOVE_COURSE_NEW_ALL };\r\n}\r\n\r\nexport function addCourseNew(course_new: ICourseNew): IAddCourseNewActionType {\r\n    return { type: ADD_COURSE_NEW, course_new: course_new };\r\n}\r\n\r\nexport function editCourseNew(course_new: ICourseNew): IEditCourseNewActionType {\r\n    return { type: EDIT_COURSE_NEW, course_new: course_new };\r\n}\r\n\r\nexport function removeCourseNew(id: any): IRemoveCourseNewActionType {\r\n    return { type: REMOVE_COURSE_NEW, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseNew(course_new: ICourseNew): IChangeSelectedCourseNewActionType {\r\n    return { type: CHANGE_COURSE_NEW_PENDING_EDIT, course_new: course_new };\r\n}\r\n\r\nexport function clearSelectedCourseNew(): IClearSelectedCourseNewActionType {\r\n    return { type: CLEAR_COURSE_NEW_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseNewModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddCourseNewActionType { type: string, course_new: ICourseNew };\r\ninterface IEditCourseNewActionType { type: string, course_new: ICourseNew };\r\ninterface IRemoveCourseNewActionType { type: string, id: any };\r\ninterface IChangeSelectedCourseNewActionType { type: string, course_new: ICourseNew };\r\ninterface IClearSelectedCourseNewActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  CourseNewModificationStatus};\r\ninterface IRemoveCourseNewAllActionType { type: string }\r\ninterface IInitialCourseNewActionType {type: string, course_new: ICourseNew}","import { logout } from \"../../../store/actions/account.actions\";\r\nimport { fetchDataSuccess, fetchDataError, removeCourseNewAll, initialCourseNew, addCourseNew } from \"../../../store/actions/course_new.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface CourseNew {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    creator_id: number;\r\n    art_type_id: number;\r\n    art_level_id: number;\r\n    art_age_id: number;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    total: number;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getCourseNew(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/course/student-new/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getCourseNew(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeCourseNewAll())\r\n                console.log(data.body.courses)\r\n                data.body.courses.map((ele: any, index: any) => {\r\n                    var course: CourseNew = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        is_enabled: ele.is_enabled,\r\n                        creator_id: ele.creator_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        art_level_id: ele.art_level_id,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        total: ele.total,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n\r\n                    }\r\n                    console.log(course)\r\n                    if (index === 0){\r\n                        return dispatch(initialCourseNew(course));\r\n                    }\r\n                    else{\r\n                        return dispatch(addCourseNew(course))\r\n                    }\r\n                })\r\n                dispatch(logout())\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\nimport { ICourseNew } from \"../../store/models/course_new.interface\";\r\nimport { IArtAgeState, IArtLevelState, IArtTypeState, ICourseNewState, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./CourseListNew.css\"\r\n\r\nexport type semesterListProps = {\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n  };\r\n\r\nfunction CourseListNew(props: semesterListProps): JSX.Element {\r\n    const course_news: ICourseNewState = useSelector((state: IStateType) => state.course_news);\r\n    const art_types: IArtTypeState = useSelector((state: IStateType) => state.art_types);\r\n    const art_ages: IArtAgeState = useSelector((state: IStateType) => state.art_ages);\r\n    const art_levels: IArtLevelState = useSelector((state: IStateType) => state.art_levels);\r\n    \r\n    const [totalPage, setTotalPage] = useState(0)\r\n    const [element, setElement] = useState<ICourseNew[]>([])\r\n    const history = useHistory();\r\n    const routeChange = (course: ICourseNew) =>{ \r\n        localStorage.removeItem('course_id');\r\n        localStorage.setItem('course_id', course.id.toString())\r\n        let path = '/courses/semester-classes'; \r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        let x = (course_news.course_news.length - course_news.course_news.length % 6) /6;\r\n        if (x === 0) {\r\n            setElement(course_news.course_news)\r\n        }\r\n        else {\r\n            setElement(course_news.course_news.slice(0,6))\r\n        }\r\n        \r\n         setTotalPage((x+1))\r\n    }, [course_news.course_news])\r\n\r\n    console.log((totalPage))\r\n\r\n    function handlePagination(count: number) {\r\n        console.log(count)\r\n        if (count === totalPage) {\r\n            setElement(course_news.course_news.slice(count*6))\r\n        }\r\n        else {\r\n            setElement(course_news.course_news.slice(count*6,count*6 + 6))\r\n        }\r\n    }\r\n\r\n    const [filter, setFilter] = useState(1)\r\n    const [filter1, setFilter1] = useState(1)\r\n    const [filter2, setFilter2] = useState(1)\r\n\r\n\r\n    function handleChange(e: any) {\r\n        setFilter(e.target.value)\r\n    }\r\n\r\n    function handleChange1(e: any) {\r\n        setFilter1(e.target.value)\r\n    }\r\n\r\n    function handleChange2(e: any) {\r\n        setFilter2(e.target.value)\r\n    }\r\n\r\n    console.log(element)\r\n\r\n    function handleFilter() {\r\n        console.log(filter)\r\n        console.log(filter1)\r\n        console.log(filter2)\r\n        let k = course_news.course_news.filter((ele, idx) => \r\n        ele !== undefined && ele.art_type_id == filter && ele.art_age_id == filter1 && ele.art_level_id == filter2\r\n        )\r\n\r\n        let x = (k.length - (k.length) % 6) / 6;\r\n        if (x === 0) {\r\n            setElement(k)\r\n        }\r\n        else {\r\n            setElement(k.slice(0, 6))\r\n        }\r\n        setTotalPage((x + 1))\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"d-flex flex-row justify-content-between align-items-center filters\">\r\n                            <h6 className=\"ml-3\">Có {element.filter((val) => {\r\n                            if (props.value === \"\"){\r\n                              return val;\r\n                            }\r\n                            else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))){\r\n                              return val;\r\n                            }\r\n                            return null\r\n                          }).length} kết quả</h6>\r\n                            <div className=\"right-sort\">\r\n                                <div className=\"sort-by mr-3\">\r\n                                    <span className=\"mr-1\">Lọc theo:</span>\r\n                                    <select name=\"cars\" id=\"cars\"\r\n                                        value={filter}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        {\r\n                                            art_types.artTypes.map((ele, idx) => {\r\n                                                return (\r\n                                                    <option value={ele.id}>{ele.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select>   \r\n                                    <select name=\"cars\" id=\"cars\" className=\"pl-2\"\r\n                                        value={filter1}\r\n                                        onChange={handleChange1}\r\n                                    >\r\n                                        {\r\n                                            art_ages.artAges.map((ele, idx) => {\r\n                                                return (\r\n                                                    <option value={ele.id}>{ele.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                    <select name=\"cars\" id=\"cars\" className=\"pl-2\"\r\n                                        value={filter2}\r\n                                        onChange={handleChange2}\r\n                                    >\r\n                                        {\r\n                                            art_levels.artLevels.map((ele, idx) => {\r\n                                                return (\r\n                                                    <option value={ele.id}>{ele.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select>                                 \r\n                                    <button className=\"btn btn-outline-dark btn-sm ml-3 filter\" type=\"button\" onClick={() => handleFilter()}>Lọc&nbsp;<i className=\"fa fa-flask\"></i></button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-1\">\r\n                    {\r\n                        element.filter((val) => {\r\n                            if (props.value === \"\"){\r\n                              return val;\r\n                            }\r\n                            else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))){\r\n                              return val;\r\n                            }\r\n                            return null\r\n                          }).map((ele, index) => {\r\n                            return (\r\n                                <div className=\"col-md-4\" onClick={() => {routeChange(ele)}}>\r\n                                    <div className=\"p-card bg-white p-2 rounded px-3 product-x\">\r\n                                        <div className=\"d-flex align-items-center credits\"><img src={ele.image_url} width=\"100%\" alt=\"\"/></div>\r\n                                        <h5 className=\"mt-2\">{ele.name}</h5><span className=\"badge badge-danger py-1 mb-2\">{ele.art_type_name} &amp; {ele.art_age_name} &amp; {ele.art_level_name}</span><span className=\"d-block mb-5\">Hiện tại khóa học mở {ele.total} lớp.</span>\r\n                                        <div\r\n                                            className=\"d-flex justify-content-between stats\">\r\n                                            <div><i className=\"fa fa-calendar-o\"></i><span className=\"ml-2\">Giá: {ele.price} VND</span></div>\r\n                                            <div className=\"d-flex flex-row align-items-center\">\r\n                                                <div className=\"profiles\"><img className=\"rounded-circle\" src=\"https://i.imgur.com/4nUVGjW.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\" https://i.imgur.com/GHCtqgp.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\"https://i.imgur.com/UL0GS75.jpg\" alt=\"\" width=\"30\" /></div><span className=\"ml-3\">12</span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"d-flex justify-content-end text-right mt-2\">\r\n                    <nav>\r\n                        <ul className=\"pagination\">\r\n                        <li className=\"page-item\">\r\n                            <a className=\"page-link\" aria-label=\"Previous\" href=\"javascript:void(0);\" onClick={(e) => e.preventDefault()}>\r\n                                <span aria-hidden=\"true\">&laquo;</span>\r\n                            </a>\r\n                        </li>\r\n                            {\r\n                                Array.from(Array((totalPage)).keys()).map((ele, idx) => {\r\n                                    return (\r\n                                        <li className=\"page-item\"><a className=\"page-link\" href=\"javascript:void(0);\" onClick={(e) => {\r\n                                            e.preventDefault()\r\n                                            handlePagination(ele)}}>{ele+1}</a></li>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Next\" href=\"javascript:void(0);\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&raquo;</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default CourseListNew;\r\n","export interface IStudentLeave {\r\n    id: any;\r\n    section_id: number;\r\n    section_name: string;\r\n    class_id: number;\r\n    class_name: string;\r\n    section_number: number;\r\n    student_id: number;\r\n    student_name: string;\r\n    reviewer_id: number;\r\n    description: string;\r\n    status: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum StudentLeaveModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./Discovery.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getCourseNew } from \"../../common/service/CourseNew/GetCourseNew\";\r\nimport { getArtType } from \"../../common/service/ArtType/GetArtType\";\r\nimport { getArtAge } from \"../../common/service/ArtAge/GetArtAge\";\r\nimport { getArtLevel } from \"../../common/service/ArtLevel/GetArtLevel\";\r\nimport CourseListNew from \"./CourseListNew\";\r\n\r\nconst DiscoveryStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    //const semester_classs: ISemesterClassState = useSelector((state: IStateType) => state.semester_classes);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getCourseNew(dispatch, id))\r\n                    trackPromise(getArtType(dispatch))\r\n                    trackPromise(getArtAge(dispatch))\r\n                    trackPromise(getArtLevel(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getCourseNew(dispatch, id))\r\n                trackPromise(getArtType(dispatch))\r\n                trackPromise(getArtAge(dispatch))\r\n                trackPromise(getArtLevel(dispatch))\r\n            }\r\n        }\r\n\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khám phá\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n\r\n    const [checked, setChecked] = useState(true);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                {/* <div className=\"row\">\r\n                <TopCard title=\"ĐÃ ĐĂNG KÍ\" text={`${numberTeacherRegisterSuccessfullCount}`} icon=\"book\" class=\"primary\" />\r\n            </div> */}\r\n\r\n                <div className=\"row\" id=\"search-box\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"input-group\" id=\"search-content\">\r\n                            <div className=\"form-outline\">\r\n                                <input type=\"text\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                                    setSearchTerm(event.target.value)\r\n                                    console.log(searchTerm)\r\n                                }} />\r\n                            </div>\r\n                            <button type=\"button\" className=\"btn btn-primary\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <CourseListNew value={searchTerm} />\r\n                </div>\r\n\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default DiscoveryStudent;\r\n","import React, { Fragment, Dispatch, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IStateType, IRootPageStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport \"./SemesterClassDetail.css\"\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { getSemesterClassNew } from \"../../common/service/SemesterClass/GetSemesterNew\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { GrLinkDown, GrLinkNext } from \"react-icons/gr\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { postUserRegisterJoinSemester } from \"../../common/service/UserRegisterJoinSemester/PostUserRegisterJoinSemester\";\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst SemesterClassDetailStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    var id_a = localStorage.getItem('description_course');\r\n    var description_course: string = '';\r\n    if (id_a !== null) {\r\n        description_course = id_a;\r\n    }\r\n\r\n    var id_b = localStorage.getItem('course_id');\r\n    var course_id: number = 0;\r\n    if (id_b !== null) {\r\n        course_id = parseInt(id_b);\r\n    }\r\n\r\n    var id_c = localStorage.getItem('course_name');\r\n    var course_name: string = '';\r\n    if (id_c !== null) {\r\n        course_name = id_c;\r\n    }\r\n\r\n    var id_d = localStorage.getItem('art_age_name');\r\n    var art_age_name: string = '';\r\n    if (id_d !== null) {\r\n        art_age_name = id_d;\r\n    }\r\n\r\n    var id_e = localStorage.getItem('art_type_name');\r\n    var art_type_name: string = '';\r\n    if (id_e !== null) {\r\n        art_type_name = id_e;\r\n    }\r\n\r\n    var id_f = localStorage.getItem('num_of_section');\r\n    var num_of_section: string = '';\r\n    if (id_f !== null) {\r\n        num_of_section = id_f;\r\n    }\r\n\r\n    var id_h = localStorage.getItem('schedule');\r\n    var schedule: string = '';\r\n    if (id_h !== null) {\r\n        schedule = id_h;\r\n    }\r\n\r\n    var id_k = localStorage.getItem('art_level_name');\r\n    var art_level_name: string = '';\r\n    if (id_k !== null) {\r\n        art_level_name = id_k;\r\n    }\r\n\r\n    var id_l = localStorage.getItem('semester_class_name');\r\n    var semester_class_name: string = '';\r\n    if (id_l !== null) {\r\n        semester_class_name = id_l;\r\n    }\r\n\r\n    var id_m = localStorage.getItem('price');\r\n    var price: string = '';\r\n    if (id_m !== null) {\r\n        price = id_m;\r\n    }\r\n\r\n    var id_n = localStorage.getItem('semester_class_id');\r\n    var semester_class_id: number = 0;\r\n    if (id_n !== null) {\r\n        semester_class_id = parseInt(id_n);\r\n    }\r\n\r\n    function handleClick() {\r\n        setChecked(!checked)\r\n    }\r\n\r\n\r\n    console.log(course_id)\r\n    console.log(semester_class_id)\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getSemesterClassNew(dispatch))\r\n                    trackPromise(getUserById(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getSemesterClassNew(dispatch))\r\n                trackPromise(getUserById(dispatch, id))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n    function handleRegister() {\r\n        const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n        dispatch(postUserRegisterJoinSemester({\r\n            \"student_id\": id,\r\n            \"semester_classes_id\": semester_class_id,\r\n            \"payer_id\": users.teachers.length > 0 ? users.teachers[0].parents : 0,\r\n            \"price\": price,\r\n            \"status\": \"Waiting\"\r\n        }, idx, routeHome))\r\n    }\r\n\r\n    const history = useHistory();\r\n    function routeHome() {\r\n        let path = '/discover';\r\n        history.push(path)\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                <ToastContainer />\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\" id=\"shadow-1\">\r\n                        <div className=\"row no-gutters align-items-center\">\r\n                            <div className=\"text-xs font-weight-bold text-green text-uppercase text-center\">\r\n                                <p className=\"fullname ml-2 mt-4 text-center\">{semester_class_name}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-6 col-md-6\">\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs \">\r\n                                        <p className=\"birthday ml-2\">Khóa học: {course_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday ml-2\">Thể loại: {art_type_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday ml-2\">Độ tuổi: {art_age_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday ml-2\">Trình độ: {art_level_name}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-xl-6 col-md-6\">\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs mr-2\">\r\n                                        <p className=\"birthday\">Lịch học: {schedule}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday\">Số buổi học: {num_of_section}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"text-xs\">\r\n                                        <p className=\"birthday\">Giá: {price}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\" id=\"btn-register-course\">\r\n                            <div className=\"col-lg-12 col-md-12 col-xs-12 text-center justify-content-center\">\r\n                                <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course2\" onClick={() => handleRegister()}>\r\n                                    <GrLinkNext id=\"btn-payment\" color=\"#ffffff\" />\r\n                                    Đăng kí ngay\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" id=\"btn-register-course\">\r\n                    <div className=\"col-lg-12 col-md-12 col-xs-12 text-center justify-content-center\">\r\n                        <button className=\"btn btn-success btn-green\" id=\"btn-create-register-course4\" onClick={() => handleClick()}>\r\n                        <GrLinkDown id=\"btn-payment\" color=\"#ffffff\" />\r\n                        Xem miêu tả\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    function () {\r\n                        if (checked === true) {\r\n                            return (\r\n                                <div className=\"col-xl-12 col-lg-12\">\r\n                                    <div className=\"card-header py-3\">\r\n                                        <h6 className=\"m-0 font-weight-bold text-green\">Chi tiết</h6>\r\n                                    </div>\r\n                                    <div className=\"card shadow mb-4\">\r\n                                        <div className=\"card-body\" dangerouslySetInnerHTML={{ __html: description_course }}>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }()\r\n                }\r\n\r\n            </Fragment >\r\n    );\r\n};\r\n\r\nexport default SemesterClassDetailStudent;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/student_leave.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\nimport { postNotifyDb } from \"../NotifyDb/PostNotifyDb\";\r\nimport { getStudentLeave } from \"./GetStudentLeave\";\r\n\r\nexport function postStudentLeave(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/student-leave`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postStudentLeave(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                dispatch(getStudentLeave())\r\n                toast.update(idx, { render: \"Yêu cầu nghỉ học đã được gửi thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Yêu cầu nghỉ học đã được gửi không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            });\r\n    };\r\n}","import { fetchDataRequest, fetchDataSuccess, fetchDataError, removeStudentLeaveApprovedAll, removeStudentLeaveNotApprovedAll, removeStudentLeaveNotApprovedNowAll, addStudentLeaveApproved, addStudentLeaveNotApproved, addStudentLeaveNotApprovedNow } from \"../../../store/actions/student_leave.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface StudentLeave {\r\n    id: any;\r\n    section_id: number;\r\n    section_name: string;\r\n    class_id: number;\r\n    class_name: string;\r\n    student_id: number;\r\n    student_name: string;\r\n    reviewer_id: number;\r\n    section_number: number;\r\n    description: string;\r\n    status: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getStudentLeave() {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/student-leave`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getStudentLeave())\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeStudentLeaveApprovedAll())\r\n                dispatch(removeStudentLeaveNotApprovedAll())\r\n                dispatch(removeStudentLeaveNotApprovedNowAll())\r\n                console.log(data.body.student_leaves)\r\n                data.body.student_leave.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var student_leave: StudentLeave = {\r\n                        id: ele.id,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        class_id: ele.class_id,\r\n                        section_number: ele.section_number,\r\n                        class_name: ele.class_name,\r\n                        student_id: ele.student_id,\r\n                        reviewer_id: ele.reviewer_id,\r\n                        status: ele.status,\r\n                        student_name: ele.student_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (student_leave.status === \"Approved\"){\r\n                        return dispatch(addStudentLeaveApproved(student_leave));\r\n                    }\r\n                    else if (student_leave.status === \"Not approved\"){\r\n                        return dispatch(addStudentLeaveNotApproved(student_leave));\r\n                    }\r\n                    else {\r\n                        return dispatch(addStudentLeaveNotApprovedNow(student_leave));\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IStudentLeaveState, IUserState, ISectionState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { addStudentLeaveNotApprovedNow } from \"../../store/actions/student_leave.action\";\r\nimport { OnChangeModel, IStudentLeaveFormState } from \"../../common/types/Form.types\";\r\nimport SelectKeyValue from \"../../common/components/SelectKeyValue\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IUser } from \"../../store/models/user.interface\";\r\nimport { IStudentLeave, StudentLeaveModificationStatus } from \"../../store/models/student_leave.interface\";\r\nimport { postStudentLeave } from \"../../common/service/StudentLeave/PostStudentLeave\";\r\n\r\nexport type artAgeListProps = {\r\n    isCheck: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n    data?: any;\r\n};\r\n\r\ntype Option1 = {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\n\r\nfunction RequestOffSectionForm(props: artAgeListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const studentleaves: IStudentLeaveState | null = useSelector((state: IStateType) => state.student_leaves);\r\n    let student_leave: IStudentLeave | null = studentleaves.selectedStudentLeave;\r\n    const isCreate: boolean = (studentleaves.modificationState === StudentLeaveModificationStatus.Create);\r\n    \r\n    if (!student_leave || isCreate){\r\n        student_leave = { id: 0, section_id: 0, class_id: 0, section_number: 0, student_id: 0, description: \"\", section_name: \"\", class_name: \"\", student_name: \"\", reviewer_id: 0, status: \"\", create_time: \"\", update_time: \"\" }\r\n    }\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const listStudent: IUser[] = users.students\r\n    const listStudents: Option1[] = [];\r\n    const sections: ISectionState | null = useSelector((state: IStateType) => state.sections);\r\n\r\n    listStudent.map((ele) => {\r\n        let item: Option1 = { \"name\": ele.username, \"value\": ele.id }\r\n        return listStudents.push(item)\r\n    })\r\n\r\n    const listSections: Option1[] = [];\r\n    sections.sections.map((ele) => {\r\n        let item: Option1 = { \"name\": \"Buổi \" + ele.number, \"value\": ele.id }\r\n        return listSections.push(item)\r\n    })\r\n\r\n    var id_y = localStorage.getItem('class_id');\r\n    let class_id = 0;\r\n    if (id_y !== null) {\r\n        class_id = parseInt(id_y);\r\n    }\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    var student_id: number = 0;\r\n    if (id_x !== null) {\r\n        student_id = parseInt(id_x);\r\n    }\r\n\r\n\r\n    const [formState, setFormState] = useState({\r\n        section_id: { error: \"\", value: student_leave.section_id },\r\n        description: { error: \"\", value: student_leave.description },\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        props.isCheck(false);\r\n        let saveUserFn: Function = addStudentLeaveNotApprovedNow;\r\n        saveForm(formState, saveUserFn);\r\n    }\r\n\r\n    function saveForm(formState: IStudentLeaveFormState, saveFn: Function): void {\r\n        if (student_leave) {\r\n            const id = toast.loading(\"Đang gửi yêu cầu. Vui lòng đợi trong giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n                autoClose: 2000\r\n            });\r\n\r\n            dispatch(postStudentLeave({\r\n                section_id: formState.section_id.value,\r\n                student_id: student_id,\r\n                classes_id: class_id,\r\n                description: formState.description.value\r\n            }, id))\r\n\r\n            console.log({\r\n                section_id: formState.section_id.value,\r\n                student_id: student_id,\r\n                classes_id: class_id,\r\n                description: formState.description.value\r\n            })\r\n        }\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        props.isCheck(false);\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.description.error || !formState.description.value) as boolean;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card\" id=\"topcard-user\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Gửi yêu cầu nghỉ học</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-group\">\r\n                                    <SelectKeyValue\r\n                                        id=\"input_section_id\"\r\n                                        field=\"section_id\"\r\n                                        label=\"Buổi học\"\r\n                                        options={listSections}\r\n                                        required={true}\r\n                                        onChange={hasFormValueChanged}\r\n                                        value={formState.section_id.value}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_description\"\r\n                                        field=\"description\"\r\n                                        value={formState.description.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        type=\"textarea\"\r\n                                        maxLength={100}\r\n                                        label=\"Lý do\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default RequestOffSectionForm;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Popup from \"reactjs-popup\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getSectionByClass } from \"../../common/service/Section/GetSectionByClass\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { setModificationStateAnonymousNotification } from \"../../store/actions/anonymous_notification.action\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\r\nimport { IAnonymousNotificationState, IExerciseStudentState, IRootPageStateType, ISectionState, IStateType, IStudentLeaveState, ITimeScheduleState, ITutorialPageState, ITutorialState } from \"../../store/models/root.interface\";\r\nimport \"./DetailClassStudent.css\"\r\nimport RequestOffSectionForm from \"./RequestOffSectionForm\";\r\nimport { ISection } from \"../../store/models/section.interface\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getStudentLeaveByClassAndStudent } from \"../../common/service/StudentLeave/GetStudentLeaveByClassStudent\";\r\nimport { getExerciseForClassStudent } from \"../../common/service/ExerciseStudent/GetExerciseForClassStudent\";\r\nimport { getInfoMyClass } from \"../../common/service/MyClass/GetInfoMyClass\";\r\nimport { IExerciseStudent } from \"../../store/models/exercise_student.interface\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\n\r\nconst DetailClassStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const sections: ISectionState = useSelector((state: IStateType) => state.sections);\r\n    const tutorials: ITutorialState = useSelector((state: IStateType) => state.tutorials);\r\n    const time_schedules: ITimeScheduleState = useSelector((state: IStateType) => state.time_schedules);\r\n    const tutorial_pages: ITutorialPageState = useSelector((state: IStateType) => state.tutorial_pages);\r\n    const anonymous_notifications: IAnonymousNotificationState | null = useSelector((state: IStateType) => state.anonymous_notifications);\r\n    const student_leaves: IStudentLeaveState = useSelector((state: IStateType) => state.student_leaves);\r\n    const exercise_student: IExerciseStudentState = useSelector((state: IStateType) => state.exercise_students);\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberSectionCount: number = sections.sections.length;\r\n    const numberNotSubmitNowCount: number = exercise_student.exercise_not_submit.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('class_id');\r\n\r\n    let class_id = 0;\r\n\r\n    if (id_y !== null) {\r\n        class_id = parseInt(id_y);\r\n    }\r\n\r\n    const [checked1, setChecked1] = useState(true);\r\n    const [checked2, setChecked2] = useState(false);\r\n    const [checked3, setChecked3] = useState(false);\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getInfoMyClass(dispatch, class_id))\r\n                    trackPromise(getSectionByClass(dispatch, class_id))\r\n                    trackPromise(getStudentLeaveByClassAndStudent(dispatch, class_id, id))\r\n                    trackPromise(getExerciseForClassStudent(dispatch, class_id, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getInfoMyClass(dispatch, class_id))\r\n                trackPromise(getSectionByClass(dispatch, class_id))\r\n                trackPromise(getExerciseForClassStudent(dispatch, class_id, id))\r\n                trackPromise(getStudentLeaveByClassAndStudent(dispatch, class_id, id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, class_id, id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp học\", \"Buổi học\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    const [popup1, setPopup1] = useState(false);\r\n\r\n    function onAnonymousNotificationRemove() {\r\n        setPopup1(true);\r\n    }\r\n\r\n    function onRemovePopup1(value: boolean) {\r\n        setPopup1(false);\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    const routeChange2 = (exercise_student: IExerciseStudent) => {\r\n        let path = '/exercise/detail';\r\n        localStorage.removeItem('exercise_id');\r\n        localStorage.setItem('exercise_id', exercise_student.id.toString())\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    const routeChange1 = (ele: IExerciseStudent) => {\r\n        localStorage.setItem('exercise_id', ele.id)\r\n        let path = '/exercise/submit';\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    function routeChangeVIewExerciseSubmission(exercise_student: IExerciseStudent){\r\n        let path = '/exercise-submission/view';\r\n        localStorage.removeItem('exercise_submission_id');\r\n        localStorage.setItem('exercise_submission_id', exercise_student.exercise_submission_id.toString())\r\n        localStorage.removeItem('time_submit');\r\n        localStorage.setItem('time_submit', exercise_student.time_submit.toString())\r\n        localStorage.removeItem('description');\r\n        localStorage.setItem('description', exercise_student.description.toString())\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    const onChangeRoute = (section: ISection, is_active: string, link_record: string) => {\r\n        let path = \"/classes/section\";\r\n        localStorage.removeItem('section_id')\r\n        localStorage.setItem('section_id', section.id.toString())\r\n        localStorage.removeItem('section_number')\r\n        localStorage.setItem('section_number', section.number.toString())\r\n        let tutorial_page_list: any[] = []\r\n        localStorage.removeItem('tutorial_name')\r\n        localStorage.removeItem('tutorial_id')\r\n        localStorage.setItem('is_active', is_active)\r\n        localStorage.removeItem('link_record')\r\n        localStorage.setItem('link_record', link_record)\r\n        tutorials.tutorials.map(ele => {\r\n            if (ele.section_id === section.id) {\r\n                localStorage.setItem('tutorial_id', ele.id.toString())\r\n                localStorage.setItem('tutorial_name', ele.name.toString())\r\n                tutorial_pages.tutorialPages.map(element => {\r\n                    if (element.tutorial_id === ele.id) {\r\n                        tutorial_page_list.push({\r\n                            description: element.description,\r\n                            id: element.id,\r\n                            name: element.name,\r\n                            tutorial_id: element.tutorial_id,\r\n                            number: element.number\r\n                        })\r\n                    }\r\n                    return null\r\n                })\r\n            }\r\n            return null\r\n        })\r\n        console.log(tutorial_page_list)\r\n        localStorage.removeItem('description_tutorial_page_list')\r\n        localStorage.setItem('description_tutorial_page_list', JSON.stringify(tutorial_page_list.sort((a, b) => a.number - b.number)))\r\n        history.push({\r\n            pathname: path\r\n        })\r\n    }\r\n\r\n\r\n    let data: string[] = []\r\n    let list_link_record: string[] = []\r\n    let total_time = \"\";\r\n    let check_active: string[] = [];\r\n\r\n    if (time_schedules.timeSchedules.length > 1 && promiseInProgress === false) {\r\n            if (time_schedules.timeSchedules[0] !== undefined && time_schedules.timeSchedules[0] !== null){\r\n                var start_time_0 = time_schedules.timeSchedules[0].start_time.split(\"T\");\r\n                var end_time_0 = time_schedules.timeSchedules[0].end_time.split(\"T\");\r\n                var hour_start = parseInt(start_time_0[1].substring(0, 2));\r\n                var minus_tart = parseInt(start_time_0[1].substring(3, 5));\r\n                var sercon_start = parseInt(start_time_0[1].substring(6, 8));\r\n                var hour_end = parseInt(end_time_0[1].substring(0, 2));\r\n                var minus_end = parseInt(end_time_0[1].substring(3, 5));\r\n                var sercon_end = parseInt(end_time_0[1].substring(6, 8));\r\n    \r\n                total_time = (hour_end - hour_start).toString() + \" giờ \" + (minus_end - minus_tart).toString() + \" phút \" + (sercon_end - sercon_start).toString() + \" giây\";\r\n                time_schedules.timeSchedules.map((ele, index) => {\r\n                    var start_date = new Date(ele.start_time);\r\n                    var end_date = new Date(ele.end_time);\r\n                    const link = \"https://recording-jitsi-chung.s3.ap-southeast-1.amazonaws.com/recording/\"\r\n                    const class_id = 1;\r\n                    const days = ele.end_time;\r\n                    let str = link + class_id.toString() + \"_\" + days.slice(0,10) + \".mp4\";\r\n                    list_link_record.push(str);\r\n                    // Do your operations\r\n                    var date_now   = new Date();\r\n\r\n                    if (( start_date.getTime() - date_now.getTime()) / 1000 > 86400) {\r\n                        check_active.push('Chưa diễn ra');\r\n                    }\r\n                    else if ((start_date.getTime() - date_now.getTime()) / 1000 < 86400 && (date_now.getTime() - start_date.getTime()) / 1000 < 0) {\r\n                        check_active.push('Chuẩn bị diễn ra');\r\n                    }\r\n                    else if ((date_now.getTime() - start_date.getTime()) / 1000 > 0 && (end_date.getTime() - date_now.getTime()) / 1000 > 0) {\r\n                        check_active.push('Đang diễn ra');\r\n                    }\r\n                    else {\r\n                        check_active.push('Đã diễn ra');\r\n                    }\r\n\r\n                    var start_time = ele.start_time.split(\"T\");\r\n                    var end_time = ele.end_time.split(\"T\");\r\n                    return data.push(\"Từ \" + start_time[0] + \" \" + start_time[1] + \" -> \" + end_time[0] + \" \" + end_time[1])\r\n                })\r\n            }\r\n    }\r\n\r\n    function checkActive(index: number) {\r\n        if (check_active[index] === \"Chưa diễn ra\") {\r\n            return \"not_active_now\";\r\n        }\r\n        else if (check_active[index] === \"Chuẩn bị diễn ra\") {\r\n            return 'pre_active_now';\r\n        }\r\n        else if (check_active[index] === \"Đang diễn ra\") {\r\n            return 'active_now';\r\n        }\r\n        else {\r\n            return \"not_active\";\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-student\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n                <ToastContainer />\r\n\r\n                <div className=\"row\">\r\n                    <TopCard title=\"SỐ BUỔI ĐÃ HỌC\" text={`${check_active.filter((ele, index) => ele === \"Đã diễn ra\").length}/${numberSectionCount}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"SỐ BÀI KIỂM TRA CHƯA LÀM\" text={`${numberNotSubmitNowCount}`} icon=\"book\" class=\"danger\" />\r\n                    <TopCard title=\"NGHỈ HỌC\" text={`${student_leaves.leaves.length}`} icon=\"book\" class=\"danger\" />\r\n                    <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                        <button\r\n                            className=\"btn btn-success btn-green\"\r\n                            id=\"btn-create-teacher-level\"\r\n                            onClick={() => {\r\n                                dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.Create))\r\n                                onAnonymousNotificationRemove()\r\n                            }}\r\n                        >\r\n                            <i className=\"fas fa fa-plus\"></i>\r\n                            Đăng kí nghỉ học\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-type\" onClick={() => {\r\n                            if (checked1 === false) {\r\n                                setChecked1(true)\r\n                                setChecked2(false)\r\n                                setChecked3(false)\r\n                            }\r\n                        }} style={{\r\n                            color: checked1 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                        }}>Buổi học</h6>\r\n\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"30%\",\r\n                            backgroundColor: checked1 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                            if (checked2 === false) {\r\n                                setChecked2(true)\r\n                                setChecked1(false)\r\n                                setChecked3(false)\r\n                            }\r\n                        }}\r\n                            style={{\r\n                                color: checked2 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                            }}>Bài tập</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"30%\",\r\n                            backgroundColor: checked2 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n\r\n                    <div className=\"col-xl-4 col-lg-4 mb-4 col-xs-4 text-center\">\r\n                        <h6 className=\"m-0 font-weight-bold\" id=\"btn-level\" onClick={() => {\r\n                            if (checked3 === false) {\r\n                                setChecked3(true)\r\n                                setChecked1(false)\r\n                                setChecked2(false)\r\n                            }\r\n                        }}\r\n                            style={{\r\n                                color: checked3 ? \"#F24E1E\" : \"#2F4F4F\"\r\n                            }}>Nghỉ học</h6>\r\n                        <div style={{\r\n                            height: \"5px\",\r\n                            textAlign: \"center\",\r\n                            margin: \"auto\",\r\n                            width: \"30%\",\r\n                            backgroundColor: checked3 ? \"#F24E1E\" : \"#ffffff\"\r\n                        }}></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Popup\r\n                    open={popup1}\r\n                    onClose={() => setPopup1(false)}\r\n                    closeOnDocumentClick\r\n                >\r\n                    <>\r\n                        {\r\n                            function () {\r\n                                if ((anonymous_notifications.modificationState === AnonymousNotificationModificationStatus.Create)) {\r\n                                    return <RequestOffSectionForm isCheck={onRemovePopup1} />\r\n                                }\r\n                            }()\r\n                        }\r\n                    </>\r\n                </Popup>\r\n\r\n                {\r\n                    function () {\r\n                        if (checked1 === true) {\r\n                            return (\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                        <h3 className=\" mb-2\" id=\"level-teacher\">Buổi học</h3>\r\n                                        <div className=\"table-responsive portlet table-section\">\r\n                                            <table className=\"table\">\r\n                                                <thead className=\"thead-light\">\r\n                                                    <tr>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        sections.sections.sort((a, b) => a.number - b.number).map((ele, index) => {\r\n                                                            if (checkActive(index) === \"not_active_now\"){\r\n                                                                return (\r\n                                                                    <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                    <div className={`row row-section mb-4 ml-2 mr-2 ${checkActive(index)}`}>\r\n                                                                        <div className=\"col-xl-3 col-md-3\">\r\n                                                                            <img className=\"card-img image-section-1\" src=\"http://res.cloudinary.com/djtmwajiu/image/upload/v1667395965/inl1eekblioz9s5iqed1.png\" alt=\"\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"col-xl-9 col-md-9\">\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mt-2 section_number\">Buổi {ele.number}: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mt-2 section_number\"><span className=\"section_name\"> {ele.name}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Lịch học: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{data[index]}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Thời gian buổi học: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{total_time}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Hình thức học: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{ele.teach_form === true ? \"Dạy bằng jisti\" : \"Đọc hiểu giáo trình\"}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Giáo viên: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{ele.teacher_name}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </tr>\r\n                                                                )\r\n                                                            }\r\n                                                            else if (checkActive(index) === \"pre_active_now\") {\r\n                                                                return (\r\n                                                                    <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                    <div className={`row row-section mb-4 ml-2 mr-2 ${checkActive(index)}`} onClick={() => { onChangeRoute(ele, checkActive(index), \"\") }}>\r\n                                                                        <div className=\"col-xl-3 col-md-3\">\r\n                                                                            <img className=\"card-img image-section-1\" src=\"http://res.cloudinary.com/djtmwajiu/image/upload/v1667395965/inl1eekblioz9s5iqed1.png\" alt=\"\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"col-xl-9 col-md-9\">\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mt-2 section_number\">Buổi {ele.number}: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mt-2 section_number\"><span className=\"section_name\"> {ele.name}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Lịch học: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{data[index]}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Thời gian buổi học: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{total_time}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Hình thức học: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{ele.teach_form === true ? \"Dạy bằng jisti\" : \"Đọc hiểu giáo trình\"}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Giáo viên: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{ele.teacher_name}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </tr>\r\n                                                                )\r\n                                                            }\r\n                                                            else if (checkActive(index) === \"active_now\") {\r\n                                                                return (\r\n                                                                    <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                    <div className={`row row-section mb-4 ml-2 mr-2 ${checkActive(index)}`} onClick={() => { onChangeRoute(ele, checkActive(index), \"\") }}>\r\n                                                                        <div className=\"col-xl-3 col-md-3\">\r\n                                                                            <img className=\"card-img image-section-1\" src=\"http://res.cloudinary.com/djtmwajiu/image/upload/v1667395965/inl1eekblioz9s5iqed1.png\" alt=\"\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"col-xl-9 col-md-9\">\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mt-2 section_number\">Buổi {ele.number}: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mt-2 section_number\"><span className=\"section_name\"> {ele.name}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Lịch học: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{data[index]}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Thời gian buổi học: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{total_time}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Hình thức học: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{ele.teach_form === true ? \"Dạy bằng jisti\" : \"Đọc hiểu giáo trình\"}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Giáo viên: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{ele.teacher_name}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </tr>\r\n                                                                )\r\n                                                            }\r\n                                                            return (\r\n                                                                <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                    <div className={`row row-section mb-4 ml-2 mr-2 ${checkActive(index)}`} onClick={() => { onChangeRoute(ele, checkActive(index), list_link_record[index]) }}>\r\n                                                                        <div className=\"col-xl-3 col-md-3\">\r\n                                                                            <img className=\"card-img image-section-1\" src=\"http://res.cloudinary.com/djtmwajiu/image/upload/v1667395965/inl1eekblioz9s5iqed1.png\" alt=\"\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"col-xl-9 col-md-9\">\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mt-2 section_number\">Buổi {ele.number}: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mt-2 section_number\"><span className=\"section_name\"> {ele.name}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Lịch học: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{data[index]}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Thời lượng: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{total_time}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Hình thức học: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{ele.teach_form === true ? \"Dạy bằng jisti\" : \"Đọc hiểu giáo trình\"}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div className=\"col-xl-3 col-md-3\">\r\n                                                                                    <p className=\" mb-2 section_number\">Giáo viên: </p>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-xl-9 col-md-9\">\r\n                                                                                    <p className=\" mb-2 section_number\"><span className=\"section_name\">{ele.teacher_name}</span> </p>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        else if (checked2 === true) {\r\n                            return (\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                                        <h3 className=\" mb-2\" id=\"level-teacher\">Bài kiểm tra cần làm</h3>\r\n                                        <div className=\"table-responsive portlet table-section\">\r\n                                            <table className=\"table\">\r\n                                                <thead className=\"thead-light\">\r\n                                                    <tr>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        exercise_student.exercise_not_submit.map((ele, index) => {\r\n                                                            return (\r\n                                                                <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                    <div className=\"row row-section mb-4 ml-2 mr-2\" onClick={() => { routeChange1(ele) }}>\r\n                                                                    <div className=\"col-xl-4 col-md-4 avatar-x\">\r\n                                                                        <img className=\"img-exam\" src=\"http://res.cloudinary.com/djtmwajiu/image/upload/v1667399202/ersndjmp6ppmvohvekpr.png\" alt=\"\" />\r\n                                                                    </div>\r\n                                                                        <div className=\"col-xl-8 col-md-8 mb-4\">\r\n                                                                            <p className=\" mb-2 section_number\">Tên: <span className=\"section_name pl-2\"> {ele.name}</span> </p>\r\n                                                                            <p className=\" mb-2 section_number\">Hạn nộp: <span className=\"section_name pl-2\">{ele.deadline}</span> </p>\r\n                                                                            <p className=\" mb-2 section_number\">Phần trăm đánh giá: <span className=\"section_name pl-2\">{ele.level_name}</span> </p>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                                        <h3 className=\" mb-2\" id=\"level-teacher\">Bài kiểm tra đã nộp</h3>\r\n                                        <div className=\"table-responsive portlet table-section\">\r\n                                            <table className=\"table\">\r\n                                                <thead className=\"thead-light\">\r\n                                                    <tr>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        exercise_student.exercise_submitted_graded.map((ele, index) => {\r\n                                                            return (\r\n                                                                <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                    <div className=\"row row-section-1 mb-4 ml-2 mr-2\" onClick={() => { routeChange2(ele) }}>\r\n                                                                        <div className=\"col-xl-4 col-md-4 avatar-x\">\r\n                                                                            <img className=\"img-exam\" src=\"http://res.cloudinary.com/djtmwajiu/image/upload/v1667399202/ersndjmp6ppmvohvekpr.png\" alt=\"\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"col-xl-8 col-md-8 mt-4\">\r\n                                                                            <p className=\" mb-2 section_number\">Tên: <span className=\"section_name pl-2\"> {ele.name}</span> </p>\r\n                                                                            <p className=\" mb-2 section_number\">Hạn nộp: <span className=\"section_name pl-2\">{ele.deadline}</span> </p>\r\n                                                                            <p className=\" mb-2 section_number\">Phần trăm đánh giá: <span className=\"section_name pl-2\">{ele.level_name}</span> </p>\r\n                                                                        </div>\r\n    \r\n                                                                    </div>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n\r\n                                                    {\r\n                                                        exercise_student.exercise_submitted_not_grade.map((ele, index) => {\r\n                                                            return (\r\n                                                                <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                    <div className=\"row row-section mb-4 ml-2 mr-2\" onClick={() => { routeChangeVIewExerciseSubmission(ele) }}>\r\n                                                                        <div className=\"col-xl-4 col-md-4 avatar-x\">\r\n                                                                            <img className=\"img-exam\" src=\"http://res.cloudinary.com/djtmwajiu/image/upload/v1667399202/ersndjmp6ppmvohvekpr.png\" alt=\"\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"col-xl-8 col-md-8 mt-4\">\r\n                                                                            <p className=\" mb-2 section_number\">Tên: <span className=\"section_name pl-2\"> {ele.name}</span> </p>\r\n                                                                            <p className=\" mb-2 section_number\">Hạn nộp: <span className=\"section_name pl-2\">{ele.deadline.replaceAll(\"T\", \" \")}</span> </p>\r\n                                                                            <p className=\" mb-2 section_number\">Phần trăm đánh giá: <span className=\"section_name pl-2\">{ele.level_name}</span> </p>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        else if (checked3 === true) {\r\n                            return (\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                                        <h3 className=\" mb-2\" id=\"level-teacher\">Chưa duyệt</h3>\r\n                                        <div className=\"table-responsive portlet table-section\">\r\n                                            <table className=\"table\">\r\n                                                <thead className=\"thead-light \">\r\n                                                    <tr>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        student_leaves.leaves.map((ele, index) => {\r\n                                                            return (\r\n                                                                <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                    <div className=\"row row-section mb-4 ml-2 mr-2\" onClick={() => { }}>\r\n                                                                        <div className=\"col-xl-3 col-md-3\">\r\n                                                                            <img className=\"card-img image-section-1\" src=\"http://res.cloudinary.com/djtmwajiu/image/upload/v1667399584/wazcmdgbmxy2amdmjjdv.png\" alt=\"\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"col-xl-9 col-md-9\">\r\n                                                                            <p className=\" mb-2 section_number\">Buổi {ele.section_number}</p>\r\n                                                                            <p className=\" mb-2 section_number\">Thời gian gửi: <span className=\"section_name\">{ele.update_time}</span></p>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                                        <h3 className=\" mb-2\" id=\"level-teacher\">Đã duyệt</h3>\r\n                                        <div className=\"table-responsive portlet table-section\">\r\n                                            <table className=\"table\">\r\n                                                <thead className=\"thead-light \">\r\n                                                    <tr>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        student_leaves.acceptLeaves.map((ele, index) => {\r\n                                                            return (\r\n                                                                <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                    <div className=\"row row-section-1 mb-4 ml-2 mr-2\" onClick={() => {  }}>\r\n                                                                        <div className=\"col-xl-4 col-md-4\">\r\n                                                                            <img className=\"card-img image-section-1\" src=\"http://res.cloudinary.com/djtmwajiu/image/upload/v1667399584/wazcmdgbmxy2amdmjjdv.png\" alt=\"\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"col-xl-8 col-md-8\">\r\n                                                                            <p className=\" mb-2 section_number\">Buổi {ele.section_number}</p>\r\n                                                                            <p className=\" mb-2 section_number\">Thời gian duyệt: <span className=\"section_name pl-2\">{ele.update_time}</span></p>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }()\r\n                }\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default DetailClassStudent;\r\n","import { fetchDataSuccess, fetchDataError, removeExerciseNotSubmitAll, removeExerciseSubmitGradedAll, addExerciseNotSubmit, removeExerciseSubmitNotGradeAll, addExerciseSubmitGraded, addExerciseSubmitNotGrade } from \"../../../store/actions/exercise_student.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface exercise {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    section_id: number;\r\n    exercise_submission_id: number;\r\n    teacher_name: string;\r\n    time_submit: string;\r\n    deadline: string;\r\n    level_id: number;\r\n    level_name: string;\r\n    section_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getExerciseForSectionStudent(dispatch: any, section_id: number, student_id: number) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/exercises/section-student/${section_id}/${student_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getExerciseForSectionStudent(dispatch, section_id, student_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeExerciseNotSubmitAll())\r\n                dispatch(removeExerciseSubmitGradedAll())\r\n                dispatch(removeExerciseSubmitNotGradeAll())\r\n                console.log(data.body.exercise_not_submit)\r\n                console.log(data.body.exercise_submitted_not_grade)\r\n                console.log(data.body.exercise_submitted_graded)\r\n                data.body.exercise_not_submit.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var exercise: exercise = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        teacher_name: ele.teacher_name,\r\n                        time_submit: ele.time_submit,\r\n                        exercise_submission_id: ele.exercise_submission_id,\r\n                        deadline: ele.deadline,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        level_id: ele.level_id,\r\n                        level_name: ele.level_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addExerciseNotSubmit(exercise))\r\n                })\r\n\r\n                data.body.exercise_submitted_not_grade.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var exercise: exercise = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        level_id: ele.level_id,\r\n                        exercise_submission_id: ele.exercise_submission_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        time_submit: ele.time_submit,\r\n                        deadline: ele.deadline,\r\n                        level_name: ele.level_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addExerciseSubmitNotGrade(exercise))\r\n                })\r\n\r\n                data.body.exercise_submitted_graded.map((ele: any, index: any) => {\r\n                    var strDate_1 = ele.create_time;\r\n                    var strDate_2 = ele.update_time;\r\n                    var exercise: exercise = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        section_id: ele.section_id,\r\n                        level_id: ele.level_id,\r\n                        exercise_submission_id: ele.exercise_submission_id,\r\n                        teacher_name: ele.teacher_name,\r\n                        time_submit: ele.time_submit,\r\n                        deadline: ele.deadline,\r\n                        level_name: ele.level_name,\r\n                        section_name: ele.section_name,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addExerciseSubmitGraded(exercise))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { getExerciseLevel } from \"../../common/service/ExerciseLevel/GetExerciseLevel\";\r\nimport { getSectionById } from \"../../common/service/Section/GetSectionById\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IClassesStudentState, IExerciseStudentState, ISectionState, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./SectionStudent.css\"\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getClassesStudent } from \"../../common/service/ClassesStudent/GetClassesStudentByStudent\";\r\nimport { getExerciseForSectionStudent } from \"../../common/service/ExerciseStudent/GetExerciseBySectionStudent\";\r\nimport { IExerciseStudent } from \"../../store/models/exercise_student.interface\";\r\n\r\nconst SectionStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const sections: ISectionState = useSelector((state: IStateType) => state.sections);\r\n    const exercise_student: IExerciseStudentState = useSelector((state: IStateType) => state.exercise_students);\r\n    const class_students: IClassesStudentState = useSelector((state: IStateType) => state.classes_students);\r\n\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n\r\n    var id_y = localStorage.getItem('section_id');\r\n\r\n    let section_id = 0;\r\n\r\n    if (id_y !== null) {\r\n        section_id = parseInt(id_y);\r\n    }\r\n\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n\r\n    var id_z = localStorage.getItem('class_id');\r\n    var class_id: number = 0;\r\n    if (id_z !== null) {\r\n        class_id = parseInt(id_z);\r\n    }\r\n\r\n    var id_t = localStorage.getItem('is_active');\r\n    var is_active = \"\";\r\n    if (id_t !== null) {\r\n        is_active = id_t;\r\n    }\r\n\r\n    var id_tt = localStorage.getItem('link_record');\r\n    var link_record = \"\";\r\n    if (id_tt !== null) {\r\n        link_record = id_tt;\r\n    }\r\n\r\n    console.log(class_id);\r\n    console.log(class_students.classes_doing)\r\n\r\n    let link_jisti = \"\";\r\n    if (class_students.classes_doing.length > 0) {\r\n        class_students.classes_doing.map((ele, idx) => {\r\n            if (ele.id === class_id) {\r\n                link_jisti = ele.link_url;\r\n            }\r\n            return ele\r\n        })\r\n    }\r\n\r\n    console.log(link_jisti)\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getClassesStudent(dispatch, id))\r\n                    trackPromise(getSectionById(dispatch, section_id))\r\n                    trackPromise(getExerciseForSectionStudent(dispatch, section_id, id))\r\n                    trackPromise(getExerciseLevel(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getClassesStudent(dispatch, id))\r\n                trackPromise(getSectionById(dispatch, section_id))\r\n                trackPromise(getExerciseForSectionStudent(dispatch, section_id, id))\r\n                trackPromise(getExerciseLevel(dispatch))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, section_id, id]);\r\n\r\n    const history = useHistory();\r\n    const routeChange2 = () => {\r\n        let path = \"/section/view\";\r\n        history.push({\r\n            pathname: path,\r\n            state: { section_id: section_id }\r\n        });\r\n    }\r\n\r\n    const routeChange4 = () => {\r\n        if (link_jisti !== null) {\r\n            window.open(link_jisti, '_blank');\r\n        }\r\n    }\r\n\r\n\r\n    const routeChange3 = (description: string, name: string, level_name: string, id: any) => {\r\n        let path = '/exercise/detail';\r\n        localStorage.removeItem('exercise_description');\r\n        localStorage.removeItem('exercise_name');\r\n        localStorage.removeItem('exercise_level_name');\r\n        localStorage.removeItem('exercise_id');\r\n        localStorage.setItem('exercise_description', description);\r\n        localStorage.setItem('exercise_name', name);\r\n        localStorage.setItem('exercise_level_name', level_name);\r\n        localStorage.setItem('exercise_id', id.toString());\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n\r\n    function routeChangeVIewExerciseSubmission(exercise_student: IExerciseStudent) {\r\n        let path = '/exercise-submission/view';\r\n        localStorage.removeItem('exercise_submission_id');\r\n        localStorage.setItem('exercise_submission_id', exercise_student.exercise_submission_id.toString())\r\n        localStorage.removeItem('time_submit');\r\n        localStorage.setItem('time_submit', exercise_student.time_submit.toString())\r\n        localStorage.removeItem('description');\r\n        localStorage.setItem('description', exercise_student.description.toString())\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    const routeChange5 = (description: string, name: string, level_name: string, id: any) => {\r\n        let path = '/exercise/submit';\r\n        localStorage.removeItem('exercise_description');\r\n        localStorage.removeItem('exercise_name');\r\n        localStorage.removeItem('exercise_level_name');\r\n        localStorage.removeItem('exercise_id');\r\n        localStorage.setItem('exercise_description', description);\r\n        localStorage.setItem('exercise_name', name);\r\n        localStorage.setItem('exercise_level_name', level_name);\r\n        localStorage.setItem('exercise_id', id.toString());\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                <ToastContainer />\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                    <div className={`card shadow h-100 py-2`} id=\"normal-tutorial\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"row no-gutters justify-content-left\">\r\n                                                <h4 id=\"full-name\">Thông tin buổi học</h4>\r\n                                            </div>\r\n                                            <div className=\"row no-gutters\">\r\n                                                <p id=\"phone\">Tên: {\r\n                                                    function () {\r\n                                                        if (sections.sections.length <= 0) {\r\n                                                            return \"\"\r\n                                                        }\r\n                                                        else {\r\n                                                            return sections.sections[0].name;\r\n                                                        }\r\n                                                    }()\r\n                                                }</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"row no-gutters\">\r\n                                                <p id=\"phone\">Hình thức:\r\n                                                    {\r\n                                                        function () {\r\n                                                            if (sections.sections.length <= 0) {\r\n                                                                return \"\"\r\n                                                            }\r\n                                                            else {\r\n                                                                if (sections.sections[0].teach_form === true) {\r\n                                                                    return \"Dạy bằng jitsi\";\r\n                                                                }\r\n                                                                else {\r\n                                                                    return \"Dạy bằng giáo trình\";\r\n                                                                }\r\n                                                            }\r\n                                                        }()\r\n                                                    }\r\n                                                </p>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-xl-6 col-md-6 col-xs-6\">\r\n                                                    {\r\n                                                        function () {\r\n                                                            if (sections.sections.length <= 0) {\r\n                                                                return \"\"\r\n                                                            }\r\n                                                            else {\r\n                                                                if (sections.sections[0].teach_form === true) {\r\n                                                                    if (is_active === \"not_active_now\" || is_active === \"active_now\") {\r\n                                                                        return (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-success ml-2\"\r\n                                                                                id=\"btn-into-room\"\r\n                                                                                onClick={routeChange4}\r\n                                                                            >\r\n                                                                                Vào metting room\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n\r\n\r\n                                                                }\r\n                                                                else {\r\n                                                                    return (\r\n                                                                        <button\r\n                                                                            className=\"btn btn-success ml-2\"\r\n                                                                            id=\"btn-view-tutorial\"\r\n                                                                            onClick={routeChange2}\r\n                                                                        >\r\n                                                                            Xem nội dung\r\n                                                                        </button>\r\n                                                                    )\r\n                                                                }\r\n                                                            }\r\n                                                        }()\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow py-2`} >\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters justify-content-left exercise-list\">\r\n                                            <h4 id=\"full-name\">Bài tập</h4>\r\n                                            <div className=\"table-responsive portlet  exercise-list\">\r\n                                                <table className=\"table\">\r\n                                                    <thead className=\"thead-light\">\r\n                                                        <tr>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            exercise_student.exercise_not_submit.map((ele, index) => {\r\n                                                                return (\r\n                                                                    <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                        <div className=\"row row-section mb-4 ml-2 mr-2 row-not-submit\" onClick={() => { routeChange5(ele.description, ele.name, ele.level_name, ele.id) }}>\r\n                                                                            <div className=\"col-xl-4 col-md-4 mb-4\">\r\n                                                                                <img className=\"card-img\" src=\"http://res.cloudinary.com/djtmwajiu/image/upload/v1667395965/inl1eekblioz9s5iqed1.png\" alt=\"\" />\r\n                                                                            </div>\r\n                                                                            <div className=\"col-xl-8 col-md-8 mb-4\">\r\n                                                                                <h3 className=\" mb-2\" id=\"level-student\">{ele.name}</h3>\r\n                                                                                <h4 className=\" mb-2\" id=\"level-student\">Phần trăm đánh giá: {ele.level_name}</h4>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </tr>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n\r\n                                                        {\r\n                                                            exercise_student.exercise_submitted_graded.map((ele, index) => {\r\n                                                                return (\r\n                                                                    <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                        <div className=\"row row-section-1 mb-4 ml-2 mr-2\" onClick={() => { routeChange3(ele.description, ele.name, ele.level_name, ele.id) }}>\r\n                                                                            <div className=\"col-xl-4 col-md-4 mb-4\">\r\n                                                                                <img className=\"card-img\" src=\"http://res.cloudinary.com/djtmwajiu/image/upload/v1667395965/inl1eekblioz9s5iqed1.png\" alt=\"\" />\r\n                                                                            </div>\r\n                                                                            <div className=\"col-xl-8 col-md-8 mb-4\">\r\n                                                                                <h3 className=\" mb-2\" id=\"level-student\">{ele.name}</h3>\r\n                                                                                <h4 className=\" mb-2\" id=\"level-student\">Phần trăm đánh giá: {ele.level_name}</h4>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </tr>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n\r\n                                                        {\r\n                                                            exercise_student.exercise_submitted_not_grade.map((ele, index) => {\r\n                                                                return (\r\n                                                                    <tr className={`table-row`} key={`semester_class_${index}`}>\r\n                                                                        <div className=\"row row-section mb-4 ml-2 mr-2\" onClick={() => { routeChangeVIewExerciseSubmission(ele) }}>\r\n                                                                            <div className=\"col-xl-4 col-md-4 mb-4\">\r\n                                                                                <img className=\"card-img\" src=\"http://res.cloudinary.com/djtmwajiu/image/upload/v1667395965/inl1eekblioz9s5iqed1.png\" alt=\"\" />\r\n                                                                            </div>\r\n                                                                            <div className=\"col-xl-8 col-md-8 mb-4\">\r\n                                                                                <h3 className=\" mb-2\" id=\"level-student\">{ele.name}</h3>\r\n                                                                                <h4 className=\" mb-2\" id=\"level-student\">Phần trăm đánh giá: {ele.level_name}</h4>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </tr>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 col-lg-12\">\r\n                    {\r\n                        function () {\r\n                            if (sections.sections.length <= 0) {\r\n                                return \"\"\r\n                            }\r\n                            else {\r\n                                if (sections.sections[0].teach_form === true) {\r\n                                    if (is_active === \"not_active\") {\r\n                                        return (\r\n                                            <iframe width=\"100%\" height=\"500\" src={link_record} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                                        )\r\n                                    }\r\n                                }\r\n                            }\r\n                        }()\r\n                    }\r\n                    </div>\r\n                </div>\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default SectionStudent;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getTutorialPageBySection } from \"../../common/service/TutorialPage/GetTutorialPageBySection\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IStateType, ITutorialPageState } from \"../../store/models/root.interface\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { putAttendanceByUserAndSection } from \"../../common/service/Attendance/PutAttendanceByUserAndSection\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\nconst ViewSectionStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const TutorialPages: ITutorialPageState = useSelector((state: IStateType) => state.tutorial_pages);\r\n\r\n    var id_y = localStorage.getItem('section_id');\r\n    \r\n    let section_id = 0;\r\n\r\n    if (id_y !== null) {\r\n        section_id = parseInt(id_y);\r\n    }\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    \r\n    let id = 0;\r\n\r\n    if (id_x !== null) {\r\n        id = parseInt(id_x);\r\n    }\r\n\r\n    const [count, setCount] = useState(1);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    function setChangeCount() {\r\n        let x = count;\r\n        let y = x + 1;\r\n        if (x < TutorialPages.tutorialPages.length){\r\n            console.log(\"Count\")\r\n            setCount(y);\r\n        }\r\n        console.log(count)\r\n    }\r\n\r\n    function setChangeCountBack() {\r\n        let x = count;\r\n        let y = x - 1;\r\n        if (x > 1){\r\n            setCount(y);\r\n        }\r\n    }\r\n\r\n    function handleChecked() {\r\n        const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n          });\r\n        dispatch(putAttendanceByUserAndSection(section_id,id, idx));\r\n    }\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getTutorialPageBySection(dispatch, section_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getTutorialPageBySection(dispatch, section_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, section_id]);\r\n    \r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> :  <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`}>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters justify-content-left\">\r\n                                            <h4 id=\"full-name\">{TutorialPages.tutorialPages.length !== 0 ? TutorialPages.tutorialPages[0].name : \"\"}</h4>\r\n                                        </div>\r\n                                        <div className=\"row no-gutters\">\r\n                                            {\r\n                                                function () {\r\n                                                    if (TutorialPages.tutorialPages.length < 1) {\r\n                                                        return \"\"\r\n                                                    }\r\n                                                    else {\r\n                                                        return <div className=\"card-body\" dangerouslySetInnerHTML={{ __html: TutorialPages.tutorialPages.sort((a, b) => a.number - b.number)[count-1].description }}>\r\n                                                        </div>\r\n                                                    }\r\n                                                }()\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"row no-gutters justify-content-right\">\r\n                                            {\r\n                                                function () {\r\n                                                    if (count < TutorialPages.tutorialPages.length) {\r\n                                                        if (count === 1){\r\n                                                            return (\r\n                                                                <button className={`btn btn-success left-margin`} onClick={() => {setChangeCount()}}>Trang tiếp</button>\r\n                                                            )\r\n                                                        }\r\n                                                        else if (count > 1){\r\n                                                            return (\r\n                                                                <> \r\n                                                                    <button className={`btn btn-warning left-margin`} onClick={() => {setChangeCountBack()}}>Trở về</button>\r\n                                                                    <button className={`btn btn-success left-margin`} onClick={() => {setChangeCount()}}>Trang tiếp</button>\r\n                                                                </>\r\n                                                            )\r\n                                                        }\r\n                                                        \r\n                                                    }\r\n                                                    else {\r\n                                                        return (\r\n                                                            <button className={`btn btn-warning left-margin`} onClick={() => {setChangeCountBack()}}>Trở về</button>\r\n                                                        )\r\n                                                    }\r\n                                                }()\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"row no-gutters justify-content-right\">\r\n                                            {\r\n                                                function() {\r\n                                                    if (count === TutorialPages.tutorialPages.length) {\r\n                                                        return (\r\n                                                            <button className={`btn btn-success left-margin mt-2`} onClick={() => {handleChecked()}}>Điểm danh</button>\r\n                                                        )\r\n                                                    }\r\n                                                }()\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewSectionStudent;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/art_type.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function putAttendanceByUserAndSection( section_id: number, student_id: number,idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-attendance/section-student/${section_id}/${student_id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putAttendanceByUserAndSection(section_id,student_id,  idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (xx => {\r\n                toast.update(idx, { render: \"Điểm danh thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Điểm danh không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataSuccess, fetchDataError, addUserGradeExerciseSubmission, removeUserGradeExerciseSubmissionAll} from \"../../../store/actions/user_grade_exercise_submission.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user_grade_contest {\r\n    student_id: number;\r\n    student_name: string;\r\n    exercise_name: string;\r\n    time_submit: string;\r\n    image_url: string;\r\n    description: string;\r\n    deadline: string;\r\n    exercise_submission_id: number;\r\n    feedback: string;\r\n    score: number;\r\n    time: string;\r\n}\r\nexport function getUserGradeExerciseByExerciseAndStudent(dispatch: any, exercise_id: number, student_id: number) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-grade-exercise-submission/exercise-student/${exercise_id}/${student_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getUserGradeExerciseByExerciseAndStudent(dispatch, exercise_id, student_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeUserGradeExerciseSubmissionAll())\r\n                console.log(data.body.UserGradeExerciseSubmission)\r\n                data.body.UserGradeExerciseSubmission.map((ele: any, index: any) => {\r\n                    var user_grade_contest: user_grade_contest = {\r\n                        student_id: ele.student_id,\r\n                        exercise_name: ele.exercise_name,\r\n                        time_submit: ele.time_submit,\r\n                        deadline: ele.deadline,\r\n                        description: ele.description,\r\n                        image_url: ele.image_url,\r\n                        exercise_submission_id: ele.exercise_submission_id,\r\n                        student_name: ele.student_name,\r\n                        feedback: ele.feedback,\r\n                        score: ele.score,\r\n                        time: ele.time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addUserGradeExerciseSubmission(user_grade_contest))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IRootPageStateType, IStateType, ITeacherRegisterQuantificationState, IUserGradeExerciseSubmissionState, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ManageStudent.css\"\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getUserGradeExerciseByExerciseAndStudent } from \"../../common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByExerciseStudent\";\r\n\r\nconst DetailExerciseStudent1: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const teacherRegisterQuantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const user_grade_exercise_submissions: IUserGradeExerciseSubmissionState = useSelector((state: IStateType) => state.user_grade_exercise_submissions);\r\n    console.log(users.teachers)\r\n    console.log(teacherRegisterQuantifications)\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    var id_y = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_y !== null) {\r\n        id = id_y;\r\n    }\r\n\r\n    var id_k = localStorage.getItem('exercise_id');\r\n    var exercise_id: number = 0;\r\n    if (id_k !== null) {\r\n        exercise_id = parseInt(id_k);\r\n    }\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    let percentage = user_grade_exercise_submissions.user_grade_exercise_submissions.length > 0 ? user_grade_exercise_submissions.user_grade_exercise_submissions[0].score : 0;\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getUserGradeExerciseByExerciseAndStudent(dispatch, exercise_id,id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getUserGradeExerciseByExerciseAndStudent(dispatch, exercise_id,id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, exercise_id, id]);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Bài tập\", \"Chi tiết\"));\r\n    }, [path.area, dispatch]);\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n        <div className=\"row\" id=\"search-box\">\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <div className=\"input-group\" id=\"search-content\">\r\n              <div className=\"form-outline\">\r\n                <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> : <Fragment>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Đề tài</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <p dangerouslySetInnerHTML={{ __html: user_grade_exercise_submissions.user_grade_exercise_submissions.length > 0 ? user_grade_exercise_submissions.user_grade_exercise_submissions[0].description : \"\" }}>\r\n                            </p>\r\n\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Thời gian nộp: <span> {user_grade_exercise_submissions.user_grade_exercise_submissions.length > 0 ? user_grade_exercise_submissions.user_grade_exercise_submissions[0].time_submit : \"\"}</span></h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-8 col-lg-8\">\r\n                    <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Bài làm của bé</h6>\r\n                    </div>\r\n                    <img className=\"card-img-top\" src={user_grade_exercise_submissions.user_grade_exercise_submissions.length > 0 ? user_grade_exercise_submissions.user_grade_exercise_submissions[0].image_url : \"\"} alt=\"\" />\r\n                </div>\r\n                <div className=\"col-xl-4 col-lg-4\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Điểm của bé</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <CircularProgressbar value={percentage} text={`${percentage}`} />;\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Nhận xét</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            {user_grade_exercise_submissions.user_grade_exercise_submissions.length > 0 ? user_grade_exercise_submissions.user_grade_exercise_submissions[0].feedback : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default DetailExerciseStudent1;\r\n","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport { editTeacher, setModificationState } from \"../../store/actions/users.action\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { postExerciseSubmission } from \"../../common/service/ExerciseSubmission/PostExerciseSubmission\";\r\n\r\nfunction FormSubmit(): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n\r\n    let users: IUserState = useSelector((state: IStateType) => state.users);\r\n    let user: IUser | null = users.selectedUser;\r\n\r\n    const isCreate: boolean = (users.modificationState === UserModificationStatus.Create);\r\n\r\n    if (!user || isCreate) {\r\n        user = { id: 0, username: \"\", email: \"\", status: \"\", password: \"\", firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: 0 }\r\n    }\r\n\r\n    var id_x = localStorage.getItem(\"exercise_description\");\r\n    let exercise_description: string = \"\";\r\n    if (id_x !== null) {\r\n        exercise_description = id_x;\r\n    }\r\n\r\n    var id_y = localStorage.getItem(\"id\");\r\n    let id: any = \"\";\r\n    if (id_y !== null) {\r\n        id = id_y;\r\n    }\r\n\r\n    var id_z = localStorage.getItem(\"exercise_id\");\r\n    let exercise_id: number = 0;\r\n    if (id_z !== null) {\r\n        exercise_id = parseInt(id_z);\r\n    }\r\n\r\n\r\n    async function saveUser(e: FormEvent<HTMLFormElement>): Promise<void> {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n        var url = await setImageAction();\r\n        let saveUserFn: Function = editTeacher;\r\n        saveForm(saveUserFn, url, idx);\r\n    }\r\n\r\n    function saveForm(saveFn: Function, url: string, idx: any): void {\r\n        if (user) {\r\n            dispatch(postExerciseSubmission({\r\n                student_id: id,\r\n                exercise_id: exercise_id,\r\n                image_url: url\r\n            }, idx))\r\n        }\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (image === null) as boolean;\r\n    }\r\n\r\n    const src = user.profile_image_url;\r\n\r\n    const [preview, setPreview] = useState(src)\r\n\r\n    const [image, setImage] = useState<any>();\r\n\r\n    const uploadPicture = (e: any) => {\r\n        setImage({\r\n            /* contains the preview, if you want to show the picture to the user\r\n                you can access it with this.state.currentPicture\r\n           */\r\n            picturePreview: URL.createObjectURL(e.target.files[0]),\r\n            /* this contains the file we want to send */\r\n            pictureAsFile: e.target.files[0]\r\n        })\r\n        setPreview(URL.createObjectURL(e.target.files[0]))\r\n    };\r\n\r\n    async function setImageAction() {\r\n        const formData = new FormData();\r\n        formData.append(\r\n            \"gifFile\",\r\n            image.pictureAsFile\r\n        );\r\n        // do your post request\r\n        const res = await fetch(\r\n            `${process.env.REACT_APP_API_URL}/cloudinary/gifs`, {\r\n            method: \"POST\",\r\n            body: formData\r\n        }\r\n        )\r\n        const data = await res.json()\r\n        return data.url_image\r\n\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow shadow-xx\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Đề bài</h6>\r\n                        </div>\r\n                        <ToastContainer />\r\n                        <div className=\"card-body\">\r\n                            <div className=\"col-xl-12 col-md-12 col-xs-12\" dangerouslySetInnerHTML={{ __html: exercise_description }}>\r\n\r\n                            </div>\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <label htmlFor=\"profile_image\">Chọn ảnh:</label>\r\n                                        <input type=\"file\" id=\"profile_image\" name=\"profile_image\" onChange={uploadPicture} />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <img src={preview} alt=\"Preview\" id=\"avatar\" />\r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default FormSubmit;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess } from \"../../../store/actions/exercise.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\n\r\nexport function postExerciseSubmission(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/exercise-submission`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postExerciseSubmission(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                dispatch(fetchDataSuccess(data))\r\n                toast.update(idx, { render: \"Nộp bài tập thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER , autoClose: 2000});\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Nộp bài tập không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport { editTeacher, setModificationState } from \"../../store/actions/users.action\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { postContestSubmission } from \"../../common/service/ContestSubmission/PostContestSubmission\";\r\n\r\nfunction FormSubmitContestStudent(): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n\r\n    let users: IUserState = useSelector((state: IStateType) => state.users);\r\n    let user: IUser | null = users.selectedUser;\r\n\r\n    const isCreate: boolean = (users.modificationState === UserModificationStatus.Create);\r\n\r\n    if (!user || isCreate) {\r\n        user = { id: 0, username: \"\", email: \"\", status: \"\", password: \"\", firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: 0 }\r\n    }\r\n\r\n    var id_x = localStorage.getItem(\"contest_description\");\r\n    let contest_description: string = \"\";\r\n    if (id_x !== null) {\r\n        contest_description = id_x;\r\n    }\r\n\r\n    var id_y = localStorage.getItem(\"contest_id\");\r\n    let contest_id: number = 0;\r\n    if (id_y !== null) {\r\n        contest_id = parseInt(id_y);\r\n    }\r\n\r\n    var id_z = localStorage.getItem(\"id\");\r\n    let id: any = \"\";\r\n    if (id_z !== null) {\r\n        id = id_z;\r\n    }\r\n\r\n\r\n    async function saveUser(e: FormEvent<HTMLFormElement>): Promise<void> {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n\r\n        var url = await setImageAction();\r\n        let saveUserFn: Function = editTeacher;\r\n        saveForm(saveUserFn, url, idx);\r\n    }\r\n\r\n    function saveForm(saveFn: Function, url: string, idx: any): void {\r\n        if (user) {\r\n            dispatch(postContestSubmission({\r\n                student_id: id,\r\n                contest_id: contest_id,\r\n                image_url: url\r\n            }, idx))\r\n        }\r\n    }\r\n\r\n\r\n    function cancelForm(): void {\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (image === null) as boolean;\r\n    }\r\n\r\n    const src = user.profile_image_url;\r\n\r\n    const [preview, setPreview] = useState(src)\r\n\r\n    const [image, setImage] = useState<any>();\r\n\r\n    const uploadPicture = (e: any) => {\r\n        setImage({\r\n            /* contains the preview, if you want to show the picture to the user\r\n                you can access it with this.state.currentPicture\r\n           */\r\n            picturePreview: URL.createObjectURL(e.target.files[0]),\r\n            /* this contains the file we want to send */\r\n            pictureAsFile: e.target.files[0]\r\n        })\r\n        setPreview(URL.createObjectURL(e.target.files[0]))\r\n    };\r\n\r\n    async function setImageAction() {\r\n        const formData = new FormData();\r\n        formData.append(\r\n            \"gifFile\",\r\n            image.pictureAsFile\r\n        );\r\n        // do your post request\r\n        const res = await fetch(\r\n            `${process.env.REACT_APP_API_URL}/cloudinary/gifs`, {\r\n            method: \"POST\",\r\n            body: formData\r\n        }\r\n        )\r\n        const data = await res.json()\r\n        return data.url_image\r\n\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow shadow-xx\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Đề bài</h6>\r\n                        </div>\r\n                        <ToastContainer />\r\n                        <div className=\"card-body\">\r\n                            <div className=\"col-xl-12 col-md-12 col-xs-12\" dangerouslySetInnerHTML={{ __html: contest_description }}>\r\n\r\n                            </div>\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <label htmlFor=\"profile_image\">Chọn ảnh:</label>\r\n                                        <input type=\"file\" id=\"profile_image\" name=\"profile_image\" onChange={uploadPicture} />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <img src={preview} alt=\"Preview\" id=\"avatar\" />\r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default FormSubmitContestStudent;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataSuccess } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\n\r\nexport function postContestSubmission(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest-submission`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postContestSubmission(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                dispatch(fetchDataSuccess(data))\r\n                toast.update(idx, { render: \"Nộp bài thi thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER , autoClose: 2000});\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Nộp bài thi không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Fragment, Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IStateType, IRootPageStateType, ITimeScheduleState } from \"../../store/models/root.interface\";\r\nimport {\r\n    clearSelectedProduct\r\n} from \"../../store/actions/products.action\";\r\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, ViewsDirective, ViewDirective } from \"@syncfusion/ej2-react-schedule\";\r\n\r\nimport \"@syncfusion/ej2-base/styles/material.css\";\r\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\r\nimport { getInfoMyClass } from \"../../common/service/MyClass/GetInfoMyClass\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst ScheduleClassStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const time_schedules: ITimeScheduleState = useSelector((state: IStateType) => state.time_schedules);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let data: object[] = []\r\n\r\n    time_schedules.timeSchedules.map((ele: any, index: any) => {\r\n        if (ele !== null && ele !== undefined) {\r\n            data.push({\r\n                Id: index,\r\n                Subject: `Buổi học ${index + 1}`,\r\n                StartTime: new Date(ele.start_time),\r\n                EndTime: new Date(ele.end_time),\r\n                IsAllDay: false\r\n            })\r\n        }\r\n        return 1\r\n    })\r\n\r\n    var id_x = localStorage.getItem('class_id')\r\n    let class_id: number = 0;\r\n    if (id_x !== null){\r\n        class_id = parseInt(id_x)\r\n    }\r\n\r\n\r\n    var id_y = localStorage.getItem('course_name')\r\n    let course_name: string = \"\";\r\n    if (id_y !== null){\r\n        course_name = id_y\r\n    }\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getInfoMyClass(dispatch, class_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getInfoMyClass(dispatch, class_id))\r\n            }\r\n        }\r\n    }, [dispatch, class_id, access_token, refresh_token]);\r\n\r\n    console.log(new Date(2018, 1, 15, 12, 30))\r\n\r\n    useEffect(() => {\r\n        dispatch(clearSelectedProduct());\r\n        dispatch(updateCurrentPath(\"Lịch học\", course_name));\r\n    }, [path.area, dispatch, course_name]);\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> :<Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\" >\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Lịch học chi tiết</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <ScheduleComponent height='550px' selectedDate={new Date()} eventSettings={{\r\n                                dataSource: data, fields: {\r\n                                    id: 'Id',\r\n                                    subject: { name: 'Subject' },\r\n                                    isAllDay: { name: 'IsAllDay' },\r\n                                    startTime: { name: 'StartTime' },\r\n                                    endTime: { name: 'EndTime' }\r\n                                }\r\n                            }}>\r\n\r\n                                <ViewsDirective>\r\n                                    <ViewDirective option='WorkWeek' startHour='07:00' endHour='22:00' />\r\n                                    <ViewDirective option='Week' startHour='07:00' endHour='22:00' />\r\n                                    <ViewDirective option='Month' showWeekend={false} />\r\n                                </ViewsDirective>\r\n                                <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\r\n                            </ScheduleComponent>;\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default ScheduleClassStudent;\r\n","import { fetchDataSuccess, fetchDataError, removeExerciseGradedAll, removeExerciseNotGradedAll, addExerciseNotGraded } from \"../../../store/actions/exercise_submission.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ExerciseSubmission {\r\n    id: any;\r\n    student_id: number;\r\n    exercise_id: number;\r\n    student_name: string;\r\n    exercise_name: string;\r\n    image_url: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getExerciseSubmissionById(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/exercise-submission/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getExerciseSubmissionById(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeExerciseGradedAll())\r\n                dispatch(removeExerciseNotGradedAll())\r\n                    var strDate_1 = data.create_time;\r\n                    var strDate_2 = data.update_time;\r\n                    var exercise_submission: ExerciseSubmission = {\r\n                        id: data.id,\r\n                        student_id: data.student_id,\r\n                        student_name: data.student_name,\r\n                        exercise_id: data.exercise_id,\r\n                        exercise_name: data.exercise_name,\r\n                        image_url: data.image_url,\r\n                        create_time: strDate_1,\r\n                        update_time: strDate_2\r\n                    }\r\n                    return dispatch(addExerciseNotGraded(exercise_submission));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, FormEvent, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IExerciseSubmissionState, IRootPageStateType, IStateType, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ManageStudent.css\"\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getExerciseSubmissionById } from \"../../common/service/ExerciseSubmission/GetExerciseSubmissionById\";\r\nimport { IUser, UserModificationStatus } from \"../../store/models/user.interface\";\r\nimport { editTeacher, setModificationState } from \"../../store/actions/users.action\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\nconst ViewExerciseSubmission: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const exercise_submissions: IExerciseSubmissionState = useSelector((state: IStateType) => state.exercise_submissions);\r\n\r\n    var id_y = localStorage.getItem('exercise_submission_id');\r\n    var exercise_submission_id: number = 0;\r\n    if (id_y !== null) {\r\n        exercise_submission_id = parseInt(id_y);\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getExerciseSubmissionById(dispatch, exercise_submission_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getExerciseSubmissionById(dispatch, exercise_submission_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, exercise_submission_id]);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Bài tập\", \"Chi tiết\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    let users: IUserState = useSelector((state: IStateType) => state.users);\r\n    let user: IUser | null = users.selectedUser;\r\n\r\n    const isCreate: boolean = (users.modificationState === UserModificationStatus.Create);\r\n\r\n    if (!user || isCreate) {\r\n        user = { id: 0, username: \"\", email: \"\", status: \"\", password: \"\", firstName: \"\", lastName: \"\", sex: \"\", phone: \"\", address: \"\", dateOfBirth: \"\", profile_image_url: \"\", createTime: \"\", parents: 0 }\r\n    }\r\n\r\n    async function saveUser(e: FormEvent<HTMLFormElement>): Promise<void> {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        var url = await setImageAction();\r\n        let saveUserFn: Function = editTeacher;\r\n        saveForm(saveUserFn, url);\r\n    }\r\n\r\n    function saveForm(saveFn: Function, url: string): void {\r\n        if (user) {\r\n            notify()\r\n        }\r\n    }\r\n\r\n    function notify() {\r\n        toast.info(\"Cập nhật thành công!\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 2000\r\n        });\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        dispatch(setModificationState(UserModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (image === null) as boolean;\r\n    }\r\n\r\n    const src = user.profile_image_url;\r\n\r\n    const [preview, setPreview] = useState(src)\r\n\r\n    const [image, setImage] = useState<any>();\r\n\r\n    const uploadPicture = (e: any) => {\r\n        setImage({\r\n            /* contains the preview, if you want to show the picture to the user\r\n                you can access it with this.state.currentPicture\r\n           */\r\n            picturePreview: URL.createObjectURL(e.target.files[0]),\r\n            /* this contains the file we want to send */\r\n            pictureAsFile: e.target.files[0]\r\n        })\r\n        setPreview(URL.createObjectURL(e.target.files[0]))\r\n    };\r\n\r\n    async function setImageAction() {\r\n        const formData = new FormData();\r\n        formData.append(\r\n            \"gifFile\",\r\n            image.pictureAsFile\r\n        );\r\n        // do your post request\r\n        const res = await fetch(\r\n            `${process.env.REACT_APP_API_URL}/cloudinary/gifs`, {\r\n            method: \"POST\",\r\n            body: formData\r\n        }\r\n        )\r\n        const data = await res.json()\r\n        return data.url_image\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Nộp bài</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row ml-4\">\r\n                                <form onSubmit={saveUser}>\r\n                                    <div className=\"form-row\">\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <label htmlFor=\"profile_image\">Chọn ảnh:</label>\r\n                                            <input type=\"file\" id=\"profile_image\" name=\"profile_image\" onChange={uploadPicture} />\r\n                                        </div>\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <img src={preview} alt=\"Preview\" id=\"avatar\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                    <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Bài làm của bé</h6>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <img className=\"exercise-submission-img\" src={exercise_submissions.exercise_not_gradeds.length > 0 ? exercise_submissions.exercise_not_gradeds[0].image_url : \"\"} alt=\"\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewExerciseSubmission;\r\n","import { ISemesterClassStudent, SemesterClassStudentModificationStatus } from \"../models/semester_class_student.interface\";\r\n\r\n// register_successfull_semester_class_students\r\nexport const ADD_NOT_PAYED_NOW: string = \"ADD_NOT_PAYED_NOW\";\r\nexport const EDIT_NOT_PAYED_NOW: string = \"EDIT_NOT_PAYED_NOW\";\r\nexport const REMOVE_NOT_PAYED_NOW: string = \"REMOVE_NOT_PAYED_NOW\";\r\nexport const CHANGE_NOT_PAYED_NOW_AMOUNT: string = \"CHANGE_NOT_PAYED_NOW_AMOUNT\";\r\nexport const CHANGE_NOT_PAYED_NOW_PENDING_EDIT: string = \"CHANGE_NOT_PAYED_NOW_PENDING_EDIT\";\r\nexport const CLEAR_NOT_PAYED_NOW_PENDING_EDIT: string = \"CLEAR_NOT_PAYED_NOW_PENDING_EDIT\";\r\nexport const REMOVE_NOT_PAYED_NOW_ALL: string = \"REMOVE_NOT_PAYED_NOW_ALL\";\r\nexport const INITIAL_NOT_PAYED_NOW: string = \"INITIAL_NOT_PAYED_NOW\";\r\n\r\n// not_register_semester_class_students\r\nexport const ADD_PAYED: string = \"ADD_PAYED\";\r\nexport const EDIT_PAYED: string = \"EDIT_PAYED\";\r\nexport const REMOVE_PAYED: string = \"REMOVE_PAYED\";\r\nexport const CHANGE_PAYED_AMOUNT: string = \"CHANGE_PAYED_AMOUNT\";\r\nexport const CHANGE_PAYED_PENDING_EDIT: string = \"CHANGE_PAYED_PENDING_EDIT\";\r\nexport const CLEAR_PAYED_PENDING_EDIT: string = \"CLEAR_PAYED_PENDING_EDIT\";\r\nexport const REMOVE_PAYED_ALL: string = \"REMOVE_PAYED_ALL\";\r\nexport const INITIAL_PAYED: string = \"INITIAL_PAYED\";\r\n\r\n\r\n// not_register_semester_class_students\r\nexport const ADD_NOT_PAYED: string = \"ADD_NOT_PAYED\";\r\nexport const EDIT_NOT_PAYED: string = \"EDIT_NOT_PAYED\";\r\nexport const REMOVE_NOT_PAYED: string = \"REMOVE_NOT_PAYED\";\r\nexport const CHANGE_NOT_PAYED_AMOUNT: string = \"CHANGE_NOT_PAYED_AMOUNT\";\r\nexport const CHANGE_NOT_PAYED_PENDING_EDIT: string = \"CHANGE_NOT_PAYED_PENDING_EDIT\";\r\nexport const CLEAR_NOT_PAYED_PENDING_EDIT: string = \"CLEAR_NOT_PAYED_PENDING_EDIT\";\r\nexport const REMOVE_NOT_PAYED_ALL: string = \"REMOVE_NOT_PAYED_ALL\";\r\nexport const INITIAL_NOT_PAYED: string = \"INITIAL_NOT_PAYED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(semester_class_student: ISemesterClassStudent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        semester_class_student\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSemesterClassStudentNotPayedNow(semester_class_student: ISemesterClassStudent): IInitialSemesterClassStudentNotPayedNowActionType {\r\n    return { type: INITIAL_NOT_PAYED_NOW, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function removeSemesterClassStudentNotPayedNowAll(): IRemoveSemesterClassStudentNotPayedNowAllActionType {\r\n    return { type: REMOVE_NOT_PAYED_NOW_ALL };\r\n}\r\n\r\nexport function addSemesterClassStudentNotPayedNow(semester_class_student: ISemesterClassStudent): IAddSemesterClassStudentNotPayedNowActionType {\r\n    return { type: ADD_NOT_PAYED_NOW, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function editSemesterClassStudentNotPayedNow(semester_class_student: ISemesterClassStudent): IEditSemesterClassStudentNotPayedNowActionType {\r\n    return { type: EDIT_NOT_PAYED_NOW, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function removeSemesterClassStudentNotPayedNow(id: any): IRemoveSemesterClassStudentNotPayedNowActionType {\r\n    return { type: REMOVE_NOT_PAYED_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClassStudentNotPayedNow(semester_class_student: ISemesterClassStudent): IChangeSelectedSemesterClassStudentNotPayedNowActionType {\r\n    return { type: CHANGE_NOT_PAYED_NOW_PENDING_EDIT, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function clearSelectedSemesterClassStudentNotPayedNow(): IClearSelectedSemesterClassStudentNotPayedNowActionType {\r\n    return { type: CLEAR_NOT_PAYED_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialSemesterClassStudentPayed(semester_class_student: ISemesterClassStudent): IInitialSemesterClassStudentPayedActionType {\r\n    return { type: INITIAL_PAYED, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function removeSemesterClassStudentPayedAll(): IRemoveSemesterClassStudentPayedAllActionType {\r\n    return { type: REMOVE_PAYED_ALL };\r\n}\r\n\r\nexport function addSemesterClassStudentPayed(semester_class_student: ISemesterClassStudent): IAddSemesterClassStudentPayedActionType {\r\n    return { type: ADD_PAYED, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function editSemesterClassStudentPayed(semester_class_student: ISemesterClassStudent): IEditSemesterClassStudentPayedActionType {\r\n    return { type: EDIT_PAYED, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function removeSemesterClassStudentPayed(id: any): IRemoveSemesterClassStudentPayedActionType {\r\n    return { type: REMOVE_PAYED, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClassStudentPayed(semester_class_student: ISemesterClassStudent): IChangeSelectedSemesterClassStudentPayedActionType {\r\n    return { type: CHANGE_PAYED_PENDING_EDIT, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function clearSelectedSemesterClassStudentPayed(): IClearSelectedSemesterClassStudentPayedActionType {\r\n    return { type: CLEAR_PAYED_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: SemesterClassStudentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n\r\nexport function initialSemesterClassStudentNotPayed(semester_class_student: ISemesterClassStudent): IInitialSemesterClassStudentNotPayedActionType {\r\n    return { type: INITIAL_NOT_PAYED, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function removeSemesterClassStudentNotPayedAll(): IRemoveSemesterClassStudentNotPayedAllActionType {\r\n    return { type: REMOVE_NOT_PAYED_ALL };\r\n}\r\n\r\nexport function addSemesterClassStudentNotPayed(semester_class_student: ISemesterClassStudent): IAddSemesterClassStudentNotPayedActionType {\r\n    return { type: ADD_NOT_PAYED, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function editSemesterClassStudentNotPayed(semester_class_student: ISemesterClassStudent): IEditSemesterClassStudentNotPayedActionType {\r\n    return { type: EDIT_NOT_PAYED, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function removeSemesterClassStudentNotPayed(id: any): IRemoveSemesterClassStudentNotPayedActionType {\r\n    return { type: REMOVE_NOT_PAYED, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClassStudentNotPayed(semester_class_student: ISemesterClassStudent): IChangeSelectedSemesterClassStudentNotPayedActionType {\r\n    return { type: CHANGE_NOT_PAYED_AMOUNT, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function clearSelectedSemesterClassStudentNotPayed(): IClearSelectedSemesterClassStudentNotPayedActionType {\r\n    return { type: CHANGE_NOT_PAYED_PENDING_EDIT };\r\n}\r\n\r\n// register_successfull_semester_class_students\r\ninterface IAddSemesterClassStudentNotPayedNowActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IEditSemesterClassStudentNotPayedNowActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IRemoveSemesterClassStudentNotPayedNowActionType { type: string, id: any };\r\ninterface IChangeSelectedSemesterClassStudentNotPayedNowActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IClearSelectedSemesterClassStudentNotPayedNowActionType { type: string };\r\ninterface IRemoveSemesterClassStudentNotPayedNowAllActionType { type: string }\r\ninterface IInitialSemesterClassStudentNotPayedNowActionType {type: string, semester_class_student: ISemesterClassStudent}\r\n\r\n// not_register_semester_class_students\r\ninterface IAddSemesterClassStudentPayedActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IEditSemesterClassStudentPayedActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IRemoveSemesterClassStudentPayedActionType { type: string, id: any };\r\ninterface IChangeSelectedSemesterClassStudentPayedActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IClearSelectedSemesterClassStudentPayedActionType { type: string };\r\ninterface IRemoveSemesterClassStudentPayedAllActionType { type: string }\r\ninterface IInitialSemesterClassStudentPayedActionType {type: string, semester_class_student: ISemesterClassStudent}\r\n\r\n\r\n// register_successfull_semester_class_students\r\ninterface IAddSemesterClassStudentNotPayedActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IEditSemesterClassStudentNotPayedActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IRemoveSemesterClassStudentNotPayedActionType { type: string, id: any };\r\ninterface IChangeSelectedSemesterClassStudentNotPayedActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IClearSelectedSemesterClassStudentNotPayedActionType { type: string };\r\ninterface IRemoveSemesterClassStudentNotPayedAllActionType { type: string }\r\ninterface IInitialSemesterClassStudentNotPayedActionType {type: string, semester_class_student: ISemesterClassStudent}\r\n\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  SemesterClassStudentModificationStatus};","import { fetchDataSuccess, fetchDataError, removeSemesterClassStudentNotPayedAll, removeSemesterClassStudentNotPayedNowAll, removeSemesterClassStudentPayedAll, addSemesterClassStudentNotPayed, addSemesterClassStudentNotPayedNow, addSemesterClassStudentPayed } from \"../../../store/actions/semester_class_student.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface SemesterClassStudent {\r\n    id: any;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: number;\r\n    semester_class_id: number;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    registration_expiration_time: string;\r\n    start_date: string;\r\n    price: number;\r\n    semester_name: string;\r\n    semester_id: number;\r\n    status: string;\r\n    image_url: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n    registration_deadline: string;\r\n}\r\nexport function getSemesterClassStudent(dispatch: any, student_id: number, course_id: number) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester-class/student-course/${student_id}/${course_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSemesterClassStudent(dispatch, student_id, course_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeSemesterClassStudentNotPayedAll())\r\n                dispatch(removeSemesterClassStudentNotPayedNowAll())\r\n                dispatch(removeSemesterClassStudentPayedAll())\r\n                console.log(data.body.semester_classes)\r\n                data.body.semester_classes.map((ele: any, index: any) => {\r\n                    var val: SemesterClassStudent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        course_name: ele.course_name,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semster_class_id,\r\n                        description: ele.description,\r\n                        registration_expiration_time: ele.registration_expiration_time,\r\n                        start_date: ele.start_date,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        schedule: ele.schedule,\r\n                        semester_id: ele.semester_id,\r\n                        status: ele.status,\r\n                        registration_deadline: ele.registration_time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (ele.status === \"Registed\") {\r\n                        dispatch(addSemesterClassStudentPayed(val))\r\n                    }\r\n                    else if (ele.status === \"Not register\") {\r\n                        dispatch(addSemesterClassStudentNotPayed(val))\r\n                    }\r\n                    else {\r\n                        dispatch(addSemesterClassStudentNotPayedNow(val))\r\n                    }\r\n                    return 1\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\nimport { ISemesterClassStudentState, IStateType } from \"../../store/models/root.interface\";\r\nimport { ISemesterClassStudent } from \"../../store/models/semester_class_student.interface\";\r\nimport \"./CourseListNew.css\"\r\n\r\nexport type semesterListProps = {\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction SemesterClassListNew(props: semesterListProps): JSX.Element {\r\n    const semester_class_student: ISemesterClassStudentState = useSelector((state: IStateType) => state.semester_class_student);\r\n    const [totalPage, setTotalPage] = useState(0)\r\n    const [element, setElement] = useState<ISemesterClassStudent[]>([])\r\n    const [filter, setFilter] = useState(\"0\")\r\n\r\n    console.log(semester_class_student.payed)\r\n\r\n    useEffect(() => {\r\n        let x = (semester_class_student.not_payed.length - (semester_class_student.not_payed.length) % 6) / 6;\r\n        if (x === 0) {\r\n            setElement(semester_class_student.not_payed)\r\n        }\r\n        else {\r\n            setElement(semester_class_student.not_payed.slice(0, 6))\r\n        }\r\n\r\n        setTotalPage((x + 1))\r\n    }, [semester_class_student.not_payed])\r\n\r\n    console.log((totalPage))\r\n\r\n    function handlePagination(count: number) {\r\n        console.log(count)\r\n        if (filter === \"0\") {\r\n            if (count === totalPage) {\r\n                setElement(semester_class_student.not_payed.slice(count * 6))\r\n            }\r\n            else {\r\n                setElement(semester_class_student.not_payed.slice(count * 6, count * 6 + 6))\r\n            }\r\n        }\r\n        else if (filter === \"1\") {\r\n            if (count === totalPage) {\r\n                setElement(semester_class_student.not_payed_now.slice(count * 6))\r\n            }\r\n            else {\r\n                setElement(semester_class_student.not_payed_now.slice(count * 6, count * 6 + 6))\r\n            }\r\n        }\r\n        else if (filter === \"2\") {\r\n            if (count === totalPage) {\r\n                setElement(semester_class_student.payed.slice(count * 6))\r\n            }\r\n            else {\r\n                setElement(semester_class_student.payed.slice(count * 6, count * 6 + 6))\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const history = useHistory();\r\n    const routeChange = (course: ISemesterClassStudent) => {\r\n        localStorage.removeItem('description_course');\r\n        localStorage.setItem('description_course', course.description);\r\n        localStorage.removeItem('course_id');\r\n        localStorage.setItem('course_id', course.course_id.toString())\r\n        localStorage.removeItem('course_name');\r\n        localStorage.setItem('course_name', course.course_name)\r\n        localStorage.removeItem('art_age_name');\r\n        localStorage.setItem('art_age_name', course.art_age_name.toString())\r\n        localStorage.removeItem('art_type_name');\r\n        localStorage.setItem('art_type_name', course.art_type_name.toString())\r\n        localStorage.removeItem('num_of_section');\r\n        localStorage.setItem('num_of_section', course.num_of_section.toString())\r\n        localStorage.removeItem('schedule');\r\n        localStorage.setItem('schedule', course.schedule.toString())\r\n        localStorage.removeItem('art_level_name');\r\n        localStorage.setItem('art_level_name', course.art_level_name.toString())\r\n        localStorage.removeItem('semester_class_name');\r\n        localStorage.setItem('semester_class_name', course.name.toString())\r\n        localStorage.removeItem('price');\r\n        localStorage.setItem('price', course.price.toString())\r\n        localStorage.removeItem('semester_class_id');\r\n        localStorage.setItem('semester_class_id', course.id.toString())\r\n        localStorage.removeItem('url_image');\r\n        localStorage.setItem('url_image', course.image_url.toString())\r\n        let path = '/semester-class/detail';\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    function handleChange(e: any) {\r\n        setFilter(e.target.value)\r\n    }\r\n\r\n    function handleFilter() {\r\n        if (filter === \"0\") {\r\n            let x = (semester_class_student.not_payed.length - (semester_class_student.not_payed.length) % 6) / 6;\r\n            if (x === 0) {\r\n                setElement(semester_class_student.not_payed)\r\n            }\r\n            else {\r\n                setElement(semester_class_student.not_payed.slice(0, 6))\r\n            }\r\n\r\n            setTotalPage((x + 1))\r\n        }\r\n        else if (filter === \"1\") {\r\n            let x = (semester_class_student.not_payed.length - (semester_class_student.not_payed.length) % 6) / 6;\r\n            if (x === 0) {\r\n                setElement(semester_class_student.payed)\r\n            }\r\n            else {\r\n                setElement(semester_class_student.payed.slice(0, 6))\r\n            }\r\n\r\n            setTotalPage((x + 1))\r\n        }\r\n        else if (filter === \"2\") {\r\n            let x = (semester_class_student.not_payed.length - (semester_class_student.not_payed.length) % 6) / 6;\r\n            if (x === 0) {\r\n                setElement(semester_class_student.not_payed_now)\r\n            }\r\n            else {\r\n                setElement(semester_class_student.not_payed_now.slice(0, 6))\r\n            }\r\n\r\n            setTotalPage((x + 1))\r\n        }\r\n    }\r\n\r\n    console.log(filter)\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"d-flex flex-row justify-content-between align-items-center filters\">\r\n                            <h6 className=\"ml-3\">Có {element.filter((val) => {\r\n                                if (props.value === \"\") {\r\n                                    return val;\r\n                                }\r\n                                else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))) {\r\n                                    return val;\r\n                                }\r\n                                return null\r\n                            }).length} kết quả</h6>\r\n                            <div className=\"right-sort\">\r\n                                <div className=\"sort-by mr-3\">\r\n                                    <span className=\"mr-1\">Lọc theo:</span>\r\n                                    <select name=\"cars\" id=\"cars\"\r\n                                        value={filter}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        <option value=\"0\">Chưa đăng kí</option>\r\n                                        <option value=\"1\">Đã đăng kí</option>\r\n                                        <option value=\"2\">Chưa thanh toán</option>\r\n                                    </select>\r\n                                    <button className=\"btn btn-outline-dark btn-sm ml-3 filter\" type=\"button\" onClick={() => { handleFilter() }}>Lọc&nbsp;<i className=\"fa fa-flask\"></i></button></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-1\">\r\n                    {\r\n                        element.filter((val) => {\r\n                            if (props.value === \"\") {\r\n                                return val;\r\n                            }\r\n                            else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))) {\r\n                                return val;\r\n                            }\r\n                            return null\r\n                        }).map((ele, index) => {\r\n                            if (ele === undefined) {\r\n                                return null\r\n                            }\r\n                            return (\r\n                                <div className=\"col-md-4\" onClick={() => { routeChange(ele) }}>\r\n                                    <div className=\"p-card bg-white p-2 rounded px-3 product-x\">\r\n                                        <div className=\"d-flex align-items-center credits\"><img src={ele.image_url} width=\"100%\" alt=\"\" /></div>\r\n                                        <h5 className=\"mt-2\">{ele.name}</h5><span className=\"badge badge-danger py-1 mb-2\">{ele.art_type_name} &amp; {ele.art_age_name} &amp; {ele.art_level_name}</span>\r\n                                        <span className=\"d-block schedule-x\">Lịch học: {ele.schedule}</span>\r\n                                        <span className=\"d-block\">Ngày bắt đầu học: {ele.start_date}</span>\r\n                                        <span className=\"d-block\">Số đăng kí tối đa: {ele.max_participant}</span>\r\n                                        <span className=\"d-block\">Ngày bắt đầu đăng kí: {ele.registration_deadline.substring(0, 10) + \" \" + ele.registration_deadline.substring(11, 19)}</span>\r\n                                        <span className=\"d-block mb-5\">Ngày hết hạn đăng kí: {ele.registration_expiration_time.substring(0, 10) + \" \" + ele.registration_expiration_time.substring(11, 19)}</span>\r\n                                        <div\r\n                                            className=\"d-flex justify-content-between stats\">\r\n                                            <div><i className=\"fa fa-calendar-o\"></i><span className=\"ml-2\">Giá: {ele.price} VND</span></div>\r\n                                            <div className=\"d-flex flex-row align-items-center\">\r\n                                                <div className=\"profiles\"><img className=\"rounded-circle\" src=\"https://i.imgur.com/4nUVGjW.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\" https://i.imgur.com/GHCtqgp.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\"https://i.imgur.com/UL0GS75.jpg\" alt=\"\" width=\"30\" /></div><span className=\"ml-3\">\r\n                                                    \r\n                                                </span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"d-flex justify-content-end text-right mt-2\">\r\n                    <nav>\r\n                        <ul className=\"pagination\">\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Previous\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&laquo;</span>\r\n                                </a>\r\n                            </li>\r\n                            {\r\n                                Array.from(Array((totalPage)).keys()).map((ele, idx) => {\r\n                                    return (\r\n                                        <li className=\"page-item\"><a className=\"page-link\" href=\"/\" onClick={(e) => { \r\n                                            e.preventDefault()\r\n                                            handlePagination(ele) }}>{ele + 1}</a></li>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Next\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&raquo;</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default SemesterClassListNew;\r\n","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./Discovery.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getSemesterClassStudent } from \"../../common/service/SemesterClassStudent/GetSemesterClassStudentNew\";\r\nimport SemesterClassListNew from \"./SemesterClassListNew\";\r\n\r\nconst SemesterClassStudentNew: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    //const semester_classs: ISemesterClassState = useSelector((state: IStateType) => state.semester_classes);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('course_id');\r\n    var course_id: number = 0;\r\n    if (id_y !== null) {\r\n        course_id = parseInt(id_y);\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getSemesterClassStudent(dispatch, id, course_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getSemesterClassStudent(dispatch, id, course_id))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token, course_id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp mở\", \"\"));\r\n    }, [dispatch, path.area])\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                {/* <div className=\"row\">\r\n                <TopCard title=\"ĐÃ ĐĂNG KÍ\" text={`${numberTeacherRegisterSuccessfullCount}`} icon=\"book\" class=\"primary\" />\r\n            </div> */}\r\n\r\n                <div className=\"row\" id=\"search-box\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"input-group\" id=\"search-content\">\r\n                            <div className=\"form-outline\">\r\n                                <input type=\"text\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                                    setSearchTerm(event.target.value)\r\n                                    console.log(searchTerm)\r\n                                }} />\r\n                            </div>\r\n                            <button type=\"button\" className=\"btn btn-primary\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <SemesterClassListNew value={searchTerm} />\r\n                </div>\r\n        </Fragment>\r\n    )\r\n\r\n\r\n};\r\n\r\nexport default SemesterClassStudentNew;\r\n","import { fetchDataSuccess, fetchDataError, addUserGradeExerciseSubmission, removeUserGradeExerciseSubmissionAll} from \"../../../store/actions/user_grade_exercise_submission.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface user_grade_contest {\r\n    student_id: number;\r\n    student_name: string;\r\n    exercise_name: string;\r\n    time_submit: string;\r\n    deadline: string;\r\n    description: string;\r\n    image_url: string;\r\n    exercise_submission_id: number;\r\n    feedback: string;\r\n    score: number;\r\n    time: string;\r\n}\r\nexport function getInfoFinalCourse(dispatch: any, student_id: number, classes_id: number) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/final-course/${student_id}/${classes_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getInfoFinalCourse(dispatch, student_id, classes_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeUserGradeExerciseSubmissionAll())\r\n                console.log(data.body.UserGradeExerciseSubmission)\r\n                localStorage.removeItem(\"final_grade\");\r\n                localStorage.setItem(\"final_grade\", data.body.final_grade)\r\n                data.body.UserGradeExerciseSubmission.map((ele: any, index: any) => {\r\n                    var user_grade_contest: user_grade_contest = {\r\n                        student_id: ele.student_id,\r\n                        exercise_name: ele.exercise_name,\r\n                        time_submit: ele.time_submit,\r\n                        deadline: ele.deadline,\r\n                        description: ele.description,\r\n                        image_url: ele.image_url,\r\n                        exercise_submission_id: ele.exercise_submission_id,\r\n                        student_name: ele.student_name,\r\n                        feedback: ele.feedback,\r\n                        score: ele.score,\r\n                        time: ele.time\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addUserGradeExerciseSubmission(user_grade_contest))\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { IClassHasRegisterJoinSemester, ClassHasRegisterJoinSemesterModificationStatus } from \"../models/class_has_register_join_semester.interface\";\r\nexport const ADD_CLASS_HAS_REGISTER_JOIN_SEMESTER: string = \"ADD_CLASS_HAS_REGISTER_JOIN_SEMESTER\";\r\nexport const EDIT_CLASS_HAS_REGISTER_JOIN_SEMESTER: string = \"EDIT_CLASS_HAS_REGISTER_JOIN_SEMESTER\";\r\nexport const REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER: string = \"REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER\";\r\nexport const CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_AMOUNT: string = \"CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_AMOUNT\";\r\nexport const CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT: string = \"CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT\";\r\nexport const CLEAR_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT: string = \"CLEAR_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER_ALL: string = \"REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER_ALL\";\r\nexport const INITIAL_CLASS_HAS_REGISTER_JOIN_SEMESTER: string = \"INITIAL_CLASS_HAS_REGISTER_JOIN_SEMESTER\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(class_has_register_join_semester: IClassHasRegisterJoinSemester) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        class_has_register_join_semester\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialClassHasRegisterJoinSemester(class_has_register_join_semester: IClassHasRegisterJoinSemester): IInitialClassHasRegisterJoinSemesterActionType {\r\n    return { type: INITIAL_CLASS_HAS_REGISTER_JOIN_SEMESTER, class_has_register_join_semester: class_has_register_join_semester };\r\n}\r\n\r\nexport function removeClassHasRegisterJoinSemesterAll(): IRemoveClassHasRegisterJoinSemesterAllActionType {\r\n    return { type: REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER_ALL };\r\n}\r\n\r\nexport function addClassHasRegisterJoinSemester(class_has_register_join_semester: IClassHasRegisterJoinSemester): IAddClassHasRegisterJoinSemesterActionType {\r\n    return { type: ADD_CLASS_HAS_REGISTER_JOIN_SEMESTER, class_has_register_join_semester: class_has_register_join_semester };\r\n}\r\n\r\nexport function editClassHasRegisterJoinSemester(class_has_register_join_semester: IClassHasRegisterJoinSemester): IEditClassHasRegisterJoinSemesterActionType {\r\n    return { type: EDIT_CLASS_HAS_REGISTER_JOIN_SEMESTER, class_has_register_join_semester: class_has_register_join_semester };\r\n}\r\n\r\nexport function removeClassHasRegisterJoinSemester(id: any): IRemoveClassHasRegisterJoinSemesterActionType {\r\n    return { type: REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER, id: id };\r\n}\r\n\r\nexport function changeSelectedClassHasRegisterJoinSemester(class_has_register_join_semester: IClassHasRegisterJoinSemester): IChangeSelectedClassHasRegisterJoinSemesterActionType {\r\n    return { type: CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT, class_has_register_join_semester: class_has_register_join_semester };\r\n}\r\n\r\nexport function clearSelectedClassHasRegisterJoinSemester(): IClearSelectedClassHasRegisterJoinSemesterActionType {\r\n    return { type: CLEAR_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ClassHasRegisterJoinSemesterModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddClassHasRegisterJoinSemesterActionType { type: string, class_has_register_join_semester: IClassHasRegisterJoinSemester };\r\ninterface IEditClassHasRegisterJoinSemesterActionType { type: string, class_has_register_join_semester: IClassHasRegisterJoinSemester };\r\ninterface IRemoveClassHasRegisterJoinSemesterActionType { type: string, id: any };\r\ninterface IChangeSelectedClassHasRegisterJoinSemesterActionType { type: string, class_has_register_join_semester: IClassHasRegisterJoinSemester };\r\ninterface IClearSelectedClassHasRegisterJoinSemesterActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ClassHasRegisterJoinSemesterModificationStatus};\r\ninterface IRemoveClassHasRegisterJoinSemesterAllActionType { type: string }\r\ninterface IInitialClassHasRegisterJoinSemesterActionType {type: string, class_has_register_join_semester: IClassHasRegisterJoinSemester}","import { fetchDataError, removeClassHasRegisterJoinSemesterAll, addClassHasRegisterJoinSemester } from \"../../../store/actions/class_has_register_join_semester.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ClassHasRegisterJoinSemester {\r\n    classes_id: number;\r\n    user_register_join_semester_id: number;\r\n    review_star: number;\r\n    student_feedback: string;\r\n    teacher_feedback: string;\r\n}\r\nexport function getInforClassHasRegisterJoinSemester(dispatch: any, classes_id: number, student_id: number) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/class-has-register-join-semester/${classes_id}/${student_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getInforClassHasRegisterJoinSemester(dispatch, classes_id, student_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(removeClassHasRegisterJoinSemesterAll())\r\n                var class_has_register_join_semester: ClassHasRegisterJoinSemester = {\r\n                    classes_id: data.classes_id,\r\n                    student_feedback: data.student_feedback,\r\n                    user_register_join_semester_id: data.user_register_join_semester_id,\r\n                    teacher_feedback: data.teacher_feedback,\r\n                    review_star: data.review_star\r\n                }\r\n                dispatch(addClassHasRegisterJoinSemester(class_has_register_join_semester))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChartLine } from \"../../common/components/CharLine\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IClassHasRegisterJoinSemesterState, IRootPageStateType, IStateType, IUserGradeExerciseSubmissionState } from \"../../store/models/root.interface\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getInfoFinalCourse } from \"../../common/service/FinalCourse/GetInfoFinalCourse\";\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { getInforClassHasRegisterJoinSemester } from \"../../common/service/ClassHasRegisterJoinSemester/GetInfoClassHasRegisterJoinSemester\";\r\n\r\nconst ReivewClassDone: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const user_grade_exercise_submission: IUserGradeExerciseSubmissionState = useSelector((state: IStateType) => state.user_grade_exercise_submissions);\r\n    const class_has_register_join_semester: IClassHasRegisterJoinSemesterState = useSelector((state: IStateType) => state.class_has_register_join_semesters);\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    var id_y = localStorage.getItem('id');\r\n    var student_id: number= 0;\r\n    if (id_y !== null) {\r\n        student_id = parseInt(id_y);\r\n    }\r\n\r\n    var id_t = localStorage.getItem('class_id');\r\n    var class_id: number = 0;\r\n    if (id_t !== null) {\r\n        class_id = parseInt(id_t);\r\n    }\r\n\r\n    var id_x = localStorage.getItem(\"final_grade\");\r\n    let final_grade = 0;\r\n    if (id_x !== null) {\r\n        final_grade = parseFloat(id_x);\r\n    }\r\n\r\n    var id_k = localStorage.getItem(\"course_name\");\r\n    let course_name = \"\";\r\n    if (id_k !== null) {\r\n        course_name = id_k;\r\n    }\r\n\r\n    let percentage = final_grade*10;\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getInfoFinalCourse(dispatch, student_id, class_id))\r\n                    trackPromise(getInforClassHasRegisterJoinSemester(dispatch, class_id, student_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getInfoFinalCourse(dispatch, student_id, class_id))\r\n                trackPromise(getInforClassHasRegisterJoinSemester(dispatch, class_id, student_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, student_id, class_id]);\r\n\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    \r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(course_name, \"Tổng kết\"));\r\n    }, [path.area, dispatch, course_name]);\r\n\r\n    let list_score_user_grade_exercise: number[] = [];\r\n    let list_name_user_grade_exercise: string[] = [];\r\n    user_grade_exercise_submission.user_grade_exercise_submissions.map((ele, idx) => {\r\n        list_score_user_grade_exercise.push(ele.score)\r\n        list_name_user_grade_exercise.push(ele.exercise_name)\r\n        return ele\r\n    })\r\n\r\n    const routeChangeReivewStart = () => {\r\n        let path = \"/classes/form-review\";\r\n        history.push({\r\n          pathname: path,\r\n      });\r\n      }\r\n\r\n\r\n    const labels = list_name_user_grade_exercise;\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Điểm kiểm tra',\r\n                data: list_score_user_grade_exercise,\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            }\r\n        ],\r\n    };\r\n\r\n    const history = useHistory();\r\n    const routeChange = () => {\r\n        let path = '/classes/exercise-student';\r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-8 col-md-8 mb-4\">\r\n                        <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row no-gutters\">\r\n                                    <ChartLine data={data} />\r\n                                </div>\r\n                                <div className=\"row justify-content-center\">\r\n                                    <button\r\n                                        className=\"btn btn-success btn-green\"\r\n                                        id=\"btn-into-class-student\"\r\n                                        onClick={() => { routeChange() }}\r\n                                    >\r\n                                        Xem chi tiết\r\n                                        <i className={`fas fa-arrow-right fa-1x`} id=\"icon-arrow-right\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 col-md-4 mb-4\"> \r\n                        <div className=\"card shadow mb-4\">\r\n                            <div className=\"card-header py-3\">\r\n                                <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Điểm tổng kết</h6>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <CircularProgressbar value={percentage} text={`${percentage}`} />;\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Nhận xét</h6>\r\n                        </div>\r\n                        <div className=\"card-body\"> \r\n                            {\r\n                                class_has_register_join_semester.class_has_register_join_semesters.map((ele, idx) => {\r\n                                    return (\r\n                                        <p dangerouslySetInnerHTML={{__html: ele.teacher_feedback}}></p>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                function () {\r\n                    if (class_has_register_join_semester.class_has_register_join_semesters.length > 0) {\r\n                        class_has_register_join_semester.class_has_register_join_semesters.map((ele, idx) => {\r\n                            if (ele !== undefined) {\r\n                                if (ele.review_star !== 0) {\r\n                                    return (\r\n                                        <div className=\"row\">\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"row justify-content-center\"> \r\n                                                    <button \r\n                                                        type=\"button\" \r\n                                                        className=\"btn btn-success\" \r\n                                                        onClick={() => {routeChangeReivewStart()}}\r\n                                                    >\r\n                                                        Nhận xét giáo viên\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            }\r\n                            return (<> </>)\r\n                        })\r\n                    }\r\n                }()\r\n            }\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default ReivewClassDone;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStateType, IUserGradeExerciseSubmissionState } from \"../../store/models/root.interface\";\r\nimport { ILesson } from \"../../store/models/lesson.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IUserGradeExerciseSubmission } from \"../../store/models/user_grade_exercise_submission.interface\";\r\n\r\nexport type lessonListProps = {\r\n    onSelect?: (lesson: ILesson) => void;\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\n\r\nfunction ExerciseSectionList1(props: lessonListProps): JSX.Element {\r\n    const user_grade_exercise_submission: IUserGradeExerciseSubmissionState = useSelector((state: IStateType) => state.user_grade_exercise_submissions);\r\n\r\n    const history = useHistory();\r\n    const onChangeRoute = (exercise: IUserGradeExerciseSubmission) =>{ \r\n        localStorage.removeItem('image_url_exercise')\r\n        localStorage.setItem('image_url_exercise', exercise.image_url)\r\n        localStorage.removeItem('score')\r\n        localStorage.setItem('score', exercise.score.toString())\r\n        localStorage.removeItem('description')\r\n        localStorage.setItem('description', exercise.description)\r\n        localStorage.removeItem('time_submit')\r\n        localStorage.setItem('time_submit', exercise.time_submit)\r\n        localStorage.removeItem('feedback')\r\n        localStorage.setItem('feedback', exercise.feedback)\r\n        let path = '/exercise/score'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n    \r\n    const lessonElements: (JSX.Element | null)[] = user_grade_exercise_submission.user_grade_exercise_submissions.map((exercise, index) => {\r\n        //console.log(strDate.substring(0, 10) + \" \" + strDate.substring(11,19))\r\n        if (!exercise) { return null; }\r\n        return (<tr className={`table-row`}\r\n            key={`lesson_${index}`} >\r\n            <th scope=\"row\" className=\"data-table\">{index + 1}</th>\r\n            <td className=\"data-table\">{exercise.exercise_name}</td>\r\n            <td className=\"data-table\">{exercise.deadline}</td>\r\n            <td className=\"data-table\">{exercise.time_submit}</td>\r\n            <td className=\"data-table\">{exercise.score}</td>\r\n            <td>\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-primary\" \r\n                    onClick={() => {\r\n                        onChangeRoute(exercise)\r\n                    }}\r\n                >\r\n                    Chi tiết\r\n                </button>\r\n            </td>\r\n        </tr>);\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"table-responsive portlet\">\r\n                <table className=\"table\">\r\n                    <thead id=\"table-thread-exercise-section\">\r\n                        <tr>\r\n                            <th scope=\"col\" className=\"name-row-table\">#</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Tên</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời hạn nộp</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Thời gian nộp</th>\r\n                            <th scope=\"col\" className=\"name-row-table\">Điểm</th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {lessonElements}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ExerciseSectionList1;\r\n","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getUserGradeExerciseByStudentAndClass } from \"../../common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByClassStudent\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport ExerciseSectionList1 from \"./ExerciseSectionList1\";\r\nimport \"./ManageStudent.css\"\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\n\r\nconst ExerciseStudentList1: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    var id_y = localStorage.getItem('student_id');\r\n    var student_id: number= 0;\r\n    if (id_y !== null) {\r\n        student_id = parseInt(id_y);\r\n    }\r\n\r\n    var id_z = localStorage.getItem('class_id');\r\n    var class_id: number= 0;\r\n    if (id_z !== null) {\r\n        class_id = parseInt(id_z);\r\n    }\r\n    \r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    dispatch(logout())\r\n                    trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id,student_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id,student_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, student_id, class_id]);\r\n\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                        </button>\r\n                    </div>\r\n                        </div>\r\n                    </div>\r\n                    <div> \r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\"  id=\"level-teacher\">Bài tập</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <ExerciseSectionList1 />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ExerciseStudentList1;\r\n","import React, { useState, FormEvent, Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { clearSelectedAnonymousNotification, setModificationStateAnonymousNotification, addAnonymousNotification } from \"../../store/actions/anonymous_notification.action\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { Rating } from \"react-simple-star-rating\";\r\nimport { IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { putReviewClassByStudent } from \"../../common/service/ClassHasRegisterJoinSemester/PutReviewClassByStudent\";\r\n\r\n\r\nfunction ReviewStart(): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n\r\n    const [formState, setFormState] = useState({\r\n        review: { error: \"\", value: \"\" }\r\n    });\r\n\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    \r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Đánh giá\", \"\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        let saveUserFn: Function =  addAnonymousNotification ;\r\n        saveForm(saveUserFn);\r\n    }\r\n\r\n    function saveForm(saveFn: Function): void {\r\n            const idx = toast.loading(\"Đang xử lý yêu cầu. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            console.log(idx)\r\n            dispatch(putReviewClassByStudent({\r\n                classes_id: localStorage.getItem('class_id'),\r\n                user_register_join_semester_id: localStorage.getItem('user_register_join_semester_id'),\r\n                student_feedback: formState.review.value,\r\n                review_star: rating\r\n            }, idx))\r\n\r\n            setTimeout(function () {\r\n                routeHome();\r\n            }, 2000);\r\n\r\n            dispatch(clearSelectedAnonymousNotification());\r\n            dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.None));\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.review.error || !formState.review.value ) as boolean;\r\n    }\r\n\r\n    const [rating, setRating] = useState(0) // initial rating value\r\n\r\n    // Catch Rating value\r\n    const handleRating = (rate: number) => {\r\n      setRating(rate)\r\n      // other logic\r\n    }\r\n\r\n    const history = useHistory();\r\n    function routeHome() {\r\n        let path = `/classes`;\r\n        history.push(path);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow shadow-xx\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">Tạo nhận xét lớp</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-group\">\r\n                                    <label>Đánh giá</label>\r\n                                    <Rating\r\n                                      onClick={handleRating}\r\n                                      ratingValue={rating}\r\n                                      showTooltip\r\n                                      tooltipArray={['Terrible', 'Bad', 'Average', 'Great', 'Prefect']}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_review\"\r\n                                        value={formState.review.value}\r\n                                        field=\"review\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={20000}\r\n                                        label=\"Nhận xét\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ReviewStart;\r\n","import { ISemesterClassParent, SemesterClassParentModificationStatus } from \"../models/semester_class_parent.interface\";\r\n\r\n// register_successfull_semester_class_parents\r\nexport const ADD_NOT_PAYED_NOW: string = \"ADD_NOT_PAYED_NOW\";\r\nexport const EDIT_NOT_PAYED_NOW: string = \"EDIT_NOT_PAYED_NOW\";\r\nexport const REMOVE_NOT_PAYED_NOW: string = \"REMOVE_NOT_PAYED_NOW\";\r\nexport const CHANGE_NOT_PAYED_NOW_AMOUNT: string = \"CHANGE_NOT_PAYED_NOW_AMOUNT\";\r\nexport const CHANGE_NOT_PAYED_NOW_PENDING_EDIT: string = \"CHANGE_NOT_PAYED_NOW_PENDING_EDIT\";\r\nexport const CLEAR_NOT_PAYED_NOW_PENDING_EDIT: string = \"CLEAR_NOT_PAYED_NOW_PENDING_EDIT\";\r\nexport const REMOVE_NOT_PAYED_NOW_ALL: string = \"REMOVE_NOT_PAYED_NOW_ALL\";\r\nexport const INITIAL_NOT_PAYED_NOW: string = \"INITIAL_NOT_PAYED_NOW\";\r\n\r\n// not_register_semester_class_parents\r\nexport const ADD_PAYED: string = \"ADD_PAYED\";\r\nexport const EDIT_PAYED: string = \"EDIT_PAYED\";\r\nexport const REMOVE_PAYED: string = \"REMOVE_PAYED\";\r\nexport const CHANGE_PAYED_AMOUNT: string = \"CHANGE_PAYED_AMOUNT\";\r\nexport const CHANGE_PAYED_PENDING_EDIT: string = \"CHANGE_PAYED_PENDING_EDIT\";\r\nexport const CLEAR_PAYED_PENDING_EDIT: string = \"CLEAR_PAYED_PENDING_EDIT\";\r\nexport const REMOVE_PAYED_ALL: string = \"REMOVE_PAYED_ALL\";\r\nexport const INITIAL_PAYED: string = \"INITIAL_PAYED\";\r\n\r\n\r\n// not_register_semester_class_parents\r\nexport const ADD_NOT_PAYED: string = \"ADD_NOT_PAYED\";\r\nexport const EDIT_NOT_PAYED: string = \"EDIT_NOT_PAYED\";\r\nexport const REMOVE_NOT_PAYED: string = \"REMOVE_NOT_PAYED\";\r\nexport const CHANGE_NOT_PAYED_AMOUNT: string = \"CHANGE_NOT_PAYED_AMOUNT\";\r\nexport const CHANGE_NOT_PAYED_PENDING_EDIT: string = \"CHANGE_NOT_PAYED_PENDING_EDIT\";\r\nexport const CLEAR_NOT_PAYED_PENDING_EDIT: string = \"CLEAR_NOT_PAYED_PENDING_EDIT\";\r\nexport const REMOVE_NOT_PAYED_ALL: string = \"REMOVE_NOT_PAYED_ALL\";\r\nexport const INITIAL_NOT_PAYED: string = \"INITIAL_NOT_PAYED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(semester_class_parent: ISemesterClassParent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        semester_class_parent\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSemesterClassParentNotPayedNow(semester_class_parent: ISemesterClassParent): IInitialSemesterClassParentNotPayedNowActionType {\r\n    return { type: INITIAL_NOT_PAYED_NOW, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function removeSemesterClassParentNotPayedNowAll(): IRemoveSemesterClassParentNotPayedNowAllActionType {\r\n    return { type: REMOVE_NOT_PAYED_NOW_ALL };\r\n}\r\n\r\nexport function addSemesterClassParentNotPayedNow(semester_class_parent: ISemesterClassParent): IAddSemesterClassParentNotPayedNowActionType {\r\n    return { type: ADD_NOT_PAYED_NOW, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function editSemesterClassParentNotPayedNow(semester_class_parent: ISemesterClassParent): IEditSemesterClassParentNotPayedNowActionType {\r\n    return { type: EDIT_NOT_PAYED_NOW, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function removeSemesterClassParentNotPayedNow(id: any): IRemoveSemesterClassParentNotPayedNowActionType {\r\n    return { type: REMOVE_NOT_PAYED_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClassParentNotPayedNow(semester_class_parent: ISemesterClassParent): IChangeSelectedSemesterClassParentNotPayedNowActionType {\r\n    return { type: CHANGE_NOT_PAYED_NOW_PENDING_EDIT, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function clearSelectedSemesterClassParentNotPayedNow(): IClearSelectedSemesterClassParentNotPayedNowActionType {\r\n    return { type: CLEAR_NOT_PAYED_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialSemesterClassParentPayed(semester_class_parent: ISemesterClassParent): IInitialSemesterClassParentPayedActionType {\r\n    return { type: INITIAL_PAYED, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function removeSemesterClassParentPayedAll(): IRemoveSemesterClassParentPayedAllActionType {\r\n    return { type: REMOVE_PAYED_ALL };\r\n}\r\n\r\nexport function addSemesterClassParentPayed(semester_class_parent: ISemesterClassParent): IAddSemesterClassParentPayedActionType {\r\n    return { type: ADD_PAYED, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function editSemesterClassParentPayed(semester_class_parent: ISemesterClassParent): IEditSemesterClassParentPayedActionType {\r\n    return { type: EDIT_PAYED, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function removeSemesterClassParentPayed(id: any): IRemoveSemesterClassParentPayedActionType {\r\n    return { type: REMOVE_PAYED, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClassParentPayed(semester_class_parent: ISemesterClassParent): IChangeSelectedSemesterClassParentPayedActionType {\r\n    return { type: CHANGE_PAYED_PENDING_EDIT, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function clearSelectedSemesterClassParentPayed(): IClearSelectedSemesterClassParentPayedActionType {\r\n    return { type: CLEAR_PAYED_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: SemesterClassParentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n\r\nexport function initialSemesterClassParentNotPayed(semester_class_parent: ISemesterClassParent): IInitialSemesterClassParentNotPayedActionType {\r\n    return { type: INITIAL_NOT_PAYED, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function removeSemesterClassParentNotPayedAll(): IRemoveSemesterClassParentNotPayedAllActionType {\r\n    return { type: REMOVE_NOT_PAYED_ALL };\r\n}\r\n\r\nexport function addSemesterClassParentNotPayed(semester_class_parent: ISemesterClassParent): IAddSemesterClassParentNotPayedActionType {\r\n    return { type: ADD_NOT_PAYED, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function editSemesterClassParentNotPayed(semester_class_parent: ISemesterClassParent): IEditSemesterClassParentNotPayedActionType {\r\n    return { type: EDIT_NOT_PAYED, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function removeSemesterClassParentNotPayed(id: any): IRemoveSemesterClassParentNotPayedActionType {\r\n    return { type: REMOVE_NOT_PAYED, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClassParentNotPayed(semester_class_parent: ISemesterClassParent): IChangeSelectedSemesterClassParentNotPayedActionType {\r\n    return { type: CHANGE_NOT_PAYED_AMOUNT, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function clearSelectedSemesterClassParentNotPayed(): IClearSelectedSemesterClassParentNotPayedActionType {\r\n    return { type: CHANGE_NOT_PAYED_PENDING_EDIT };\r\n}\r\n\r\n// register_successfull_semester_class_parents\r\ninterface IAddSemesterClassParentNotPayedNowActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IEditSemesterClassParentNotPayedNowActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IRemoveSemesterClassParentNotPayedNowActionType { type: string, id: any };\r\ninterface IChangeSelectedSemesterClassParentNotPayedNowActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IClearSelectedSemesterClassParentNotPayedNowActionType { type: string };\r\ninterface IRemoveSemesterClassParentNotPayedNowAllActionType { type: string }\r\ninterface IInitialSemesterClassParentNotPayedNowActionType {type: string, semester_class_parent: ISemesterClassParent}\r\n\r\n// not_register_semester_class_parents\r\ninterface IAddSemesterClassParentPayedActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IEditSemesterClassParentPayedActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IRemoveSemesterClassParentPayedActionType { type: string, id: any };\r\ninterface IChangeSelectedSemesterClassParentPayedActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IClearSelectedSemesterClassParentPayedActionType { type: string };\r\ninterface IRemoveSemesterClassParentPayedAllActionType { type: string }\r\ninterface IInitialSemesterClassParentPayedActionType {type: string, semester_class_parent: ISemesterClassParent}\r\n\r\n\r\n// register_successfull_semester_class_parents\r\ninterface IAddSemesterClassParentNotPayedActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IEditSemesterClassParentNotPayedActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IRemoveSemesterClassParentNotPayedActionType { type: string, id: any };\r\ninterface IChangeSelectedSemesterClassParentNotPayedActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IClearSelectedSemesterClassParentNotPayedActionType { type: string };\r\ninterface IRemoveSemesterClassParentNotPayedAllActionType { type: string }\r\ninterface IInitialSemesterClassParentNotPayedActionType {type: string, semester_class_parent: ISemesterClassParent}\r\n\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  SemesterClassParentModificationStatus};","import { fetchDataSuccess, fetchDataError, removeSemesterClassParentNotPayedAll, removeSemesterClassParentNotPayedNowAll, removeSemesterClassParentPayedAll, addSemesterClassParentNotPayed, addSemesterClassParentNotPayedNow, addSemesterClassParentPayed } from \"../../../store/actions/semester_class_parent.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface SemesterClassParent {\r\n    id: any;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: number;\r\n    semester_class_id: number;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    semester_name: string;\r\n    semester_id: number;\r\n    status: string;\r\n    image_url: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n    start_date: string;\r\n    registration_expiration_time: string;\r\n    registration_deadline: string;\r\n    student_registered_name: string[];\r\n    student_registered_id: number[];\r\n}\r\nexport function getSemesterClassByParentCourse(dispatch: any, parent_id: number, course_id: number) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester-class/parent-course/${parent_id}/${course_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSemesterClassByParentCourse(dispatch, parent_id, course_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeSemesterClassParentNotPayedAll())\r\n                dispatch(removeSemesterClassParentNotPayedNowAll())\r\n                dispatch(removeSemesterClassParentPayedAll())\r\n                console.log(data.body.semester_classes)\r\n                data.body.semester_classes.map((ele: any, index: any) => {\r\n                    var val: SemesterClassParent = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        course_name: ele.course_name,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semster_class_id,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        start_date: ele.start_date,\r\n                        registration_expiration_time: ele.registration_expiration_time,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        schedule: ele.schedule,\r\n                        semester_id: ele.semester_id,\r\n                        status: ele.status,\r\n                        registration_deadline: ele.registration_time,\r\n                        student_registered_id: ele.student_registered_id,\r\n                        student_registered_name: ele.student_registered_name\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    if (ele.status === \"Payed\") {\r\n                        dispatch(addSemesterClassParentPayed(val))\r\n                    }\r\n                    else if (ele.status === \"Not Payed\") {\r\n                        dispatch(addSemesterClassParentNotPayed(val))\r\n                    }\r\n                    else {\r\n                        dispatch(addSemesterClassParentNotPayedNow(val))\r\n                    }\r\n                    return 1\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\nimport { ISemesterClassParentState, IStateType } from \"../../store/models/root.interface\";\r\nimport { ISemesterClassParent } from \"../../store/models/semester_class_parent.interface\";\r\nimport \"./CourseNewTest.css\"\r\n\r\nexport type semesterListProps = {\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n};\r\n\r\nfunction SemesterClassNewList(props: semesterListProps): JSX.Element {\r\n    const semester_class_parent: ISemesterClassParentState = useSelector((state: IStateType) => state.semester_class_parent);\r\n    const [totalPage, setTotalPage] = useState(0)\r\n    const [element, setElement] = useState<ISemesterClassParent[]>([])\r\n    const [filter, setFilter] = useState(\"0\")\r\n\r\n    useEffect(() => {\r\n        let x = (semester_class_parent.not_payed.length - (semester_class_parent.not_payed.length) % 10) / 10;\r\n        if (x === 0) {\r\n            setElement(semester_class_parent.not_payed)\r\n        }\r\n        else {\r\n            setElement(semester_class_parent.not_payed.slice(0, 10))\r\n        }\r\n\r\n        setTotalPage((x + 1))\r\n    }, [semester_class_parent.not_payed])\r\n\r\n    console.log((totalPage))\r\n\r\n    function handlePagination(count: number) {\r\n        console.log(count)\r\n        if (filter === \"0\") {\r\n            if (count === totalPage) {\r\n                setElement(semester_class_parent.not_payed.slice(count * 10))\r\n            }\r\n            else {\r\n                setElement(semester_class_parent.not_payed.slice(count * 10, count * 10 + 10))\r\n            }\r\n        }\r\n        else if (filter === \"1\") {\r\n            if (count === totalPage) {\r\n                setElement(semester_class_parent.not_payed_now.slice(count * 10))\r\n            }\r\n            else {\r\n                setElement(semester_class_parent.not_payed_now.slice(count * 10, count * 10 + 10))\r\n            }\r\n        }\r\n        else if (filter === \"2\") {\r\n            if (count === totalPage) {\r\n                setElement(semester_class_parent.payed.slice(count * 10))\r\n            }\r\n            else {\r\n                setElement(semester_class_parent.payed.slice(count * 10, count * 10 + 10))\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const history = useHistory();\r\n    const routeChange = (course: ISemesterClassParent) => {\r\n        localStorage.removeItem('description_course');\r\n        localStorage.setItem('description_course', course.description);\r\n        localStorage.removeItem('course_id');\r\n        localStorage.setItem('course_id', course.course_id.toString())\r\n        localStorage.removeItem('course_name');\r\n        localStorage.setItem('course_name', course.course_name)\r\n        localStorage.removeItem('art_age_name');\r\n        localStorage.setItem('art_age_name', course.art_age_name.toString())\r\n        localStorage.removeItem('art_type_name');\r\n        localStorage.setItem('art_type_name', course.art_type_name.toString())\r\n        localStorage.removeItem('num_of_section');\r\n        localStorage.setItem('num_of_section', course.num_of_section.toString())\r\n        localStorage.removeItem('schedule');\r\n        localStorage.setItem('schedule', course.schedule.toString())\r\n        localStorage.removeItem('art_level_name');\r\n        localStorage.setItem('art_level_name', course.art_level_name.toString())\r\n        localStorage.removeItem('semester_class_name');\r\n        localStorage.setItem('semester_class_name', course.name.toString())\r\n        localStorage.removeItem('price');\r\n        localStorage.setItem('price', course.price.toString())\r\n        localStorage.removeItem('semester_class_id');\r\n        localStorage.setItem('semester_class_id', course.id.toString())\r\n        localStorage.removeItem('url_image');\r\n        localStorage.setItem('url_image', course.image_url.toString())\r\n        let path = '/semester-class/detail';\r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    function handleChange(e: any) {\r\n        setFilter(e.target.value)\r\n    }\r\n\r\n    function handleFilter() {\r\n        if (filter === \"0\") {\r\n            let x = (semester_class_parent.not_payed.length - (semester_class_parent.not_payed.length) % 10) / 10;\r\n            if (x === 0) {\r\n                setElement(semester_class_parent.not_payed)\r\n            }\r\n            else {\r\n                setElement(semester_class_parent.not_payed.slice(0, 10))\r\n            }\r\n\r\n            setTotalPage((x + 1))\r\n        }\r\n        else if (filter === \"1\") {\r\n            let x = (semester_class_parent.not_payed.length - (semester_class_parent.not_payed.length) % 10) / 10;\r\n            if (x === 0) {\r\n                setElement(semester_class_parent.payed)\r\n            }\r\n            else {\r\n                setElement(semester_class_parent.payed.slice(0, 10))\r\n            }\r\n\r\n            setTotalPage((x + 1))\r\n        }\r\n        else if (filter === \"2\") {\r\n            let x = (semester_class_parent.not_payed.length - (semester_class_parent.not_payed.length) % 10) / 10;\r\n            if (x === 0) {\r\n                setElement(semester_class_parent.not_payed_now)\r\n            }\r\n            else {\r\n                setElement(semester_class_parent.not_payed_now.slice(0, 10))\r\n            }\r\n\r\n            setTotalPage((x + 1))\r\n        }\r\n    }\r\n\r\n    console.log(filter)\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"d-flex flex-row justify-content-between align-items-center filters\">\r\n                            <h6 className=\"ml-3\">Có {element.filter((val) => {\r\n                                if (props.value === \"\") {\r\n                                    return val;\r\n                                }\r\n                                else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))) {\r\n                                    return val;\r\n                                }\r\n                                return null\r\n                            }).length} kết quả</h6>\r\n                            <div className=\"right-sort\">\r\n                                <div className=\"sort-by mr-3\">\r\n                                    <span className=\"mr-1\">Lọc theo:</span>\r\n                                    <select name=\"cars\" id=\"cars\"\r\n                                        value={filter}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        <option value=\"0\">Chưa đăng kí</option>\r\n                                        <option value=\"1\">Đã đăng kí</option>\r\n                                        <option value=\"2\">Chưa thanh toán</option>\r\n                                    </select>\r\n                                    <button className=\"btn btn-outline-dark btn-sm ml-3 filter\" type=\"button\" onClick={() => { handleFilter() }}>Lọc&nbsp;<i className=\"fa fa-flask\"></i></button></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-1\">\r\n                    {\r\n                        element.filter((val) => {\r\n                            if (props.value === \"\") {\r\n                                return val;\r\n                            }\r\n                            else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))) {\r\n                                return val;\r\n                            }\r\n                            return null\r\n                        }).map((ele, index) => {\r\n                            if (ele === undefined) {\r\n                                return null\r\n                            }\r\n                            return (\r\n                                <div className=\"col-md-4\" onClick={() => { routeChange(ele) }}>\r\n                                    <div className=\"p-card bg-white p-2 rounded px-3 product-x\">\r\n                                        <div className=\"d-flex align-items-center credits\"><img src={ele.image_url} width=\"100%\" alt=\"\" /></div>\r\n                                        <h5 className=\"mt-2\">{ele.name}</h5><span className=\"badge badge-danger py-1 mb-2\">{ele.art_type_name} &amp; {ele.art_age_name} &amp; {ele.art_level_name}</span>\r\n                                        <span className=\"d-block schedule-x\">Lịch học: {ele.schedule}</span>\r\n                                        <span className=\"d-block\">Ngày bắt đầu học: {ele.start_date}</span>\r\n                                        <span className=\"d-block\">Số đăng kí tối đa: {ele.max_participant}</span>\r\n                                        <span className=\"d-block\">Ngày bắt đầu đăng kí: {ele.registration_deadline.substring(0, 10) + \" \" + ele.registration_deadline.substring(11, 19)}</span>\r\n                                        <span className=\"d-block mb-5\">Ngày hết hạn đăng kí: {ele.registration_expiration_time.substring(0, 10) + \" \" + ele.registration_expiration_time.substring(11, 19)}</span>\r\n                                        <div\r\n                                            className=\"d-flex justify-content-between stats\">\r\n                                            <div><i className=\"fa fa-calendar-o\"></i><span className=\"ml-2\">Giá: {ele.price} VND</span></div>\r\n                                            <div className=\"d-flex flex-row align-items-center\">\r\n                                                <div className=\"profiles\"><img className=\"rounded-circle\" src=\"https://i.imgur.com/4nUVGjW.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\" https://i.imgur.com/GHCtqgp.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\"https://i.imgur.com/UL0GS75.jpg\" alt=\"\" width=\"30\" /></div><span className=\"ml-3\">\r\n                                                    {\r\n                                                        function () {\r\n                                                            if (filter === \"2\") {\r\n                                                                if (ele.student_registered_id !== undefined && ele.student_registered_id !== null) {\r\n                                                                    let xx = \"\"\r\n                                                                    ele.student_registered_name.map((elex, idxx) => {\r\n                                                                        if (idxx < ele.student_registered_id.length - 1) {\r\n                                                                            xx  +=  elex + \",\"\r\n                                                                        }\r\n                                                                        else {\r\n                                                                            xx += ele\r\n                                                                        }\r\n                                                                        return null\r\n                                                                    })\r\n                                                                    return xx\r\n                                                                }\r\n                                                                else {\r\n                                                                    return 0\r\n                                                                }\r\n                                                            }\r\n                                                        }()\r\n                                                    }\r\n                                                </span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"d-flex justify-content-end text-right mt-2\">\r\n                    <nav>\r\n                        <ul className=\"pagination\">\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Previous\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&laquo;</span>\r\n                                </a>\r\n                            </li>\r\n                            {\r\n                                Array.from(Array((totalPage)).keys()).map((ele, idx) => {\r\n                                    return (\r\n                                        <li className=\"page-item\"><a className=\"page-link\" href=\"/\" onClick={(e) => { \r\n                                            e.preventDefault()\r\n                                            handlePagination(ele) }}>{ele + 1}</a></li>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Next\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&raquo;</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default SemesterClassNewList;\r\n","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./Discovery.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getSemesterClassByParentCourse } from \"../../common/service/SemesterClasssParent/GetSemesterClassByParentCourse\";\r\nimport SemesterClassNewList from \"./SemesterClassNewList\";\r\n\r\nconst SemesterClassParentNew: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    //const semester_classs: ISemesterClassState = useSelector((state: IStateType) => state.semester_classes);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('course_id');\r\n    var course_id: number = 0;\r\n    if (id_y !== null) {\r\n        course_id = parseInt(id_y);\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getSemesterClassByParentCourse(dispatch, id, course_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getSemesterClassByParentCourse(dispatch, id, course_id))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token, course_id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp mở\", \"\"));\r\n    }, [dispatch, path.area])\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                {/* <div className=\"row\">\r\n                <TopCard title=\"ĐÃ ĐĂNG KÍ\" text={`${numberTeacherRegisterSuccessfullCount}`} icon=\"book\" class=\"primary\" />\r\n            </div> */}\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n            <div className=\"col-xl-12 col-lg-12\">\r\n                <div className=\"input-group\" id=\"search-content\">\r\n                    <div className=\"form-outline\">\r\n                        <input type=\"text\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                            setSearchTerm(event.target.value)\r\n                            console.log(searchTerm)\r\n                        }}/>\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn btn-primary\">\r\n                        <i className=\"fas fa-search\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n                <div className=\"row\">\r\n                    <SemesterClassNewList value={searchTerm}/>\r\n                </div>\r\n\r\n\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default SemesterClassParentNew;\r\n","import React, { PropsWithChildren, ReactElement } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ICardSemesterClassTeacherProperties } from \"../types/TopCardSemesterClassTeacher.types\";\r\n\r\nfunction TopCardSemesterClassTeacher(props: PropsWithChildren<ICardSemesterClassTeacherProperties>): ReactElement {\r\n    const history = useHistory();\r\n    const routeChange = (course: PropsWithChildren<ICardSemesterClassTeacherProperties>) =>{ \r\n        localStorage.removeItem('description_course');\r\n        localStorage.setItem('description_course', course.description);\r\n        localStorage.removeItem('course_id');\r\n        localStorage.setItem('course_id', course.course_id.toString())\r\n        localStorage.removeItem('course_name');\r\n        localStorage.setItem('course_name', course.course_name)\r\n        localStorage.removeItem('art_age_name');\r\n        localStorage.setItem('art_age_name', course.art_age_name.toString())\r\n        localStorage.removeItem('art_type_name');\r\n        localStorage.setItem('art_type_name', course.art_type_name.toString())\r\n        localStorage.removeItem('num_of_section');\r\n        localStorage.setItem('num_of_section', course.num_of_section.toString())\r\n        localStorage.removeItem('schedule');\r\n        localStorage.setItem('schedule', course.schedule.toString())\r\n        localStorage.removeItem('art_level_name');\r\n        localStorage.setItem('art_level_name', course.art_level_name.toString())\r\n        localStorage.removeItem('semester_class_name');\r\n        localStorage.setItem('semester_class_name', course.name.toString())\r\n        localStorage.removeItem('price');\r\n        localStorage.setItem('price', course.price.toString())\r\n        localStorage.removeItem('semester_class_id');\r\n        localStorage.setItem('semester_class_id', course.id.toString())\r\n        localStorage.removeItem('url_image');\r\n        localStorage.setItem('url_image', course.url_image.toString())\r\n        localStorage.removeItem('status');\r\n        localStorage.setItem('status', course.status.toString())\r\n        let path = '/semester-class/detail'; \r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-xl-4 col-md-4 mb-2\" onClick={() => {routeChange(props)}}>\r\n            <div className={`card shadow h-100 py-0`} id=\"topcard-user\" >\r\n                <img className=\"card-img-top\" src={props.url_image} alt=\"\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{props.name}</h5>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Thể loại:</span> <span className=\"header-card-course-value-teacher\">{props.art_type_name}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Trình độ:</span> <span className=\"header-card-course-value-teacher\">{props.art_level_name}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Độ tuổi:</span> <span className=\"header-card-course-value-teacher\">{props.art_age_name}</span></p>\r\n                        <p className=\"col-xl-6 col-md-6 col-xs-6\" ><span className=\"header-card-course-teacher\">Số buổi:</span> <span className=\"header-card-course-value-teacher\">{props.num_of_section}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-12\" ><span className=\"header-card-course-teacher\">Lịch học:</span> <span className=\"header-card-course-value-teacher\">{props.schedule}</span></p>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"col-xl-12 col-md-12 col-xs-12\" ><span className=\"header-card-course-teacher\">Trạng thái:</span> <span className=\"header-card-course-value-teacher\">{props.status}</span></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default TopCardSemesterClassTeacher;\r\n","import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TopCardSemesterClassTeacher from \"../../common/components/TopCardSemesterClassTeacher\";\r\nimport { ISemesterClassTeacherState, IStateType } from \"../../store/models/root.interface\";\r\n\r\n\r\nfunction SemesterClassList(): JSX.Element {\r\n  const semester_class_teacher: ISemesterClassTeacherState = useSelector((state: IStateType) => state.semester_class_teachers);\r\n\r\n\r\n  const teacherRegisterQuantificationElements: (JSX.Element | null)[] = semester_class_teacher.semester_class_teachers.filter((ele, idx) => ele.status === \"Registed\").map((ele, index) => {\r\n    return (\r\n      <TopCardSemesterClassTeacher\r\n        id = {ele.id}\r\n        name={ele.name}\r\n        course_name={ele.course_name}\r\n        icon=\"book\"\r\n        class=\"primary\"\r\n        status={ele.status}\r\n        semester_id={ele.semester_id}\r\n        url_image={ele.image_url}\r\n        art_age_name={ele.art_age_name}\r\n        art_level_name={ele.art_level_name}\r\n        art_type_name={ele.art_type_name}\r\n        max_participant={ele.max_participant}\r\n        num_of_section={ele.num_of_section}\r\n        semester_name={ele.semester_name}\r\n        description={ele.description}\r\n        course_id={ele.course_id}\r\n        schedule={ele.schedule}\r\n        price={ele.price}\r\n        registration_deadline={ele.registration_deadline}\r\n      />\r\n    );\r\n  });\r\n\r\n\r\n  const teacherRegisterQuantificationElements1: (JSX.Element | null)[] = semester_class_teacher.semester_class_teachers.filter((ele, idx) => ele.status === \"Not register\").map((ele, index) => {\r\n    return (\r\n      <TopCardSemesterClassTeacher\r\n        id = {ele.id}\r\n        name={ele.name}\r\n        course_name={ele.course_name}\r\n        icon=\"book\"\r\n        class=\"primary\"\r\n        status={ele.status}\r\n        semester_id={ele.semester_id}\r\n        url_image={ele.image_url}\r\n        art_age_name={ele.art_age_name}\r\n        art_level_name={ele.art_level_name}\r\n        art_type_name={ele.art_type_name}\r\n        max_participant={ele.max_participant}\r\n        num_of_section={ele.num_of_section}\r\n        semester_name={ele.semester_name}\r\n        description={ele.description}\r\n        course_id={ele.course_id}\r\n        schedule={ele.schedule}\r\n        price={ele.price}\r\n        registration_deadline={ele.registration_deadline}\r\n      />\r\n    );\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      {teacherRegisterQuantificationElements}\r\n      {teacherRegisterQuantificationElements1}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default SemesterClassList;\r\n","import { ISemesterClassTeacher, SemesterClassTeacherModificationStatus } from \"../models/semester_class_teacher.interface\";\r\nexport const ADD_SEMESTER_CLASS_TEACHER: string = \"ADD_SEMESTER_CLASS_TEACHER\";\r\nexport const EDIT_SEMESTER_CLASS_TEACHER: string = \"EDIT_SEMESTER_CLASS_TEACHER\";\r\nexport const REMOVE_SEMESTER_CLASS_TEACHER: string = \"REMOVE_SEMESTER_CLASS_TEACHER\";\r\nexport const CHANGE_SEMESTER_CLASS_TEACHER_AMOUNT: string = \"CHANGE_SEMESTER_CLASS_TEACHER_AMOUNT\";\r\nexport const CHANGE_SEMESTER_CLASS_TEACHER_PENDING_EDIT: string = \"CHANGE_SEMESTER_CLASS_TEACHER_PENDING_EDIT\";\r\nexport const CLEAR_SEMESTER_CLASS_TEACHER_PENDING_EDIT: string = \"CLEAR_SEMESTER_CLASS_TEACHER_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SEMESTER_CLASS_TEACHER_ALL: string = \"REMOVE_SEMESTER_CLASS_TEACHER_ALL\";\r\nexport const INITIAL_SEMESTER_CLASS_TEACHER: string = \"INITIAL_SEMESTER_CLASS_TEACHER\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(semester_class_teacher: ISemesterClassTeacher) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        semester_class_teacher\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSemesterClassTeacher(semester_class_teacher: ISemesterClassTeacher): IInitialSemesterClassTeacherActionType {\r\n    return { type: INITIAL_SEMESTER_CLASS_TEACHER, semester_class_teacher: semester_class_teacher };\r\n}\r\n\r\nexport function removeSemesterClassTeacherAll(): IRemoveSemesterClassTeacherAllActionType {\r\n    return { type: REMOVE_SEMESTER_CLASS_TEACHER_ALL };\r\n}\r\n\r\nexport function addSemesterClassTeacher(semester_class_teacher: ISemesterClassTeacher): IAddSemesterClassTeacherActionType {\r\n    return { type: ADD_SEMESTER_CLASS_TEACHER, semester_class_teacher: semester_class_teacher };\r\n}\r\n\r\nexport function editSemesterClassTeacher(semester_class_teacher: ISemesterClassTeacher): IEditSemesterClassTeacherActionType {\r\n    return { type: EDIT_SEMESTER_CLASS_TEACHER, semester_class_teacher: semester_class_teacher };\r\n}\r\n\r\nexport function removeSemesterClassTeacher(id: any): IRemoveSemesterClassTeacherActionType {\r\n    return { type: REMOVE_SEMESTER_CLASS_TEACHER, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClassTeacher(semester_class_teacher: ISemesterClassTeacher): IChangeSelectedSemesterClassTeacherActionType {\r\n    return { type: CHANGE_SEMESTER_CLASS_TEACHER_PENDING_EDIT, semester_class_teacher: semester_class_teacher };\r\n}\r\n\r\nexport function clearSelectedSemesterClassTeacher(): IClearSelectedSemesterClassTeacherActionType {\r\n    return { type: CLEAR_SEMESTER_CLASS_TEACHER_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateSemesterClassTeacher(value: SemesterClassTeacherModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddSemesterClassTeacherActionType { type: string, semester_class_teacher: ISemesterClassTeacher };\r\ninterface IEditSemesterClassTeacherActionType { type: string, semester_class_teacher: ISemesterClassTeacher };\r\ninterface IRemoveSemesterClassTeacherActionType { type: string, id: any };\r\ninterface IChangeSelectedSemesterClassTeacherActionType { type: string, semester_class_teacher: ISemesterClassTeacher };\r\ninterface IClearSelectedSemesterClassTeacherActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  SemesterClassTeacherModificationStatus};\r\ninterface IRemoveSemesterClassTeacherAllActionType { type: string }\r\ninterface IInitialSemesterClassTeacherActionType {type: string, semester_class_teacher: ISemesterClassTeacher}","import { fetchDataSuccess, fetchDataError, removeSemesterClassTeacherAll, addSemesterClassTeacher } from \"../../../store/actions/semester_class_teacher.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface SemesterClassTeacher {\r\n    id: any;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: number;\r\n    semester_class_id: number;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    semester_name: string;\r\n    semester_id: number;\r\n    status: string;\r\n    image_url: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n    registration_deadline: string;\r\n}\r\nexport function getSemesterClassNewByTeacherCourse(dispatch: any, teacher_id: number, course_id: number) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/semester-class/teacher-course/${teacher_id}/${course_id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getSemesterClassNewByTeacherCourse(dispatch, teacher_id, course_id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeSemesterClassTeacherAll())\r\n                console.log(data.body.semester_classes)\r\n                data.body.semester_classes.map((ele: any, index: any) => {\r\n                    var val: SemesterClassTeacher = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        course_name: ele.course_name,\r\n                        course_id: ele.course_id,\r\n                        semester_name: ele.semester_name,\r\n                        semester_class_id: ele.semster_class_id,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        schedule: ele.schedule,\r\n                        semester_id: ele.semester_id,\r\n                        status: ele.status,\r\n                        registration_deadline: ele.registration_deadline\r\n                    }\r\n                \r\n                    dispatch(addSemesterClassTeacher(val))\r\n                    return 1\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport SemesterClassList from \"./SemesterClassList\";\r\nimport { getSemesterClassNewByTeacherCourse } from \"../../common/service/SemesterClassTeacherNew/GetSemesterClassTeacherNew\";\r\n\r\nconst SemesterClassTeacherNew: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    //const semester_classs: ISemesterClassState = useSelector((state: IStateType) => state.semester_classes);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    var id_y = localStorage.getItem('course_id');\r\n    var course_id: number = 0;\r\n    if (id_y !== null) {\r\n        course_id = parseInt(id_y);\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getSemesterClassNewByTeacherCourse(dispatch, id, course_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getSemesterClassNewByTeacherCourse(dispatch, id, course_id))\r\n            }\r\n        }\r\n    }, [dispatch, id, access_token, refresh_token, course_id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp mở\", \"\"));\r\n    }, [dispatch, path.area])\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                {/* <div className=\"row\">\r\n                <TopCard title=\"ĐÃ ĐĂNG KÍ\" text={`${numberTeacherRegisterSuccessfullCount}`} icon=\"book\" class=\"primary\" />\r\n            </div> */}\r\n\r\n                <div className=\"row\" id=\"search-box\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"input-group\" id=\"search-content\">\r\n                            <div className=\"form-outline\">\r\n                                <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" />\r\n                            </div>\r\n                            <button type=\"button\" className=\"btn btn-primary\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <SemesterClassList />\r\n                </div>\r\n\r\n\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default SemesterClassTeacherNew;\r\n","import { addInformationClass, removeInformationClassAll } from \"../../../store/actions/information_class.action\";\r\nimport { fetchDataSuccess, fetchDataError } from \"../../../store/actions/my_class.action\";\r\nimport { addTimeSchedule, removeTimeScheduleAll } from \"../../../store/actions/time_schedule.action\";\r\nimport { addStudent, removeStudentAll } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface MyClass {\r\n    id: 0,\r\n    name: string;\r\n    teacher: string;\r\n    security_code: string;\r\n    course: string;\r\n    art_age: string;\r\n    art_type: string;\r\n    art_level: string;\r\n    number_section: number;\r\n    number_student: number;\r\n}\r\n\r\ninterface user {\r\n    id: any,\r\n    username: string,\r\n    email: string,\r\n    password: string,\r\n    status: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    dateOfBirth: string,\r\n    profile_image_url: string,\r\n    sex: string,\r\n    phone: string,\r\n    address: string,\r\n    parents: number,\r\n    createTime: string\r\n}\r\nexport function getInfoMyClassTeacher(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return  fetch(\r\n                `${process.env.REACT_APP_API_URL}/classes/info/teacher/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getInfoMyClassTeacher(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeStudentAll())\r\n                console.log(data.body.students)\r\n                data.body.students.map((ele: any, index: any) => {\r\n                    var user: user = {\r\n                        id: ele.id,\r\n                        username: ele.username,\r\n                        email: ele.email,\r\n                        status: ele.status,\r\n                        password: \"\",\r\n                        firstName: ele.firstName,\r\n                        lastName: ele.lastName,\r\n                        dateOfBirth: ele.dateOfBirth,\r\n                        profile_image_url: ele.profile_image_url,\r\n                        sex: ele.sex,\r\n                        phone: ele.phone,\r\n                        address: ele.address,\r\n                        parents: ele.parents,\r\n                        createTime: ele.createTime\r\n                    }\r\n                    //console.log(strDate.substring(0, 16))\r\n                    return dispatch(addStudent(user))\r\n                })\r\n                console.log(data.body.classes.security_code)\r\n                dispatch(removeInformationClassAll())\r\n                let information_class: MyClass = {\r\n                    id: 0,\r\n                    name: data.body.classes.name,\r\n                    teacher: data.body.teacher.username,\r\n                    security_code: data.body.classes.security_code,\r\n                    course: data.body.course.name,\r\n                    art_age: data.body.art_age.name,\r\n                    art_level: data.body.art_level.name,\r\n                    art_type: data.body.art_type.name,\r\n                    number_section: data.body.course.num_of_section,\r\n                    number_student: data.body.students.length\r\n                }\r\n\r\n                dispatch(removeTimeScheduleAll())\r\n                data.body.lesson_time.map((ele: any, index: any) => {\r\n                    let x = Object.values(ele)\r\n                    return x.map((ele_1: any) => {\r\n                        return ele_1.map((ele_2: any) => {\r\n                            //console.log(ele_2)\r\n                            if (ele_2.length !== 0){\r\n                                dispatch(addTimeSchedule({start_time: ele_2[0], end_time: ele_2[1]}))\r\n                            }\r\n                            return ele_2\r\n                        })\r\n                    })\r\n                })\r\n\r\n                dispatch(addInformationClass(information_class))\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Popup from \"reactjs-popup\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { setModificationStateAnonymousNotification } from \"../../store/actions/anonymous_notification.action\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { clearSelectedTeacherRegisterQuatification } from \"../../store/actions/teacher_register_quantification.action\";\r\nimport { AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\r\nimport { IAnonymousNotificationState, IRootPageStateType, IStateType, ITeacherRegisterQuantificationState, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ClassTeacherEndDetail.css\"\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport NotificationClassTeacher from \"../Class/NotificationClassTeacher\";\r\nimport StudentList from \"../Class/StudentForTeacherList\";\r\nimport { getInfoMyClassTeacher } from \"../../common/service/MyClass/GetInforMyClassTeacher\";\r\n\r\nconst ClassTeacherEndDetail: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const teacherRegisterQuantifications: ITeacherRegisterQuantificationState = useSelector((state: IStateType) => state.teacher_register_quantifications);\r\n    const anonymous_notifications: IAnonymousNotificationState | null = useSelector((state: IStateType) => state.anonymous_notifications);\r\n    console.log(teacherRegisterQuantifications)\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const students: IUserState = useSelector((state: IStateType) => state.users);\r\n    const numberStudentsCount: number = students.students.length;\r\n    var id_x = localStorage.getItem('class_id');\r\n    let class_id: number = 0;\r\n    if (id_x !== null) {\r\n        class_id = parseInt(id_x);\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined){\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time){\r\n                if (exp_refresh_token_decode < now_time){\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    dispatch(clearSelectedTeacherRegisterQuatification());       \r\n                    trackPromise(getInfoMyClassTeacher(dispatch, class_id))\r\n                }\r\n            }\r\n            else {\r\n                dispatch(clearSelectedTeacherRegisterQuatification());       \r\n                trackPromise(getInfoMyClassTeacher(dispatch, class_id))\r\n            }\r\n        }\r\n    }, [dispatch, class_id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Lớp\", \"Chi tiết\"));\r\n    }, [dispatch, path.area])\r\n\r\n\r\n    const [popup1, setPopup1] = useState(false);\r\n\r\n    function onAnonymousNotificationRemove() {\r\n        setPopup1(true);\r\n    }\r\n\r\n\r\n    function onRemovePopup1(value: boolean) {\r\n        setPopup1(false);\r\n    }\r\n\r\n    /* const history = useHistory();\r\n    const onRouteChange = () =>{ \r\n        let path = '/classes/detail-student'; \r\n        history.push({\r\n            pathname: path,\r\n            state: {class_id: class_id}\r\n        });\r\n    } */\r\n    return (\r\n        promiseInProgress ?\r\n      <div className=\"row\" id=\"search-box\">\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"input-group\" id=\"search-content\">\r\n            <div className=\"form-outline\">\r\n              <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> : <Fragment>\r\n            {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n            {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n            <ToastContainer />\r\n            <div className=\"row\">\r\n                <TopCard title=\"SỐ HỌC SINH\" text={`${numberStudentsCount}`} icon=\"book\" class=\"danger\" />\r\n                <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button \r\n                        className=\"btn btn-success btn-green\" \r\n                        id=\"btn-create-teacher-level\" \r\n                        onClick={() => {\r\n                            dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.Create))\r\n                            onAnonymousNotificationRemove()\r\n                        }}\r\n                    >\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Gửi thông báo\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <Popup\r\n                open={popup1}\r\n                onClose={() => setPopup1(false)}\r\n                closeOnDocumentClick\r\n            >\r\n                <>\r\n                    {\r\n                        function () {\r\n                            if ((anonymous_notifications.modificationState === AnonymousNotificationModificationStatus.Create)) {\r\n                                return <NotificationClassTeacher isCheck={onRemovePopup1} data={class_id}/>\r\n                            }\r\n                        }()\r\n                    }\r\n                </>\r\n            </Popup>\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                    <h3 className=\" mb-2\" id=\"level-teacher\">Danh sách học sinh</h3>\r\n                    <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                        <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                            <div className=\"card-body\">\r\n                                <StudentList />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ClassTeacherEndDetail;","import React, {useRef} from \"react\";\r\nimport ReactQuill, { Quill } from 'react-quill';\r\nimport EditorToolbar, { modules, formats } from \"./EditorToolbar\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"./Style.css\";\r\nimport ImageResize from 'quill-image-resize-module-react';\r\n\r\nQuill.register('modules/imageResize', ImageResize);\r\n\r\nexport const Editor = (props) => {\r\n  console.log('editor')\r\n  const reactQuillRef = useRef(null);\r\n  React.useEffect(() => {\r\n    if (reactQuillRef.current.getEditor() && !props.isCreate){\r\n        reactQuillRef.current.getEditor().clipboard.dangerouslyPasteHTML(props.setValue)\r\n    }\r\n  }, [reactQuillRef, props.isCreate, props.setValue]);\r\n  //console.log(reactQuillRef)\r\n  \r\n  //const quill = reactQuillRef.current.editor;\r\n  //console.log(quill)\r\n  //quill.clipboard.dangerouslyPasteHTML(props.setValue);\r\n  const [state, setState] = React.useState({ value: null });\r\n  const handleChange = value => {\r\n    setState({ value });\r\n    props.getValue(value)\r\n    //console.log(value)\r\n  };\r\n\r\n  console.log(state.value)\r\n  return (\r\n    <div className=\"text-editor form-x\">\r\n      <EditorToolbar />\r\n      <ReactQuill\r\n        ref={reactQuillRef}\r\n        theme=\"snow\"\r\n        value={state.value}\r\n        onChange={handleChange}\r\n        placeholder={\"Write something awesome...\"}\r\n        modules={modules}\r\n        formats={formats}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IAnonymousNotificationState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IAnonymousNotification, AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\r\nimport { editAnonymousNotification, clearSelectedAnonymousNotification, setModificationStateAnonymousNotification, addAnonymousNotification } from \"../../store/actions/anonymous_notification.action\";\r\nimport { IAnonymousNotificationFormState } from \"../../common/types/Form.types\";\r\nimport { toast } from \"react-toastify\";\r\nimport Editor from \"../../common/components/Quill/EditReviewStudent\";\r\nimport { putClassHasRegisterJoinSemesterTeacher } from \"../../common/service/ClassHasRegisterJoinSemester/PutClassHasRegisterJoinSemesterTeacher\";\r\n\r\nexport type artAgeListProps = {\r\n    isCheck: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n    data?: any;\r\n};\r\n\r\n\r\nfunction ReviewStudent(props: artAgeListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const notifications: IAnonymousNotificationState | null = useSelector((state: IStateType) => state.anonymous_notifications);\r\n    let notification: IAnonymousNotification | null = notifications.selectedAnonymousNotification;\r\n    const isCreate: boolean = (notifications.modificationState === AnonymousNotificationModificationStatus.Create);\r\n\r\n    if (!notification || isCreate) {\r\n        notification = { id: 0, name: \"\", description: \"\", time: \"\" };\r\n    }\r\n\r\n    let formState = {\r\n        name: { error: \"\", value: notification.name },\r\n        description: { error: \"\", value: notification.description },\r\n        type_send: { error: \"\", value: \"Chon gửi tới\" },\r\n    };\r\n\r\n    var id_x = localStorage.getItem('class_id');\r\n    let classes_id: number = 0;\r\n    if (id_x !== null) {\r\n        classes_id = parseInt(id_x)\r\n    }\r\n\r\n    var id_y = localStorage.getItem('student_id');\r\n    let student_id: number = 0;\r\n    if (id_y !== null) {\r\n        student_id = parseInt(id_y)\r\n    } \r\n\r\n    const [textHtml, setTextHtml] = useState<string>(\"\")\r\n    function getValue(value: string) {\r\n      setTextHtml(value);\r\n    }\r\n\r\n\r\n\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        props.isCheck(false);\r\n        let saveUserFn: Function = (isCreate) ? addAnonymousNotification : editAnonymousNotification;\r\n        saveForm(formState, saveUserFn);\r\n    }\r\n\r\n    function saveForm(formState: IAnonymousNotificationFormState, saveFn: Function): void {\r\n        if (notification) {\r\n            const idx = toast.loading(\"Đang gửi thông báo. Vui lòng đợi trong giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            \r\n            dispatch(putClassHasRegisterJoinSemesterTeacher({\r\n                classes_id: classes_id,\r\n                student_id: student_id,\r\n                teacher_feedback: textHtml\r\n            }, idx))\r\n\r\n            dispatch(clearSelectedAnonymousNotification());\r\n            dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.None));\r\n        }\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        props.isCheck(false);\r\n        dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (textHtml === null) as boolean;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} nhận xét</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                            <div className=\"form-group\">\r\n                              <label>Miêu tả</label>\r\n                              <Editor getValue={getValue} isCreate={isCreate} setValue={formState.description.value} />\r\n                            </div>\r\n\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ReviewStudent;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest } from \"../../../store/actions/art_type.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function putClassHasRegisterJoinSemesterTeacher(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/class-has-register-join-semester/teacher`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putClassHasRegisterJoinSemesterTeacher(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (res => {\r\n                toast.update(idx, { render: \"Gửi nhận xét thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                toast.update(idx, { render: \"Gửi nhận xét không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import jwt_decode from \"jwt-decode\";\r\nimport React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChartLine } from \"../../common/components/CharLine\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { getExerciseForClassStudent } from \"../../common/service/ExerciseStudent/GetExerciseForClassStudent\";\r\nimport { getParentById } from \"../../common/service/Parent/GetParentById\";\r\nimport { getStudentLeaveByClassAndStudent } from \"../../common/service/StudentLeave/GetStudentLeaveByClassStudent\";\r\nimport { getUserById } from \"../../common/service/User/GetUserById\";\r\nimport { getUserGradeExerciseByStudentAndClass } from \"../../common/service/UserGradeExerciseSubmission/GetUserGradeExerciseSubmissionByClassStudent\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport { IAnonymousNotificationState, IExerciseStudentState, IStateType, IStudentLeaveState, IUserGradeExerciseSubmissionState, IUserState } from \"../../store/models/root.interface\";\r\nimport \"./ManageStudent.css\"\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\r\nimport { setModificationStateAnonymousNotification } from \"../../store/actions/anonymous_notification.action\";\r\nimport ReviewStudent from \"./ReviewStudent\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nconst ManageStudentEnd: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const users: IUserState = useSelector((state: IStateType) => state.users);\r\n    const exercise_students: IExerciseStudentState = useSelector((state: IStateType) => state.exercise_students);\r\n    const student_leave: IStudentLeaveState = useSelector((state: IStateType) => state.student_leaves);\r\n    const user_grade_exercise_submission: IUserGradeExerciseSubmissionState = useSelector((state: IStateType) => state.user_grade_exercise_submissions);\r\n    const numberSubmittedCount: number = exercise_students.exercise_submitted_not_grade.length + exercise_students.exercise_submitted_graded.length;\r\n    const numberNotSubmitNowCount: number = exercise_students.exercise_not_submit.length;\r\n    const numberStudentLeaveCount: number = student_leave.acceptLeaves.length;\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n\r\n    var id_z = localStorage.getItem('parent_id');\r\n    var parent_id: number = 0;\r\n    if (id_z !== null) {\r\n        parent_id = parseInt(id_z);\r\n    }\r\n\r\n    var id_y = localStorage.getItem('student_id');\r\n    var student_id: number = 0;\r\n    if (id_y !== null) {\r\n        student_id = parseInt(id_y);\r\n    }\r\n\r\n    var id_t = localStorage.getItem('class_id');\r\n    var class_id: number = 0;\r\n    if (id_t !== null) {\r\n        class_id = parseInt(id_t);\r\n    }\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getUserById(dispatch, student_id))\r\n                    trackPromise(getParentById(dispatch, parent_id))\r\n                    trackPromise(getExerciseForClassStudent(dispatch, class_id, student_id))\r\n                    trackPromise(getStudentLeaveByClassAndStudent(dispatch, class_id, student_id))\r\n                    trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id, student_id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getUserById(dispatch, student_id))\r\n                trackPromise(getParentById(dispatch, parent_id))\r\n                trackPromise(getExerciseForClassStudent(dispatch, class_id, student_id))\r\n                trackPromise(getStudentLeaveByClassAndStudent(dispatch, class_id, student_id))\r\n                trackPromise(getUserGradeExerciseByStudentAndClass(dispatch, class_id, student_id))\r\n            }\r\n        }\r\n    }, [dispatch, access_token, refresh_token, student_id, parent_id, class_id]);\r\n\r\n    let list_score_user_grade_exercise: number[] = [];\r\n    let list_name_user_grade_exercise: string[] = [];\r\n    user_grade_exercise_submission.user_grade_exercise_submissions.map((ele, idx) => {\r\n        list_score_user_grade_exercise.push(ele.score)\r\n        list_name_user_grade_exercise.push(ele.exercise_name)\r\n        return ele\r\n    })\r\n\r\n\r\n    const labels = list_name_user_grade_exercise;\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Điểm kiểm tra',\r\n                data: list_score_user_grade_exercise,\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            }\r\n        ],\r\n    };\r\n\r\n    const history = useHistory();\r\n    const routeChange = () => {\r\n        let path = '/class/exercise-student';\r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    const anonymous_notifications: IAnonymousNotificationState | null = useSelector((state: IStateType) => state.anonymous_notifications);\r\n\r\n    const [popup1, setPopup1] = useState(false);\r\n\r\n    function onAnonymousNotificationRemove() {\r\n        setPopup1(true);\r\n    }\r\n\r\n\r\n    function onRemovePopup1(value: boolean) {\r\n        setPopup1(false);\r\n    }\r\n    \r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n            <ToastContainer />\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                <div className=\"row\">\r\n                    <TopCard title=\"BÀI TẬP ĐÃ NỘP\" text={`${numberSubmittedCount}`} icon=\"book\" class=\"primary\" />\r\n                    <TopCard title=\"BÀI TẬP CHƯA NỘP\" text={`${numberNotSubmitNowCount}`} icon=\"book\" class=\"danger\" />\r\n                    <TopCard title=\"SỐ BUỔI NGHỈ\" text={`${numberStudentLeaveCount}`} icon=\"book\" class=\"danger\" />\r\n                    {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n                </div>\r\n                <Popup\r\n                open={popup1}\r\n                onClose={() => setPopup1(false)}\r\n                closeOnDocumentClick\r\n            >\r\n                <>\r\n                    {\r\n                        function () {\r\n                            if ((anonymous_notifications.modificationState === AnonymousNotificationModificationStatus.Create)) {\r\n                                return <ReviewStudent isCheck={onRemovePopup1} data={class_id}/>\r\n                            }\r\n                        }()\r\n                    }\r\n                </>\r\n            </Popup>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <h3 className=\" mb-2\" id=\"level-teacher\">Thông tin học sinh</h3>\r\n                                <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                    <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"row no-gutters justify-content-center\">\r\n                                                <h4 id=\"full-name\">Tên : {users.teachers.length > 0 ? users.teachers[0].username : \"\"}</h4>\r\n                                            </div>\r\n                                            <div className=\"row no-gutters justify-content-center\">\r\n                                                <p id=\"username-teacher\">Giới tính: {users.teachers.length > 0 ? users.teachers[0].sex : \"\"}</p>\r\n                                            </div>\r\n                                            <div className=\"row no-gutters\">\r\n                                                <i className={`fas fa-phone fa-2x`} id=\"icon-phone\"></i>\r\n                                                <p id=\"phone\">Số điện thoại: {users.teachers.length > 0 ? users.teachers[0].phone : \"\"}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"row no-gutters\">\r\n                                                <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                                <p id=\"phone\">Ngày sinh: {users.teachers.length > 0 ? users.teachers[0].dateOfBirth : \"\"}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"row no-gutters\">\r\n                                                <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                                <p id=\"phone\">Email: {users.teachers.length > 0 ? users.teachers[0].email : \"\"}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <h3 className=\" mb-2\" id=\"level-teacher\">Thông tin phụ huynh</h3>\r\n                                <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                    <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"row no-gutters justify-content-center\">\r\n                                                <h4 id=\"full-name\">Tên : {users.parents.length > 0 ? users.parents[0].username : \"\"}</h4>\r\n                                            </div>\r\n                                            <div className=\"row no-gutters justify-content-center\">\r\n                                                <p id=\"username-teacher\">Giới tính: {users.parents.length > 0 ? users.parents[0].sex : \"\"}</p>\r\n                                            </div>\r\n                                            <div className=\"row no-gutters\">\r\n                                                <i className={`fas fa-phone fa-2x`} id=\"icon-phone\"></i>\r\n                                                <p id=\"phone\">Số điện thoại: {users.parents.length > 0 ? users.parents[0].phone : \"\"}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"row no-gutters\">\r\n                                                <i className={`fas fa-calendar fa-2x`} id=\"icon-phone\"></i>\r\n                                                <p id=\"phone\">Ngày sinh: {users.parents.length > 0 ? users.parents[0].dateOfBirth : \"\"}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"row no-gutters\">\r\n                                                <i className={`fas fa-envelope fa-2x`} id=\"icon-phone\"></i>\r\n                                                <p id=\"phone\">Email: {users.parents.length > 0 ? users.parents[0].email : \"\"}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* <TopCardLevel title=\"TRÌNH ĐỘ ĐÃ DUYỆT\" text={`2`} icon=\"book\" class=\"primary\" />\r\n                    <TopCardLevel title=\"TRÌNH ĐỘ CHƯA DUYỆT\" text={`1`} icon=\"book\" class=\"danger\" /> */}\r\n                    </div>\r\n\r\n                    <div className=\"col-xl-6 col-md-6 mb-4\">\r\n                        <div className=\"row\">\r\n                            <h3 className=\" mb-2\" id=\"level-teacher\">Thống kê điểm</h3>\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row no-gutters\">\r\n                                            <ChartLine data={data} />\r\n                                        </div>\r\n                                        <div className=\"row justify-content-center\">\r\n                                            <button\r\n                                                className=\"btn btn-success btn-green\"\r\n                                                id=\"btn-into-class-student\"\r\n                                                onClick={() => { routeChange() }}\r\n                                            >\r\n                                                Xem chi tiết\r\n                                                <i className={`fas fa-arrow-right fa-1x`} id=\"icon-arrow-right\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12 col-md-12 mb-4\">\r\n                                <div className={`card shadow h-100 py-2`} id=\"topcard-user\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row justify-content-center\">\r\n                                            <button\r\n                                                className=\"btn btn-success btn-green\"\r\n                                                id=\"btn-into-class\"\r\n                                                onClick={() => { \r\n                                                    dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.Create))\r\n                                                    onAnonymousNotificationRemove()\r\n                                                 }}\r\n                                            >\r\n                                                Nhận xét\r\n                                                <i className={`fas fa-arrow-right fa-1x`} id=\"icon-arrow-right\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default ManageStudentEnd;\r\n","import { ICourseParentNew, CourseParentNewModificationStatus } from \"../models/course_parent_new.interface\";\r\nexport const ADD_COURSE_PARENT_NEW: string = \"ADD_COURSE_PARENT_NEW\";\r\nexport const EDIT_COURSE_PARENT_NEW: string = \"EDIT_COURSE_PARENT_NEW\";\r\nexport const REMOVE_COURSE_PARENT_NEW: string = \"REMOVE_COURSE_PARENT_NEW\";\r\nexport const CHANGE_COURSE_PARENT_NEW_AMOUNT: string = \"CHANGE_COURSE_PARENT_NEW_AMOUNT\";\r\nexport const CHANGE_COURSE_PARENT_NEW_PENDING_EDIT: string = \"CHANGE_COURSE_PARENT_NEW_PENDING_EDIT\";\r\nexport const CLEAR_COURSE_PARENT_NEW_PENDING_EDIT: string = \"CLEAR_COURSE_PARENT_NEW_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_COURSE_PARENT_NEW_ALL: string = \"REMOVE_COURSE_PARENT_NEW_ALL\";\r\nexport const INITIAL_COURSE_PARENT_NEW: string = \"INITIAL_COURSE_PARENT_NEW\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course_parent_new: ICourseParentNew) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course_parent_new\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCourseParentNew(course_parent_new: ICourseParentNew): IInitialCourseParentNewActionType {\r\n    return { type: INITIAL_COURSE_PARENT_NEW, course_parent_new: course_parent_new };\r\n}\r\n\r\nexport function removeCourseParentNewAll(): IRemoveCourseParentNewAllActionType {\r\n    return { type: REMOVE_COURSE_PARENT_NEW_ALL };\r\n}\r\n\r\nexport function addCourseParentNew(course_parent_new: ICourseParentNew): IAddCourseParentNewActionType {\r\n    return { type: ADD_COURSE_PARENT_NEW, course_parent_new: course_parent_new };\r\n}\r\n\r\nexport function editCourseParentNew(course_parent_new: ICourseParentNew): IEditCourseParentNewActionType {\r\n    return { type: EDIT_COURSE_PARENT_NEW, course_parent_new: course_parent_new };\r\n}\r\n\r\nexport function removeCourseParentNew(id: any): IRemoveCourseParentNewActionType {\r\n    return { type: REMOVE_COURSE_PARENT_NEW, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseParentNew(course_parent_new: ICourseParentNew): IChangeSelectedCourseParentNewActionType {\r\n    return { type: CHANGE_COURSE_PARENT_NEW_PENDING_EDIT, course_parent_new: course_parent_new };\r\n}\r\n\r\nexport function clearSelectedCourseParentNew(): IClearSelectedCourseParentNewActionType {\r\n    return { type: CLEAR_COURSE_PARENT_NEW_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseParentNewModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddCourseParentNewActionType { type: string, course_parent_new: ICourseParentNew };\r\ninterface IEditCourseParentNewActionType { type: string, course_parent_new: ICourseParentNew };\r\ninterface IRemoveCourseParentNewActionType { type: string, id: any };\r\ninterface IChangeSelectedCourseParentNewActionType { type: string, course_parent_new: ICourseParentNew };\r\ninterface IClearSelectedCourseParentNewActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  CourseParentNewModificationStatus};\r\ninterface IRemoveCourseParentNewAllActionType { type: string }\r\ninterface IInitialCourseParentNewActionType {type: string, course_parent_new: ICourseParentNew}","import { logout } from \"../../../store/actions/account.actions\";\r\nimport { fetchDataSuccess, fetchDataError, removeCourseParentNewAll, initialCourseParentNew, addCourseParentNew } from \"../../../store/actions/course_parent_new.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface CourseParentNew {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    creator_id: number;\r\n    art_type_id: number;\r\n    art_level_id: number;\r\n    art_age_id: number;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    total: number;\r\n    student_registered_name: string[];\r\n    student_registered_id: number[];\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\nexport function getCourseParentNew(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/course/parent-new/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getCourseParentNew(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeCourseParentNewAll())\r\n                console.log(data.body.courses)\r\n                data.body.courses.map((ele: any, index: any) => {\r\n                    var course: CourseParentNew = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        num_of_section: ele.num_of_section,\r\n                        price: ele.price,\r\n                        image_url: ele.image_url,\r\n                        is_enabled: ele.is_enabled,\r\n                        creator_id: ele.creator_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        art_level_id: ele.art_level_id,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        art_level_name: ele.art_level_name,\r\n                        total: ele.total,\r\n                        student_registered_id: ele.student_registered_id,\r\n                        student_registered_name: ele.student_registered_name,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n\r\n                    }\r\n                    console.log(course)\r\n                    if (index === 0){\r\n                        return dispatch(initialCourseParentNew(course));\r\n                    }\r\n                    else{\r\n                        return dispatch(addCourseParentNew(course))\r\n                    }\r\n                })\r\n                dispatch(logout())\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\nimport { ICourseParentNew } from \"../../store/models/course_parent_new.interface\";\r\nimport { IArtAgeState, IArtLevelState, IArtTypeState, ICourseParentNewState, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./CourseNewTest.css\"\r\n\r\nexport type semesterListProps = {\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n  };\r\n\r\nfunction CourseNewList(props: semesterListProps): JSX.Element {\r\n    const course_parent_news: ICourseParentNewState = useSelector((state: IStateType) => state.course_parent_news);\r\n    const art_types: IArtTypeState = useSelector((state: IStateType) => state.art_types);\r\n    const art_ages: IArtAgeState = useSelector((state: IStateType) => state.art_ages);\r\n    const art_levels: IArtLevelState = useSelector((state: IStateType) => state.art_levels);\r\n    \r\n    const [totalPage, setTotalPage] = useState(0)\r\n    const [element, setElement] = useState<ICourseParentNew[]>([])\r\n    const history = useHistory();\r\n    const routeChange = (course: ICourseParentNew) =>{ \r\n        localStorage.removeItem('course_id');\r\n        localStorage.setItem('course_id', course.id.toString())\r\n        let path = '/courses/semester-classes'; \r\n        history.push({\r\n            pathname: path\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        let x = (course_parent_news.courses.length - course_parent_news.courses.length % 10) /10;\r\n        if (x === 0) {\r\n            setElement(course_parent_news.courses)\r\n        }\r\n        else {\r\n            setElement(course_parent_news.courses.slice(0,10))\r\n        }\r\n        \r\n         setTotalPage((x+1))\r\n    }, [course_parent_news.courses])\r\n\r\n    console.log((totalPage))\r\n\r\n    function handlePagination(count: number) {\r\n        console.log(count)\r\n        if (count === totalPage) {\r\n            setElement(course_parent_news.courses.slice(count*10))\r\n        }\r\n        else {\r\n            setElement(course_parent_news.courses.slice(count*10,count*10 + 10))\r\n        }\r\n    }\r\n\r\n    const [filter, setFilter] = useState(1)\r\n    const [filter1, setFilter1] = useState(1)\r\n    const [filter2, setFilter2] = useState(1)\r\n\r\n\r\n    function handleChange(e: any) {\r\n        setFilter(e.target.value)\r\n    }\r\n\r\n    function handleChange1(e: any) {\r\n        setFilter1(e.target.value)\r\n    }\r\n\r\n    function handleChange2(e: any) {\r\n        setFilter2(e.target.value)\r\n    }\r\n\r\n    console.log(element)\r\n\r\n    function handleFilter() {\r\n        console.log(filter)\r\n        console.log(filter1)\r\n        console.log(filter2)\r\n        let k = course_parent_news.courses.filter((ele, idx) => \r\n        ele !== undefined && ele.art_type_id == filter && ele.art_age_id == filter1 && ele.art_level_id == filter2\r\n        )\r\n\r\n        let x = (k.length - (k.length) % 10) / 10;\r\n        if (x === 0) {\r\n            setElement(k)\r\n        }\r\n        else {\r\n            setElement(k.slice(0, 10))\r\n        }\r\n        setTotalPage((x + 1))\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"d-flex flex-row justify-content-between align-items-center filters\">\r\n                            <h6 className=\"ml-3\">Có {element.filter((val) => {\r\n                            if (props.value === \"\"){\r\n                              return val;\r\n                            }\r\n                            else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))){\r\n                              return val;\r\n                            }\r\n                            return null\r\n                          }).length} kết quả</h6>\r\n                            <div className=\"right-sort\">\r\n                                <div className=\"sort-by mr-3\">\r\n                                    <span className=\"mr-1\">Lọc theo:</span>\r\n                                    <select name=\"cars\" id=\"cars\"\r\n                                        value={filter}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        {\r\n                                            art_types.artTypes.map((ele, idx) => {\r\n                                                return (\r\n                                                    <option value={ele.id}>{ele.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select>   \r\n                                    <select name=\"cars\" id=\"cars\" className=\"pl-2\"\r\n                                        value={filter1}\r\n                                        onChange={handleChange1}\r\n                                    >\r\n                                        {\r\n                                            art_ages.artAges.map((ele, idx) => {\r\n                                                return (\r\n                                                    <option value={ele.id}>{ele.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                    <select name=\"cars\" id=\"cars\" className=\"pl-2\"\r\n                                        value={filter2}\r\n                                        onChange={handleChange2}\r\n                                    >\r\n                                        {\r\n                                            art_levels.artLevels.map((ele, idx) => {\r\n                                                return (\r\n                                                    <option value={ele.id}>{ele.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select>                                 \r\n                                    <button className=\"btn btn-outline-dark btn-sm ml-3 filter\" type=\"button\" onClick={() => handleFilter()}>Lọc&nbsp;<i className=\"fa fa-flask\"></i></button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-1\">\r\n                    {\r\n                        element.filter((val) => {\r\n                            if (props.value === \"\"){\r\n                              return val;\r\n                            }\r\n                            else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))){\r\n                              return val;\r\n                            }\r\n                            return null\r\n                          }).map((ele, index) => {\r\n                            return (\r\n                                <div className=\"col-md-4\" onClick={() => {routeChange(ele)}}>\r\n                                    <div className=\"p-card bg-white p-2 rounded px-3 product-x\">\r\n                                        <div className=\"d-flex align-items-center credits\"><img src={ele.image_url} width=\"100%\" alt=\"\"/></div>\r\n                                        <h5 className=\"mt-2\">{ele.name}</h5><span className=\"badge badge-danger py-1 mb-2\">{ele.art_type_name} &amp; {ele.art_age_name} &amp; {ele.art_level_name}</span><span className=\"d-block mb-5\">Hiện tại khóa học mở {ele.total} lớp.</span>\r\n                                        <div\r\n                                            className=\"d-flex justify-content-between stats\">\r\n                                            <div><i className=\"fa fa-calendar-o\"></i><span className=\"ml-2\">Giá: {ele.price} VND</span></div>\r\n                                            <div className=\"d-flex flex-row align-items-center\">\r\n                                                <div className=\"profiles\"><img className=\"rounded-circle\" src=\"https://i.imgur.com/4nUVGjW.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\" https://i.imgur.com/GHCtqgp.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\"https://i.imgur.com/UL0GS75.jpg\" alt=\"\" width=\"30\" /></div><span className=\"ml-3\">12</span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"d-flex justify-content-end text-right mt-2\">\r\n                    <nav>\r\n                        <ul className=\"pagination\">\r\n                        <li className=\"page-item\">\r\n                            <a className=\"page-link\" aria-label=\"Previous\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                <span aria-hidden=\"true\">&laquo;</span>\r\n                            </a>\r\n                        </li>\r\n                            {\r\n                                Array.from(Array((totalPage)).keys()).map((ele, idx) => {\r\n                                    return (\r\n                                        <li className=\"page-item\"><a className=\"page-link\" href=\"/\" onClick={(e) => {\r\n                                            e.preventDefault()\r\n                                            handlePagination(ele)}}>{ele+1}</a></li>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Next\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&raquo;</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default CourseNewList;\r\n","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./Discovery.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getCourseParentNew } from \"../../common/service/CourseParentNew/GetCourseParentNew\";\r\nimport CourseNewListTest from \"./CourseNewListTest\";\r\nimport { getArtAge } from \"../../common/service/ArtAge/GetArtAge\";\r\nimport { getArtType } from \"../../common/service/ArtType/GetArtType\";\r\nimport { getArtLevel } from \"../../common/service/ArtLevel/GetArtLevel\";\r\n\r\nconst DiscoveryParent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    //const semester_classs: ISemesterClassState = useSelector((state: IStateType) => state.semester_classes);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getCourseParentNew(dispatch, id))\r\n                    trackPromise(getArtType(dispatch))\r\n                    trackPromise(getArtAge(dispatch))\r\n                    trackPromise(getArtLevel(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getCourseParentNew(dispatch, id))\r\n                trackPromise(getArtType(dispatch))\r\n                trackPromise(getArtAge(dispatch))\r\n                trackPromise(getArtLevel(dispatch))\r\n            }\r\n        }\r\n\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khám phá\", \"Khóa học\"));\r\n    }, [path.area, dispatch])\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                {/* <div className=\"row\">\r\n                <TopCard title=\"ĐÃ ĐĂNG KÍ\" text={`${numberTeacherRegisterSuccessfullCount}`} icon=\"book\" class=\"primary\" />\r\n            </div> */}\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n            <div className=\"col-xl-12 col-lg-12\">\r\n                <div className=\"input-group\" id=\"search-content\">\r\n                    <div className=\"form-outline\">\r\n                        <input type=\"text\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                            setSearchTerm(event.target.value)\r\n                            console.log(searchTerm)\r\n                        }}/>\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn btn-primary\">\r\n                        <i className=\"fas fa-search\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n                <div className=\"row\">\r\n                    <CourseNewListTest value={searchTerm}/>\r\n                </div>\r\n\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default DiscoveryParent;\r\n","import { IContestParentNew, ContestParentNewModificationStatus } from \"../models/contest_parent_new.interface\";\r\nexport const ADD_CONTEST_PARENT_NEW: string = \"ADD_CONTEST_PARENT_NEW\";\r\nexport const EDIT_CONTEST_PARENT_NEW: string = \"EDIT_CONTEST_PARENT_NEW\";\r\nexport const REMOVE_CONTEST_PARENT_NEW: string = \"REMOVE_CONTEST_PARENT_NEW\";\r\nexport const CHANGE_CONTEST_PARENT_NEW_AMOUNT: string = \"CHANGE_CONTEST_PARENT_NEW_AMOUNT\";\r\nexport const CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT: string = \"CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT: string = \"CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_CONTEST_PARENT_NEW_ALL: string = \"REMOVE_CONTEST_PARENT_NEW_ALL\";\r\nexport const INITIAL_CONTEST_PARENT_NEW: string = \"INITIAL_CONTEST_PARENT_NEW\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(contest_parent_new: IContestParentNew) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        contest_parent_new\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialContestParentNew(contest_parent_new: IContestParentNew): IInitialContestParentNewActionType {\r\n    return { type: INITIAL_CONTEST_PARENT_NEW, contest_parent_new: contest_parent_new };\r\n}\r\n\r\nexport function removeContestParentNewAll(): IRemoveContestParentNewAllActionType {\r\n    return { type: REMOVE_CONTEST_PARENT_NEW_ALL };\r\n}\r\n\r\nexport function addContestParentNew(contest_parent_new: IContestParentNew): IAddContestParentNewActionType {\r\n    return { type: ADD_CONTEST_PARENT_NEW, contest_parent_new: contest_parent_new };\r\n}\r\n\r\nexport function editContestParentNew(contest_parent_new: IContestParentNew): IEditContestParentNewActionType {\r\n    return { type: EDIT_CONTEST_PARENT_NEW, contest_parent_new: contest_parent_new };\r\n}\r\n\r\nexport function removeContestParentNew(id: any): IRemoveContestParentNewActionType {\r\n    return { type: REMOVE_CONTEST_PARENT_NEW, id: id };\r\n}\r\n\r\nexport function changeSelectedContestParentNew(contest_parent_new: IContestParentNew): IChangeSelectedContestParentNewActionType {\r\n    return { type: CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT, contest_parent_new: contest_parent_new };\r\n}\r\n\r\nexport function clearSelectedContestParentNew(): IClearSelectedContestParentNewActionType {\r\n    return { type: CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ContestParentNewModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddContestParentNewActionType { type: string, contest_parent_new: IContestParentNew };\r\ninterface IEditContestParentNewActionType { type: string, contest_parent_new: IContestParentNew };\r\ninterface IRemoveContestParentNewActionType { type: string, id: any };\r\ninterface IChangeSelectedContestParentNewActionType { type: string, contest_parent_new: IContestParentNew };\r\ninterface IClearSelectedContestParentNewActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ContestParentNewModificationStatus};\r\ninterface IRemoveContestParentNewAllActionType { type: string }\r\ninterface IInitialContestParentNewActionType {type: string, contest_parent_new: IContestParentNew}","import { logout } from \"../../../store/actions/account.actions\";\r\nimport { fetchDataSuccess, fetchDataError, removeContestParentNewAll, initialContestParentNew, addContestParentNew } from \"../../../store/actions/contest_parent_new.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\ninterface ContestParentNew {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    creator_id: number;\r\n    art_type_id: number;\r\n    art_age_id: number;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n    student_registered_name: string[];\r\n    student_registered_id: number[];\r\n}\r\nexport function getContestParentNew(dispatch: any, id: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest/parent-new/${id}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getContestParentNew(dispatch, id))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeContestParentNewAll())\r\n                console.log(data.body.contests)\r\n                data.body.contests.map((ele: any, index: any) => {\r\n                    var contest: ContestParentNew = {\r\n                        id: ele.id,\r\n                        name: ele.name,\r\n                        total_register_contest: ele.total_register_contest,\r\n                        registration_time: ele.registration_time,\r\n                        start_time: ele.start_time,\r\n                        end_time: ele.end_time,\r\n                        description: ele.description,\r\n                        max_participant: ele.max_participant,\r\n                        image_url: ele.image_url,\r\n                        is_enabled: ele.is_enabled,\r\n                        creator_id: ele.creator_id,\r\n                        art_type_id: ele.art_type_id,\r\n                        art_age_id: ele.art_age_id,\r\n                        art_age_name: ele.art_age_name,\r\n                        art_type_name: ele.art_type_name,\r\n                        student_registered_id: ele.student_registered_id,\r\n                        student_registered_name: ele.student_registered_name,\r\n                        create_time: ele.create_time,\r\n                        update_time: ele.update_time\r\n\r\n                    }\r\n                    console.log(contest)\r\n                    if (index === 0){\r\n                        return dispatch(initialContestParentNew(contest));\r\n                    }\r\n                    else{\r\n                        return dispatch(addContestParentNew(contest))\r\n                    }\r\n                })\r\n                dispatch(logout())\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\nimport { IContestParentNew } from \"../../store/models/contest_parent_new.interface\";\r\nimport { IArtAgeState, IArtTypeState, IContestParentNewState, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./CourseNewTest.css\"\r\n\r\nexport type semesterListProps = {\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n  };\r\n\r\nfunction ContestNewListTest(props: semesterListProps): JSX.Element {\r\n    const contest_parent_news: IContestParentNewState = useSelector((state: IStateType) => state.contest_parent_new);\r\n    const art_types: IArtTypeState = useSelector((state: IStateType) => state.art_types);\r\n    const art_ages: IArtAgeState = useSelector((state: IStateType) => state.art_ages);\r\n    \r\n    const [totalPage, setTotalPage] = useState(0)\r\n    const [element, setElement] = useState<IContestParentNew[]>([])\r\n\r\n    const history = useHistory();\r\n    const routeChange = (contest: IContestParentNew) =>{ \r\n        localStorage.removeItem('description_contest');\r\n        localStorage.setItem('description_contest', contest.description);\r\n        localStorage.removeItem('contest_id');\r\n        localStorage.setItem('contest_id', contest.id.toString())\r\n        localStorage.removeItem('contest_name');\r\n        localStorage.setItem('contest_name', contest.name)\r\n        localStorage.removeItem('art_age_name');\r\n        localStorage.setItem('art_age_name', contest.art_age_name.toString())\r\n        localStorage.removeItem('art_type_name');\r\n        localStorage.setItem('art_type_name', contest.art_type_name.toString())\r\n        localStorage.removeItem('registration_time');\r\n        localStorage.setItem('registration_time', contest.registration_time.toString())\r\n        localStorage.removeItem('start_time');\r\n        localStorage.setItem('start_time', contest.start_time.toString())\r\n        localStorage.removeItem('end_time');\r\n        localStorage.setItem('end_time', contest.end_time.toString())\r\n        localStorage.removeItem('max_participant');\r\n        localStorage.setItem('max_participant', contest.max_participant.toString())\r\n        let path = '/contests/register'; \r\n        history.push({\r\n            pathname: path,\r\n            state: { description: contest.description, id: contest.id}\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        let x = (contest_parent_news.contests.length - contest_parent_news.contests.length % 10) /10;\r\n        if (x === 0) {\r\n            setElement(contest_parent_news.contests)\r\n        }\r\n        else {\r\n            setElement(contest_parent_news.contests.slice(0,10))\r\n        }\r\n        \r\n         setTotalPage((x+1))\r\n    }, [contest_parent_news.contests])\r\n\r\n    console.log((totalPage))\r\n\r\n    function handlePagination(count: number) {\r\n        console.log(count)\r\n        if (count === totalPage) {\r\n            setElement(contest_parent_news.contests.slice(count*10))\r\n        }\r\n        else {\r\n            setElement(contest_parent_news.contests.slice(count*10,count*10 + 10))\r\n        }\r\n    }\r\n\r\n    const [filter, setFilter] = useState(1)\r\n    const [filter1, setFilter1] = useState(1)\r\n\r\n\r\n    function handleChange(e: any) {\r\n        setFilter(e.target.value)\r\n    }\r\n\r\n    function handleChange1(e: any) {\r\n        setFilter1(e.target.value)\r\n    }\r\n\r\n\r\n    console.log(element)\r\n\r\n    function handleFilter() {\r\n        console.log(filter)\r\n        console.log(filter1)\r\n        let k = contest_parent_news.contests.filter((ele, idx) => \r\n        ele !== undefined && ele.art_type_id == filter && ele.art_age_id == filter1\r\n        )\r\n\r\n        let x = (k.length - (k.length) % 10) / 10;\r\n        if (x === 0) {\r\n            setElement(k)\r\n        }\r\n        else {\r\n            setElement(k.slice(0, 10))\r\n        }\r\n        setTotalPage((x + 1))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"d-flex flex-row justify-content-between align-items-center filters\">\r\n                            <h6 className=\"ml-3\">Có {element.filter((val) => {\r\n                                if (props.value === \"\") {\r\n                                    return val;\r\n                                }\r\n                                else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))) {\r\n                                    return val;\r\n                                }\r\n                                return null\r\n                            }).length} kết quả</h6>\r\n                            <div className=\"right-sort\">\r\n                                <div className=\"sort-by mr-3\">\r\n                                    <span className=\"mr-1\">Lọc theo:</span>\r\n                                    <select name=\"cars\" id=\"cars\"\r\n                                        value={filter}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        {\r\n                                            art_types.artTypes.map((ele, idx) => {\r\n                                                return (\r\n                                                    <option value={ele.id}>{ele.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select>   \r\n                                    <select name=\"cars\" id=\"cars\" className=\"pl-2\"\r\n                                        value={filter1}\r\n                                        onChange={handleChange1}\r\n                                    >\r\n                                        {\r\n                                            art_ages.artAges.map((ele, idx) => {\r\n                                                return (\r\n                                                    <option value={ele.id}>{ele.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select>                              \r\n                                    <button className=\"btn btn-outline-dark btn-sm ml-3 filter\" type=\"button\" onClick={() => {handleFilter()}}>Lọc&nbsp;<i className=\"fa fa-flask\"></i></button></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-1\">\r\n                    {\r\n                        element.filter((val) => {\r\n                            if (props.value === \"\") {\r\n                                return val;\r\n                            }\r\n                            else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))) {\r\n                                return val;\r\n                            }\r\n                            return null\r\n                        }).map((ele, index) => {\r\n                            if (ele === undefined) {\r\n                                return null\r\n                            }\r\n                            return (\r\n                                <div className=\"col-md-4\" onClick={() => { routeChange(ele) }}>\r\n                                    <div className=\"p-card bg-white p-2 rounded px-3 product-x\">\r\n                                        <div className=\"d-flex align-items-center credits\"><img src={ele.image_url} width=\"100%\" alt=\"\" /></div>\r\n                                        <h5 className=\"mt-2\">{ele.name}</h5><span className=\"badge badge-danger py-1 mb-2\">{ele.art_type_name} &amp; {ele.art_age_name}</span>\r\n                                        <span className=\"d-block\">Ngày bắt đầu: {ele.start_time.replaceAll(\"T\", \" \")}</span>\r\n                                        <span className=\"d-block\">Ngày kết thúc đầu: {ele.end_time.replaceAll(\"T\", \" \")}</span>\r\n                                        <span className=\"d-block\">Số đăng kí tối đa: {ele.max_participant}</span>\r\n                                        <span className=\"d-block mb-5\">Ngày hết hạn đăng kí: {ele.registration_time.replaceAll(\"T\", \" \")}</span>\r\n                                        <div\r\n                                            className=\"d-flex justify-content-between stats\">\r\n                                            <div className=\"d-flex flex-row align-items-center\">\r\n                                                <div className=\"profiles\"><img className=\"rounded-circle\" src=\"https://i.imgur.com/4nUVGjW.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\" https://i.imgur.com/GHCtqgp.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\"https://i.imgur.com/UL0GS75.jpg\" alt=\"\" width=\"30\" /></div>{ele.total_register_contest}<span className=\"ml-3\">\r\n                                                    {\r\n                                                        function () {\r\n                                                            if (filter == 2) {\r\n                                                                if (ele.student_registered_id !== undefined && ele.student_registered_id !== null) {\r\n                                                                    let xx = \"\"\r\n                                                                    ele.student_registered_name.map((elex, idxx) => {\r\n                                                                        if (idxx < ele.student_registered_id.length - 1) {\r\n                                                                            xx  +=  elex + \",\"\r\n                                                                        }\r\n                                                                        else {\r\n                                                                            xx += ele\r\n                                                                        }\r\n                                                                        return null\r\n                                                                    })\r\n                                                                    return xx\r\n                                                                }\r\n                                                                else {\r\n                                                                    return 0\r\n                                                                }\r\n                                                            }\r\n                                                        }()\r\n                                                    }\r\n                                                </span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"d-flex justify-content-end text-right mt-2\">\r\n                    <nav>\r\n                        <ul className=\"pagination\">\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Previous\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&laquo;</span>\r\n                                </a>\r\n                            </li>\r\n                            {\r\n                                Array.from(Array((totalPage)).keys()).map((ele, idx) => {\r\n                                    return (\r\n                                        <li className=\"page-item\"><a className=\"page-link\" href=\"/\" onClick={(e) => { \r\n                                        e.preventDefault()\r\n                                        handlePagination(ele) }}>{ele + 1}</a></li>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Next\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&raquo;</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ContestNewListTest;\r\n","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./Discovery.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport ContestList from \"./ContestList\";\r\nimport { getContestParentNew } from \"../../common/service/ContestParentNew/GetContestParentNew\";\r\nimport ContestNewListTest from \"./ContestNewListTest\";\r\n\r\nconst DiscoveryParentContest: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    //const semester_classs: ISemesterClassState = useSelector((state: IStateType) => state.semester_classes);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getContestParentNew(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getContestParentNew(dispatch, id))\r\n            }\r\n        }\r\n\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khám phá\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                {/* <div className=\"row\">\r\n                <TopCard title=\"ĐÃ ĐĂNG KÍ\" text={`${numberTeacherRegisterSuccessfullCount}`} icon=\"book\" class=\"primary\" />\r\n            </div> */}\r\n\r\n            <div className=\"row\" id=\"search-box\">\r\n            <div className=\"col-xl-12 col-lg-12\">\r\n                <div className=\"input-group\" id=\"search-content\">\r\n                    <div className=\"form-outline\">\r\n                        <input type=\"text\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                            setSearchTerm(event.target.value)\r\n                            console.log(searchTerm)\r\n                        }}/>\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn btn-primary\">\r\n                        <i className=\"fas fa-search\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n                <div className=\"row\">\r\n                    <ContestNewListTest value={searchTerm}/>\r\n                </div>\r\n\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default DiscoveryParentContest;\r\n","import React, { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\nimport { putTeacherLeaveStatus } from \"../../common/service/TeacherLeave/PutTeacherLeave\";\r\n\r\n\r\nfunction TeacherLeaveList(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const teacher_leaves = useSelector((state) => state.teacher_leaves);\r\n    const history = useHistory();\r\n\r\n    const onChangeRoute = (student_leave) =>{ \r\n        localStorage.removeItem(\"detail_resson\")\r\n        localStorage.setItem('detail_resson', student_leave.description)\r\n        let path = '/student-leave/detail'; \r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    var id_x = localStorage.getItem('id');\r\n    var id = 0;\r\n    if (id_x !== null) {\r\n        id = parseInt(id_x);\r\n    }\r\n\r\n    const updateStatusTeacherLeave = (status) => {\r\n        const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n\r\n        dispatch(putTeacherLeaveStatus(id, {\r\n            status: status\r\n        }, idx))\r\n    }\r\n\r\n  const datas = teacher_leaves.leaves\r\n\r\n  const options = {\r\n    paginationSize: 5,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    totalSize: datas.length,\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log('Size per page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log('Page change!!!');\r\n      console.log('Newest size per page:' + sizePerPage);\r\n      console.log('Newest page:' + page);\r\n    }\r\n  };\r\n\r\n  function viewDetailButton(cell, row) {\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n        onChangeRoute(row)\r\n      }}>Chi tiết</button>\r\n    )\r\n  }\r\n\r\n  function acceptLeaveButton(cell, row) {\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-sussess\" onClick={() => {\r\n        updateStatusTeacherLeave(\"Approved\")\r\n      }}>Chấp nhận</button>\r\n    )\r\n  }\r\n\r\n  function removeLeaveButton(cell, row) {\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-warning\" onClick={() => {\r\n        updateStatusTeacherLeave(\"Not approved\")\r\n      }}>Xóa </button>\r\n    )\r\n  }\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'class_name',\r\n      text: 'Lớp',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'section_name',\r\n      text: 'Buổi học',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'teacher_name',\r\n      text: 'Giáo viên',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: 'section_number',\r\n      text: 'Buổi thứ',\r\n      filter: textFilter()\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: 'Hành động',\r\n      formatter: viewDetailButton\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: '',\r\n      formatter: acceptLeaveButton\r\n    },\r\n    {\r\n      dataField: '',\r\n      text: '',\r\n      formatter: removeLeaveButton\r\n    },\r\n  ];\r\n\r\n  const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n    <div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n      <div>\r\n        <div>\r\n          <BootstrapTable\r\n            hover\r\n            keyField=\"id\"\r\n            data={datas}\r\n            columns={columns}\r\n            filter={filterFactory()}\r\n            {...paginationTableProps}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <PaginationListStandalone {...paginationProps} /> */}\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n        <PaginationProvider\r\n          pagination={\r\n            paginationFactory(options)\r\n          }\r\n        >\r\n          {contentTable}\r\n        </PaginationProvider>\r\n      </div >\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default TeacherLeaveList;\r\n","import React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TopCard from \"../../common/components/TopCardUser\";\r\nimport { IRootPageStateType, IStateType, IStudentLeaveState, ITeacherLeaveState } from \"../../store/models/root.interface\";\r\nimport \"./RequestTeacher.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { getTeacherLeaveByTeacher } from \"../../common/service/TeacherLeave/GetTeacherLeaveByTeacher\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport TeacherLeaveList from \"./TeacherLeaveList1\";\r\n\r\nconst RequestTeacher1: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const student_leaves: IStudentLeaveState = useSelector((state: IStateType) => state.student_leaves);\r\n    const teacher_leaves: ITeacherLeaveState = useSelector((state: IStateType) => state.teacher_leaves);\r\n    console.log(student_leaves)\r\n    console.log(teacher_leaves)\r\n    const { promiseInProgress } = usePromiseTracker();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    const numberTeacherRegisterSuccessfullCount: number = student_leaves.leaves.length;\r\n    const numberTeacherNotRegisterCount: number = teacher_leaves.leaves.length;\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getTeacherLeaveByTeacher(dispatch, id))\r\n                }\r\n            }\r\n            else {\r\n\r\n                trackPromise(getTeacherLeaveByTeacher(dispatch, id))\r\n            }\r\n        }\r\n\r\n    }, [dispatch, access_token, refresh_token, id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Yêu cầu\", \"Giáo viên\"));\r\n    }, [path.area, dispatch])\r\n\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n                <ToastContainer />\r\n                <div className=\"row\">\r\n                    <TopCard title=\"SỐ YÊU CẦU DẠY THAY\" text={`${numberTeacherNotRegisterCount}`} icon=\"book\" class=\"primary\" />\r\n                    {/* <div className=\"col-xl-6 col-md-4 mb-4\" id=\"content-button-create-teacher-level\">\r\n                    <button className=\"btn btn-success btn-green\" id=\"btn-create-teacher-level\" onClick={() =>\r\n                    dispatch(setModificationState(TeacherRegisterQuantificationModificationStatus.Create))}>\r\n                        <i className=\"fas fa fa-plus\"></i>\r\n                        Đăng kí trình độ\r\n                    </button>\r\n                </div> */}\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"card shadow mb-4\" id=\"topcard-user\">\r\n                            <div className=\"card-header py-3\">\r\n                                <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Danh sách yêu cầu dạy thay</h6>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <TeacherLeaveList />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default RequestTeacher1;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toNonAccentVietnamese } from \"../../common/components/ConvertVietNamese\";\r\nimport { IContestStudent } from \"../../store/models/contest_student.interface\";\r\nimport { IArtAgeState, IArtTypeState, IContestStudentState, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./CourseListNew.css\"\r\n\r\nexport type semesterListProps = {\r\n    value?: string;\r\n    children?: React.ReactNode;\r\n  };\r\n\r\nfunction ContestNewListTest(props: semesterListProps): JSX.Element {\r\n    const contest_student: IContestStudentState = useSelector((state: IStateType) => state.contest_students);\r\n    const art_types: IArtTypeState = useSelector((state: IStateType) => state.art_types);\r\n    const art_ages: IArtAgeState = useSelector((state: IStateType) => state.art_ages);\r\n    \r\n    const [totalPage, setTotalPage] = useState(0)\r\n    const [element, setElement] = useState<IContestStudent[]>([])\r\n\r\n    const history = useHistory();\r\n    const routeChange = (contest: IContestStudent) =>{ \r\n        localStorage.removeItem('description_contest');\r\n        localStorage.setItem('description_contest', contest.description);\r\n        localStorage.removeItem('contest_id');\r\n        localStorage.setItem('contest_id', contest.id.toString())\r\n        localStorage.removeItem('contest_name');\r\n        localStorage.setItem('contest_name', contest.name)\r\n        localStorage.removeItem('art_age_name');\r\n        localStorage.setItem('art_age_name', contest.art_age_name.toString())\r\n        localStorage.removeItem('art_type_name');\r\n        localStorage.setItem('art_type_name', contest.art_type_name.toString())\r\n        localStorage.removeItem('registration_time');\r\n        localStorage.setItem('registration_time', contest.registration_time.toString())\r\n        localStorage.removeItem('start_time');\r\n        localStorage.setItem('start_time', contest.start_time.toString())\r\n        localStorage.removeItem('end_time');\r\n        localStorage.setItem('end_time', contest.end_time.toString())\r\n        localStorage.removeItem('max_participant');\r\n        localStorage.setItem('max_participant', contest.max_participant.toString())\r\n        let path = '/contests/register'; \r\n        history.push({\r\n            pathname: path,\r\n            state: { description: contest.description, id: contest.id}\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        let x = (contest_student.contest_new.length - contest_student.contest_new.length % 10) /10;\r\n        if (x === 0) {\r\n            setElement(contest_student.contest_new)\r\n        }\r\n        else {\r\n            setElement(contest_student.contest_new.slice(0,10))\r\n        }\r\n        \r\n         setTotalPage((x+1))\r\n    }, [contest_student.contest_new])\r\n\r\n    console.log((totalPage))\r\n\r\n    function handlePagination(count: number) {\r\n        console.log(count)\r\n        if (count === totalPage) {\r\n            setElement(contest_student.contest_new.slice(count*10))\r\n        }\r\n        else {\r\n            setElement(contest_student.contest_new.slice(count*10,count*10 + 10))\r\n        }\r\n    }\r\n\r\n    const [filter, setFilter] = useState(1)\r\n    const [filter1, setFilter1] = useState(1)\r\n\r\n\r\n    function handleChange(e: any) {\r\n        setFilter(e.target.value)\r\n    }\r\n\r\n    function handleChange1(e: any) {\r\n        setFilter1(e.target.value)\r\n    }\r\n\r\n\r\n    console.log(element)\r\n\r\n    function handleFilter() {\r\n        console.log(filter)\r\n        console.log(filter1)\r\n        let k = contest_student.contest_new.filter((ele, idx) => \r\n        ele !== undefined && ele.art_type_id == filter && ele.art_age_id == filter1\r\n        )\r\n\r\n        let x = (k.length - (k.length) % 10) / 10;\r\n        if (x === 0) {\r\n            setElement(k)\r\n        }\r\n        else {\r\n            setElement(k.slice(0, 10))\r\n        }\r\n        setTotalPage((x + 1))\r\n    }\r\n\r\n    console.log(element)\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"d-flex flex-row justify-content-between align-items-center filters\">\r\n                            <h6 className=\"ml-3\">Có {element.filter((val) => {\r\n                                if (props.value === \"\") {\r\n                                    return val;\r\n                                }\r\n                                else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))) {\r\n                                    return val;\r\n                                }\r\n                                return null\r\n                            }).length} kết quả</h6>\r\n                            <div className=\"right-sort\">\r\n                                <div className=\"sort-by mr-3\">\r\n                                    <span className=\"mr-1\">Lọc theo:</span>\r\n                                    <select name=\"cars\" id=\"cars\"\r\n                                        value={filter}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        {\r\n                                            art_types.artTypes.map((ele, idx) => {\r\n                                                return (\r\n                                                    <option value={ele.id}>{ele.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select>   \r\n                                    <select name=\"cars\" id=\"cars\" className=\"pl-2\"\r\n                                        value={filter1}\r\n                                        onChange={handleChange1}\r\n                                    >\r\n                                        {\r\n                                            art_ages.artAges.map((ele, idx) => {\r\n                                                return (\r\n                                                    <option value={ele.id}>{ele.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select>                              \r\n                                    <button className=\"btn btn-outline-dark btn-sm ml-3 filter\" type=\"button\" onClick={() => {handleFilter()}}>Lọc&nbsp;<i className=\"fa fa-flask\"></i></button></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-1\">\r\n                    {\r\n                        element.filter((val) => {\r\n                            if (props.value === \"\") {\r\n                                return val;\r\n                            }\r\n                            else if (typeof props.value !== 'undefined' && (toNonAccentVietnamese(val.name).toLowerCase().includes(props.value.toLowerCase()) || val.name.toLowerCase().includes(props.value.toLowerCase()))) {\r\n                                return val;\r\n                            }\r\n                            return null\r\n                        }).map((ele, index) => {\r\n                            if (ele === undefined) {\r\n                                return null\r\n                            }\r\n                            return (\r\n                                <div className=\"col-md-4\" onClick={() => { routeChange(ele) }}>\r\n                                    <div className=\"p-card bg-white p-2 rounded px-3 product-x\">\r\n                                        <div className=\"d-flex align-items-center credits\"><img src={ele.image_url} width=\"100%\" alt=\"\" /></div>\r\n                                        <h5 className=\"mt-2\">{ele.name}</h5><span className=\"badge badge-danger py-1 mb-2\">{ele.art_type_name} &amp; {ele.art_age_name}</span>\r\n                                        <span className=\"d-block\">Ngày bắt đầu: {ele.start_time.replaceAll(\"T\", \" \")}</span>\r\n                                        <span className=\"d-block\">Ngày kết thúc đầu: {ele.end_time.replaceAll(\"T\", \" \")}</span>\r\n                                        <span className=\"d-block\">Số đăng kí tối đa: {ele.max_participant}</span>\r\n                                        <span className=\"d-block mb-5\">Ngày hết hạn đăng kí: {ele.registration_time.replaceAll(\"T\", \" \")}</span>\r\n                                        <div\r\n                                            className=\"d-flex justify-content-between stats\">\r\n                                            <div className=\"d-flex flex-row align-items-center\">\r\n                                                <div className=\"profiles\"><img className=\"rounded-circle\" src=\"https://i.imgur.com/4nUVGjW.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\" https://i.imgur.com/GHCtqgp.jpg\" alt=\"\" width=\"30\" /><img className=\"rounded-circle\" src=\"https://i.imgur.com/UL0GS75.jpg\" alt=\"\" width=\"30\" /></div>{ele.total_register_contest}<span className=\"ml-3\">\r\n                                                    \r\n                                                </span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"d-flex justify-content-end text-right mt-2\">\r\n                    <nav>\r\n                        <ul className=\"pagination\">\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Previous\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&laquo;</span>\r\n                                </a>\r\n                            </li>\r\n                            {\r\n                                Array.from(Array((totalPage)).keys()).map((ele, idx) => {\r\n                                    return (\r\n                                        <li className=\"page-item\"><a className=\"page-link\" href=\"/\" onClick={(e) => { \r\n                                            e.preventDefault()\r\n                                            handlePagination(ele) }}>{ele + 1}</a></li>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <li className=\"page-item\">\r\n                                <a className=\"page-link\" aria-label=\"Next\" href=\"/\" onClick={(e) => e.preventDefault()}>\r\n                                    <span aria-hidden=\"true\">&raquo;</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ContestNewListTest;\r\n","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./Discovery.css\"\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { logout } from \"../../store/actions/account.actions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loading from \"../../common/components/Loading\";\r\nimport { getContestStudentByStudent } from \"../../common/service/ContestStudent/GetContestStudent\";\r\nimport ContestNewListTest from \"./ContestListNew\";\r\nimport { getArtType } from \"../../common/service/ArtType/GetArtType\";\r\nimport { getArtLevel } from \"../../common/service/ArtLevel/GetArtLevel\";\r\nimport { getArtAge } from \"../../common/service/ArtAge/GetArtAge\";\r\n\r\nconst DiscoveryStudentContest: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    //const semester_classs: ISemesterClassState = useSelector((state: IStateType) => state.semester_classes);\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    var id_x = localStorage.getItem('id');\r\n    var id: any = \"\";\r\n    if (id_x !== null) {\r\n        id = id_x;\r\n    }\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    let access_token = localStorage.getItem(\"access_token\");\r\n    let refresh_token = localStorage.getItem(\"refresh_token\");\r\n    useEffect(() => {\r\n        if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\r\n            let access_token_decode: any = jwt_decode(access_token)\r\n            let refresh_token_decode: any = jwt_decode(refresh_token)\r\n            let exp_access_token_decode = access_token_decode.exp;\r\n            let exp_refresh_token_decode = refresh_token_decode.exp;\r\n            let now_time = Date.now() / 1000;\r\n            console.log(exp_access_token_decode)\r\n            console.log(now_time)\r\n            if (exp_access_token_decode < now_time) {\r\n                if (exp_refresh_token_decode < now_time) {\r\n                    localStorage.removeItem('access_token') // Authorization\r\n                    localStorage.removeItem('refresh_token')\r\n                    localStorage.removeItem('username')\r\n                    localStorage.removeItem('role_privilege')\r\n                    localStorage.removeItem('id')\r\n                    localStorage.removeItem('contest_id')\r\n                    localStorage.removeItem('schedule_id')\r\n                    dispatch(logout())\r\n                }\r\n                else {\r\n                    trackPromise(getContestStudentByStudent(dispatch, id))\r\n                    trackPromise(getArtType(dispatch))\r\n                    trackPromise(getArtAge(dispatch))\r\n                    trackPromise(getArtLevel(dispatch))\r\n                }\r\n            }\r\n            else {\r\n                trackPromise(getContestStudentByStudent(dispatch, id))\r\n                trackPromise(getArtType(dispatch))\r\n                trackPromise(getArtAge(dispatch))\r\n                trackPromise(getArtLevel(dispatch))\r\n            }\r\n        }\r\n\r\n    }, [dispatch, id, access_token, refresh_token]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Khám phá\", \"\"));\r\n    }, [path.area, dispatch])\r\n\r\n\r\n    const [checked, setChecked] = useState(true);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    return (\r\n        promiseInProgress ?\r\n            <div className=\"row\" id=\"search-box\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"input-group\" id=\"search-content\">\r\n                        <div className=\"form-outline\">\r\n                            <Loading type={\"spin\"} color={\"rgb(53, 126, 221)\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> : <Fragment>\r\n                {/* <h1 className=\"h3 mb-2 text-gray-800\" id=\"home-teacher\">Trang chủ</h1> */}\r\n                {/* <p className=\"mb-4\">Summary and overview of our admin stuff here</p> */}\r\n\r\n                {/* <div className=\"row\">\r\n                <TopCard title=\"ĐÃ ĐĂNG KÍ\" text={`${numberTeacherRegisterSuccessfullCount}`} icon=\"book\" class=\"primary\" />\r\n            </div> */}\r\n\r\n                <div className=\"row\" id=\"search-box\">\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <div className=\"input-group\" id=\"search-content\">\r\n                            <div className=\"form-outline\">\r\n                                <input type=\"text\" id=\"form1\" className=\"form-control\" placeholder=\"Tìm kiếm\" onChange={(event) => {\r\n                                    setSearchTerm(event.target.value)\r\n                                    console.log(searchTerm)\r\n                                }} />\r\n                            </div>\r\n                            <button type=\"button\" className=\"btn btn-primary\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <ContestNewListTest value={searchTerm}/>\r\n                </div>\r\n\r\n\r\n            </Fragment>\r\n    );\r\n};\r\n\r\nexport default DiscoveryStudentContest;\r\n","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./GradeExamTeacher.css\"\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport NumberInput from \"../../common/components/NumberInput\";\r\nimport { postUserGradeExercise } from \"../../common/service/UserGradeExercise/PostUserGradeExercise\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { PhotoProvider, PhotoView } from \"react-photo-view\";\r\nimport 'react-photo-view/dist/react-photo-view.css';\r\n\r\nconst GradeExamTeacherEle: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n    let user_grade_exercise_submission = {\r\n        feedback: \"\",\r\n        score: 0\r\n    }\r\n\r\n    const [formState, setFormState] = useState({\r\n        feedback: { error: \"\", value: user_grade_exercise_submission.feedback },\r\n        score: { error: \"\", value: user_grade_exercise_submission.score },\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    function saveForm() {\r\n        const id = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n\r\n        dispatch(postUserGradeExercise({\r\n            teacher_id: localStorage.getItem('id'),\r\n            exercise_submission_id: localStorage.getItem('exercise_submission_id'),\r\n            score: formState.score.value,\r\n            feedback: formState.feedback.value\r\n        }, id))\r\n\r\n    }\r\n\r\n    var id_y = localStorage.getItem('exercise_id');\r\n    let exercise_id = 0;\r\n\r\n    if (id_y !== null) {\r\n        exercise_id = parseInt(id_y);\r\n    }\r\n\r\n    var id_z = localStorage.getItem('exercise_name');\r\n    let exercise_name = \"\";\r\n\r\n    if (id_z !== null) {\r\n        exercise_name = id_z;\r\n    }\r\n\r\n    var id_k = localStorage.getItem('image_url_exercise_submission');\r\n    let image_url_exercise_submission = \"\";\r\n\r\n    if (id_k !== null) {\r\n        image_url_exercise_submission = id_k;\r\n    }\r\n\r\n    var id_h = localStorage.getItem('time_submit');\r\n    let time_submit = \"\";\r\n\r\n    if (id_h !== null) {\r\n        time_submit = id_h;\r\n    }\r\n\r\n    var id_t = localStorage.getItem('student_name');\r\n    let student_name = \"\";\r\n\r\n    if (id_t !== null) {\r\n        student_name = id_t;\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Bài tập\", \"Chi tiết\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    const history = useHistory();\r\n\r\n    const routeChange1 = () => {\r\n        let path = '/exercise/result-grade';\r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6\">\r\n                    <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Bài làm của bé</h6>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <PhotoProvider>\r\n                            <PhotoView src={image_url_exercise_submission}>\r\n                                <img src={image_url_exercise_submission} alt=\"\" className=\"center-x\" />\r\n                            </PhotoView>\r\n                        </PhotoProvider>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6\">\r\n                    <div className=\"row\">\r\n                        <div className={`card shadow h-100 py-2 ml-4 mr-4`} id=\"topcard-user\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row no-gutters justify-content-left\">\r\n                                    <h4 id=\"full-name\">Thông tin bài nộp</h4>\r\n                                </div>\r\n                                <div className=\"row no-gutters justify-content-left\">\r\n                                    <p id=\"username-teacher\">Tên học sinh: {student_name}</p>\r\n                                </div>\r\n                                <div className=\"row no-gutters justify-content-left\">\r\n                                    <p id=\"username-teacher\">Thời gian nộp: {time_submit.replaceAll(\"T\", \" \")}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-4 ml-4\">\r\n                        <NumberInput\r\n                            id=\"input_score\"\r\n                            value={formState.score.value}\r\n                            field=\"score\"\r\n                            onChange={hasFormValueChanged}\r\n                            max={10}\r\n                            min={0}\r\n                            label=\"Nhập điểm\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Nhận xét</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                                <TextInput id=\"input_feedback\"\r\n                                    field=\"feedback\"\r\n                                    value={formState.feedback.value}\r\n                                    onChange={hasFormValueChanged}\r\n                                    required={false}\r\n                                    maxLength={100}\r\n                                    label=\"\"\r\n                                    placeholder=\"\"\r\n                                />\r\n                            </div>\r\n                            <button className=\"btn btn-warning\" onClick={() => { saveForm() }}>Lưu</button>\r\n                            <button className={`btn btn-success left-margin`} onClick={() => { routeChange1() }}>Hoàn thành</button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default GradeExamTeacherEle;\r\n","import React, { Dispatch, Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\r\nimport { IRootPageStateType, IStateType } from \"../../store/models/root.interface\";\r\nimport \"./GradeExamTeacher.css\"\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport NumberInput from \"../../common/components/NumberInput\";\r\nimport { postUserGradeExercise } from \"../../common/service/UserGradeExercise/PostUserGradeExercise\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { PhotoProvider, PhotoView } from \"react-photo-view\";\r\nimport 'react-photo-view/dist/react-photo-view.css';\r\n\r\nconst ViewExerciseTeacherStudent: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const path: IRootPageStateType = useSelector((state: IStateType) => state.root.page);\r\n\r\n    var id_y = localStorage.getItem('exercise_id');\r\n    let exercise_id = 0;\r\n\r\n    if (id_y !== null) {\r\n        exercise_id = parseInt(id_y);\r\n    }\r\n\r\n    var id_z = localStorage.getItem('exercise_name');\r\n    let exercise_name = \"\";\r\n\r\n    if (id_z !== null) {\r\n        exercise_name = id_z;\r\n    }\r\n\r\n    var id_k = localStorage.getItem('image_url_exercise_submission');\r\n    let image_url_exercise_submission = \"\";\r\n\r\n    if (id_k !== null) {\r\n        image_url_exercise_submission = id_k;\r\n    }\r\n\r\n    var id_h = localStorage.getItem('time_submit');\r\n    let time_submit = \"\";\r\n\r\n    if (id_h !== null) {\r\n        time_submit = id_h;\r\n    }\r\n\r\n    var id_t = localStorage.getItem('student_name');\r\n    let student_name = \"\";\r\n\r\n    if (id_t !== null) {\r\n        student_name = id_t;\r\n    }\r\n\r\n    var id_ta = localStorage.getItem('score_exercise');\r\n    let score_exercise: number = 0;\r\n\r\n    if (id_ta !== null) {\r\n        score_exercise = parseInt(id_ta);\r\n    }\r\n\r\n    var id_tb = localStorage.getItem('feedback');\r\n    let feedback = \"\";\r\n\r\n    if (id_tb !== null) {\r\n        feedback = (id_tb);\r\n    }\r\n\r\n    let user_grade_exercise_submission = {\r\n        feedback: feedback,\r\n        score: score_exercise\r\n    }\r\n\r\n    const [formState, setFormState] = useState({\r\n        feedback: { error: \"\", value: user_grade_exercise_submission.feedback },\r\n        score: { error: \"\", value: user_grade_exercise_submission.score },\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    function saveForm() {\r\n        const id = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n            position: toast.POSITION.TOP_CENTER\r\n        });\r\n\r\n        dispatch(postUserGradeExercise({\r\n            teacher_id: localStorage.getItem('id'),\r\n            exercise_submission_id: localStorage.getItem('exercise_submission_id'),\r\n            score: formState.score.value,\r\n            feedback: formState.feedback.value\r\n        }, id))\r\n\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPath(\"Bài tập\", \"Chi tiết\"));\r\n    }, [path.area, dispatch]);\r\n\r\n    const history = useHistory();\r\n\r\n    const routeChange1 = () => {\r\n        let path = '/exercise/result-grade';\r\n        history.push({\r\n            pathname: path,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-6 col-lg-6\">\r\n                    <div className=\"card-header py-3\">\r\n                        <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Bài làm của bé</h6>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <PhotoProvider>\r\n                            <PhotoView src={image_url_exercise_submission}>\r\n                                <img src={image_url_exercise_submission} alt=\"\" className=\"center-x\" />\r\n                            </PhotoView>\r\n                        </PhotoProvider>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"col-xl-6 col-lg-6\">\r\n                    <div className=\"row\">\r\n                        <div className={`card shadow h-100 py-2 ml-4 mr-4`} id=\"topcard-user\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row no-gutters justify-content-left\">\r\n                                    <h4 id=\"full-name\">Thông tin bài nộp</h4>\r\n                                </div>\r\n                                <div className=\"row no-gutters justify-content-left\">\r\n                                    <p id=\"username-teacher\">Tên học sinh: {student_name}</p>\r\n                                </div>\r\n                                <div className=\"row no-gutters justify-content-left\">\r\n                                    <p id=\"username-teacher\">Thời gian nộp: {time_submit.replaceAll(\"T\", \" \")}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-4 ml-4\">\r\n                        <NumberInput\r\n                            id=\"input_score\"\r\n                            value={formState.score.value}\r\n                            field=\"score\"\r\n                            onChange={hasFormValueChanged}\r\n                            max={10}\r\n                            min={0}\r\n                            label=\"Nhập điểm\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\" id=\"level-teacher\">Nhận xét</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                                <TextInput id=\"input_feedback\"\r\n                                    field=\"feedback\"\r\n                                    value={formState.feedback.value}\r\n                                    onChange={hasFormValueChanged}\r\n                                    required={false}\r\n                                    maxLength={100}\r\n                                    label=\"\"\r\n                                    placeholder=\"\"\r\n                                />\r\n                            </div>\r\n                            <button className=\"btn btn-warning\" onClick={() => { saveForm() }}>Lưu</button>\r\n                            <button className={`btn btn-success left-margin`} onClick={() => { routeChange1() }}>Hoàn thành</button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewExerciseTeacherStudent;\r\n","import React, { Fragment } from \"react\";\r\nimport { Switch, Route } from \"react-router\";\r\nimport \"./Routers.css\"\r\nimport LeftMenu from \"../components/LeftMenu/LeftMenu\";\r\nimport TopMenu from \"../components/TopMenu/TopMenu\";\r\nimport Home from \"../components/Home/Home\";\r\nimport Teacher from \"../components/Teachers/Teacher\";\r\nimport DetailTeacher from \"../components/Teachers/DetailTeacher\";\r\nimport Student from \"../components/Student/Student\";\r\nimport DetailStudent from \"../components/Student/DetailStudent\";\r\nimport Parent from \"../components/Parent/Parent\";\r\nimport DetailParent from \"../components/Parent/DetailParent\";\r\nimport Semester from \"../components/Semester/Semester\";\r\nimport Lesson from \"../components/Lesson/Lesson\";\r\nimport Art from \"../components/Art/Art\";\r\nimport Course from \"../components/Course/Course\";\r\nimport Class from \"../components/Class/Class\";\r\nimport DetailClass from \"../components/Class/DetailClass\";\r\nimport DetailLesson from \"../components/Class/DetailLesson\";\r\nimport Turnover from \"../components/Turnover/Turnover\";\r\nimport TeacherRequest from \"../components/Request/TeacherRequest\";\r\nimport RequestConfirmLevel from \"../components/Request/RequestConfirmLevel\";\r\nimport LessonPlan from \"../components/Course/LessonPlan\";\r\nimport Contest from \"../components/Contest/Contest\";\r\nimport DegreePhoto from \"../components/Request/DegreePhoto\";\r\nimport CourseNomalForm from \"../components/Course/CourseNomalForm\";\r\nimport ContestForm from \"../components/Contest/ContestForm\";\r\nimport CourseNomalFormEdit from \"../components/Course/CourseNomalFormEdit\";\r\nimport Account from \"../components/Account/Account\";\r\nimport ChangePassword from \"../components/Account/ChangePassword\";\r\nimport ResultContest from \"../components/Contest/ResultContest\";\r\nimport SectionTemplate from \"../components/SectionTemplate/SectionTemplate\";\r\nimport SectionTemplateForm from \"../components/SectionTemplate/SectionTemplateForm\";\r\nimport TeacherHome from \"../components/Home/TeacherHome\";\r\nimport ScheduleClass from \"../components/Class/ScheduleClass\";\r\nimport CourseTeacher from \"../components/Course/CourseTeacher\";\r\nimport ScheduleTeacher from \"../components/Schedule/ScheduleTeacher\";\r\nimport CourseTeacherDetail from \"../components/Course/CourseTeacherDetail\";\r\nimport TeacherLevel from \"../components/TeacherLevel/TeacherLevel\";\r\nimport TeacherLevelDetail from \"../components/TeacherLevel/TeacherLevelDetail\";\r\nimport ClassTeacher from \"../components/Class/ClassTeacher\";\r\nimport ClassTeacherDetail from \"../components/Class/ClassTeacherDetail\";\r\nimport ContestTeacher from \"../components/Contest/ContestTeacher\";\r\nimport ManageStudent from \"../components/ManageStudent/ManageStudent\";\r\nimport ExerciseStudentList from \"../components/ManageStudent/ExerciseStudentList\";\r\nimport DetailExerciseStudent from \"../components/ManageStudent/DetailExerciseStudent\";\r\nimport DetailClassTeacher from \"../components/Class/DetailClassTeacher\";\r\nimport GradeExamTeacher from \"../components/Exam/GradeExamTeacher\";\r\nimport ResultGradeExamTeacher from \"../components/Exam/ResultGradeExamTeacher\";\r\nimport AnalytisResultGradeExamTeacher from \"../components/Exam/AnalytisScoreExamTeacher\";\r\nimport SectionTeacher from \"../components/SectionTeacher/SectionTeacher\";\r\nimport EditSectionTeacher from \"../components/SectionTeacher/EditSectionTeacher\";\r\nimport ViewSectionTeacher from \"../components/SectionTeacher/ViewSectionTeacher\";\r\nimport RequestTeacher from \"../components/RequestTeacher/RequestTeacher\";\r\nimport ExamTeacher from \"../components/Exam/ExamTeacher\";\r\nimport StudentLeaveDetail from \"../components/RequestTeacher/StudentLeaveDetail\";\r\nimport DetailTeacherRequest from \"../components/Request/DetailTeacherRequest\";\r\nimport TutorialEditRequest from \"../components/Request/TutorialEditRequest\";\r\nimport ContestDetailTeacher from \"../components/Contest/ContestDetailTeacher\";\r\nimport GradeContestTeacher from \"../components/Contest/GradeContestTeacher\";\r\nimport ResultGradeContestTeacher from \"../components/Contest/ResultGradeContestTeacher\";\r\nimport AnalytisResultGradeContestTeacher from \"../components/Contest/AnalytisResultGradeContestTeacher\";\r\nimport DetailContestTeacher from \"../components/Contest/DetailContestTeacher\";\r\nimport NotificationDetail from \"../components/Notification/NotificationDetail\";\r\nimport Notification from \"../components/Notification/Notification\";\r\nimport ParentHome from \"../components/Home/ParentHome\";\r\nimport GuessColor from \"../components/GuessColor\";\r\nimport CourseParent from \"../components/Course/CourseParent\";\r\nimport ContestParent from \"../components/Contest/ContestParent\";\r\nimport ScheduleParent from \"../components/Schedule/ScheduleParent\";\r\nimport CourseStudent from \"../components/Course/CourseStudent\";\r\nimport ScheduleStudent from \"../components/Schedule/ScheduleStudent\";\r\nimport ContestStudent from \"../components/Contest/ContestStudent\";\r\nimport StudentHome from \"../components/Home/StudentHome\";\r\nimport ManageChild from \"../components/ManageChild/ManageChild\";\r\nimport ManageClassesDone from \"../components/ManageChild/ManageClassesDone\";\r\nimport ClassParent from \"../components/ClassParent/ClassParent\";\r\nimport ManageClassesDoing from \"../components/ManageChild/ManageClassesDoing\";\r\nimport SemesterClassDetail from \"../components/Discovery/SemesterClassDetail\";\r\nimport ConestDetail from \"../components/Discovery/ContestDetail\";\r\nimport CartForm from \"../components/Discovery/CartForm\";\r\nimport DetailContestStudent from \"../components/ManageStudent/DetailContestStudent\";\r\nimport Attendance from \"../components/SectionTeacher/Attendance\";\r\nimport ClassStudent from \"../components/ClassStudent/ClassStudent\";\r\nimport DiscoveryStudent from \"../components/DiscoveryStudent/Discovery\";\r\nimport ConestDetailStudent from \"../components/Discovery/ContestDetail\";\r\nimport SemesterClassDetailStudent from \"../components/DiscoveryStudent/SemesterClassDetail\";\r\nimport DetailClassStudent from \"../components/ClassStudent/DetailClassStudent\";\r\nimport SectionStudent from \"../components/ClassStudent/SectionStudent\";\r\nimport ViewSectionStudent from \"../components/ClassStudent/ViewSectionStudent\";\r\nimport DetailExerciseStudent1 from \"../components/ManageStudent/DetailExerciseStudent1\";\r\nimport FormSubmit from \"../components/ClassStudent/FormSubmit\";\r\nimport FormSubmitContestStudent from \"../components/Contest/FormSubmitContestStudent\";\r\nimport ScheduleClassStudent from \"../components/ClassStudent/ScheduleClassStudent\";\r\nimport ViewExerciseSubmission from \"../components/Exercise/ViewExerciseSubmission\";\r\nimport SemesterClassStudentNew from \"../components/DiscoveryStudent/SemesterClasssStudentNew\";\r\nimport ReivewClassDone from \"../components/ClassStudent/ReviewClassDone\";\r\nimport ExerciseStudentList1 from \"../components/ClassStudent/ExerciseStudentList1\";\r\nimport ReviewStart from \"../components/ClassStudent/ReviewStart\";\r\nimport SemesterClassParentNew from \"../components/Discovery/SemesterClassParentNew\";\r\nimport SemesterClassTeacherNew from \"../components/Course/SemesterClassTeacherNew\";\r\nimport Header from \"../components/LeftMenu/LeftMenu\";\r\nimport ClassTeacherEndDetail from \"../components/ClassTeacher/ClassTeacherEndDetail\";\r\nimport ManageStudentEnd from \"../components/ManageStudent/ManageStudentEnd\";\r\nimport DiscoveryParent from \"../components/Discovery/Discovery\";\r\nimport DiscoveryParentContest from \"../components/Discovery/DiscoveryContest\";\r\nimport RequestTeacher1 from \"../components/RequestTeacher/RequestTeacher1\";\r\nimport DiscoveryStudentContest from \"../components/DiscoveryStudent/Discovery1\";\r\nimport GradeExamTeacherEle from \"../components/Exam/GradeExamTeacherEle\";\r\nimport ViewExerciseTeacherStudent from \"../components/Exam/ViewExerciseTeacherStudent\";\r\n\r\nconst Routers: React.FC = () => {\r\n    var role_privilege = localStorage.getItem('role_privilege')\r\n    var rolePrivilege:string[] =[]\r\n    var roleUser :string =\"\"\r\n    if (role_privilege !== null) {\r\n        rolePrivilege = role_privilege.split(',')\r\n        roleUser = rolePrivilege[0]\r\n    }\r\n    if (roleUser === \"TEACHER_USER\"){\r\n        return (\r\n            <Fragment>\r\n                <LeftMenu />\r\n                <div id=\"content-wrapper\" className=\"d-flex flex-column content-wrapper-teacher\">\r\n                    <div id=\"content\" className=\"teacher-content\">\r\n                        <TopMenu />\r\n                        <div className=\"container-fluid\">\r\n                            <Switch>\r\n                                <Route path={`/change-password`}><ChangePassword /></Route>\r\n                                <Route path={`/account`}><Account /></Route>\r\n                                <Route path={`/class/schedule`}><ScheduleClass /></Route>\r\n                                <Route path={`/attendance`}><Attendance /></Route>\r\n                                <Route path={`/student-leave/detail`}><StudentLeaveDetail /></Route>\r\n                                <Route path={`/teacher-level/detail`}><TeacherLevelDetail /></Route>                              \r\n                                <Route path={`/teacher-level`}><TeacherLevel /></Route>\r\n                                <Route path={`/courses/semester-classes`}><SemesterClassTeacherNew /></Route>\r\n                                <Route path={`/semester-class/detail`}><CourseTeacherDetail /></Route>\r\n                                <Route path={`/courses`}><CourseTeacher /></Route>\r\n                                <Route path={`/contests/detail`}><ContestDetailTeacher /></Route>\r\n                                <Route path={`/contests/detail-contest`}><DetailContestTeacher /></Route>\r\n                                <Route path={`/contest/result-grade`}><ResultGradeContestTeacher /></Route>\r\n                                <Route path={`/contest/result-analytis`}><AnalytisResultGradeContestTeacher /></Route>\r\n                                <Route path={`/contest/grade`}><GradeContestTeacher /></Route>\r\n                                <Route path={`/contests`}><ContestTeacher /></Route>\r\n                                <Route path={`/classes/detail-student`}><DetailClassTeacher /></Route>\r\n                                <Route path={`/exercise/grade`}><GradeExamTeacher /></Route>\r\n                                <Route path={`/exercise-grade`}><GradeExamTeacherEle /></Route>\r\n                                <Route path={`/exercise/result-analytis`}><AnalytisResultGradeExamTeacher /></Route>\r\n                                <Route path={`/classes/section`}><SectionTeacher /></Route>\r\n                                <Route path={`/section/edit`}><EditSectionTeacher /></Route>\r\n                                <Route path={`/section/view`}><ViewSectionTeacher /></Route>\r\n                                <Route path={`/request/student`}><RequestTeacher /></Route>\r\n                                <Route path={`/request/teacher`}><RequestTeacher1 /></Route>\r\n                                <Route path={`/notification/detail`}><NotificationDetail /></Route>\r\n                                <Route path={`/notification`}><Notification /></Route>\r\n                                <Route path={`/exercise/result-grade`}><ResultGradeExamTeacher /></Route>\r\n                                <Route path={`/exercise/student`}><ViewExerciseTeacherStudent /></Route>\r\n                                <Route path={`/class/exercise-student`}><ExerciseStudentList /></Route>\r\n                                <Route path={`/classes-end/detail`}><ClassTeacherEndDetail /></Route>\r\n                                <Route path={`/classes/detail`}><ClassTeacherDetail /></Route>\r\n                                <Route path={`/classes`}><ClassTeacher /></Route>\r\n                                <Route path={`/schedule-teacher`}><ScheduleTeacher /></Route>\r\n                                <Route path={`/manage-student-end`}><ManageStudentEnd /></Route>\r\n                                <Route path={`/manage-student`}><ManageStudent /></Route>\r\n                                <Route path={`/exercise/detail`}><DetailExerciseStudent /></Route>\r\n                                <Route path={`/exercise`}><ExamTeacher /></Route>\r\n                                <Route path=\"/\"><TeacherHome /></Route>\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n    else if (roleUser === \"PARENT_USER\") {\r\n        return (\r\n            <Fragment>\r\n                <LeftMenu />\r\n                <div id=\"content-wrapper\" className=\"d-flex flex-column content-wrapper-teacher\">\r\n                    <div id=\"content\" className=\"teacher-content\">\r\n                        <TopMenu />\r\n                        <div className=\"container-fluid content-page\">\r\n                            <Switch>\r\n                                <Route path={`/teacher-request/detail`}><DetailTeacherRequest /></Route>\r\n                                <Route path={`/change-password`}><ChangePassword /></Route>\r\n                                <Route path={`/account`}><Account /></Route>  \r\n                                <Route path={`/courses/semester-classes`}><SemesterClassParentNew /></Route>\r\n                                <Route path={`/contests/detail`}><ContestDetailTeacher /></Route>\r\n                                <Route path={`/contests/detail-contest`}><DetailContestTeacher /></Route>\r\n                                <Route path={`/contest/result-grade`}><ResultGradeContestTeacher /></Route>\r\n                                <Route path={`/contest/result-analytis`}><AnalytisResultGradeContestTeacher /></Route>\r\n                                <Route path={`/cart`}><CartForm /></Route>\r\n                                <Route path={`/discover/course`}><DiscoveryParent /></Route>\r\n                                <Route path={`/discover/contest`}><DiscoveryParentContest /></Route>\r\n                                <Route path={`/exercise-submission/view`}><ViewExerciseSubmission /></Route>\r\n                                <Route path={`/class/exercise-student`}><ExerciseStudentList /></Route>\r\n                                <Route path={`/exercise/detail`}><DetailExerciseStudent /></Route>\r\n                                <Route path={`/contest/detail`}><DetailContestStudent /></Route>\r\n                                <Route path={`/student/classes-doing`}><ManageClassesDoing /></Route>\r\n                                <Route path={`/students/detail`}><ManageChild /></Route>    \r\n                                <Route path={`/student/class`}><ManageClassesDone /></Route>                        \r\n                                <Route path={`/notification/detail`}><NotificationDetail /></Route>\r\n                                <Route path={`/notification`}><Notification /></Route>\r\n                                <Route path={`/semester-class/detail`}><SemesterClassDetail /></Route>\r\n                                <Route path={`/courses`}><CourseParent /></Route>\r\n                                <Route path={`/classes`}><ClassParent /></Route>\r\n                                <Route path={`/contests/register`}><ConestDetail /></Route>\r\n                                <Route path={`/contests`}><ContestParent /></Route>\r\n                                <Route path={`/schedules`}><ScheduleParent /></Route>\r\n                                <Route path=\"/\"><ParentHome /></Route>\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n    else if (roleUser === \"STUDENT_USER\"){\r\n        return (\r\n            <Fragment>\r\n                <LeftMenu />\r\n                <div id=\"content-wrapper\" className=\"d-flex flex-column content-wrapper-teacher\">\r\n                    <div id=\"content\" className=\"teacher-content\">\r\n                        <TopMenu />\r\n                        <div className=\"container-fluid content-page\">\r\n                            <Switch>\r\n                                <Route path={`/change-password`}><ChangePassword /></Route>\r\n                                <Route path={`/account`}><Account /></Route>                            \r\n                                <Route path={`/notification/detail`}><NotificationDetail /></Route>\r\n                                <Route path={`/notification`}><Notification /></Route>\r\n                                <Route path={`/exercise-submission/view`}><ViewExerciseSubmission /></Route>\r\n                                <Route path={`/contests/submit`}><FormSubmitContestStudent /></Route>\r\n                                <Route path={`/contests/detail-contest`}><DetailContestTeacher /></Route>\r\n                                <Route path={`/contest/result-grade`}><ResultGradeContestTeacher /></Route>\r\n                                <Route path={`/contest/result-analytis`}><AnalytisResultGradeContestTeacher /></Route>\r\n                                <Route path={`/semester-class/detail`}><SemesterClassDetailStudent /></Route>\r\n                                <Route path={`/classes/section`}><SectionStudent /></Route>\r\n                                <Route path={`/section/view`}><ViewSectionStudent /></Route>\r\n                                <Route path={`/cart`}><CartForm /></Route>\r\n                                <Route path={`/courses/semester-classes`}><SemesterClassStudentNew /></Route>\r\n                                <Route path={`/courses`}><CourseStudent /></Route>\r\n                                <Route path={`/exercise/detail`}><DetailExerciseStudent1 /></Route>\r\n                                <Route path={`/exercise/score`}><DetailExerciseStudent /></Route>\r\n                                <Route path={`/classes/form-review`}><ReviewStart /></Route>\r\n                                <Route path={`/exercise/submit`}><FormSubmit /></Route>\r\n                                <Route path={`/discover/course`}><DiscoveryStudent /></Route>\r\n                                <Route path={`/discover/contest`}><DiscoveryStudentContest /></Route>\r\n                                <Route path={`/classes/exercise-student`}><ExerciseStudentList1 /></Route>\r\n                                <Route path={`/classes/review`}><ReivewClassDone /></Route>\r\n                                <Route path={`/classes/schedule`}><ScheduleClassStudent /></Route>\r\n                                <Route path={`/classes/detail-student`}><DetailClassStudent /></Route>\r\n                                <Route path={`/contests/register`}><ConestDetailStudent /></Route>\r\n                                <Route path={`/contest/detail`}><DetailContestStudent /></Route>\r\n                                <Route path={`/contests`}><ContestStudent /></Route>\r\n                                <Route path={`/classes`}><ClassStudent /></Route>\r\n                                <Route path={`/schedules`}><ScheduleStudent /></Route>\r\n                                <Route path={`/game/guess-color`}><GuessColor /></Route>\r\n                                <Route path=\"/\"><StudentHome /></Route>\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Fragment>\r\n                <Header />\r\n                <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n                    <div id=\"content\">\r\n                        <TopMenu />\r\n                        <div className=\"container-fluid\">\r\n                            <Switch>\r\n                                <Route path={`/teacher-request/detail`}><DetailTeacherRequest /></Route>\r\n                                <Route path={`/change-password`}><ChangePassword /></Route>\r\n                                <Route path={`/account`}><Account /></Route>\r\n                                <Route path={`/section/view`}><ViewSectionTeacher /></Route>\r\n                                <Route path={`/parents/detail`}><DetailParent /></Route>\r\n                                <Route path={`/parents`}><Parent /></Route>\r\n                                <Route path={`/students/detail`}><DetailStudent /></Route>\r\n                                <Route path={`/students`}><Student /></Route>\r\n                                <Route path={`/semesters`}><Semester /></Route>\r\n                                <Route path={`/lessons`}><Lesson /></Route>\r\n                                <Route path={`/arts`}><Art /></Route>\r\n                                <Route path={`/class/lesson`}><DetailLesson /></Route>\r\n                                <Route path={`/class/detail`}><DetailClass /></Route>\r\n                                <Route path={`/class/schedule`}><ScheduleClass /></Route>\r\n                                <Route path={`/class`}><Class /></Route>\r\n                                <Route path={`/section-template/edit`}><SectionTemplateForm /></Route>\r\n                                <Route path={`/courses/section-template`}><SectionTemplate /></Route>\r\n                                <Route path={`/courses/lesson-plan`}><LessonPlan /></Route>\r\n                                <Route path={`/courses/create-course`}><CourseNomalForm /></Route>\r\n                                <Route path={`/courses/edit-course`}><CourseNomalFormEdit /></Route>\r\n                                <Route path={`/courses/:id_course`}><CourseNomalForm /></Route>\r\n                                <Route path={`/courses`}><Course /></Route>\r\n                                <Route path={`/contests/result`}><ResultContest /></Route>\r\n                                <Route path={`/contests/edit-contest`}><ContestForm /></Route>\r\n                                <Route path={`/contests/:id_contest`}><ContestForm /></Route>\r\n                                <Route path={`/contests`}><Contest /></Route>\r\n                                <Route path={`/turnovers`}><Turnover /></Route>\r\n                                <Route path={`/tutorial-edit`}><TutorialEditRequest /></Route>\r\n                                <Route path={`/request-teacher-off`}><TeacherRequest /></Route>\r\n                                <Route path={`/teachers/request-level/degree-photo`}><DegreePhoto /></Route>\r\n                                <Route path={`/teachers/request-level`}><RequestConfirmLevel /></Route>\r\n                                <Route path=\"/teachers/detail\"><DetailTeacher /></Route>\r\n                                <Route path={`/teachers`}><Teacher /></Route>\r\n                                <Route path={`/notification/detail`}><NotificationDetail /></Route>\r\n                                <Route path={`/notification`}><Notification /></Route>\r\n                                <Route path=\"/\"><Home /></Route>\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Routers;","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../../assets/css/Header.css'\r\n\r\nconst Header: React.FC = () => {\r\n    let history = useHistory()\r\n    function handlerStart() {\r\n        history.push('/auth')\r\n    }\r\n    return (\r\n        <div className=\"header\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                <a className=\"navbar-brand text-logo\" href=\"/\" style={{\r\n                    color: \"#EBD510\",\r\n                    fontSize: '28px'\r\n                }}>KidsDrawing</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\" style={{\r\n                            marginRight: \"10px\"\r\n                        }}>\r\n                            <button className=\"btn btn-sigup my-2 my-sm-0\" id='btn-sigup-langdingpage' style={{\r\n                                backgroundColor: \"#5A47AB\",\r\n                                border: '1px solid #F2F2F2',\r\n                                color: \"#ffffff\",\r\n                                fontWeight: \"bold\",\r\n                            }}>Đăng kí</button>\r\n                        </li>\r\n                        <li className=\"nav-item\" style={{\r\n                            marginRight: \"10px\"\r\n                        }}>\r\n                            <button className=\"btn btn-sigin my-2 my-sm-0\" id='btn-sigin-landingpage' style={{\r\n                                backgroundColor: \"#F2F2F2\",\r\n                                color: \"#5A47AB\",\r\n                                fontWeight: \"bold\"\r\n                            }} onClick={() => handlerStart()}>Đăng nhập</button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Footer: React.FC = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <footer className=\"page-footer font-small blue pt-4\">\r\n\r\n                <div className=\"container-fluid text-center text-md-left\">\r\n\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-md-3 mt-md-0 mt-3\">\r\n\r\n                            <h5 style={{\r\n                                color: \"#EBD510\"\r\n                            }}>KidsDrawing</h5>\r\n                            <p style={{\r\n                                color: \"#ffffff\"\r\n                            }}>Hệ thống dạy vẽ tranh trực tuyến cho trẻ.\r\n                                Với sứ mệnh mang niềm đam mê vẽ tranh\r\n                                đến với các bé.</p>\r\n\r\n                        </div>\r\n\r\n                        <hr className=\"clearfix w-100 d-md-none pb-3\" />\r\n\r\n                        <div className=\"col-md-3 mb-md-0 mb-3\">\r\n\r\n                            <h6 style={{\r\n                                color: \"#F2F2F2\"\r\n                            }}>Số điện thoại</h6>\r\n\r\n                            <ul className=\"list-unstyled\">\r\n                                <li>\r\n                                    <p style={{\r\n                                        color: \"#ffffff\"\r\n                                    }}>+084 989439678</p>\r\n                                </li>\r\n                            </ul>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-md-3 mb-md-0 mb-3\">\r\n\r\n                            <h6 style={{\r\n                                color: \"#F2F2F2\"\r\n                            }}>Email</h6>\r\n\r\n                            <ul className=\"list-unstyled\">\r\n                                <li>\r\n                                    <p style={{\r\n                                        color: \"#ffffff\"\r\n                                    }}>kidsdrawing@gmail.com</p>\r\n                                </li>\r\n                            </ul>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-md-3 mb-md-0 mb-3\">\r\n\r\n                            <h6 style={{\r\n                                color: \"#F2F2F2\"\r\n                            }}>Địa chỉ</h6>\r\n\r\n                            <ul className=\"list-unstyled\">\r\n                                <li>\r\n                                    <p style={{\r\n                                        color: \"#ffffff\"\r\n                                    }}>Quảng Chính, Quảng Xương, Thanh Hóa</p>\r\n                                </li>\r\n                            </ul>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"footer-copyright text-center py-3\" style={{\r\n                    color: \"#ffffff\"\r\n                }}>© 2020 Copyright:\r\n                    <a href=\"/\"> MDBootstrap.com</a>\r\n                </div>\r\n\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n//import { OnChangeModel } from \"../../common/types/Form.types\";\r\n//import { useDispatch } from \"react-redux\";\r\n//import { login } from \"../../store/actions/account.actions\";\r\n//import TextInput from \"../../common/components/TextInput\";\r\nimport \"../../assets/css/LandingPage.css\"\r\nimport Header from \"../../common/components/Header\";\r\nimport Footer from \"../../common/components/Footer\";\r\n\r\nconst LandingPage: React.FC = () => {\r\n\r\n    return (\r\n\r\n        <div className=\"container-fluid full-height\" id=\"login-page\">\r\n            <Header />\r\n            <div className='container-fluid' id=\"content-landingpage\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6 col-sm-6\">\r\n                        <div className='text' style={{\r\n                            marginLeft:' 85px',\r\n                            marginTop: '150px',\r\n                        }}>\r\n                            <h1 className='header-landingpage' style={{\r\n                                color: '#EBD510',\r\n                                fontSize: '40px',\r\n                            }}>KidsDrawing</h1>\r\n                            <h2 className='description' style={{\r\n                                color: '#ffffff',\r\n                                fontSize: '40px'\r\n                            }}>Ươm mầm ước mơ của bé</h2>\r\n                            <button className=\"btn btn-primary btn-sigup-landingpage my-2 my-sm-0\" >Đăng kí ngay</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-6 col-sm-6 text-center\">\r\n                        <div className='slide-bar'>\r\n                            <img src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1667290306/o0ymcs4lblpy2hfmisyq.png\" alt=\"First slide\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React, { useState, FormEvent, Dispatch } from \"react\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport '../../assets/css/Login.css'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { postResetPassword } from \"../../common/service/ResetPassword/PostResetPassword\";\r\n\r\nconst ForgotPassword: React.FC = () => {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const history = useHistory()\r\n\r\n  const [formState, setFormState] = useState({\r\n    username: { error: \"\", value: \"\" },\r\n    password: { error: \"\", value: \"\" }\r\n  });\r\n\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n  }\r\n\r\n  function submit(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if(isFormInvalid()) { return; }\r\n    const idx = toast.loading(\"Đang xử lý. Vui lòng đợi giây lát...\", {\r\n      position: toast.POSITION.TOP_CENTER\r\n    });\r\n    dispatch(postResetPassword(formState.username.value, idx))\r\n  }\r\n\r\n  function isFormInvalid() {\r\n    return (formState.username.error \r\n      || !formState.username.value );\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid() as boolean;\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  const changeRoute = () => {\r\n    history.push('/landing-page')\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"container-fluid \" id=\"login-page\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-xl-10 col-lg-10 col-md-9\">\r\n          <h2 id=\"text-logo\" onClick={changeRoute}>KidsDrawing</h2>\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-xl-10 col-lg-12 col-md-9\">\r\n          <div className=\"card o-hidden border-0  my-5\">\r\n            <div className=\"card-body p-0\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-6 d-none d-lg-block text-center\" id=\"image-login-page\">\r\n                  <img src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1667290306/o0ymcs4lblpy2hfmisyq.png\" alt=\"First slide\" />\r\n                </div>\r\n                <div className=\"col-lg-6 shadow-lg\">\r\n                  <div className=\"p-5\">\r\n                    <div className=\"text-center\">\r\n                      <h1 className=\"h4 text-gray-900 mb-4\">Quên mật khẩu</h1>\r\n                    </div>\r\n                    <form className=\"user\" onSubmit={submit}>\r\n                      <div className=\"form-group\">\r\n\r\n                        <TextInput id=\"input_username\"\r\n                          field=\"username\"\r\n                          value={formState.username.value}\r\n                          onChange={hasFormValueChanged}\r\n                          required={true}\r\n                          maxLength={100}\r\n                          label=\"Email\"\r\n                          placeholder=\"\" />\r\n                      </div>\r\n                      <button\r\n                        className={`btn btn-primary btn-user btn-block ${getDisabledClass()}`}\r\n                        type=\"submit\">\r\n                        Gửi\r\n                      </button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/schedule.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postResetPassword(email: string, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/password-reset-token/user/resetPassword/${email}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postResetPassword(email, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                localStorage.removeItem('token_reset_password') // Authorization\r\n                localStorage.setItem('token_reset_password', data.token)\r\n                toast.update(idx, { render: \"Vui lòng đợi email!\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Gửi yêu cầu không thành công!\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch } from \"react\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport '../../assets/css/Login.css'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { postSavePassword } from \"../../common/service/ResetPassword/PostSavePassword\";\r\n\r\nconst UpdatePassword: React.FC = () => {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const history = useHistory()\r\n\r\n  const [formState, setFormState] = useState({\r\n    username: { error: \"\", value: \"\" },\r\n    password: { error: \"\", value: \"\" }\r\n  });\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n  }\r\n\r\n  function submit(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if(isFormInvalid()) { return; }\r\n    const idx = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\r\n      position: toast.POSITION.TOP_CENTER\r\n    });\r\n    dispatch(postSavePassword(\r\n        {\r\n            newPassword: formState.password.value, \r\n            token: localStorage.getItem('token_reset_password')\r\n        }, idx))\r\n  }\r\n\r\n  function isFormInvalid() {\r\n    return (formState.password.error || !formState.password.value);\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid() as boolean;\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  const changeRoute = () => {\r\n    history.push('/landing-page')\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"container-fluid \" id=\"login-page\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-xl-10 col-lg-10 col-md-9\">\r\n          <h2 id=\"text-logo\" onClick={changeRoute}>KidsDrawing</h2>\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-xl-10 col-lg-12 col-md-9\">\r\n          <div className=\"card o-hidden border-0  my-5\">\r\n            <div className=\"card-body p-0\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-6 d-none d-lg-block text-center\" id=\"image-login-page\">\r\n                  <img src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1667290306/o0ymcs4lblpy2hfmisyq.png\" alt=\"First slide\" />\r\n                </div>\r\n                <div className=\"col-lg-6 shadow-lg\">\r\n                  <div className=\"p-5\">\r\n                    <div className=\"text-center\">\r\n                      <h1 className=\"h4 text-gray-900 mb-4\">Thay đổi mật khẩu</h1>\r\n                    </div>\r\n                    <form className=\"user\" onSubmit={submit}>\r\n                      <div className=\"form-group\">\r\n                        <TextInput id=\"input_password\"\r\n                          field=\"password\"\r\n                          value={formState.password.value}\r\n                          onChange={hasFormValueChanged}\r\n                          required={true}\r\n                          maxLength={100}\r\n                          type=\"password\"\r\n                          label=\"Mật khẩu mới\"\r\n                          placeholder=\"\" />\r\n                      </div>\r\n                      <button\r\n                        className={`btn btn-primary btn-user btn-block ${getDisabledClass()}`}\r\n                        type=\"submit\">\r\n                        Gửi\r\n                      </button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdatePassword;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/schedule.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postSavePassword(data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/password-reset-token/user/savePassword`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postSavePassword(data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Đổi mật khẩu thành công!\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Đổi mật khẩu không thành công!\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch } from \"react\";\r\nimport { OnChangeModel } from \"../../common/types/Form.types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport '../../assets/css/Login.css'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { postRegister } from \"../../common/service/Aut/Register\";\r\n\r\nconst RegisterForm: React.FC = () => {\r\n  const dispatch: Dispatch<any> = useDispatch();\r\n  const history = useHistory()\r\n\r\n  const [formState, setFormState] = useState({\r\n    username: { error: \"\", value: \"\" },\r\n    password: { error: \"\", value: \"\" },\r\n    email: { error: \"\", value: \"\" },\r\n    firstName: { error: \"\", value: \"\" },\r\n    lastName: { error: \"\", value: \"\" },\r\n    dateOfBirth: { error: \"\", value: \"\" },\r\n    profile_image_url: { error: \"\", value: \"\" },\r\n    sex: { error: \"\", value: \"\" },\r\n    phone: { error: \"\", value: \"\" },\r\n    address: { error: \"\", value: \"\" },\r\n    parent_id: { error: \"\", value: \"\" },\r\n    roleNames: { error: \"\", value: \"\" },\r\n  });\r\n\r\n  function changeRouteHome(value: boolean) {\r\n    if (value === true){\r\n      history.push('/aut')\r\n    }\r\n  }\r\n\r\n  function routeLogin() {\r\n      history.push('/aut')\r\n  }\r\n\r\n  function hasFormValueChanged(model: OnChangeModel): void {\r\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n  }\r\n\r\n  function submit(e: FormEvent<HTMLFormElement>): void {\r\n    e.preventDefault();\r\n    if(isFormInvalid()) { return; }\r\n    const id = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\r\n      position: toast.POSITION.TOP_CENTER\r\n    });\r\n    dispatch(postRegister({\r\n        username: formState.username.value,\r\n        password: formState.password.value,\r\n        email: formState.email.value,\r\n        firstName: null,\r\n        lastName: null,\r\n        dateOfBirth: null,\r\n        profile_image_url: null,\r\n        sex: null,\r\n        phone: null,\r\n        address: null,\r\n        roleNames: [\"PARENT_USER\"]\r\n    }, changeRouteHome, id))\r\n  }\r\n\r\n  function isFormInvalid() {\r\n    return (formState.username.error || formState.password.error\r\n      || !formState.username.value || !formState.password.value);\r\n  }\r\n\r\n  function getDisabledClass(): string {\r\n    let isError: boolean = isFormInvalid() as boolean;\r\n    return isError ? \"disabled\" : \"\";\r\n  }\r\n\r\n  const changeRoute = () => {\r\n    history.push('/landing-page')\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"container-fluid \" id=\"login-page\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-xl-10 col-lg-10 col-md-9\">\r\n          <h2 id=\"text-logo\" onClick={changeRoute}>KidsDrawing</h2>\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-xl-10 col-lg-12 col-md-9\">\r\n          <div className=\"card o-hidden border-0  my-5\">\r\n            <div className=\"card-body p-0\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-6 d-none d-lg-block text-center\" id=\"image-login-page\">\r\n                  <img src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1667290306/o0ymcs4lblpy2hfmisyq.png\" alt=\"First slide\" />\r\n                </div>\r\n                <div className=\"col-lg-6 shadow-lg\">\r\n                  <div className=\"p-5\">\r\n                    <div className=\"text-center\">\r\n                      <h1 className=\"h4 text-gray-900 mb-4\">Đăng ký</h1>\r\n                    </div>\r\n                    <form className=\"user\" onSubmit={submit}>\r\n                      <div className=\"form-group\">\r\n\r\n                        <TextInput id=\"input_username\"\r\n                          field=\"username\"\r\n                          value={formState.username.value}\r\n                          onChange={hasFormValueChanged}\r\n                          required={true}\r\n                          maxLength={100}\r\n                          label=\"Tên đăng nhập\"\r\n                          placeholder=\"\" />\r\n                      </div>\r\n                      \r\n                      <div className=\"form-group\">\r\n\r\n                        <TextInput id=\"input_email\"\r\n                          field=\"email\"\r\n                          value={formState.email.value}\r\n                          onChange={hasFormValueChanged}\r\n                          required={true}\r\n                          maxLength={100}\r\n                          label=\"Email\"\r\n                          placeholder=\"\" />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <TextInput id=\"input_password\"\r\n                          field=\"password\"\r\n                          value={formState.password.value}\r\n                          onChange={hasFormValueChanged}\r\n                          required={true}\r\n                          maxLength={100}\r\n                          type=\"password\"\r\n                          label=\"Mật khẩu\"\r\n                          placeholder=\"\" />\r\n                      </div>\r\n                \r\n                      <button\r\n                        className={`btn btn-primary btn-user btn-block ${getDisabledClass()}`}\r\n                        type=\"submit\">\r\n                        Đăng kí\r\n                      </button>\r\n                    </form>\r\n                    <div className=\"justify-content-center text-center\">\r\n                      <p>Bạn đã có tài khoản? <span style={{color: '#0066FF'}}><span className=\"link\" style={{color: '#0066FF'}} onClick={() => {routeLogin()}}>Đăng nhập</span></span></p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import { toast } from 'react-toastify';\r\n\r\nexport function postRegister(data: any, changeRouteHome: any, id: any) {\r\n    \r\n    return (dispatch: any) => {\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/user`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                'Access-Control-Allow-Credentials': 'true'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }\r\n        )\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw Error(response.statusText);\r\n                }\r\n                return response\r\n            })\r\n            .then(data => {\r\n\r\n                toast.update(id, { render: \"Đăng ký thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n                setTimeout(function () {\r\n                    changeRouteHome(true);\r\n                }, 2000);            \r\n            })\r\n            .catch(error => {\r\n                toast.update(id, { render: \"Đăng ký không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 2000 });\r\n            });\r\n    };\r\n}","import React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { postStatusUserRegisterJoinSemester } from \"../../common/service/UserRegisterJoinSemester/PostStatusUserRegisterJoinSemester\";\r\n\r\nimport \"./PaymentSuccessfull.css\"\r\n\r\n\r\nconst PaymentSuccessfull: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    \r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n\r\n    const ids = urlParams.get('ids')\r\n    console.log(ids);\r\n\r\n    useEffect(() => {\r\n        dispatch(postStatusUserRegisterJoinSemester(ids))\r\n    }, [dispatch, ids])\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 mx-auto mt-5\">\r\n                        <div className=\"payment\">\r\n                            <div className=\"payment_header\">\r\n                                <div className=\"check\"><i className=\"fa fa-check\" aria-hidden=\"true\"></i></div>\r\n                            </div>\r\n                            <div className=\"content\">\r\n                                <h1>Thanh toán thành công !</h1>\r\n                                <p>Chúc mừng bạn đã thanh toán thành công đơn hàng. Vui lòng lòng quay lại trang chủ để trải nghiệm!</p>\r\n                                <a href=\"/Home\">Go to Home</a>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default PaymentSuccessfull;\r\n","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postStatusUserRegisterJoinSemester(ids: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-join-semester/payment/v2?ids=${ids}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postStatusUserRegisterJoinSemester(ids))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React from \"react\";\nimport \"./App.css\";\nimport \"./styles/sb-admin-2.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/Account/Login\";\nimport { PrivateRoute } from \"./common/components/PrivateRoute\";\nimport Routers from \"./Routers/Routers\";\nimport LandingPage from \"./components/LandingPage/LandingPage\";\nimport ForgotPassword from \"./components/Account/ForgotPassword\";\nimport UpdatePassword from \"./components/Account/UpdatePassword\";\nimport RegisterForm from \"./components/Account/RegisterForm\";\nimport PaymentSuccessfull from \"./components/Discovery/PaymentSuccessfull\";\n\n\nconst App: React.FC = () => {\n  // Handle incoming messages. Called when:\n// - a message is received while the app has focus\n// - the user clicks on an app notification created by a service worker\n//   `messaging.onBackgroundMessage` handler.\n\n  return (\n    <div className=\"App\" id=\"wrapper\">\n      <Router>\n        <Switch>\n          <Route path=\"/landing-page\"><LandingPage /></Route>\n          <Route path={`/forgot-password`}><ForgotPassword /></Route>\n          <Route path={`/update-password`}><UpdatePassword /></Route>\n          <Route path={`/register`}><RegisterForm /></Route>\n          <Route path={`/payment-successfull`}><PaymentSuccessfull /></Route>\n          <Route path=\"/auth\"><Login /></Route>\n          <PrivateRoute path=\"/\">\n            <Routers />\n          </PrivateRoute>\n          {/* <Route path={`/aut`}><Login /></Route>\n          <Route path={`/landing-page`}><LandingPage /></Route>\n          <Route path={`/`}><Routers /></Route>\n          <Route path={`/`}>\n            <Redirect to=\"/landing-page\" />\n          </Route> */}\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { IProductState, IActionBase } from \"../models/root.interface\";\nimport { ADD_PRODUCT, CHANGE_PRODUCT_PENDING_EDIT, EDIT_PRODUCT, REMOVE_PRODUCT,\n    CLEAR_PRODUCT_PENDING_EDIT, SET_MODIFICATION_STATE, CHANGE_PRODUCT_AMOUNT} from \"../actions/products.action\";\nimport { IProduct, ProductModificationStatus } from \"../models/product.interface\";\n\n\n\nconst initialState: IProductState = {\n    modificationState: ProductModificationStatus.None,\n    selectedProduct: null,\n    products: []\n};\n\nfunction productsReducer(state: IProductState = initialState, action: IActionBase): IProductState {\n    switch (action.type) {\n        case ADD_PRODUCT: {\n            return { ...state, products: [...state.products, action.product]};\n        }\n        case EDIT_PRODUCT: {\n            const foundIndex: number = state.products.findIndex(pr => pr.id === action.product.id);\n            let products: IProduct[] = state.products;\n            products[foundIndex] = action.product;\n            return { ...state, products: products };\n        }\n        case REMOVE_PRODUCT: {\n            return { ...state, products: state.products.filter(pr => pr.id !== action.id) };\n        }\n        case CHANGE_PRODUCT_PENDING_EDIT: {\n            return { ...state, selectedProduct: action.product };\n        }\n        case CLEAR_PRODUCT_PENDING_EDIT: {\n            return { ...state, selectedProduct: null };\n        }\n        case SET_MODIFICATION_STATE: {\n            return { ...state, modificationState: action.value };\n        }\n        case CHANGE_PRODUCT_AMOUNT: {\n            const foundIndex: number = state.products.findIndex(pr => pr.id === action.id);\n            let products: IProduct[] = state.products;\n            products[foundIndex].amount = products[foundIndex].amount - action.amount;\n            return { ...state, products: products };\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport default productsReducer;","import { IActionBase, INotificationState } from \"../models/root.interface\";\nimport { ADD_NOTIFICATION, REMOVE_NOTIFICATION } from \"../actions/notifications.action\";\n\nconst initialState: INotificationState = {\n    notifications: [{id: 0, date: new Date(), text: \"\", title: \"Xin chào\"}]\n};\n\nfunction notificationReducer(state: INotificationState = initialState, action: IActionBase): INotificationState {\n    switch (action.type) {\n        case ADD_NOTIFICATION: {\n            return {...state, notifications: [...state.notifications, action.notification]};\n        }\n        case REMOVE_NOTIFICATION: {\n            return {...state, notifications: state.notifications\n                .filter(Notification => Notification.id !== action.id)};\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport default notificationReducer;","import { IUserState, IActionBase } from \"../models/root.interface\";\nimport { \n    ADD_ADMIN, EDIT_ADMIN, REMOVE_ADMIN,\n    ADD_TEACHER, EDIT_TEACHER, REMOVE_TEACHER,INITIAL_TEACHER, REMOVE_TEACHER_ALL, \n    ADD_STUDENT, EDIT_STUDENT, REMOVE_STUDENT, INITIAL_STUDENT, REMOVE_STUDENT_ALL, \n    ADD_PARENT, EDIT_PARENT, REMOVE_PARENT , INITIAL_PARENT, REMOVE_PARENT_ALL,\n    CHANGE_USER_PENDING_EDIT, CLEAR_USER_PENDING_EDIT, SET_MODIFICATION_STATE\n\n} from \"../actions/users.action\";\nimport { IUser, UserModificationStatus } from \"../models/user.interface\";\n\nconst initialState: IUserState = {\n    modificationState: UserModificationStatus.None,\n    selectedUser: null,\n    admins: [],\n    teachers: [],\n    students: [],\n    parents: []\n};\n\nfunction userReducer(state: IUserState = initialState, action: IActionBase): IUserState {\n    switch (action.type) {\n        case ADD_ADMIN: {\n            return { ...state, admins: [...state.admins, action.user]};\n        }\n        case EDIT_ADMIN: {\n            const foundIndex: number = state.admins.findIndex(pr => pr.username === action.user.username);\n            let admins: IUser[] = state.admins;\n            admins[foundIndex] = action.user;\n            return { ...state, admins: admins };\n        }\n        case REMOVE_ADMIN: {\n            return { ...state, admins: state.admins.filter(x=>x.username !== action.user.username)};\n        }\n\n        case INITIAL_TEACHER: {\n            return { ...state, teachers : [...state.teachers, action.user]};\n        }\n        case REMOVE_TEACHER_ALL: {\n            return { ...state, teachers: [] };\n        }\n        case ADD_TEACHER: {\n            return { ...state, teachers: [...state.teachers, action.user]};\n        }\n        case EDIT_TEACHER: {\n            const foundIndex: number = state.teachers.findIndex(pr => pr.username === action.user.username);\n            let teachers: IUser[] = state.teachers;\n            teachers[foundIndex] = action.user;\n            return { ...state, teachers: teachers };\n        }\n        case REMOVE_TEACHER: {\n            return { ...state, teachers: state.teachers.filter(x=>x.username !== action.user.username)};\n        }\n\n        case INITIAL_STUDENT: {\n            return { ...state, students : [...state.students, action.user]};\n        }\n        case REMOVE_STUDENT_ALL: {\n            return { ...state, students: [] };\n        }\n        case ADD_STUDENT: {\n            return { ...state, students: [...state.students, action.user]};\n        }\n        case EDIT_STUDENT: {\n            const foundIndex: number = state.students.findIndex(pr => pr.username === action.user.username);\n            let students: IUser[] = state.students;\n            students[foundIndex] = action.user;\n            return { ...state, students: students };\n        }\n        case REMOVE_STUDENT: {\n            return { ...state, students: state.students.filter(x=>x.username !== action.user.username)};\n        }\n\n        case INITIAL_PARENT: {\n            return { ...state, parents : [...state.parents, action.user]};\n        }\n        case REMOVE_PARENT_ALL: {\n            return { ...state, parents: [] };\n        }\n        case ADD_PARENT: {\n            return { ...state, parents: [...state.parents, action.user]};\n        }\n        case EDIT_PARENT: {\n            const foundIndex: number = state.parents.findIndex(pr => pr.username === action.user.username);\n            let parents: IUser[] = state.parents;\n            parents[foundIndex] = action.user;\n            return { ...state, parents: parents };\n        }\n        case REMOVE_PARENT: {\n            return { ...state, parents: state.parents.filter(x=>x.username !== action.user.username)};\n        }\n        \n        case CHANGE_USER_PENDING_EDIT: {\n            return { ...state, selectedUser: action.user };\n        }\n        case CLEAR_USER_PENDING_EDIT: {\n            return { ...state, selectedUser: null };\n        }\n        case SET_MODIFICATION_STATE: {\n            return { ...state, modificationState: action.value };\n        }\n        default:\n            return state;\n    }\n}\n\nexport default userReducer;","import { IOrder } from \"../models/order.interface\";\n\nexport const ADD_ORDER: string = \"ADD_ORDER\";\n\nexport function addOrder(order: IOrder): IAddOrderActionType {\n    return { type: ADD_ORDER, order: order };\n}\n\ninterface IAddOrderActionType { type: string, order: IOrder };\n","import { IOrdersState, IActionBase } from \"../models/root.interface\";\nimport { ADD_ORDER } from \"../actions/orders.actions\";\n\n\nconst initialState: IOrdersState = {\n    orders: []\n};\n\nfunction orderReducer(state: IOrdersState = initialState, action: IActionBase): IOrdersState {\n    switch (action.type) {\n        case ADD_ORDER: {\n            return {...state, orders: [...state.orders, {...action.order}]};\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport default orderReducer;","import { IActionBase } from \"../models/root.interface\";\nimport { IAccount } from \"../models/account.interface\";\nimport { LOG_IN, LOG_OUT } from \"../actions/account.actions\";\n\nvar username = localStorage.getItem('username')\n\nconst initialState: IAccount = {\n    username: username !== null ? username : \"\"\n};\n\nfunction accountReducer(state: IAccount = initialState, action: IActionBase): IAccount {\n    switch (action.type) {\n        case LOG_IN: {\n            return { ...state, username: (action.username)};\n        }\n        case LOG_OUT: {\n            return { ...state, username: \"\"};\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport default accountReducer;","import { ISemesterState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SEMESTER, CHANGE_SEMESTER_PENDING_EDIT, EDIT_SEMESTER, REMOVE_SEMESTER,\r\n    CLEAR_SEMESTER_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SEMESTER, REMOVE_SEMESTER_ALL} from \"../actions/semester.actions\";\r\nimport { ISemester, SemesterModificationStatus } from \"../models/semester.interface\";\r\n\r\n\r\n\r\nconst initialState: ISemesterState = {\r\n    modificationState: SemesterModificationStatus.None,\r\n    selectedSemester: null,\r\n    semesters: []\r\n};\r\n\r\nfunction semestersReducer(state: ISemesterState = initialState, action: IActionBase): ISemesterState {\r\n    switch (action.type) {\r\n        case INITIAL_SEMESTER: {\r\n            return { ...state, semesters : [...state.semesters, action.semester]};\r\n        }\r\n        case ADD_SEMESTER: {\r\n            return { ...state, semesters: [...state.semesters, action.semester]};\r\n        }\r\n        case EDIT_SEMESTER: {\r\n            const foundIndex: number = state.semesters.findIndex(pr => pr.id === action.semester.id);\r\n            let semesters: ISemester[] = state.semesters;\r\n            semesters[foundIndex] = action.semester;\r\n            return { ...state, semesters: semesters };\r\n        }\r\n        case REMOVE_SEMESTER: {\r\n            return { ...state, semesters: state.semesters.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SEMESTER_ALL: {\r\n            return { ...state, semesters: [] };\r\n        }\r\n        case CHANGE_SEMESTER_PENDING_EDIT: {\r\n            return { ...state, selectedSemester: action.semester };\r\n        }\r\n        case CLEAR_SEMESTER_PENDING_EDIT: {\r\n            return { ...state, selectedSemester: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default semestersReducer;","import { ILessonState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_LESSON, CHANGE_LESSON_PENDING_EDIT, EDIT_LESSON, REMOVE_LESSON,\r\n    CLEAR_LESSON_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_LESSON, REMOVE_LESSON_ALL} from \"../actions/lesson.action\";\r\nimport { ILesson, LessonModificationStatus } from \"../models/lesson.interface\";\r\n\r\n\r\n\r\nconst initialState: ILessonState = {\r\n    modificationState: LessonModificationStatus.None,\r\n    selectedLesson: null,\r\n    lessons: []\r\n};\r\n\r\nfunction lessonsReducer(state: ILessonState = initialState, action: IActionBase): ILessonState {\r\n    switch (action.type) {\r\n        case INITIAL_LESSON: {\r\n            return { ...state, lessons : [...state.lessons, action.lesson]};\r\n        }\r\n        case ADD_LESSON: {\r\n            return { ...state, lessons: [...state.lessons, action.lesson]};\r\n        }\r\n        case EDIT_LESSON: {\r\n            const foundIndex: number = state.lessons.findIndex(pr => pr.id === action.lesson.id);\r\n            let lessons: ILesson[] = state.lessons;\r\n            lessons[foundIndex] = action.lesson;\r\n            return { ...state, lessons: lessons };\r\n        }\r\n        case REMOVE_LESSON: {\r\n            return { ...state, lessons: state.lessons.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_LESSON_ALL: {\r\n            return { ...state, lessons: [] };\r\n        }\r\n        case CHANGE_LESSON_PENDING_EDIT: {\r\n            return { ...state, selectedLesson: action.lesson };\r\n        }\r\n        case CLEAR_LESSON_PENDING_EDIT: {\r\n            return { ...state, selectedLesson: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default lessonsReducer;","export interface ISchedule {\r\n    id: any;\r\n    lesson_time_id: number;\r\n    lesson_time: string;\r\n    semester_class_id: number;\r\n    date_of_week: number;\r\n}\r\n\r\nexport enum ScheduleModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IScheduleState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SCHEDULE, CHANGE_SCHEDULE_PENDING_EDIT, EDIT_SCHEDULE, REMOVE_SCHEDULE,\r\n    CLEAR_SCHEDULE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SCHEDULE, REMOVE_SCHEDULE_ALL} from \"../actions/schedule.action\";\r\nimport { ISchedule, ScheduleModificationStatus } from \"../models/schedule.interface\";\r\n\r\n\r\n\r\nconst initialState: IScheduleState = {\r\n    modificationState: ScheduleModificationStatus.None,\r\n    selectedSchedule: null,\r\n    schedules: []\r\n};\r\n\r\nfunction schedulesReducer(state: IScheduleState = initialState, action: IActionBase): IScheduleState {\r\n    switch (action.type) {\r\n        case INITIAL_SCHEDULE: {\r\n            return { ...state, schedules : [...state.schedules, action.schedule]};\r\n        }\r\n        case ADD_SCHEDULE: {\r\n            return { ...state, schedules: [...state.schedules, action.schedule]};\r\n        }\r\n        case EDIT_SCHEDULE: {\r\n            const foundIndex: number = state.schedules.findIndex(pr => pr.id === action.schedule.id);\r\n            let schedules: ISchedule[] = state.schedules;\r\n            schedules[foundIndex] = action.schedule;\r\n            return { ...state, schedules: schedules };\r\n        }\r\n        case REMOVE_SCHEDULE: {\r\n            return { ...state, schedules: state.schedules.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SCHEDULE_ALL: {\r\n            return { ...state, schedules: [] };\r\n        }\r\n        case CHANGE_SCHEDULE_PENDING_EDIT: {\r\n            return { ...state, selectedSchedule: action.schedule };\r\n        }\r\n        case CLEAR_SCHEDULE_PENDING_EDIT: {\r\n            return { ...state, selectedSchedule: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default schedulesReducer;","export interface IScheduleItem {\r\n    id: any;\r\n    schedule_id: number;\r\n    lesson_time: number;\r\n    date_of_week: number;\r\n}\r\n\r\nexport enum ScheduleItemModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IScheduleItem, ScheduleItemModificationStatus } from \"../models/schedule_item.interface\";\r\nexport const ADD_SCHEDULE_ITEM: string = \"ADD_SCHEDULE_ITEM\";\r\nexport const EDIT_SCHEDULE_ITEM: string = \"EDIT_SCHEDULE_ITEM\";\r\nexport const REMOVE_SCHEDULE_ITEM: string = \"REMOVE_SCHEDULE_ITEM\";\r\nexport const CHANGE_SCHEDULE_ITEM_AMOUNT: string = \"CHANGE_SCHEDULE_ITEM_AMOUNT\";\r\nexport const CHANGE_SCHEDULE_ITEM_PENDING_EDIT: string = \"CHANGE_SCHEDULE_ITEM_PENDING_EDIT\";\r\nexport const CLEAR_SCHEDULE_ITEM_PENDING_EDIT: string = \"CLEAR_SCHEDULE_ITEM_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SCHEDULE_ITEM_ALL: string = \"REMOVE_SCHEDULE_ITEM_ALL\";\r\nexport const INITIAL_SCHEDULE_ITEM: string = \"INITIAL_SCHEDULE_ITEM\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(schedule_item: IScheduleItem) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        schedule_item\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialScheduleItem(schedule_item: IScheduleItem): IInitialScheduleItemActionType {\r\n    return { type: INITIAL_SCHEDULE_ITEM, schedule_item: schedule_item };\r\n}\r\n\r\nexport function removeScheduleItemAll(): IRemoveScheduleItemAllActionType {\r\n    return { type: REMOVE_SCHEDULE_ITEM_ALL };\r\n}\r\n\r\nexport function addScheduleItem(schedule_item: IScheduleItem): IAddScheduleItemActionType {\r\n    return { type: ADD_SCHEDULE_ITEM, schedule_item: schedule_item };\r\n}\r\n\r\nexport function editScheduleItem(schedule_item: IScheduleItem): IEditScheduleItemActionType {\r\n    return { type: EDIT_SCHEDULE_ITEM, schedule_item: schedule_item };\r\n}\r\n\r\nexport function removeScheduleItem(id: any): IRemoveScheduleItemActionType {\r\n    return { type: REMOVE_SCHEDULE_ITEM, id: id };\r\n}\r\n\r\nexport function changeSelectedScheduleItem(schedule_item: IScheduleItem): IChangeSelectedScheduleItemActionType {\r\n    return { type: CHANGE_SCHEDULE_ITEM_PENDING_EDIT, schedule_item: schedule_item };\r\n}\r\n\r\nexport function clearSelectedScheduleItem(): IClearSelectedScheduleItemActionType {\r\n    return { type: CLEAR_SCHEDULE_ITEM_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ScheduleItemModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddScheduleItemActionType { type: string, schedule_item: IScheduleItem };\r\ninterface IEditScheduleItemActionType { type: string, schedule_item: IScheduleItem };\r\ninterface IRemoveScheduleItemActionType { type: string, id: any };\r\ninterface IChangeSelectedScheduleItemActionType { type: string, schedule_item: IScheduleItem };\r\ninterface IClearSelectedScheduleItemActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ScheduleItemModificationStatus};\r\ninterface IRemoveScheduleItemAllActionType { type: string }\r\ninterface IInitialScheduleItemActionType {type: string, schedule_item: IScheduleItem}","import { IScheduleItemState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SCHEDULE_ITEM, CHANGE_SCHEDULE_ITEM_PENDING_EDIT, EDIT_SCHEDULE_ITEM, REMOVE_SCHEDULE_ITEM,\r\n    CLEAR_SCHEDULE_ITEM_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SCHEDULE_ITEM, REMOVE_SCHEDULE_ITEM_ALL} from \"../actions/schedule_item.action\";\r\nimport { IScheduleItem, ScheduleItemModificationStatus } from \"../models/schedule_item.interface\";\r\n\r\n\r\n\r\nconst initialState: IScheduleItemState = {\r\n    modificationState: ScheduleItemModificationStatus.None,\r\n    selectedScheduleItem: null,\r\n    schedule_items: []\r\n};\r\n\r\nfunction schedule_itemsReducer(state: IScheduleItemState = initialState, action: IActionBase): IScheduleItemState {\r\n    switch (action.type) {\r\n        case INITIAL_SCHEDULE_ITEM: {\r\n            return { ...state, schedule_items : [...state.schedule_items, action.schedule_item]};\r\n        }\r\n        case ADD_SCHEDULE_ITEM: {\r\n            return { ...state, schedule_items: [...state.schedule_items, action.schedule_item]};\r\n        }\r\n        case EDIT_SCHEDULE_ITEM: {\r\n            const foundIndex: number = state.schedule_items.findIndex(pr => pr.id === action.schedule_item.id);\r\n            let schedule_items: IScheduleItem[] = state.schedule_items;\r\n            schedule_items[foundIndex] = action.schedule_item;\r\n            return { ...state, schedule_items: schedule_items };\r\n        }\r\n        case REMOVE_SCHEDULE_ITEM: {\r\n            return { ...state, schedule_items: state.schedule_items.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SCHEDULE_ITEM_ALL: {\r\n            return { ...state, schedule_items: [] };\r\n        }\r\n        case CHANGE_SCHEDULE_ITEM_PENDING_EDIT: {\r\n            return { ...state, selectedScheduleItem: action.schedule_item };\r\n        }\r\n        case CLEAR_SCHEDULE_ITEM_PENDING_EDIT: {\r\n            return { ...state, selectedScheduleItem: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default schedule_itemsReducer;","import { IArtTypeState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_ART_TYPE, CHANGE_ART_TYPE_PENDING_EDIT, EDIT_ART_TYPE, REMOVE_ART_TYPE,\r\n    CLEAR_ART_TYPE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_ART_TYPE, REMOVE_ART_TYPE_ALL} from \"../actions/art_type.action\";\r\nimport { IArtType, ArtTypeModificationStatus } from \"../models/art_type.interface\";\r\n\r\n\r\n\r\nconst initialState: IArtTypeState = {\r\n    modificationState: ArtTypeModificationStatus.None,\r\n    selectedArtType: null,\r\n    artTypes: []\r\n};\r\n\r\nfunction artTypesReducer(state: IArtTypeState = initialState, action: IActionBase): IArtTypeState {\r\n    switch (action.type) {\r\n        case INITIAL_ART_TYPE: {\r\n            return { ...state, artTypes : [...state.artTypes, action.art_type]};\r\n        }\r\n        case ADD_ART_TYPE: {\r\n            return { ...state, artTypes: [...state.artTypes, action.art_type]};\r\n        }\r\n        case EDIT_ART_TYPE: {\r\n            const foundIndex: number = state.artTypes.findIndex(pr => pr.id === action.art_type.id);\r\n            let artTypes: IArtType[] = state.artTypes;\r\n            artTypes[foundIndex] = action.art_type;\r\n            return { ...state, artTypes: artTypes };\r\n        }\r\n        case REMOVE_ART_TYPE: {\r\n            return { ...state, artTypes: state.artTypes.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_ART_TYPE_ALL: {\r\n            return { ...state, artTypes: [] };\r\n        }\r\n        case CHANGE_ART_TYPE_PENDING_EDIT: {\r\n            return { ...state, selectedArtType: action.art_type };\r\n        }\r\n        case CLEAR_ART_TYPE_PENDING_EDIT: {\r\n            return { ...state, selectedArtType: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default artTypesReducer;","import { IArtLevelState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_ART_LEVEL, CHANGE_ART_LEVEL_PENDING_EDIT, EDIT_ART_LEVEL, REMOVE_ART_LEVEL,\r\n    CLEAR_ART_LEVEL_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_ART_LEVEL, REMOVE_ART_LEVEL_ALL} from \"../actions/art_level.action\";\r\nimport { IArtLevel, ArtLevelModificationStatus } from \"../models/art_level.interface\";\r\n\r\n\r\n\r\nconst initialState: IArtLevelState = {\r\n    modificationState: ArtLevelModificationStatus.None,\r\n    selectedArtLevel: null,\r\n    artLevels: []\r\n};\r\n\r\nfunction artLevelsReducer(state: IArtLevelState = initialState, action: IActionBase): IArtLevelState {\r\n    switch (action.type) {\r\n        case INITIAL_ART_LEVEL: {\r\n            return { ...state, artLevels : [...state.artLevels, action.art_level]};\r\n        }\r\n        case ADD_ART_LEVEL: {\r\n            return { ...state, artLevels: [...state.artLevels, action.art_level]};\r\n        }\r\n        case EDIT_ART_LEVEL: {\r\n            const foundIndex: number = state.artLevels.findIndex(pr => pr.id === action.art_level.id);\r\n            let artLevels: IArtLevel[] = state.artLevels;\r\n            artLevels[foundIndex] = action.art_level;\r\n            return { ...state, artLevels: artLevels };\r\n        }\r\n        case REMOVE_ART_LEVEL: {\r\n            return { ...state, artLevels: state.artLevels.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_ART_LEVEL_ALL: {\r\n            return { ...state, artLevels: [] };\r\n        }\r\n        case CHANGE_ART_LEVEL_PENDING_EDIT: {\r\n            return { ...state, selectedArtLevel: action.art_level };\r\n        }\r\n        case CLEAR_ART_LEVEL_PENDING_EDIT: {\r\n            return { ...state, selectedArtLevel: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default artLevelsReducer;","import { IArtAgeState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_ART_AGE, CHANGE_ART_AGE_PENDING_EDIT, EDIT_ART_AGE, REMOVE_ART_AGE,\r\n    CLEAR_ART_AGE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_ART_AGE, REMOVE_ART_AGE_ALL} from \"../actions/art_age.action\";\r\nimport { IArtAge, ArtAgeModificationStatus } from \"../models/art_age.interface\";\r\n\r\n\r\n\r\nconst initialState: IArtAgeState = {\r\n    modificationState: ArtAgeModificationStatus.None,\r\n    selectedArtAge: null,\r\n    artAges: []\r\n};\r\n\r\nfunction artAgesReducer(state: IArtAgeState = initialState, action: IActionBase): IArtAgeState {\r\n    switch (action.type) {\r\n        case INITIAL_ART_AGE: {\r\n            return { ...state, artAges : [...state.artAges, action.art_age]};\r\n        }\r\n        case ADD_ART_AGE: {\r\n            return { ...state, artAges: [...state.artAges, action.art_age]};\r\n        }\r\n        case EDIT_ART_AGE: {\r\n            const foundIndex: number = state.artAges.findIndex(pr => pr.id === action.art_age.id);\r\n            let artAges: IArtAge[] = state.artAges;\r\n            artAges[foundIndex] = action.art_age;\r\n            return { ...state, artAges: artAges };\r\n        }\r\n        case REMOVE_ART_AGE: {\r\n            return { ...state, artAges: state.artAges.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_ART_AGE_ALL: {\r\n            return { ...state, artAges: [] };\r\n        }\r\n        case CHANGE_ART_AGE_PENDING_EDIT: {\r\n            return { ...state, selectedArtAge: action.art_age };\r\n        }\r\n        case CLEAR_ART_AGE_PENDING_EDIT: {\r\n            return { ...state, selectedArtAge: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default artAgesReducer;","import { ICourseState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_COURSE, CHANGE_COURSE_PENDING_EDIT, EDIT_COURSE, REMOVE_COURSE,\r\n    CLEAR_COURSE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_COURSE, REMOVE_COURSE_ALL} from \"../actions/course.action\";\r\nimport { ICourse, CourseModificationStatus } from \"../models/course.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseState = {\r\n    modificationState: CourseModificationStatus.None,\r\n    selectedCourse: null,\r\n    courses: []\r\n};\r\n\r\nfunction coursesReducer(state: ICourseState = initialState, action: IActionBase): ICourseState {\r\n    switch (action.type) {\r\n        case INITIAL_COURSE: {\r\n            return { ...state, courses : [...state.courses, action.course]};\r\n        }\r\n        case ADD_COURSE: {\r\n            return { ...state, courses: [...state.courses, action.course]};\r\n        }\r\n        case EDIT_COURSE: {\r\n            const foundIndex: number = state.courses.findIndex(pr => pr.id === action.course.id);\r\n            let courses: ICourse[] = state.courses;\r\n            courses[foundIndex] = action.course;\r\n            return { ...state, courses: courses };\r\n        }\r\n        case REMOVE_COURSE: {\r\n            return { ...state, courses: state.courses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_COURSE_ALL: {\r\n            return { ...state, courses: [] };\r\n        }\r\n        case CHANGE_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourse: action.course };\r\n        }\r\n        case CLEAR_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourse: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default coursesReducer;","import { IContestState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CONTEST, CHANGE_CONTEST_PENDING_EDIT, EDIT_CONTEST, REMOVE_CONTEST,\r\n    CLEAR_CONTEST_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_CONTEST, REMOVE_CONTEST_ALL} from \"../actions/contest.action\";\r\nimport { IContest, ContestModificationStatus } from \"../models/contest.interface\";\r\n\r\n\r\n\r\nconst initialState: IContestState = {\r\n    modificationState: ContestModificationStatus.None,\r\n    selectedContest: null,\r\n    contests: []\r\n};\r\n\r\nfunction contestsReducer(state: IContestState = initialState, action: IActionBase): IContestState {\r\n    switch (action.type) {\r\n        case INITIAL_CONTEST: {\r\n            return { ...state, contests : [...state.contests, action.contest]};\r\n        }\r\n        case ADD_CONTEST: {\r\n            return { ...state, contests: [...state.contests, action.contest]};\r\n        }\r\n        case EDIT_CONTEST: {\r\n            const foundIndex: number = state.contests.findIndex(pr => pr.id === action.contest.id);\r\n            let contests: IContest[] = state.contests;\r\n            contests[foundIndex] = action.contest;\r\n            return { ...state, contests: contests };\r\n        }\r\n        case REMOVE_CONTEST: {\r\n            return { ...state, contests: state.contests.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_ALL: {\r\n            return { ...state, contests: [] };\r\n        }\r\n        case CHANGE_CONTEST_PENDING_EDIT: {\r\n            return { ...state, selectedContest: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_PENDING_EDIT: {\r\n            return { ...state, selectedContest: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default contestsReducer;","import { ISectionTemplateState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SECTION_TEMPLATE, CHANGE_SECTION_TEMPLATE_PENDING_EDIT, EDIT_SECTION_TEMPLATE, REMOVE_SECTION_TEMPLATE,\r\n    CLEAR_SECTION_TEMPLATE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SECTION_TEMPLATE, REMOVE_SECTION_TEMPLATE_ALL} from \"../actions/section_template.action\";\r\nimport { ISectionTemplate, SectionTemplateModificationStatus } from \"../models/section_template.interface\";\r\n\r\n\r\n\r\nconst initialState: ISectionTemplateState = {\r\n    modificationState: SectionTemplateModificationStatus.None,\r\n    selectedSectionTemplate: null,\r\n    sectionTemplates: []\r\n};\r\n\r\nfunction sectionTemplatesReducer(state: ISectionTemplateState = initialState, action: IActionBase): ISectionTemplateState {\r\n    switch (action.type) {\r\n        case INITIAL_SECTION_TEMPLATE: {\r\n            return { ...state, sectionTemplates : [...state.sectionTemplates, action.section_template]};\r\n        }\r\n        case ADD_SECTION_TEMPLATE: {\r\n            return { ...state, sectionTemplates: [...state.sectionTemplates, action.section_template]};\r\n        }\r\n        case EDIT_SECTION_TEMPLATE: {\r\n            const foundIndex: number = state.sectionTemplates.findIndex(pr => pr.id === action.section_template.id);\r\n            let sectionTemplates: ISectionTemplate[] = state.sectionTemplates;\r\n            sectionTemplates[foundIndex] = action.section_template;\r\n            return { ...state, sectionTemplates: sectionTemplates };\r\n        }\r\n        case REMOVE_SECTION_TEMPLATE: {\r\n            return { ...state, sectionTemplates: state.sectionTemplates.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SECTION_TEMPLATE_ALL: {\r\n            return { ...state, sectionTemplates: [] };\r\n        }\r\n        case CHANGE_SECTION_TEMPLATE_PENDING_EDIT: {\r\n            return { ...state, selectedSectionTemplate: action.section_template };\r\n        }\r\n        case CLEAR_SECTION_TEMPLATE_PENDING_EDIT: {\r\n            return { ...state, selectedSectionTemplate: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default sectionTemplatesReducer;","export interface ITutorialTemplate {\r\n    id: any;\r\n    section_template_id: number;\r\n    name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum TutorialTemplateModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITutorialTemplateState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TUTORIAL_TEMPLATE, CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT, EDIT_TUTORIAL_TEMPLATE, REMOVE_TUTORIAL_TEMPLATE,\r\n    CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TUTORIAL_TEMPLATE, REMOVE_TUTORIAL_TEMPLATE_ALL} from \"../actions/tutorial_template.action\";\r\nimport { ITutorialTemplate, TutorialTemplateModificationStatus } from \"../models/tutorial_template.interface\";\r\n\r\n\r\n\r\nconst initialState: ITutorialTemplateState = {\r\n    modificationState: TutorialTemplateModificationStatus.None,\r\n    selectedTutorialTemplate: null,\r\n    tutorialTemplates: []\r\n};\r\n\r\nfunction tutorialTemplatesReducer(state: ITutorialTemplateState = initialState, action: IActionBase): ITutorialTemplateState {\r\n    switch (action.type) {\r\n        case INITIAL_TUTORIAL_TEMPLATE: {\r\n            return { ...state, tutorialTemplates : [...state.tutorialTemplates, action.tutorial_template]};\r\n        }\r\n        case ADD_TUTORIAL_TEMPLATE: {\r\n            return { ...state, tutorialTemplates: [...state.tutorialTemplates, action.tutorial_template]};\r\n        }\r\n        case EDIT_TUTORIAL_TEMPLATE: {\r\n            const foundIndex: number = state.tutorialTemplates.findIndex(pr => pr.id === action.tutorial_template.id);\r\n            let tutorialTemplates: ITutorialTemplate[] = state.tutorialTemplates;\r\n            tutorialTemplates[foundIndex] = action.tutorial_template;\r\n            return { ...state, tutorialTemplates: tutorialTemplates };\r\n        }\r\n        case REMOVE_TUTORIAL_TEMPLATE: {\r\n            return { ...state, tutorialTemplates: state.tutorialTemplates.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_TUTORIAL_TEMPLATE_ALL: {\r\n            return { ...state, tutorialTemplates: [] };\r\n        }\r\n        case CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT: {\r\n            return { ...state, selectedTutorialTemplate: action.tutorial_template };\r\n        }\r\n        case CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT: {\r\n            return { ...state, selectedTutorialTemplate: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default tutorialTemplatesReducer;","export interface IUserGradeContest {\r\n    id: any;\r\n    contest_id: number;\r\n    teacher_id: number;\r\n    teacher_name: string;\r\n    contest_name: string;\r\n}\r\n\r\nexport enum UserGradeContestModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IUserGradeContestState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TUTORIAL_TEMPLATE, CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT, EDIT_TUTORIAL_TEMPLATE, REMOVE_TUTORIAL_TEMPLATE,\r\n    CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TUTORIAL_TEMPLATE, REMOVE_TUTORIAL_TEMPLATE_ALL} from \"../actions/user_grade_contest.action\";\r\nimport { IUserGradeContest, UserGradeContestModificationStatus } from \"../models/user_grade_contest.interface\";\r\n\r\n\r\n\r\nconst initialState: IUserGradeContestState = {\r\n    modificationState: UserGradeContestModificationStatus.None,\r\n    selectedUserGradeContest: null,\r\n    userGradeContests: []\r\n};\r\n\r\nfunction userGradeContestsReducer(state: IUserGradeContestState = initialState, action: IActionBase): IUserGradeContestState {\r\n    switch (action.type) {\r\n        case INITIAL_TUTORIAL_TEMPLATE: {\r\n            return { ...state, userGradeContests : [...state.userGradeContests, action.user_grade_contest]};\r\n        }\r\n        case ADD_TUTORIAL_TEMPLATE: {\r\n            return { ...state, userGradeContests: [...state.userGradeContests, action.user_grade_contest]};\r\n        }\r\n        case EDIT_TUTORIAL_TEMPLATE: {\r\n            const foundIndex: number = state.userGradeContests.findIndex(pr => pr.id === action.user_grade_contest.id);\r\n            let userGradeContests: IUserGradeContest[] = state.userGradeContests;\r\n            userGradeContests[foundIndex] = action.user_grade_contest;\r\n            return { ...state, userGradeContests: userGradeContests };\r\n        }\r\n        case REMOVE_TUTORIAL_TEMPLATE: {\r\n            return { ...state, userGradeContests: state.userGradeContests.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_TUTORIAL_TEMPLATE_ALL: {\r\n            return { ...state, userGradeContests: [] };\r\n        }\r\n        case CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT: {\r\n            return { ...state, selectedUserGradeContest: action.user_grade_contest };\r\n        }\r\n        case CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT: {\r\n            return { ...state, selectedUserGradeContest: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default userGradeContestsReducer;","export interface ITutorialTemplatePage {\r\n    id: any;\r\n    tutorial_template_id: number;\r\n    name: string;\r\n    description: string;\r\n    number: number;\r\n}\r\n\r\nexport enum TutorialTemplatePageModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITutorialTemplatePageState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TUTORIAL_TEMPLATE_PAGE, CHANGE_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT, EDIT_TUTORIAL_TEMPLATE_PAGE, REMOVE_TUTORIAL_TEMPLATE_PAGE,\r\n    CLEAR_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TUTORIAL_TEMPLATE_PAGE, REMOVE_TUTORIAL_TEMPLATE_PAGE_ALL} from \"../actions/tutorial_template_page.action\";\r\nimport { ITutorialTemplatePage, TutorialTemplatePageModificationStatus } from \"../models/tutorial_template_page.interface\";\r\n\r\n\r\n\r\nconst initialState: ITutorialTemplatePageState = {\r\n    modificationState: TutorialTemplatePageModificationStatus.None,\r\n    selectedTutorialTemplatePage: null,\r\n    tutorialTemplatePages: []\r\n};\r\n\r\nfunction tutorialTemplatePagesReducer(state: ITutorialTemplatePageState = initialState, action: IActionBase): ITutorialTemplatePageState {\r\n    switch (action.type) {\r\n        case INITIAL_TUTORIAL_TEMPLATE_PAGE: {\r\n            return { ...state, tutorialTemplatePages : [...state.tutorialTemplatePages, action.tutorial_template_page]};\r\n        }\r\n        case ADD_TUTORIAL_TEMPLATE_PAGE: {\r\n            return { ...state, tutorialTemplatePages: [...state.tutorialTemplatePages, action.tutorial_template_page]};\r\n        }\r\n        case EDIT_TUTORIAL_TEMPLATE_PAGE: {\r\n            const foundIndex: number = state.tutorialTemplatePages.findIndex(pr => pr.id === action.tutorial_template_page.id);\r\n            let tutorialTemplatePages: ITutorialTemplatePage[] = state.tutorialTemplatePages;\r\n            tutorialTemplatePages[foundIndex] = action.tutorial_template_page;\r\n            return { ...state, tutorialTemplatePages: tutorialTemplatePages };\r\n        }\r\n        case REMOVE_TUTORIAL_TEMPLATE_PAGE: {\r\n            return { ...state, tutorialTemplatePages: state.tutorialTemplatePages.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_TUTORIAL_TEMPLATE_PAGE_ALL: {\r\n            return { ...state, tutorialTemplatePages: [] };\r\n        }\r\n        case CHANGE_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT: {\r\n            return { ...state, selectedTutorialTemplatePage: action.tutorial_template_page };\r\n        }\r\n        case CLEAR_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT: {\r\n            return { ...state, selectedTutorialTemplatePage: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default tutorialTemplatePagesReducer;","export interface ITeacherLeave {\r\n    id: any;\r\n    section_id: number;\r\n    section_name: string;\r\n    class_id: number;\r\n    class_name: string;\r\n    teacher_id: number;\r\n    teacher_name: string;\r\n    section_number: number;\r\n    reviewer_id: number;\r\n    substitute_teacher_id: number;\r\n    substitute_teacher_name: string;\r\n    description: string;\r\n    status: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum TeacherLeaveModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITeacherLeaveState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_LEAVES, EDIT_LEAVES, REMOVE_LEAVES,INITIAL_LEAVES, REMOVE_LEAVES_ALL, \r\n    ADD_ACCEPT_LEAVE, EDIT_ACCEPT_LEAVE, REMOVE_ACCEPT_LEAVE, INITIAL_ACCEPT_LEAVE, REMOVE_ACCEPT_LEAVE_ALL, \r\n    ADD_REMOVE_LEAVE, EDIT_REMOVE_LEAVE, REMOVE_REMOVE_LEAVE , INITIAL_REMOVE_LEAVE, REMOVE_REMOVE_LEAVE_ALL,\r\n    CHANGE_USER_PENDING_EDIT, CLEAR_USER_PENDING_EDIT, SET_MODIFICATION_STATE\r\n\r\n} from \"../actions/teacher_leave.action\";\r\nimport { ITeacherLeave, TeacherLeaveModificationStatus } from \"../models/teacher_leave.interface\";\r\n\r\nconst initialState: ITeacherLeaveState = {\r\n    modificationState: TeacherLeaveModificationStatus.None,\r\n    selectedTeacherLeave: null,\r\n    leaves: [],\r\n    acceptLeaves: [],\r\n    removeLeaves: []\r\n};\r\n\r\nfunction teacherLeaveReducer(state: ITeacherLeaveState = initialState, action: IActionBase): ITeacherLeaveState {\r\n    switch (action.type) {\r\n        case INITIAL_LEAVES: {\r\n            return { ...state, leaves : [...state.leaves, action.teacher_leave]};\r\n        }\r\n        case REMOVE_LEAVES_ALL: {\r\n            return { ...state, leaves: [] };\r\n        }\r\n        case ADD_LEAVES: {\r\n            return { ...state, leaves: [...state.leaves, action.teacher_leave]};\r\n        }\r\n        case EDIT_LEAVES: {\r\n            const foundIndex: number = state.leaves.findIndex(pr => pr.id === action.teacher_leave.id);\r\n            let leavess: ITeacherLeave[] = state.leaves;\r\n            leavess[foundIndex] = action.teacher_leave;\r\n            return { ...state, leaves: leavess };\r\n        }\r\n        case REMOVE_LEAVES: {\r\n            return { ...state, leaves: state.leaves.filter(x=>x.id !== action.teacher_leave.id)};\r\n        }\r\n\r\n        case INITIAL_ACCEPT_LEAVE: {\r\n            return { ...state, acceptLeaves : [...state.acceptLeaves, action.teacher_leave]};\r\n        }\r\n        case REMOVE_ACCEPT_LEAVE_ALL: {\r\n            return { ...state, acceptLeaves: [] };\r\n        }\r\n        case ADD_ACCEPT_LEAVE: {\r\n            return { ...state, acceptLeaves: [...state.acceptLeaves, action.teacher_leave]};\r\n        }\r\n        case EDIT_ACCEPT_LEAVE: {\r\n            const foundIndex: number = state.acceptLeaves.findIndex(pr => pr.id === action.teacher_leave.id);\r\n            let accept_leaves: ITeacherLeave[] = state.acceptLeaves;\r\n            accept_leaves[foundIndex] = action.teacher_leave;\r\n            return { ...state, acceptLeaves: accept_leaves };\r\n        }\r\n        case REMOVE_ACCEPT_LEAVE: {\r\n            return { ...state, acceptLeaves: state.acceptLeaves.filter(x=>x.id !== action.teacher_leave.id)};\r\n        }\r\n\r\n        case INITIAL_REMOVE_LEAVE: {\r\n            return { ...state, removeLeaves : [...state.removeLeaves, action.teacher_leave]};\r\n        }\r\n        case REMOVE_REMOVE_LEAVE_ALL: {\r\n            return { ...state, removeLeaves: [] };\r\n        }\r\n        case ADD_REMOVE_LEAVE: {\r\n            return { ...state, removeLeaves: [...state.removeLeaves, action.teacher_leave]};\r\n        }\r\n        case EDIT_REMOVE_LEAVE: {\r\n            const foundIndex: number = state.removeLeaves.findIndex(pr => pr.id === action.teacher_leave.id);\r\n            let remove_leaves: ITeacherLeave[] = state.removeLeaves;\r\n            remove_leaves[foundIndex] = action.teacher_leave;\r\n            return { ...state, removeLeaves: remove_leaves };\r\n        }\r\n        case REMOVE_REMOVE_LEAVE: {\r\n            return { ...state, removeLeaves: state.removeLeaves.filter(x=>x.id !== action.teacher_leave.id)};\r\n        }\r\n        \r\n        case CHANGE_USER_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherLeave: action.teacher_leave };\r\n        }\r\n        case CLEAR_USER_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherLeave: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default teacherLeaveReducer;","import { IStudentLeaveState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_STUDENT_LEAVE_NOT_APPROVED_NOW, EDIT_STUDENT_LEAVE_NOT_APPROVED_NOW, REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW,INITIAL_STUDENT_LEAVE_NOT_APPROVED_NOW, REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW_ALL, \r\n    ADD_STUDENT_LEAVE_APPROVED, EDIT_STUDENT_LEAVE_APPROVED, REMOVE_STUDENT_LEAVE_APPROVED, INITIAL_STUDENT_LEAVE_APPROVED, REMOVE_STUDENT_LEAVE_APPROVED_ALL, \r\n    ADD_STUDENT_LEAVE_NOT_APPROVED, EDIT_STUDENT_LEAVE_NOT_APPROVED, REMOVE_STUDENT_LEAVE_NOT_APPROVED , INITIAL_STUDENT_LEAVE_NOT_APPROVED, REMOVE_STUDENT_LEAVE_NOT_APPROVED_ALL,\r\n    CLEAR_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT, CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT, SET_MODIFICATION_STATE\r\n\r\n} from \"../actions/student_leave.action\";\r\nimport { IStudentLeave, StudentLeaveModificationStatus } from \"../models/student_leave.interface\";\r\n\r\nconst initialState: IStudentLeaveState = {\r\n    modificationState: StudentLeaveModificationStatus.None,\r\n    selectedStudentLeave: null,\r\n    leaves: [],\r\n    acceptLeaves: [],\r\n    removeLeaves: []\r\n};\r\n\r\nfunction studentLeaveReducer(state: IStudentLeaveState = initialState, action: IActionBase): IStudentLeaveState {\r\n    switch (action.type) {\r\n        case INITIAL_STUDENT_LEAVE_NOT_APPROVED_NOW: {\r\n            return { ...state, leaves : [...state.leaves, action.student_leave]};\r\n        }\r\n        case REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW_ALL: {\r\n            return { ...state, leaves: [] };\r\n        }\r\n        case ADD_STUDENT_LEAVE_NOT_APPROVED_NOW: {\r\n            return { ...state, leaves: [...state.leaves, action.student_leave]};\r\n        }\r\n        case EDIT_STUDENT_LEAVE_NOT_APPROVED_NOW: {\r\n            const foundIndex: number = state.leaves.findIndex(pr => pr.id === action.student_leave.id);\r\n            let leavess: IStudentLeave[] = state.leaves;\r\n            leavess[foundIndex] = action.student_leave;\r\n            return { ...state, leaves: leavess };\r\n        }\r\n        case REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW: {\r\n            return { ...state, leaves: state.leaves.filter(x=>x.id !== action.student_leave.id)};\r\n        }\r\n\r\n        case INITIAL_STUDENT_LEAVE_APPROVED: {\r\n            return { ...state, acceptLeaves : [...state.acceptLeaves, action.student_leave]};\r\n        }\r\n        case REMOVE_STUDENT_LEAVE_APPROVED_ALL: {\r\n            return { ...state, acceptLeaves: [] };\r\n        }\r\n        case ADD_STUDENT_LEAVE_APPROVED: {\r\n            return { ...state, acceptLeaves: [...state.acceptLeaves, action.student_leave]};\r\n        }\r\n        case EDIT_STUDENT_LEAVE_APPROVED: {\r\n            const foundIndex: number = state.acceptLeaves.findIndex(pr => pr.id === action.student_leave.id);\r\n            let accept_leaves: IStudentLeave[] = state.acceptLeaves;\r\n            accept_leaves[foundIndex] = action.student_leave;\r\n            return { ...state, acceptLeaves: accept_leaves };\r\n        }\r\n        case REMOVE_STUDENT_LEAVE_APPROVED: {\r\n            return { ...state, acceptLeaves: state.acceptLeaves.filter(x=>x.id !== action.student_leave.id)};\r\n        }\r\n\r\n        case INITIAL_STUDENT_LEAVE_NOT_APPROVED: {\r\n            return { ...state, removeLeaves : [...state.removeLeaves, action.student_leave]};\r\n        }\r\n        case REMOVE_STUDENT_LEAVE_NOT_APPROVED_ALL: {\r\n            return { ...state, removeLeaves: [] };\r\n        }\r\n        case ADD_STUDENT_LEAVE_NOT_APPROVED: {\r\n            return { ...state, removeLeaves: [...state.removeLeaves, action.student_leave]};\r\n        }\r\n        case EDIT_STUDENT_LEAVE_NOT_APPROVED: {\r\n            const foundIndex: number = state.removeLeaves.findIndex(pr => pr.id === action.student_leave.id);\r\n            let remove_leaves: IStudentLeave[] = state.removeLeaves;\r\n            remove_leaves[foundIndex] = action.student_leave;\r\n            return { ...state, removeLeaves: remove_leaves };\r\n        }\r\n        case REMOVE_STUDENT_LEAVE_NOT_APPROVED: {\r\n            return { ...state, removeLeaves: state.removeLeaves.filter(x=>x.id !== action.student_leave.id)};\r\n        }\r\n        \r\n        case CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedStudentLeave: action.student_leave };\r\n        }\r\n        case CLEAR_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedStudentLeave: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default studentLeaveReducer;","import { IMyClassState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_MY_CLASS, CHANGE_MY_CLASS_PENDING_EDIT, EDIT_MY_CLASS, REMOVE_MY_CLASS,\r\n    CLEAR_MY_CLASS_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_MY_CLASS, REMOVE_MY_CLASS_ALL} from \"../actions/my_class.action\";\r\nimport { IMyClass, MyClassModificationStatus } from \"../models/my_class.interface\";\r\n\r\n\r\n\r\nconst initialState: IMyClassState = {\r\n    modificationState: MyClassModificationStatus.None,\r\n    selectedMyClass: null,\r\n    myClasses: []\r\n};\r\n\r\nfunction myClassesReducer(state: IMyClassState = initialState, action: IActionBase): IMyClassState {\r\n    switch (action.type) {\r\n        case INITIAL_MY_CLASS: {\r\n            return { ...state, myClasses : [...state.myClasses, action.myclass]};\r\n        }\r\n        case ADD_MY_CLASS: {\r\n            return { ...state, myClasses: [...state.myClasses, action.myclass]};\r\n        }\r\n        case EDIT_MY_CLASS: {\r\n            const foundIndex: number = state.myClasses.findIndex(pr => pr.id === action.myclass.id);\r\n            let myClasses: IMyClass[] = state.myClasses;\r\n            myClasses[foundIndex] = action.myclass;\r\n            return { ...state, myClasses: myClasses };\r\n        }\r\n        case REMOVE_MY_CLASS: {\r\n            return { ...state, myClasses: state.myClasses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_MY_CLASS_ALL: {\r\n            return { ...state, myClasses: [] };\r\n        }\r\n        case CHANGE_MY_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedMyClass: action.myclass };\r\n        }\r\n        case CLEAR_MY_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedMyClass: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default myClassesReducer;","import { ITeacherRegisterQuantificationState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TEACHER_REGISTER_QUANTIFICATION_APPROVED, CHANGE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT, \r\n    EDIT_TEACHER_REGISTER_QUANTIFICATION_APPROVED, REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED,\r\n    CLEAR_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT,INITIAL_TEACHER_REGISTER_QUANTIFICATION_APPROVED, \r\n    REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_ALL,  \r\n    ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED, CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT, \r\n    EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED, REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED,\r\n    CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT,INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED, \r\n    REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_ALL,  \r\n    ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW, CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT, \r\n    EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW, REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW,\r\n    CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT,INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW, \r\n    REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_ALL, \r\n    SET_MODIFICATION_STATE} from \"../actions/teacher_register_quantification.action\";\r\nimport { ITeacherRegisterQuantification, TeacherRegisterQuantificationModificationStatus } from \"../models/teacher_register_quantification.interface\";\r\n\r\n\r\n\r\nconst initialState: ITeacherRegisterQuantificationState = {\r\n    modificationState: TeacherRegisterQuantificationModificationStatus.None,\r\n    selectedTeacherRegisterQuantification: null,\r\n    approveds: [],\r\n    not_approved_now: [],\r\n    not_approves: []\r\n};\r\n\r\nfunction teacher_register_quantificationsReducer(state: ITeacherRegisterQuantificationState = initialState, action: IActionBase): ITeacherRegisterQuantificationState {\r\n    switch (action.type) {\r\n        case INITIAL_TEACHER_REGISTER_QUANTIFICATION_APPROVED: {\r\n            return { ...state, approveds : [...state.approveds, action.teacher_register_quantification_approved]};\r\n        }\r\n        case ADD_TEACHER_REGISTER_QUANTIFICATION_APPROVED: {\r\n            return { ...state, approveds : [...state.approveds, action.teacher_register_quantification_approved]};\r\n        }\r\n        case EDIT_TEACHER_REGISTER_QUANTIFICATION_APPROVED: {\r\n            const foundIndex: number = state.approveds.findIndex(pr => pr.id === action.teacher_register_quantification_approved.id);\r\n            let approveds: ITeacherRegisterQuantification[] = state.approveds;\r\n            approveds[foundIndex] = action.teacher_register_quantification_approved;\r\n            return { ...state, approveds: approveds };\r\n        }\r\n        case REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED: {\r\n            return { ...state, approveds: state.approveds.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_ALL: {\r\n            return { ...state, approveds: [] };\r\n        }\r\n        case CHANGE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherRegisterQuantification: action.teacher_register_quantification_approved };\r\n        }\r\n        case CLEAR_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherRegisterQuantification: null };\r\n        }\r\n\r\n        case INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: {\r\n            return { ...state, not_approves : [...state.not_approves, action.teacher_register_quantification_not_approved]};\r\n        }\r\n        case ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: {\r\n            return { ...state, not_approves : [...state.not_approves, action.teacher_register_quantification_not_approved]};\r\n        }\r\n        case EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: {\r\n            const foundIndex: number = state.not_approves.findIndex(pr => pr.id === action.teacher_register_quantification_not_approved.id);\r\n            let not_approveds: ITeacherRegisterQuantification[] = state.not_approves;\r\n            not_approveds[foundIndex] = action.teacher_register_quantification_not_approved;\r\n            return { ...state, not_approves: not_approveds };\r\n        }\r\n        case REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: {\r\n            return { ...state, not_approves: state.not_approves.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_ALL: {\r\n            return { ...state, not_approves: [] };\r\n        }\r\n        case CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherRegisterQuantification: action.teacher_register_quantification_not_approved };\r\n        }\r\n        case CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherRegisterQuantification: null };\r\n        }\r\n\r\n\r\n        case INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: {\r\n            return { ...state, not_approved_now : [...state.not_approved_now, action.teacher_register_quantification_not_approved_now]};\r\n        }\r\n        case ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: {\r\n            return { ...state, not_approved_now : [...state.not_approved_now, action.teacher_register_quantification_not_approved_now]};\r\n        }\r\n        case EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: {\r\n            const foundIndex: number = state.not_approved_now.findIndex(pr => pr.id === action.teacher_register_quantification_not_approved_now.id);\r\n            let not_approved_now: ITeacherRegisterQuantification[] = state.not_approved_now;\r\n            not_approved_now[foundIndex] = action.teacher_register_quantification_not_approved_now;\r\n            return { ...state, not_approved_now: not_approved_now };\r\n        }\r\n        case REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: {\r\n            return { ...state, not_approved_now: state.not_approved_now.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_ALL: {\r\n            return { ...state, not_approved_now: [] };\r\n        }\r\n        case CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherRegisterQuantification: action.teacher_register_quantification_not_approved_now };\r\n        }\r\n        case CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherRegisterQuantification: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default teacher_register_quantificationsReducer;","export interface IInformationClass {\r\n    id: any,\r\n    name: string;\r\n    teacher: string;\r\n    security_code: string;\r\n    course: string;\r\n    art_age: string;\r\n    art_type: string;\r\n    art_level: string;\r\n    number_section: number;\r\n    number_student: number;\r\n}\r\n\r\nexport enum InformationClassModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IInformationClassState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_INFORMATION_CLASS, CHANGE_INFORMATION_CLASS_PENDING_EDIT, EDIT_INFORMATION_CLASS, REMOVE_INFORMATION_CLASS,\r\n    CLEAR_INFORMATION_CLASS_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_INFORMATION_CLASS, REMOVE_INFORMATION_CLASS_ALL} from \"../actions/information_class.action\";\r\nimport { IInformationClass, InformationClassModificationStatus } from \"../models/information_class.interface\";\r\n\r\n\r\n\r\nconst initialState: IInformationClassState = {\r\n    modificationState: InformationClassModificationStatus.None,\r\n    selectedInformationClass: null,\r\n    informationClasses: []\r\n};\r\n\r\nfunction informationClassesReducer(state: IInformationClassState = initialState, action: IActionBase): IInformationClassState {\r\n    switch (action.type) {\r\n        case INITIAL_INFORMATION_CLASS: {\r\n            return { ...state, informationClasses : [...state.informationClasses, action.information_class]};\r\n        }\r\n        case ADD_INFORMATION_CLASS: {\r\n            return { ...state, informationClasses: [...state.informationClasses, action.information_class]};\r\n        }\r\n        case EDIT_INFORMATION_CLASS: {\r\n            const foundIndex: number = state.informationClasses.findIndex(pr => pr.id === action.information_class.id);\r\n            let informationClasses: IInformationClass[] = state.informationClasses;\r\n            informationClasses[foundIndex] = action.information_class;\r\n            return { ...state, informationClasses: informationClasses };\r\n        }\r\n        case REMOVE_INFORMATION_CLASS: {\r\n            return { ...state, informationClasses: state.informationClasses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_INFORMATION_CLASS_ALL: {\r\n            return { ...state, informationClasses: [] };\r\n        }\r\n        case CHANGE_INFORMATION_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedInformationClass: action.information_class };\r\n        }\r\n        case CLEAR_INFORMATION_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedInformationClass: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default informationClassesReducer;","export interface ITimeSchedule {\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\n\r\nexport enum TimeScheduleModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITimeScheduleState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TIME_SCHEDULE, CHANGE_TIME_SCHEDULE_PENDING_EDIT, EDIT_TIME_SCHEDULE, REMOVE_TIME_SCHEDULE,\r\n    CLEAR_TIME_SCHEDULE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TIME_SCHEDULE, REMOVE_TIME_SCHEDULE_ALL} from \"../actions/time_schedule.action\";\r\nimport { ITimeSchedule, TimeScheduleModificationStatus } from \"../models/time_schedule.interface\";\r\n\r\n\r\n\r\nconst initialState: ITimeScheduleState = {\r\n    modificationState: TimeScheduleModificationStatus.None,\r\n    selectedTimeSchedule: null,\r\n    timeSchedules: []\r\n};\r\n\r\nfunction time_schedulesReducer(state: ITimeScheduleState = initialState, action: IActionBase): ITimeScheduleState {\r\n    switch (action.type) {\r\n        case INITIAL_TIME_SCHEDULE: {\r\n            return { ...state, timeSchedules : [...state.timeSchedules, action.time_schedule]};\r\n        }\r\n        case ADD_TIME_SCHEDULE: {\r\n            return { ...state, timeSchedules: [...state.timeSchedules, action.time_schedule]};\r\n        }\r\n        case EDIT_TIME_SCHEDULE: {\r\n            let time_schedules: ITimeSchedule[] = state.timeSchedules;\r\n            time_schedules[0] = action.time_schedule;\r\n            return { ...state, timeSchedules: time_schedules };\r\n        }\r\n        case REMOVE_TIME_SCHEDULE: {\r\n            return { ...state, timeSchedules: [] };\r\n        }\r\n        case REMOVE_TIME_SCHEDULE_ALL: {\r\n            return { ...state, timeSchedules: [] };\r\n        }\r\n        case CHANGE_TIME_SCHEDULE_PENDING_EDIT: {\r\n            return { ...state, selectedTimeSchedule: action.time_schedule };\r\n        }\r\n        case CLEAR_TIME_SCHEDULE_PENDING_EDIT: {\r\n            return { ...state, selectedTimeSchedule: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default time_schedulesReducer;","export interface ICourseTeacher {\r\n    id: any;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: number;\r\n    semester_class_id: number;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    semester_name: string;\r\n    image_url: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n    registration_deadline: string;\r\n}\r\n\r\nexport enum CourseTeacherModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICourseTeacherState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_REGISTER_SUCCESSFULL_COURSE, CHANGE_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT, EDIT_REGISTER_SUCCESSFULL_COURSE, REMOVE_REGISTER_SUCCESSFULL_COURSE,\r\n    CLEAR_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_REGISTER_SUCCESSFULL_COURSE, REMOVE_REGISTER_SUCCESSFULL_COURSE_ALL, INITIAL_NOT_REGISTER_COURSE, ADD_NOT_REGISTER_COURSE, EDIT_NOT_REGISTER_COURSE, REMOVE_NOT_REGISTER_COURSE, REMOVE_NOT_REGISTER_COURSE_ALL, CHANGE_NOT_REGISTER_COURSE_PENDING_EDIT, CLEAR_NOT_REGISTER_COURSE_PENDING_EDIT} from \"../actions/course_teacher.action\";\r\nimport { ICourseTeacher, CourseTeacherModificationStatus } from \"../models/course_teacher.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseTeacherState = {\r\n    modificationState: CourseTeacherModificationStatus.None,\r\n    selectedCourseTeacher: null,\r\n    register_successfull_courses: [],\r\n    not_register_courses: []\r\n};\r\n\r\nfunction courseTeachersReducer(state: ICourseTeacherState = initialState, action: IActionBase): ICourseTeacherState {\r\n    switch (action.type) {\r\n        case INITIAL_REGISTER_SUCCESSFULL_COURSE: {\r\n            return { ...state, register_successfull_courses : [...state.register_successfull_courses, action.course]};\r\n        }\r\n        case ADD_REGISTER_SUCCESSFULL_COURSE: {\r\n            return { ...state, register_successfull_courses: [...state.register_successfull_courses, action.course]};\r\n        }\r\n        case EDIT_REGISTER_SUCCESSFULL_COURSE: {\r\n            const foundIndex: number = state.register_successfull_courses.findIndex(pr => pr.id === action.course.id);\r\n            let register_successfull_courses: ICourseTeacher[] = state.register_successfull_courses;\r\n            register_successfull_courses[foundIndex] = action.course;\r\n            return { ...state, register_successfull_courses: register_successfull_courses };\r\n        }\r\n        case REMOVE_REGISTER_SUCCESSFULL_COURSE: {\r\n            return { ...state, register_successfull_courses: state.register_successfull_courses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_REGISTER_SUCCESSFULL_COURSE_ALL: {\r\n            return { ...state, register_successfull_courses: [] };\r\n        }\r\n        case CHANGE_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseTeacher: action.course };\r\n        }\r\n        case CLEAR_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseTeacher: null };\r\n        }\r\n\r\n        case INITIAL_NOT_REGISTER_COURSE: {\r\n            return { ...state, not_register_courses : [...state.not_register_courses, action.course]};\r\n        }\r\n        case ADD_NOT_REGISTER_COURSE: {\r\n            return { ...state, not_register_courses: [...state.not_register_courses, action.course]};\r\n        }\r\n        case EDIT_NOT_REGISTER_COURSE: {\r\n            const foundIndex: number = state.not_register_courses.findIndex(pr => pr.id === action.course.id);\r\n            let not_register_courses: ICourseTeacher[] = state.not_register_courses;\r\n            not_register_courses[foundIndex] = action.course;\r\n            return { ...state, not_register_courses: not_register_courses };\r\n        }\r\n        case REMOVE_NOT_REGISTER_COURSE: {\r\n            return { ...state, not_register_courses: state.not_register_courses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_NOT_REGISTER_COURSE_ALL: {\r\n            return { ...state, not_register_courses: [] };\r\n        }\r\n        case CHANGE_NOT_REGISTER_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseTeacher: action.course };\r\n        }\r\n        case CLEAR_NOT_REGISTER_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseTeacher: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default courseTeachersReducer;","export interface ITimeScheduleTeacher {\r\n    class_name: string;\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\n\r\nexport enum TimeScheduleTeacherModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITimeScheduleTeacherState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TIME_SCHEDULE_TEACHER, CHANGE_TIME_SCHEDULE_TEACHER_PENDING_EDIT, EDIT_TIME_SCHEDULE_TEACHER, REMOVE_TIME_SCHEDULE_TEACHER,\r\n    CLEAR_TIME_SCHEDULE_TEACHER_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TIME_SCHEDULE_TEACHER, REMOVE_TIME_SCHEDULE_TEACHER_ALL} from \"../actions/time_schedule_teacher.action\";\r\nimport { ITimeScheduleTeacher, TimeScheduleTeacherModificationStatus } from \"../models/time_schedule_teacher.interface\";\r\n\r\n\r\n\r\nconst initialState: ITimeScheduleTeacherState = {\r\n    modificationState: TimeScheduleTeacherModificationStatus.None,\r\n    selectedTimeScheduleTeacher: null,\r\n    timeScheduleTeachers: []\r\n};\r\n\r\nfunction time_schedule_teachersReducer(state: ITimeScheduleTeacherState = initialState, action: IActionBase): ITimeScheduleTeacherState {\r\n    switch (action.type) {\r\n        case INITIAL_TIME_SCHEDULE_TEACHER: {\r\n            return { ...state, timeScheduleTeachers : [...state.timeScheduleTeachers, action.time_schedule_teacher]};\r\n        }\r\n        case ADD_TIME_SCHEDULE_TEACHER: {\r\n            return { ...state, timeScheduleTeachers: [...state.timeScheduleTeachers, action.time_schedule_teacher]};\r\n        }\r\n        case EDIT_TIME_SCHEDULE_TEACHER: {\r\n            let time_schedule_teachers: ITimeScheduleTeacher[] = state.timeScheduleTeachers;\r\n            time_schedule_teachers[0] = action.time_schedule_teacher;\r\n            return { ...state, timeScheduleTeachers: time_schedule_teachers };\r\n        }\r\n        case REMOVE_TIME_SCHEDULE_TEACHER: {\r\n            return { ...state, timeScheduleTeachers: [] };\r\n        }\r\n        case REMOVE_TIME_SCHEDULE_TEACHER_ALL: {\r\n            return { ...state, timeScheduleTeachers: [] };\r\n        }\r\n        case CHANGE_TIME_SCHEDULE_TEACHER_PENDING_EDIT: {\r\n            return { ...state, selectedTimeScheduleTeacher: action.time_schedule_teacher };\r\n        }\r\n        case CLEAR_TIME_SCHEDULE_TEACHER_PENDING_EDIT: {\r\n            return { ...state, selectedTimeScheduleTeacher: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default time_schedule_teachersReducer;","import { IClassTeacherState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_DOING_CLASS, CHANGE_DOING_CLASS_PENDING_EDIT, EDIT_DOING_CLASS, REMOVE_DOING_CLASS,\r\n    CLEAR_DOING_CLASS_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_DOING_CLASS, REMOVE_DOING_CLASS_ALL, INITIAL_DONE_CLASS, ADD_DONE_CLASS, EDIT_DONE_CLASS, REMOVE_DONE_CLASS, REMOVE_DONE_CLASS_ALL, CHANGE_DONE_CLASS_PENDING_EDIT, CLEAR_DONE_CLASS_PENDING_EDIT} from \"../actions/class_teacher.action\";\r\nimport { IClassTeacher, ClassTeacherModificationStatus } from \"../models/class_teacher.interface\";\r\n\r\n\r\n\r\nconst initialState: IClassTeacherState = {\r\n    modificationState: ClassTeacherModificationStatus.None,\r\n    selectedClassTeacher: null,\r\n    class_doing: [],\r\n    class_done: []\r\n};\r\n\r\nfunction classTeachersReducer(state: IClassTeacherState = initialState, action: IActionBase): IClassTeacherState {\r\n    switch (action.type) {\r\n        case INITIAL_DOING_CLASS: {\r\n            return { ...state, class_doing : [...state.class_doing, action.class_teacher]};\r\n        }\r\n        case ADD_DOING_CLASS: {\r\n            return { ...state, class_doing: [...state.class_doing, action.class_teacher]};\r\n        }\r\n        case EDIT_DOING_CLASS: {\r\n            const foundIndex: number = state.class_doing.findIndex(pr => pr.id === action.class_teacher.id);\r\n            let class_doing: IClassTeacher[] = state.class_doing;\r\n            class_doing[foundIndex] = action.class_teacher;\r\n            return { ...state, class_doing: class_doing };\r\n        }\r\n        case REMOVE_DOING_CLASS: {\r\n            return { ...state, class_doing: state.class_doing.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DOING_CLASS_ALL: {\r\n            return { ...state, class_doing: [] };\r\n        }\r\n        case CHANGE_DOING_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassTeacher: action.class_teacher };\r\n        }\r\n        case CLEAR_DOING_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassTeacher: null };\r\n        }\r\n\r\n        case INITIAL_DONE_CLASS: {\r\n            return { ...state, class_done : [...state.class_done, action.class_teacher]};\r\n        }\r\n        case ADD_DONE_CLASS: {\r\n            return { ...state, class_done: [...state.class_done, action.class_teacher]};\r\n        }\r\n        case EDIT_DONE_CLASS: {\r\n            const foundIndex: number = state.class_done.findIndex(pr => pr.id === action.class_teacher.id);\r\n            let class_done: IClassTeacher[] = state.class_done;\r\n            class_done[foundIndex] = action.class_teacher;\r\n            return { ...state, class_done: class_done };\r\n        }\r\n        case REMOVE_DONE_CLASS: {\r\n            return { ...state, class_done: state.class_done.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DONE_CLASS_ALL: {\r\n            return { ...state, class_done: [] };\r\n        }\r\n        case CHANGE_DONE_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassTeacher: action.class_teacher };\r\n        }\r\n        case CLEAR_DONE_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassTeacher: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default classTeachersReducer;","export interface IContestTeacher{\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    total_contest_submission: number;\r\n    total_contest_submission_graded: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n}\r\n\r\nexport enum ContestTeacherModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IContestTeacherState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CONTEST_TEACHER_OPENING, CHANGE_CONTEST_TEACHER_OPENING_PENDING_EDIT, EDIT_CONTEST_TEACHER_OPENING, REMOVE_CONTEST_TEACHER_OPENING,\r\n    CLEAR_CONTEST_TEACHER_OPENING_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_CONTEST_TEACHER_OPENING, REMOVE_CONTEST_TEACHER_OPENING_ALL, INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, ADD_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, EDIT_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_ALL, CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT, CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT, INITIAL_CONTEST_TEACHER_END, EDIT_CONTEST_TEACHER_END, ADD_CONTEST_TEACHER_END, REMOVE_CONTEST_TEACHER_END, REMOVE_CONTEST_TEACHER_END_ALL, CHANGE_CONTEST_TEACHER_END_PENDING_EDIT, CLEAR_CONTEST_TEACHER_END_PENDING_EDIT, INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW, ADD_CONTEST_TEACHER_NOT_OPEN_NOW, EDIT_CONTEST_TEACHER_NOT_OPEN_NOW, REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW, REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_ALL, CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT, CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT} from \"../actions/contest_teacher.action\";\r\nimport { IContestTeacher, ContestTeacherModificationStatus } from \"../models/contest_teacher.interface\";\r\n\r\n\r\n\r\nconst initialState: IContestTeacherState = {\r\n    modificationState: ContestTeacherModificationStatus.None,\r\n    selectedContestTeacher: null,\r\n    contest_opening: [],\r\n    contest_not_open_now: [],\r\n    contest_end: [],\r\n    contest_not_open_now_not_teacher: []\r\n};\r\n\r\nfunction contestTeachersReducer(state: IContestTeacherState = initialState, action: IActionBase): IContestTeacherState {\r\n    switch (action.type) {\r\n        case INITIAL_CONTEST_TEACHER_OPENING: {\r\n            return { ...state, contest_opening : [...state.contest_opening, action.contest]};\r\n        }\r\n        case ADD_CONTEST_TEACHER_OPENING: {\r\n            return { ...state, contest_opening: [...state.contest_opening, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_TEACHER_OPENING: {\r\n            const foundIndex: number = state.contest_opening.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_opening: IContestTeacher[] = state.contest_opening;\r\n            contest_opening[foundIndex] = action.contest;\r\n            return { ...state, contest_opening: contest_opening };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_OPENING: {\r\n            return { ...state, contest_opening: state.contest_opening.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_OPENING_ALL: {\r\n            return { ...state, contest_opening: [] };\r\n        }\r\n        case CHANGE_CONTEST_TEACHER_OPENING_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_TEACHER_OPENING_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: null };\r\n        }\r\n\r\n\r\n        case INITIAL_CONTEST_TEACHER_END: {\r\n            return { ...state, contest_end : [...state.contest_end, action.contest]};\r\n        }\r\n        case ADD_CONTEST_TEACHER_END: {\r\n            return { ...state, contest_end: [...state.contest_end, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_TEACHER_END: {\r\n            const foundIndex: number = state.contest_end.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_end: IContestTeacher[] = state.contest_end;\r\n            contest_end[foundIndex] = action.contest;\r\n            return { ...state, contest_end: contest_end };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_END: {\r\n            return { ...state, contest_end: state.contest_end.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_END_ALL: {\r\n            return { ...state, contest_end: [] };\r\n        }\r\n        case CHANGE_CONTEST_TEACHER_END_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_TEACHER_END_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: null };\r\n        }\r\n\r\n\r\n\r\n        case INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now : [...state.contest_not_open_now, action.contest]};\r\n        }\r\n        case ADD_CONTEST_TEACHER_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now: [...state.contest_not_open_now, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_TEACHER_NOT_OPEN_NOW: {\r\n            const foundIndex: number = state.contest_not_open_now.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_not_open_now: IContestTeacher[] = state.contest_not_open_now;\r\n            contest_not_open_now[foundIndex] = action.contest;\r\n            return { ...state, contest_not_open_now: contest_not_open_now };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now: state.contest_not_open_now.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_ALL: {\r\n            return { ...state, contest_not_open_now: [] };\r\n        }\r\n        case CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: null };\r\n        }\r\n\r\n\r\n\r\n        case INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: {\r\n            return { ...state, contest_not_open_now_not_teacher : [...state.contest_not_open_now_not_teacher, action.contest]};\r\n        }\r\n        case ADD_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: {\r\n            return { ...state, contest_not_open_now_not_teacher: [...state.contest_not_open_now_not_teacher, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: {\r\n            const foundIndex: number = state.contest_not_open_now_not_teacher.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_not_open_now_not_teacher: IContestTeacher[] = state.contest_not_open_now_not_teacher;\r\n            contest_not_open_now_not_teacher[foundIndex] = action.contest;\r\n            return { ...state, contest_not_open_now_not_teacher: contest_not_open_now_not_teacher };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: {\r\n            return { ...state, contest_not_open_now_not_teacher: state.contest_not_open_now_not_teacher.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_ALL: {\r\n            return { ...state, contest_not_open_now_not_teacher: [] };\r\n        }\r\n        case CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default contestTeachersReducer;","import { ISemesterClassState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SEMESTER_CLASS, CHANGE_SEMESTER_CLASS_PENDING_EDIT, EDIT_SEMESTER_CLASS, REMOVE_SEMESTER_CLASS,\r\n    CLEAR_SEMESTER_CLASS_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SEMESTER_CLASS, REMOVE_SEMESTER_CLASS_ALL} from \"../actions/semester_class.action\";\r\nimport { ISemesterClass, SemesterClassModificationStatus } from \"../models/semester_class.interface\";\r\n\r\n\r\n\r\nconst initialState: ISemesterClassState = {\r\n    modificationState: SemesterClassModificationStatus.None,\r\n    selectedSemesterClass: null,\r\n    semesterClasses: []\r\n};\r\n\r\nfunction semesterClassesReducer(state: ISemesterClassState = initialState, action: IActionBase): ISemesterClassState {\r\n    switch (action.type) {\r\n        case INITIAL_SEMESTER_CLASS: {\r\n            return { ...state, semesterClasses : [...state.semesterClasses, action.semester_class]};\r\n        }\r\n        case ADD_SEMESTER_CLASS: {\r\n            return { ...state, semesterClasses: [...state.semesterClasses, action.semester_class]};\r\n        }\r\n        case EDIT_SEMESTER_CLASS: {\r\n            const foundIndex: number = state.semesterClasses.findIndex(pr => pr.id === action.semester_class.id);\r\n            let semesterClasses: ISemesterClass[] = state.semesterClasses;\r\n            semesterClasses[foundIndex] = action.semester_class;\r\n            return { ...state, semesterClasses: semesterClasses };\r\n        }\r\n        case REMOVE_SEMESTER_CLASS: {\r\n            return { ...state, semesterClasses: state.semesterClasses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SEMESTER_CLASS_ALL: {\r\n            return { ...state, semesterClasses: [] };\r\n        }\r\n        case CHANGE_SEMESTER_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClass: action.semester_class };\r\n        }\r\n        case CLEAR_SEMESTER_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClass: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default semesterClassesReducer;","import { IAnonymousNotificationState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_ANONYMOUS_NOTIFICATION, CHANGE_ANONYMOUS_NOTIFICATION_PENDING_EDIT, EDIT_ANONYMOUS_NOTIFICATION, REMOVE_ANONYMOUS_NOTIFICATION,\r\n    CLEAR_ANONYMOUS_NOTIFICATION_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_ANONYMOUS_NOTIFICATION, REMOVE_ANONYMOUS_NOTIFICATION_ALL} from \"../actions/anonymous_notification.action\";\r\nimport { IAnonymousNotification, AnonymousNotificationModificationStatus } from \"../models/anonymous_notification.interface\";\r\n\r\n\r\n\r\nconst initialState: IAnonymousNotificationState = {\r\n    modificationState: AnonymousNotificationModificationStatus.None,\r\n    selectedAnonymousNotification: null,\r\n    notifications: []\r\n};\r\n\r\nfunction anonymousNotificationsReducer(state: IAnonymousNotificationState = initialState, action: IActionBase): IAnonymousNotificationState {\r\n    switch (action.type) {\r\n        case INITIAL_ANONYMOUS_NOTIFICATION: {\r\n            return { ...state, notifications : [...state.notifications, action.anonymous_notification]};\r\n        }\r\n        case ADD_ANONYMOUS_NOTIFICATION: {\r\n            return { ...state, notifications: [...state.notifications, action.anonymous_notification]};\r\n        }\r\n        case EDIT_ANONYMOUS_NOTIFICATION: {\r\n            const foundIndex: number = state.notifications.findIndex(pr => pr.id === action.anonymous_notification.id);\r\n            let notifications: IAnonymousNotification[] = state.notifications;\r\n            notifications[foundIndex] = action.anonymous_notification;\r\n            return { ...state, notifications: notifications };\r\n        }\r\n        case REMOVE_ANONYMOUS_NOTIFICATION: {\r\n            return { ...state, notifications: state.notifications.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_ANONYMOUS_NOTIFICATION_ALL: {\r\n            return { ...state, notifications: [] };\r\n        }\r\n        case CHANGE_ANONYMOUS_NOTIFICATION_PENDING_EDIT: {\r\n            return { ...state, selectedAnonymousNotification: action.anonymous_notification };\r\n        }\r\n        case CLEAR_ANONYMOUS_NOTIFICATION_PENDING_EDIT: {\r\n            return { ...state, selectedAnonymousNotification: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default anonymousNotificationsReducer;","export interface ISection {\r\n    id: any;\r\n    class_id: number;\r\n    name: string;\r\n    number: number;\r\n    teacher_name: string;\r\n    teach_form: boolean;\r\n    recording: string;\r\n    message: string;\r\n}\r\n\r\nexport enum SectionModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ISectionState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SECTION, CHANGE_SECTION_PENDING_EDIT, EDIT_SECTION, REMOVE_SECTION,\r\n    CLEAR_SECTION_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SECTION, REMOVE_SECTION_ALL} from \"../actions/section.action\";\r\nimport { ISection, SectionModificationStatus } from \"../models/section.interface\";\r\n\r\n\r\n\r\nconst initialState: ISectionState = {\r\n    modificationState: SectionModificationStatus.None,\r\n    selectedSection: null,\r\n    sections: []\r\n};\r\n\r\nfunction sectionsReducer(state: ISectionState = initialState, action: IActionBase): ISectionState {\r\n    switch (action.type) {\r\n        case INITIAL_SECTION: {\r\n            return { ...state, sections : [...state.sections, action.section]};\r\n        }\r\n        case ADD_SECTION: {\r\n            return { ...state, sections: [...state.sections, action.section]};\r\n        }\r\n        case EDIT_SECTION: {\r\n            const foundIndex: number = state.sections.findIndex(pr => pr.id === action.section.id);\r\n            let sections: ISection[] = state.sections;\r\n            sections[foundIndex] = action.section;\r\n            return { ...state, sections: sections };\r\n        }\r\n        case REMOVE_SECTION: {\r\n            return { ...state, sections: state.sections.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SECTION_ALL: {\r\n            return { ...state, sections: [] };\r\n        }\r\n        case CHANGE_SECTION_PENDING_EDIT: {\r\n            return { ...state, selectedSection: action.section };\r\n        }\r\n        case CLEAR_SECTION_PENDING_EDIT: {\r\n            return { ...state, selectedSection: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default sectionsReducer;","export interface ITutorialPage {\r\n    id: any;\r\n    tutorial_id: number;\r\n    name: string;\r\n    description: string;\r\n    number: number;\r\n}\r\n\r\nexport enum TutorialPageModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITutorialPageState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TUTORIAL_PAGE, CHANGE_TUTORIAL_PAGE_PENDING_EDIT, EDIT_TUTORIAL_PAGE, REMOVE_TUTORIAL_PAGE,\r\n    CLEAR_TUTORIAL_PAGE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TUTORIAL_PAGE, REMOVE_TUTORIAL_PAGE_ALL, REMOVE_TUTORIAL_PAGE_BY_NUMBER} from \"../actions/tutorial_page.action\";\r\nimport { ITutorialPage, TutorialPageModificationStatus } from \"../models/tutorial_page.interface\";\r\n\r\n\r\n\r\nconst initialState: ITutorialPageState = {\r\n    modificationState: TutorialPageModificationStatus.None,\r\n    selectedTutorialPage: null,\r\n    tutorialPages: []\r\n};\r\n\r\nfunction tutorialPagesReducer(state: ITutorialPageState = initialState, action: IActionBase): ITutorialPageState {\r\n    switch (action.type) {\r\n        case INITIAL_TUTORIAL_PAGE: {\r\n            return { ...state, tutorialPages : [...state.tutorialPages, action.tutorial_page]};\r\n        }\r\n        case ADD_TUTORIAL_PAGE: {\r\n            return { ...state, tutorialPages: [...state.tutorialPages, action.tutorial_page]};\r\n        }\r\n        case EDIT_TUTORIAL_PAGE: {\r\n            const foundIndex: number = state.tutorialPages.findIndex(pr => pr.id === action.tutorial_page.id);\r\n            let tutorialPages: ITutorialPage[] = state.tutorialPages;\r\n            tutorialPages[foundIndex] = action.tutorial_page;\r\n            return { ...state, tutorialPages: tutorialPages };\r\n        }\r\n        case REMOVE_TUTORIAL_PAGE: {\r\n            return { ...state, tutorialPages: state.tutorialPages.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_TUTORIAL_PAGE_BY_NUMBER: {\r\n            return { ...state, tutorialPages: state.tutorialPages.filter(pr => pr.number !== action.number) };\r\n        }\r\n        case REMOVE_TUTORIAL_PAGE_ALL: {\r\n            return { ...state, tutorialPages: [] };\r\n        }\r\n        case CHANGE_TUTORIAL_PAGE_PENDING_EDIT: {\r\n            return { ...state, selectedTutorialPage: action.tutorial_page };\r\n        }\r\n        case CLEAR_TUTORIAL_PAGE_PENDING_EDIT: {\r\n            return { ...state, selectedTutorialPage: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default tutorialPagesReducer;","import { IExerciseState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_EXERCISE, CHANGE_EXERCISE_PENDING_EDIT, EDIT_EXERCISE, REMOVE_EXERCISE,\r\n    CLEAR_EXERCISE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_EXERCISE, REMOVE_EXERCISE_ALL} from \"../actions/exercise.action\";\r\nimport { IExercise, ExerciseModificationStatus } from \"../models/exercise.interface\";\r\n\r\n\r\n\r\nconst initialState: IExerciseState = {\r\n    modificationState: ExerciseModificationStatus.None,\r\n    selectedExercise: null,\r\n    exercises: []\r\n};\r\n\r\nfunction exercisesReducer(state: IExerciseState = initialState, action: IActionBase): IExerciseState {\r\n    switch (action.type) {\r\n        case INITIAL_EXERCISE: {\r\n            return { ...state, exercises : [...state.exercises, action.exercise]};\r\n        }\r\n        case ADD_EXERCISE: {\r\n            return { ...state, exercises: [...state.exercises, action.exercise]};\r\n        }\r\n        case EDIT_EXERCISE: {\r\n            const foundIndex: number = state.exercises.findIndex(pr => pr.id === action.exercise.id);\r\n            let exercises: IExercise[] = state.exercises;\r\n            exercises[foundIndex] = action.exercise;\r\n            return { ...state, exercises: exercises };\r\n        }\r\n        case REMOVE_EXERCISE: {\r\n            return { ...state, exercises: state.exercises.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_EXERCISE_ALL: {\r\n            return { ...state, exercises: [] };\r\n        }\r\n        case CHANGE_EXERCISE_PENDING_EDIT: {\r\n            return { ...state, selectedExercise: action.exercise };\r\n        }\r\n        case CLEAR_EXERCISE_PENDING_EDIT: {\r\n            return { ...state, selectedExercise: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default exercisesReducer;","export interface IExerciseSubmission {\r\n    id: any;\r\n    student_id: number;\r\n    exercise_id: number;\r\n    student_name: string;\r\n    exercise_name: string;\r\n    image_url: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ExerciseSubmissionModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IExerciseSubmissionState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_EXERCISE_SUBMISSION_NOT_GRADED, CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT, EDIT_EXERCISE_SUBMISSION_NOT_GRADED, REMOVE_EXERCISE_SUBMISSION_NOT_GRADED,\r\n    CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_EXERCISE_SUBMISSION_NOT_GRADED, REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL, INITIAL_EXERCISE_SUBMISSION_GRADED, ADD_EXERCISE_SUBMISSION_GRADED, EDIT_EXERCISE_SUBMISSION_GRADED, REMOVE_EXERCISE_SUBMISSION_GRADED, REMOVE_EXERCISE_SUBMISSION_GRADED_ALL, CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT, CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT} from \"../actions/exercise_submission.action\";\r\nimport { IExerciseSubmission, ExerciseSubmissionModificationStatus } from \"../models/exercise_submission.interface\";\r\n\r\n\r\n\r\nconst initialState: IExerciseSubmissionState = {\r\n    modificationState: ExerciseSubmissionModificationStatus.None,\r\n    selectedExerciseSubmission: null,\r\n    exercise_not_gradeds: [],\r\n    exercise_gradeds: []\r\n};\r\n\r\nfunction exerciseSubmissionsReducer(state: IExerciseSubmissionState = initialState, action: IActionBase): IExerciseSubmissionState {\r\n    switch (action.type) {\r\n        case INITIAL_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            return { ...state, exercise_not_gradeds : [...state.exercise_not_gradeds, action.exercise_submission]};\r\n        }\r\n        case ADD_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            return { ...state, exercise_not_gradeds: [...state.exercise_not_gradeds, action.exercise_submission]};\r\n        }\r\n        case EDIT_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            const foundIndex: number = state.exercise_not_gradeds.findIndex(pr => pr.id === action.exercise_submission.id);\r\n            let exercise_not_gradeds: IExerciseSubmission[] = state.exercise_not_gradeds;\r\n            exercise_not_gradeds[foundIndex] = action.exercise_submission;\r\n            return { ...state, exercise_not_gradeds: exercise_not_gradeds };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            return { ...state, exercise_not_gradeds: state.exercise_not_gradeds.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL: {\r\n            return { ...state, exercise_not_gradeds: [] };\r\n        }\r\n        case CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedExerciseSubmission: action.exercise_submission };\r\n        }\r\n        case CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedExerciseSubmission: null };\r\n        }\r\n\r\n        case INITIAL_EXERCISE_SUBMISSION_GRADED: {\r\n            return { ...state, exercise_gradeds : [...state.exercise_gradeds, action.exercise_submission]};\r\n        }\r\n        case ADD_EXERCISE_SUBMISSION_GRADED: {\r\n            return { ...state, exercise_gradeds: [...state.exercise_gradeds, action.exercise_submission]};\r\n        }\r\n        case EDIT_EXERCISE_SUBMISSION_GRADED: {\r\n            const foundIndex: number = state.exercise_gradeds.findIndex(pr => pr.id === action.exercise_submission.id);\r\n            let exercise_gradeds: IExerciseSubmission[] = state.exercise_gradeds;\r\n            exercise_gradeds[foundIndex] = action.exercise_submission;\r\n            return { ...state, exercise_gradeds: exercise_gradeds };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_GRADED: {\r\n            return { ...state, exercise_gradeds: state.exercise_gradeds.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_GRADED_ALL: {\r\n            return { ...state, exercise_gradeds: [] };\r\n        }\r\n        case CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedExerciseSubmission: action.exercise_submission };\r\n        }\r\n        case CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedExerciseSubmission: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default exerciseSubmissionsReducer;","export interface ITurnover {\r\n    turnover: number;\r\n}\r\n\r\nexport enum TurnoverModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITurnoverState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TURNOVER_NOW, CHANGE_TURNOVER_NOW_PENDING_EDIT, EDIT_TURNOVER_NOW, REMOVE_TURNOVER_NOW,\r\n    CLEAR_TURNOVER_NOW_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TURNOVER_NOW, REMOVE_TURNOVER_NOW_ALL, INITIAL_TURNOVER_LAST, ADD_TURNOVER_LAST, EDIT_TURNOVER_LAST, REMOVE_TURNOVER_LAST, REMOVE_TURNOVER_LAST_ALL, CHANGE_TURNOVER_LAST_PENDING_EDIT, CLEAR_TURNOVER_LAST_PENDING_EDIT} from \"../actions/turnover.action\";\r\nimport { ITurnover, TurnoverModificationStatus } from \"../models/turnover.interface\";\r\n\r\n\r\n\r\nconst initialState: ITurnoverState = {\r\n    modificationState: TurnoverModificationStatus.None,\r\n    selectedTurnover: null,\r\n    turnover_now: [],\r\n    turnover_last: []\r\n};\r\n\r\nfunction turnoversReducer(state: ITurnoverState = initialState, action: IActionBase): ITurnoverState {\r\n    switch (action.type) {\r\n        case INITIAL_TURNOVER_NOW: {\r\n            return { ...state, turnover_now : [...state.turnover_now, action.turnover]};\r\n        }\r\n        case ADD_TURNOVER_NOW: {\r\n            return { ...state, turnover_now: [...state.turnover_now, action.turnover]};\r\n        }\r\n        case EDIT_TURNOVER_NOW: {\r\n            const foundIndex: number = state.turnover_now.findIndex(pr => pr.turnover === action.turnover.turnover);\r\n            let turnover_now: ITurnover[] = state.turnover_now;\r\n            turnover_now[foundIndex] = action.turnover;\r\n            return { ...state, turnover_now: turnover_now };\r\n        }\r\n        case REMOVE_TURNOVER_NOW: {\r\n            return { ...state, turnover_now: state.turnover_now.filter(pr => pr.turnover !== action.turnover) };\r\n        }\r\n        case REMOVE_TURNOVER_NOW_ALL: {\r\n            return { ...state, turnover_now: [] };\r\n        }\r\n        case CHANGE_TURNOVER_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedTurnover: action.turnover };\r\n        }\r\n        case CLEAR_TURNOVER_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedTurnover: null };\r\n        }\r\n\r\n        case INITIAL_TURNOVER_LAST: {\r\n            return { ...state, turnover_last : [...state.turnover_last, action.turnover]};\r\n        }\r\n        case ADD_TURNOVER_LAST: {\r\n            return { ...state, turnover_last: [...state.turnover_last, action.turnover]};\r\n        }\r\n        case EDIT_TURNOVER_LAST: {\r\n            const foundIndex: number = state.turnover_last.findIndex(pr => pr.turnover === action.turnover.turnover);\r\n            let turnover_last: ITurnover[] = state.turnover_last;\r\n            turnover_last[foundIndex] = action.turnover;\r\n            return { ...state, turnover_last: turnover_last };\r\n        }\r\n        case REMOVE_TURNOVER_LAST: {\r\n            return { ...state, turnover_last: state.turnover_last.filter(pr => pr.turnover !== action.turnover) };\r\n        }\r\n        case REMOVE_TURNOVER_LAST_ALL: {\r\n            return { ...state, turnover_last: [] };\r\n        }\r\n        case CHANGE_TURNOVER_LAST_PENDING_EDIT: {\r\n            return { ...state, selectedTurnover: action.turnover };\r\n        }\r\n        case CLEAR_TURNOVER_LAST_PENDING_EDIT: {\r\n            return { ...state, selectedTurnover: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default turnoversReducer;","export interface IReportUser {\r\n    total: number;\r\n}\r\n\r\nexport enum ReportUserModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2\r\n}","import { IReportUserState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_REPORT_USER, CHANGE_REPORT_USER_PENDING_EDIT, EDIT_REPORT_USER, REMOVE_REPORT_USER,\r\n    CLEAR_REPORT_USER_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_REPORT_USER, REMOVE_REPORT_USER_ALL} from \"../actions/report_user.action\";\r\nimport { IReportUser, ReportUserModificationStatus } from \"../models/report_user.interface\";\r\n\r\n\r\n\r\nconst initialState: IReportUserState = {\r\n    modificationState: ReportUserModificationStatus.None,\r\n    selectedReportUser: null,\r\n    report_users: []\r\n};\r\n\r\nfunction report_usersReducer(state: IReportUserState = initialState, action: IActionBase): IReportUserState {\r\n    switch (action.type) {\r\n        case INITIAL_REPORT_USER: {\r\n            return { ...state, report_users : [...state.report_users, action.report_user]};\r\n        }\r\n        case ADD_REPORT_USER: {\r\n            return { ...state, report_users: [...state.report_users, action.report_user]};\r\n        }\r\n        case EDIT_REPORT_USER: {\r\n            const foundIndex: number = state.report_users.findIndex(pr => pr.total === action.report_user.id);\r\n            let report_users: IReportUser[] = state.report_users;\r\n            report_users[foundIndex] = action.report_user;\r\n            return { ...state, report_users: report_users };\r\n        }\r\n        case REMOVE_REPORT_USER: {\r\n            return { ...state, report_users: state.report_users.filter(pr => pr.total !== action.id) };\r\n        }\r\n        case REMOVE_REPORT_USER_ALL: {\r\n            return { ...state, report_users: [] };\r\n        }\r\n        case CHANGE_REPORT_USER_PENDING_EDIT: {\r\n            return { ...state, selectedReportUser: action.report_user };\r\n        }\r\n        case CLEAR_REPORT_USER_PENDING_EDIT: {\r\n            return { ...state, selectedReportUser: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default report_usersReducer;","export interface ICourseReport {\r\n    total_register: number;\r\n    name: string;\r\n}\r\n\r\nexport enum CourseReportModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICourseReportState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_COURSE_REPORT, CHANGE_COURSE_REPORT_PENDING_EDIT, EDIT_COURSE_REPORT, REMOVE_COURSE_REPORT,\r\n    CLEAR_COURSE_REPORT_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_COURSE_REPORT, REMOVE_COURSE_REPORT_ALL} from \"../actions/course_report.action\";\r\nimport { ICourseReport, CourseReportModificationStatus } from \"../models/course_report.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseReportState = {\r\n    modificationState: CourseReportModificationStatus.None,\r\n    selectedCourseReport: null,\r\n    course_reports: []\r\n};\r\n\r\nfunction course_reportsReducer(state: ICourseReportState = initialState, action: IActionBase): ICourseReportState {\r\n    switch (action.type) {\r\n        case INITIAL_COURSE_REPORT: {\r\n            return { ...state, course_reports : [...state.course_reports, action.course_report]};\r\n        }\r\n        case ADD_COURSE_REPORT: {\r\n            return { ...state, course_reports: [...state.course_reports, action.course_report]};\r\n        }\r\n        case EDIT_COURSE_REPORT: {\r\n            const foundIndex: number = state.course_reports.findIndex(pr => pr.total_register === action.course_report.id);\r\n            let course_reports: ICourseReport[] = state.course_reports;\r\n            course_reports[foundIndex] = action.course_report;\r\n            return { ...state, course_reports: course_reports };\r\n        }\r\n        case REMOVE_COURSE_REPORT: {\r\n            return { ...state, course_reports: state.course_reports.filter(pr => pr.total_register !== action.id) };\r\n        }\r\n        case REMOVE_COURSE_REPORT_ALL: {\r\n            return { ...state, course_reports: [] };\r\n        }\r\n        case CHANGE_COURSE_REPORT_PENDING_EDIT: {\r\n            return { ...state, selectedCourseReport: action.course_report };\r\n        }\r\n        case CLEAR_COURSE_REPORT_PENDING_EDIT: {\r\n            return { ...state, selectedCourseReport: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default course_reportsReducer;","export interface IExerciseLevel {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    weight: number;\r\n}\r\n\r\nexport enum ExerciseLevelModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IExerciseLevelState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_EXERCISE_LEVEL, CHANGE_EXERCISE_LEVEL_PENDING_EDIT, EDIT_EXERCISE_LEVEL, REMOVE_EXERCISE_LEVEL,\r\n    CLEAR_EXERCISE_LEVEL_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_EXERCISE_LEVEL, REMOVE_EXERCISE_LEVEL_ALL} from \"../actions/exercise_level.action\";\r\nimport { IExerciseLevel, ExerciseLevelModificationStatus } from \"../models/exercise_level.interface\";\r\n\r\n\r\n\r\nconst initialState: IExerciseLevelState = {\r\n    modificationState: ExerciseLevelModificationStatus.None,\r\n    selectedExerciseLevel: null,\r\n    exercise_levels: []\r\n};\r\n\r\nfunction exercise_levelsReducer(state: IExerciseLevelState = initialState, action: IActionBase): IExerciseLevelState {\r\n    switch (action.type) {\r\n        case INITIAL_EXERCISE_LEVEL: {\r\n            return { ...state, exercise_levels : [...state.exercise_levels, action.exercise_level]};\r\n        }\r\n        case ADD_EXERCISE_LEVEL: {\r\n            return { ...state, exercise_levels: [...state.exercise_levels, action.exercise_level]};\r\n        }\r\n        case EDIT_EXERCISE_LEVEL: {\r\n            const foundIndex: number = state.exercise_levels.findIndex(pr => pr.id === action.exercise_level.id);\r\n            let exercise_levels: IExerciseLevel[] = state.exercise_levels;\r\n            exercise_levels[foundIndex] = action.exercise_level;\r\n            return { ...state, exercise_levels: exercise_levels };\r\n        }\r\n        case REMOVE_EXERCISE_LEVEL: {\r\n            return { ...state, exercise_levels: state.exercise_levels.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_EXERCISE_LEVEL_ALL: {\r\n            return { ...state, exercise_levels: [] };\r\n        }\r\n        case CHANGE_EXERCISE_LEVEL_PENDING_EDIT: {\r\n            return { ...state, selectedExerciseLevel: action.exercise_level };\r\n        }\r\n        case CLEAR_EXERCISE_LEVEL_PENDING_EDIT: {\r\n            return { ...state, selectedExerciseLevel: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default exercise_levelsReducer;","export interface IUserGradeExerciseSubmission {\r\n    student_id: number;\r\n    student_name: string;\r\n    exercise_name: string;\r\n    time_submit: string;\r\n    deadline: string;\r\n    image_url: string;\r\n    exercise_submission_id: number;\r\n    feedback: string;\r\n    description: string;\r\n    score: number;\r\n    time: string;\r\n}\r\n\r\nexport enum UserGradeExerciseSubmissionModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IUserGradeExerciseSubmissionState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_USER_GRADE_EXERCISE_SUBMISSION, CHANGE_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT, EDIT_USER_GRADE_EXERCISE_SUBMISSION, REMOVE_USER_GRADE_EXERCISE_SUBMISSION,\r\n    CLEAR_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_USER_GRADE_EXERCISE_SUBMISSION, REMOVE_USER_GRADE_EXERCISE_SUBMISSION_ALL} from \"../actions/user_grade_exercise_submission.action\";\r\nimport { IUserGradeExerciseSubmission, UserGradeExerciseSubmissionModificationStatus } from \"../models/user_grade_exercise_submission.interface\";\r\n\r\n\r\n\r\nconst initialState: IUserGradeExerciseSubmissionState = {\r\n    modificationState: UserGradeExerciseSubmissionModificationStatus.None,\r\n    selectedUserGradeExerciseSubmission: null,\r\n    user_grade_exercise_submissions: []\r\n};\r\n\r\nfunction user_grade_exercise_submissionsReducer(state: IUserGradeExerciseSubmissionState = initialState, action: IActionBase): IUserGradeExerciseSubmissionState {\r\n    switch (action.type) {\r\n        case INITIAL_USER_GRADE_EXERCISE_SUBMISSION: {\r\n            return { ...state, user_grade_exercise_submissions : [...state.user_grade_exercise_submissions, action.user_grade_exercise_submission]};\r\n        }\r\n        case ADD_USER_GRADE_EXERCISE_SUBMISSION: {\r\n            return { ...state, user_grade_exercise_submissions: [...state.user_grade_exercise_submissions, action.user_grade_exercise_submission]};\r\n        }\r\n        case EDIT_USER_GRADE_EXERCISE_SUBMISSION: {\r\n            const foundIndex: number = state.user_grade_exercise_submissions.findIndex(pr => pr.student_id === action.user_grade_exercise_submission.id);\r\n            let user_grade_exercise_submissions: IUserGradeExerciseSubmission[] = state.user_grade_exercise_submissions;\r\n            user_grade_exercise_submissions[foundIndex] = action.user_grade_exercise_submission;\r\n            return { ...state, user_grade_exercise_submissions: user_grade_exercise_submissions };\r\n        }\r\n        case REMOVE_USER_GRADE_EXERCISE_SUBMISSION: {\r\n            return { ...state, user_grade_exercise_submissions: state.user_grade_exercise_submissions.filter(pr => pr.student_id !== action.id) };\r\n        }\r\n        case REMOVE_USER_GRADE_EXERCISE_SUBMISSION_ALL: {\r\n            return { ...state, user_grade_exercise_submissions: [] };\r\n        }\r\n        case CHANGE_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT: {\r\n            return { ...state, selectedUserGradeExerciseSubmission: action.user_grade_exercise_submission };\r\n        }\r\n        case CLEAR_USER_GRADE_EXERCISE_SUBMISSION_PENDING_EDIT: {\r\n            return { ...state, selectedUserGradeExerciseSubmission: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default user_grade_exercise_submissionsReducer;","export interface IExerciseStudent {\r\n    id: any;\r\n    name: string;\r\n    exercise_submission_id: number;\r\n    description: string;\r\n    section_id: number;\r\n    level_id: number;\r\n    level_name: string;\r\n    deadline: string;\r\n    time_submit:  string;\r\n    teacher_name: string;\r\n    section_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ExerciseStudentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IExerciseStudentState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_EXERCISE_NOT_SUBMIT, EDIT_EXERCISE_NOT_SUBMIT, REMOVE_EXERCISE_NOT_SUBMIT,INITIAL_EXERCISE_NOT_SUBMIT, REMOVE_EXERCISE_NOT_SUBMIT_ALL, \r\n    ADD_EXERCISE_SUBMITED_NOT_GRADE, EDIT_EXERCISE_SUBMITED_NOT_GRADE, REMOVE_EXERCISE_SUBMITED_NOT_GRADE, INITIAL_EXERCISE_SUBMITED_NOT_GRADE, REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL, \r\n    ADD_EXERCISE_SUBMITED_GRADED, EDIT_EXERCISE_SUBMITED_GRADED, REMOVE_EXERCISE_SUBMITED_GRADED , INITIAL_EXERCISE_SUBMITED_GRADED, REMOVE_EXERCISE_SUBMITED_GRADED_ALL,\r\n    SET_MODIFICATION_STATE\r\n\r\n} from \"../actions/exercise_student.action\";\r\nimport { IExerciseStudent, ExerciseStudentModificationStatus } from \"../models/exercise_student.interface\";\r\n\r\nconst initialState: IExerciseStudentState = {\r\n    modificationState: ExerciseStudentModificationStatus.None,\r\n    selectedExerciseStudent: null,\r\n    exercise_not_submit: [],\r\n    exercise_submitted_not_grade: [],\r\n    exercise_submitted_graded: []\r\n};\r\n\r\nfunction exerciseStudentReducer(state: IExerciseStudentState = initialState, action: IActionBase): IExerciseStudentState {\r\n    switch (action.type) {\r\n        case INITIAL_EXERCISE_NOT_SUBMIT: {\r\n            return { ...state, exercise_not_submit : [...state.exercise_not_submit, action.exercise_student]};\r\n        }\r\n        case REMOVE_EXERCISE_NOT_SUBMIT_ALL: {\r\n            return { ...state, exercise_not_submit: [] };\r\n        }\r\n        case ADD_EXERCISE_NOT_SUBMIT: {\r\n            return { ...state, exercise_not_submit: [...state.exercise_not_submit, action.exercise_student]};\r\n        }\r\n        case EDIT_EXERCISE_NOT_SUBMIT: {\r\n            const foundIndex: number = state.exercise_not_submit.findIndex(pr => pr.id === action.exercise_student.id);\r\n            let exercise_not_submits: IExerciseStudent[] = state.exercise_not_submit;\r\n            exercise_not_submits[foundIndex] = action.exercise_student;\r\n            return { ...state, exercise_not_submit: exercise_not_submits };\r\n        }\r\n        case REMOVE_EXERCISE_NOT_SUBMIT: {\r\n            return { ...state, exercise_not_submit: state.exercise_not_submit.filter(x=>x.id !== action.exercise_student.id)};\r\n        }\r\n\r\n        case INITIAL_EXERCISE_SUBMITED_NOT_GRADE: {\r\n            return { ...state, exercise_submitted_not_grade : [...state.exercise_submitted_not_grade, action.exercise_student]};\r\n        }\r\n        case REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL: {\r\n            return { ...state, exercise_submitted_not_grade: [] };\r\n        }\r\n        case ADD_EXERCISE_SUBMITED_NOT_GRADE: {\r\n            return { ...state, exercise_submitted_not_grade: [...state.exercise_submitted_not_grade, action.exercise_student]};\r\n        }\r\n        case EDIT_EXERCISE_SUBMITED_NOT_GRADE: {\r\n            const foundIndex: number = state.exercise_submitted_not_grade.findIndex(pr => pr.id === action.exercise_student.id);\r\n            let accept_exercise_not_submit: IExerciseStudent[] = state.exercise_submitted_not_grade;\r\n            accept_exercise_not_submit[foundIndex] = action.exercise_student;\r\n            return { ...state, exercise_submitted_not_grade: accept_exercise_not_submit };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMITED_NOT_GRADE: {\r\n            return { ...state, exercise_submitted_not_grade: state.exercise_submitted_not_grade.filter(x=>x.id !== action.exercise_student.id)};\r\n        }\r\n\r\n        case INITIAL_EXERCISE_SUBMITED_GRADED: {\r\n            return { ...state, exercise_submitted_graded : [...state.exercise_submitted_graded, action.exercise_student]};\r\n        }\r\n        case REMOVE_EXERCISE_SUBMITED_GRADED_ALL: {\r\n            return { ...state, exercise_submitted_graded: [] };\r\n        }\r\n        case ADD_EXERCISE_SUBMITED_GRADED: {\r\n            return { ...state, exercise_submitted_graded: [...state.exercise_submitted_graded, action.exercise_student]};\r\n        }\r\n        case EDIT_EXERCISE_SUBMITED_GRADED: {\r\n            const foundIndex: number = state.exercise_submitted_graded.findIndex(pr => pr.id === action.exercise_student.id);\r\n            let remove_exercise_not_submit: IExerciseStudent[] = state.exercise_submitted_graded;\r\n            remove_exercise_not_submit[foundIndex] = action.exercise_student;\r\n            return { ...state, exercise_submitted_graded: remove_exercise_not_submit };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMITED_GRADED: {\r\n            return { ...state, exercise_submitted_graded: state.exercise_submitted_graded.filter(x=>x.id !== action.exercise_student.id)};\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default exerciseStudentReducer;","export interface ITutorial {\r\n    id: any;\r\n    section_id: number;\r\n    creator_id: number;\r\n    creator_name: string;\r\n    class_name: string;\r\n    class_id: number;\r\n    section_number: number;\r\n    name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum TutorialModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITutorialState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_TUTORIAL, EDIT_TUTORIAL, REMOVE_TUTORIAL,INITIAL_TUTORIAL, REMOVE_TUTORIAL_ALL, \r\n    CLEAR_TUTORIAL_PENDING_EDIT, CHANGE_TUTORIAL_PENDING_EDIT, SET_MODIFICATION_STATE\r\n\r\n} from \"../actions/tutorial.action\";\r\nimport { ITutorial, TutorialModificationStatus } from \"../models/tutorial.interface\";\r\n\r\nconst initialState: ITutorialState = {\r\n    modificationState: TutorialModificationStatus.None,\r\n    selectedTutorial: null,\r\n    tutorials: []\r\n};\r\n\r\nfunction studentLeaveReducer(state: ITutorialState = initialState, action: IActionBase): ITutorialState {\r\n    switch (action.type) {\r\n        case INITIAL_TUTORIAL: {\r\n            return { ...state, tutorials : [...state.tutorials, action.tutorial]};\r\n        }\r\n        case REMOVE_TUTORIAL_ALL: {\r\n            return { ...state, tutorials: [] };\r\n        }\r\n        case ADD_TUTORIAL: {\r\n            return { ...state, tutorials: [...state.tutorials, action.tutorial]};\r\n        }\r\n        case EDIT_TUTORIAL: {\r\n            const foundIndex: number = state.tutorials.findIndex(pr => pr.id === action.tutorial.id);\r\n            let tutorials: ITutorial[] = state.tutorials;\r\n            tutorials[foundIndex] = action.tutorial;\r\n            return { ...state, tutorials: tutorials };\r\n        }\r\n        case REMOVE_TUTORIAL: {\r\n            return { ...state, tutorials: state.tutorials.filter(x=>x.id !== action.tutorial.id)};\r\n        }\r\n        \r\n        case CHANGE_TUTORIAL_PENDING_EDIT: {\r\n            return { ...state, selectedTutorial: action.tutorial };\r\n        }\r\n        case CLEAR_TUTORIAL_PENDING_EDIT: {\r\n            return { ...state, selectedTutorial: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default studentLeaveReducer;","export interface IUserGradeContestSubmission {\r\n    student_id: number;\r\n    teacher_name: string;\r\n    teacher_id: number;\r\n    student_name: string;\r\n    contest_id: number;\r\n    contest_name: string;\r\n    contest_submission_id: number;\r\n    feedback: string;\r\n    score: number;\r\n    time: string;\r\n}\r\n\r\nexport enum UserGradeContestSubmissionModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IUserGradeContestSubmissionState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_USER_GRADE_CONTEST_SUBMISSION, CHANGE_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT, EDIT_USER_GRADE_CONTEST_SUBMISSION, REMOVE_USER_GRADE_CONTEST_SUBMISSION,\r\n    CLEAR_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_USER_GRADE_CONTEST_SUBMISSION, REMOVE_USER_GRADE_CONTEST_SUBMISSION_ALL} from \"../actions/user_grade_contest_submission.action\";\r\nimport { IUserGradeContestSubmission, UserGradeContestSubmissionModificationStatus } from \"../models/user_grade_contest_submission.interface\";\r\n\r\n\r\n\r\nconst initialState: IUserGradeContestSubmissionState = {\r\n    modificationState: UserGradeContestSubmissionModificationStatus.None,\r\n    selectedUserGradeContestSubmission: null,\r\n    userGradeContestSubmissions: []\r\n};\r\n\r\nfunction userGradeContestSubmissionsReducer(state: IUserGradeContestSubmissionState = initialState, action: IActionBase): IUserGradeContestSubmissionState {\r\n    switch (action.type) {\r\n        case INITIAL_USER_GRADE_CONTEST_SUBMISSION: {\r\n            return { ...state, userGradeContestSubmissions : [...state.userGradeContestSubmissions, action.user_grade_contest_submission]};\r\n        }\r\n        case ADD_USER_GRADE_CONTEST_SUBMISSION: {\r\n            return { ...state, userGradeContestSubmissions: [...state.userGradeContestSubmissions, action.user_grade_contest_submission]};\r\n        }\r\n        case EDIT_USER_GRADE_CONTEST_SUBMISSION: {\r\n            const foundIndex: number = state.userGradeContestSubmissions.findIndex(pr => pr.student_id === action.user_grade_contest_submission.id);\r\n            let userGradeContestSubmissions: IUserGradeContestSubmission[] = state.userGradeContestSubmissions;\r\n            userGradeContestSubmissions[foundIndex] = action.user_grade_contest_submission;\r\n            return { ...state, userGradeContestSubmissions: userGradeContestSubmissions };\r\n        }\r\n        case REMOVE_USER_GRADE_CONTEST_SUBMISSION: {\r\n            return { ...state, userGradeContestSubmissions: state.userGradeContestSubmissions.filter(pr => pr.student_id !== action.id) };\r\n        }\r\n        case REMOVE_USER_GRADE_CONTEST_SUBMISSION_ALL: {\r\n            return { ...state, userGradeContestSubmissions: [] };\r\n        }\r\n        case CHANGE_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT: {\r\n            return { ...state, selectedUserGradeContestSubmission: action.user_grade_contest_submission };\r\n        }\r\n        case CLEAR_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT: {\r\n            return { ...state, selectedUserGradeContestSubmission: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default userGradeContestSubmissionsReducer;","export interface IUserRegisterTutorialPage {\r\n    id: any;\r\n    user_register_tutorial_id: number;\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nexport enum UserRegisterTutorialPageModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IUserRegisterTutorialPage, UserRegisterTutorialPageModificationStatus } from \"../models/user_register_tutorial_page.interface\";\r\nexport const ADD_USER_REGISTER_JOIN_SEMESTER: string = \"ADD_USER_REGISTER_JOIN_SEMESTER\";\r\nexport const EDIT_USER_REGISTER_JOIN_SEMESTER: string = \"EDIT_USER_REGISTER_JOIN_SEMESTER\";\r\nexport const REMOVE_USER_REGISTER_JOIN_SEMESTER: string = \"REMOVE_USER_REGISTER_JOIN_SEMESTER\";\r\nexport const CHANGE_USER_REGISTER_JOIN_SEMESTER_AMOUNT: string = \"CHANGE_USER_REGISTER_JOIN_SEMESTER_AMOUNT\";\r\nexport const CHANGE_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT: string = \"CHANGE_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT\";\r\nexport const CLEAR_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT: string = \"CLEAR_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_USER_REGISTER_JOIN_SEMESTER_ALL: string = \"REMOVE_USER_REGISTER_JOIN_SEMESTER_ALL\";\r\nexport const INITIAL_USER_REGISTER_JOIN_SEMESTER: string = \"INITIAL_USER_REGISTER_JOIN_SEMESTER\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(user_register_tutorial_page: IUserRegisterTutorialPage) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        user_register_tutorial_page\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialUserRegisterTutorialPage(user_register_tutorial_page: IUserRegisterTutorialPage): IInitialUserRegisterTutorialPageActionType {\r\n    return { type: INITIAL_USER_REGISTER_JOIN_SEMESTER, user_register_tutorial_page: user_register_tutorial_page };\r\n}\r\n\r\nexport function removeUserRegisterTutorialPageAll(): IRemoveUserRegisterTutorialPageAllActionType {\r\n    return { type: REMOVE_USER_REGISTER_JOIN_SEMESTER_ALL };\r\n}\r\n\r\nexport function addUserRegisterTutorialPage(user_register_tutorial_page: IUserRegisterTutorialPage): IAddUserRegisterTutorialPageActionType {\r\n    return { type: ADD_USER_REGISTER_JOIN_SEMESTER, user_register_tutorial_page: user_register_tutorial_page };\r\n}\r\n\r\nexport function editUserRegisterTutorialPage(user_register_tutorial_page: IUserRegisterTutorialPage): IEditUserRegisterTutorialPageActionType {\r\n    return { type: EDIT_USER_REGISTER_JOIN_SEMESTER, user_register_tutorial_page: user_register_tutorial_page };\r\n}\r\n\r\nexport function removeUserRegisterTutorialPage(id: any): IRemoveUserRegisterTutorialPageActionType {\r\n    return { type: REMOVE_USER_REGISTER_JOIN_SEMESTER, id: id };\r\n}\r\n\r\nexport function changeSelectedUserRegisterTutorialPage(user_register_tutorial_page: IUserRegisterTutorialPage): IChangeSelectedUserRegisterTutorialPageActionType {\r\n    return { type: CHANGE_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT, user_register_tutorial_page: user_register_tutorial_page };\r\n}\r\n\r\nexport function clearSelectedUserRegisterTutorialPage(): IClearSelectedUserRegisterTutorialPageActionType {\r\n    return { type: CLEAR_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateUserRegisterTutorialPage(value: UserRegisterTutorialPageModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddUserRegisterTutorialPageActionType { type: string, user_register_tutorial_page: IUserRegisterTutorialPage };\r\ninterface IEditUserRegisterTutorialPageActionType { type: string, user_register_tutorial_page: IUserRegisterTutorialPage };\r\ninterface IRemoveUserRegisterTutorialPageActionType { type: string, id: any };\r\ninterface IChangeSelectedUserRegisterTutorialPageActionType { type: string, user_register_tutorial_page: IUserRegisterTutorialPage };\r\ninterface IClearSelectedUserRegisterTutorialPageActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  UserRegisterTutorialPageModificationStatus};\r\ninterface IRemoveUserRegisterTutorialPageAllActionType { type: string }\r\ninterface IInitialUserRegisterTutorialPageActionType {type: string, user_register_tutorial_page: IUserRegisterTutorialPage}","import { IUserRegisterTutorialPageState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_USER_REGISTER_JOIN_SEMESTER, CHANGE_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT, EDIT_USER_REGISTER_JOIN_SEMESTER, REMOVE_USER_REGISTER_JOIN_SEMESTER,\r\n    CLEAR_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_USER_REGISTER_JOIN_SEMESTER, REMOVE_USER_REGISTER_JOIN_SEMESTER_ALL} from \"../actions/user_register_tutorial_page.action\";\r\nimport { IUserRegisterTutorialPage, UserRegisterTutorialPageModificationStatus } from \"../models/user_register_tutorial_page.interface\";\r\n\r\n\r\n\r\nconst initialState: IUserRegisterTutorialPageState = {\r\n    modificationState: UserRegisterTutorialPageModificationStatus.None,\r\n    selectedUserRegisterTutorialPage: null,\r\n    user_register_tutorial_pages: []\r\n};\r\n\r\nfunction user_register_tutorial_pagesReducer(state: IUserRegisterTutorialPageState = initialState, action: IActionBase): IUserRegisterTutorialPageState {\r\n    switch (action.type) {\r\n        case INITIAL_USER_REGISTER_JOIN_SEMESTER: {\r\n            return { ...state, user_register_tutorial_pages : [...state.user_register_tutorial_pages, action.user_register_tutorial_page]};\r\n        }\r\n        case ADD_USER_REGISTER_JOIN_SEMESTER: {\r\n            return { ...state, user_register_tutorial_pages: [...state.user_register_tutorial_pages, action.user_register_tutorial_page]};\r\n        }\r\n        case EDIT_USER_REGISTER_JOIN_SEMESTER: {\r\n            const foundIndex: number = state.user_register_tutorial_pages.findIndex(pr => pr.id === action.user_register_tutorial_page.id);\r\n            let user_register_tutorial_pages: IUserRegisterTutorialPage[] = state.user_register_tutorial_pages;\r\n            user_register_tutorial_pages[foundIndex] = action.user_register_tutorial_page;\r\n            return { ...state, user_register_tutorial_pages: user_register_tutorial_pages };\r\n        }\r\n        case REMOVE_USER_REGISTER_JOIN_SEMESTER: {\r\n            return { ...state, user_register_tutorial_pages: state.user_register_tutorial_pages.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_USER_REGISTER_JOIN_SEMESTER_ALL: {\r\n            return { ...state, user_register_tutorial_pages: [] };\r\n        }\r\n        case CHANGE_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterTutorialPage: action.user_register_tutorial_page };\r\n        }\r\n        case CLEAR_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterTutorialPage: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default user_register_tutorial_pagesReducer;","export interface IUserRegisterTutorial {\r\n    id: any;\r\n    section_id: number;\r\n    creator_id: number;\r\n    creator_name: string;\r\n    section_name: string;\r\n    section_number: number;\r\n    class_id: number;\r\n    class_name: string;\r\n    name: string;\r\n    status: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum UserRegisterTutorialModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IUserRegisterTutorialState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW, EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW, REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW,INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW, REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_ALL, \r\n    ADD_USER_REGISTER_TUTORIAL_APPROVED, EDIT_USER_REGISTER_TUTORIAL_APPROVED, REMOVE_USER_REGISTER_TUTORIAL_APPROVED, INITIAL_USER_REGISTER_TUTORIAL_APPROVED, REMOVE_USER_REGISTER_TUTORIAL_APPROVED_ALL, \r\n    ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED, EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED, REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED , INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED, REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_ALL,\r\n    CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT, CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE, REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE, REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_ALL, ADD_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE, EDIT_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE\r\n\r\n} from \"../actions/user_register_tutorial.action\";\r\nimport { IUserRegisterTutorial, UserRegisterTutorialModificationStatus } from \"../models/user_register_tutorial.interface\";\r\n\r\nconst initialState: IUserRegisterTutorialState = {\r\n    modificationState: UserRegisterTutorialModificationStatus.None,\r\n    selectedUserRegisterTutorial: null,\r\n    user_register_tutorial_not_approved_nows: [],\r\n    user_register_tutorial_not_approveds: [],\r\n    user_register_tutorial_approveds: [],\r\n    user_register_tutorial_approved_to_tutorial_templates: []\r\n};\r\n\r\nfunction userRegisterTutorialReducer(state: IUserRegisterTutorialState = initialState, action: IActionBase): IUserRegisterTutorialState {\r\n    switch (action.type) {\r\n        case INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: {\r\n            return { ...state, user_register_tutorial_not_approved_nows : [...state.user_register_tutorial_not_approved_nows, action.user_register_tutorial]};\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_ALL: {\r\n            return { ...state, user_register_tutorial_not_approved_nows: [] };\r\n        }\r\n        case ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: {\r\n            return { ...state, user_register_tutorial_not_approved_nows: [...state.user_register_tutorial_not_approved_nows, action.user_register_tutorial]};\r\n        }\r\n        case EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: {\r\n            const foundIndex: number = state.user_register_tutorial_not_approved_nows.findIndex(pr => pr.id === action.user_register_tutorial.id);\r\n            let user_register_tutorial_not_approved_nows: IUserRegisterTutorial[] = state.user_register_tutorial_not_approved_nows;\r\n            user_register_tutorial_not_approved_nows[foundIndex] = action.user_register_tutorial;\r\n            return { ...state, user_register_tutorial_not_approved_nows: user_register_tutorial_not_approved_nows };\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: {\r\n            return { ...state, user_register_tutorial_not_approved_nows: state.user_register_tutorial_not_approved_nows.filter(x=>x.id !== action.user_register_tutorial.id)};\r\n        }\r\n\r\n        case INITIAL_USER_REGISTER_TUTORIAL_APPROVED: {\r\n            return { ...state, user_register_tutorial_approveds : [...state.user_register_tutorial_approveds, action.user_register_tutorial]};\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_APPROVED_ALL: {\r\n            return { ...state, user_register_tutorial_approveds: [] };\r\n        }\r\n        case ADD_USER_REGISTER_TUTORIAL_APPROVED: {\r\n            return { ...state, user_register_tutorial_approveds: [...state.user_register_tutorial_approveds, action.user_register_tutorial]};\r\n        }\r\n        case EDIT_USER_REGISTER_TUTORIAL_APPROVED: {\r\n            const foundIndex: number = state.user_register_tutorial_approveds.findIndex(pr => pr.id === action.user_register_tutorials.id);\r\n            let user_register_tutorial_approveds: IUserRegisterTutorial[] = state.user_register_tutorial_approveds;\r\n            user_register_tutorial_approveds[foundIndex] = action.user_register_tutorial;\r\n            return { ...state, user_register_tutorial_approveds: user_register_tutorial_approveds };\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_APPROVED: {\r\n            return { ...state, user_register_tutorial_approveds: state.user_register_tutorial_approveds.filter(x=>x.id !== action.user_register_tutorial.id)};\r\n        }\r\n\r\n        case INITIAL_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: {\r\n            return { ...state, user_register_tutorial_approved_to_tutorial_templates : [...state.user_register_tutorial_approved_to_tutorial_templates, action.user_register_tutorial]};\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_ALL: {\r\n            return { ...state, user_register_tutorial_approved_to_tutorial_templates: [] };\r\n        }\r\n        case ADD_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: {\r\n            return { ...state, user_register_tutorial_approved_to_tutorial_templates: [...state.user_register_tutorial_approved_to_tutorial_templates, action.user_register_tutorial]};\r\n        }\r\n        case EDIT_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: {\r\n            const foundIndex: number = state.user_register_tutorial_approved_to_tutorial_templates.findIndex(pr => pr.id === action.user_register_tutorials.id);\r\n            let user_register_tutorial_approved_to_tutorial_templates: IUserRegisterTutorial[] = state.user_register_tutorial_approved_to_tutorial_templates;\r\n            user_register_tutorial_approved_to_tutorial_templates[foundIndex] = action.user_register_tutorial;\r\n            return { ...state, user_register_tutorial_approved_to_tutorial_templates: user_register_tutorial_approved_to_tutorial_templates };\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: {\r\n            return { ...state, user_register_tutorial_approved_to_tutorial_templates: state.user_register_tutorial_approved_to_tutorial_templates.filter(x=>x.id !== action.user_register_tutorial.id)};\r\n        }\r\n\r\n        case INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED: {\r\n            return { ...state, user_register_tutorial_approveds : [...state.user_register_tutorial_approveds, action.user_register_tutorial]};\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_ALL: {\r\n            return { ...state, user_register_tutorial_approveds: [] };\r\n        }\r\n        case ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED: {\r\n            return { ...state, user_register_tutorial_approveds: [...state.user_register_tutorial_approveds, action.user_register_tutorial]};\r\n        }\r\n        case EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED: {\r\n            const foundIndex: number = state.user_register_tutorial_approveds.findIndex(pr => pr.id === action.user_register_tutorial.id);\r\n            let user_register_tutorial_approveds: IUserRegisterTutorial[] = state.user_register_tutorial_approveds;\r\n            user_register_tutorial_approveds[foundIndex] = action.user_register_tutorials;\r\n            return { ...state, user_register_tutorial_approveds: user_register_tutorial_approveds };\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED: {\r\n            return { ...state, user_register_tutorial_approveds: state.user_register_tutorial_approveds.filter(x=>x.id !== action.user_register_tutorial.id)};\r\n        }\r\n        \r\n        case CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterTutorial: action.user_register_tutorial };\r\n        }\r\n        case CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterTutorial: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userRegisterTutorialReducer;","export interface IContestSubmission {\r\n    id: any;\r\n    student_id: number;\r\n    contest_id: number;\r\n    student_name: string;\r\n    contest_name: string;\r\n    image_url: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ContestSubmissionModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IContestSubmissionState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_EXERCISE_SUBMISSION_NOT_GRADED, CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT, EDIT_EXERCISE_SUBMISSION_NOT_GRADED, REMOVE_EXERCISE_SUBMISSION_NOT_GRADED,\r\n    CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_EXERCISE_SUBMISSION_NOT_GRADED, REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL, INITIAL_EXERCISE_SUBMISSION_GRADED, ADD_EXERCISE_SUBMISSION_GRADED, EDIT_EXERCISE_SUBMISSION_GRADED, REMOVE_EXERCISE_SUBMISSION_GRADED, REMOVE_EXERCISE_SUBMISSION_GRADED_ALL, CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT, CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT} from \"../actions/contest_submission.action\";\r\nimport { IContestSubmission, ContestSubmissionModificationStatus } from \"../models/contest_submission.interface\";\r\n\r\n\r\n\r\nconst initialState: IContestSubmissionState = {\r\n    modificationState: ContestSubmissionModificationStatus.None,\r\n    selectedContestSubmission: null,\r\n    contest_not_gradeds: [],\r\n    contest_gradeds: []\r\n};\r\n\r\nfunction contestSubmissionsReducer(state: IContestSubmissionState = initialState, action: IActionBase): IContestSubmissionState {\r\n    switch (action.type) {\r\n        case INITIAL_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            return { ...state, contest_not_gradeds : [...state.contest_not_gradeds, action.contest_submission]};\r\n        }\r\n        case ADD_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            return { ...state, contest_not_gradeds: [...state.contest_not_gradeds, action.contest_submission]};\r\n        }\r\n        case EDIT_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            const foundIndex: number = state.contest_not_gradeds.findIndex(pr => pr.id === action.contest_submission.id);\r\n            let contest_not_gradeds: IContestSubmission[] = state.contest_not_gradeds;\r\n            contest_not_gradeds[foundIndex] = action.contest_submission;\r\n            return { ...state, contest_not_gradeds: contest_not_gradeds };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            return { ...state, contest_not_gradeds: state.contest_not_gradeds.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL: {\r\n            return { ...state, contest_not_gradeds: [] };\r\n        }\r\n        case CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedContestSubmission: action.contest_submission };\r\n        }\r\n        case CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedContestSubmission: null };\r\n        }\r\n\r\n        case INITIAL_EXERCISE_SUBMISSION_GRADED: {\r\n            return { ...state, contest_gradeds : [...state.contest_gradeds, action.contest_submission]};\r\n        }\r\n        case ADD_EXERCISE_SUBMISSION_GRADED: {\r\n            return { ...state, contest_gradeds: [...state.contest_gradeds, action.contest_submission]};\r\n        }\r\n        case EDIT_EXERCISE_SUBMISSION_GRADED: {\r\n            const foundIndex: number = state.contest_gradeds.findIndex(pr => pr.id === action.contest_submission.id);\r\n            let contest_gradeds: IContestSubmission[] = state.contest_gradeds;\r\n            contest_gradeds[foundIndex] = action.contest_submission;\r\n            return { ...state, contest_gradeds: contest_gradeds };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_GRADED: {\r\n            return { ...state, contest_gradeds: state.contest_gradeds.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_GRADED_ALL: {\r\n            return { ...state, contest_gradeds: [] };\r\n        }\r\n        case CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedContestSubmission: action.contest_submission };\r\n        }\r\n        case CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedContestSubmission: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default contestSubmissionsReducer;","export interface IScheduleTimeClass {\r\n    class_name: string;\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\n\r\nexport enum ScheduleTimeClassModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IScheduleTimeClassState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TIME_SCHEDULE, CHANGE_TIME_SCHEDULE_PENDING_EDIT, EDIT_TIME_SCHEDULE, REMOVE_TIME_SCHEDULE,\r\n    CLEAR_TIME_SCHEDULE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TIME_SCHEDULE, REMOVE_TIME_SCHEDULE_ALL} from \"../actions/schedule_time_class.action\";\r\nimport { IScheduleTimeClass, ScheduleTimeClassModificationStatus } from \"../models/schedule_time_class.interface\";\r\n\r\n\r\n\r\nconst initialState: IScheduleTimeClassState = {\r\n    modificationState: ScheduleTimeClassModificationStatus.None,\r\n    selectedScheduleTimeClass: null,\r\n    schedule_time_classes: []\r\n};\r\n\r\nfunction schedule_time_classsReducer(state: IScheduleTimeClassState = initialState, action: IActionBase): IScheduleTimeClassState {\r\n    switch (action.type) {\r\n        case INITIAL_TIME_SCHEDULE: {\r\n            return { ...state, schedule_time_classes : [...state.schedule_time_classes, action.schedule_time_class]};\r\n        }\r\n        case ADD_TIME_SCHEDULE: {\r\n            return { ...state, schedule_time_classes: [...state.schedule_time_classes, action.schedule_time_class]};\r\n        }\r\n        case EDIT_TIME_SCHEDULE: {\r\n            let schedule_time_classs: IScheduleTimeClass[] = state.schedule_time_classes;\r\n            schedule_time_classs[0] = action.schedule_time_class;\r\n            return { ...state, schedule_time_classes: schedule_time_classs };\r\n        }\r\n        case REMOVE_TIME_SCHEDULE: {\r\n            return { ...state, schedule_time_classes: [] };\r\n        }\r\n        case REMOVE_TIME_SCHEDULE_ALL: {\r\n            return { ...state, schedule_time_classes: [] };\r\n        }\r\n        case CHANGE_TIME_SCHEDULE_PENDING_EDIT: {\r\n            return { ...state, selectedScheduleTimeClass: action.schedule_time_class };\r\n        }\r\n        case CLEAR_TIME_SCHEDULE_PENDING_EDIT: {\r\n            return { ...state, selectedScheduleTimeClass: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default schedule_time_classsReducer;","export interface INotifyDb {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    time: string;\r\n}\r\n\r\nexport enum NotifyDbModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { INotifyDbState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_NOTIFY_DB, CHANGE_NOTIFY_DB_PENDING_EDIT, EDIT_NOTIFY_DB, REMOVE_NOTIFY_DB,\r\n    CLEAR_NOTIFY_DB_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_NOTIFY_DB, REMOVE_NOTIFY_DB_ALL} from \"../actions/notify_db.action\";\r\nimport { INotifyDb, NotifyDbModificationStatus } from \"../models/notify_db.interface\";\r\n\r\n\r\n\r\nconst initialState: INotifyDbState = {\r\n    modificationState: NotifyDbModificationStatus.None,\r\n    selectedNotifyDb: null,\r\n    notify_dbs: []\r\n};\r\n\r\nfunction notify_dbsReducer(state: INotifyDbState = initialState, action: IActionBase): INotifyDbState {\r\n    switch (action.type) {\r\n        case INITIAL_NOTIFY_DB: {\r\n            return { ...state, notify_dbs : [...state.notify_dbs, action.notify_db]};\r\n        }\r\n        case ADD_NOTIFY_DB: {\r\n            return { ...state, notify_dbs: [...state.notify_dbs, action.notify_db]};\r\n        }\r\n        case EDIT_NOTIFY_DB: {\r\n            const foundIndex: number = state.notify_dbs.findIndex(pr => pr.id === action.notify_db.id);\r\n            let notify_dbs: INotifyDb[] = state.notify_dbs;\r\n            notify_dbs[foundIndex] = action.notify_db;\r\n            return { ...state, notify_dbs: notify_dbs };\r\n        }\r\n        case REMOVE_NOTIFY_DB: {\r\n            return { ...state, notify_dbs: state.notify_dbs.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_NOTIFY_DB_ALL: {\r\n            return { ...state, notify_dbs: [] };\r\n        }\r\n        case CHANGE_NOTIFY_DB_PENDING_EDIT: {\r\n            return { ...state, selectedNotifyDb: action.notify_db };\r\n        }\r\n        case CLEAR_NOTIFY_DB_PENDING_EDIT: {\r\n            return { ...state, selectedNotifyDb: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default notify_dbsReducer;","export interface IUserReadNotification {\r\n    notification_id: number;\r\n    user_id: number;\r\n    is_read: boolean;\r\n}\r\n\r\nexport enum UserReadNotificationModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IUserReadNotificationState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_USER_READED_NOTIFICATION, CHANGE_USER_READED_NOTIFICATION_PENDING_EDIT, EDIT_USER_READED_NOTIFICATION, REMOVE_USER_READED_NOTIFICATION,\r\n    CLEAR_USER_READED_NOTIFICATION_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_USER_READED_NOTIFICATION, REMOVE_USER_READED_NOTIFICATION_ALL, INITIAL_USER_NOT_READED_NOTIFICATION, ADD_USER_NOT_READED_NOTIFICATION, EDIT_USER_NOT_READED_NOTIFICATION, REMOVE_USER_NOT_READED_NOTIFICATION, REMOVE_USER_NOT_READED_NOTIFICATION_ALL, CHANGE_USER_NOT_READED_NOTIFICATION_PENDING_EDIT, CLEAR_USER_NOT_READED_NOTIFICATION_PENDING_EDIT} from \"../actions/user_read_notification.action\";\r\nimport { IUserReadNotification, UserReadNotificationModificationStatus } from \"../models/user_read_notification.interface\";\r\n\r\n\r\n\r\nconst initialState: IUserReadNotificationState = {\r\n    modificationState: UserReadNotificationModificationStatus.None,\r\n    selectedUserReadNotification: null,\r\n    user_readed_notifications: [],\r\n    user_not_readed_notifications: []\r\n};\r\n\r\nfunction userReadNotificationsReducer(state: IUserReadNotificationState = initialState, action: IActionBase): IUserReadNotificationState {\r\n    switch (action.type) {\r\n        case INITIAL_USER_READED_NOTIFICATION: {\r\n            return { ...state, user_readed_notifications : [...state.user_readed_notifications, action.user_read_notification]};\r\n        }\r\n        case ADD_USER_READED_NOTIFICATION: {\r\n            return { ...state, user_readed_notifications: [...state.user_readed_notifications, action.user_read_notification]};\r\n        }\r\n        case EDIT_USER_READED_NOTIFICATION: {\r\n            const foundIndex: number = state.user_readed_notifications.findIndex(pr => pr.notification_id === action.user_read_notification.notification_id);\r\n            let user_readed_notifications: IUserReadNotification[] = state.user_readed_notifications;\r\n            user_readed_notifications[foundIndex] = action.user_read_notification;\r\n            return { ...state, user_readed_notifications: user_readed_notifications };\r\n        }\r\n        case REMOVE_USER_READED_NOTIFICATION: {\r\n            return { ...state, user_readed_notifications: state.user_readed_notifications.filter(pr => pr.notification_id !== action.notification_id) };\r\n        }\r\n        case REMOVE_USER_READED_NOTIFICATION_ALL: {\r\n            return { ...state, user_readed_notifications: [] };\r\n        }\r\n        case CHANGE_USER_READED_NOTIFICATION_PENDING_EDIT: {\r\n            return { ...state, selectedUserReadNotification: action.user_read_notification };\r\n        }\r\n        case CLEAR_USER_READED_NOTIFICATION_PENDING_EDIT: {\r\n            return { ...state, selectedUserReadNotification: null };\r\n        }\r\n\r\n        case INITIAL_USER_NOT_READED_NOTIFICATION: {\r\n            return { ...state, user_not_readed_notifications : [...state.user_not_readed_notifications, action.user_read_notification]};\r\n        }\r\n        case ADD_USER_NOT_READED_NOTIFICATION: {\r\n            return { ...state, user_not_readed_notifications: [...state.user_not_readed_notifications, action.user_read_notification]};\r\n        }\r\n        case EDIT_USER_NOT_READED_NOTIFICATION: {\r\n            const foundIndex: number = state.user_not_readed_notifications.findIndex(pr => pr.notification_id === action.user_read_notification.notification_id);\r\n            let user_not_readed_notifications: IUserReadNotification[] = state.user_not_readed_notifications;\r\n            user_not_readed_notifications[foundIndex] = action.user_read_notification;\r\n            return { ...state, user_not_readed_notifications: user_not_readed_notifications };\r\n        }\r\n        case REMOVE_USER_NOT_READED_NOTIFICATION: {\r\n            return { ...state, user_not_readed_notifications: state.user_not_readed_notifications.filter(pr => pr.notification_id !== action.notification_id) };\r\n        }\r\n        case REMOVE_USER_NOT_READED_NOTIFICATION_ALL: {\r\n            return { ...state, user_not_readed_notifications: [] };\r\n        }\r\n        case CHANGE_USER_NOT_READED_NOTIFICATION_PENDING_EDIT: {\r\n            return { ...state, selectedUserReadNotification: action.user_read_notification };\r\n        }\r\n        case CLEAR_USER_NOT_READED_NOTIFICATION_PENDING_EDIT: {\r\n            return { ...state, selectedUserReadNotification: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default userReadNotificationsReducer;","export interface INotify {\r\n    idx: number;\r\n    name: string;\r\n    description: string;\r\n    time: string;\r\n}\r\n\r\nexport enum NotifyModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { INotifyState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_NOTIFY, CHANGE_NOTIFY_PENDING_EDIT, EDIT_NOTIFY, REMOVE_NOTIFY,\r\n    CLEAR_NOTIFY_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_NOTIFY, REMOVE_NOTIFY_ALL} from \"../actions/notify.action\";\r\nimport { INotify, NotifyModificationStatus } from \"../models/notify.interface\";\r\n\r\n\r\n\r\nconst initialState: INotifyState = {\r\n    modificationState: NotifyModificationStatus.None,\r\n    selectedNotify: null,\r\n    notifys: []\r\n};\r\n\r\nfunction notifysReducer(state: INotifyState = initialState, action: IActionBase): INotifyState {\r\n    switch (action.type) {\r\n        case INITIAL_NOTIFY: {\r\n            return { ...state, notifys: [...state.notifys, action.notify]};\r\n        }\r\n        case ADD_NOTIFY: {\r\n            return { ...state, notifys: [...state.notifys, action.notify]};\r\n        }\r\n        case EDIT_NOTIFY: {\r\n            const foundIndex: number = state.notifys.findIndex(pr => pr.idx === action.notify.id);\r\n            let notifys: INotify[] = state.notifys;\r\n            notifys[foundIndex] = action.notify;\r\n            return { ...state, notifys: notifys };\r\n        }\r\n        case REMOVE_NOTIFY: {\r\n            return { ...state, notifys: state.notifys.filter(pr => pr.idx !== action.id) };\r\n        }\r\n        case REMOVE_NOTIFY_ALL: {\r\n            return { ...state, notifys: [] };\r\n        }\r\n        case CHANGE_NOTIFY_PENDING_EDIT: {\r\n            return { ...state, selectedNotify: action.notify };\r\n        }\r\n        case CLEAR_NOTIFY_PENDING_EDIT: {\r\n            return { ...state, selectedNotify: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default notifysReducer;","import { IClassesStudentState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_DOING_CLASS, CHANGE_DOING_CLASS_PENDING_EDIT, EDIT_DOING_CLASS, REMOVE_DOING_CLASS,\r\n    CLEAR_DOING_CLASS_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_DOING_CLASS, REMOVE_DOING_CLASS_ALL, INITIAL_DONE_CLASS, ADD_DONE_CLASS, EDIT_DONE_CLASS, REMOVE_DONE_CLASS, REMOVE_DONE_CLASS_ALL, CHANGE_DONE_CLASS_PENDING_EDIT, CLEAR_DONE_CLASS_PENDING_EDIT} from \"../actions/classes_student.action\";\r\nimport { IClassesStudent, ClassesStudentModificationStatus } from \"../models/classes_student.interface\";\r\n\r\n\r\n\r\nconst initialState: IClassesStudentState = {\r\n    modificationState: ClassesStudentModificationStatus.None,\r\n    selectedClassesStudent: null,\r\n    classes_doing: [],\r\n    classes_done: []\r\n};\r\n\r\nfunction classesStudentsReducer(state: IClassesStudentState = initialState, action: IActionBase): IClassesStudentState {\r\n    switch (action.type) {\r\n        case INITIAL_DOING_CLASS: {\r\n            return { ...state, classes_doing : [...state.classes_doing, action.classes_student]};\r\n        }\r\n        case ADD_DOING_CLASS: {\r\n            return { ...state, classes_doing: [...state.classes_doing, action.classes_student]};\r\n        }\r\n        case EDIT_DOING_CLASS: {\r\n            const foundIndex: number = state.classes_doing.findIndex(pr => pr.id === action.classes_student.id);\r\n            let classes_doing: IClassesStudent[] = state.classes_doing;\r\n            classes_doing[foundIndex] = action.classes_student;\r\n            return { ...state, classes_doing: classes_doing };\r\n        }\r\n        case REMOVE_DOING_CLASS: {\r\n            return { ...state, classes_doing: state.classes_doing.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DOING_CLASS_ALL: {\r\n            return { ...state, classes_doing: [] };\r\n        }\r\n        case CHANGE_DOING_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesStudent: action.classes_student };\r\n        }\r\n        case CLEAR_DOING_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesStudent: null };\r\n        }\r\n\r\n        case INITIAL_DONE_CLASS: {\r\n            return { ...state, classes_done : [...state.classes_done, action.classes_student]};\r\n        }\r\n        case ADD_DONE_CLASS: {\r\n            return { ...state, classes_done: [...state.classes_done, action.classes_student]};\r\n        }\r\n        case EDIT_DONE_CLASS: {\r\n            const foundIndex: number = state.classes_done.findIndex(pr => pr.id === action.classes_student.id);\r\n            let classes_done: IClassesStudent[] = state.classes_done;\r\n            classes_done[foundIndex] = action.classes_student;\r\n            return { ...state, classes_done: classes_done };\r\n        }\r\n        case REMOVE_DONE_CLASS: {\r\n            return { ...state, classes_done: state.classes_done.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DONE_CLASS_ALL: {\r\n            return { ...state, classes_done: [] };\r\n        }\r\n        case CHANGE_DONE_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesStudent: action.classes_student };\r\n        }\r\n        case CLEAR_DONE_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesStudent: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default classesStudentsReducer;","import { IClassesParentState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_DOING_CLASS, CHANGE_DOING_CLASS_PENDING_EDIT, EDIT_DOING_CLASS, REMOVE_DOING_CLASS,\r\n    CLEAR_DOING_CLASS_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_DOING_CLASS, REMOVE_DOING_CLASS_ALL, INITIAL_DONE_CLASS, ADD_DONE_CLASS, EDIT_DONE_CLASS, REMOVE_DONE_CLASS, REMOVE_DONE_CLASS_ALL, CHANGE_DONE_CLASS_PENDING_EDIT, CLEAR_DONE_CLASS_PENDING_EDIT} from \"../actions/classes_parent.action\";\r\nimport { IClassesParent, ClassesParentModificationStatus } from \"../models/classes_parent.interface\";\r\n\r\n\r\n\r\nconst initialState: IClassesParentState = {\r\n    modificationState: ClassesParentModificationStatus.None,\r\n    selectedClassesParent: null,\r\n    classes_doing: [],\r\n    classes_done: []\r\n};\r\n\r\nfunction classesParentsReducer(state: IClassesParentState = initialState, action: IActionBase): IClassesParentState {\r\n    switch (action.type) {\r\n        case INITIAL_DOING_CLASS: {\r\n            return { ...state, classes_doing : [...state.classes_doing, action.classes_parent]};\r\n        }\r\n        case ADD_DOING_CLASS: {\r\n            return { ...state, classes_doing: [...state.classes_doing, action.classes_parent]};\r\n        }\r\n        case EDIT_DOING_CLASS: {\r\n            const foundIndex: number = state.classes_doing.findIndex(pr => pr.id === action.classes_parent.id);\r\n            let classes_doing: IClassesParent[] = state.classes_doing;\r\n            classes_doing[foundIndex] = action.classes_parent;\r\n            return { ...state, classes_doing: classes_doing };\r\n        }\r\n        case REMOVE_DOING_CLASS: {\r\n            return { ...state, classes_doing: state.classes_doing.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DOING_CLASS_ALL: {\r\n            return { ...state, classes_doing: [] };\r\n        }\r\n        case CHANGE_DOING_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesParent: action.classes_parent };\r\n        }\r\n        case CLEAR_DOING_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesParent: null };\r\n        }\r\n\r\n        case INITIAL_DONE_CLASS: {\r\n            return { ...state, classes_done : [...state.classes_done, action.classes_parent]};\r\n        }\r\n        case ADD_DONE_CLASS: {\r\n            return { ...state, classes_done: [...state.classes_done, action.classes_parent]};\r\n        }\r\n        case EDIT_DONE_CLASS: {\r\n            const foundIndex: number = state.classes_done.findIndex(pr => pr.id === action.classes_parent.id);\r\n            let classes_done: IClassesParent[] = state.classes_done;\r\n            classes_done[foundIndex] = action.classes_parent;\r\n            return { ...state, classes_done: classes_done };\r\n        }\r\n        case REMOVE_DONE_CLASS: {\r\n            return { ...state, classes_done: state.classes_done.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DONE_CLASS_ALL: {\r\n            return { ...state, classes_done: [] };\r\n        }\r\n        case CHANGE_DONE_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesParent: action.classes_parent };\r\n        }\r\n        case CLEAR_DONE_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesParent: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default classesParentsReducer;","export interface ICourseParent {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    creator_id: number;\r\n    art_type_id: number;\r\n    art_type_name: string;\r\n    art_level_id: number;\r\n    art_level_name: string;\r\n    art_age_id: number;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum CourseParentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICourseParentState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_DOING_COURSE, CHANGE_DOING_COURSE_PENDING_EDIT, EDIT_DOING_COURSE, REMOVE_DOING_COURSE,\r\n    CLEAR_DOING_COURSE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_DOING_COURSE, REMOVE_DOING_COURSE_ALL, INITIAL_DONE_COURSE, ADD_DONE_COURSE, EDIT_DONE_COURSE, REMOVE_DONE_COURSE, REMOVE_DONE_COURSE_ALL, CHANGE_DONE_COURSE_PENDING_EDIT, CLEAR_DONE_COURSE_PENDING_EDIT} from \"../actions/course_parent.action\";\r\nimport { ICourseParent, CourseParentModificationStatus } from \"../models/course_parent.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseParentState = {\r\n    modificationState: CourseParentModificationStatus.None,\r\n    selectedCourseParent: null,\r\n    courses_registed: [],\r\n    courses_not_registed_now: []\r\n};\r\n\r\nfunction courseParentsReducer(state: ICourseParentState = initialState, action: IActionBase): ICourseParentState {\r\n    switch (action.type) {\r\n        case INITIAL_DOING_COURSE: {\r\n            return { ...state, courses_not_registed_now : [...state.courses_not_registed_now, action.course_parent]};\r\n        }\r\n        case ADD_DOING_COURSE: {\r\n            return { ...state, courses_not_registed_now: [...state.courses_not_registed_now, action.course_parent]};\r\n        }\r\n        case EDIT_DOING_COURSE: {\r\n            const foundIndex: number = state.courses_not_registed_now.findIndex(pr => pr.id === action.course_parent.id);\r\n            let courses_not_registed_now: ICourseParent[] = state.courses_not_registed_now;\r\n            courses_not_registed_now[foundIndex] = action.course_parent;\r\n            return { ...state, courses_not_registed_now: courses_not_registed_now };\r\n        }\r\n        case REMOVE_DOING_COURSE: {\r\n            return { ...state, courses_not_registed_now: state.courses_not_registed_now.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DOING_COURSE_ALL: {\r\n            return { ...state, courses_not_registed_now: [] };\r\n        }\r\n        case CHANGE_DOING_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseParent: action.course_parent };\r\n        }\r\n        case CLEAR_DOING_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseParent: null };\r\n        }\r\n\r\n        case INITIAL_DONE_COURSE: {\r\n            return { ...state, courses_registed : [...state.courses_registed, action.course_parent]};\r\n        }\r\n        case ADD_DONE_COURSE: {\r\n            return { ...state, courses_registed: [...state.courses_registed, action.course_parent]};\r\n        }\r\n        case EDIT_DONE_COURSE: {\r\n            const foundIndex: number = state.courses_registed.findIndex(pr => pr.id === action.course_parent.id);\r\n            let courses_registed: ICourseParent[] = state.courses_not_registed_now;\r\n            courses_registed[foundIndex] = action.course_parent;\r\n            return { ...state, courses_registed: courses_registed };\r\n        }\r\n        case REMOVE_DONE_COURSE: {\r\n            return { ...state, courses_registed: state.courses_registed.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DONE_COURSE_ALL: {\r\n            return { ...state, courses_registed: [] };\r\n        }\r\n        case CHANGE_DONE_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseParent: action.course_parent };\r\n        }\r\n        case CLEAR_DONE_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseParent: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default courseParentsReducer;","export interface IContestStudent{\r\n    id: any;\r\n    name: string;\r\n    student_id: number;\r\n    student_name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    total_contest_submission: number;\r\n    total_contest_submission_graded: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    creator_id: number;\r\n    art_type_id: number;\r\n    art_age_id: number;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ContestStudentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IContestStudentState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CONTEST_STUDENT_OPENING, CHANGE_CONTEST_STUDENT_OPENING_PENDING_EDIT, EDIT_CONTEST_STUDENT_OPENING, REMOVE_CONTEST_STUDENT_OPENING,\r\n    CLEAR_CONTEST_STUDENT_OPENING_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_CONTEST_STUDENT_OPENING, REMOVE_CONTEST_STUDENT_OPENING_ALL, INITIAL_CONTEST_STUDENT_NEW, ADD_CONTEST_STUDENT_NEW, EDIT_CONTEST_STUDENT_NEW, REMOVE_CONTEST_STUDENT_NEW, REMOVE_CONTEST_STUDENT_NEW_ALL, CHANGE_CONTEST_STUDENT_NEW_PENDING_EDIT, CLEAR_CONTEST_STUDENT_NEW_PENDING_EDIT, INITIAL_CONTEST_STUDENT_END, EDIT_CONTEST_STUDENT_END, ADD_CONTEST_STUDENT_END, REMOVE_CONTEST_STUDENT_END, REMOVE_CONTEST_STUDENT_END_ALL, CHANGE_CONTEST_STUDENT_END_PENDING_EDIT, CLEAR_CONTEST_STUDENT_END_PENDING_EDIT, INITIAL_CONTEST_STUDENT_NOT_OPEN_NOW, ADD_CONTEST_STUDENT_NOT_OPEN_NOW, EDIT_CONTEST_STUDENT_NOT_OPEN_NOW, REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW, REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW_ALL, CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT, CLEAR_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT} from \"../actions/contest_student.action\";\r\nimport { IContestStudent, ContestStudentModificationStatus } from \"../models/contest_student.interface\";\r\n\r\n\r\n\r\nconst initialState: IContestStudentState = {\r\n    modificationState: ContestStudentModificationStatus.None,\r\n    selectedContestStudent: null,\r\n    contest_opening: [],\r\n    contest_not_open_now: [],\r\n    contest_end: [],\r\n    contest_new: []\r\n};\r\n\r\nfunction contestStudentsReducer(state: IContestStudentState = initialState, action: IActionBase): IContestStudentState {\r\n    switch (action.type) {\r\n        case INITIAL_CONTEST_STUDENT_OPENING: {\r\n            return { ...state, contest_opening : [...state.contest_opening, action.contest]};\r\n        }\r\n        case ADD_CONTEST_STUDENT_OPENING: {\r\n            return { ...state, contest_opening: [...state.contest_opening, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_STUDENT_OPENING: {\r\n            const foundIndex: number = state.contest_opening.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_opening: IContestStudent[] = state.contest_opening;\r\n            contest_opening[foundIndex] = action.contest;\r\n            return { ...state, contest_opening: contest_opening };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_OPENING: {\r\n            return { ...state, contest_opening: state.contest_opening.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_OPENING_ALL: {\r\n            return { ...state, contest_opening: [] };\r\n        }\r\n        case CHANGE_CONTEST_STUDENT_OPENING_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_STUDENT_OPENING_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: null };\r\n        }\r\n\r\n\r\n        case INITIAL_CONTEST_STUDENT_END: {\r\n            return { ...state, contest_end : [...state.contest_end, action.contest]};\r\n        }\r\n        case ADD_CONTEST_STUDENT_END: {\r\n            return { ...state, contest_end: [...state.contest_end, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_STUDENT_END: {\r\n            const foundIndex: number = state.contest_end.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_end: IContestStudent[] = state.contest_end;\r\n            contest_end[foundIndex] = action.contest;\r\n            return { ...state, contest_end: contest_end };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_END: {\r\n            return { ...state, contest_end: state.contest_end.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_END_ALL: {\r\n            return { ...state, contest_end: [] };\r\n        }\r\n        case CHANGE_CONTEST_STUDENT_END_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_STUDENT_END_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: null };\r\n        }\r\n\r\n\r\n\r\n        case INITIAL_CONTEST_STUDENT_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now : [...state.contest_not_open_now, action.contest]};\r\n        }\r\n        case ADD_CONTEST_STUDENT_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now: [...state.contest_not_open_now, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_STUDENT_NOT_OPEN_NOW: {\r\n            const foundIndex: number = state.contest_not_open_now.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_not_open_now: IContestStudent[] = state.contest_not_open_now;\r\n            contest_not_open_now[foundIndex] = action.contest;\r\n            return { ...state, contest_not_open_now: contest_not_open_now };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now: state.contest_not_open_now.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW_ALL: {\r\n            return { ...state, contest_not_open_now: [] };\r\n        }\r\n        case CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: null };\r\n        }\r\n\r\n\r\n\r\n        case INITIAL_CONTEST_STUDENT_NEW: {\r\n            return { ...state, contest_new : [...state.contest_new, action.contest]};\r\n        }\r\n        case ADD_CONTEST_STUDENT_NEW: {\r\n            return { ...state, contest_new: [...state.contest_new, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_STUDENT_NEW: {\r\n            const foundIndex: number = state.contest_new.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_new: IContestStudent[] = state.contest_new;\r\n            contest_new[foundIndex] = action.contest;\r\n            return { ...state, contest_new: contest_new };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_NEW: {\r\n            return { ...state, contest_new: state.contest_new.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_NEW_ALL: {\r\n            return { ...state, contest_new: [] };\r\n        }\r\n        case CHANGE_CONTEST_STUDENT_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_STUDENT_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default contestStudentsReducer;","export interface ICart {\r\n    id: any;\r\n    name: string;\r\n    image: string;\r\n    student_id: number;\r\n    student_name: string;\r\n    price: number;\r\n    quantity: number;\r\n}\r\n\r\nexport enum CartModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICartState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CART, CHANGE_CART_PENDING_EDIT, EDIT_CART, REMOVE_CART,\r\n    CLEAR_CART_PENDING_EDIT, SET_MODIFICATION_STATE, INCREASE_QUANTITY, DECREASE_QUANTITY} from \"../actions/cart.action\";\r\nimport { ICart, CartModificationStatus } from \"../models/cart.interface\";\r\n\r\n\r\n\r\nconst initialState: ICartState = {\r\n    modificationState: CartModificationStatus.None,\r\n    selectedCart: null,\r\n    carts: []\r\n};\r\n\r\nfunction cartReducer(state: ICartState = initialState, action: IActionBase): ICartState {\r\n    switch (action.type) {\r\n        case ADD_CART: {\r\n            return { ...state, carts: [...state.carts, action.cart]};\r\n        }\r\n        case EDIT_CART: {\r\n            const foundIndex: number = state.carts.findIndex(pr => pr.id === action.cart.id);\r\n            let cart: ICart[] = state.carts;\r\n            cart[foundIndex] = action.cart;\r\n            return { ...state, carts: cart };\r\n        }\r\n        case REMOVE_CART: {\r\n            return { ...state, carts: state.carts.filter(pr => pr.id !== action.id) };\r\n        }\r\n        \r\n        case INCREASE_QUANTITY: {\r\n            const foundIndex: number = state.carts.findIndex(pr => pr.id === action.id);\r\n            let cart: ICart[] = state.carts;\r\n            cart[foundIndex].quantity += 1;\r\n            return { ...state, carts: cart };\r\n        }\r\n\r\n        case DECREASE_QUANTITY: {\r\n            const foundIndex: number = state.carts.findIndex(pr => pr.id === action.id);\r\n            let cart: ICart[] = state.carts;\r\n            cart[foundIndex].quantity -= 1;\r\n            return { ...state, carts: cart };\r\n        }\r\n\r\n        case CHANGE_CART_PENDING_EDIT: {\r\n            return { ...state, selectedCart: action.cart };\r\n        }\r\n        case CLEAR_CART_PENDING_EDIT: {\r\n            return { ...state, selectedCart: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default cartReducer;","export interface IAttendance {\r\n    id: any;\r\n    student_id: number;\r\n    section_id: number;\r\n    status: string;\r\n    section_number: number;\r\n    email: string;\r\n    course_name: string;\r\n    course_id: number;\r\n    student_name: string;\r\n    section_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum AttendanceModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IAttendanceState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_ATTENDANCE, CHANGE_ATTENDANCE_PENDING_EDIT, EDIT_ATTENDANCE, REMOVE_ATTENDANCE,\r\n    CLEAR_ATTENDANCE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_ATTENDANCE, REMOVE_ATTENDANCE_ALL} from \"../actions/attendance.action\";\r\nimport { IAttendance, AttendanceModificationStatus } from \"../models/attendance.interface\";\r\n\r\n\r\n\r\nconst initialState: IAttendanceState = {\r\n    modificationState: AttendanceModificationStatus.None,\r\n    selectedAttendance: null,\r\n    attendances: []\r\n};\r\n\r\nfunction attendancesReducer(state: IAttendanceState = initialState, action: IActionBase): IAttendanceState {\r\n    switch (action.type) {\r\n        case INITIAL_ATTENDANCE: {\r\n            return { ...state, attendances : [...state.attendances, action.attendance]};\r\n        }\r\n        case ADD_ATTENDANCE: {\r\n            return { ...state, attendances: [...state.attendances, action.attendance]};\r\n        }\r\n        case EDIT_ATTENDANCE: {\r\n            const foundIndex: number = state.attendances.findIndex(pr => pr.id === action.attendance.id);\r\n            let attendances: IAttendance[] = state.attendances;\r\n            attendances[foundIndex] = action.attendance;\r\n            return { ...state, attendances: attendances };\r\n        }\r\n        case REMOVE_ATTENDANCE: {\r\n            return { ...state, attendances: state.attendances.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_ATTENDANCE_ALL: {\r\n            return { ...state, attendances: [] };\r\n        }\r\n        case CHANGE_ATTENDANCE_PENDING_EDIT: {\r\n            return { ...state, selectedAttendance: action.attendance };\r\n        }\r\n        case CLEAR_ATTENDANCE_PENDING_EDIT: {\r\n            return { ...state, selectedAttendance: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default attendancesReducer;","export interface IProfile {\r\n    id: any;\r\n    profile_image_url: string;\r\n}\r\n\r\nexport enum ProfileModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2\r\n}","import { IProfileState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_PROFILE, CHANGE_PROFILE_PENDING_EDIT, EDIT_PROFILE, REMOVE_PROFILE,\r\n    CLEAR_PROFILE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_PROFILE, REMOVE_PROFILE_ALL} from \"../actions/profile.action\";\r\nimport { IProfile, ProfileModificationStatus } from \"../models/profile.interface\";\r\n\r\n\r\n\r\nconst initialState: IProfileState = {\r\n    modificationState: ProfileModificationStatus.None,\r\n    selectedProfile: null,\r\n    profiles: []\r\n};\r\n\r\nfunction profilesReducer(state: IProfileState = initialState, action: IActionBase): IProfileState {\r\n    switch (action.type) {\r\n        case INITIAL_PROFILE: {\r\n            return { ...state, profiles : [...state.profiles, action.profile]};\r\n        }\r\n        case ADD_PROFILE: {\r\n            return { ...state, profiles: [...state.profiles, action.profile]};\r\n        }\r\n        case EDIT_PROFILE: {\r\n            const foundIndex: number = state.profiles.findIndex(pr => pr.id === action.profile.id);\r\n            let profiles: IProfile[] = state.profiles;\r\n            profiles[foundIndex] = action.profile;\r\n            return { ...state, profiles: profiles };\r\n        }\r\n        case REMOVE_PROFILE: {\r\n            return { ...state, profiles: state.profiles.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_PROFILE_ALL: {\r\n            return { ...state, profiles: [] };\r\n        }\r\n        case CHANGE_PROFILE_PENDING_EDIT: {\r\n            return { ...state, selectedProfile: action.profile };\r\n        }\r\n        case CLEAR_PROFILE_PENDING_EDIT: {\r\n            return { ...state, selectedProfile: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default profilesReducer;","export interface IUserRegisterJoinSemester {\r\n    id: any;\r\n    student_id: number;\r\n    semester_class_id: number;\r\n    student_name: string;\r\n    link_url: string;\r\n    status: string;\r\n    payer_id: number;\r\n    payer_name: string;\r\n    course_name: string;\r\n    price: number;\r\n    time: string;\r\n}\r\n\r\nexport enum UserRegisterJoinSemesterModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IUserRegisterJoinSemesterState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_COMPLETED, CHANGE_COMPLETED_PENDING_EDIT, EDIT_COMPLETED, REMOVE_COMPLETED,\r\n    CLEAR_COMPLETED_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_COMPLETED, REMOVE_COMPLETED_ALL, INITIAL_WAITING, ADD_WAITING, EDIT_WAITING, REMOVE_WAITING, REMOVE_WAITING_ALL, CHANGE_WAITING_PENDING_EDIT, CLEAR_WAITING_PENDING_EDIT} from \"../actions/user_register_join_semester.action\";\r\nimport { IUserRegisterJoinSemester, UserRegisterJoinSemesterModificationStatus } from \"../models/user_register_join_semester.interface\";\r\n\r\n\r\n\r\nconst initialState: IUserRegisterJoinSemesterState = {\r\n    modificationState: UserRegisterJoinSemesterModificationStatus.None,\r\n    selectedUserRegisterJoinSemester: null,\r\n    completed: [],\r\n    waiting: []\r\n};\r\n\r\nfunction user_register_join_semestersReducer(state: IUserRegisterJoinSemesterState = initialState, action: IActionBase): IUserRegisterJoinSemesterState {\r\n    switch (action.type) {\r\n        case INITIAL_COMPLETED: {\r\n            return { ...state, completed : [...state.completed, action.user_register_join_semester]};\r\n        }\r\n        case ADD_COMPLETED: {\r\n            return { ...state, completed: [...state.completed, action.user_register_join_semester]};\r\n        }\r\n        case EDIT_COMPLETED: {\r\n            const foundIndex: number = state.completed.findIndex(pr => pr.id === action.user_register_join_semester.id);\r\n            let completed: IUserRegisterJoinSemester[] = state.completed;\r\n            completed[foundIndex] = action.user_register_join_semester;\r\n            return { ...state, completed: completed };\r\n        }\r\n        case REMOVE_COMPLETED: {\r\n            return { ...state, completed: state.completed.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_COMPLETED_ALL: {\r\n            return { ...state, completed: [] };\r\n        }\r\n        case CHANGE_COMPLETED_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterJoinSemester: action.user_register_join_semester };\r\n        }\r\n        case CLEAR_COMPLETED_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterJoinSemester: null };\r\n        }\r\n\r\n        case INITIAL_WAITING: {\r\n            return { ...state, waiting : [...state.waiting, action.user_register_join_semester]};\r\n        }\r\n        case ADD_WAITING: {\r\n            return { ...state, waiting: [...state.waiting, action.user_register_join_semester]};\r\n        }\r\n        case EDIT_WAITING: {\r\n            const foundIndex: number = state.waiting.findIndex(pr => pr.id === action.user_register_join_semester.id);\r\n            let waiting: IUserRegisterJoinSemester[] = state.waiting;\r\n            waiting[foundIndex] = action.user_register_join_semester;\r\n            return { ...state, waiting: waiting };\r\n        }\r\n        case REMOVE_WAITING: {\r\n            return { ...state, waiting: state.waiting.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_WAITING_ALL: {\r\n            return { ...state, waiting: [] };\r\n        }\r\n        case CHANGE_WAITING_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterJoinSemester: action.user_register_join_semester };\r\n        }\r\n        case CLEAR_WAITING_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterJoinSemester: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default user_register_join_semestersReducer;","export interface ICourseStudent {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    creator_id: number;\r\n    art_type_id: number;\r\n    art_type_name: string;\r\n    art_level_id: number;\r\n    art_level_name: string;\r\n    art_age_id: number;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum CourseStudentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICourseStudent, CourseStudentModificationStatus } from \"../models/course_student.interface\";\r\n\r\n// register_successfull_course_students\r\nexport const ADD_DOING_COURSE: string = \"ADD_DOING_COURSE\";\r\nexport const EDIT_DOING_COURSE: string = \"EDIT_DOING_COURSE\";\r\nexport const REMOVE_DOING_COURSE: string = \"REMOVE_DOING_COURSE\";\r\nexport const CHANGE_DOING_COURSE_AMOUNT: string = \"CHANGE_DOING_COURSE_AMOUNT\";\r\nexport const CHANGE_DOING_COURSE_PENDING_EDIT: string = \"CHANGE_DOING_COURSE_PENDING_EDIT\";\r\nexport const CLEAR_DOING_COURSE_PENDING_EDIT: string = \"CLEAR_DOING_COURSE_PENDING_EDIT\";\r\nexport const REMOVE_DOING_COURSE_ALL: string = \"REMOVE_DOING_COURSE_ALL\";\r\nexport const INITIAL_DOING_COURSE: string = \"INITIAL_DOING_COURSE\";\r\n\r\n// not_register_course_students\r\nexport const ADD_DONE_COURSE: string = \"ADD_DONE_COURSE\";\r\nexport const EDIT_DONE_COURSE: string = \"EDIT_DONE_COURSE\";\r\nexport const REMOVE_DONE_COURSE: string = \"REMOVE_DONE_COURSE\";\r\nexport const CHANGE_DONE_COURSE_AMOUNT: string = \"CHANGE_DONE_COURSE_AMOUNT\";\r\nexport const CHANGE_DONE_COURSE_PENDING_EDIT: string = \"CHANGE_DONE_COURSE_PENDING_EDIT\";\r\nexport const CLEAR_DONE_COURSE_PENDING_EDIT: string = \"CLEAR_DONE_COURSE_PENDING_EDIT\";\r\nexport const REMOVE_DONE_COURSE_ALL: string = \"REMOVE_DONE_COURSE_ALL\";\r\nexport const INITIAL_DONE_COURSE: string = \"INITIAL_DONE_COURSE\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course_student: ICourseStudent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course_student\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCourseNotRegistedNow(course_student: ICourseStudent): IInitialCourseNotRegistedNowActionType {\r\n    return { type: INITIAL_DOING_COURSE, course_student: course_student };\r\n}\r\n\r\nexport function removeCourseNotRegistedNowAll(): IRemoveCourseNotRegistedNowAllActionType {\r\n    return { type: REMOVE_DOING_COURSE_ALL };\r\n}\r\n\r\nexport function addCourseNotRegistedNow(course_student: ICourseStudent): IAddCourseNotRegistedNowActionType {\r\n    return { type: ADD_DOING_COURSE, course_student: course_student };\r\n}\r\n\r\nexport function editCourseNotRegistedNow(course_student: ICourseStudent): IEditCourseNotRegistedNowActionType {\r\n    return { type: EDIT_DOING_COURSE, course_student: course_student };\r\n}\r\n\r\nexport function removeCourseNotRegistedNow(id: any): IRemoveCourseNotRegistedNowActionType {\r\n    return { type: REMOVE_DOING_COURSE, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseNotRegistedNow(course_student: ICourseStudent): IChangeSelectedCourseNotRegistedNowActionType {\r\n    return { type: CHANGE_DOING_COURSE_PENDING_EDIT, course_student: course_student };\r\n}\r\n\r\nexport function clearSelectedCourseNotRegistedNow(): IClearSelectedCourseNotRegistedNowActionType {\r\n    return { type: CLEAR_DOING_COURSE_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialCourseRegisted(course_student: ICourseStudent): IInitialCourseRegistedActionType {\r\n    return { type: INITIAL_DONE_COURSE, course_student: course_student };\r\n}\r\n\r\nexport function removeCourseRegistedAll(): IRemoveCourseRegistedAllActionType {\r\n    return { type: REMOVE_DONE_COURSE_ALL };\r\n}\r\n\r\nexport function addCourseRegisted(course_student: ICourseStudent): IAddCourseRegistedActionType {\r\n    return { type: ADD_DONE_COURSE, course_student: course_student };\r\n}\r\n\r\nexport function editCourseRegisted(course_student: ICourseStudent): IEditCourseRegistedActionType {\r\n    return { type: EDIT_DONE_COURSE, course_student: course_student };\r\n}\r\n\r\nexport function removeCourseRegisted(id: any): IRemoveCourseRegistedActionType {\r\n    return { type: REMOVE_DONE_COURSE, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseRegisted(course_student: ICourseStudent): IChangeSelectedCourseRegistedActionType {\r\n    return { type: CHANGE_DONE_COURSE_PENDING_EDIT, course_student: course_student };\r\n}\r\n\r\nexport function clearSelectedCourseRegisted(): IClearSelectedCourseRegistedActionType {\r\n    return { type: CLEAR_DONE_COURSE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseStudentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_course_students\r\ninterface IAddCourseNotRegistedNowActionType { type: string, course_student: ICourseStudent };\r\ninterface IEditCourseNotRegistedNowActionType { type: string, course_student: ICourseStudent };\r\ninterface IRemoveCourseNotRegistedNowActionType { type: string, id: any };\r\ninterface IChangeSelectedCourseNotRegistedNowActionType { type: string, course_student: ICourseStudent };\r\ninterface IClearSelectedCourseNotRegistedNowActionType { type: string };\r\ninterface IRemoveCourseNotRegistedNowAllActionType { type: string }\r\ninterface IInitialCourseNotRegistedNowActionType {type: string, course_student: ICourseStudent}\r\n\r\n// not_register_course_students\r\ninterface IAddCourseRegistedActionType { type: string, course_student: ICourseStudent };\r\ninterface IEditCourseRegistedActionType { type: string, course_student: ICourseStudent };\r\ninterface IRemoveCourseRegistedActionType { type: string, id: any };\r\ninterface IChangeSelectedCourseRegistedActionType { type: string, course_student: ICourseStudent };\r\ninterface IClearSelectedCourseRegistedActionType { type: string };\r\ninterface IRemoveCourseRegistedAllActionType { type: string }\r\ninterface IInitialCourseRegistedActionType {type: string, course_student: ICourseStudent}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  CourseStudentModificationStatus};","import { ICourseStudentState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_DOING_COURSE, CHANGE_DOING_COURSE_PENDING_EDIT, EDIT_DOING_COURSE, REMOVE_DOING_COURSE,\r\n    CLEAR_DOING_COURSE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_DOING_COURSE, REMOVE_DOING_COURSE_ALL, INITIAL_DONE_COURSE, ADD_DONE_COURSE, EDIT_DONE_COURSE, REMOVE_DONE_COURSE, REMOVE_DONE_COURSE_ALL, CHANGE_DONE_COURSE_PENDING_EDIT, CLEAR_DONE_COURSE_PENDING_EDIT} from \"../actions/course_student.action\";\r\nimport { ICourseStudent, CourseStudentModificationStatus } from \"../models/course_student.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseStudentState = {\r\n    modificationState: CourseStudentModificationStatus.None,\r\n    selectedCourseStudent: null,\r\n    courses_registed: [],\r\n    courses_not_registed_now: []\r\n};\r\n\r\nfunction courseStudentsReducer(state: ICourseStudentState = initialState, action: IActionBase): ICourseStudentState {\r\n    switch (action.type) {\r\n        case INITIAL_DOING_COURSE: {\r\n            return { ...state, courses_not_registed_now : [...state.courses_not_registed_now, action.course_student]};\r\n        }\r\n        case ADD_DOING_COURSE: {\r\n            return { ...state, courses_not_registed_now: [...state.courses_not_registed_now, action.course_student]};\r\n        }\r\n        case EDIT_DOING_COURSE: {\r\n            const foundIndex: number = state.courses_not_registed_now.findIndex(pr => pr.id === action.course_student.id);\r\n            let courses_not_registed_now: ICourseStudent[] = state.courses_not_registed_now;\r\n            courses_not_registed_now[foundIndex] = action.course_student;\r\n            return { ...state, courses_not_registed_now: courses_not_registed_now };\r\n        }\r\n        case REMOVE_DOING_COURSE: {\r\n            return { ...state, courses_not_registed_now: state.courses_not_registed_now.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DOING_COURSE_ALL: {\r\n            return { ...state, courses_not_registed_now: [] };\r\n        }\r\n        case CHANGE_DOING_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseStudent: action.course_student };\r\n        }\r\n        case CLEAR_DOING_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseStudent: null };\r\n        }\r\n\r\n        case INITIAL_DONE_COURSE: {\r\n            return { ...state, courses_registed : [...state.courses_registed, action.course_student]};\r\n        }\r\n        case ADD_DONE_COURSE: {\r\n            return { ...state, courses_registed: [...state.courses_registed, action.course_student]};\r\n        }\r\n        case EDIT_DONE_COURSE: {\r\n            const foundIndex: number = state.courses_registed.findIndex(pr => pr.id === action.course_student.id);\r\n            let courses_registed: ICourseStudent[] = state.courses_not_registed_now;\r\n            courses_registed[foundIndex] = action.course_student;\r\n            return { ...state, courses_registed: courses_registed };\r\n        }\r\n        case REMOVE_DONE_COURSE: {\r\n            return { ...state, courses_registed: state.courses_registed.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DONE_COURSE_ALL: {\r\n            return { ...state, courses_registed: [] };\r\n        }\r\n        case CHANGE_DONE_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseStudent: action.course_student };\r\n        }\r\n        case CLEAR_DONE_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseStudent: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default courseStudentsReducer;","export interface ICourseNew {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    creator_id: number;\r\n    art_type_id: number;\r\n    art_level_id: number;\r\n    art_age_id: number;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    total: number;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum CourseNewModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICourseNewState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_COURSE_NEW, CHANGE_COURSE_NEW_PENDING_EDIT, EDIT_COURSE_NEW, REMOVE_COURSE_NEW,\r\n    CLEAR_COURSE_NEW_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_COURSE_NEW, REMOVE_COURSE_NEW_ALL} from \"../actions/course_new.action\";\r\nimport { ICourseNew, CourseNewModificationStatus } from \"../models/course_new.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseNewState = {\r\n    modificationState: CourseNewModificationStatus.None,\r\n    selectedCourseNew: null,\r\n    course_news: []\r\n};\r\n\r\nfunction course_newsReducer(state: ICourseNewState = initialState, action: IActionBase): ICourseNewState {\r\n    switch (action.type) {\r\n        case INITIAL_COURSE_NEW: {\r\n            return { ...state, course_news : [...state.course_news, action.course_new]};\r\n        }\r\n        case ADD_COURSE_NEW: {\r\n            return { ...state, course_news: [...state.course_news, action.course_new]};\r\n        }\r\n        case EDIT_COURSE_NEW: {\r\n            const foundIndex: number = state.course_news.findIndex(pr => pr.id === action.course_new.id);\r\n            let course_news: ICourseNew[] = state.course_news;\r\n            course_news[foundIndex] = action.course_new;\r\n            return { ...state, course_news: course_news };\r\n        }\r\n        case REMOVE_COURSE_NEW: {\r\n            return { ...state, course_news: state.course_news.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_COURSE_NEW_ALL: {\r\n            return { ...state, course_news: [] };\r\n        }\r\n        case CHANGE_COURSE_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedCourseNew: action.course_new };\r\n        }\r\n        case CLEAR_COURSE_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedCourseNew: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default course_newsReducer;","export interface ISemesterClassStudent {\r\n    id: any;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: number;\r\n    semester_class_id: number;\r\n    start_date: string;\r\n    registration_expiration_time: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    semester_name: string;\r\n    semester_id: number;\r\n    status: string;\r\n    image_url: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n    registration_deadline: string;\r\n}\r\n\r\nexport enum SemesterClassStudentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ISemesterClassStudentState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_NOT_PAYED_NOW, EDIT_NOT_PAYED_NOW, REMOVE_NOT_PAYED_NOW,INITIAL_NOT_PAYED_NOW, REMOVE_NOT_PAYED_NOW_ALL, \r\n    ADD_PAYED, EDIT_PAYED, REMOVE_PAYED, INITIAL_PAYED, REMOVE_PAYED_ALL, \r\n    ADD_NOT_PAYED, EDIT_NOT_PAYED, REMOVE_NOT_PAYED , INITIAL_NOT_PAYED, REMOVE_NOT_PAYED_ALL,\r\n    CLEAR_NOT_PAYED_NOW_PENDING_EDIT, CHANGE_NOT_PAYED_NOW_PENDING_EDIT, SET_MODIFICATION_STATE\r\n\r\n} from \"../actions/semester_class_student.action\";\r\nimport { ISemesterClassStudent, SemesterClassStudentModificationStatus } from \"../models/semester_class_student.interface\";\r\n\r\nconst initialState: ISemesterClassStudentState = {\r\n    modificationState: SemesterClassStudentModificationStatus.None,\r\n    selectedSemesterClassStudent: null,\r\n    not_payed_now: [],\r\n    payed: [],\r\n    not_payed: []\r\n};\r\n\r\nfunction semesterClassStudentReducer(state: ISemesterClassStudentState = initialState, action: IActionBase): ISemesterClassStudentState {\r\n    switch (action.type) {\r\n        case INITIAL_NOT_PAYED_NOW: {\r\n            return { ...state, not_payed_now : [...state.not_payed_now, action.semester_class_student]};\r\n        }\r\n        case REMOVE_NOT_PAYED_NOW_ALL: {\r\n            return { ...state, not_payed_now: [] };\r\n        }\r\n        case ADD_NOT_PAYED_NOW: {\r\n            return { ...state, not_payed_now: [...state.not_payed_now, action.semester_class_student]};\r\n        }\r\n        case EDIT_NOT_PAYED_NOW: {\r\n            const foundIndex: number = state.not_payed_now.findIndex(pr => pr.id === action.semester_class_student.id);\r\n            let not_payed_now: ISemesterClassStudent[] = state.not_payed_now;\r\n            not_payed_now[foundIndex] = action.semester_class_student;\r\n            return { ...state, not_payed_now: not_payed_now };\r\n        }\r\n        case REMOVE_NOT_PAYED_NOW: {\r\n            return { ...state, not_payed_now: state.not_payed_now.filter(x=>x.id !== action.semester_class_student.id)};\r\n        }\r\n\r\n        case INITIAL_PAYED: {\r\n            return { ...state, payed : [...state.payed, action.semester_class_student]};\r\n        }\r\n        case REMOVE_PAYED_ALL: {\r\n            return { ...state, payed: [] };\r\n        }\r\n        case ADD_PAYED: {\r\n            return { ...state, payed: [...state.payed, action.semester_class_student]};\r\n        }\r\n        case EDIT_PAYED: {\r\n            const foundIndex: number = state.payed.findIndex(pr => pr.id === action.semester_class_student.id);\r\n            let accept_not_payed_now: ISemesterClassStudent[] = state.payed;\r\n            accept_not_payed_now[foundIndex] = action.semester_class_student;\r\n            return { ...state, payed: accept_not_payed_now };\r\n        }\r\n        case REMOVE_PAYED: {\r\n            return { ...state, payed: state.payed.filter(x=>x.id !== action.semester_class_student.id)};\r\n        }\r\n\r\n        case INITIAL_NOT_PAYED: {\r\n            return { ...state, not_payed : [...state.not_payed, action.semester_class_student]};\r\n        }\r\n        case REMOVE_NOT_PAYED_ALL: {\r\n            return { ...state, not_payed: [] };\r\n        }\r\n        case ADD_NOT_PAYED: {\r\n            return { ...state, not_payed: [...state.not_payed, action.semester_class_student]};\r\n        }\r\n        case EDIT_NOT_PAYED: {\r\n            const foundIndex: number = state.not_payed.findIndex(pr => pr.id === action.semester_class_student.id);\r\n            let remove_not_payed_now: ISemesterClassStudent[] = state.not_payed;\r\n            remove_not_payed_now[foundIndex] = action.semester_class_student;\r\n            return { ...state, not_payed: remove_not_payed_now };\r\n        }\r\n        case REMOVE_NOT_PAYED: {\r\n            return { ...state, not_payed: state.not_payed.filter(x=>x.id !== action.semester_class_student.id)};\r\n        }\r\n        \r\n        case CHANGE_NOT_PAYED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClassStudent: action.semester_class_student };\r\n        }\r\n        case CLEAR_NOT_PAYED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClassStudent: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default semesterClassStudentReducer;","export interface IClassHasRegisterJoinSemester {\r\n    classes_id: number;\r\n    user_register_join_semester_id: number;\r\n    review_star: number;\r\n    student_feedback: string;\r\n    teacher_feedback: string;\r\n}\r\n\r\nexport enum ClassHasRegisterJoinSemesterModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IClassHasRegisterJoinSemesterState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CLASS_HAS_REGISTER_JOIN_SEMESTER, CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT, EDIT_CLASS_HAS_REGISTER_JOIN_SEMESTER, REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER,\r\n    CLEAR_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_CLASS_HAS_REGISTER_JOIN_SEMESTER, REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER_ALL} from \"../actions/class_has_register_join_semester.action\";\r\nimport { IClassHasRegisterJoinSemester, ClassHasRegisterJoinSemesterModificationStatus } from \"../models/class_has_register_join_semester.interface\";\r\n\r\n\r\n\r\nconst initialState: IClassHasRegisterJoinSemesterState = {\r\n    modificationState: ClassHasRegisterJoinSemesterModificationStatus.None,\r\n    selectedClassHasRegisterJoinSemester: null,\r\n    class_has_register_join_semesters: []\r\n};\r\n\r\nfunction class_has_register_join_semestersReducer(state: IClassHasRegisterJoinSemesterState = initialState, action: IActionBase): IClassHasRegisterJoinSemesterState {\r\n    switch (action.type) {\r\n        case INITIAL_CLASS_HAS_REGISTER_JOIN_SEMESTER: {\r\n            return { ...state, class_has_register_join_semesters : [...state.class_has_register_join_semesters, action.class_has_register_join_semester]};\r\n        }\r\n        case ADD_CLASS_HAS_REGISTER_JOIN_SEMESTER: {\r\n            return { ...state, class_has_register_join_semesters: [...state.class_has_register_join_semesters, action.class_has_register_join_semester]};\r\n        }\r\n        case EDIT_CLASS_HAS_REGISTER_JOIN_SEMESTER: {\r\n            const foundIndex: number = state.class_has_register_join_semesters.findIndex(pr => pr.classes_id === action.class_has_register_join_semester.classes_id);\r\n            let class_has_register_join_semesters: IClassHasRegisterJoinSemester[] = state.class_has_register_join_semesters;\r\n            class_has_register_join_semesters[foundIndex] = action.class_has_register_join_semester;\r\n            return { ...state, class_has_register_join_semesters: class_has_register_join_semesters };\r\n        }\r\n        case REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER: {\r\n            return { ...state, class_has_register_join_semesters: state.class_has_register_join_semesters.filter(pr => pr.classes_id !== action.id) };\r\n        }\r\n        case REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER_ALL: {\r\n            return { ...state, class_has_register_join_semesters: [] };\r\n        }\r\n        case CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT: {\r\n            return { ...state, selectedClassHasRegisterJoinSemester: action.class_has_register_join_semester };\r\n        }\r\n        case CLEAR_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT: {\r\n            return { ...state, selectedClassHasRegisterJoinSemester: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default class_has_register_join_semestersReducer;","export interface ICourseParentNew {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    creator_id: number;\r\n    art_type_id: number;\r\n    art_level_id: number;\r\n    art_age_id: number;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    total: number;\r\n    student_registered_name: string[];\r\n    student_registered_id: number[];\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum CourseParentNewModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICourseParentNewState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_COURSE_PARENT_NEW, CHANGE_COURSE_PARENT_NEW_PENDING_EDIT, EDIT_COURSE_PARENT_NEW, REMOVE_COURSE_PARENT_NEW,\r\n    CLEAR_COURSE_PARENT_NEW_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_COURSE_PARENT_NEW, REMOVE_COURSE_PARENT_NEW_ALL} from \"../actions/course_parent_new.action\";\r\nimport { ICourseParentNew, CourseParentNewModificationStatus } from \"../models/course_parent_new.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseParentNewState = {\r\n    modificationState: CourseParentNewModificationStatus.None,\r\n    selectedCourseParentNew: null,\r\n    courses: []\r\n};\r\n\r\nfunction course_parent_newsReducer(state: ICourseParentNewState = initialState, action: IActionBase): ICourseParentNewState {\r\n    switch (action.type) {\r\n        case INITIAL_COURSE_PARENT_NEW: {\r\n            return { ...state, courses : [...state.courses, action.course_parent_new]};\r\n        }\r\n        case ADD_COURSE_PARENT_NEW: {\r\n            return { ...state, courses: [...state.courses, action.course_parent_new]};\r\n        }\r\n        case EDIT_COURSE_PARENT_NEW: {\r\n            const foundIndex: number = state.courses.findIndex(pr => pr.id === action.course_parent_new.id);\r\n            let courses: ICourseParentNew[] = state.courses;\r\n            courses[foundIndex] = action.course_parent_new;\r\n            return { ...state, courses: courses };\r\n        }\r\n        case REMOVE_COURSE_PARENT_NEW: {\r\n            return { ...state, courses: state.courses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_COURSE_PARENT_NEW_ALL: {\r\n            return { ...state, courses: [] };\r\n        }\r\n        case CHANGE_COURSE_PARENT_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedCourseParentNew: action.course_parent_new };\r\n        }\r\n        case CLEAR_COURSE_PARENT_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedCourseParentNew: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default course_parent_newsReducer;","export interface ISemesterClassParent {\r\n    id: any;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: number;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    semester_name: string;\r\n    semester_id: number;\r\n    image_url: string;\r\n    registration_expiration_time: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n    registration_deadline: string;\r\n    student_registered_name: string[];\r\n    student_registered_id: number[];\r\n    start_date: string;\r\n    status: string;\r\n}\r\n\r\nexport enum SemesterClassParentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ISemesterClassParentState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_NOT_PAYED_NOW, EDIT_NOT_PAYED_NOW, REMOVE_NOT_PAYED_NOW,INITIAL_NOT_PAYED_NOW, REMOVE_NOT_PAYED_NOW_ALL, \r\n    ADD_PAYED, EDIT_PAYED, REMOVE_PAYED, INITIAL_PAYED, REMOVE_PAYED_ALL, \r\n    ADD_NOT_PAYED, EDIT_NOT_PAYED, REMOVE_NOT_PAYED , INITIAL_NOT_PAYED, REMOVE_NOT_PAYED_ALL,\r\n    CLEAR_NOT_PAYED_NOW_PENDING_EDIT, CHANGE_NOT_PAYED_NOW_PENDING_EDIT, SET_MODIFICATION_STATE\r\n\r\n} from \"../actions/semester_class_parent.action\";\r\nimport { ISemesterClassParent, SemesterClassParentModificationStatus } from \"../models/semester_class_parent.interface\";\r\n\r\nconst initialState: ISemesterClassParentState = {\r\n    modificationState: SemesterClassParentModificationStatus.None,\r\n    selectedSemesterClassParent: null,\r\n    not_payed_now: [],\r\n    payed: [],\r\n    not_payed: []\r\n};\r\n\r\nfunction semesterClassParentReducer(state: ISemesterClassParentState = initialState, action: IActionBase): ISemesterClassParentState {\r\n    switch (action.type) {\r\n        case INITIAL_NOT_PAYED_NOW: {\r\n            return { ...state, not_payed_now : [...state.not_payed_now, action.semester_class_parent]};\r\n        }\r\n        case REMOVE_NOT_PAYED_NOW_ALL: {\r\n            return { ...state, not_payed_now: [] };\r\n        }\r\n        case ADD_NOT_PAYED_NOW: {\r\n            return { ...state, not_payed_now: [...state.not_payed_now, action.semester_class_parent]};\r\n        }\r\n        case EDIT_NOT_PAYED_NOW: {\r\n            const foundIndex: number = state.not_payed_now.findIndex(pr => pr.id === action.semester_class_parent.id);\r\n            let not_payed_now: ISemesterClassParent[] = state.not_payed_now;\r\n            not_payed_now[foundIndex] = action.semester_class_parent;\r\n            return { ...state, not_payed_now: not_payed_now };\r\n        }\r\n        case REMOVE_NOT_PAYED_NOW: {\r\n            return { ...state, not_payed_now: state.not_payed_now.filter(x=>x.id !== action.semester_class_parent.id)};\r\n        }\r\n\r\n        case INITIAL_PAYED: {\r\n            return { ...state, payed : [...state.payed, action.semester_class_parent]};\r\n        }\r\n        case REMOVE_PAYED_ALL: {\r\n            return { ...state, payed: [] };\r\n        }\r\n        case ADD_PAYED: {\r\n            return { ...state, payed: [...state.payed, action.semester_class_parent]};\r\n        }\r\n        case EDIT_PAYED: {\r\n            const foundIndex: number = state.payed.findIndex(pr => pr.id === action.semester_class_parent.id);\r\n            let accept_not_payed_now: ISemesterClassParent[] = state.payed;\r\n            accept_not_payed_now[foundIndex] = action.semester_class_parent;\r\n            return { ...state, payed: accept_not_payed_now };\r\n        }\r\n        case REMOVE_PAYED: {\r\n            return { ...state, payed: state.payed.filter(x=>x.id !== action.semester_class_parent.id)};\r\n        }\r\n\r\n        case INITIAL_NOT_PAYED: {\r\n            return { ...state, not_payed : [...state.not_payed, action.semester_class_parent]};\r\n        }\r\n        case REMOVE_NOT_PAYED_ALL: {\r\n            return { ...state, not_payed: [] };\r\n        }\r\n        case ADD_NOT_PAYED: {\r\n            return { ...state, not_payed: [...state.not_payed, action.semester_class_parent]};\r\n        }\r\n        case EDIT_NOT_PAYED: {\r\n            const foundIndex: number = state.not_payed.findIndex(pr => pr.id === action.semester_class_parent.id);\r\n            let remove_not_payed_now: ISemesterClassParent[] = state.not_payed;\r\n            remove_not_payed_now[foundIndex] = action.semester_class_parent;\r\n            return { ...state, not_payed: remove_not_payed_now };\r\n        }\r\n        case REMOVE_NOT_PAYED: {\r\n            return { ...state, not_payed: state.not_payed.filter(x=>x.id !== action.semester_class_parent.id)};\r\n        }\r\n        \r\n        case CHANGE_NOT_PAYED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClassParent: action.semester_class_parent };\r\n        }\r\n        case CLEAR_NOT_PAYED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClassParent: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default semesterClassParentReducer;","export interface IContestParentNew{\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    creator_id: number;\r\n    art_type_id: number;\r\n    art_age_id: number;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n    student_registered_name: string[];\r\n    student_registered_id: number[];\r\n}\r\n\r\nexport enum ContestParentNewModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IContestParentNewState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CONTEST_PARENT_NEW, CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT, EDIT_CONTEST_PARENT_NEW, REMOVE_CONTEST_PARENT_NEW,\r\n    CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_CONTEST_PARENT_NEW, REMOVE_CONTEST_PARENT_NEW_ALL} from \"../actions/contest_parent_new.action\";\r\nimport { IContestParentNew, ContestParentNewModificationStatus } from \"../models/contest_parent_new.interface\";\r\n\r\n\r\n\r\nconst initialState: IContestParentNewState = {\r\n    modificationState: ContestParentNewModificationStatus.None,\r\n    selectedContestParentNew: null,\r\n    contests: []\r\n};\r\n\r\nfunction contest_parent_newsReducer(state: IContestParentNewState = initialState, action: IActionBase): IContestParentNewState {\r\n    switch (action.type) {\r\n        case INITIAL_CONTEST_PARENT_NEW: {\r\n            return { ...state, contests : [...state.contests, action.contest_parent_new]};\r\n        }\r\n        case ADD_CONTEST_PARENT_NEW: {\r\n            return { ...state, contests: [...state.contests, action.contest_parent_new]};\r\n        }\r\n        case EDIT_CONTEST_PARENT_NEW: {\r\n            const foundIndex: number = state.contests.findIndex(pr => pr.id === action.contest_parent_new.id);\r\n            let contests: IContestParentNew[] = state.contests;\r\n            contests[foundIndex] = action.contest_parent_new;\r\n            return { ...state, contests: contests };\r\n        }\r\n        case REMOVE_CONTEST_PARENT_NEW: {\r\n            return { ...state, contests: state.contests.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_PARENT_NEW_ALL: {\r\n            return { ...state, contests: [] };\r\n        }\r\n        case CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedContestParentNew: action.contest_parent_new };\r\n        }\r\n        case CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedContestParentNew: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default contest_parent_newsReducer;","export interface ICourseTeacherNew {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    art_type_id: number;\r\n    art_level_id: number;\r\n    art_age_id: number;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    total: number;\r\n    total_registed: number;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum CourseTeacherNewModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICourseTeacherNewState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_COURSE_TEACHER_NEW, CHANGE_COURSE_TEACHER_NEW_PENDING_EDIT, EDIT_COURSE_TEACHER_NEW, REMOVE_COURSE_TEACHER_NEW,\r\n    CLEAR_COURSE_TEACHER_NEW_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_COURSE_TEACHER_NEW, REMOVE_COURSE_TEACHER_NEW_ALL} from \"../actions/course_teacher_new.action\";\r\nimport { ICourseTeacherNew, CourseTeacherNewModificationStatus } from \"../models/course_teacher_new.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseTeacherNewState = {\r\n    modificationState: CourseTeacherNewModificationStatus.None,\r\n    selectedCourseTeacherNew: null,\r\n    courses: []\r\n};\r\n\r\nfunction course_teacher_newsReducer(state: ICourseTeacherNewState = initialState, action: IActionBase): ICourseTeacherNewState {\r\n    switch (action.type) {\r\n        case INITIAL_COURSE_TEACHER_NEW: {\r\n            return { ...state, courses : [...state.courses, action.course_teacher_new]};\r\n        }\r\n        case ADD_COURSE_TEACHER_NEW: {\r\n            return { ...state, courses: [...state.courses, action.course_teacher_new]};\r\n        }\r\n        case EDIT_COURSE_TEACHER_NEW: {\r\n            const foundIndex: number = state.courses.findIndex(pr => pr.id === action.course_teacher_new.id);\r\n            let courses: ICourseTeacherNew[] = state.courses;\r\n            courses[foundIndex] = action.course_teacher_new;\r\n            return { ...state, courses: courses };\r\n        }\r\n        case REMOVE_COURSE_TEACHER_NEW: {\r\n            return { ...state, courses: state.courses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_COURSE_TEACHER_NEW_ALL: {\r\n            return { ...state, courses: [] };\r\n        }\r\n        case CHANGE_COURSE_TEACHER_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedCourseTeacherNew: action.course_teacher_new };\r\n        }\r\n        case CLEAR_COURSE_TEACHER_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedCourseTeacherNew: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default course_teacher_newsReducer;","export interface ISemesterClassTeacher {\r\n    id: any;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: number;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    semester_name: string;\r\n    semester_id: number;\r\n    image_url: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n    registration_deadline: string;\r\n    status: string;\r\n}\r\n\r\nexport enum SemesterClassTeacherModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ISemesterClassTeacherState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SEMESTER_CLASS_TEACHER, CHANGE_SEMESTER_CLASS_TEACHER_PENDING_EDIT, EDIT_SEMESTER_CLASS_TEACHER, REMOVE_SEMESTER_CLASS_TEACHER,\r\n    CLEAR_SEMESTER_CLASS_TEACHER_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SEMESTER_CLASS_TEACHER, REMOVE_SEMESTER_CLASS_TEACHER_ALL} from \"../actions/semester_class_teacher.action\";\r\nimport { ISemesterClassTeacher, SemesterClassTeacherModificationStatus } from \"../models/semester_class_teacher.interface\";\r\n\r\n\r\n\r\nconst initialState: ISemesterClassTeacherState = {\r\n    modificationState: SemesterClassTeacherModificationStatus.None,\r\n    selectedSemesterClassTeacher: null,\r\n    semester_class_teachers: []\r\n};\r\n\r\nfunction semester_class_teachersReducer(state: ISemesterClassTeacherState = initialState, action: IActionBase): ISemesterClassTeacherState {\r\n    switch (action.type) {\r\n        case INITIAL_SEMESTER_CLASS_TEACHER: {\r\n            return { ...state, semester_class_teachers : [...state.semester_class_teachers, action.semester_class_teacher]};\r\n        }\r\n        case ADD_SEMESTER_CLASS_TEACHER: {\r\n            return { ...state, semester_class_teachers: [...state.semester_class_teachers, action.semester_class_teacher]};\r\n        }\r\n        case EDIT_SEMESTER_CLASS_TEACHER: {\r\n            const foundIndex: number = state.semester_class_teachers.findIndex(pr => pr.id === action.semester_class_teacher.id);\r\n            let semester_class_teachers: ISemesterClassTeacher[] = state.semester_class_teachers;\r\n            semester_class_teachers[foundIndex] = action.semester_class_teacher;\r\n            return { ...state, semester_class_teachers: semester_class_teachers };\r\n        }\r\n        case REMOVE_SEMESTER_CLASS_TEACHER: {\r\n            return { ...state, semester_class_teachers: state.semester_class_teachers.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SEMESTER_CLASS_TEACHER_ALL: {\r\n            return { ...state, semester_class_teachers: [] };\r\n        }\r\n        case CHANGE_SEMESTER_CLASS_TEACHER_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClassTeacher: action.semester_class_teacher };\r\n        }\r\n        case CLEAR_SEMESTER_CLASS_TEACHER_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClassTeacher: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default semester_class_teachersReducer;","export interface IContestSubmissionTeacher {\r\n    id: any;\r\n    student_id: number;\r\n    contest_id: number;\r\n    student_name: string;\r\n    contest_name: string;\r\n    image_url: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ContestSubmissionTeacherModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IContestSubmissionTeacherState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CONTEST_SUBMISSION_TEACHER_NOT_GRADED, CHANGE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT, EDIT_CONTEST_SUBMISSION_TEACHER_NOT_GRADED, REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED,\r\n    CLEAR_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_CONTEST_SUBMISSION_TEACHER_NOT_GRADED, REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_ALL, INITIAL_CONTEST_SUBMISSION_TEACHER_GRADED, ADD_CONTEST_SUBMISSION_TEACHER_GRADED, EDIT_CONTEST_SUBMISSION_TEACHER_GRADED, REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED, REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED_ALL, CHANGE_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT, CLEAR_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT} from \"../actions/contest_submission_teacher.action\";\r\nimport { IContestSubmissionTeacher, ContestSubmissionTeacherModificationStatus } from \"../models/contest_submission_teacher.interface\";\r\n\r\n\r\n\r\nconst initialState: IContestSubmissionTeacherState = {\r\n    modificationState: ContestSubmissionTeacherModificationStatus.None,\r\n    selectedContestSubmissionTeacher: null,\r\n    contest_submission_not_grade: [],\r\n    contest_submission_grade: []\r\n};\r\n\r\nfunction contestSubmissionTeachersReducer(state: IContestSubmissionTeacherState = initialState, action: IActionBase): IContestSubmissionTeacherState {\r\n    switch (action.type) {\r\n        case INITIAL_CONTEST_SUBMISSION_TEACHER_NOT_GRADED: {\r\n            return { ...state, contest_submission_not_grade : [...state.contest_submission_not_grade, action.contest_submission_teacher]};\r\n        }\r\n        case ADD_CONTEST_SUBMISSION_TEACHER_NOT_GRADED: {\r\n            return { ...state, contest_submission_not_grade: [...state.contest_submission_not_grade, action.contest_submission_teacher]};\r\n        }\r\n        case EDIT_CONTEST_SUBMISSION_TEACHER_NOT_GRADED: {\r\n            const foundIndex: number = state.contest_submission_not_grade.findIndex(pr => pr.id === action.contest_submission_teacher.id);\r\n            let contest_submission_not_grade: IContestSubmissionTeacher[] = state.contest_submission_not_grade;\r\n            contest_submission_not_grade[foundIndex] = action.contest_submission_teacher;\r\n            return { ...state, contest_submission_not_grade: contest_submission_not_grade };\r\n        }\r\n        case REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED: {\r\n            return { ...state, contest_submission_not_grade: state.contest_submission_not_grade.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_ALL: {\r\n            return { ...state, contest_submission_not_grade: [] };\r\n        }\r\n        case CHANGE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedContestSubmissionTeacher: action.contest_submission_teacher };\r\n        }\r\n        case CLEAR_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedContestSubmissionTeacher: null };\r\n        }\r\n\r\n        case INITIAL_CONTEST_SUBMISSION_TEACHER_GRADED: {\r\n            return { ...state, contest_submission_grade : [...state.contest_submission_grade, action.contest_submission_teacher]};\r\n        }\r\n        case ADD_CONTEST_SUBMISSION_TEACHER_GRADED: {\r\n            return { ...state, contest_submission_grade: [...state.contest_submission_grade, action.contest_submission_teacher]};\r\n        }\r\n        case EDIT_CONTEST_SUBMISSION_TEACHER_GRADED: {\r\n            const foundIndex: number = state.contest_submission_grade.findIndex(pr => pr.id === action.contest_submission_teacher.id);\r\n            let contest_submission_grade: IContestSubmissionTeacher[] = state.contest_submission_grade;\r\n            contest_submission_grade[foundIndex] = action.contest_submission_teacher;\r\n            return { ...state, contest_submission_grade: contest_submission_grade };\r\n        }\r\n        case REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED: {\r\n            return { ...state, contest_submission_grade: state.contest_submission_grade.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED_ALL: {\r\n            return { ...state, contest_submission_grade: [] };\r\n        }\r\n        case CHANGE_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedContestSubmissionTeacher: action.contest_submission_teacher };\r\n        }\r\n        case CLEAR_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedContestSubmissionTeacher: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default contestSubmissionTeachersReducer;","import { IChildState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CHILD, CHANGE_CHILD_PENDING_EDIT, EDIT_CHILD, REMOVE_CHILD,\r\n    CLEAR_CHILD_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_CHILD, REMOVE_CHILD_ALL} from \"../actions/child.action\";\r\nimport { IChild, ChildModificationStatus } from \"../models/child.interface\";\r\n\r\n\r\n\r\nconst initialState: IChildState = {\r\n    modificationState: ChildModificationStatus.None,\r\n    selectedChild: null,\r\n    childs: []\r\n};\r\n\r\nfunction childsReducer(state: IChildState = initialState, action: IActionBase): IChildState {\r\n    switch (action.type) {\r\n        case INITIAL_CHILD: {\r\n            return { ...state, childs : [...state.childs, action.child]};\r\n        }\r\n        case ADD_CHILD: {\r\n            return { ...state, childs: [...state.childs, action.child]};\r\n        }\r\n        case EDIT_CHILD: {\r\n            const foundIndex: number = state.childs.findIndex(pr => pr.id === action.child.id);\r\n            let childs: IChild[] = state.childs;\r\n            childs[foundIndex] = action.child;\r\n            return { ...state, childs: childs };\r\n        }\r\n        case REMOVE_CHILD: {\r\n            return { ...state, childs: state.childs.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CHILD_ALL: {\r\n            return { ...state, childs: [] };\r\n        }\r\n        case CHANGE_CHILD_PENDING_EDIT: {\r\n            return { ...state, selectedChild: action.child };\r\n        }\r\n        case CLEAR_CHILD_PENDING_EDIT: {\r\n            return { ...state, selectedChild: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default childsReducer;","export interface IFinalScoreChild {\r\n    course_id: number;\r\n    course_name: string;\r\n    final_score: number;\r\n}\r\n\r\nexport enum FinalScoreChildModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4,\r\n    Create1 = 5\r\n}","import { IFinalScoreChildState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_FINAL_SCORE_CHILD, CHANGE_FINAL_SCORE_CHILD_PENDING_EDIT, EDIT_FINAL_SCORE_CHILD, REMOVE_FINAL_SCORE_CHILD,\r\n    CLEAR_FINAL_SCORE_CHILD_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_FINAL_SCORE_CHILD, REMOVE_FINAL_SCORE_CHILD_ALL} from \"../actions/final_score_child.action\";\r\nimport { IFinalScoreChild, FinalScoreChildModificationStatus } from \"../models/final_score_child.interface\";\r\n\r\n\r\n\r\nconst initialState: IFinalScoreChildState = {\r\n    modificationState: FinalScoreChildModificationStatus.None,\r\n    selectedFinalScoreChild: null,\r\n    final_score_childs: []\r\n};\r\n\r\nfunction final_score_childsReducer(state: IFinalScoreChildState = initialState, action: IActionBase): IFinalScoreChildState {\r\n    switch (action.type) {\r\n        case INITIAL_FINAL_SCORE_CHILD: {\r\n            return { ...state, final_score_childs : [...state.final_score_childs, action.final_score_child]};\r\n        }\r\n        case ADD_FINAL_SCORE_CHILD: {\r\n            return { ...state, final_score_childs: [...state.final_score_childs, action.final_score_child]};\r\n        }\r\n        case EDIT_FINAL_SCORE_CHILD: {\r\n            const foundIndex: number = state.final_score_childs.findIndex(pr => pr.course_id === action.final_score_child.course_id);\r\n            let final_score_childs: IFinalScoreChild[] = state.final_score_childs;\r\n            final_score_childs[foundIndex] = action.final_score_child;\r\n            return { ...state, final_score_childs: final_score_childs };\r\n        }\r\n        case REMOVE_FINAL_SCORE_CHILD: {\r\n            return { ...state, final_score_childs: state.final_score_childs.filter(pr => pr.course_id !== action.course_id) };\r\n        }\r\n        case REMOVE_FINAL_SCORE_CHILD_ALL: {\r\n            return { ...state, final_score_childs: [] };\r\n        }\r\n        case CHANGE_FINAL_SCORE_CHILD_PENDING_EDIT: {\r\n            return { ...state, selectedFinalScoreChild: action.final_score_child };\r\n        }\r\n        case CLEAR_FINAL_SCORE_CHILD_PENDING_EDIT: {\r\n            return { ...state, selectedFinalScoreChild: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default final_score_childsReducer;","import { combineReducers, Reducer } from \"redux\";\nimport { UPDATE_CURRENT_PATH } from \"../actions/root.actions\";\nimport { IRootStateType, IActionBase, IStateType } from \"../models/root.interface\";\nimport productsReducer from \"./products.reducer\";\nimport notificationReducer from \"./notification.reducer\";\nimport userReducer from \"./users.reducer\";\nimport orderReducer from \"./order.reducer\";\nimport accountReducer from \"./account.reducer\";\nimport semestersReducer from \"./semester.reducer\";\nimport lessonsReducer from \"./lesson.reducer\";\nimport schedulesReducer from \"./schedule.reducer\";\nimport schedule_itemsReducer from \"./schedule_item.reducer\";\nimport artTypesReducer from \"./art_type.reducer\";\nimport artLevelsReducer from \"./art_level.reducer\";\nimport artAgesReducer from \"./art_age.reducer\";\nimport coursesReducer from \"./course.reducer\";\nimport contestsReducer from \"./contest.reducer\";\nimport sectionTemplatesReducer from \"./section_template.reducer\";\nimport tutorialTemplatesReducer from \"./tutorial_template.reducer\";\nimport userGradeContestsReducer from \"./user_grade_contest.reducer\";\nimport tutorialTemplatePagesReducer from \"./tutorial_template_page.reducer\";\nimport teacherLeaveReducer from \"./teacher_leave.reducer\";\nimport studentLeaveReducer from \"./student_leave.reducer\";\nimport myClassesReducer from \"./my_class.reducer\";\nimport teacher_register_quantificationsReducer from \"./teacher_register_quantification.reducer\";\nimport informationClassesReducer from \"./information_class.reducer\";\nimport time_schedulesReducer from \"./time_schedule.reducer\";\nimport courseTeachersReducer from \"./course_teacher.reducer\";\nimport time_schedule_teachersReducer from \"./time_schedule_teacher.reducer\";\nimport classTeachersReducer from \"./class_teacher.reducer\";\nimport contestTeachersReducer from \"./contest_teacher.reducer\";\nimport semesterClassesReducer from \"./semester_class.reducer\";\nimport anonymousNotificationsReducer from \"./anonymous_notification.reducer\";\nimport sectionsReducer from \"./section.reducer\";\nimport tutorialPagesReducer from \"./tutorial_page.reducer\";\nimport exercisesReducer from \"./exercise.reducer\";\nimport exerciseSubmissionsReducer from \"./exercise_submission.reducer\";\nimport turnoversReducer from \"./turnover.reducer\";\nimport report_usersReducer from \"./report_user.reducer\";\nimport course_reportsReducer from \"./course_report.reducer\";\nimport exercise_levelsReducer from \"./exercise_level.reducer\";\nimport user_grade_exercise_submissionsReducer from \"./user_grade_exercise_submission.reducer\";\nimport exerciseStudentsReducer from \"./exercise_student.reducer\";\nimport tutorialsReducer from \"./tutorial.reducer\";\nimport userGradeContestSubmissionsReducer from \"./user_grade_contest_submission.reducer\";\nimport user_register_tutorial_pagesReducer from \"./user_register_tutorial_page.reducer\";\nimport userRegisterTutorialReducer from \"./user_register_tutorial.reducer\";\nimport contestSubmissionsReducer from \"./contest_submission.reducer\";\nimport schedule_time_classsReducer from \"./schedule_time_class.reducer\";\nimport notify_dbsReducer from \"./notify_db.reducer\";\nimport userReadNotificationsReducer from \"./user_read_notification.reducer\";\nimport notifysReducer from \"./notify.reducer\";\nimport classes_studentsReducer from \"./classes_student.reducer\";\nimport classesParentsReducer from \"./classes_parent.reducer\";\nimport courseParentsReducer from \"./course_parent.reducer\";\nimport contestStudentsReducer from \"./contest_student.reducer\";\nimport cartReducer from \"./cart.reducer\";\nimport attendancesReducer from \"./attendance.reducer\";\nimport profilesReducer from \"./profile.reducer\";\nimport user_register_join_semestersReducer from \"./user_register_join_semester.reducer\";\nimport courseStudentsReducer from \"./course_student.reducer\";\nimport course_newsReducer from \"./course_new.reducer\";\nimport semesterClassStudentReducer from \"./semester_class_student.reducer\";\nimport class_has_register_join_semestersReducer from \"./class_has_register_join_semester.reducer\";\nimport course_parent_newsReducer from \"./course_parent_new.reducer\";\nimport semesterClassParentReducer from \"./semester_class_parent.reducer\";\nimport contest_parent_newsReducer from \"./contest_parent_new.reducer\";\nimport course_teacher_newsReducer from \"./course_teacher_new.reducer\";\nimport semester_class_teachersReducer from \"./semester_class_teacher.reducer\";\nimport contestSubmissionTeachersReducer from \"./contest_submission_teacher.reducer\";\nimport childsReducer from \"./child.reducer\";\nimport final_score_childsReducer from \"./final_score_child.reducer\";\n\n\nconst initialState: IRootStateType = {\n    page: {area: \"Trang chủ\", subArea: \"\"}\n};\n\nfunction rootReducer(state: IRootStateType = initialState, action: IActionBase): IRootStateType {\n    switch (action.type) {\n        case UPDATE_CURRENT_PATH:\n            return { ...state, page: {area: action.area, subArea: action.subArea}};\n        default:\n            return state;\n    }\n}\n\nconst rootReducers: Reducer<IStateType> = combineReducers({root: rootReducer,\n    products: productsReducer,\n    notifications: notificationReducer,\n    users: userReducer,\n    orders: orderReducer,\n    account: accountReducer,\n    semesters: semestersReducer,\n    lessons: lessonsReducer,\n    schedules: schedulesReducer,\n    schedule_items: schedule_itemsReducer,\n    art_types: artTypesReducer,\n    art_levels: artLevelsReducer,\n    art_ages: artAgesReducer,\n    courses: coursesReducer,\n    semester_classes: semesterClassesReducer,\n    contests: contestsReducer,\n    section_templates: sectionTemplatesReducer,\n    tutorial_templates: tutorialTemplatesReducer,\n    user_grade_contests: userGradeContestsReducer,\n    tutorial_template_pages: tutorialTemplatePagesReducer,\n    teacher_leaves: teacherLeaveReducer,\n    student_leaves: studentLeaveReducer,\n    user_register_join_semesters: user_register_join_semestersReducer,\n    myclasses: myClassesReducer,\n    teacher_register_quantifications: teacher_register_quantificationsReducer,\n    information_classes: informationClassesReducer,\n    time_schedules: time_schedulesReducer,\n    course_teachers: courseTeachersReducer,\n    time_schedule_teachers: time_schedule_teachersReducer,\n    class_teachers: classTeachersReducer,\n    contest_teachers: contestTeachersReducer,\n    anonymous_notifications: anonymousNotificationsReducer,\n    sections: sectionsReducer,\n    tutorial_pages: tutorialPagesReducer,\n    exercises: exercisesReducer,\n    exercise_submissions: exerciseSubmissionsReducer,\n    turnovers: turnoversReducer,\n    report_users: report_usersReducer,\n    course_reports: course_reportsReducer,\n    exercise_levels: exercise_levelsReducer,\n    user_grade_exercise_submissions: user_grade_exercise_submissionsReducer,\n    exercise_students: exerciseStudentsReducer,\n    tutorials: tutorialsReducer,\n    user_grade_contest_submissions: userGradeContestSubmissionsReducer,\n    user_register_tutorial_pages: user_register_tutorial_pagesReducer,\n    user_register_tutorials: userRegisterTutorialReducer,\n    contest_submissions: contestSubmissionsReducer,\n    schedule_time_classes: schedule_time_classsReducer,\n    notify_dbs: notify_dbsReducer,\n    user_read_notifications: userReadNotificationsReducer,\n    notifys: notifysReducer,\n    classes_students: classes_studentsReducer,\n    classes_parents: classesParentsReducer,\n    course_parents: courseParentsReducer,\n    contest_students: contestStudentsReducer,\n    carts: cartReducer,\n    attendances: attendancesReducer,\n    profiles: profilesReducer,\n    course_students: courseStudentsReducer,\n    course_news: course_newsReducer,\n    semester_class_student: semesterClassStudentReducer,\n    class_has_register_join_semesters: class_has_register_join_semestersReducer,\n    course_parent_news: course_parent_newsReducer,\n    semester_class_parent: semesterClassParentReducer,\n    contest_parent_new: contest_parent_newsReducer,\n    course_teacher_new: course_teacher_newsReducer,\n    semester_class_teachers: semester_class_teachersReducer,\n    contest_submission_teacher: contestSubmissionTeachersReducer,\n    childs: childsReducer,\n    final_score_childs: final_score_childsReducer,\n});\n\n\n\nexport default rootReducers;","import { createStore, applyMiddleware, Store  } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport rootReducers from \"./reducers/root.reducer\";\n\n\nconst store: Store = createStore(rootReducers, applyMiddleware(\n    thunkMiddleware\n));\n\nstore.subscribe(() => {});\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n\n// f you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}