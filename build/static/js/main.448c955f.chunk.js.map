{"version":3,"sources":["store/actions/contest_teacher.action.ts","store/actions/contest_student.action.ts","store/actions/contest_parent.action.ts","store/actions/user_register_tutorial.action.ts","store/actions/contest.action.ts","store/actions/teacher_register_quantification.action.ts","store/actions/users.action.ts","store/actions/student_leave.action.ts","store/actions/teacher_leave.action.ts","store/actions/semester_class_student.action.ts","store/actions/semester_class_parent.action.ts","store/actions/exercise_student.action.ts","store/actions/exercise_teacher.action.ts","store/actions/exercise_parent.action.ts","store/actions/exercise_submission.action.ts","store/actions/user_register_join_semester.action.ts","store/actions/class_teacher.action.ts","store/actions/course_teacher.action.ts","store/actions/contest_submission.action.ts","store/actions/classes_student.action.ts","store/actions/classes_parent.action.ts","store/actions/contest_submission_teacher.action.ts","store/actions/turnover.action.ts","store/actions/user_read_notification.action.ts","store/actions/course_parent.action.ts","store/actions/tutorial_page.action.ts","store/actions/lesson.action.ts","store/actions/semester_class.action.ts","store/actions/anonymous_notification.action.ts","store/actions/semester.actions.ts","store/actions/course.action.ts","store/actions/my_class.action.ts","store/actions/art_age.action.ts","store/actions/exercise.action.ts","store/actions/art_type.action.ts","store/actions/schedule.action.ts","store/actions/art_level.action.ts","store/actions/section_template.action.ts","store/actions/user_register_tutorial_page.action.ts","store/actions/tutorial_template_page.action.ts","store/actions/section.action.ts","store/actions/schedule_time_class.action.ts","store/actions/attendance.action.ts","store/actions/child.action.ts","store/actions/information_class.action.ts","store/actions/time_schedule.action.ts","store/actions/user_grade_contest_submission.action.ts","store/actions/childs_class.action.ts","store/actions/tutorial_template.action.ts","store/actions/user_grade_contest.action.ts","store/actions/time_schedule_teacher.action.ts","store/actions/report_user.action.ts","store/actions/course_report.action.ts","store/actions/notify_db.action.ts","store/actions/notify.action.ts","store/actions/cart.action.ts","store/actions/profile.action.ts","store/actions/course_new.action.ts","store/actions/class_has_register_join_semester.action.ts","store/actions/course_parent_new.action.ts","store/actions/contest_parent_new.action.ts","store/actions/course_teacher_new.action.ts","store/actions/semester_class_teacher.action.ts","store/actions/final_score_child.action.ts","store/actions/section_teacher.action.ts","store/actions/products.action.ts","store/actions/account.actions.ts","store/actions/notifications.action.ts","store/actions/root.actions.ts","store/models/user.interface.ts","store/models/anonymous_notification.interface.ts","store/models/lesson.interface.ts","store/models/student_leave.interface.ts","store/models/my_class.interface.ts","store/models/course.interface.ts","store/models/teacher_register_quantification.interface.ts","store/models/product.interface.ts","store/models/semester.interface.ts","store/models/art_type.interface.ts","store/models/art_level.interface.ts","store/models/art_age.interface.ts","store/models/contest.interface.ts","store/models/semester_class.interface.ts","store/models/exercise.interface.ts","store/models/user_register_tutorial.interface.ts","store/models/section_template.interface.ts","store/models/class_teacher.interface.ts","store/models/child.interface.ts","store/models/classes_student.interface.ts","store/models/classes_parent.interface.ts","common/components/PrivateRoute.tsx","App.tsx","serviceWorker.ts","store/reducers/products.reducer.ts","store/reducers/notification.reducer.ts","store/reducers/users.reducer.ts","store/actions/orders.actions.ts","store/reducers/order.reducer.ts","store/reducers/account.reducer.ts","store/reducers/semester.reducer.ts","store/reducers/lesson.reducer.ts","store/models/schedule.interface.ts","store/reducers/schedule.reducer.ts","store/models/schedule_item.interface.ts","store/actions/schedule_item.action.ts","store/reducers/schedule_item.reducer.ts","store/reducers/art_type.reducer.ts","store/reducers/art_level.reducer.ts","store/reducers/art_age.reducer.ts","store/reducers/course.reducer.ts","store/reducers/contest.reducer.ts","store/reducers/section_template.reducer.ts","store/models/tutorial_template.interface.ts","store/reducers/tutorial_template.reducer.ts","store/models/user_grade_contest.interface.ts","store/reducers/user_grade_contest.reducer.ts","store/models/tutorial_template_page.interface.ts","store/reducers/tutorial_template_page.reducer.ts","store/models/teacher_leave.interface.ts","store/reducers/teacher_leave.reducer.ts","store/reducers/student_leave.reducer.ts","store/reducers/my_class.reducer.ts","store/reducers/teacher_register_quantification.reducer.ts","store/models/information_class.interface.ts","store/reducers/information_class.reducer.ts","store/models/time_schedule.interface.ts","store/reducers/time_schedule.reducer.ts","store/models/course_teacher.interface.ts","store/reducers/course_teacher.reducer.ts","store/models/time_schedule_teacher.interface.ts","store/reducers/time_schedule_teacher.reducer.ts","store/reducers/class_teacher.reducer.ts","store/models/contest_teacher.interface.ts","store/reducers/contest_teacher.reducer.ts","store/reducers/semester_class.reducer.ts","store/reducers/anonymous_notification.reducer.ts","store/models/section.interface.ts","store/reducers/section.reducer.ts","store/models/tutorial_page.interface.ts","store/reducers/tutorial_page.reducer.ts","store/reducers/exercise.reducer.ts","store/models/exercise_submission.interface.ts","store/reducers/exercise_submission.reducer.ts","store/models/turnover.interface.ts","store/reducers/turnover.reducer.ts","store/models/report_user.interface.ts","store/reducers/report_user.reducer.ts","store/models/course_report.interface.ts","store/reducers/course_report.reducer.ts","store/models/exercise_level.interface.ts","store/actions/exercise_level.action.ts","store/reducers/exercise_level.reducer.ts","store/models/exercise_student.interface.ts","store/reducers/exercise_student.reducer.ts","store/models/tutorial.interface.ts","store/actions/tutorial.action.ts","store/reducers/tutorial.reducer.ts","store/models/user_grade_contest_submission.interface.ts","store/reducers/user_grade_contest_submission.reducer.ts","store/models/user_register_tutorial_page.interface.ts","store/reducers/user_register_tutorial_page.reducer.ts","store/reducers/user_register_tutorial.reducer.ts","store/models/contest_submission.interface.ts","store/reducers/contest_submission.reducer.ts","store/models/schedule_time_class.interface.ts","store/reducers/schedule_time_class.reducer.ts","store/models/notify_db.interface.ts","store/reducers/notify_db.reducer.ts","store/models/user_read_notification.interface.ts","store/reducers/user_read_notification.reducer.ts","store/models/notify.interface.ts","store/reducers/notify.reducer.ts","store/reducers/classes_student.reducer.ts","store/reducers/classes_parent.reducer.ts","store/models/course_parent.interface.ts","store/reducers/course_parent.reducer.ts","store/models/contest_student.interface.ts","store/reducers/contest_student.reducer.ts","store/models/cart.interface.ts","store/reducers/cart.reducer.ts","store/models/attendance.interface.ts","store/reducers/attendance.reducer.ts","store/models/profile.interface.ts","store/reducers/profile.reducer.ts","store/models/user_register_join_semester.interface.ts","store/reducers/user_register_join_semester.reducer.ts","store/models/course_student.interface.ts","store/actions/course_student.action.ts","store/reducers/course_student.reducer.ts","store/models/course_new.interface.ts","store/reducers/course_new.reducer.ts","store/models/semester_class_student.interface.ts","store/reducers/semester_class_student.reducer.ts","store/models/class_has_register_join_semester.interface.ts","store/reducers/class_has_register_join_semester.reducer.ts","store/models/course_parent_new.interface.ts","store/reducers/course_parent_new.reducer.ts","store/models/semester_class_parent.interface.ts","store/reducers/semester_class_parent.reducer.ts","store/models/contest_parent_new.interface.ts","store/reducers/contest_parent_new.reducer.ts","store/models/course_teacher_new.interface.ts","store/reducers/course_teacher_new.reducer.ts","store/models/semester_class_teacher.interface.ts","store/reducers/semester_class_teacher.reducer.ts","store/models/contest_submission_teacher.interface.ts","store/reducers/contest_submission_teacher.reducer.ts","store/reducers/child.reducer.ts","store/models/final_score_child.interface.ts","store/reducers/final_score_child.reducer.ts","store/models/exercise_teacher.interface.ts","store/reducers/exercise_teacher.reducer.ts","store/models/contest_parent.interface.ts","store/reducers/contest_parent.reducer.ts","store/models/exercise_parent.interface.ts","store/reducers/exercise_parent.reducer.ts","store/models/childs_class.interface.ts","store/reducers/childs_class.reducer.ts","store/models/section_teacher.interface.ts","store/reducers/section_teacher.reducer.ts","store/reducers/root.reducer.ts","store/store.ts","index.tsx"],"names":["ADD_CONTEST_TEACHER_OPENING","EDIT_CONTEST_TEACHER_OPENING","REMOVE_CONTEST_TEACHER_OPENING","CHANGE_CONTEST_TEACHER_OPENING_PENDING_EDIT","CLEAR_CONTEST_TEACHER_OPENING_PENDING_EDIT","REMOVE_CONTEST_TEACHER_OPENING_ALL","INITIAL_CONTEST_TEACHER_OPENING","ADD_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER","EDIT_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER","REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER","CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT","CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT","REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_ALL","INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER","ADD_CONTEST_TEACHER_END","EDIT_CONTEST_TEACHER_END","REMOVE_CONTEST_TEACHER_END","CHANGE_CONTEST_TEACHER_END_PENDING_EDIT","CLEAR_CONTEST_TEACHER_END_PENDING_EDIT","REMOVE_CONTEST_TEACHER_END_ALL","INITIAL_CONTEST_TEACHER_END","ADD_CONTEST_TEACHER_NOT_OPEN_NOW","EDIT_CONTEST_TEACHER_NOT_OPEN_NOW","REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW","CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT","CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT","REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_ALL","INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW","SET_MODIFICATION_STATE","FETCH_DATA_SUCCESS","FETCH_DATA_ERROR","fetchDataSuccess","contest","type","fetchDataError","error","payload","initialContestTeacherOpening","removeContestTeacherOpeningAll","addContestTeacherOpening","initialContestTeacherNotOpenNowNotTeacher","removeContestTeacherNotOpenNowNotTeacherAll","addContestTeacherNotOpenNowNotTeacher","initialContestTeacherEnd","removeContestTeacherEndAll","addContestTeacherEnd","initialContestTeacherNotOpenNow","removeContestTeacherNotOpenNowAll","addContestTeacherNotOpenNow","ADD_CONTEST_STUDENT_OPENING","EDIT_CONTEST_STUDENT_OPENING","REMOVE_CONTEST_STUDENT_OPENING","CHANGE_CONTEST_STUDENT_OPENING_PENDING_EDIT","CLEAR_CONTEST_STUDENT_OPENING_PENDING_EDIT","REMOVE_CONTEST_STUDENT_OPENING_ALL","INITIAL_CONTEST_STUDENT_OPENING","ADD_CONTEST_STUDENT_NEW","EDIT_CONTEST_STUDENT_NEW","REMOVE_CONTEST_STUDENT_NEW","CHANGE_CONTEST_STUDENT_NEW_PENDING_EDIT","CLEAR_CONTEST_STUDENT_NEW_PENDING_EDIT","REMOVE_CONTEST_STUDENT_NEW_ALL","INITIAL_CONTEST_STUDENT_NEW","ADD_CONTEST_STUDENT_END","EDIT_CONTEST_STUDENT_END","REMOVE_CONTEST_STUDENT_END","CHANGE_CONTEST_STUDENT_END_PENDING_EDIT","CLEAR_CONTEST_STUDENT_END_PENDING_EDIT","REMOVE_CONTEST_STUDENT_END_ALL","INITIAL_CONTEST_STUDENT_END","ADD_CONTEST_STUDENT_NOT_OPEN_NOW","EDIT_CONTEST_STUDENT_NOT_OPEN_NOW","REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW","CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT","CLEAR_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT","REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW_ALL","INITIAL_CONTEST_STUDENT_NOT_OPEN_NOW","initialContestStudentOpening","removeContestStudentOpeningAll","addContestStudentOpening","initialContestStudentNew","removeContestStudentNewAll","addContestStudentNew","initialContestStudentEnd","removeContestStudentEndAll","addContestStudentEnd","initialContestStudentNotOpenNow","removeContestStudentNotOpenNowAll","addContestStudentNotOpenNow","ADD_CONTEST_PARENT_OPENING","EDIT_CONTEST_PARENT_OPENING","REMOVE_CONTEST_PARENT_OPENING","CHANGE_CONTEST_PARENT_OPENING_PENDING_EDIT","CLEAR_CONTEST_PARENT_OPENING_PENDING_EDIT","REMOVE_CONTEST_PARENT_OPENING_ALL","INITIAL_CONTEST_PARENT_OPENING","ADD_CONTEST_PARENT_NEW","EDIT_CONTEST_PARENT_NEW","REMOVE_CONTEST_PARENT_NEW","CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT","CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT","REMOVE_CONTEST_PARENT_NEW_ALL","INITIAL_CONTEST_PARENT_NEW","ADD_CONTEST_PARENT_END","EDIT_CONTEST_PARENT_END","REMOVE_CONTEST_PARENT_END","CHANGE_CONTEST_PARENT_END_PENDING_EDIT","CLEAR_CONTEST_PARENT_END_PENDING_EDIT","REMOVE_CONTEST_PARENT_END_ALL","INITIAL_CONTEST_PARENT_END","ADD_CONTEST_PARENT_NOT_OPEN_NOW","EDIT_CONTEST_PARENT_NOT_OPEN_NOW","REMOVE_CONTEST_PARENT_NOT_OPEN_NOW","CHANGE_CONTEST_PARENT_NOT_OPEN_NOW_PENDING_EDIT","CLEAR_CONTEST_PARENT_NOT_OPEN_NOW_PENDING_EDIT","REMOVE_CONTEST_PARENT_NOT_OPEN_NOW_ALL","INITIAL_CONTEST_PARENT_NOT_OPEN_NOW","removeContestParentOpeningAll","addContestParentOpening","removeContestParentEndAll","addContestParentEnd","removeContestParentNotOpenNowAll","addContestParentNotOpenNow","ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW","EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW","REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW","CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT","CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT","REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_ALL","INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW","ADD_USER_REGISTER_TUTORIAL_APPROVED","EDIT_USER_REGISTER_TUTORIAL_APPROVED","REMOVE_USER_REGISTER_TUTORIAL_APPROVED","REMOVE_USER_REGISTER_TUTORIAL_APPROVED_ALL","INITIAL_USER_REGISTER_TUTORIAL_APPROVED","ADD_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE","EDIT_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE","REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE","REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_ALL","INITIAL_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE","ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED","EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED","REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED","CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_PENDING_EDIT","REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_ALL","INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED","user_register_tutorial","removeUserRegisterTutorialNotApprovedNowAll","addUserRegisterTutorialNotApprovedNow","removeUserRegisterTutorialApprovedAll","addUserRegisterTutorialApproved","setModificationState","value","removeUserRegisterTutorialNotApprovedAll","addUserRegisterTutorialNotApproved","clearSelectedUserRegisterTutorialNotApproved","ADD_CONTEST_OPENING","EDIT_CONTEST_OPENING","REMOVE_CONTEST_OPENING","CHANGE_CONTEST_OPENING_PENDING_EDIT","CLEAR_CONTEST_OPENING_PENDING_EDIT","REMOVE_CONTEST_OPENING_ALL","INITIAL_CONTEST_OPENING","ADD_CONTEST_END","EDIT_CONTEST_END","REMOVE_CONTEST_END","CHANGE_CONTEST_END_PENDING_EDIT","CLEAR_CONTEST_END_PENDING_EDIT","REMOVE_CONTEST_END_ALL","INITIAL_CONTEST_END","ADD_CONTEST_NOT_OPEN_NOW","EDIT_CONTEST_NOT_OPEN_NOW","REMOVE_CONTEST_NOT_OPEN_NOW","CHANGE_CONTEST_NOT_OPEN_NOW_PENDING_EDIT","CLEAR_CONTEST_NOT_OPEN_NOW_PENDING_EDIT","REMOVE_CONTEST_NOT_OPEN_NOW_ALL","INITIAL_CONTEST_NOT_OPEN_NOW","FETCH_DATA_REQUEST","fetchDataRequest","removeContestOpeningAll","addContestOpening","changeSelectedContestOpening","removeContestEndAll","addContestEnd","changeSelectedContestEnd","removeContestNotOpenNowAll","addContestNotOpenNow","editContestNotOpenNow","removeContestNotOpenNow","id","changeSelectedContestNotOpenNow","clearSelectedContestNotOpenNow","REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_ALL","INITIAL_TEACHER_REGISTER_QUANTIFICATION_APPROVED","ADD_TEACHER_REGISTER_QUANTIFICATION_APPROVED","EDIT_TEACHER_REGISTER_QUANTIFICATION_APPROVED","REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED","CHANGE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT","CLEAR_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT","REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_ALL","INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED","ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED","EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED","REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED","CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT","CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT","REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_ALL","INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW","ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW","EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW","REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW","CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT","CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT","teacher_register_quantification","initialTeacherRegisterQuatificationApproved","teacher_register_quantification_approved","removeTeacherRegisterQuatificationApprovedAll","addTeacherRegisterQuatificationApproved","changeSelectedTeacherRegisterQuatificationApproved","clearSelectedTeacherRegisterQuatification","initialTeacherRegisterQuatificationNotApproved","teacher_register_quantification_not_approved","removeTeacherRegisterQuatificationNotApprovedAll","addTeacherRegisterQuatificationNotApproved","editTeacherRegisterQuatificationNotApproved","initialTeacherRegisterQuatificationNotApprovedNow","teacher_register_quantification_not_approved_now","removeTeacherRegisterQuatificationNotApprovedNowAll","addTeacherRegisterQuatificationNotApprovedNow","clearSelectedTeacherRegisterNotQuatificationNow","ADD_ADMIN","EDIT_ADMIN","REMOVE_ADMIN","REMOVE_TEACHER_ALL","INITIAL_TEACHER","ADD_TEACHER","REMOVE_TEACHER","EDIT_TEACHER","REMOVE_STUDENT_ALL","INITIAL_STUDENT","ADD_STUDENT","EDIT_STUDENT","REMOVE_STUDENT","REMOVE_PARENT_ALL","INITIAL_PARENT","ADD_PARENT","EDIT_PARENT","REMOVE_PARENT","CHANGE_USER_PENDING_EDIT","CLEAR_USER_PENDING_EDIT","user","initialTeacher","removeTeacherAll","initialStudent","removeStudentAll","initialParent","removeParentAll","addTeacher","editTeacher","addStudent","addParent","changeSelectedUser","clearSelectedUser","ADD_STUDENT_LEAVE_NOT_APPROVED_NOW","EDIT_STUDENT_LEAVE_NOT_APPROVED_NOW","REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW","CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT","CLEAR_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT","REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW_ALL","INITIAL_STUDENT_LEAVE_NOT_APPROVED_NOW","ADD_STUDENT_LEAVE_APPROVED","EDIT_STUDENT_LEAVE_APPROVED","REMOVE_STUDENT_LEAVE_APPROVED","CHANGE_STUDENT_LEAVE_APPROVED_PENDING_EDIT","REMOVE_STUDENT_LEAVE_APPROVED_ALL","INITIAL_STUDENT_LEAVE_APPROVED","ADD_STUDENT_LEAVE_NOT_APPROVED","EDIT_STUDENT_LEAVE_NOT_APPROVED","REMOVE_STUDENT_LEAVE_NOT_APPROVED","CHANGE_STUDENT_LEAVE_NOT_APPROVED_PENDING_EDIT","REMOVE_STUDENT_LEAVE_NOT_APPROVED_ALL","INITIAL_STUDENT_LEAVE_NOT_APPROVED","student_leave","removeStudentLeaveNotApprovedNowAll","addStudentLeaveNotApprovedNow","changeSelectedStudentLeaveNotApprovedNow","removeStudentLeaveApprovedAll","addStudentLeaveApproved","changeSelectedStudentLeaveApproved","removeStudentLeaveNotApprovedAll","addStudentLeaveNotApproved","editStudentLeaveNotApproved","clearSelectedStudentLeaveNotApproved","REMOVE_REMOVE_LEAVE_ALL","INITIAL_REMOVE_LEAVE","ADD_REMOVE_LEAVE","REMOVE_REMOVE_LEAVE","EDIT_REMOVE_LEAVE","REMOVE_LEAVES_ALL","INITIAL_LEAVES","ADD_LEAVES","EDIT_LEAVES","REMOVE_LEAVES","REMOVE_ACCEPT_LEAVE_ALL","INITIAL_ACCEPT_LEAVE","ADD_ACCEPT_LEAVE","EDIT_ACCEPT_LEAVE","REMOVE_ACCEPT_LEAVE","teacherLeave","removeRemoveTeacherLeaveAll","addRemoveTeacherLeave","teacher_leave","removeAcceptTeacherLeaveAll","addAcceptTeacherLeave","editAcceptTeacherLeave","removeLeavesAll","addLeaves","ADD_NOT_PAYED_NOW","EDIT_NOT_PAYED_NOW","REMOVE_NOT_PAYED_NOW","CHANGE_NOT_PAYED_NOW_PENDING_EDIT","CLEAR_NOT_PAYED_NOW_PENDING_EDIT","REMOVE_NOT_PAYED_NOW_ALL","INITIAL_NOT_PAYED_NOW","ADD_PAYED","EDIT_PAYED","REMOVE_PAYED","REMOVE_PAYED_ALL","INITIAL_PAYED","ADD_NOT_PAYED","EDIT_NOT_PAYED","REMOVE_NOT_PAYED","REMOVE_NOT_PAYED_ALL","INITIAL_NOT_PAYED","semester_class_student","removeSemesterClassStudentNotPayedNowAll","addSemesterClassStudentNotPayedNow","removeSemesterClassStudentPayedAll","addSemesterClassStudentPayed","removeSemesterClassStudentNotPayedAll","addSemesterClassStudentNotPayed","semester_class_parent","removeSemesterClassParentNotPayedNowAll","addSemesterClassParentNotPayedNow","removeSemesterClassParentPayedAll","removeSemesterClassParentNotPayedAll","ADD_EXERCISE_NOT_SUBMIT","EDIT_EXERCISE_NOT_SUBMIT","REMOVE_EXERCISE_NOT_SUBMIT","REMOVE_EXERCISE_NOT_SUBMIT_ALL","INITIAL_EXERCISE_NOT_SUBMIT","ADD_EXERCISE_SUBMITED_NOT_GRADE","EDIT_EXERCISE_SUBMITED_NOT_GRADE","REMOVE_EXERCISE_SUBMITED_NOT_GRADE","REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL","INITIAL_EXERCISE_SUBMITED_NOT_GRADE","ADD_EXERCISE_SUBMITED_GRADED","EDIT_EXERCISE_SUBMITED_GRADED","REMOVE_EXERCISE_SUBMITED_GRADED","REMOVE_EXERCISE_SUBMITED_GRADED_ALL","INITIAL_EXERCISE_SUBMITED_GRADED","exercise_student","removeExerciseNotSubmitAll","addExerciseNotSubmit","removeExerciseSubmitNotGradeAll","addExerciseSubmitNotGrade","removeExerciseSubmitGradedAll","addExerciseSubmitGraded","ADD_EXERCISE_NO_SUBMISSION","EDIT_EXERCISE_NO_SUBMISSION","REMOVE_EXERCISE_NO_SUBMISSION","REMOVE_EXERCISE_NO_SUBMISSION_ALL","INITIAL_EXERCISE_NO_SUBMISSION","ADD_EXERCISE_SCORING","EDIT_EXERCISE_SCORING","REMOVE_EXERCISE_SCORING","REMOVE_EXERCISE_SCORING_ALL","INITIAL_EXERCISE_SCORING","ADD_EXERCISE_SCORING_DONE","EDIT_EXERCISE_SCORING_DONE","REMOVE_EXERCISE_SCORING_DONE","REMOVE_EXERCISE_SCORING_DONE_ALL","INITIAL_EXERCISE_SCORING_DONE","exercise_teacher","removeExerciseNoSubmissionAll","addExerciseNoSubmission","removeExerciseScoringAll","addExerciseScoring","removeExerciseScoringDoneAll","addExerciseScoringDone","exercise_parent","ADD_EXERCISE_SUBMISSION_NOT_GRADED","EDIT_EXERCISE_SUBMISSION_NOT_GRADED","REMOVE_EXERCISE_SUBMISSION_NOT_GRADED","CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT","CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT","REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL","INITIAL_EXERCISE_SUBMISSION_NOT_GRADED","ADD_EXERCISE_SUBMISSION_GRADED","EDIT_EXERCISE_SUBMISSION_GRADED","REMOVE_EXERCISE_SUBMISSION_GRADED","CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT","CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT","REMOVE_EXERCISE_SUBMISSION_GRADED_ALL","INITIAL_EXERCISE_SUBMISSION_GRADED","exercise_submission","removeExerciseNotGradedAll","addExerciseNotGraded","removeExerciseGradedAll","addExerciseGraded","ADD_COMPLETED","EDIT_COMPLETED","REMOVE_COMPLETED","CHANGE_COMPLETED_PENDING_EDIT","CLEAR_COMPLETED_PENDING_EDIT","REMOVE_COMPLETED_ALL","INITIAL_COMPLETED","ADD_WAITING","EDIT_WAITING","REMOVE_WAITING","CHANGE_WAITING_PENDING_EDIT","CLEAR_WAITING_PENDING_EDIT","REMOVE_WAITING_ALL","INITIAL_WAITING","removeCompletedAll","addCompleted","user_register_join_semester","removeWaitingAll","addWaiting","ADD_DOING_CLASS","EDIT_DOING_CLASS","REMOVE_DOING_CLASS","CHANGE_DOING_CLASS_PENDING_EDIT","CLEAR_DOING_CLASS_PENDING_EDIT","REMOVE_DOING_CLASS_ALL","INITIAL_DOING_CLASS","ADD_DONE_CLASS","EDIT_DONE_CLASS","REMOVE_DONE_CLASS","CHANGE_DONE_CLASS_PENDING_EDIT","CLEAR_DONE_CLASS_PENDING_EDIT","REMOVE_DONE_CLASS_ALL","INITIAL_DONE_CLASS","class_teacher","initialDoinglClass","removeDoinglClassAll","addDoinglClass","changeSelectedDoinglClass","initialDoneClass","removeDoneClassAll","addDoneClass","ADD_REGISTER_SUCCESSFULL_COURSE","EDIT_REGISTER_SUCCESSFULL_COURSE","REMOVE_REGISTER_SUCCESSFULL_COURSE","CHANGE_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT","CLEAR_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT","REMOVE_REGISTER_SUCCESSFULL_COURSE_ALL","INITIAL_REGISTER_SUCCESSFULL_COURSE","ADD_NOT_REGISTER_COURSE","EDIT_NOT_REGISTER_COURSE","REMOVE_NOT_REGISTER_COURSE","CHANGE_NOT_REGISTER_COURSE_PENDING_EDIT","CLEAR_NOT_REGISTER_COURSE_PENDING_EDIT","REMOVE_NOT_REGISTER_COURSE_ALL","INITIAL_NOT_REGISTER_COURSE","course","initialRegisterSuccessfullCourse","removeRegisterSuccessfullCourseAll","addRegisterSuccessfullCourse","initialNotRegisterCourse","removeNotRegisterCourseAll","addNotRegisterCourse","contest_submission","removeContestNotGradedAll","addContestNotGraded","removeContestGradedAll","addContestGraded","classes_student","classes_parent","ADD_CONTEST_SUBMISSION_TEACHER_NOT_GRADED","EDIT_CONTEST_SUBMISSION_TEACHER_NOT_GRADED","REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED","CHANGE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT","CLEAR_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT","REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_ALL","INITIAL_CONTEST_SUBMISSION_TEACHER_NOT_GRADED","ADD_CONTEST_SUBMISSION_TEACHER_GRADED","EDIT_CONTEST_SUBMISSION_TEACHER_GRADED","REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED","CHANGE_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT","CLEAR_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT","REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED_ALL","INITIAL_CONTEST_SUBMISSION_TEACHER_GRADED","contest_submission_teacher","removeContestSubmissionNotGradeAll","addContestSubmissionNotGrade","removeContestSubmissionGradeAll","addContestSubmissionGrade","ADD_TURNOVER_NOW","EDIT_TURNOVER_NOW","REMOVE_TURNOVER_NOW","CHANGE_TURNOVER_NOW_PENDING_EDIT","CLEAR_TURNOVER_NOW_PENDING_EDIT","REMOVE_TURNOVER_NOW_ALL","INITIAL_TURNOVER_NOW","ADD_TURNOVER_LAST","EDIT_TURNOVER_LAST","REMOVE_TURNOVER_LAST","CHANGE_TURNOVER_LAST_PENDING_EDIT","CLEAR_TURNOVER_LAST_PENDING_EDIT","REMOVE_TURNOVER_LAST_ALL","INITIAL_TURNOVER_LAST","turnover","removeTurnoverNowAll","addTurnoverNow","removeTurnoverLastAll","addTurnoverLast","ADD_USER_READED_NOTIFICATION","EDIT_USER_READED_NOTIFICATION","REMOVE_USER_READED_NOTIFICATION","CHANGE_USER_READED_NOTIFICATION_PENDING_EDIT","CLEAR_USER_READED_NOTIFICATION_PENDING_EDIT","REMOVE_USER_READED_NOTIFICATION_ALL","INITIAL_USER_READED_NOTIFICATION","ADD_USER_NOT_READED_NOTIFICATION","EDIT_USER_NOT_READED_NOTIFICATION","REMOVE_USER_NOT_READED_NOTIFICATION","CHANGE_USER_NOT_READED_NOTIFICATION_PENDING_EDIT","CLEAR_USER_NOT_READED_NOTIFICATION_PENDING_EDIT","REMOVE_USER_NOT_READED_NOTIFICATION_ALL","INITIAL_USER_NOT_READED_NOTIFICATION","user_read_notification","removeUserReadedNotificationAll","addUserReadedNotification","removeUserNotReadedNotificationAll","addUserNotReadedNotification","ADD_DOING_COURSE","EDIT_DOING_COURSE","REMOVE_DOING_COURSE","CHANGE_DOING_COURSE_PENDING_EDIT","CLEAR_DOING_COURSE_PENDING_EDIT","REMOVE_DOING_COURSE_ALL","INITIAL_DOING_COURSE","ADD_DONE_COURSE","EDIT_DONE_COURSE","REMOVE_DONE_COURSE","CHANGE_DONE_COURSE_PENDING_EDIT","CLEAR_DONE_COURSE_PENDING_EDIT","REMOVE_DONE_COURSE_ALL","INITIAL_DONE_COURSE","course_parent","removeCourseNotRegistedNowAll","addCourseNotRegistedNow","removeCourseRegistedAll","addCourseRegisted","ADD_TUTORIAL_PAGE","EDIT_TUTORIAL_PAGE","REMOVE_TUTORIAL_PAGE","REMOVE_TUTORIAL_PAGE_BY_NUMBER","CHANGE_TUTORIAL_PAGE_PENDING_EDIT","CLEAR_TUTORIAL_PAGE_PENDING_EDIT","REMOVE_TUTORIAL_PAGE_ALL","INITIAL_TUTORIAL_PAGE","tutorial_page","initialTutorialPage","removeTutorialPageAll","addTutorialPage","editTutorialPage","removeTutorialPage","ADD_LESSON","EDIT_LESSON","REMOVE_LESSON","CHANGE_LESSON_PENDING_EDIT","CLEAR_LESSON_PENDING_EDIT","REMOVE_LESSON_ALL","INITIAL_LESSON","lesson","initialLesson","removeLessonAll","addLesson","editLesson","changeSelectedLesson","clearSelectedLesson","ADD_SEMESTER_CLASS","EDIT_SEMESTER_CLASS","REMOVE_SEMESTER_CLASS","CHANGE_SEMESTER_CLASS_PENDING_EDIT","CLEAR_SEMESTER_CLASS_PENDING_EDIT","REMOVE_SEMESTER_CLASS_ALL","INITIAL_SEMESTER_CLASS","semester_class","initialSemesterClass","removeSemesterClassAll","addSemesterClass","editSemesterClass","changeSelectedSemesterClass","clearSelectedSemesterClass","setModificationStateSemesterClass","ADD_ANONYMOUS_NOTIFICATION","EDIT_ANONYMOUS_NOTIFICATION","REMOVE_ANONYMOUS_NOTIFICATION","CHANGE_ANONYMOUS_NOTIFICATION_PENDING_EDIT","CLEAR_ANONYMOUS_NOTIFICATION_PENDING_EDIT","REMOVE_ANONYMOUS_NOTIFICATION_ALL","INITIAL_ANONYMOUS_NOTIFICATION","addAnonymousNotification","anonymous_notification","editAnonymousNotification","clearSelectedAnonymousNotification","setModificationStateAnonymousNotification","ADD_SEMESTER","EDIT_SEMESTER","REMOVE_SEMESTER","CHANGE_SEMESTER_PENDING_EDIT","CLEAR_SEMESTER_PENDING_EDIT","REMOVE_SEMESTER_ALL","INITIAL_SEMESTER","semester","initialSemester","removeSemesterAll","addSemester","editSemester","removeSemester","changeSelectedSemester","clearSelectedSemester","ADD_COURSE","EDIT_COURSE","REMOVE_COURSE","CHANGE_COURSE_PENDING_EDIT","CLEAR_COURSE_PENDING_EDIT","REMOVE_COURSE_ALL","INITIAL_COURSE","initialCourse","removeCourseAll","addCourse","editCourse","removeCourse","changeSelectedCourse","clearSelectedCourse","ADD_MY_CLASS","EDIT_MY_CLASS","REMOVE_MY_CLASS","CHANGE_MY_CLASS_PENDING_EDIT","CLEAR_MY_CLASS_PENDING_EDIT","REMOVE_MY_CLASS_ALL","INITIAL_MY_CLASS","myclass","initialMyClass","removeMyClassAll","addMyClass","editMyClass","changeSelectedMyClass","clearSelectedMyClass","ADD_ART_AGE","EDIT_ART_AGE","REMOVE_ART_AGE","CHANGE_ART_AGE_PENDING_EDIT","CLEAR_ART_AGE_PENDING_EDIT","REMOVE_ART_AGE_ALL","INITIAL_ART_AGE","art_age","initialArtAge","removeArtAgeAll","addArtAge","editArtAge","removeArtAge","changeSelectedArtAge","clearSelectedArtAge","setModificationStateArtAge","ADD_EXERCISE","EDIT_EXERCISE","REMOVE_EXERCISE","CHANGE_EXERCISE_PENDING_EDIT","CLEAR_EXERCISE_PENDING_EDIT","REMOVE_EXERCISE_ALL","INITIAL_EXERCISE","exercise","initialExercise","removeExerciseAll","addExercise","editExercise","changeSelectedExercise","clearSelectedExercise","ADD_ART_TYPE","EDIT_ART_TYPE","REMOVE_ART_TYPE","CHANGE_ART_TYPE_PENDING_EDIT","CLEAR_ART_TYPE_PENDING_EDIT","REMOVE_ART_TYPE_ALL","INITIAL_ART_TYPE","art_type","initialArtType","removeArtTypeAll","addArtType","editArtType","removeArtType","changeSelectedArtType","clearSelectedArtType","ADD_SCHEDULE","EDIT_SCHEDULE","REMOVE_SCHEDULE","CHANGE_SCHEDULE_PENDING_EDIT","CLEAR_SCHEDULE_PENDING_EDIT","REMOVE_SCHEDULE_ALL","INITIAL_SCHEDULE","schedule","initialSchedule","removeScheduleAll","addSchedule","ADD_ART_LEVEL","EDIT_ART_LEVEL","REMOVE_ART_LEVEL","CHANGE_ART_LEVEL_PENDING_EDIT","CLEAR_ART_LEVEL_PENDING_EDIT","REMOVE_ART_LEVEL_ALL","INITIAL_ART_LEVEL","art_level","initialArtLevel","removeArtLevelAll","addArtLevel","editArtLevel","removeArtLevel","changeSelectedArtLevel","clearSelectedArtLevel","setModificationStateArtLevel","ADD_SECTION_TEMPLATE","EDIT_SECTION_TEMPLATE","REMOVE_SECTION_TEMPLATE","CHANGE_SECTION_TEMPLATE_PENDING_EDIT","CLEAR_SECTION_TEMPLATE_PENDING_EDIT","REMOVE_SECTION_TEMPLATE_ALL","INITIAL_SECTION_TEMPLATE","section_template","initialSectionTemplate","removeSectionTemplateAll","addSectionTemplate","changeSelectedSectionTemplate","clearSelectedSectionTemplate","setModificationStateSectionTemplate","ADD_USER_REGISTER_JOIN_SEMESTER","EDIT_USER_REGISTER_JOIN_SEMESTER","REMOVE_USER_REGISTER_JOIN_SEMESTER","CHANGE_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT","CLEAR_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT","REMOVE_USER_REGISTER_JOIN_SEMESTER_ALL","INITIAL_USER_REGISTER_JOIN_SEMESTER","user_register_tutorial_page","removeUserRegisterTutorialPageAll","addUserRegisterTutorialPage","editUserRegisterTutorialPage","removeUserRegisterTutorialPage","ADD_TUTORIAL_TEMPLATE_PAGE","EDIT_TUTORIAL_TEMPLATE_PAGE","REMOVE_TUTORIAL_TEMPLATE_PAGE","CHANGE_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT","CLEAR_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT","REMOVE_TUTORIAL_TEMPLATE_PAGE_ALL","INITIAL_TUTORIAL_TEMPLATE_PAGE","tutorial_template_page","initialTutorialTemplatePage","removeTutorialTemplatePageAll","removeTutorialTemplatePage","ADD_SECTION","EDIT_SECTION","REMOVE_SECTION","CHANGE_SECTION_PENDING_EDIT","CLEAR_SECTION_PENDING_EDIT","REMOVE_SECTION_ALL","INITIAL_SECTION","section","initialSection","removeSectionAll","addSection","ADD_TIME_SCHEDULE","EDIT_TIME_SCHEDULE","REMOVE_TIME_SCHEDULE","CHANGE_TIME_SCHEDULE_PENDING_EDIT","CLEAR_TIME_SCHEDULE_PENDING_EDIT","REMOVE_TIME_SCHEDULE_ALL","INITIAL_TIME_SCHEDULE","schedule_time_class","removeScheduleTimeClassAll","addScheduleTimeClass","ADD_ATTENDANCE","EDIT_ATTENDANCE","REMOVE_ATTENDANCE","CHANGE_ATTENDANCE_PENDING_EDIT","CLEAR_ATTENDANCE_PENDING_EDIT","REMOVE_ATTENDANCE_ALL","INITIAL_ATTENDANCE","attendance","initialAttendance","removeAttendanceAll","addAttendance","ADD_CHILD","EDIT_CHILD","REMOVE_CHILD","CHANGE_CHILD_PENDING_EDIT","CLEAR_CHILD_PENDING_EDIT","REMOVE_CHILD_ALL","INITIAL_CHILD","child","initialChild","removeChildAll","addChild","editChild","changeSelectedChild","clearSelectedChild","ADD_INFORMATION_CLASS","EDIT_INFORMATION_CLASS","REMOVE_INFORMATION_CLASS","CHANGE_INFORMATION_CLASS_PENDING_EDIT","CLEAR_INFORMATION_CLASS_PENDING_EDIT","REMOVE_INFORMATION_CLASS_ALL","INITIAL_INFORMATION_CLASS","removeInformationClassAll","addInformationClass","information_class","removeTimeScheduleAll","addTimeSchedule","time_schedule","ADD_USER_GRADE_CONTEST_SUBMISSION","EDIT_USER_GRADE_CONTEST_SUBMISSION","REMOVE_USER_GRADE_CONTEST_SUBMISSION","CHANGE_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT","CLEAR_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT","REMOVE_USER_GRADE_CONTEST_SUBMISSION_ALL","INITIAL_USER_GRADE_CONTEST_SUBMISSION","user_grade_contest_submission","removeUserGradeContestSubmissionAll","addUserGradeContestSubmission","ADD_CHILDS_CLASS","EDIT_CHILDS_CLASS","REMOVE_CHILDS_CLASS","CHANGE_CHILDS_CLASS_PENDING_EDIT","CLEAR_CHILDS_CLASS_PENDING_EDIT","REMOVE_CHILDS_CLASS_ALL","INITIAL_CHILDS_CLASS","childs_class","removeChildsClassAll","addChildsClass","ADD_TUTORIAL_TEMPLATE","EDIT_TUTORIAL_TEMPLATE","REMOVE_TUTORIAL_TEMPLATE","CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT","CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT","REMOVE_TUTORIAL_TEMPLATE_ALL","INITIAL_TUTORIAL_TEMPLATE","user_grade_contest","initialUserGradeContest","removeUserGradeContestAll","addUserGradeContest","ADD_TIME_SCHEDULE_TEACHER","EDIT_TIME_SCHEDULE_TEACHER","REMOVE_TIME_SCHEDULE_TEACHER","CHANGE_TIME_SCHEDULE_TEACHER_PENDING_EDIT","CLEAR_TIME_SCHEDULE_TEACHER_PENDING_EDIT","REMOVE_TIME_SCHEDULE_TEACHER_ALL","INITIAL_TIME_SCHEDULE_TEACHER","time_schedule_teacher","removeTimeScheduleTeacherAll","addTimeScheduleTeacher","ADD_REPORT_USER","EDIT_REPORT_USER","REMOVE_REPORT_USER","CHANGE_REPORT_USER_PENDING_EDIT","CLEAR_REPORT_USER_PENDING_EDIT","REMOVE_REPORT_USER_ALL","INITIAL_REPORT_USER","removeReportUserAll","addReportUser","report_user","ADD_COURSE_REPORT","EDIT_COURSE_REPORT","REMOVE_COURSE_REPORT","CHANGE_COURSE_REPORT_PENDING_EDIT","CLEAR_COURSE_REPORT_PENDING_EDIT","REMOVE_COURSE_REPORT_ALL","INITIAL_COURSE_REPORT","removeCourseReportAll","addCourseReport","course_report","ADD_NOTIFY_DB","EDIT_NOTIFY_DB","REMOVE_NOTIFY_DB","CHANGE_NOTIFY_DB_PENDING_EDIT","CLEAR_NOTIFY_DB_PENDING_EDIT","REMOVE_NOTIFY_DB_ALL","INITIAL_NOTIFY_DB","initialNotifyDb","notify_db","removeNotifyDbAll","ADD_NOTIFY","EDIT_NOTIFY","REMOVE_NOTIFY","CHANGE_NOTIFY_PENDING_EDIT","CLEAR_NOTIFY_PENDING_EDIT","REMOVE_NOTIFY_ALL","INITIAL_NOTIFY","initialNotify","notify","removeNotifyAll","ADD_CART","EDIT_CART","REMOVE_CART","INCREASE_QUANTITY","DECREASE_QUANTITY","CHANGE_CART_PENDING_EDIT","CLEAR_CART_PENDING_EDIT","addCart","cart","ADD_PROFILE","EDIT_PROFILE","REMOVE_PROFILE","CHANGE_PROFILE_PENDING_EDIT","CLEAR_PROFILE_PENDING_EDIT","REMOVE_PROFILE_ALL","INITIAL_PROFILE","profile","removeProfileAll","addProfile","ADD_COURSE_NEW","EDIT_COURSE_NEW","REMOVE_COURSE_NEW","CHANGE_COURSE_NEW_PENDING_EDIT","CLEAR_COURSE_NEW_PENDING_EDIT","REMOVE_COURSE_NEW_ALL","INITIAL_COURSE_NEW","course_new","initialCourseNew","removeCourseNewAll","addCourseNew","ADD_CLASS_HAS_REGISTER_JOIN_SEMESTER","EDIT_CLASS_HAS_REGISTER_JOIN_SEMESTER","REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER","CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT","CLEAR_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT","REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER_ALL","INITIAL_CLASS_HAS_REGISTER_JOIN_SEMESTER","removeClassHasRegisterJoinSemesterAll","addClassHasRegisterJoinSemester","class_has_register_join_semester","ADD_COURSE_PARENT_NEW","EDIT_COURSE_PARENT_NEW","REMOVE_COURSE_PARENT_NEW","CHANGE_COURSE_PARENT_NEW_PENDING_EDIT","CLEAR_COURSE_PARENT_NEW_PENDING_EDIT","REMOVE_COURSE_PARENT_NEW_ALL","INITIAL_COURSE_PARENT_NEW","course_parent_new","initialCourseParentNew","removeCourseParentNewAll","addCourseParentNew","contest_parent_new","initialContestParentNew","removeContestParentNewAll","addContestParentNew","ADD_COURSE_TEACHER_NEW","EDIT_COURSE_TEACHER_NEW","REMOVE_COURSE_TEACHER_NEW","CHANGE_COURSE_TEACHER_NEW_PENDING_EDIT","CLEAR_COURSE_TEACHER_NEW_PENDING_EDIT","REMOVE_COURSE_TEACHER_NEW_ALL","INITIAL_COURSE_TEACHER_NEW","course_teacher_new","initialCourseTeacherNew","removeCourseTeacherNewAll","addCourseTeacherNew","ADD_SEMESTER_CLASS_TEACHER","EDIT_SEMESTER_CLASS_TEACHER","REMOVE_SEMESTER_CLASS_TEACHER","CHANGE_SEMESTER_CLASS_TEACHER_PENDING_EDIT","CLEAR_SEMESTER_CLASS_TEACHER_PENDING_EDIT","REMOVE_SEMESTER_CLASS_TEACHER_ALL","INITIAL_SEMESTER_CLASS_TEACHER","semester_class_teacher","removeSemesterClassTeacherAll","addSemesterClassTeacher","ADD_FINAL_SCORE_CHILD","EDIT_FINAL_SCORE_CHILD","REMOVE_FINAL_SCORE_CHILD","CHANGE_FINAL_SCORE_CHILD_PENDING_EDIT","CLEAR_FINAL_SCORE_CHILD_PENDING_EDIT","REMOVE_FINAL_SCORE_CHILD_ALL","INITIAL_FINAL_SCORE_CHILD","final_score_child","removeFinalScoreChildAll","addFinalScoreChild","ADD_SECTION_TEACHER","EDIT_SECTION_TEACHER","REMOVE_SECTION_TEACHER","CHANGE_SECTION_TEACHER_PENDING_EDIT","CLEAR_SECTION_TEACHER_PENDING_EDIT","REMOVE_SECTION_TEACHER_ALL","INITIAL_SECTION_TEACHER","section_teacher","removeSectionTeacherAll","addSectionTeacher","ADD_PRODUCT","EDIT_PRODUCT","REMOVE_PRODUCT","CHANGE_PRODUCT_AMOUNT","CHANGE_PRODUCT_PENDING_EDIT","CLEAR_PRODUCT_PENDING_EDIT","changeSelectedProduct","product","clearSelectedProduct","LOG_IN","LOG_OUT","login","username","logout","ADD_NOTIFICATION","REMOVE_NOTIFICATION","addNotification","title","text","UPDATE_CURRENT_PATH","updateCurrentPath","area","subArea","UserModificationStatus","AnonymousNotificationModificationStatus","LessonModificationStatus","StudentLeaveModificationStatus","MyClassModificationStatus","CourseModificationStatus","TeacherRegisterQuantificationModificationStatus","ProductModificationStatus","SemesterModificationStatus","ArtTypeModificationStatus","ArtLevelModificationStatus","ArtAgeModificationStatus","ContestModificationStatus","SemesterClassModificationStatus","ExerciseModificationStatus","UserRegisterTutorialModificationStatus","SectionTemplateModificationStatus","ClassTeacherModificationStatus","ChildModificationStatus","ClassesStudentModificationStatus","ClassesParentModificationStatus","PrivateRoute","children","rest","useSelector","state","account","render","localStorage","getItem","to","pathname","Routers","lazy","LandingPage","ForgotPassword","UpdatePassword","RegisterForm","PaymentSuccessfull","Login","App","className","path","Boolean","window","location","hostname","match","initialState","modificationState","None","selectedProduct","products","productsReducer","action","foundIndex","findIndex","pr","filter","amount","notifications","date","Date","notificationReducer","notification","Notification","selectedUser","admins","teachers","students","parents","userReducer","x","ADD_ORDER","orders","orderReducer","order","accountReducer","selectedSemester","semesters","semestersReducer","selectedLesson","lessons","lessonsReducer","ScheduleModificationStatus","selectedSchedule","schedules","schedulesReducer","ScheduleItemModificationStatus","ADD_SCHEDULE_ITEM","EDIT_SCHEDULE_ITEM","REMOVE_SCHEDULE_ITEM","CHANGE_SCHEDULE_ITEM_PENDING_EDIT","CLEAR_SCHEDULE_ITEM_PENDING_EDIT","REMOVE_SCHEDULE_ITEM_ALL","INITIAL_SCHEDULE_ITEM","selectedScheduleItem","schedule_items","schedule_itemsReducer","schedule_item","selectedArtType","artTypes","artTypesReducer","selectedArtLevel","artLevels","artLevelsReducer","selectedArtAge","artAges","artAgesReducer","selectedCourse","courses","coursesReducer","selectedContest","contest_opening","contest_not_open_now","contest_end","contestsReducer","selectedSectionTemplate","sectionTemplates","sectionTemplatesReducer","TutorialTemplateModificationStatus","selectedTutorialTemplate","tutorialTemplates","tutorialTemplatesReducer","UserGradeContestModificationStatus","tutorial_template","selectedUserGradeContest","userGradeContests","userGradeContestsReducer","TutorialTemplatePageModificationStatus","selectedTutorialTemplatePage","tutorialTemplatePages","tutorialTemplatePagesReducer","TeacherLeaveModificationStatus","selectedTeacherLeave","leaves","acceptLeaves","removeLeaves","teacherLeaveReducer","leavess","accept_leaves","remove_leaves","selectedStudentLeave","studentLeaveReducer","selectedMyClass","myClasses","myClassesReducer","selectedTeacherRegisterQuantification","approveds","not_approved_now","not_approves","teacher_register_quantificationsReducer","InformationClassModificationStatus","not_approveds","selectedInformationClass","informationClasses","informationClassesReducer","TimeScheduleModificationStatus","selectedTimeSchedule","timeSchedules","time_schedulesReducer","CourseTeacherModificationStatus","time_schedules","selectedCourseTeacher","register_successfull_courses","not_register_courses","courseTeachersReducer","TimeScheduleTeacherModificationStatus","selectedTimeScheduleTeacher","timeScheduleTeachers","time_schedule_teachersReducer","time_schedule_teachers","selectedClassTeacher","class_doing","class_done","classTeachersReducer","ContestTeacherModificationStatus","selectedContestTeacher","contest_not_open_now_not_teacher","contestTeachersReducer","selectedSemesterClass","semesterClasses","semesterClassesReducer","selectedAnonymousNotification","anonymousNotificationsReducer","SectionModificationStatus","selectedSection","sections","sectionsReducer","TutorialPageModificationStatus","selectedTutorialPage","tutorialPages","tutorialPagesReducer","number","selectedExercise","exercises","exercisesReducer","ExerciseSubmissionModificationStatus","selectedExerciseSubmission","exercise_not_gradeds","exercise_gradeds","exerciseSubmissionsReducer","TurnoverModificationStatus","selectedTurnover","turnover_now","turnover_last","turnoversReducer","ReportUserModificationStatus","selectedReportUser","report_users","report_usersReducer","CourseReportModificationStatus","total","selectedCourseReport","course_reports","course_reportsReducer","ExerciseLevelModificationStatus","total_register","ADD_EXERCISE_LEVEL","EDIT_EXERCISE_LEVEL","REMOVE_EXERCISE_LEVEL","CHANGE_EXERCISE_LEVEL_PENDING_EDIT","CLEAR_EXERCISE_LEVEL_PENDING_EDIT","REMOVE_EXERCISE_LEVEL_ALL","INITIAL_EXERCISE_LEVEL","selectedExerciseLevel","exercise_levels","exercise_levelsReducer","ExerciseStudentModificationStatus","exercise_level","selectedExerciseStudent","exercise_not_submit","exercise_submitted_not_grade","exercise_submitted_graded","exerciseStudentReducer","TutorialModificationStatus","exercise_not_submits","accept_exercise_not_submit","remove_exercise_not_submit","ADD_TUTORIAL","EDIT_TUTORIAL","REMOVE_TUTORIAL","CHANGE_TUTORIAL_PENDING_EDIT","CLEAR_TUTORIAL_PENDING_EDIT","REMOVE_TUTORIAL_ALL","INITIAL_TUTORIAL","selectedTutorial","tutorials","UserGradeContestSubmissionModificationStatus","tutorial","selectedUserGradeContestSubmission","userGradeContestSubmissions","userGradeContestSubmissionsReducer","UserRegisterTutorialPageModificationStatus","student_id","selectedUserRegisterTutorialPage","user_register_tutorial_pages","user_register_tutorial_pagesReducer","selectedUserRegisterTutorial","user_register_tutorial_not_approved_nows","user_register_tutorial_not_approveds","user_register_tutorial_approveds","user_register_tutorial_approved_to_tutorial_templates","userRegisterTutorialReducer","ContestSubmissionModificationStatus","user_register_tutorials","selectedContestSubmission","contest_not_gradeds","contest_gradeds","contestSubmissionsReducer","ScheduleTimeClassModificationStatus","selectedScheduleTimeClass","schedule_time_classes","schedule_time_classsReducer","NotifyDbModificationStatus","schedule_time_classs","selectedNotifyDb","notify_dbs","notify_dbsReducer","UserReadNotificationModificationStatus","selectedUserReadNotification","user_readed_notifications","user_not_readed_notifications","userReadNotificationsReducer","NotifyModificationStatus","notification_id","selectedNotify","notifys","notifysReducer","idx","selectedClassesStudent","classes_doing","classes_done","classesStudentsReducer","selectedClassesParent","classesParentsReducer","CourseParentModificationStatus","selectedCourseParent","courses_registed","courses_not_registed_now","courseParentsReducer","ContestStudentModificationStatus","selectedContestStudent","contest_new","contestStudentsReducer","CartModificationStatus","selectedCart","carts","cartReducer","AttendanceModificationStatus","quantity","selectedAttendance","attendances","attendancesReducer","ProfileModificationStatus","selectedProfile","profiles","profilesReducer","UserRegisterJoinSemesterModificationStatus","selectedUserRegisterJoinSemester","completed","waiting","user_register_join_semestersReducer","CourseStudentModificationStatus","selectedCourseStudent","courseStudentsReducer","CourseNewModificationStatus","course_student","selectedCourseNew","course_news","course_newsReducer","SemesterClassStudentModificationStatus","selectedSemesterClassStudent","not_payed_now","payed","not_payed","semesterClassStudentReducer","ClassHasRegisterJoinSemesterModificationStatus","accept_not_payed_now","remove_not_payed_now","selectedClassHasRegisterJoinSemester","class_has_register_join_semesters","class_has_register_join_semestersReducer","CourseParentNewModificationStatus","classes_id","selectedCourseParentNew","course_parent_newsReducer","SemesterClassParentModificationStatus","selectedSemesterClassParent","semesterClassParentReducer","ContestParentNewModificationStatus","selectedContestParentNew","contests","contest_parent_newsReducer","CourseTeacherNewModificationStatus","selectedCourseTeacherNew","course_teacher_newsReducer","SemesterClassTeacherModificationStatus","selectedSemesterClassTeacher","semester_class_teachers","semester_class_teachersReducer","ContestSubmissionTeacherModificationStatus","selectedContestSubmissionTeacher","contest_submission_not_grade","contest_submission_grade","contestSubmissionTeachersReducer","selectedChild","childs","childsReducer","FinalScoreChildModificationStatus","selectedFinalScoreChild","final_score_childs","final_score_childsReducer","ExerciseTeacherModificationStatus","course_id","selectedExerciseTeacher","exercise_no_submissions","exercise_scoring","exercise_scroring_done","exerciseTeacherReducer","ContestParentModificationStatus","exercise_no_submissionss","accept_exercise_no_submissions","remove_exercise_no_submissions","selectedContestParent","contestParentsReducer","ExerciseParentModificationStatus","selectedExerciseParent","exerciseParentReducer","ChildsClassModificationStatus","selectedChildsClass","childs_classReducer","SectionTeacherModificationStatus","selectedSectionTeacher","section_teachersReducer","page","rootReducers","combineReducers","root","users","art_types","art_levels","art_ages","semester_classes","section_templates","tutorial_templates","user_grade_contests","tutorial_template_pages","teacher_leaves","student_leaves","user_register_join_semesters","myclasses","teacher_register_quantifications","information_classes","course_teachers","class_teachers","contest_teachers","anonymous_notifications","tutorial_pages","exercise_submissions","turnovers","exercise_students","exerciseStudentsReducer","tutorialsReducer","user_grade_contest_submissions","contest_submissions","user_read_notifications","classes_students","classes_studentsReducer","classes_parents","course_parents","contest_students","course_students","course_parent_news","exercise_teachers","contest_parents","exercise_parents","childs_classes","section_teachers","store","createStore","applyMiddleware","thunkMiddleware","subscribe","ReactDOM","fallback","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.448c955f.chunk.js","sourcesContent":["import { IContestTeacher, ContestTeacherModificationStatus } from \"../models/contest_teacher.interface\";\r\n\r\n// contest_opening\r\nexport const ADD_CONTEST_TEACHER_OPENING: string = \"ADD_CONTEST_TEACHER_OPENING\";\r\nexport const EDIT_CONTEST_TEACHER_OPENING: string = \"EDIT_CONTEST_TEACHER_OPENING\";\r\nexport const REMOVE_CONTEST_TEACHER_OPENING: string = \"REMOVE_CONTEST_TEACHER_OPENING\";\r\nexport const CHANGE_CONTEST_TEACHER_OPENING_AMOUNT: string = \"CHANGE_CONTEST_TEACHER_OPENING_AMOUNT\";\r\nexport const CHANGE_CONTEST_TEACHER_OPENING_PENDING_EDIT: string = \"CHANGE_CONTEST_TEACHER_OPENING_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_TEACHER_OPENING_PENDING_EDIT: string = \"CLEAR_CONTEST_TEACHER_OPENING_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_TEACHER_OPENING_ALL: string = \"REMOVE_CONTEST_TEACHER_OPENING_ALL\";\r\nexport const INITIAL_CONTEST_TEACHER_OPENING: string = \"INITIAL_CONTEST_TEACHER_OPENING\";\r\n\r\n// contest_not_open_now_not_teacher\r\nexport const ADD_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: string = \"ADD_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER\";\r\nexport const EDIT_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: string = \"EDIT_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER\";\r\nexport const REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: string = \"REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER\";\r\nexport const CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_AMOUNT: string = \"CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_AMOUNT\";\r\nexport const CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT: string = \"CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT: string = \"CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_ALL: string = \"REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_ALL\";\r\nexport const INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: string = \"INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER\";\r\n\r\n// contest_end\r\nexport const ADD_CONTEST_TEACHER_END: string = \"ADD_CONTEST_TEACHER_END\";\r\nexport const EDIT_CONTEST_TEACHER_END: string = \"EDIT_CONTEST_TEACHER_END\";\r\nexport const REMOVE_CONTEST_TEACHER_END: string = \"REMOVE_CONTEST_TEACHER_END\";\r\nexport const CHANGE_CONTEST_TEACHER_END_AMOUNT: string = \"CHANGE_CONTEST_TEACHER_END_AMOUNT\";\r\nexport const CHANGE_CONTEST_TEACHER_END_PENDING_EDIT: string = \"CHANGE_CONTEST_TEACHER_END_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_TEACHER_END_PENDING_EDIT: string = \"CLEAR_CONTEST_TEACHER_END_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_TEACHER_END_ALL: string = \"REMOVE_CONTEST_TEACHER_END_ALL\";\r\nexport const INITIAL_CONTEST_TEACHER_END: string = \"INITIAL_CONTEST_TEACHER_END\";\r\n\r\n//contest_not_open_now\r\nexport const ADD_CONTEST_TEACHER_NOT_OPEN_NOW: string = \"ADD_CONTEST_TEACHER_NOT_OPEN_NOW\";\r\nexport const EDIT_CONTEST_TEACHER_NOT_OPEN_NOW: string = \"EDIT_CONTEST_TEACHER_NOT_OPEN_NOW\";\r\nexport const REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW: string = \"REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW\";\r\nexport const CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_AMOUNT: string = \"CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_AMOUNT\";\r\nexport const CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT: string = \"CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT: string = \"CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_ALL: string = \"REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_ALL\";\r\nexport const INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW: string = \"INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW\";\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(contest: IContestTeacher) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        contest\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\n// Opening\r\nexport function initialContestTeacherOpening(contest: IContestTeacher): IInitialContestTeacherOpeningActionType {\r\n    return { type: INITIAL_CONTEST_TEACHER_OPENING, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherOpeningAll(): IRemoveContestTeacherOpeningAllActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_OPENING_ALL };\r\n}\r\n\r\nexport function addContestTeacherOpening(contest: IContestTeacher): IAddContestTeacherOpeningActionType {\r\n    return { type: ADD_CONTEST_TEACHER_OPENING, contest: contest };\r\n}\r\n\r\nexport function editContestTeacherOpening(contest: IContestTeacher): IEditContestTeacherOpeningActionType {\r\n    return { type: EDIT_CONTEST_TEACHER_OPENING, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherOpening(id: any): IRemoveContestTeacherOpeningActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_OPENING, id: id };\r\n}\r\n\r\nexport function changeSelectedContestTeacherOpening(contest: IContestTeacher): IChangeSelectedContestTeacherOpeningActionType {\r\n    return { type: CHANGE_CONTEST_TEACHER_OPENING_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestTeacherOpening(): IClearSelectedContestTeacherOpeningActionType {\r\n    return { type: CLEAR_CONTEST_TEACHER_OPENING_PENDING_EDIT };\r\n}\r\n\r\n// Not open not teacher\r\nexport function initialContestTeacherNotOpenNowNotTeacher(contest: IContestTeacher): IInitialContestTeacherNotOpenNowNotTeacherActionType {\r\n    return { type: INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherNotOpenNowNotTeacherAll(): IRemoveContestTeacherNotOpenNowNotTeacherAllActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_ALL };\r\n}\r\n\r\nexport function addContestTeacherNotOpenNowNotTeacher(contest: IContestTeacher): IAddContestTeacherNotOpenNowNotTeacherActionType {\r\n    return { type: ADD_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, contest: contest };\r\n}\r\n\r\nexport function editContestTeacherNotOpenNowNotTeacher(contest: IContestTeacher): IEditContestTeacherNotOpenNowNotTeacherActionType {\r\n    return { type: EDIT_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherNotOpenNowNotTeacher(id: any): IRemoveContestTeacherNotOpenNowNotTeacherActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, id: id };\r\n}\r\n\r\nexport function changeSelectedContestNotOpenNowNotTeacher(contest: IContestTeacher): IChangeSelectedContestTeacherNotOpenNowNotTeacherActionType {\r\n    return { type: CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestTeacherNotOpenNowNotTeacher(): IClearSelectedContestTeacherNotOpenNowNotTeacherActionType {\r\n    return { type: CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT };\r\n}\r\n\r\n// End\r\nexport function initialContestTeacherEnd(contest: IContestTeacher): IInitialContestTeacherEndActionType {\r\n    return { type: INITIAL_CONTEST_TEACHER_END, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherEndAll(): IRemoveContestTeacherEndAllActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_END_ALL };\r\n}\r\n\r\nexport function addContestTeacherEnd(contest: IContestTeacher): IAddContestTeacherEndActionType {\r\n    return { type: ADD_CONTEST_TEACHER_END, contest: contest };\r\n}\r\n\r\nexport function editContestTeacherEnd(contest: IContestTeacher): IEditContestTeacherEndActionType {\r\n    return { type: EDIT_CONTEST_TEACHER_END, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherEnd(id: any): IRemoveContestTeacherEndActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_END, id: id };\r\n}\r\n\r\nexport function changeSelectedContestTeacherEnd(contest: IContestTeacher): IChangeSelectedContestTeacherEndActionType {\r\n    return { type: CHANGE_CONTEST_TEACHER_END_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestTeacherEnd(): IClearSelectedContestTeacherEndActionType {\r\n    return { type: CLEAR_CONTEST_TEACHER_END_PENDING_EDIT };\r\n}\r\n\r\n// Not open now\r\nexport function initialContestTeacherNotOpenNow(contest: IContestTeacher): IInitialContestTeacherNotOpenNowActionType {\r\n    return { type: INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherNotOpenNowAll(): IRemoveContestTeacherNotOpenNowAllActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_ALL };\r\n}\r\n\r\nexport function addContestTeacherNotOpenNow(contest: IContestTeacher): IAddContestTeacherNotOpenNowActionType {\r\n    return { type: ADD_CONTEST_TEACHER_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function editContestTeacherNotOpenNow(contest: IContestTeacher): IEditContestTeacherNotOpenNowActionType {\r\n    return { type: EDIT_CONTEST_TEACHER_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function removeContestTeacherNotOpenNow(id: any): IRemoveContestTeacherNotOpenNowActionType {\r\n    return { type: REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedContestTeacherNotOpenNow(contest: IContestTeacher): IChangeSelectedContestTeacherNotOpenNowActionType {\r\n    return { type: CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestTeacherNotOpenNow(): IClearSelectedContestTeacherNotOpenNowActionType {\r\n    return { type: CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function setModificationState(value: ContestTeacherModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_contests\r\ninterface IAddContestTeacherOpeningActionType { type: string, contest: IContestTeacher };\r\ninterface IEditContestTeacherOpeningActionType { type: string, contest: IContestTeacher };\r\ninterface IRemoveContestTeacherOpeningActionType { type: string, id: any };\r\ninterface IChangeSelectedContestTeacherOpeningActionType { type: string, contest: IContestTeacher };\r\ninterface IClearSelectedContestTeacherOpeningActionType { type: string };\r\ninterface IRemoveContestTeacherOpeningAllActionType { type: string }\r\ninterface IInitialContestTeacherOpeningActionType {type: string, contest: IContestTeacher}\r\n\r\n// not_register_contests\r\ninterface IAddContestTeacherNotOpenNowNotTeacherActionType { type: string, contest: IContestTeacher };\r\ninterface IEditContestTeacherNotOpenNowNotTeacherActionType { type: string, contest: IContestTeacher };\r\ninterface IRemoveContestTeacherNotOpenNowNotTeacherActionType { type: string, id: any };\r\ninterface IChangeSelectedContestTeacherNotOpenNowNotTeacherActionType { type: string, contest: IContestTeacher };\r\ninterface IClearSelectedContestTeacherNotOpenNowNotTeacherActionType { type: string };\r\ninterface IRemoveContestTeacherNotOpenNowNotTeacherAllActionType { type: string }\r\ninterface IInitialContestTeacherNotOpenNowNotTeacherActionType {type: string, contest: IContestTeacher}\r\n\r\n// not_register_contests\r\ninterface IAddContestTeacherEndActionType { type: string, contest: IContestTeacher };\r\ninterface IEditContestTeacherEndActionType { type: string, contest: IContestTeacher };\r\ninterface IRemoveContestTeacherEndActionType { type: string, id: any };\r\ninterface IChangeSelectedContestTeacherEndActionType { type: string, contest: IContestTeacher };\r\ninterface IClearSelectedContestTeacherEndActionType { type: string };\r\ninterface IRemoveContestTeacherEndAllActionType { type: string }\r\ninterface IInitialContestTeacherEndActionType {type: string, contest: IContestTeacher}\r\n\r\n// not_register_contests\r\ninterface IAddContestTeacherNotOpenNowActionType { type: string, contest: IContestTeacher };\r\ninterface IEditContestTeacherNotOpenNowActionType { type: string, contest: IContestTeacher };\r\ninterface IRemoveContestTeacherNotOpenNowActionType { type: string, id: any };\r\ninterface IChangeSelectedContestTeacherNotOpenNowActionType { type: string, contest: IContestTeacher };\r\ninterface IClearSelectedContestTeacherNotOpenNowActionType { type: string };\r\ninterface IRemoveContestTeacherNotOpenNowAllActionType { type: string }\r\ninterface IInitialContestTeacherNotOpenNowActionType {type: string, contest: IContestTeacher}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ContestTeacherModificationStatus};","import { IContestStudent, ContestStudentModificationStatus } from \"../models/contest_student.interface\";\r\n\r\n// contest_opening\r\nexport const ADD_CONTEST_STUDENT_OPENING: string = \"ADD_CONTEST_STUDENT_OPENING\";\r\nexport const EDIT_CONTEST_STUDENT_OPENING: string = \"EDIT_CONTEST_STUDENT_OPENING\";\r\nexport const REMOVE_CONTEST_STUDENT_OPENING: string = \"REMOVE_CONTEST_STUDENT_OPENING\";\r\nexport const CHANGE_CONTEST_STUDENT_OPENING_AMOUNT: string = \"CHANGE_CONTEST_STUDENT_OPENING_AMOUNT\";\r\nexport const CHANGE_CONTEST_STUDENT_OPENING_PENDING_EDIT: string = \"CHANGE_CONTEST_STUDENT_OPENING_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_STUDENT_OPENING_PENDING_EDIT: string = \"CLEAR_CONTEST_STUDENT_OPENING_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_STUDENT_OPENING_ALL: string = \"REMOVE_CONTEST_STUDENT_OPENING_ALL\";\r\nexport const INITIAL_CONTEST_STUDENT_OPENING: string = \"INITIAL_CONTEST_STUDENT_OPENING\";\r\n\r\n// contest_not_open_now_not_student\r\nexport const ADD_CONTEST_STUDENT_NEW: string = \"ADD_CONTEST_STUDENT_NEW\";\r\nexport const EDIT_CONTEST_STUDENT_NEW: string = \"EDIT_CONTEST_STUDENT_NEW\";\r\nexport const REMOVE_CONTEST_STUDENT_NEW: string = \"REMOVE_CONTEST_STUDENT_NEW\";\r\nexport const CHANGE_CONTEST_STUDENT_NEW_AMOUNT: string = \"CHANGE_CONTEST_STUDENT_NEW_AMOUNT\";\r\nexport const CHANGE_CONTEST_STUDENT_NEW_PENDING_EDIT: string = \"CHANGE_CONTEST_STUDENT_NEW_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_STUDENT_NEW_PENDING_EDIT: string = \"CLEAR_CONTEST_STUDENT_NEW_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_STUDENT_NEW_ALL: string = \"REMOVE_CONTEST_STUDENT_NEW_ALL\";\r\nexport const INITIAL_CONTEST_STUDENT_NEW: string = \"INITIAL_CONTEST_STUDENT_NEW\";\r\n\r\n// contest_end\r\nexport const ADD_CONTEST_STUDENT_END: string = \"ADD_CONTEST_STUDENT_END\";\r\nexport const EDIT_CONTEST_STUDENT_END: string = \"EDIT_CONTEST_STUDENT_END\";\r\nexport const REMOVE_CONTEST_STUDENT_END: string = \"REMOVE_CONTEST_STUDENT_END\";\r\nexport const CHANGE_CONTEST_STUDENT_END_AMOUNT: string = \"CHANGE_CONTEST_STUDENT_END_AMOUNT\";\r\nexport const CHANGE_CONTEST_STUDENT_END_PENDING_EDIT: string = \"CHANGE_CONTEST_STUDENT_END_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_STUDENT_END_PENDING_EDIT: string = \"CLEAR_CONTEST_STUDENT_END_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_STUDENT_END_ALL: string = \"REMOVE_CONTEST_STUDENT_END_ALL\";\r\nexport const INITIAL_CONTEST_STUDENT_END: string = \"INITIAL_CONTEST_STUDENT_END\";\r\n\r\n//contest_not_open_now\r\nexport const ADD_CONTEST_STUDENT_NOT_OPEN_NOW: string = \"ADD_CONTEST_STUDENT_NOT_OPEN_NOW\";\r\nexport const EDIT_CONTEST_STUDENT_NOT_OPEN_NOW: string = \"EDIT_CONTEST_STUDENT_NOT_OPEN_NOW\";\r\nexport const REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW: string = \"REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW\";\r\nexport const CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_AMOUNT: string = \"CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_AMOUNT\";\r\nexport const CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT: string = \"CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT: string = \"CLEAR_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW_ALL: string = \"REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW_ALL\";\r\nexport const INITIAL_CONTEST_STUDENT_NOT_OPEN_NOW: string = \"INITIAL_CONTEST_STUDENT_NOT_OPEN_NOW\";\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(contest: IContestStudent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        contest\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\n// Opening\r\nexport function initialContestStudentOpening(contest: IContestStudent): IInitialContestStudentOpeningActionType {\r\n    return { type: INITIAL_CONTEST_STUDENT_OPENING, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentOpeningAll(): IRemoveContestStudentOpeningAllActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_OPENING_ALL };\r\n}\r\n\r\nexport function addContestStudentOpening(contest: IContestStudent): IAddContestStudentOpeningActionType {\r\n    return { type: ADD_CONTEST_STUDENT_OPENING, contest: contest };\r\n}\r\n\r\nexport function editContestStudentOpening(contest: IContestStudent): IEditContestStudentOpeningActionType {\r\n    return { type: EDIT_CONTEST_STUDENT_OPENING, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentOpening(id: any): IRemoveContestStudentOpeningActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_OPENING, id: id };\r\n}\r\n\r\nexport function changeSelectedContestStudentOpening(contest: IContestStudent): IChangeSelectedContestStudentOpeningActionType {\r\n    return { type: CHANGE_CONTEST_STUDENT_OPENING_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestStudentOpening(): IClearSelectedContestStudentOpeningActionType {\r\n    return { type: CLEAR_CONTEST_STUDENT_OPENING_PENDING_EDIT };\r\n}\r\n\r\n// Not open not student\r\nexport function initialContestStudentNew(contest: IContestStudent): IInitialContestStudentNewActionType {\r\n    return { type: INITIAL_CONTEST_STUDENT_NEW, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentNewAll(): IRemoveContestStudentNewAllActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_NEW_ALL };\r\n}\r\n\r\nexport function addContestStudentNew(contest: IContestStudent): IAddContestStudentNewActionType {\r\n    return { type: ADD_CONTEST_STUDENT_NEW, contest: contest };\r\n}\r\n\r\nexport function editContestStudentNew(contest: IContestStudent): IEditContestStudentNewActionType {\r\n    return { type: EDIT_CONTEST_STUDENT_NEW, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentNew(id: any): IRemoveContestStudentNewActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_NEW, id: id };\r\n}\r\n\r\nexport function changeSelectedContestNew(contest: IContestStudent): IChangeSelectedContestStudentNewActionType {\r\n    return { type: CHANGE_CONTEST_STUDENT_NEW_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestStudentNew(): IClearSelectedContestStudentNewActionType {\r\n    return { type: CLEAR_CONTEST_STUDENT_NEW_PENDING_EDIT };\r\n}\r\n\r\n// End\r\nexport function initialContestStudentEnd(contest: IContestStudent): IInitialContestStudentEndActionType {\r\n    return { type: INITIAL_CONTEST_STUDENT_END, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentEndAll(): IRemoveContestStudentEndAllActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_END_ALL };\r\n}\r\n\r\nexport function addContestStudentEnd(contest: IContestStudent): IAddContestStudentEndActionType {\r\n    return { type: ADD_CONTEST_STUDENT_END, contest: contest };\r\n}\r\n\r\nexport function editContestStudentEnd(contest: IContestStudent): IEditContestStudentEndActionType {\r\n    return { type: EDIT_CONTEST_STUDENT_END, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentEnd(id: any): IRemoveContestStudentEndActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_END, id: id };\r\n}\r\n\r\nexport function changeSelectedContestStudentEnd(contest: IContestStudent): IChangeSelectedContestStudentEndActionType {\r\n    return { type: CHANGE_CONTEST_STUDENT_END_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestStudentEnd(): IClearSelectedContestStudentEndActionType {\r\n    return { type: CLEAR_CONTEST_STUDENT_END_PENDING_EDIT };\r\n}\r\n\r\n// Not open now\r\nexport function initialContestStudentNotOpenNow(contest: IContestStudent): IInitialContestStudentNotOpenNowActionType {\r\n    return { type: INITIAL_CONTEST_STUDENT_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentNotOpenNowAll(): IRemoveContestStudentNotOpenNowAllActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW_ALL };\r\n}\r\n\r\nexport function addContestStudentNotOpenNow(contest: IContestStudent): IAddContestStudentNotOpenNowActionType {\r\n    return { type: ADD_CONTEST_STUDENT_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function editContestStudentNotOpenNow(contest: IContestStudent): IEditContestStudentNotOpenNowActionType {\r\n    return { type: EDIT_CONTEST_STUDENT_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function removeContestStudentNotOpenNow(id: any): IRemoveContestStudentNotOpenNowActionType {\r\n    return { type: REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedContestStudentNotOpenNow(contest: IContestStudent): IChangeSelectedContestStudentNotOpenNowActionType {\r\n    return { type: CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestStudentNotOpenNow(): IClearSelectedContestStudentNotOpenNowActionType {\r\n    return { type: CLEAR_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function setModificationState(value: ContestStudentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_contests\r\ninterface IAddContestStudentOpeningActionType { type: string, contest: IContestStudent };\r\ninterface IEditContestStudentOpeningActionType { type: string, contest: IContestStudent };\r\ninterface IRemoveContestStudentOpeningActionType { type: string, id: any };\r\ninterface IChangeSelectedContestStudentOpeningActionType { type: string, contest: IContestStudent };\r\ninterface IClearSelectedContestStudentOpeningActionType { type: string };\r\ninterface IRemoveContestStudentOpeningAllActionType { type: string }\r\ninterface IInitialContestStudentOpeningActionType {type: string, contest: IContestStudent}\r\n\r\n// not_register_contests\r\ninterface IAddContestStudentNewActionType { type: string, contest: IContestStudent };\r\ninterface IEditContestStudentNewActionType { type: string, contest: IContestStudent };\r\ninterface IRemoveContestStudentNewActionType { type: string, id: any };\r\ninterface IChangeSelectedContestStudentNewActionType { type: string, contest: IContestStudent };\r\ninterface IClearSelectedContestStudentNewActionType { type: string };\r\ninterface IRemoveContestStudentNewAllActionType { type: string }\r\ninterface IInitialContestStudentNewActionType {type: string, contest: IContestStudent}\r\n\r\n// not_register_contests\r\ninterface IAddContestStudentEndActionType { type: string, contest: IContestStudent };\r\ninterface IEditContestStudentEndActionType { type: string, contest: IContestStudent };\r\ninterface IRemoveContestStudentEndActionType { type: string, id: any };\r\ninterface IChangeSelectedContestStudentEndActionType { type: string, contest: IContestStudent };\r\ninterface IClearSelectedContestStudentEndActionType { type: string };\r\ninterface IRemoveContestStudentEndAllActionType { type: string }\r\ninterface IInitialContestStudentEndActionType {type: string, contest: IContestStudent}\r\n\r\n// not_register_contests\r\ninterface IAddContestStudentNotOpenNowActionType { type: string, contest: IContestStudent };\r\ninterface IEditContestStudentNotOpenNowActionType { type: string, contest: IContestStudent };\r\ninterface IRemoveContestStudentNotOpenNowActionType { type: string, id: any };\r\ninterface IChangeSelectedContestStudentNotOpenNowActionType { type: string, contest: IContestStudent };\r\ninterface IClearSelectedContestStudentNotOpenNowActionType { type: string };\r\ninterface IRemoveContestStudentNotOpenNowAllActionType { type: string }\r\ninterface IInitialContestStudentNotOpenNowActionType {type: string, contest: IContestStudent}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ContestStudentModificationStatus};","import { IContestParent, ContestParentModificationStatus } from \"../models/contest_parent.interface\";\r\n\r\n// contest_opening\r\nexport const ADD_CONTEST_PARENT_OPENING: string = \"ADD_CONTEST_PARENT_OPENING\";\r\nexport const EDIT_CONTEST_PARENT_OPENING: string = \"EDIT_CONTEST_PARENT_OPENING\";\r\nexport const REMOVE_CONTEST_PARENT_OPENING: string = \"REMOVE_CONTEST_PARENT_OPENING\";\r\nexport const CHANGE_CONTEST_PARENT_OPENING_AMOUNT: string = \"CHANGE_CONTEST_PARENT_OPENING_AMOUNT\";\r\nexport const CHANGE_CONTEST_PARENT_OPENING_PENDING_EDIT: string = \"CHANGE_CONTEST_PARENT_OPENING_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_PARENT_OPENING_PENDING_EDIT: string = \"CLEAR_CONTEST_PARENT_OPENING_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_PARENT_OPENING_ALL: string = \"REMOVE_CONTEST_PARENT_OPENING_ALL\";\r\nexport const INITIAL_CONTEST_PARENT_OPENING: string = \"INITIAL_CONTEST_PARENT_OPENING\";\r\n\r\n// contest_not_open_now_not_parent\r\nexport const ADD_CONTEST_PARENT_NEW: string = \"ADD_CONTEST_PARENT_NEW\";\r\nexport const EDIT_CONTEST_PARENT_NEW: string = \"EDIT_CONTEST_PARENT_NEW\";\r\nexport const REMOVE_CONTEST_PARENT_NEW: string = \"REMOVE_CONTEST_PARENT_NEW\";\r\nexport const CHANGE_CONTEST_PARENT_NEW_AMOUNT: string = \"CHANGE_CONTEST_PARENT_NEW_AMOUNT\";\r\nexport const CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT: string = \"CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT: string = \"CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_PARENT_NEW_ALL: string = \"REMOVE_CONTEST_PARENT_NEW_ALL\";\r\nexport const INITIAL_CONTEST_PARENT_NEW: string = \"INITIAL_CONTEST_PARENT_NEW\";\r\n\r\n// contest_end\r\nexport const ADD_CONTEST_PARENT_END: string = \"ADD_CONTEST_PARENT_END\";\r\nexport const EDIT_CONTEST_PARENT_END: string = \"EDIT_CONTEST_PARENT_END\";\r\nexport const REMOVE_CONTEST_PARENT_END: string = \"REMOVE_CONTEST_PARENT_END\";\r\nexport const CHANGE_CONTEST_PARENT_END_AMOUNT: string = \"CHANGE_CONTEST_PARENT_END_AMOUNT\";\r\nexport const CHANGE_CONTEST_PARENT_END_PENDING_EDIT: string = \"CHANGE_CONTEST_PARENT_END_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_PARENT_END_PENDING_EDIT: string = \"CLEAR_CONTEST_PARENT_END_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_PARENT_END_ALL: string = \"REMOVE_CONTEST_PARENT_END_ALL\";\r\nexport const INITIAL_CONTEST_PARENT_END: string = \"INITIAL_CONTEST_PARENT_END\";\r\n\r\n//contest_not_open_now\r\nexport const ADD_CONTEST_PARENT_NOT_OPEN_NOW: string = \"ADD_CONTEST_PARENT_NOT_OPEN_NOW\";\r\nexport const EDIT_CONTEST_PARENT_NOT_OPEN_NOW: string = \"EDIT_CONTEST_PARENT_NOT_OPEN_NOW\";\r\nexport const REMOVE_CONTEST_PARENT_NOT_OPEN_NOW: string = \"REMOVE_CONTEST_PARENT_NOT_OPEN_NOW\";\r\nexport const CHANGE_CONTEST_PARENT_NOT_OPEN_NOW_AMOUNT: string = \"CHANGE_CONTEST_PARENT_NOT_OPEN_NOW_AMOUNT\";\r\nexport const CHANGE_CONTEST_PARENT_NOT_OPEN_NOW_PENDING_EDIT: string = \"CHANGE_CONTEST_PARENT_NOT_OPEN_NOW_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_PARENT_NOT_OPEN_NOW_PENDING_EDIT: string = \"CLEAR_CONTEST_PARENT_NOT_OPEN_NOW_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_PARENT_NOT_OPEN_NOW_ALL: string = \"REMOVE_CONTEST_PARENT_NOT_OPEN_NOW_ALL\";\r\nexport const INITIAL_CONTEST_PARENT_NOT_OPEN_NOW: string = \"INITIAL_CONTEST_PARENT_NOT_OPEN_NOW\";\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(contest: IContestParent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        contest\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\n// Opening\r\nexport function initialContestParentOpening(contest: IContestParent): IInitialContestParentOpeningActionType {\r\n    return { type: INITIAL_CONTEST_PARENT_OPENING, contest: contest };\r\n}\r\n\r\nexport function removeContestParentOpeningAll(): IRemoveContestParentOpeningAllActionType {\r\n    return { type: REMOVE_CONTEST_PARENT_OPENING_ALL };\r\n}\r\n\r\nexport function addContestParentOpening(contest: IContestParent): IAddContestParentOpeningActionType {\r\n    return { type: ADD_CONTEST_PARENT_OPENING, contest: contest };\r\n}\r\n\r\nexport function editContestParentOpening(contest: IContestParent): IEditContestParentOpeningActionType {\r\n    return { type: EDIT_CONTEST_PARENT_OPENING, contest: contest };\r\n}\r\n\r\nexport function removeContestParentOpening(id: any): IRemoveContestParentOpeningActionType {\r\n    return { type: REMOVE_CONTEST_PARENT_OPENING, id: id };\r\n}\r\n\r\nexport function changeSelectedContestParentOpening(contest: IContestParent): IChangeSelectedContestParentOpeningActionType {\r\n    return { type: CHANGE_CONTEST_PARENT_OPENING_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestParentOpening(): IClearSelectedContestParentOpeningActionType {\r\n    return { type: CLEAR_CONTEST_PARENT_OPENING_PENDING_EDIT };\r\n}\r\n\r\n// Not open not parent\r\nexport function initialContestParentNew(contest: IContestParent): IInitialContestParentNewActionType {\r\n    return { type: INITIAL_CONTEST_PARENT_NEW, contest: contest };\r\n}\r\n\r\nexport function removeContestParentNewAll(): IRemoveContestParentNewAllActionType {\r\n    return { type: REMOVE_CONTEST_PARENT_NEW_ALL };\r\n}\r\n\r\nexport function addContestParentNew(contest: IContestParent): IAddContestParentNewActionType {\r\n    return { type: ADD_CONTEST_PARENT_NEW, contest: contest };\r\n}\r\n\r\nexport function editContestParentNew(contest: IContestParent): IEditContestParentNewActionType {\r\n    return { type: EDIT_CONTEST_PARENT_NEW, contest: contest };\r\n}\r\n\r\nexport function removeContestParentNew(id: any): IRemoveContestParentNewActionType {\r\n    return { type: REMOVE_CONTEST_PARENT_NEW, id: id };\r\n}\r\n\r\nexport function changeSelectedContestNew(contest: IContestParent): IChangeSelectedContestParentNewActionType {\r\n    return { type: CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestParentNew(): IClearSelectedContestParentNewActionType {\r\n    return { type: CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT };\r\n}\r\n\r\n// End\r\nexport function initialContestParentEnd(contest: IContestParent): IInitialContestParentEndActionType {\r\n    return { type: INITIAL_CONTEST_PARENT_END, contest: contest };\r\n}\r\n\r\nexport function removeContestParentEndAll(): IRemoveContestParentEndAllActionType {\r\n    return { type: REMOVE_CONTEST_PARENT_END_ALL };\r\n}\r\n\r\nexport function addContestParentEnd(contest: IContestParent): IAddContestParentEndActionType {\r\n    return { type: ADD_CONTEST_PARENT_END, contest: contest };\r\n}\r\n\r\nexport function editContestParentEnd(contest: IContestParent): IEditContestParentEndActionType {\r\n    return { type: EDIT_CONTEST_PARENT_END, contest: contest };\r\n}\r\n\r\nexport function removeContestParentEnd(id: any): IRemoveContestParentEndActionType {\r\n    return { type: REMOVE_CONTEST_PARENT_END, id: id };\r\n}\r\n\r\nexport function changeSelectedContestParentEnd(contest: IContestParent): IChangeSelectedContestParentEndActionType {\r\n    return { type: CHANGE_CONTEST_PARENT_END_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestParentEnd(): IClearSelectedContestParentEndActionType {\r\n    return { type: CLEAR_CONTEST_PARENT_END_PENDING_EDIT };\r\n}\r\n\r\n// Not open now\r\nexport function initialContestParentNotOpenNow(contest: IContestParent): IInitialContestParentNotOpenNowActionType {\r\n    return { type: INITIAL_CONTEST_PARENT_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function removeContestParentNotOpenNowAll(): IRemoveContestParentNotOpenNowAllActionType {\r\n    return { type: REMOVE_CONTEST_PARENT_NOT_OPEN_NOW_ALL };\r\n}\r\n\r\nexport function addContestParentNotOpenNow(contest: IContestParent): IAddContestParentNotOpenNowActionType {\r\n    return { type: ADD_CONTEST_PARENT_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function editContestParentNotOpenNow(contest: IContestParent): IEditContestParentNotOpenNowActionType {\r\n    return { type: EDIT_CONTEST_PARENT_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function removeContestParentNotOpenNow(id: any): IRemoveContestParentNotOpenNowActionType {\r\n    return { type: REMOVE_CONTEST_PARENT_NOT_OPEN_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedContestParentNotOpenNow(contest: IContestParent): IChangeSelectedContestParentNotOpenNowActionType {\r\n    return { type: CHANGE_CONTEST_PARENT_NOT_OPEN_NOW_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestParentNotOpenNow(): IClearSelectedContestParentNotOpenNowActionType {\r\n    return { type: CLEAR_CONTEST_PARENT_NOT_OPEN_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function setModificationState(value: ContestParentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_contests\r\ninterface IAddContestParentOpeningActionType { type: string, contest: IContestParent };\r\ninterface IEditContestParentOpeningActionType { type: string, contest: IContestParent };\r\ninterface IRemoveContestParentOpeningActionType { type: string, id: any };\r\ninterface IChangeSelectedContestParentOpeningActionType { type: string, contest: IContestParent };\r\ninterface IClearSelectedContestParentOpeningActionType { type: string };\r\ninterface IRemoveContestParentOpeningAllActionType { type: string }\r\ninterface IInitialContestParentOpeningActionType {type: string, contest: IContestParent}\r\n\r\n// not_register_contests\r\ninterface IAddContestParentNewActionType { type: string, contest: IContestParent };\r\ninterface IEditContestParentNewActionType { type: string, contest: IContestParent };\r\ninterface IRemoveContestParentNewActionType { type: string, id: any };\r\ninterface IChangeSelectedContestParentNewActionType { type: string, contest: IContestParent };\r\ninterface IClearSelectedContestParentNewActionType { type: string };\r\ninterface IRemoveContestParentNewAllActionType { type: string }\r\ninterface IInitialContestParentNewActionType {type: string, contest: IContestParent}\r\n\r\n// not_register_contests\r\ninterface IAddContestParentEndActionType { type: string, contest: IContestParent };\r\ninterface IEditContestParentEndActionType { type: string, contest: IContestParent };\r\ninterface IRemoveContestParentEndActionType { type: string, id: any };\r\ninterface IChangeSelectedContestParentEndActionType { type: string, contest: IContestParent };\r\ninterface IClearSelectedContestParentEndActionType { type: string };\r\ninterface IRemoveContestParentEndAllActionType { type: string }\r\ninterface IInitialContestParentEndActionType {type: string, contest: IContestParent}\r\n\r\n// not_register_contests\r\ninterface IAddContestParentNotOpenNowActionType { type: string, contest: IContestParent };\r\ninterface IEditContestParentNotOpenNowActionType { type: string, contest: IContestParent };\r\ninterface IRemoveContestParentNotOpenNowActionType { type: string, id: any };\r\ninterface IChangeSelectedContestParentNotOpenNowActionType { type: string, contest: IContestParent };\r\ninterface IClearSelectedContestParentNotOpenNowActionType { type: string };\r\ninterface IRemoveContestParentNotOpenNowAllActionType { type: string }\r\ninterface IInitialContestParentNotOpenNowActionType {type: string, contest: IContestParent}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ContestParentModificationStatus};","import { IUserRegisterTutorial, UserRegisterTutorialModificationStatus } from \"../models/user_register_tutorial.interface\";\r\n\r\n// register_successfull_user_register_tutorials\r\nexport const ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: string = \"ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW\";\r\nexport const EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: string = \"EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: string = \"REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_AMOUNT: string = \"CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_AMOUNT\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT: string = \"CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT\";\r\nexport const CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT: string = \"CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_ALL: string = \"REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_ALL\";\r\nexport const INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: string = \"INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW\";\r\n\r\n// not_register_user_register_tutorials\r\nexport const ADD_USER_REGISTER_TUTORIAL_APPROVED: string = \"ADD_USER_REGISTER_TUTORIAL_APPROVED\";\r\nexport const EDIT_USER_REGISTER_TUTORIAL_APPROVED: string = \"EDIT_USER_REGISTER_TUTORIAL_APPROVED\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_APPROVED: string = \"REMOVE_USER_REGISTER_TUTORIAL_APPROVED\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_APPROVED_AMOUNT: string = \"CHANGE_USER_REGISTER_TUTORIAL_APPROVED_AMOUNT\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_APPROVED_PENDING_EDIT: string = \"CHANGE_USER_REGISTER_TUTORIAL_APPROVED_PENDING_EDIT\";\r\nexport const CLEAR_USER_REGISTER_TUTORIAL_APPROVED_PENDING_EDIT: string = \"CLEAR_USER_REGISTER_TUTORIAL_APPROVED_PENDING_EDIT\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_APPROVED_ALL: string = \"REMOVE_USER_REGISTER_TUTORIAL_APPROVED_ALL\";\r\nexport const INITIAL_USER_REGISTER_TUTORIAL_APPROVED: string = \"INITIAL_USER_REGISTER_TUTORIAL_APPROVED\";\r\n\r\n\r\n// Approved to tutorial template\r\nexport const ADD_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: string = \"ADD_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE\";\r\nexport const EDIT_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: string = \"EDIT_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: string = \"REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_AMOUNT: string = \"CHANGE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_AMOUNT\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_PENDING_EDIT: string = \"CHANGE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_PENDING_EDIT\";\r\nexport const CLEAR_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_PENDING_EDIT: string = \"CLEAR_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_PENDING_EDIT\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_ALL: string = \"REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_ALL\";\r\nexport const INITIAL_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: string = \"INITIAL_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE\";\r\n\r\n\r\n// not_register_user_register_tutorials\r\nexport const ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED: string = \"ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED\";\r\nexport const EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED: string = \"EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED: string = \"REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_AMOUNT: string = \"CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_AMOUNT\";\r\nexport const CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_PENDING_EDIT: string = \"CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_PENDING_EDIT\";\r\nexport const CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_PENDING_EDIT: string = \"CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_PENDING_EDIT\";\r\nexport const REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_ALL: string = \"REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_ALL\";\r\nexport const INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED: string = \"INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(user_register_tutorial: IUserRegisterTutorial) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        user_register_tutorial\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialUserRegisterTutorialNotApprovedNow(user_register_tutorial: IUserRegisterTutorial): IInitialUserRegisterTutorialNotApprovedNowActionType {\r\n    return { type: INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialNotApprovedNowAll(): IRemoveUserRegisterTutorialNotApprovedNowAllActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_ALL };\r\n}\r\n\r\nexport function addUserRegisterTutorialNotApprovedNow(user_register_tutorial: IUserRegisterTutorial): IAddUserRegisterTutorialNotApprovedNowActionType {\r\n    return { type: ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function editUserRegisterTutorialNotApprovedNow(user_register_tutorial: IUserRegisterTutorial): IEditUserRegisterTutorialNotApprovedNowActionType {\r\n    return { type: EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialNotApprovedNow(id: any): IRemoveUserRegisterTutorialNotApprovedNowActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedUserRegisterTutorialNotApprovedNow(user_register_tutorial: IUserRegisterTutorial): IChangeSelectedUserRegisterTutorialNotApprovedNowActionType {\r\n    return { type: CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function clearSelectedUserRegisterTutorialNotApprovedNow(): IClearSelectedUserRegisterTutorialNotApprovedNowActionType {\r\n    return { type: CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialUserRegisterTutorialApproved(user_register_tutorial: IUserRegisterTutorial): IInitialUserRegisterTutorialApprovedActionType {\r\n    return { type: INITIAL_USER_REGISTER_TUTORIAL_APPROVED, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialApprovedAll(): IRemoveUserRegisterTutorialApprovedAllActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_APPROVED_ALL };\r\n}\r\n\r\nexport function addUserRegisterTutorialApproved(user_register_tutorial: IUserRegisterTutorial): IAddUserRegisterTutorialApprovedActionType {\r\n    return { type: ADD_USER_REGISTER_TUTORIAL_APPROVED, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function editUserRegisterTutorialApproved(user_register_tutorial: IUserRegisterTutorial): IEditUserRegisterTutorialApprovedActionType {\r\n    return { type: EDIT_USER_REGISTER_TUTORIAL_APPROVED, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialApproved(id: any): IRemoveUserRegisterTutorialApprovedActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_APPROVED, id: id };\r\n}\r\n\r\nexport function changeSelectedUserRegisterTutorialApproved(user_register_tutorial: IUserRegisterTutorial): IChangeSelectedUserRegisterTutorialApprovedActionType {\r\n    return { type: CHANGE_USER_REGISTER_TUTORIAL_APPROVED_PENDING_EDIT, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function clearSelectedUserRegisterTutorialApproved(): IClearSelectedUserRegisterTutorialApprovedActionType {\r\n    return { type: CLEAR_USER_REGISTER_TUTORIAL_APPROVED_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: UserRegisterTutorialModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n\r\n\r\nexport function initialUserRegisterTutorialApprovedToTutorialTemplate(user_register_tutorial: IUserRegisterTutorial): IInitialUserRegisterTutorialApprovedToTutorialTemplateActionType {\r\n    return { type: INITIAL_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialApprovedToTutorialTemplateAll(): IRemoveUserRegisterTutorialApprovedToTutorialTemplateAllActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_ALL };\r\n}\r\n\r\nexport function addUserRegisterTutorialApprovedToTutorialTemplate(user_register_tutorial: IUserRegisterTutorial): IAddUserRegisterTutorialApprovedToTutorialTemplateActionType {\r\n    return { type: ADD_USER_REGISTER_TUTORIAL_APPROVED, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function editUserRegisterTutorialApprovedToTutorialTemplate(user_register_tutorial: IUserRegisterTutorial): IEditUserRegisterTutorialApprovedToTutorialTemplateActionType {\r\n    return { type: EDIT_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialApprovedToTutorialTemplate(id: any): IRemoveUserRegisterTutorialApprovedToTutorialTemplateActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE, id: id };\r\n}\r\n\r\nexport function changeSelectedUserRegisterTutorialApprovedToTutorialTemplate(user_register_tutorial: IUserRegisterTutorial): IChangeSelectedUserRegisterTutorialApprovedToTutorialTemplateActionType {\r\n    return { type: CHANGE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_PENDING_EDIT, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function clearSelectedUserRegisterTutorialApprovedToTutorialTemplate(): IClearSelectedUserRegisterTutorialApprovedToTutorialTemplateActionType {\r\n    return { type: CLEAR_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_PENDING_EDIT };\r\n}\r\n\r\n\r\n\r\nexport function initialUserRegisterTutorialNotApproved(user_register_tutorial: IUserRegisterTutorial): IInitialUserRegisterTutorialNotApprovedActionType {\r\n    return { type: INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialNotApprovedAll(): IRemoveUserRegisterTutorialNotApprovedAllActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_ALL };\r\n}\r\n\r\nexport function addUserRegisterTutorialNotApproved(user_register_tutorial: IUserRegisterTutorial): IAddUserRegisterTutorialNotApprovedActionType {\r\n    return { type: ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function editUserRegisterTutorialNotApproved(user_register_tutorial: IUserRegisterTutorial): IEditUserRegisterTutorialNotApprovedActionType {\r\n    return { type: EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function removeUserRegisterTutorialNotApproved(id: any): IRemoveUserRegisterTutorialNotApprovedActionType {\r\n    return { type: REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED, id: id };\r\n}\r\n\r\nexport function changeSelectedUserRegisterTutorialNotApproved(user_register_tutorial: IUserRegisterTutorial): IChangeSelectedUserRegisterTutorialNotApprovedActionType {\r\n    return { type: CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_AMOUNT, user_register_tutorial: user_register_tutorial };\r\n}\r\n\r\nexport function clearSelectedUserRegisterTutorialNotApproved(): IClearSelectedUserRegisterTutorialNotApprovedActionType {\r\n    return { type: CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_PENDING_EDIT };\r\n}\r\n\r\n// register_successfull_user_register_tutorials\r\ninterface IAddUserRegisterTutorialNotApprovedNowActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IEditUserRegisterTutorialNotApprovedNowActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IRemoveUserRegisterTutorialNotApprovedNowActionType { type: string, id: any };\r\ninterface IChangeSelectedUserRegisterTutorialNotApprovedNowActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IClearSelectedUserRegisterTutorialNotApprovedNowActionType { type: string };\r\ninterface IRemoveUserRegisterTutorialNotApprovedNowAllActionType { type: string }\r\ninterface IInitialUserRegisterTutorialNotApprovedNowActionType {type: string, user_register_tutorial: IUserRegisterTutorial}\r\n\r\n// not_register_user_register_tutorials\r\ninterface IAddUserRegisterTutorialApprovedActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IEditUserRegisterTutorialApprovedActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IRemoveUserRegisterTutorialApprovedActionType { type: string, id: any };\r\ninterface IChangeSelectedUserRegisterTutorialApprovedActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IClearSelectedUserRegisterTutorialApprovedActionType { type: string };\r\ninterface IRemoveUserRegisterTutorialApprovedAllActionType { type: string }\r\ninterface IInitialUserRegisterTutorialApprovedActionType {type: string, user_register_tutorial: IUserRegisterTutorial}\r\n\r\n\r\n// not_register_user_register_tutorials\r\ninterface IAddUserRegisterTutorialApprovedToTutorialTemplateActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IEditUserRegisterTutorialApprovedToTutorialTemplateActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IRemoveUserRegisterTutorialApprovedToTutorialTemplateActionType { type: string, id: any };\r\ninterface IChangeSelectedUserRegisterTutorialApprovedToTutorialTemplateActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IClearSelectedUserRegisterTutorialApprovedToTutorialTemplateActionType { type: string };\r\ninterface IRemoveUserRegisterTutorialApprovedToTutorialTemplateAllActionType { type: string }\r\ninterface IInitialUserRegisterTutorialApprovedToTutorialTemplateActionType {type: string, user_register_tutorial: IUserRegisterTutorial}\r\n\r\n\r\n// register_successfull_user_register_tutorials\r\ninterface IAddUserRegisterTutorialNotApprovedActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IEditUserRegisterTutorialNotApprovedActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IRemoveUserRegisterTutorialNotApprovedActionType { type: string, id: any };\r\ninterface IChangeSelectedUserRegisterTutorialNotApprovedActionType { type: string, user_register_tutorial: IUserRegisterTutorial };\r\ninterface IClearSelectedUserRegisterTutorialNotApprovedActionType { type: string };\r\ninterface IRemoveUserRegisterTutorialNotApprovedAllActionType { type: string }\r\ninterface IInitialUserRegisterTutorialNotApprovedActionType {type: string, user_register_tutorial: IUserRegisterTutorial}\r\n\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  UserRegisterTutorialModificationStatus};","import { IContest, ContestModificationStatus } from \"../models/contest.interface\";\r\n\r\n// contest_opening\r\nexport const ADD_CONTEST_OPENING: string = \"ADD_CONTEST_OPENING\";\r\nexport const EDIT_CONTEST_OPENING: string = \"EDIT_CONTEST_OPENING\";\r\nexport const REMOVE_CONTEST_OPENING: string = \"REMOVE_CONTEST_OPENING\";\r\nexport const CHANGE_CONTEST_OPENING_AMOUNT: string = \"CHANGE_CONTEST_OPENING_AMOUNT\";\r\nexport const CHANGE_CONTEST_OPENING_PENDING_EDIT: string = \"CHANGE_CONTEST_OPENING_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_OPENING_PENDING_EDIT: string = \"CLEAR_CONTEST_OPENING_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_OPENING_ALL: string = \"REMOVE_CONTEST_OPENING_ALL\";\r\nexport const INITIAL_CONTEST_OPENING: string = \"INITIAL_CONTEST_OPENING\";\r\n\r\n// contest_end\r\nexport const ADD_CONTEST_END: string = \"ADD_CONTEST_END\";\r\nexport const EDIT_CONTEST_END: string = \"EDIT_CONTEST_END\";\r\nexport const REMOVE_CONTEST_END: string = \"REMOVE_CONTEST_END\";\r\nexport const CHANGE_CONTEST_END_AMOUNT: string = \"CHANGE_CONTEST_END_AMOUNT\";\r\nexport const CHANGE_CONTEST_END_PENDING_EDIT: string = \"CHANGE_CONTEST_END_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_END_PENDING_EDIT: string = \"CLEAR_CONTEST_END_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_END_ALL: string = \"REMOVE_CONTEST_END_ALL\";\r\nexport const INITIAL_CONTEST_END: string = \"INITIAL_CONTEST_END\";\r\n\r\n//contest_not_open_now\r\nexport const ADD_CONTEST_NOT_OPEN_NOW: string = \"ADD_CONTEST_NOT_OPEN_NOW\";\r\nexport const EDIT_CONTEST_NOT_OPEN_NOW: string = \"EDIT_CONTEST_NOT_OPEN_NOW\";\r\nexport const REMOVE_CONTEST_NOT_OPEN_NOW: string = \"REMOVE_CONTEST_NOT_OPEN_NOW\";\r\nexport const CHANGE_CONTEST_NOT_OPEN_NOW_AMOUNT: string = \"CHANGE_CONTEST_NOT_OPEN_NOW_AMOUNT\";\r\nexport const CHANGE_CONTEST_NOT_OPEN_NOW_PENDING_EDIT: string = \"CHANGE_CONTEST_NOT_OPEN_NOW_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_NOT_OPEN_NOW_PENDING_EDIT: string = \"CLEAR_CONTEST_NOT_OPEN_NOW_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_NOT_OPEN_NOW_ALL: string = \"REMOVE_CONTEST_NOT_OPEN_NOW_ALL\";\r\nexport const INITIAL_CONTEST_NOT_OPEN_NOW: string = \"INITIAL_CONTEST_NOT_OPEN_NOW\";\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(contest: IContest) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        contest\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\n// Opening\r\nexport function initialContestOpening(contest: IContest): IInitialContestOpeningActionType {\r\n    return { type: INITIAL_CONTEST_OPENING, contest: contest };\r\n}\r\n\r\nexport function removeContestOpeningAll(): IRemoveContestOpeningAllActionType {\r\n    return { type: REMOVE_CONTEST_OPENING_ALL };\r\n}\r\n\r\nexport function addContestOpening(contest: IContest): IAddContestOpeningActionType {\r\n    return { type: ADD_CONTEST_OPENING, contest: contest };\r\n}\r\n\r\nexport function editContestOpening(contest: IContest): IEditContestOpeningActionType {\r\n    return { type: EDIT_CONTEST_OPENING, contest: contest };\r\n}\r\n\r\nexport function removeContestOpening(id: any): IRemoveContestOpeningActionType {\r\n    return { type: REMOVE_CONTEST_OPENING, id: id };\r\n}\r\n\r\nexport function changeSelectedContestOpening(contest: IContest): IChangeSelectedContestOpeningActionType {\r\n    return { type: CHANGE_CONTEST_OPENING_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestOpening(): IClearSelectedContestOpeningActionType {\r\n    return { type: CLEAR_CONTEST_OPENING_PENDING_EDIT };\r\n}\r\n\r\n\r\n// End\r\nexport function initialContestEnd(contest: IContest): IInitialContestEndActionType {\r\n    return { type: INITIAL_CONTEST_END, contest: contest };\r\n}\r\n\r\nexport function removeContestEndAll(): IRemoveContestEndAllActionType {\r\n    return { type: REMOVE_CONTEST_END_ALL };\r\n}\r\n\r\nexport function addContestEnd(contest: IContest): IAddContestEndActionType {\r\n    return { type: ADD_CONTEST_END, contest: contest };\r\n}\r\n\r\nexport function editContestEnd(contest: IContest): IEditContestEndActionType {\r\n    return { type: EDIT_CONTEST_END, contest: contest };\r\n}\r\n\r\nexport function removeContestEnd(id: any): IRemoveContestEndActionType {\r\n    return { type: REMOVE_CONTEST_END, id: id };\r\n}\r\n\r\nexport function changeSelectedContestEnd(contest: IContest): IChangeSelectedContestEndActionType {\r\n    return { type: CHANGE_CONTEST_END_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestEnd(): IClearSelectedContestEndActionType {\r\n    return { type: CLEAR_CONTEST_END_PENDING_EDIT };\r\n}\r\n\r\n// Not open now\r\nexport function initialContestNotOpenNow(contest: IContest): IInitialContestNotOpenNowActionType {\r\n    return { type: INITIAL_CONTEST_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function removeContestNotOpenNowAll(): IRemoveContestNotOpenNowAllActionType {\r\n    return { type: REMOVE_CONTEST_NOT_OPEN_NOW_ALL };\r\n}\r\n\r\nexport function addContestNotOpenNow(contest: IContest): IAddContestNotOpenNowActionType {\r\n    return { type: ADD_CONTEST_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function editContestNotOpenNow(contest: IContest): IEditContestNotOpenNowActionType {\r\n    return { type: EDIT_CONTEST_NOT_OPEN_NOW, contest: contest };\r\n}\r\n\r\nexport function removeContestNotOpenNow(id: any): IRemoveContestNotOpenNowActionType {\r\n    return { type: REMOVE_CONTEST_NOT_OPEN_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedContestNotOpenNow(contest: IContest): IChangeSelectedContestNotOpenNowActionType {\r\n    return { type: CHANGE_CONTEST_NOT_OPEN_NOW_PENDING_EDIT, contest: contest };\r\n}\r\n\r\nexport function clearSelectedContestNotOpenNow(): IClearSelectedContestNotOpenNowActionType {\r\n    return { type: CLEAR_CONTEST_NOT_OPEN_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function setModificationState(value: ContestModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_contests\r\ninterface IAddContestOpeningActionType { type: string, contest: IContest };\r\ninterface IEditContestOpeningActionType { type: string, contest: IContest };\r\ninterface IRemoveContestOpeningActionType { type: string, id: any };\r\ninterface IChangeSelectedContestOpeningActionType { type: string, contest: IContest };\r\ninterface IClearSelectedContestOpeningActionType { type: string };\r\ninterface IRemoveContestOpeningAllActionType { type: string }\r\ninterface IInitialContestOpeningActionType {type: string, contest: IContest}\r\n\r\n\r\n// not_register_contests\r\ninterface IAddContestEndActionType { type: string, contest: IContest };\r\ninterface IEditContestEndActionType { type: string, contest: IContest };\r\ninterface IRemoveContestEndActionType { type: string, id: any };\r\ninterface IChangeSelectedContestEndActionType { type: string, contest: IContest };\r\ninterface IClearSelectedContestEndActionType { type: string };\r\ninterface IRemoveContestEndAllActionType { type: string }\r\ninterface IInitialContestEndActionType {type: string, contest: IContest}\r\n\r\n// not_register_contests\r\ninterface IAddContestNotOpenNowActionType { type: string, contest: IContest };\r\ninterface IEditContestNotOpenNowActionType { type: string, contest: IContest };\r\ninterface IRemoveContestNotOpenNowActionType { type: string, id: any };\r\ninterface IChangeSelectedContestNotOpenNowActionType { type: string, contest: IContest };\r\ninterface IClearSelectedContestNotOpenNowActionType { type: string };\r\ninterface IRemoveContestNotOpenNowAllActionType { type: string }\r\ninterface IInitialContestNotOpenNowActionType {type: string, contest: IContest}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ContestModificationStatus};","import { ITeacherRegisterQuantification, TeacherRegisterQuantificationModificationStatus } from \"../models/teacher_register_quantification.interface\";\r\n\r\n// Approved\r\nexport const REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_ALL: string = \"REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_ALL\";\r\nexport const INITIAL_TEACHER_REGISTER_QUANTIFICATION_APPROVED: string = \"INITIAL_TEACHER_REGISTER_QUANTIFICATION_APPROVED\";\r\nexport const ADD_TEACHER_REGISTER_QUANTIFICATION_APPROVED: string = \"ADD_TEACHER_REGISTER_QUANTIFICATION_APPROVED\";\r\nexport const EDIT_TEACHER_REGISTER_QUANTIFICATION_APPROVED: string = \"EDIT_TEACHER_REGISTER_QUANTIFICATION_APPROVED\";\r\nexport const REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED: string = \"REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED\";\r\nexport const CHANGE_TEACHER_REGISTER_QUANTIFICATION_AMOUNT_APPROVED: string = \"CHANGE_TEACHER_REGISTER_QUANTIFICATION_AMOUNT_APPROVED\";\r\nexport const CHANGE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT: string = \"CHANGE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT\";\r\nexport const CLEAR_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT: string = \"CLEAR_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT\";\r\n\r\n// Not approved\r\nexport const REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_ALL: string = \"REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_ALL\";\r\nexport const INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: string = \"INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED\";\r\nexport const ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: string = \"ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED\";\r\nexport const EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: string = \"EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED\";\r\nexport const REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: string = \"REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED\";\r\nexport const CHANGE_TEACHER_REGISTER_QUANTIFICATION_AMOUNT_NOT_APPROVED: string = \"CHANGE_TEACHER_REGISTER_QUANTIFICATION_AMOUNT_NOT_APPROVED\";\r\nexport const CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT: string = \"CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT\";\r\nexport const CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT: string = \"CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT\";\r\n\r\n// Not approve now\r\nexport const REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_ALL: string = \"REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_ALL\";\r\nexport const INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: string = \"INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW\";\r\nexport const ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: string = \"ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW\";\r\nexport const EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: string = \"EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW\";\r\nexport const REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: string = \"REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW\";\r\nexport const CHANGE_TEACHER_REGISTER_QUANTIFICATION_AMOUNT_NOT_APPROVED_NOW: string = \"CHANGE_TEACHER_REGISTER_QUANTIFICATION_AMOUNT_NOT_APPROVED_NOW\";\r\nexport const CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT: string = \"CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT\";\r\nexport const CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT: string = \"CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT\";\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(teacher_register_quantification: ITeacherRegisterQuantification) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        teacher_register_quantification\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function setModificationState(value: TeacherRegisterQuantificationModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n// Approved\r\nexport function initialTeacherRegisterQuatificationApproved(teacher_register_quantification_approved: ITeacherRegisterQuantification): IInitialTeacherRegisterQuatificationApprovedActionType {\r\n    return { type: INITIAL_TEACHER_REGISTER_QUANTIFICATION_APPROVED, teacher_register_quantification_approved: teacher_register_quantification_approved };\r\n}\r\n\r\nexport function removeTeacherRegisterQuatificationApprovedAll(): IRemoveTeacherRegisterQuatificationAllApprovedActionType {\r\n    return { type: REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_ALL };\r\n}\r\n\r\nexport function addTeacherRegisterQuatificationApproved(teacher_register_quantification_approved: ITeacherRegisterQuantification): IAddTeacherRegisterQuatificationApprovedActionType {\r\n    return { type: ADD_TEACHER_REGISTER_QUANTIFICATION_APPROVED, teacher_register_quantification_approved: teacher_register_quantification_approved };\r\n}\r\n\r\nexport function editTeacherRegisterQuatificationApproved(teacher_register_quantification_approved: ITeacherRegisterQuantification): IEditTeacherRegisterQuatificationApprovedActionType {\r\n    return { type: EDIT_TEACHER_REGISTER_QUANTIFICATION_APPROVED, teacher_register_quantification_approved: teacher_register_quantification_approved };\r\n}\r\n\r\nexport function removeTeacherRegisterQuatificationApproved(id: any): IRemoveTeacherRegisterQuatificationApprovedActionType {\r\n    return { type: REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED, id: id };\r\n}\r\n\r\nexport function changeSelectedTeacherRegisterQuatificationApproved(teacher_register_quantification_approved: ITeacherRegisterQuantification): IChangeSelectedTeacherRegisterQuatificationApprovedActionType {\r\n    return { type: CHANGE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT, teacher_register_quantification_approved: teacher_register_quantification_approved };\r\n}\r\n\r\nexport function clearSelectedTeacherRegisterQuatification(): IClearSelectedTeacherRegisterQuatificationApprovedActionType {\r\n    return { type: CLEAR_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT };\r\n}\r\n\r\n\r\n// Not Approved\r\nexport function initialTeacherRegisterQuatificationNotApproved(teacher_register_quantification_not_approved: ITeacherRegisterQuantification): IInitialTeacherRegisterQuatificationNotApprovedActionType {\r\n    return { type: INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED, teacher_register_quantification_not_approved: teacher_register_quantification_not_approved };\r\n}\r\n\r\nexport function removeTeacherRegisterQuatificationNotApprovedAll(): IRemoveTeacherRegisterQuatificationAllNotApprovedActionType {\r\n    return { type: REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_ALL };\r\n}\r\n\r\nexport function addTeacherRegisterQuatificationNotApproved(teacher_register_quantification_not_approved: ITeacherRegisterQuantification): IAddTeacherRegisterQuatificationNotApprovedActionType {\r\n    return { type: ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED, teacher_register_quantification_not_approved: teacher_register_quantification_not_approved };\r\n}\r\n\r\nexport function editTeacherRegisterQuatificationNotApproved(teacher_register_quantification_not_approved: ITeacherRegisterQuantification): IEditTeacherRegisterQuatificationNotApprovedActionType {\r\n    return { type: EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED, teacher_register_quantification_not_approved: teacher_register_quantification_not_approved };\r\n}\r\n\r\nexport function removeTeacherRegisterQuatificationNotApproved(id: any): IRemoveTeacherRegisterQuatificationNotApprovedActionType {\r\n    return { type: REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED, id: id };\r\n}\r\n\r\nexport function changeSelectedTeacherRegisterQuatificationNotApproved(teacher_register_quantification_not_approved: ITeacherRegisterQuantification): IChangeSelectedTeacherRegisterQuatificationNotApprovedActionType {\r\n    return { type: CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT, teacher_register_quantification_not_approved: teacher_register_quantification_not_approved };\r\n}\r\n\r\nexport function clearSelectedTeacherRegisterNotQuatification(): IClearSelectedTeacherRegisterQuatificationNotApprovedActionType {\r\n    return { type: CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT };\r\n}\r\n\r\n\r\n\r\n// Not Approved now\r\nexport function initialTeacherRegisterQuatificationNotApprovedNow(teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification): IInitialTeacherRegisterQuatificationNotApprovedNowActionType {\r\n    return { type: INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW, teacher_register_quantification_not_approved_now: teacher_register_quantification_not_approved_now };\r\n}\r\n\r\nexport function removeTeacherRegisterQuatificationNotApprovedNowAll(): IRemoveTeacherRegisterQuatificationAllNotApprovedNowActionType {\r\n    return { type: REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_ALL };\r\n}\r\n\r\nexport function addTeacherRegisterQuatificationNotApprovedNow(teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification): IAddTeacherRegisterQuatificationNotApprovedNowActionType {\r\n    return { type: ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW, teacher_register_quantification_not_approved_now: teacher_register_quantification_not_approved_now };\r\n}\r\n\r\nexport function editTeacherRegisterQuatificationNotApprovedNow(teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification): IEditTeacherRegisterQuatificationNotApprovedNowActionType {\r\n    return { type: EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW, teacher_register_quantification_not_approved_now: teacher_register_quantification_not_approved_now };\r\n}\r\n\r\nexport function removeTeacherRegisterQuatificationNotApprovedNow(id: any): IRemoveTeacherRegisterQuatificationNotApprovedNowActionType {\r\n    return { type: REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedTeacherRegisterQuatificationNotApprovedNow(teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification): IChangeSelectedTeacherRegisterQuatificationNotApprovedNowActionType {\r\n    return { type: CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT, teacher_register_quantification_not_approved_now: teacher_register_quantification_not_approved_now };\r\n}\r\n\r\nexport function clearSelectedTeacherRegisterNotQuatificationNow(): IClearSelectedTeacherRegisterQuatificationNotApprovedNowActionType {\r\n    return { type: CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT };\r\n}\r\n\r\n// Approved\r\ninterface IAddTeacherRegisterQuatificationApprovedActionType { type: string, teacher_register_quantification_approved: ITeacherRegisterQuantification };\r\ninterface IEditTeacherRegisterQuatificationApprovedActionType { type: string, teacher_register_quantification_approved: ITeacherRegisterQuantification };\r\ninterface IRemoveTeacherRegisterQuatificationApprovedActionType { type: string, id: any };\r\ninterface IChangeSelectedTeacherRegisterQuatificationApprovedActionType { type: string, teacher_register_quantification_approved: ITeacherRegisterQuantification };\r\ninterface IClearSelectedTeacherRegisterQuatificationApprovedActionType { type: string };\r\ninterface IRemoveTeacherRegisterQuatificationAllApprovedActionType { type: string }\r\ninterface IInitialTeacherRegisterQuatificationApprovedActionType {type: string, teacher_register_quantification_approved: ITeacherRegisterQuantification}\r\n\r\n// Not Approved\r\ninterface IAddTeacherRegisterQuatificationNotApprovedActionType { type: string, teacher_register_quantification_not_approved: ITeacherRegisterQuantification };\r\ninterface IEditTeacherRegisterQuatificationNotApprovedActionType { type: string, teacher_register_quantification_not_approved: ITeacherRegisterQuantification };\r\ninterface IRemoveTeacherRegisterQuatificationNotApprovedActionType { type: string, id: any };\r\ninterface IChangeSelectedTeacherRegisterQuatificationNotApprovedActionType { type: string, teacher_register_quantification_not_approved: ITeacherRegisterQuantification };\r\ninterface IClearSelectedTeacherRegisterQuatificationNotApprovedActionType { type: string };\r\ninterface IRemoveTeacherRegisterQuatificationAllNotApprovedActionType { type: string }\r\ninterface IInitialTeacherRegisterQuatificationNotApprovedActionType {type: string, teacher_register_quantification_not_approved: ITeacherRegisterQuantification}\r\n\r\n// Not Approved now\r\ninterface IAddTeacherRegisterQuatificationNotApprovedNowActionType { type: string, teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification };\r\ninterface IEditTeacherRegisterQuatificationNotApprovedNowActionType { type: string, teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification };\r\ninterface IRemoveTeacherRegisterQuatificationNotApprovedNowActionType { type: string, id: any };\r\ninterface IChangeSelectedTeacherRegisterQuatificationNotApprovedNowActionType { type: string, teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification };\r\ninterface IClearSelectedTeacherRegisterQuatificationNotApprovedNowActionType { type: string };\r\ninterface IRemoveTeacherRegisterQuatificationAllNotApprovedNowActionType { type: string }\r\ninterface IInitialTeacherRegisterQuatificationNotApprovedNowActionType {type: string, teacher_register_quantification_not_approved_now: ITeacherRegisterQuantification}\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  TeacherRegisterQuantificationModificationStatus};","import { IUser, UserModificationStatus } from \"../models/user.interface\";\n\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\n\n//Admin\nexport const ADD_ADMIN: string = \"ADD_ADMIN\";\nexport const EDIT_ADMIN: string = \"EDIT_ADMIN\";\nexport const REMOVE_ADMIN: string = \"REMOVE_ADMIN\";\n\n//Teacher\nexport const REMOVE_TEACHER_ALL: string = \"REMOVE_TEACHER_ALL\";\nexport const INITIAL_TEACHER: string = \"INITIAL_TEACHER\";\nexport const ADD_TEACHER: string = \"ADD_TEACHER\";\nexport const REMOVE_TEACHER: string = \"REMOVE_TEACHER\";\nexport const EDIT_TEACHER: string = \"EDIT_TEACHER\";\n\n\n//Student\nexport const REMOVE_STUDENT_ALL: string = \"REMOVE_STUDENT_ALL\";\nexport const INITIAL_STUDENT: string = \"INITIAL_STUDENT\";\nexport const ADD_STUDENT: string = \"ADD_STUDENT\";\nexport const EDIT_STUDENT: string = \"EDIT_STUDENT\";\nexport const REMOVE_STUDENT: string = \"REMOVE_STUDENT\";\n\n//Parent\nexport const REMOVE_PARENT_ALL: string = \"REMOVE_PARENT_ALL\";\nexport const INITIAL_PARENT: string = \"INITIAL_PARENT\";\nexport const ADD_PARENT: string = \"ADD_PARENT\";\nexport const EDIT_PARENT: string = \"EDIT_PARENT\";\nexport const REMOVE_PARENT: string = \"REMOVE_PARENT\";\n\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\nexport const CHANGE_USER_PENDING_EDIT: string = \"CHANGE_USER_PENDING_EDIT\";\nexport const CLEAR_USER_PENDING_EDIT: string = \"CLEAR_USER_PENDING_EDIT\";\n\nexport function fetchDataRequest() {\n    return {\n        type: FETCH_DATA_REQUEST\n    };\n}\n\nexport function fetchDataSuccess(user: IUser) {\n    return {\n        type: FETCH_DATA_SUCCESS,\n        user\n    };\n}\n\nexport function fetchDataError(error: any) {\n    return {\n        type: FETCH_DATA_ERROR,\n        payload: { error }\n    };\n}\n\nexport function initialTeacher(user: IUser): IInitialUserTeacherActionType {\n    return { type: INITIAL_TEACHER, user: user };\n}\n\nexport function removeTeacherAll(): IRemoveUserTeacherAllActionType {\n    return { type: REMOVE_TEACHER_ALL };\n}\n\nexport function initialStudent(user: IUser): IInitialUserStudentActionType {\n    return { type: INITIAL_STUDENT, user: user };\n}\n\nexport function removeStudentAll(): IRemoveUserStudentAllActionType {\n    return { type: REMOVE_STUDENT_ALL };\n}\n\nexport function initialParent(user: IUser): IInitialUserParentActionType {\n    return { type: INITIAL_PARENT, user: user };\n}\n\nexport function removeParentAll(): IRemoveUserParentAllActionType {\n    return { type: REMOVE_PARENT_ALL };\n}\n\nexport function addAdmin(user: IUser): IAddAdminActionType {\n    return { type: ADD_ADMIN, user: user };\n}\n\nexport function editAdmin(user: IUser): IEditAdminActionType {\n    return { type: EDIT_ADMIN, user: user };\n}\n\nexport function removeAdmin(id: any): IRemoveAdminActionType {\n    return { type: REMOVE_ADMIN, id: id };\n}\n\nexport function addTeacher(user: IUser): IAddTeacherActionType {\n    return { type: ADD_TEACHER, user: user };\n}\n\nexport function editTeacher(user: IUser): IEditTeacherActionType {\n    return { type: EDIT_TEACHER, user: user };\n}\n\nexport function removeTeacher(id: any): IRemoveTeacherActionType {\n    return { type: REMOVE_TEACHER, id: id };\n}\n\nexport function addStudent(user: IUser): IAddStudentActionType {\n    return { type: ADD_STUDENT, user: user };\n}\n\nexport function editStudent(user: IUser): IEditStudentActionType {\n    return { type: EDIT_STUDENT, user: user };\n}\n\nexport function removeStudent(id: any): IRemoveStudentActionType {\n    return { type: REMOVE_STUDENT, id: id };\n}\n\nexport function addParent(user: IUser): IAddParentActionType {\n    return { type: ADD_PARENT, user: user };\n}\n\nexport function editParent(user: IUser): IEditParentActionType {\n    return { type: EDIT_PARENT, user: user };\n}\n\nexport function removeParent(id: any): IRemoveParentActionType {\n    return { type: REMOVE_PARENT, id: id };\n}\n\nexport function changeSelectedUser(user: IUser): IChangeSelectedUserActionType {\n    return { type: CHANGE_USER_PENDING_EDIT, user: user };\n}\n\nexport function clearSelectedUser(): IClearSelectedUserActionType {\n    return { type: CLEAR_USER_PENDING_EDIT };\n}\n\nexport function setModificationState(value: UserModificationStatus): ISetModificationStateActionType {\n    return { type: SET_MODIFICATION_STATE, value: value };\n}\n\n// Admin\ninterface IAddAdminActionType { type: string, user: IUser };\ninterface IEditAdminActionType { type: string, user: IUser };\ninterface IRemoveAdminActionType { type: string, id: any };\n\n// Teacher\ninterface IInitialUserTeacherActionType {type: string, user: IUser};\ninterface IRemoveUserTeacherAllActionType { type: string };\ninterface IAddTeacherActionType { type: string, user: IUser };\ninterface IEditTeacherActionType { type: string, user: IUser };\ninterface IRemoveTeacherActionType { type: string, id: any };\ninterface IChangeSelectedTeacherActionType { type: string, user: IUser };\ninterface IClearSelectedTeacherActionType { type: string };\n\n//Student\ninterface IInitialUserStudentActionType {type: string, user: IUser};\ninterface IRemoveUserStudentAllActionType { type: string };\ninterface IAddStudentActionType { type: string, user: IUser };\ninterface IEditStudentActionType { type: string, user: IUser };\ninterface IRemoveStudentActionType { type: string, id: any };\n\n//Parent\ninterface IInitialUserParentActionType {type: string, user: IUser};\ninterface IRemoveUserParentAllActionType { type: string };\ninterface IAddParentActionType { type: string, user: IUser };\ninterface IEditParentActionType { type: string, user: IUser };\ninterface IRemoveParentActionType { type: string, id: any };\n\n\ninterface ISetModificationStateActionType { type: string, value:  UserModificationStatus};\ninterface IChangeSelectedUserActionType { type: string, user: IUser };\ninterface IClearSelectedUserActionType { type: string };","import { IStudentLeave, StudentLeaveModificationStatus } from \"../models/student_leave.interface\";\r\n\r\n// register_successfull_student_leaves\r\nexport const ADD_STUDENT_LEAVE_NOT_APPROVED_NOW: string = \"ADD_STUDENT_LEAVE_NOT_APPROVED_NOW\";\r\nexport const EDIT_STUDENT_LEAVE_NOT_APPROVED_NOW: string = \"EDIT_STUDENT_LEAVE_NOT_APPROVED_NOW\";\r\nexport const REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW: string = \"REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW\";\r\nexport const CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_AMOUNT: string = \"CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_AMOUNT\";\r\nexport const CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT: string = \"CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT\";\r\nexport const CLEAR_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT: string = \"CLEAR_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT\";\r\nexport const REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW_ALL: string = \"REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW_ALL\";\r\nexport const INITIAL_STUDENT_LEAVE_NOT_APPROVED_NOW: string = \"INITIAL_STUDENT_LEAVE_NOT_APPROVED_NOW\";\r\n\r\n// not_register_student_leaves\r\nexport const ADD_STUDENT_LEAVE_APPROVED: string = \"ADD_STUDENT_LEAVE_APPROVED\";\r\nexport const EDIT_STUDENT_LEAVE_APPROVED: string = \"EDIT_STUDENT_LEAVE_APPROVED\";\r\nexport const REMOVE_STUDENT_LEAVE_APPROVED: string = \"REMOVE_STUDENT_LEAVE_APPROVED\";\r\nexport const CHANGE_STUDENT_LEAVE_APPROVED_AMOUNT: string = \"CHANGE_STUDENT_LEAVE_APPROVED_AMOUNT\";\r\nexport const CHANGE_STUDENT_LEAVE_APPROVED_PENDING_EDIT: string = \"CHANGE_STUDENT_LEAVE_APPROVED_PENDING_EDIT\";\r\nexport const CLEAR_STUDENT_LEAVE_APPROVED_PENDING_EDIT: string = \"CLEAR_STUDENT_LEAVE_APPROVED_PENDING_EDIT\";\r\nexport const REMOVE_STUDENT_LEAVE_APPROVED_ALL: string = \"REMOVE_STUDENT_LEAVE_APPROVED_ALL\";\r\nexport const INITIAL_STUDENT_LEAVE_APPROVED: string = \"INITIAL_STUDENT_LEAVE_APPROVED\";\r\n\r\n\r\n// not_register_student_leaves\r\nexport const ADD_STUDENT_LEAVE_NOT_APPROVED: string = \"ADD_STUDENT_LEAVE_NOT_APPROVED\";\r\nexport const EDIT_STUDENT_LEAVE_NOT_APPROVED: string = \"EDIT_STUDENT_LEAVE_NOT_APPROVED\";\r\nexport const REMOVE_STUDENT_LEAVE_NOT_APPROVED: string = \"REMOVE_STUDENT_LEAVE_NOT_APPROVED\";\r\nexport const CHANGE_STUDENT_LEAVE_NOT_APPROVED_AMOUNT: string = \"CHANGE_STUDENT_LEAVE_NOT_APPROVED_AMOUNT\";\r\nexport const CHANGE_STUDENT_LEAVE_NOT_APPROVED_PENDING_EDIT: string = \"CHANGE_STUDENT_LEAVE_NOT_APPROVED_PENDING_EDIT\";\r\nexport const CLEAR_STUDENT_LEAVE_NOT_APPROVED_PENDING_EDIT: string = \"CLEAR_STUDENT_LEAVE_NOT_APPROVED_PENDING_EDIT\";\r\nexport const REMOVE_STUDENT_LEAVE_NOT_APPROVED_ALL: string = \"REMOVE_STUDENT_LEAVE_NOT_APPROVED_ALL\";\r\nexport const INITIAL_STUDENT_LEAVE_NOT_APPROVED: string = \"INITIAL_STUDENT_LEAVE_NOT_APPROVED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(student_leave: IStudentLeave) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        student_leave\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialStudentLeaveNotApprovedNow(student_leave: IStudentLeave): IInitialStudentLeaveNotApprovedNowActionType {\r\n    return { type: INITIAL_STUDENT_LEAVE_NOT_APPROVED_NOW, student_leave: student_leave };\r\n}\r\n\r\nexport function removeStudentLeaveNotApprovedNowAll(): IRemoveStudentLeaveNotApprovedNowAllActionType {\r\n    return { type: REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW_ALL };\r\n}\r\n\r\nexport function addStudentLeaveNotApprovedNow(student_leave: IStudentLeave): IAddStudentLeaveNotApprovedNowActionType {\r\n    return { type: ADD_STUDENT_LEAVE_NOT_APPROVED_NOW, student_leave: student_leave };\r\n}\r\n\r\nexport function editStudentLeaveNotApprovedNow(student_leave: IStudentLeave): IEditStudentLeaveNotApprovedNowActionType {\r\n    return { type: EDIT_STUDENT_LEAVE_NOT_APPROVED_NOW, student_leave: student_leave };\r\n}\r\n\r\nexport function removeStudentLeaveNotApprovedNow(id: any): IRemoveStudentLeaveNotApprovedNowActionType {\r\n    return { type: REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedStudentLeaveNotApprovedNow(student_leave: IStudentLeave): IChangeSelectedStudentLeaveNotApprovedNowActionType {\r\n    return { type: CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT, student_leave: student_leave };\r\n}\r\n\r\nexport function clearSelectedStudentLeaveNotApprovedNow(): IClearSelectedStudentLeaveNotApprovedNowActionType {\r\n    return { type: CLEAR_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialStudentLeaveApproved(student_leave: IStudentLeave): IInitialStudentLeaveApprovedActionType {\r\n    return { type: INITIAL_STUDENT_LEAVE_APPROVED, student_leave: student_leave };\r\n}\r\n\r\nexport function removeStudentLeaveApprovedAll(): IRemoveStudentLeaveApprovedAllActionType {\r\n    return { type: REMOVE_STUDENT_LEAVE_APPROVED_ALL };\r\n}\r\n\r\nexport function addStudentLeaveApproved(student_leave: IStudentLeave): IAddStudentLeaveApprovedActionType {\r\n    return { type: ADD_STUDENT_LEAVE_APPROVED, student_leave: student_leave };\r\n}\r\n\r\nexport function editStudentLeaveApproved(student_leave: IStudentLeave): IEditStudentLeaveApprovedActionType {\r\n    return { type: EDIT_STUDENT_LEAVE_APPROVED, student_leave: student_leave };\r\n}\r\n\r\nexport function removeStudentLeaveApproved(id: any): IRemoveStudentLeaveApprovedActionType {\r\n    return { type: REMOVE_STUDENT_LEAVE_APPROVED, id: id };\r\n}\r\n\r\nexport function changeSelectedStudentLeaveApproved(student_leave: IStudentLeave): IChangeSelectedStudentLeaveApprovedActionType {\r\n    return { type: CHANGE_STUDENT_LEAVE_APPROVED_PENDING_EDIT, student_leave: student_leave };\r\n}\r\n\r\nexport function clearSelectedStudentLeaveApproved(): IClearSelectedStudentLeaveApprovedActionType {\r\n    return { type: CLEAR_STUDENT_LEAVE_APPROVED_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: StudentLeaveModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n\r\nexport function initialStudentLeaveNotApproved(student_leave: IStudentLeave): IInitialStudentLeaveNotApprovedActionType {\r\n    return { type: INITIAL_STUDENT_LEAVE_NOT_APPROVED, student_leave: student_leave };\r\n}\r\n\r\nexport function removeStudentLeaveNotApprovedAll(): IRemoveStudentLeaveNotApprovedAllActionType {\r\n    return { type: REMOVE_STUDENT_LEAVE_NOT_APPROVED_ALL };\r\n}\r\n\r\nexport function addStudentLeaveNotApproved(student_leave: IStudentLeave): IAddStudentLeaveNotApprovedActionType {\r\n    return { type: ADD_STUDENT_LEAVE_NOT_APPROVED, student_leave: student_leave };\r\n}\r\n\r\nexport function editStudentLeaveNotApproved(student_leave: IStudentLeave): IEditStudentLeaveNotApprovedActionType {\r\n    return { type: EDIT_STUDENT_LEAVE_NOT_APPROVED, student_leave: student_leave };\r\n}\r\n\r\nexport function removeStudentLeaveNotApproved(id: any): IRemoveStudentLeaveNotApprovedActionType {\r\n    return { type: REMOVE_STUDENT_LEAVE_NOT_APPROVED, id: id };\r\n}\r\n\r\nexport function changeSelectedStudentLeaveNotApproved(student_leave: IStudentLeave): IChangeSelectedStudentLeaveNotApprovedActionType {\r\n    return { type: CHANGE_STUDENT_LEAVE_NOT_APPROVED_AMOUNT, student_leave: student_leave };\r\n}\r\n\r\nexport function clearSelectedStudentLeaveNotApproved(): IClearSelectedStudentLeaveNotApprovedActionType {\r\n    return { type: CHANGE_STUDENT_LEAVE_NOT_APPROVED_PENDING_EDIT };\r\n}\r\n\r\n// register_successfull_student_leaves\r\ninterface IAddStudentLeaveNotApprovedNowActionType { type: string, student_leave: IStudentLeave };\r\ninterface IEditStudentLeaveNotApprovedNowActionType { type: string, student_leave: IStudentLeave };\r\ninterface IRemoveStudentLeaveNotApprovedNowActionType { type: string, id: any };\r\ninterface IChangeSelectedStudentLeaveNotApprovedNowActionType { type: string, student_leave: IStudentLeave };\r\ninterface IClearSelectedStudentLeaveNotApprovedNowActionType { type: string };\r\ninterface IRemoveStudentLeaveNotApprovedNowAllActionType { type: string }\r\ninterface IInitialStudentLeaveNotApprovedNowActionType {type: string, student_leave: IStudentLeave}\r\n\r\n// not_register_student_leaves\r\ninterface IAddStudentLeaveApprovedActionType { type: string, student_leave: IStudentLeave };\r\ninterface IEditStudentLeaveApprovedActionType { type: string, student_leave: IStudentLeave };\r\ninterface IRemoveStudentLeaveApprovedActionType { type: string, id: any };\r\ninterface IChangeSelectedStudentLeaveApprovedActionType { type: string, student_leave: IStudentLeave };\r\ninterface IClearSelectedStudentLeaveApprovedActionType { type: string };\r\ninterface IRemoveStudentLeaveApprovedAllActionType { type: string }\r\ninterface IInitialStudentLeaveApprovedActionType {type: string, student_leave: IStudentLeave}\r\n\r\n\r\n// register_successfull_student_leaves\r\ninterface IAddStudentLeaveNotApprovedActionType { type: string, student_leave: IStudentLeave };\r\ninterface IEditStudentLeaveNotApprovedActionType { type: string, student_leave: IStudentLeave };\r\ninterface IRemoveStudentLeaveNotApprovedActionType { type: string, id: any };\r\ninterface IChangeSelectedStudentLeaveNotApprovedActionType { type: string, student_leave: IStudentLeave };\r\ninterface IClearSelectedStudentLeaveNotApprovedActionType { type: string };\r\ninterface IRemoveStudentLeaveNotApprovedAllActionType { type: string }\r\ninterface IInitialStudentLeaveNotApprovedActionType {type: string, student_leave: IStudentLeave}\r\n\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  StudentLeaveModificationStatus};","import { ITeacherLeave } from \"../models/teacher_leave.interface\";\r\n\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport const REMOVE_REMOVE_LEAVE_ALL: string = \"REMOVE_REMOVE_LEAVE_ALL\";\r\nexport const INITIAL_REMOVE_LEAVE: string = \"INITIAL_REMOVE_LEAVE\";\r\nexport const ADD_REMOVE_LEAVE: string = \"ADD_REMOVE_LEAVE\";\r\nexport const REMOVE_REMOVE_LEAVE: string = \"REMOVE_REMOVE_LEAVE\";\r\nexport const EDIT_REMOVE_LEAVE: string = \"EDIT_REMOVE_LEAVE\";\r\n\r\n\r\nexport const REMOVE_LEAVES_ALL: string = \"REMOVE_LEAVES_ALL\";\r\nexport const INITIAL_LEAVES: string = \"INITIAL_LEAVES\";\r\nexport const ADD_LEAVES: string = \"ADD_LEAVES\";\r\nexport const EDIT_LEAVES: string = \"EDIT_LEAVES\";\r\nexport const REMOVE_LEAVES: string = \"REMOVE_LEAVES\";\r\n\r\nexport const REMOVE_ACCEPT_LEAVE_ALL: string = \"REMOVE_ACCEPT_LEAVE_ALL\";\r\nexport const INITIAL_ACCEPT_LEAVE: string = \"INITIAL_ACCEPT_LEAVE\";\r\nexport const ADD_ACCEPT_LEAVE: string = \"ADD_ACCEPT_LEAVE\";\r\nexport const EDIT_ACCEPT_LEAVE: string = \"EDIT_ACCEPT_LEAVE\";\r\nexport const REMOVE_ACCEPT_LEAVE: string = \"REMOVE_ACCEPT_LEAVE\";\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const CHANGE_USER_PENDING_EDIT: string = \"CHANGE_USER_PENDING_EDIT\";\r\nexport const CLEAR_USER_PENDING_EDIT: string = \"CLEAR_USER_PENDING_EDIT\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(teacherLeave: ITeacherLeave) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        teacherLeave\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialRemoveTeacherLeave(teacher_leave: ITeacherLeave): IInitialRemoveTeacherLeaveActionType {\r\n    return { type: INITIAL_REMOVE_LEAVE, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function removeRemoveTeacherLeaveAll(): IRemoveRemoveTeacherLeaveAllActionType {\r\n    return { type: REMOVE_REMOVE_LEAVE_ALL };\r\n}\r\n\r\nexport function addRemoveTeacherLeave(teacher_leave: ITeacherLeave): IAddRemoveTeacherLeaveActionType {\r\n    return { type: ADD_REMOVE_LEAVE, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function editRemoveTeacherLeave(teacher_leave: ITeacherLeave): IEditRemoveTeacherLeaveActionType {\r\n    return { type: EDIT_REMOVE_LEAVE, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function removeRemoveTeacherLeave(id: any): IRemoveRemoveTeacherLeaveActionType {\r\n    return { type: REMOVE_REMOVE_LEAVE, id: id };\r\n}\r\n\r\n\r\nexport function initialAcceptTeacherLeave(teacher_leave: ITeacherLeave): IInitialAcceptTeacherLeaveActionType {\r\n    return { type: INITIAL_ACCEPT_LEAVE, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function removeAcceptTeacherLeaveAll(): IRemoveAcceptTeacherLeaveAllActionType {\r\n    return { type: REMOVE_ACCEPT_LEAVE_ALL };\r\n}\r\n\r\nexport function addAcceptTeacherLeave(teacher_leave: ITeacherLeave): IAddAcceptTeacherLeaveActionType {\r\n    return { type: ADD_ACCEPT_LEAVE, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function editAcceptTeacherLeave(teacher_leave: ITeacherLeave): IEditAcceptTeacherLeaveActionType {\r\n    return { type: EDIT_ACCEPT_LEAVE, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function removeAcceptTeacherLeave(id: any): IRemoveAcceptTeacherLeaveActionType {\r\n    return { type: REMOVE_ACCEPT_LEAVE, id: id };\r\n}\r\n\r\n\r\nexport function initialLeaves(teacher_leave: ITeacherLeave): IInitialLeavesActionType {\r\n    return { type: INITIAL_LEAVES, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function removeLeavesAll(): IRemoveLeavesAllActionType {\r\n    return { type: REMOVE_LEAVES_ALL };\r\n}\r\n\r\nexport function addLeaves(teacher_leave: ITeacherLeave): IAddLeavesActionType {\r\n    return { type: ADD_LEAVES, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function editLeaves(teacher_leave: ITeacherLeave): IEditLeavesActionType {\r\n    return { type: EDIT_LEAVES, teacher_leave: teacher_leave };\r\n}\r\n\r\nexport function removeLeaves(id: any): IRemoveLeavesActionType {\r\n    return { type: REMOVE_LEAVES, id: id };\r\n}\r\n\r\ninterface IInitialLeavesActionType {type: string, teacher_leave: ITeacherLeave};\r\ninterface IRemoveLeavesAllActionType { type: string };\r\ninterface IAddLeavesActionType { type: string, teacher_leave: ITeacherLeave };\r\ninterface IEditLeavesActionType { type: string, teacher_leave: ITeacherLeave };\r\ninterface IRemoveLeavesActionType { type: string, id: any };\r\n\r\ninterface IInitialAcceptTeacherLeaveActionType {type: string, teacher_leave: ITeacherLeave};\r\ninterface IRemoveAcceptTeacherLeaveAllActionType { type: string };\r\ninterface IAddAcceptTeacherLeaveActionType { type: string, teacher_leave: ITeacherLeave };\r\ninterface IEditAcceptTeacherLeaveActionType { type: string, teacher_leave: ITeacherLeave };\r\ninterface IRemoveAcceptTeacherLeaveActionType { type: string, id: any };\r\n\r\ninterface IInitialRemoveTeacherLeaveActionType {type: string, teacher_leave: ITeacherLeave};\r\ninterface IRemoveRemoveTeacherLeaveAllActionType { type: string };\r\ninterface IAddRemoveTeacherLeaveActionType { type: string, teacher_leave: ITeacherLeave };\r\ninterface IEditRemoveTeacherLeaveActionType { type: string, teacher_leave: ITeacherLeave };\r\ninterface IRemoveRemoveTeacherLeaveActionType { type: string, id: any };","import { ISemesterClassStudent, SemesterClassStudentModificationStatus } from \"../models/semester_class_student.interface\";\r\n\r\n// register_successfull_semester_class_students\r\nexport const ADD_NOT_PAYED_NOW: string = \"ADD_NOT_PAYED_NOW\";\r\nexport const EDIT_NOT_PAYED_NOW: string = \"EDIT_NOT_PAYED_NOW\";\r\nexport const REMOVE_NOT_PAYED_NOW: string = \"REMOVE_NOT_PAYED_NOW\";\r\nexport const CHANGE_NOT_PAYED_NOW_AMOUNT: string = \"CHANGE_NOT_PAYED_NOW_AMOUNT\";\r\nexport const CHANGE_NOT_PAYED_NOW_PENDING_EDIT: string = \"CHANGE_NOT_PAYED_NOW_PENDING_EDIT\";\r\nexport const CLEAR_NOT_PAYED_NOW_PENDING_EDIT: string = \"CLEAR_NOT_PAYED_NOW_PENDING_EDIT\";\r\nexport const REMOVE_NOT_PAYED_NOW_ALL: string = \"REMOVE_NOT_PAYED_NOW_ALL\";\r\nexport const INITIAL_NOT_PAYED_NOW: string = \"INITIAL_NOT_PAYED_NOW\";\r\n\r\n// not_register_semester_class_students\r\nexport const ADD_PAYED: string = \"ADD_PAYED\";\r\nexport const EDIT_PAYED: string = \"EDIT_PAYED\";\r\nexport const REMOVE_PAYED: string = \"REMOVE_PAYED\";\r\nexport const CHANGE_PAYED_AMOUNT: string = \"CHANGE_PAYED_AMOUNT\";\r\nexport const CHANGE_PAYED_PENDING_EDIT: string = \"CHANGE_PAYED_PENDING_EDIT\";\r\nexport const CLEAR_PAYED_PENDING_EDIT: string = \"CLEAR_PAYED_PENDING_EDIT\";\r\nexport const REMOVE_PAYED_ALL: string = \"REMOVE_PAYED_ALL\";\r\nexport const INITIAL_PAYED: string = \"INITIAL_PAYED\";\r\n\r\n\r\n// not_register_semester_class_students\r\nexport const ADD_NOT_PAYED: string = \"ADD_NOT_PAYED\";\r\nexport const EDIT_NOT_PAYED: string = \"EDIT_NOT_PAYED\";\r\nexport const REMOVE_NOT_PAYED: string = \"REMOVE_NOT_PAYED\";\r\nexport const CHANGE_NOT_PAYED_AMOUNT: string = \"CHANGE_NOT_PAYED_AMOUNT\";\r\nexport const CHANGE_NOT_PAYED_PENDING_EDIT: string = \"CHANGE_NOT_PAYED_PENDING_EDIT\";\r\nexport const CLEAR_NOT_PAYED_PENDING_EDIT: string = \"CLEAR_NOT_PAYED_PENDING_EDIT\";\r\nexport const REMOVE_NOT_PAYED_ALL: string = \"REMOVE_NOT_PAYED_ALL\";\r\nexport const INITIAL_NOT_PAYED: string = \"INITIAL_NOT_PAYED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(semester_class_student: ISemesterClassStudent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        semester_class_student\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSemesterClassStudentNotPayedNow(semester_class_student: ISemesterClassStudent): IInitialSemesterClassStudentNotPayedNowActionType {\r\n    return { type: INITIAL_NOT_PAYED_NOW, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function removeSemesterClassStudentNotPayedNowAll(): IRemoveSemesterClassStudentNotPayedNowAllActionType {\r\n    return { type: REMOVE_NOT_PAYED_NOW_ALL };\r\n}\r\n\r\nexport function addSemesterClassStudentNotPayedNow(semester_class_student: ISemesterClassStudent): IAddSemesterClassStudentNotPayedNowActionType {\r\n    return { type: ADD_NOT_PAYED_NOW, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function editSemesterClassStudentNotPayedNow(semester_class_student: ISemesterClassStudent): IEditSemesterClassStudentNotPayedNowActionType {\r\n    return { type: EDIT_NOT_PAYED_NOW, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function removeSemesterClassStudentNotPayedNow(id: any): IRemoveSemesterClassStudentNotPayedNowActionType {\r\n    return { type: REMOVE_NOT_PAYED_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClassStudentNotPayedNow(semester_class_student: ISemesterClassStudent): IChangeSelectedSemesterClassStudentNotPayedNowActionType {\r\n    return { type: CHANGE_NOT_PAYED_NOW_PENDING_EDIT, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function clearSelectedSemesterClassStudentNotPayedNow(): IClearSelectedSemesterClassStudentNotPayedNowActionType {\r\n    return { type: CLEAR_NOT_PAYED_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialSemesterClassStudentPayed(semester_class_student: ISemesterClassStudent): IInitialSemesterClassStudentPayedActionType {\r\n    return { type: INITIAL_PAYED, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function removeSemesterClassStudentPayedAll(): IRemoveSemesterClassStudentPayedAllActionType {\r\n    return { type: REMOVE_PAYED_ALL };\r\n}\r\n\r\nexport function addSemesterClassStudentPayed(semester_class_student: ISemesterClassStudent): IAddSemesterClassStudentPayedActionType {\r\n    return { type: ADD_PAYED, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function editSemesterClassStudentPayed(semester_class_student: ISemesterClassStudent): IEditSemesterClassStudentPayedActionType {\r\n    return { type: EDIT_PAYED, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function removeSemesterClassStudentPayed(id: any): IRemoveSemesterClassStudentPayedActionType {\r\n    return { type: REMOVE_PAYED, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClassStudentPayed(semester_class_student: ISemesterClassStudent): IChangeSelectedSemesterClassStudentPayedActionType {\r\n    return { type: CHANGE_PAYED_PENDING_EDIT, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function clearSelectedSemesterClassStudentPayed(): IClearSelectedSemesterClassStudentPayedActionType {\r\n    return { type: CLEAR_PAYED_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: SemesterClassStudentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n\r\nexport function initialSemesterClassStudentNotPayed(semester_class_student: ISemesterClassStudent): IInitialSemesterClassStudentNotPayedActionType {\r\n    return { type: INITIAL_NOT_PAYED, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function removeSemesterClassStudentNotPayedAll(): IRemoveSemesterClassStudentNotPayedAllActionType {\r\n    return { type: REMOVE_NOT_PAYED_ALL };\r\n}\r\n\r\nexport function addSemesterClassStudentNotPayed(semester_class_student: ISemesterClassStudent): IAddSemesterClassStudentNotPayedActionType {\r\n    return { type: ADD_NOT_PAYED, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function editSemesterClassStudentNotPayed(semester_class_student: ISemesterClassStudent): IEditSemesterClassStudentNotPayedActionType {\r\n    return { type: EDIT_NOT_PAYED, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function removeSemesterClassStudentNotPayed(id: any): IRemoveSemesterClassStudentNotPayedActionType {\r\n    return { type: REMOVE_NOT_PAYED, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClassStudentNotPayed(semester_class_student: ISemesterClassStudent): IChangeSelectedSemesterClassStudentNotPayedActionType {\r\n    return { type: CHANGE_NOT_PAYED_AMOUNT, semester_class_student: semester_class_student };\r\n}\r\n\r\nexport function clearSelectedSemesterClassStudentNotPayed(): IClearSelectedSemesterClassStudentNotPayedActionType {\r\n    return { type: CHANGE_NOT_PAYED_PENDING_EDIT };\r\n}\r\n\r\n// register_successfull_semester_class_students\r\ninterface IAddSemesterClassStudentNotPayedNowActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IEditSemesterClassStudentNotPayedNowActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IRemoveSemesterClassStudentNotPayedNowActionType { type: string, id: any };\r\ninterface IChangeSelectedSemesterClassStudentNotPayedNowActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IClearSelectedSemesterClassStudentNotPayedNowActionType { type: string };\r\ninterface IRemoveSemesterClassStudentNotPayedNowAllActionType { type: string }\r\ninterface IInitialSemesterClassStudentNotPayedNowActionType {type: string, semester_class_student: ISemesterClassStudent}\r\n\r\n// not_register_semester_class_students\r\ninterface IAddSemesterClassStudentPayedActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IEditSemesterClassStudentPayedActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IRemoveSemesterClassStudentPayedActionType { type: string, id: any };\r\ninterface IChangeSelectedSemesterClassStudentPayedActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IClearSelectedSemesterClassStudentPayedActionType { type: string };\r\ninterface IRemoveSemesterClassStudentPayedAllActionType { type: string }\r\ninterface IInitialSemesterClassStudentPayedActionType {type: string, semester_class_student: ISemesterClassStudent}\r\n\r\n\r\n// register_successfull_semester_class_students\r\ninterface IAddSemesterClassStudentNotPayedActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IEditSemesterClassStudentNotPayedActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IRemoveSemesterClassStudentNotPayedActionType { type: string, id: any };\r\ninterface IChangeSelectedSemesterClassStudentNotPayedActionType { type: string, semester_class_student: ISemesterClassStudent };\r\ninterface IClearSelectedSemesterClassStudentNotPayedActionType { type: string };\r\ninterface IRemoveSemesterClassStudentNotPayedAllActionType { type: string }\r\ninterface IInitialSemesterClassStudentNotPayedActionType {type: string, semester_class_student: ISemesterClassStudent}\r\n\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  SemesterClassStudentModificationStatus};","import { ISemesterClassParent, SemesterClassParentModificationStatus } from \"../models/semester_class_parent.interface\";\r\n\r\n// register_successfull_semester_class_parents\r\nexport const ADD_NOT_PAYED_NOW: string = \"ADD_NOT_PAYED_NOW\";\r\nexport const EDIT_NOT_PAYED_NOW: string = \"EDIT_NOT_PAYED_NOW\";\r\nexport const REMOVE_NOT_PAYED_NOW: string = \"REMOVE_NOT_PAYED_NOW\";\r\nexport const CHANGE_NOT_PAYED_NOW_AMOUNT: string = \"CHANGE_NOT_PAYED_NOW_AMOUNT\";\r\nexport const CHANGE_NOT_PAYED_NOW_PENDING_EDIT: string = \"CHANGE_NOT_PAYED_NOW_PENDING_EDIT\";\r\nexport const CLEAR_NOT_PAYED_NOW_PENDING_EDIT: string = \"CLEAR_NOT_PAYED_NOW_PENDING_EDIT\";\r\nexport const REMOVE_NOT_PAYED_NOW_ALL: string = \"REMOVE_NOT_PAYED_NOW_ALL\";\r\nexport const INITIAL_NOT_PAYED_NOW: string = \"INITIAL_NOT_PAYED_NOW\";\r\n\r\n// not_register_semester_class_parents\r\nexport const ADD_PAYED: string = \"ADD_PAYED\";\r\nexport const EDIT_PAYED: string = \"EDIT_PAYED\";\r\nexport const REMOVE_PAYED: string = \"REMOVE_PAYED\";\r\nexport const CHANGE_PAYED_AMOUNT: string = \"CHANGE_PAYED_AMOUNT\";\r\nexport const CHANGE_PAYED_PENDING_EDIT: string = \"CHANGE_PAYED_PENDING_EDIT\";\r\nexport const CLEAR_PAYED_PENDING_EDIT: string = \"CLEAR_PAYED_PENDING_EDIT\";\r\nexport const REMOVE_PAYED_ALL: string = \"REMOVE_PAYED_ALL\";\r\nexport const INITIAL_PAYED: string = \"INITIAL_PAYED\";\r\n\r\n\r\n// not_register_semester_class_parents\r\nexport const ADD_NOT_PAYED: string = \"ADD_NOT_PAYED\";\r\nexport const EDIT_NOT_PAYED: string = \"EDIT_NOT_PAYED\";\r\nexport const REMOVE_NOT_PAYED: string = \"REMOVE_NOT_PAYED\";\r\nexport const CHANGE_NOT_PAYED_AMOUNT: string = \"CHANGE_NOT_PAYED_AMOUNT\";\r\nexport const CHANGE_NOT_PAYED_PENDING_EDIT: string = \"CHANGE_NOT_PAYED_PENDING_EDIT\";\r\nexport const CLEAR_NOT_PAYED_PENDING_EDIT: string = \"CLEAR_NOT_PAYED_PENDING_EDIT\";\r\nexport const REMOVE_NOT_PAYED_ALL: string = \"REMOVE_NOT_PAYED_ALL\";\r\nexport const INITIAL_NOT_PAYED: string = \"INITIAL_NOT_PAYED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(semester_class_parent: ISemesterClassParent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        semester_class_parent\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSemesterClassParentNotPayedNow(semester_class_parent: ISemesterClassParent): IInitialSemesterClassParentNotPayedNowActionType {\r\n    return { type: INITIAL_NOT_PAYED_NOW, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function removeSemesterClassParentNotPayedNowAll(): IRemoveSemesterClassParentNotPayedNowAllActionType {\r\n    return { type: REMOVE_NOT_PAYED_NOW_ALL };\r\n}\r\n\r\nexport function addSemesterClassParentNotPayedNow(semester_class_parent: ISemesterClassParent): IAddSemesterClassParentNotPayedNowActionType {\r\n    return { type: ADD_NOT_PAYED_NOW, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function editSemesterClassParentNotPayedNow(semester_class_parent: ISemesterClassParent): IEditSemesterClassParentNotPayedNowActionType {\r\n    return { type: EDIT_NOT_PAYED_NOW, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function removeSemesterClassParentNotPayedNow(id: any): IRemoveSemesterClassParentNotPayedNowActionType {\r\n    return { type: REMOVE_NOT_PAYED_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClassParentNotPayedNow(semester_class_parent: ISemesterClassParent): IChangeSelectedSemesterClassParentNotPayedNowActionType {\r\n    return { type: CHANGE_NOT_PAYED_NOW_PENDING_EDIT, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function clearSelectedSemesterClassParentNotPayedNow(): IClearSelectedSemesterClassParentNotPayedNowActionType {\r\n    return { type: CLEAR_NOT_PAYED_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialSemesterClassParentPayed(semester_class_parent: ISemesterClassParent): IInitialSemesterClassParentPayedActionType {\r\n    return { type: INITIAL_PAYED, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function removeSemesterClassParentPayedAll(): IRemoveSemesterClassParentPayedAllActionType {\r\n    return { type: REMOVE_PAYED_ALL };\r\n}\r\n\r\nexport function addSemesterClassParentPayed(semester_class_parent: ISemesterClassParent): IAddSemesterClassParentPayedActionType {\r\n    return { type: ADD_PAYED, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function editSemesterClassParentPayed(semester_class_parent: ISemesterClassParent): IEditSemesterClassParentPayedActionType {\r\n    return { type: EDIT_PAYED, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function removeSemesterClassParentPayed(id: any): IRemoveSemesterClassParentPayedActionType {\r\n    return { type: REMOVE_PAYED, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClassParentPayed(semester_class_parent: ISemesterClassParent): IChangeSelectedSemesterClassParentPayedActionType {\r\n    return { type: CHANGE_PAYED_PENDING_EDIT, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function clearSelectedSemesterClassParentPayed(): IClearSelectedSemesterClassParentPayedActionType {\r\n    return { type: CLEAR_PAYED_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: SemesterClassParentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n\r\nexport function initialSemesterClassParentNotPayed(semester_class_parent: ISemesterClassParent): IInitialSemesterClassParentNotPayedActionType {\r\n    return { type: INITIAL_NOT_PAYED, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function removeSemesterClassParentNotPayedAll(): IRemoveSemesterClassParentNotPayedAllActionType {\r\n    return { type: REMOVE_NOT_PAYED_ALL };\r\n}\r\n\r\nexport function addSemesterClassParentNotPayed(semester_class_parent: ISemesterClassParent): IAddSemesterClassParentNotPayedActionType {\r\n    return { type: ADD_NOT_PAYED, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function editSemesterClassParentNotPayed(semester_class_parent: ISemesterClassParent): IEditSemesterClassParentNotPayedActionType {\r\n    return { type: EDIT_NOT_PAYED, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function removeSemesterClassParentNotPayed(id: any): IRemoveSemesterClassParentNotPayedActionType {\r\n    return { type: REMOVE_NOT_PAYED, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClassParentNotPayed(semester_class_parent: ISemesterClassParent): IChangeSelectedSemesterClassParentNotPayedActionType {\r\n    return { type: CHANGE_NOT_PAYED_AMOUNT, semester_class_parent: semester_class_parent };\r\n}\r\n\r\nexport function clearSelectedSemesterClassParentNotPayed(): IClearSelectedSemesterClassParentNotPayedActionType {\r\n    return { type: CHANGE_NOT_PAYED_PENDING_EDIT };\r\n}\r\n\r\n// register_successfull_semester_class_parents\r\ninterface IAddSemesterClassParentNotPayedNowActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IEditSemesterClassParentNotPayedNowActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IRemoveSemesterClassParentNotPayedNowActionType { type: string, id: any };\r\ninterface IChangeSelectedSemesterClassParentNotPayedNowActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IClearSelectedSemesterClassParentNotPayedNowActionType { type: string };\r\ninterface IRemoveSemesterClassParentNotPayedNowAllActionType { type: string }\r\ninterface IInitialSemesterClassParentNotPayedNowActionType {type: string, semester_class_parent: ISemesterClassParent}\r\n\r\n// not_register_semester_class_parents\r\ninterface IAddSemesterClassParentPayedActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IEditSemesterClassParentPayedActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IRemoveSemesterClassParentPayedActionType { type: string, id: any };\r\ninterface IChangeSelectedSemesterClassParentPayedActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IClearSelectedSemesterClassParentPayedActionType { type: string };\r\ninterface IRemoveSemesterClassParentPayedAllActionType { type: string }\r\ninterface IInitialSemesterClassParentPayedActionType {type: string, semester_class_parent: ISemesterClassParent}\r\n\r\n\r\n// register_successfull_semester_class_parents\r\ninterface IAddSemesterClassParentNotPayedActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IEditSemesterClassParentNotPayedActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IRemoveSemesterClassParentNotPayedActionType { type: string, id: any };\r\ninterface IChangeSelectedSemesterClassParentNotPayedActionType { type: string, semester_class_parent: ISemesterClassParent };\r\ninterface IClearSelectedSemesterClassParentNotPayedActionType { type: string };\r\ninterface IRemoveSemesterClassParentNotPayedAllActionType { type: string }\r\ninterface IInitialSemesterClassParentNotPayedActionType {type: string, semester_class_parent: ISemesterClassParent}\r\n\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  SemesterClassParentModificationStatus};","import { IExerciseStudent, ExerciseStudentModificationStatus } from \"../models/exercise_student.interface\";\r\n\r\n// register_successfull_exercise_students\r\nexport const ADD_EXERCISE_NOT_SUBMIT: string = \"ADD_EXERCISE_NOT_SUBMIT\";\r\nexport const EDIT_EXERCISE_NOT_SUBMIT: string = \"EDIT_EXERCISE_NOT_SUBMIT\";\r\nexport const REMOVE_EXERCISE_NOT_SUBMIT: string = \"REMOVE_EXERCISE_NOT_SUBMIT\";\r\nexport const CHANGE_EXERCISE_NOT_SUBMIT_AMOUNT: string = \"CHANGE_EXERCISE_NOT_SUBMIT_AMOUNT\";\r\nexport const CHANGE_EXERCISE_NOT_SUBMIT_PENDING_EDIT: string = \"CHANGE_EXERCISE_NOT_SUBMIT_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_NOT_SUBMIT_PENDING_EDIT: string = \"CLEAR_EXERCISE_NOT_SUBMIT_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_NOT_SUBMIT_ALL: string = \"REMOVE_EXERCISE_NOT_SUBMIT_ALL\";\r\nexport const INITIAL_EXERCISE_NOT_SUBMIT: string = \"INITIAL_EXERCISE_NOT_SUBMIT\";\r\n\r\n// not_register_exercise_students\r\nexport const ADD_EXERCISE_SUBMITED_NOT_GRADE: string = \"ADD_EXERCISE_SUBMITED_NOT_GRADE\";\r\nexport const EDIT_EXERCISE_SUBMITED_NOT_GRADE: string = \"EDIT_EXERCISE_SUBMITED_NOT_GRADE\";\r\nexport const REMOVE_EXERCISE_SUBMITED_NOT_GRADE: string = \"REMOVE_EXERCISE_SUBMITED_NOT_GRADE\";\r\nexport const CHANGE_EXERCISE_SUBMITED_NOT_GRADE_AMOUNT: string = \"CHANGE_EXERCISE_SUBMITED_NOT_GRADE_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT: string = \"CHANGE_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT: string = \"CLEAR_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL: string = \"REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL\";\r\nexport const INITIAL_EXERCISE_SUBMITED_NOT_GRADE: string = \"INITIAL_EXERCISE_SUBMITED_NOT_GRADE\";\r\n\r\n\r\n// not_register_exercise_students\r\nexport const ADD_EXERCISE_SUBMITED_GRADED: string = \"ADD_EXERCISE_SUBMITED_GRADED\";\r\nexport const EDIT_EXERCISE_SUBMITED_GRADED: string = \"EDIT_EXERCISE_SUBMITED_GRADED\";\r\nexport const REMOVE_EXERCISE_SUBMITED_GRADED: string = \"REMOVE_EXERCISE_SUBMITED_GRADED\";\r\nexport const CHANGE_EXERCISE_SUBMITED_GRADED_AMOUNT: string = \"CHANGE_EXERCISE_SUBMITED_GRADED_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SUBMITED_GRADED_PENDING_EDIT: string = \"CHANGE_EXERCISE_SUBMITED_GRADED_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SUBMITED_GRADED_PENDING_EDIT: string = \"CLEAR_EXERCISE_SUBMITED_GRADED_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SUBMITED_GRADED_ALL: string = \"REMOVE_EXERCISE_SUBMITED_GRADED_ALL\";\r\nexport const INITIAL_EXERCISE_SUBMITED_GRADED: string = \"INITIAL_EXERCISE_SUBMITED_GRADED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(exercise_student: IExerciseStudent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        exercise_student\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialExerciseNotSubmit(exercise_student: IExerciseStudent): IInitialExerciseNotSubmitActionType {\r\n    return { type: INITIAL_EXERCISE_NOT_SUBMIT, exercise_student: exercise_student };\r\n}\r\n\r\nexport function removeExerciseNotSubmitAll(): IRemoveExerciseNotSubmitAllActionType {\r\n    return { type: REMOVE_EXERCISE_NOT_SUBMIT_ALL };\r\n}\r\n\r\nexport function addExerciseNotSubmit(exercise_student: IExerciseStudent): IAddExerciseNotSubmitActionType {\r\n    return { type: ADD_EXERCISE_NOT_SUBMIT, exercise_student: exercise_student };\r\n}\r\n\r\nexport function editExerciseNotSubmit(exercise_student: IExerciseStudent): IEditExerciseNotSubmitActionType {\r\n    return { type: EDIT_EXERCISE_NOT_SUBMIT, exercise_student: exercise_student };\r\n}\r\n\r\nexport function removeExerciseNotSubmit(id: any): IRemoveExerciseNotSubmitActionType {\r\n    return { type: REMOVE_EXERCISE_NOT_SUBMIT, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseNotSubmit(exercise_student: IExerciseStudent): IChangeSelectedExerciseNotSubmitActionType {\r\n    return { type: CHANGE_EXERCISE_NOT_SUBMIT_PENDING_EDIT, exercise_student: exercise_student };\r\n}\r\n\r\nexport function clearSelectedExerciseNotSubmit(): IClearSelectedExerciseNotSubmitActionType {\r\n    return { type: CLEAR_EXERCISE_NOT_SUBMIT_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialExerciseSubmitNotGrade(exercise_student: IExerciseStudent): IInitialExerciseSubmitNotGradeActionType {\r\n    return { type: INITIAL_EXERCISE_SUBMITED_NOT_GRADE, exercise_student: exercise_student };\r\n}\r\n\r\nexport function removeExerciseSubmitNotGradeAll(): IRemoveExerciseSubmitNotGradeAllActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL };\r\n}\r\n\r\nexport function addExerciseSubmitNotGrade(exercise_student: IExerciseStudent): IAddExerciseSubmitNotGradeActionType {\r\n    return { type: ADD_EXERCISE_SUBMITED_NOT_GRADE, exercise_student: exercise_student };\r\n}\r\n\r\nexport function editExerciseSubmitNotGrade(exercise_student: IExerciseStudent): IEditExerciseSubmitNotGradeActionType {\r\n    return { type: EDIT_EXERCISE_SUBMITED_NOT_GRADE, exercise_student: exercise_student };\r\n}\r\n\r\nexport function removeExerciseSubmitNotGrade(id: any): IRemoveExerciseSubmitNotGradeActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMITED_NOT_GRADE, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseSubmitNotGrade(exercise_student: IExerciseStudent): IChangeSelectedExerciseSubmitNotGradeActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT, exercise_student: exercise_student };\r\n}\r\n\r\nexport function clearSelectedExerciseSubmitNotGrade(): IClearSelectedExerciseSubmitNotGradeActionType {\r\n    return { type: CLEAR_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ExerciseStudentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n\r\nexport function initialExerciseSubmitGraded(exercise_student: IExerciseStudent): IInitialExerciseSubmitGradedActionType {\r\n    return { type: INITIAL_EXERCISE_SUBMITED_GRADED, exercise_student: exercise_student };\r\n}\r\n\r\nexport function removeExerciseSubmitGradedAll(): IRemoveExerciseSubmitGradedAllActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMITED_GRADED_ALL };\r\n}\r\n\r\nexport function addExerciseSubmitGraded(exercise_student: IExerciseStudent): IAddExerciseSubmitGradedActionType {\r\n    return { type: ADD_EXERCISE_SUBMITED_GRADED, exercise_student: exercise_student };\r\n}\r\n\r\nexport function editExerciseSubmitGraded(exercise_student: IExerciseStudent): IEditExerciseSubmitGradedActionType {\r\n    return { type: EDIT_EXERCISE_SUBMITED_GRADED, exercise_student: exercise_student };\r\n}\r\n\r\nexport function removeExerciseSubmitGraded(id: any): IRemoveExerciseSubmitGradedActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMITED_GRADED, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseSubmitGraded(exercise_student: IExerciseStudent): IChangeSelectedExerciseSubmitGradedActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMITED_GRADED_AMOUNT, exercise_student: exercise_student };\r\n}\r\n\r\nexport function clearSelectedExerciseSubmitGraded(): IClearSelectedExerciseSubmitGradedActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMITED_GRADED_PENDING_EDIT };\r\n}\r\n\r\n// register_successfull_exercise_students\r\ninterface IAddExerciseNotSubmitActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IEditExerciseNotSubmitActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IRemoveExerciseNotSubmitActionType { type: string, id: any };\r\ninterface IChangeSelectedExerciseNotSubmitActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IClearSelectedExerciseNotSubmitActionType { type: string };\r\ninterface IRemoveExerciseNotSubmitAllActionType { type: string }\r\ninterface IInitialExerciseNotSubmitActionType {type: string, exercise_student: IExerciseStudent}\r\n\r\n// not_register_exercise_students\r\ninterface IAddExerciseSubmitNotGradeActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IEditExerciseSubmitNotGradeActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IRemoveExerciseSubmitNotGradeActionType { type: string, id: any };\r\ninterface IChangeSelectedExerciseSubmitNotGradeActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IClearSelectedExerciseSubmitNotGradeActionType { type: string };\r\ninterface IRemoveExerciseSubmitNotGradeAllActionType { type: string }\r\ninterface IInitialExerciseSubmitNotGradeActionType {type: string, exercise_student: IExerciseStudent}\r\n\r\n\r\n// register_successfull_exercise_students\r\ninterface IAddExerciseSubmitGradedActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IEditExerciseSubmitGradedActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IRemoveExerciseSubmitGradedActionType { type: string, id: any };\r\ninterface IChangeSelectedExerciseSubmitGradedActionType { type: string, exercise_student: IExerciseStudent };\r\ninterface IClearSelectedExerciseSubmitGradedActionType { type: string };\r\ninterface IRemoveExerciseSubmitGradedAllActionType { type: string }\r\ninterface IInitialExerciseSubmitGradedActionType {type: string, exercise_student: IExerciseStudent}\r\n\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ExerciseStudentModificationStatus};","import { IExerciseTeacher, ExerciseTeacherModificationStatus } from \"../models/exercise_teacher.interface\";\r\n\r\n// register_successfull_exercise_teachers\r\nexport const ADD_EXERCISE_NO_SUBMISSION: string = \"ADD_EXERCISE_NO_SUBMISSION\";\r\nexport const EDIT_EXERCISE_NO_SUBMISSION: string = \"EDIT_EXERCISE_NO_SUBMISSION\";\r\nexport const REMOVE_EXERCISE_NO_SUBMISSION: string = \"REMOVE_EXERCISE_NO_SUBMISSION\";\r\nexport const CHANGE_EXERCISE_NO_SUBMISSION_AMOUNT: string = \"CHANGE_EXERCISE_NO_SUBMISSION_AMOUNT\";\r\nexport const CHANGE_EXERCISE_NO_SUBMISSION_PENDING_EDIT: string = \"CHANGE_EXERCISE_NO_SUBMISSION_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_NO_SUBMISSION_PENDING_EDIT: string = \"CLEAR_EXERCISE_NO_SUBMISSION_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_NO_SUBMISSION_ALL: string = \"REMOVE_EXERCISE_NO_SUBMISSION_ALL\";\r\nexport const INITIAL_EXERCISE_NO_SUBMISSION: string = \"INITIAL_EXERCISE_NO_SUBMISSION\";\r\n\r\n// not_register_exercise_teachers\r\nexport const ADD_EXERCISE_SCORING: string = \"ADD_EXERCISE_SCORING\";\r\nexport const EDIT_EXERCISE_SCORING: string = \"EDIT_EXERCISE_SCORING\";\r\nexport const REMOVE_EXERCISE_SCORING: string = \"REMOVE_EXERCISE_SCORING\";\r\nexport const CHANGE_EXERCISE_SCORING_AMOUNT: string = \"CHANGE_EXERCISE_SCORING_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SCORING_PENDING_EDIT: string = \"CHANGE_EXERCISE_SCORING_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SCORING_PENDING_EDIT: string = \"CLEAR_EXERCISE_SCORING_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SCORING_ALL: string = \"REMOVE_EXERCISE_SCORING_ALL\";\r\nexport const INITIAL_EXERCISE_SCORING: string = \"INITIAL_EXERCISE_SCORING\";\r\n\r\n\r\n// not_register_exercise_teachers\r\nexport const ADD_EXERCISE_SCORING_DONE: string = \"ADD_EXERCISE_SCORING_DONE\";\r\nexport const EDIT_EXERCISE_SCORING_DONE: string = \"EDIT_EXERCISE_SCORING_DONE\";\r\nexport const REMOVE_EXERCISE_SCORING_DONE: string = \"REMOVE_EXERCISE_SCORING_DONE\";\r\nexport const CHANGE_EXERCISE_SCORING_DONE_AMOUNT: string = \"CHANGE_EXERCISE_SCORING_DONE_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SCORING_DONE_PENDING_EDIT: string = \"CHANGE_EXERCISE_SCORING_DONE_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SCORING_DONE_PENDING_EDIT: string = \"CLEAR_EXERCISE_SCORING_DONE_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SCORING_DONE_ALL: string = \"REMOVE_EXERCISE_SCORING_DONE_ALL\";\r\nexport const INITIAL_EXERCISE_SCORING_DONE: string = \"INITIAL_EXERCISE_SCORING_DONE\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(exercise_teacher: IExerciseTeacher) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        exercise_teacher\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialExerciseNoSubmission(exercise_teacher: IExerciseTeacher): IInitialExerciseNoSubmissionActionType {\r\n    return { type: INITIAL_EXERCISE_NO_SUBMISSION, exercise_teacher: exercise_teacher };\r\n}\r\n\r\nexport function removeExerciseNoSubmissionAll(): IRemoveExerciseNoSubmissionAllActionType {\r\n    return { type: REMOVE_EXERCISE_NO_SUBMISSION_ALL };\r\n}\r\n\r\nexport function addExerciseNoSubmission(exercise_teacher: IExerciseTeacher): IAddExerciseNoSubmissionActionType {\r\n    return { type: ADD_EXERCISE_NO_SUBMISSION, exercise_teacher: exercise_teacher };\r\n}\r\n\r\nexport function editExerciseNoSubmission(exercise_teacher: IExerciseTeacher): IEditExerciseNoSubmissionActionType {\r\n    return { type: EDIT_EXERCISE_NO_SUBMISSION, exercise_teacher: exercise_teacher };\r\n}\r\n\r\nexport function removeExerciseNoSubmission(id: any): IRemoveExerciseNoSubmissionActionType {\r\n    return { type: REMOVE_EXERCISE_NO_SUBMISSION, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseNoSubmission(exercise_teacher: IExerciseTeacher): IChangeSelectedExerciseNoSubmissionActionType {\r\n    return { type: CHANGE_EXERCISE_NO_SUBMISSION_PENDING_EDIT, exercise_teacher: exercise_teacher };\r\n}\r\n\r\nexport function clearSelectedExerciseNoSubmission(): IClearSelectedExerciseNoSubmissionActionType {\r\n    return { type: CLEAR_EXERCISE_NO_SUBMISSION_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialExerciseScoring(exercise_teacher: IExerciseTeacher): IInitialExerciseScoringActionType {\r\n    return { type: INITIAL_EXERCISE_SCORING, exercise_teacher: exercise_teacher };\r\n}\r\n\r\nexport function removeExerciseScoringAll(): IRemoveExerciseScoringAllActionType {\r\n    return { type: REMOVE_EXERCISE_SCORING_ALL };\r\n}\r\n\r\nexport function addExerciseScoring(exercise_teacher: IExerciseTeacher): IAddExerciseScoringActionType {\r\n    return { type: ADD_EXERCISE_SCORING, exercise_teacher: exercise_teacher };\r\n}\r\n\r\nexport function editExerciseScoring(exercise_teacher: IExerciseTeacher): IEditExerciseScoringActionType {\r\n    return { type: EDIT_EXERCISE_SCORING, exercise_teacher: exercise_teacher };\r\n}\r\n\r\nexport function removeExerciseScoring(id: any): IRemoveExerciseScoringActionType {\r\n    return { type: REMOVE_EXERCISE_SCORING, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseScoring(exercise_teacher: IExerciseTeacher): IChangeSelectedExerciseScoringActionType {\r\n    return { type: CHANGE_EXERCISE_SCORING_PENDING_EDIT, exercise_teacher: exercise_teacher };\r\n}\r\n\r\nexport function clearSelectedExerciseScoring(): IClearSelectedExerciseScoringActionType {\r\n    return { type: CLEAR_EXERCISE_SCORING_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ExerciseTeacherModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n\r\nexport function initialExerciseScoringDone(exercise_teacher: IExerciseTeacher): IInitialExerciseScoringDoneActionType {\r\n    return { type: INITIAL_EXERCISE_SCORING_DONE, exercise_teacher: exercise_teacher };\r\n}\r\n\r\nexport function removeExerciseScoringDoneAll(): IRemoveExerciseScoringDoneAllActionType {\r\n    return { type: REMOVE_EXERCISE_SCORING_DONE_ALL };\r\n}\r\n\r\nexport function addExerciseScoringDone(exercise_teacher: IExerciseTeacher): IAddExerciseScoringDoneActionType {\r\n    return { type: ADD_EXERCISE_SCORING_DONE, exercise_teacher: exercise_teacher };\r\n}\r\n\r\nexport function editExerciseScoringDone(exercise_teacher: IExerciseTeacher): IEditExerciseScoringDoneActionType {\r\n    return { type: EDIT_EXERCISE_SCORING_DONE, exercise_teacher: exercise_teacher };\r\n}\r\n\r\nexport function removeExerciseScoringDone(id: any): IRemoveExerciseScoringDoneActionType {\r\n    return { type: REMOVE_EXERCISE_SCORING_DONE, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseScoringDone(exercise_teacher: IExerciseTeacher): IChangeSelectedExerciseScoringDoneActionType {\r\n    return { type: CHANGE_EXERCISE_SCORING_DONE_AMOUNT, exercise_teacher: exercise_teacher };\r\n}\r\n\r\nexport function clearSelectedExerciseScoringDone(): IClearSelectedExerciseScoringDoneActionType {\r\n    return { type: CHANGE_EXERCISE_SCORING_DONE_PENDING_EDIT };\r\n}\r\n\r\n// register_successfull_exercise_teachers\r\ninterface IAddExerciseNoSubmissionActionType { type: string, exercise_teacher: IExerciseTeacher };\r\ninterface IEditExerciseNoSubmissionActionType { type: string, exercise_teacher: IExerciseTeacher };\r\ninterface IRemoveExerciseNoSubmissionActionType { type: string, id: any };\r\ninterface IChangeSelectedExerciseNoSubmissionActionType { type: string, exercise_teacher: IExerciseTeacher };\r\ninterface IClearSelectedExerciseNoSubmissionActionType { type: string };\r\ninterface IRemoveExerciseNoSubmissionAllActionType { type: string }\r\ninterface IInitialExerciseNoSubmissionActionType {type: string, exercise_teacher: IExerciseTeacher}\r\n\r\n// not_register_exercise_teachers\r\ninterface IAddExerciseScoringActionType { type: string, exercise_teacher: IExerciseTeacher };\r\ninterface IEditExerciseScoringActionType { type: string, exercise_teacher: IExerciseTeacher };\r\ninterface IRemoveExerciseScoringActionType { type: string, id: any };\r\ninterface IChangeSelectedExerciseScoringActionType { type: string, exercise_teacher: IExerciseTeacher };\r\ninterface IClearSelectedExerciseScoringActionType { type: string };\r\ninterface IRemoveExerciseScoringAllActionType { type: string }\r\ninterface IInitialExerciseScoringActionType {type: string, exercise_teacher: IExerciseTeacher}\r\n\r\n\r\n// register_successfull_exercise_teachers\r\ninterface IAddExerciseScoringDoneActionType { type: string, exercise_teacher: IExerciseTeacher };\r\ninterface IEditExerciseScoringDoneActionType { type: string, exercise_teacher: IExerciseTeacher };\r\ninterface IRemoveExerciseScoringDoneActionType { type: string, id: any };\r\ninterface IChangeSelectedExerciseScoringDoneActionType { type: string, exercise_teacher: IExerciseTeacher };\r\ninterface IClearSelectedExerciseScoringDoneActionType { type: string };\r\ninterface IRemoveExerciseScoringDoneAllActionType { type: string }\r\ninterface IInitialExerciseScoringDoneActionType {type: string, exercise_teacher: IExerciseTeacher}\r\n\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ExerciseTeacherModificationStatus};","import { IExerciseParent, ExerciseParentModificationStatus } from \"../models/exercise_parent.interface\";\r\n\r\n// register_successfull_exercise_parents\r\nexport const ADD_EXERCISE_NOT_SUBMIT: string = \"ADD_EXERCISE_NOT_SUBMIT\";\r\nexport const EDIT_EXERCISE_NOT_SUBMIT: string = \"EDIT_EXERCISE_NOT_SUBMIT\";\r\nexport const REMOVE_EXERCISE_NOT_SUBMIT: string = \"REMOVE_EXERCISE_NOT_SUBMIT\";\r\nexport const CHANGE_EXERCISE_NOT_SUBMIT_AMOUNT: string = \"CHANGE_EXERCISE_NOT_SUBMIT_AMOUNT\";\r\nexport const CHANGE_EXERCISE_NOT_SUBMIT_PENDING_EDIT: string = \"CHANGE_EXERCISE_NOT_SUBMIT_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_NOT_SUBMIT_PENDING_EDIT: string = \"CLEAR_EXERCISE_NOT_SUBMIT_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_NOT_SUBMIT_ALL: string = \"REMOVE_EXERCISE_NOT_SUBMIT_ALL\";\r\nexport const INITIAL_EXERCISE_NOT_SUBMIT: string = \"INITIAL_EXERCISE_NOT_SUBMIT\";\r\n\r\n// not_register_exercise_parents\r\nexport const ADD_EXERCISE_SUBMITED_NOT_GRADE: string = \"ADD_EXERCISE_SUBMITED_NOT_GRADE\";\r\nexport const EDIT_EXERCISE_SUBMITED_NOT_GRADE: string = \"EDIT_EXERCISE_SUBMITED_NOT_GRADE\";\r\nexport const REMOVE_EXERCISE_SUBMITED_NOT_GRADE: string = \"REMOVE_EXERCISE_SUBMITED_NOT_GRADE\";\r\nexport const CHANGE_EXERCISE_SUBMITED_NOT_GRADE_AMOUNT: string = \"CHANGE_EXERCISE_SUBMITED_NOT_GRADE_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT: string = \"CHANGE_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT: string = \"CLEAR_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL: string = \"REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL\";\r\nexport const INITIAL_EXERCISE_SUBMITED_NOT_GRADE: string = \"INITIAL_EXERCISE_SUBMITED_NOT_GRADE\";\r\n\r\n\r\n// not_register_exercise_parents\r\nexport const ADD_EXERCISE_SUBMITED_GRADED: string = \"ADD_EXERCISE_SUBMITED_GRADED\";\r\nexport const EDIT_EXERCISE_SUBMITED_GRADED: string = \"EDIT_EXERCISE_SUBMITED_GRADED\";\r\nexport const REMOVE_EXERCISE_SUBMITED_GRADED: string = \"REMOVE_EXERCISE_SUBMITED_GRADED\";\r\nexport const CHANGE_EXERCISE_SUBMITED_GRADED_AMOUNT: string = \"CHANGE_EXERCISE_SUBMITED_GRADED_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SUBMITED_GRADED_PENDING_EDIT: string = \"CHANGE_EXERCISE_SUBMITED_GRADED_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SUBMITED_GRADED_PENDING_EDIT: string = \"CLEAR_EXERCISE_SUBMITED_GRADED_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SUBMITED_GRADED_ALL: string = \"REMOVE_EXERCISE_SUBMITED_GRADED_ALL\";\r\nexport const INITIAL_EXERCISE_SUBMITED_GRADED: string = \"INITIAL_EXERCISE_SUBMITED_GRADED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(exercise_parent: IExerciseParent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        exercise_parent\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialExerciseNotSubmit(exercise_parent: IExerciseParent): IInitialExerciseNotSubmitActionType {\r\n    return { type: INITIAL_EXERCISE_NOT_SUBMIT, exercise_parent: exercise_parent };\r\n}\r\n\r\nexport function removeExerciseNotSubmitAll(): IRemoveExerciseNotSubmitAllActionType {\r\n    return { type: REMOVE_EXERCISE_NOT_SUBMIT_ALL };\r\n}\r\n\r\nexport function addExerciseNotSubmit(exercise_parent: IExerciseParent): IAddExerciseNotSubmitActionType {\r\n    return { type: ADD_EXERCISE_NOT_SUBMIT, exercise_parent: exercise_parent };\r\n}\r\n\r\nexport function editExerciseNotSubmit(exercise_parent: IExerciseParent): IEditExerciseNotSubmitActionType {\r\n    return { type: EDIT_EXERCISE_NOT_SUBMIT, exercise_parent: exercise_parent };\r\n}\r\n\r\nexport function removeExerciseNotSubmit(id: any): IRemoveExerciseNotSubmitActionType {\r\n    return { type: REMOVE_EXERCISE_NOT_SUBMIT, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseNotSubmit(exercise_parent: IExerciseParent): IChangeSelectedExerciseNotSubmitActionType {\r\n    return { type: CHANGE_EXERCISE_NOT_SUBMIT_PENDING_EDIT, exercise_parent: exercise_parent };\r\n}\r\n\r\nexport function clearSelectedExerciseNotSubmit(): IClearSelectedExerciseNotSubmitActionType {\r\n    return { type: CLEAR_EXERCISE_NOT_SUBMIT_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialExerciseSubmitNotGrade(exercise_parent: IExerciseParent): IInitialExerciseSubmitNotGradeActionType {\r\n    return { type: INITIAL_EXERCISE_SUBMITED_NOT_GRADE, exercise_parent: exercise_parent };\r\n}\r\n\r\nexport function removeExerciseSubmitNotGradeAll(): IRemoveExerciseSubmitNotGradeAllActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL };\r\n}\r\n\r\nexport function addExerciseSubmitNotGrade(exercise_parent: IExerciseParent): IAddExerciseSubmitNotGradeActionType {\r\n    return { type: ADD_EXERCISE_SUBMITED_NOT_GRADE, exercise_parent: exercise_parent };\r\n}\r\n\r\nexport function editExerciseSubmitNotGrade(exercise_parent: IExerciseParent): IEditExerciseSubmitNotGradeActionType {\r\n    return { type: EDIT_EXERCISE_SUBMITED_NOT_GRADE, exercise_parent: exercise_parent };\r\n}\r\n\r\nexport function removeExerciseSubmitNotGrade(id: any): IRemoveExerciseSubmitNotGradeActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMITED_NOT_GRADE, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseSubmitNotGrade(exercise_parent: IExerciseParent): IChangeSelectedExerciseSubmitNotGradeActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT, exercise_parent: exercise_parent };\r\n}\r\n\r\nexport function clearSelectedExerciseSubmitNotGrade(): IClearSelectedExerciseSubmitNotGradeActionType {\r\n    return { type: CLEAR_EXERCISE_SUBMITED_NOT_GRADE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ExerciseParentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n\r\nexport function initialExerciseSubmitGraded(exercise_parent: IExerciseParent): IInitialExerciseSubmitGradedActionType {\r\n    return { type: INITIAL_EXERCISE_SUBMITED_GRADED, exercise_parent: exercise_parent };\r\n}\r\n\r\nexport function removeExerciseSubmitGradedAll(): IRemoveExerciseSubmitGradedAllActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMITED_GRADED_ALL };\r\n}\r\n\r\nexport function addExerciseSubmitGraded(exercise_parent: IExerciseParent): IAddExerciseSubmitGradedActionType {\r\n    return { type: ADD_EXERCISE_SUBMITED_GRADED, exercise_parent: exercise_parent };\r\n}\r\n\r\nexport function editExerciseSubmitGraded(exercise_parent: IExerciseParent): IEditExerciseSubmitGradedActionType {\r\n    return { type: EDIT_EXERCISE_SUBMITED_GRADED, exercise_parent: exercise_parent };\r\n}\r\n\r\nexport function removeExerciseSubmitGraded(id: any): IRemoveExerciseSubmitGradedActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMITED_GRADED, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseSubmitGraded(exercise_parent: IExerciseParent): IChangeSelectedExerciseSubmitGradedActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMITED_GRADED_AMOUNT, exercise_parent: exercise_parent };\r\n}\r\n\r\nexport function clearSelectedExerciseSubmitGraded(): IClearSelectedExerciseSubmitGradedActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMITED_GRADED_PENDING_EDIT };\r\n}\r\n\r\n// register_successfull_exercise_parents\r\ninterface IAddExerciseNotSubmitActionType { type: string, exercise_parent: IExerciseParent };\r\ninterface IEditExerciseNotSubmitActionType { type: string, exercise_parent: IExerciseParent };\r\ninterface IRemoveExerciseNotSubmitActionType { type: string, id: any };\r\ninterface IChangeSelectedExerciseNotSubmitActionType { type: string, exercise_parent: IExerciseParent };\r\ninterface IClearSelectedExerciseNotSubmitActionType { type: string };\r\ninterface IRemoveExerciseNotSubmitAllActionType { type: string }\r\ninterface IInitialExerciseNotSubmitActionType {type: string, exercise_parent: IExerciseParent}\r\n\r\n// not_register_exercise_parents\r\ninterface IAddExerciseSubmitNotGradeActionType { type: string, exercise_parent: IExerciseParent };\r\ninterface IEditExerciseSubmitNotGradeActionType { type: string, exercise_parent: IExerciseParent };\r\ninterface IRemoveExerciseSubmitNotGradeActionType { type: string, id: any };\r\ninterface IChangeSelectedExerciseSubmitNotGradeActionType { type: string, exercise_parent: IExerciseParent };\r\ninterface IClearSelectedExerciseSubmitNotGradeActionType { type: string };\r\ninterface IRemoveExerciseSubmitNotGradeAllActionType { type: string }\r\ninterface IInitialExerciseSubmitNotGradeActionType {type: string, exercise_parent: IExerciseParent}\r\n\r\n\r\n// register_successfull_exercise_parents\r\ninterface IAddExerciseSubmitGradedActionType { type: string, exercise_parent: IExerciseParent };\r\ninterface IEditExerciseSubmitGradedActionType { type: string, exercise_parent: IExerciseParent };\r\ninterface IRemoveExerciseSubmitGradedActionType { type: string, id: any };\r\ninterface IChangeSelectedExerciseSubmitGradedActionType { type: string, exercise_parent: IExerciseParent };\r\ninterface IClearSelectedExerciseSubmitGradedActionType { type: string };\r\ninterface IRemoveExerciseSubmitGradedAllActionType { type: string }\r\ninterface IInitialExerciseSubmitGradedActionType {type: string, exercise_parent: IExerciseParent}\r\n\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ExerciseParentModificationStatus};","import { IExerciseSubmission, ExerciseSubmissionModificationStatus } from \"../models/exercise_submission.interface\";\r\n\r\n// register_successfull_exercise_submissions\r\nexport const ADD_EXERCISE_SUBMISSION_NOT_GRADED: string = \"ADD_EXERCISE_SUBMISSION_NOT_GRADED\";\r\nexport const EDIT_EXERCISE_SUBMISSION_NOT_GRADED: string = \"EDIT_EXERCISE_SUBMISSION_NOT_GRADED\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_NOT_GRADED: string = \"REMOVE_EXERCISE_SUBMISSION_NOT_GRADED\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_AMOUNT: string = \"CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: string = \"CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: string = \"CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL: string = \"REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL\";\r\nexport const INITIAL_EXERCISE_SUBMISSION_NOT_GRADED: string = \"INITIAL_EXERCISE_SUBMISSION_NOT_GRADED\";\r\n\r\n// not_register_exercise_submissions\r\nexport const ADD_EXERCISE_SUBMISSION_GRADED: string = \"ADD_EXERCISE_SUBMISSION_GRADED\";\r\nexport const EDIT_EXERCISE_SUBMISSION_GRADED: string = \"EDIT_EXERCISE_SUBMISSION_GRADED\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_GRADED: string = \"REMOVE_EXERCISE_SUBMISSION_GRADED\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_GRADED_AMOUNT: string = \"CHANGE_EXERCISE_SUBMISSION_GRADED_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: string = \"CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: string = \"CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_GRADED_ALL: string = \"REMOVE_EXERCISE_SUBMISSION_GRADED_ALL\";\r\nexport const INITIAL_EXERCISE_SUBMISSION_GRADED: string = \"INITIAL_EXERCISE_SUBMISSION_GRADED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(exercise_submission: IExerciseSubmission) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        exercise_submission\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialExerciseNotGraded(exercise_submission: IExerciseSubmission): IInitialExerciseNotGradedActionType {\r\n    return { type: INITIAL_EXERCISE_SUBMISSION_NOT_GRADED, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function removeExerciseNotGradedAll(): IRemoveExerciseNotGradedAllActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL };\r\n}\r\n\r\nexport function addExerciseNotGraded(exercise_submission: IExerciseSubmission): IAddExerciseNotGradedActionType {\r\n    return { type: ADD_EXERCISE_SUBMISSION_NOT_GRADED, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function editExerciseNotGraded(exercise_submission: IExerciseSubmission): IEditExerciseNotGradedActionType {\r\n    return { type: EDIT_EXERCISE_SUBMISSION_NOT_GRADED, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function removeExerciseNotGraded(id: any): IRemoveExerciseNotGradedActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_NOT_GRADED, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseNotGraded(exercise_submission: IExerciseSubmission): IChangeSelectedExerciseNotGradedActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function clearSelectedExerciseNotGraded(): IClearSelectedExerciseNotGradedActionType {\r\n    return { type: CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialExerciseGraded(exercise_submission: IExerciseSubmission): IInitialExerciseGradedActionType {\r\n    return { type: INITIAL_EXERCISE_SUBMISSION_GRADED, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function removeExerciseGradedAll(): IRemoveExerciseGradedAllActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_GRADED_ALL };\r\n}\r\n\r\nexport function addExerciseGraded(exercise_submission: IExerciseSubmission): IAddExerciseGradedActionType {\r\n    return { type: ADD_EXERCISE_SUBMISSION_GRADED, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function editExerciseGraded(exercise_submission: IExerciseSubmission): IEditExerciseGradedActionType {\r\n    return { type: EDIT_EXERCISE_SUBMISSION_GRADED, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function removeExerciseGraded(id: any): IRemoveExerciseGradedActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_GRADED, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseGraded(exercise_submission: IExerciseSubmission): IChangeSelectedExerciseGradedActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT, exercise_submission: exercise_submission };\r\n}\r\n\r\nexport function clearSelectedExerciseGraded(): IClearSelectedExerciseGradedActionType {\r\n    return { type: CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ExerciseSubmissionModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_exercise_submissions\r\ninterface IAddExerciseNotGradedActionType { type: string, exercise_submission: IExerciseSubmission };\r\ninterface IEditExerciseNotGradedActionType { type: string, exercise_submission: IExerciseSubmission };\r\ninterface IRemoveExerciseNotGradedActionType { type: string, id: any };\r\ninterface IChangeSelectedExerciseNotGradedActionType { type: string, exercise_submission: IExerciseSubmission };\r\ninterface IClearSelectedExerciseNotGradedActionType { type: string };\r\ninterface IRemoveExerciseNotGradedAllActionType { type: string }\r\ninterface IInitialExerciseNotGradedActionType {type: string, exercise_submission: IExerciseSubmission}\r\n\r\n// not_register_exercise_submissions\r\ninterface IAddExerciseGradedActionType { type: string, exercise_submission: IExerciseSubmission };\r\ninterface IEditExerciseGradedActionType { type: string, exercise_submission: IExerciseSubmission };\r\ninterface IRemoveExerciseGradedActionType { type: string, id: any };\r\ninterface IChangeSelectedExerciseGradedActionType { type: string, exercise_submission: IExerciseSubmission };\r\ninterface IClearSelectedExerciseGradedActionType { type: string };\r\ninterface IRemoveExerciseGradedAllActionType { type: string }\r\ninterface IInitialExerciseGradedActionType {type: string, exercise_submission: IExerciseSubmission}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ExerciseSubmissionModificationStatus};","import { IUserRegisterJoinSemester, UserRegisterJoinSemesterModificationStatus } from \"../models/user_register_join_semester.interface\";\r\n\r\n// register_successfull_user_register_join_semesters\r\nexport const ADD_COMPLETED: string = \"ADD_COMPLETED\";\r\nexport const EDIT_COMPLETED: string = \"EDIT_COMPLETED\";\r\nexport const REMOVE_COMPLETED: string = \"REMOVE_COMPLETED\";\r\nexport const CHANGE_COMPLETED_AMOUNT: string = \"CHANGE_COMPLETED_AMOUNT\";\r\nexport const CHANGE_COMPLETED_PENDING_EDIT: string = \"CHANGE_COMPLETED_PENDING_EDIT\";\r\nexport const CLEAR_COMPLETED_PENDING_EDIT: string = \"CLEAR_COMPLETED_PENDING_EDIT\";\r\nexport const REMOVE_COMPLETED_ALL: string = \"REMOVE_COMPLETED_ALL\";\r\nexport const INITIAL_COMPLETED: string = \"INITIAL_COMPLETED\";\r\n\r\n// not_register_user_register_join_semesters\r\nexport const ADD_WAITING: string = \"ADD_WAITING\";\r\nexport const EDIT_WAITING: string = \"EDIT_WAITING\";\r\nexport const REMOVE_WAITING: string = \"REMOVE_WAITING\";\r\nexport const CHANGE_WAITING_AMOUNT: string = \"CHANGE_WAITING_AMOUNT\";\r\nexport const CHANGE_WAITING_PENDING_EDIT: string = \"CHANGE_WAITING_PENDING_EDIT\";\r\nexport const CLEAR_WAITING_PENDING_EDIT: string = \"CLEAR_WAITING_PENDING_EDIT\";\r\nexport const REMOVE_WAITING_ALL: string = \"REMOVE_WAITING_ALL\";\r\nexport const INITIAL_WAITING: string = \"INITIAL_WAITING\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(user_register_join_semester: IUserRegisterJoinSemester) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        user_register_join_semester\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCompleted(user_register_join_semester: IUserRegisterJoinSemester): IInitialCompletedActionType {\r\n    return { type: INITIAL_COMPLETED, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function removeCompletedAll(): IRemoveCompletedAllActionType {\r\n    return { type: REMOVE_COMPLETED_ALL };\r\n}\r\n\r\nexport function addCompleted(user_register_join_semester: IUserRegisterJoinSemester): IAddCompletedActionType {\r\n    return { type: ADD_COMPLETED, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function editCompleted(user_register_join_semester: IUserRegisterJoinSemester): IEditCompletedActionType {\r\n    return { type: EDIT_COMPLETED, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function removeCompleted(id: any): IRemoveCompletedActionType {\r\n    return { type: REMOVE_COMPLETED, id: id };\r\n}\r\n\r\nexport function changeSelectedCompleted(user_register_join_semester: IUserRegisterJoinSemester): IChangeSelectedCompletedActionType {\r\n    return { type: CHANGE_COMPLETED_PENDING_EDIT, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function clearSelectedCompleted(): IClearSelectedCompletedActionType {\r\n    return { type: CLEAR_COMPLETED_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialWaiting(user_register_join_semester: IUserRegisterJoinSemester): IInitialWaitingActionType {\r\n    return { type: INITIAL_WAITING, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function removeWaitingAll(): IRemoveWaitingAllActionType {\r\n    return { type: REMOVE_WAITING_ALL };\r\n}\r\n\r\nexport function addWaiting(user_register_join_semester: IUserRegisterJoinSemester): IAddWaitingActionType {\r\n    return { type: ADD_WAITING, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function editWaiting(user_register_join_semester: IUserRegisterJoinSemester): IEditWaitingActionType {\r\n    return { type: EDIT_WAITING, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function removeWaiting(id: any): IRemoveWaitingActionType {\r\n    return { type: REMOVE_WAITING, id: id };\r\n}\r\n\r\nexport function changeSelectedWaiting(user_register_join_semester: IUserRegisterJoinSemester): IChangeSelectedWaitingActionType {\r\n    return { type: CHANGE_WAITING_PENDING_EDIT, user_register_join_semester: user_register_join_semester };\r\n}\r\n\r\nexport function clearSelectedWaiting(): IClearSelectedWaitingActionType {\r\n    return { type: CLEAR_WAITING_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: UserRegisterJoinSemesterModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_user_register_join_semesters\r\ninterface IAddCompletedActionType { type: string, user_register_join_semester: IUserRegisterJoinSemester };\r\ninterface IEditCompletedActionType { type: string, user_register_join_semester: IUserRegisterJoinSemester };\r\ninterface IRemoveCompletedActionType { type: string, id: any };\r\ninterface IChangeSelectedCompletedActionType { type: string, user_register_join_semester: IUserRegisterJoinSemester };\r\ninterface IClearSelectedCompletedActionType { type: string };\r\ninterface IRemoveCompletedAllActionType { type: string }\r\ninterface IInitialCompletedActionType {type: string, user_register_join_semester: IUserRegisterJoinSemester}\r\n\r\n// not_register_user_register_join_semesters\r\ninterface IAddWaitingActionType { type: string, user_register_join_semester: IUserRegisterJoinSemester };\r\ninterface IEditWaitingActionType { type: string, user_register_join_semester: IUserRegisterJoinSemester };\r\ninterface IRemoveWaitingActionType { type: string, id: any };\r\ninterface IChangeSelectedWaitingActionType { type: string, user_register_join_semester: IUserRegisterJoinSemester };\r\ninterface IClearSelectedWaitingActionType { type: string };\r\ninterface IRemoveWaitingAllActionType { type: string }\r\ninterface IInitialWaitingActionType {type: string, user_register_join_semester: IUserRegisterJoinSemester}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  UserRegisterJoinSemesterModificationStatus};","import { IClassTeacher, ClassTeacherModificationStatus } from \"../models/class_teacher.interface\";\r\n\r\n// register_successfull_class_teachers\r\nexport const ADD_DOING_CLASS: string = \"ADD_DOING_CLASS\";\r\nexport const EDIT_DOING_CLASS: string = \"EDIT_DOING_CLASS\";\r\nexport const REMOVE_DOING_CLASS: string = \"REMOVE_DOING_CLASS\";\r\nexport const CHANGE_DOING_CLASS_AMOUNT: string = \"CHANGE_DOING_CLASS_AMOUNT\";\r\nexport const CHANGE_DOING_CLASS_PENDING_EDIT: string = \"CHANGE_DOING_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_DOING_CLASS_PENDING_EDIT: string = \"CLEAR_DOING_CLASS_PENDING_EDIT\";\r\nexport const REMOVE_DOING_CLASS_ALL: string = \"REMOVE_DOING_CLASS_ALL\";\r\nexport const INITIAL_DOING_CLASS: string = \"INITIAL_DOING_CLASS\";\r\n\r\n// not_register_class_teachers\r\nexport const ADD_DONE_CLASS: string = \"ADD_DONE_CLASS\";\r\nexport const EDIT_DONE_CLASS: string = \"EDIT_DONE_CLASS\";\r\nexport const REMOVE_DONE_CLASS: string = \"REMOVE_DONE_CLASS\";\r\nexport const CHANGE_DONE_CLASS_AMOUNT: string = \"CHANGE_DONE_CLASS_AMOUNT\";\r\nexport const CHANGE_DONE_CLASS_PENDING_EDIT: string = \"CHANGE_DONE_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_DONE_CLASS_PENDING_EDIT: string = \"CLEAR_DONE_CLASS_PENDING_EDIT\";\r\nexport const REMOVE_DONE_CLASS_ALL: string = \"REMOVE_DONE_CLASS_ALL\";\r\nexport const INITIAL_DONE_CLASS: string = \"INITIAL_DONE_CLASS\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(class_teacher: IClassTeacher) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        class_teacher\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialDoinglClass(class_teacher: IClassTeacher): IInitialDoinglClassActionType {\r\n    return { type: INITIAL_DOING_CLASS, class_teacher: class_teacher };\r\n}\r\n\r\nexport function removeDoinglClassAll(): IRemoveDoinglClassAllActionType {\r\n    return { type: REMOVE_DOING_CLASS_ALL };\r\n}\r\n\r\nexport function addDoinglClass(class_teacher: IClassTeacher): IAddDoinglClassActionType {\r\n    return { type: ADD_DOING_CLASS, class_teacher: class_teacher };\r\n}\r\n\r\nexport function editDoinglClass(class_teacher: IClassTeacher): IEditDoinglClassActionType {\r\n    return { type: EDIT_DOING_CLASS, class_teacher: class_teacher };\r\n}\r\n\r\nexport function removeDoinglClass(id: any): IRemoveDoinglClassActionType {\r\n    return { type: REMOVE_DOING_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedDoinglClass(class_teacher: IClassTeacher): IChangeSelectedDoinglClassActionType {\r\n    return { type: CHANGE_DOING_CLASS_PENDING_EDIT, class_teacher: class_teacher };\r\n}\r\n\r\nexport function clearSelectedDoinglClass(): IClearSelectedDoinglClassActionType {\r\n    return { type: CLEAR_DOING_CLASS_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialDoneClass(class_teacher: IClassTeacher): IInitialDoneClassActionType {\r\n    return { type: INITIAL_DONE_CLASS, class_teacher: class_teacher };\r\n}\r\n\r\nexport function removeDoneClassAll(): IRemoveDoneClassAllActionType {\r\n    return { type: REMOVE_DONE_CLASS_ALL };\r\n}\r\n\r\nexport function addDoneClass(class_teacher: IClassTeacher): IAddDoneClassActionType {\r\n    return { type: ADD_DONE_CLASS, class_teacher: class_teacher };\r\n}\r\n\r\nexport function editDoneClass(class_teacher: IClassTeacher): IEditDoneClassActionType {\r\n    return { type: EDIT_DONE_CLASS, class_teacher: class_teacher };\r\n}\r\n\r\nexport function removeDoneClass(id: any): IRemoveDoneClassActionType {\r\n    return { type: REMOVE_DONE_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedDoneClass(class_teacher: IClassTeacher): IChangeSelectedDoneClassActionType {\r\n    return { type: CHANGE_DONE_CLASS_PENDING_EDIT, class_teacher: class_teacher };\r\n}\r\n\r\nexport function clearSelectedDoneClass(): IClearSelectedDoneClassActionType {\r\n    return { type: CLEAR_DONE_CLASS_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ClassTeacherModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_class_teachers\r\ninterface IAddDoinglClassActionType { type: string, class_teacher: IClassTeacher };\r\ninterface IEditDoinglClassActionType { type: string, class_teacher: IClassTeacher };\r\ninterface IRemoveDoinglClassActionType { type: string, id: any };\r\ninterface IChangeSelectedDoinglClassActionType { type: string, class_teacher: IClassTeacher };\r\ninterface IClearSelectedDoinglClassActionType { type: string };\r\ninterface IRemoveDoinglClassAllActionType { type: string }\r\ninterface IInitialDoinglClassActionType {type: string, class_teacher: IClassTeacher}\r\n\r\n// not_register_class_teachers\r\ninterface IAddDoneClassActionType { type: string, class_teacher: IClassTeacher };\r\ninterface IEditDoneClassActionType { type: string, class_teacher: IClassTeacher };\r\ninterface IRemoveDoneClassActionType { type: string, id: any };\r\ninterface IChangeSelectedDoneClassActionType { type: string, class_teacher: IClassTeacher };\r\ninterface IClearSelectedDoneClassActionType { type: string };\r\ninterface IRemoveDoneClassAllActionType { type: string }\r\ninterface IInitialDoneClassActionType {type: string, class_teacher: IClassTeacher}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ClassTeacherModificationStatus};","import { ICourseTeacher, CourseTeacherModificationStatus } from \"../models/course_teacher.interface\";\r\n\r\n// register_successfull_courses\r\nexport const ADD_REGISTER_SUCCESSFULL_COURSE: string = \"ADD_REGISTER_SUCCESSFULL_COURSE\";\r\nexport const EDIT_REGISTER_SUCCESSFULL_COURSE: string = \"EDIT_REGISTER_SUCCESSFULL_COURSE\";\r\nexport const REMOVE_REGISTER_SUCCESSFULL_COURSE: string = \"REMOVE_REGISTER_SUCCESSFULL_COURSE\";\r\nexport const CHANGE_REGISTER_SUCCESSFULL_COURSE_AMOUNT: string = \"CHANGE_REGISTER_SUCCESSFULL_COURSE_AMOUNT\";\r\nexport const CHANGE_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT: string = \"CHANGE_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT\";\r\nexport const CLEAR_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT: string = \"CLEAR_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT\";\r\nexport const REMOVE_REGISTER_SUCCESSFULL_COURSE_ALL: string = \"REMOVE_REGISTER_SUCCESSFULL_COURSE_ALL\";\r\nexport const INITIAL_REGISTER_SUCCESSFULL_COURSE: string = \"INITIAL_REGISTER_SUCCESSFULL_COURSE\";\r\n\r\n// not_register_courses\r\nexport const ADD_NOT_REGISTER_COURSE: string = \"ADD_NOT_REGISTER_COURSE\";\r\nexport const EDIT_NOT_REGISTER_COURSE: string = \"EDIT_NOT_REGISTER_COURSE\";\r\nexport const REMOVE_NOT_REGISTER_COURSE: string = \"REMOVE_NOT_REGISTER_COURSE\";\r\nexport const CHANGE_NOT_REGISTER_COURSE_AMOUNT: string = \"CHANGE_NOT_REGISTER_COURSE_AMOUNT\";\r\nexport const CHANGE_NOT_REGISTER_COURSE_PENDING_EDIT: string = \"CHANGE_NOT_REGISTER_COURSE_PENDING_EDIT\";\r\nexport const CLEAR_NOT_REGISTER_COURSE_PENDING_EDIT: string = \"CLEAR_NOT_REGISTER_COURSE_PENDING_EDIT\";\r\nexport const REMOVE_NOT_REGISTER_COURSE_ALL: string = \"REMOVE_NOT_REGISTER_COURSE_ALL\";\r\nexport const INITIAL_NOT_REGISTER_COURSE: string = \"INITIAL_NOT_REGISTER_COURSE\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course: ICourseTeacher) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialRegisterSuccessfullCourse(course: ICourseTeacher): IInitialRegisterSuccessfullCourseActionType {\r\n    return { type: INITIAL_REGISTER_SUCCESSFULL_COURSE, course: course };\r\n}\r\n\r\nexport function removeRegisterSuccessfullCourseAll(): IRemoveRegisterSuccessfullCourseAllActionType {\r\n    return { type: REMOVE_REGISTER_SUCCESSFULL_COURSE_ALL };\r\n}\r\n\r\nexport function addRegisterSuccessfullCourse(course: ICourseTeacher): IAddRegisterSuccessfullCourseActionType {\r\n    return { type: ADD_REGISTER_SUCCESSFULL_COURSE, course: course };\r\n}\r\n\r\nexport function editRegisterSuccessfullCourse(course: ICourseTeacher): IEditRegisterSuccessfullCourseActionType {\r\n    return { type: EDIT_REGISTER_SUCCESSFULL_COURSE, course: course };\r\n}\r\n\r\nexport function removeRegisterSuccessfullCourse(id: any): IRemoveRegisterSuccessfullCourseActionType {\r\n    return { type: REMOVE_REGISTER_SUCCESSFULL_COURSE, id: id };\r\n}\r\n\r\nexport function changeSelectedRegisterSuccessfullCourse(course: ICourseTeacher): IChangeSelectedRegisterSuccessfullCourseActionType {\r\n    return { type: CHANGE_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT, course: course };\r\n}\r\n\r\nexport function clearSelectedRegisterSuccessfullCourse(): IClearSelectedRegisterSuccessfullCourseActionType {\r\n    return { type: CLEAR_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialNotRegisterCourse(course: ICourseTeacher): IInitialNotRegisterCourseActionType {\r\n    return { type: INITIAL_NOT_REGISTER_COURSE, course: course };\r\n}\r\n\r\nexport function removeNotRegisterCourseAll(): IRemoveNotRegisterCourseAllActionType {\r\n    return { type: REMOVE_NOT_REGISTER_COURSE_ALL };\r\n}\r\n\r\nexport function addNotRegisterCourse(course: ICourseTeacher): IAddNotRegisterCourseActionType {\r\n    return { type: ADD_NOT_REGISTER_COURSE, course: course };\r\n}\r\n\r\nexport function editNotRegisterCourse(course: ICourseTeacher): IEditNotRegisterCourseActionType {\r\n    return { type: EDIT_NOT_REGISTER_COURSE, course: course };\r\n}\r\n\r\nexport function removeNotRegisterCourse(id: any): IRemoveNotRegisterCourseActionType {\r\n    return { type: REMOVE_NOT_REGISTER_COURSE, id: id };\r\n}\r\n\r\nexport function changeSelectedCourse(course: ICourseTeacher): IChangeSelectedNotRegisterCourseActionType {\r\n    return { type: CHANGE_NOT_REGISTER_COURSE_PENDING_EDIT, course: course };\r\n}\r\n\r\nexport function clearSelectedNotRegisterCourse(): IClearSelectedNotRegisterCourseActionType {\r\n    return { type: CLEAR_NOT_REGISTER_COURSE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseTeacherModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_courses\r\ninterface IAddRegisterSuccessfullCourseActionType { type: string, course: ICourseTeacher };\r\ninterface IEditRegisterSuccessfullCourseActionType { type: string, course: ICourseTeacher };\r\ninterface IRemoveRegisterSuccessfullCourseActionType { type: string, id: any };\r\ninterface IChangeSelectedRegisterSuccessfullCourseActionType { type: string, course: ICourseTeacher };\r\ninterface IClearSelectedRegisterSuccessfullCourseActionType { type: string };\r\ninterface IRemoveRegisterSuccessfullCourseAllActionType { type: string }\r\ninterface IInitialRegisterSuccessfullCourseActionType {type: string, course: ICourseTeacher}\r\n\r\n// not_register_courses\r\ninterface IAddNotRegisterCourseActionType { type: string, course: ICourseTeacher };\r\ninterface IEditNotRegisterCourseActionType { type: string, course: ICourseTeacher };\r\ninterface IRemoveNotRegisterCourseActionType { type: string, id: any };\r\ninterface IChangeSelectedNotRegisterCourseActionType { type: string, course: ICourseTeacher };\r\ninterface IClearSelectedNotRegisterCourseActionType { type: string };\r\ninterface IRemoveNotRegisterCourseAllActionType { type: string }\r\ninterface IInitialNotRegisterCourseActionType {type: string, course: ICourseTeacher}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  CourseTeacherModificationStatus};","import { IContestSubmission, ContestSubmissionModificationStatus } from \"../models/contest_submission.interface\";\r\n\r\n// register_successfull_contest_submissions\r\nexport const ADD_EXERCISE_SUBMISSION_NOT_GRADED: string = \"ADD_EXERCISE_SUBMISSION_NOT_GRADED\";\r\nexport const EDIT_EXERCISE_SUBMISSION_NOT_GRADED: string = \"EDIT_EXERCISE_SUBMISSION_NOT_GRADED\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_NOT_GRADED: string = \"REMOVE_EXERCISE_SUBMISSION_NOT_GRADED\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_AMOUNT: string = \"CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: string = \"CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: string = \"CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL: string = \"REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL\";\r\nexport const INITIAL_EXERCISE_SUBMISSION_NOT_GRADED: string = \"INITIAL_EXERCISE_SUBMISSION_NOT_GRADED\";\r\n\r\n// not_register_contest_submissions\r\nexport const ADD_EXERCISE_SUBMISSION_GRADED: string = \"ADD_EXERCISE_SUBMISSION_GRADED\";\r\nexport const EDIT_EXERCISE_SUBMISSION_GRADED: string = \"EDIT_EXERCISE_SUBMISSION_GRADED\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_GRADED: string = \"REMOVE_EXERCISE_SUBMISSION_GRADED\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_GRADED_AMOUNT: string = \"CHANGE_EXERCISE_SUBMISSION_GRADED_AMOUNT\";\r\nexport const CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: string = \"CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: string = \"CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT\";\r\nexport const REMOVE_EXERCISE_SUBMISSION_GRADED_ALL: string = \"REMOVE_EXERCISE_SUBMISSION_GRADED_ALL\";\r\nexport const INITIAL_EXERCISE_SUBMISSION_GRADED: string = \"INITIAL_EXERCISE_SUBMISSION_GRADED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(contest_submission: IContestSubmission) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        contest_submission\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialContestNotGraded(contest_submission: IContestSubmission): IInitialContestNotGradedActionType {\r\n    return { type: INITIAL_EXERCISE_SUBMISSION_NOT_GRADED, contest_submission: contest_submission };\r\n}\r\n\r\nexport function removeContestNotGradedAll(): IRemoveContestNotGradedAllActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL };\r\n}\r\n\r\nexport function addContestNotGraded(contest_submission: IContestSubmission): IAddContestNotGradedActionType {\r\n    return { type: ADD_EXERCISE_SUBMISSION_NOT_GRADED, contest_submission: contest_submission };\r\n}\r\n\r\nexport function editContestNotGraded(contest_submission: IContestSubmission): IEditContestNotGradedActionType {\r\n    return { type: EDIT_EXERCISE_SUBMISSION_NOT_GRADED, contest_submission: contest_submission };\r\n}\r\n\r\nexport function removeContestNotGraded(id: any): IRemoveContestNotGradedActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_NOT_GRADED, id: id };\r\n}\r\n\r\nexport function changeSelectedContestNotGraded(contest_submission: IContestSubmission): IChangeSelectedContestNotGradedActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT, contest_submission: contest_submission };\r\n}\r\n\r\nexport function clearSelectedContestNotGraded(): IClearSelectedContestNotGradedActionType {\r\n    return { type: CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialContestGraded(contest_submission: IContestSubmission): IInitialContestGradedActionType {\r\n    return { type: INITIAL_EXERCISE_SUBMISSION_GRADED, contest_submission: contest_submission };\r\n}\r\n\r\nexport function removeContestGradedAll(): IRemoveContestGradedAllActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_GRADED_ALL };\r\n}\r\n\r\nexport function addContestGraded(contest_submission: IContestSubmission): IAddContestGradedActionType {\r\n    return { type: ADD_EXERCISE_SUBMISSION_GRADED, contest_submission: contest_submission };\r\n}\r\n\r\nexport function editContestGraded(contest_submission: IContestSubmission): IEditContestGradedActionType {\r\n    return { type: EDIT_EXERCISE_SUBMISSION_GRADED, contest_submission: contest_submission };\r\n}\r\n\r\nexport function removeContestGraded(id: any): IRemoveContestGradedActionType {\r\n    return { type: REMOVE_EXERCISE_SUBMISSION_GRADED, id: id };\r\n}\r\n\r\nexport function changeSelectedContestGraded(contest_submission: IContestSubmission): IChangeSelectedContestGradedActionType {\r\n    return { type: CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT, contest_submission: contest_submission };\r\n}\r\n\r\nexport function clearSelectedContestGraded(): IClearSelectedContestGradedActionType {\r\n    return { type: CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ContestSubmissionModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_contest_submissions\r\ninterface IAddContestNotGradedActionType { type: string, contest_submission: IContestSubmission };\r\ninterface IEditContestNotGradedActionType { type: string, contest_submission: IContestSubmission };\r\ninterface IRemoveContestNotGradedActionType { type: string, id: any };\r\ninterface IChangeSelectedContestNotGradedActionType { type: string, contest_submission: IContestSubmission };\r\ninterface IClearSelectedContestNotGradedActionType { type: string };\r\ninterface IRemoveContestNotGradedAllActionType { type: string }\r\ninterface IInitialContestNotGradedActionType {type: string, contest_submission: IContestSubmission}\r\n\r\n// not_register_contest_submissions\r\ninterface IAddContestGradedActionType { type: string, contest_submission: IContestSubmission };\r\ninterface IEditContestGradedActionType { type: string, contest_submission: IContestSubmission };\r\ninterface IRemoveContestGradedActionType { type: string, id: any };\r\ninterface IChangeSelectedContestGradedActionType { type: string, contest_submission: IContestSubmission };\r\ninterface IClearSelectedContestGradedActionType { type: string };\r\ninterface IRemoveContestGradedAllActionType { type: string }\r\ninterface IInitialContestGradedActionType {type: string, contest_submission: IContestSubmission}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ContestSubmissionModificationStatus};","import { IClassesStudent, ClassesStudentModificationStatus } from \"../models/classes_student.interface\";\r\n\r\n// register_successfull_classes_students\r\nexport const ADD_DOING_CLASS: string = \"ADD_DOING_CLASS\";\r\nexport const EDIT_DOING_CLASS: string = \"EDIT_DOING_CLASS\";\r\nexport const REMOVE_DOING_CLASS: string = \"REMOVE_DOING_CLASS\";\r\nexport const CHANGE_DOING_CLASS_AMOUNT: string = \"CHANGE_DOING_CLASS_AMOUNT\";\r\nexport const CHANGE_DOING_CLASS_PENDING_EDIT: string = \"CHANGE_DOING_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_DOING_CLASS_PENDING_EDIT: string = \"CLEAR_DOING_CLASS_PENDING_EDIT\";\r\nexport const REMOVE_DOING_CLASS_ALL: string = \"REMOVE_DOING_CLASS_ALL\";\r\nexport const INITIAL_DOING_CLASS: string = \"INITIAL_DOING_CLASS\";\r\n\r\n// not_register_classes_students\r\nexport const ADD_DONE_CLASS: string = \"ADD_DONE_CLASS\";\r\nexport const EDIT_DONE_CLASS: string = \"EDIT_DONE_CLASS\";\r\nexport const REMOVE_DONE_CLASS: string = \"REMOVE_DONE_CLASS\";\r\nexport const CHANGE_DONE_CLASS_AMOUNT: string = \"CHANGE_DONE_CLASS_AMOUNT\";\r\nexport const CHANGE_DONE_CLASS_PENDING_EDIT: string = \"CHANGE_DONE_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_DONE_CLASS_PENDING_EDIT: string = \"CLEAR_DONE_CLASS_PENDING_EDIT\";\r\nexport const REMOVE_DONE_CLASS_ALL: string = \"REMOVE_DONE_CLASS_ALL\";\r\nexport const INITIAL_DONE_CLASS: string = \"INITIAL_DONE_CLASS\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(classes_student: IClassesStudent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        classes_student\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialDoinglClass(classes_student: IClassesStudent): IInitialDoinglClassActionType {\r\n    return { type: INITIAL_DOING_CLASS, classes_student: classes_student };\r\n}\r\n\r\nexport function removeDoinglClassAll(): IRemoveDoinglClassAllActionType {\r\n    return { type: REMOVE_DOING_CLASS_ALL };\r\n}\r\n\r\nexport function addDoinglClass(classes_student: IClassesStudent): IAddDoinglClassActionType {\r\n    return { type: ADD_DOING_CLASS, classes_student: classes_student };\r\n}\r\n\r\nexport function editDoinglClass(classes_student: IClassesStudent): IEditDoinglClassActionType {\r\n    return { type: EDIT_DOING_CLASS, classes_student: classes_student };\r\n}\r\n\r\nexport function removeDoinglClass(id: any): IRemoveDoinglClassActionType {\r\n    return { type: REMOVE_DOING_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedDoinglClass(classes_student: IClassesStudent): IChangeSelectedDoinglClassActionType {\r\n    return { type: CHANGE_DOING_CLASS_PENDING_EDIT, classes_student: classes_student };\r\n}\r\n\r\nexport function clearSelectedDoinglClass(): IClearSelectedDoinglClassActionType {\r\n    return { type: CLEAR_DOING_CLASS_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialDoneClass(classes_student: IClassesStudent): IInitialDoneClassActionType {\r\n    return { type: INITIAL_DONE_CLASS, classes_student: classes_student };\r\n}\r\n\r\nexport function removeDoneClassAll(): IRemoveDoneClassAllActionType {\r\n    return { type: REMOVE_DONE_CLASS_ALL };\r\n}\r\n\r\nexport function addDoneClass(classes_student: IClassesStudent): IAddDoneClassActionType {\r\n    return { type: ADD_DONE_CLASS, classes_student: classes_student };\r\n}\r\n\r\nexport function editDoneClass(classes_student: IClassesStudent): IEditDoneClassActionType {\r\n    return { type: EDIT_DONE_CLASS, classes_student: classes_student };\r\n}\r\n\r\nexport function removeDoneClass(id: any): IRemoveDoneClassActionType {\r\n    return { type: REMOVE_DONE_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedDoneClass(classes_student: IClassesStudent): IChangeSelectedDoneClassActionType {\r\n    return { type: CHANGE_DONE_CLASS_PENDING_EDIT, classes_student: classes_student };\r\n}\r\n\r\nexport function clearSelectedDoneClass(): IClearSelectedDoneClassActionType {\r\n    return { type: CLEAR_DONE_CLASS_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ClassesStudentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_classes_students\r\ninterface IAddDoinglClassActionType { type: string, classes_student: IClassesStudent };\r\ninterface IEditDoinglClassActionType { type: string, classes_student: IClassesStudent };\r\ninterface IRemoveDoinglClassActionType { type: string, id: any };\r\ninterface IChangeSelectedDoinglClassActionType { type: string, classes_student: IClassesStudent };\r\ninterface IClearSelectedDoinglClassActionType { type: string };\r\ninterface IRemoveDoinglClassAllActionType { type: string }\r\ninterface IInitialDoinglClassActionType {type: string, classes_student: IClassesStudent}\r\n\r\n// not_register_classes_students\r\ninterface IAddDoneClassActionType { type: string, classes_student: IClassesStudent };\r\ninterface IEditDoneClassActionType { type: string, classes_student: IClassesStudent };\r\ninterface IRemoveDoneClassActionType { type: string, id: any };\r\ninterface IChangeSelectedDoneClassActionType { type: string, classes_student: IClassesStudent };\r\ninterface IClearSelectedDoneClassActionType { type: string };\r\ninterface IRemoveDoneClassAllActionType { type: string }\r\ninterface IInitialDoneClassActionType {type: string, classes_student: IClassesStudent}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ClassesStudentModificationStatus};","import { IClassesParent, ClassesParentModificationStatus } from \"../models/classes_parent.interface\";\r\n\r\n// register_successfull_classes_parents\r\nexport const ADD_DOING_CLASS: string = \"ADD_DOING_CLASS\";\r\nexport const EDIT_DOING_CLASS: string = \"EDIT_DOING_CLASS\";\r\nexport const REMOVE_DOING_CLASS: string = \"REMOVE_DOING_CLASS\";\r\nexport const CHANGE_DOING_CLASS_AMOUNT: string = \"CHANGE_DOING_CLASS_AMOUNT\";\r\nexport const CHANGE_DOING_CLASS_PENDING_EDIT: string = \"CHANGE_DOING_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_DOING_CLASS_PENDING_EDIT: string = \"CLEAR_DOING_CLASS_PENDING_EDIT\";\r\nexport const REMOVE_DOING_CLASS_ALL: string = \"REMOVE_DOING_CLASS_ALL\";\r\nexport const INITIAL_DOING_CLASS: string = \"INITIAL_DOING_CLASS\";\r\n\r\n// not_register_classes_parents\r\nexport const ADD_DONE_CLASS: string = \"ADD_DONE_CLASS\";\r\nexport const EDIT_DONE_CLASS: string = \"EDIT_DONE_CLASS\";\r\nexport const REMOVE_DONE_CLASS: string = \"REMOVE_DONE_CLASS\";\r\nexport const CHANGE_DONE_CLASS_AMOUNT: string = \"CHANGE_DONE_CLASS_AMOUNT\";\r\nexport const CHANGE_DONE_CLASS_PENDING_EDIT: string = \"CHANGE_DONE_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_DONE_CLASS_PENDING_EDIT: string = \"CLEAR_DONE_CLASS_PENDING_EDIT\";\r\nexport const REMOVE_DONE_CLASS_ALL: string = \"REMOVE_DONE_CLASS_ALL\";\r\nexport const INITIAL_DONE_CLASS: string = \"INITIAL_DONE_CLASS\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(classes_parent: IClassesParent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        classes_parent\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialDoinglClass(classes_parent: IClassesParent): IInitialDoinglClassActionType {\r\n    return { type: INITIAL_DOING_CLASS, classes_parent: classes_parent };\r\n}\r\n\r\nexport function removeDoinglClassAll(): IRemoveDoinglClassAllActionType {\r\n    return { type: REMOVE_DOING_CLASS_ALL };\r\n}\r\n\r\nexport function addDoinglClass(classes_parent: IClassesParent): IAddDoinglClassActionType {\r\n    return { type: ADD_DOING_CLASS, classes_parent: classes_parent };\r\n}\r\n\r\nexport function editDoinglClass(classes_parent: IClassesParent): IEditDoinglClassActionType {\r\n    return { type: EDIT_DOING_CLASS, classes_parent: classes_parent };\r\n}\r\n\r\nexport function removeDoinglClass(id: any): IRemoveDoinglClassActionType {\r\n    return { type: REMOVE_DOING_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedDoinglClass(classes_parent: IClassesParent): IChangeSelectedDoinglClassActionType {\r\n    return { type: CHANGE_DOING_CLASS_PENDING_EDIT, classes_parent: classes_parent };\r\n}\r\n\r\nexport function clearSelectedDoinglClass(): IClearSelectedDoinglClassActionType {\r\n    return { type: CLEAR_DOING_CLASS_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialDoneClass(classes_parent: IClassesParent): IInitialDoneClassActionType {\r\n    return { type: INITIAL_DONE_CLASS, classes_parent: classes_parent };\r\n}\r\n\r\nexport function removeDoneClassAll(): IRemoveDoneClassAllActionType {\r\n    return { type: REMOVE_DONE_CLASS_ALL };\r\n}\r\n\r\nexport function addDoneClass(classes_parent: IClassesParent): IAddDoneClassActionType {\r\n    return { type: ADD_DONE_CLASS, classes_parent: classes_parent };\r\n}\r\n\r\nexport function editDoneClass(classes_parent: IClassesParent): IEditDoneClassActionType {\r\n    return { type: EDIT_DONE_CLASS, classes_parent: classes_parent };\r\n}\r\n\r\nexport function removeDoneClass(id: any): IRemoveDoneClassActionType {\r\n    return { type: REMOVE_DONE_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedDoneClass(classes_parent: IClassesParent): IChangeSelectedDoneClassActionType {\r\n    return { type: CHANGE_DONE_CLASS_PENDING_EDIT, classes_parent: classes_parent };\r\n}\r\n\r\nexport function clearSelectedDoneClass(): IClearSelectedDoneClassActionType {\r\n    return { type: CLEAR_DONE_CLASS_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ClassesParentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_classes_parents\r\ninterface IAddDoinglClassActionType { type: string, classes_parent: IClassesParent };\r\ninterface IEditDoinglClassActionType { type: string, classes_parent: IClassesParent };\r\ninterface IRemoveDoinglClassActionType { type: string, id: any };\r\ninterface IChangeSelectedDoinglClassActionType { type: string, classes_parent: IClassesParent };\r\ninterface IClearSelectedDoinglClassActionType { type: string };\r\ninterface IRemoveDoinglClassAllActionType { type: string }\r\ninterface IInitialDoinglClassActionType {type: string, classes_parent: IClassesParent}\r\n\r\n// not_register_classes_parents\r\ninterface IAddDoneClassActionType { type: string, classes_parent: IClassesParent };\r\ninterface IEditDoneClassActionType { type: string, classes_parent: IClassesParent };\r\ninterface IRemoveDoneClassActionType { type: string, id: any };\r\ninterface IChangeSelectedDoneClassActionType { type: string, classes_parent: IClassesParent };\r\ninterface IClearSelectedDoneClassActionType { type: string };\r\ninterface IRemoveDoneClassAllActionType { type: string }\r\ninterface IInitialDoneClassActionType {type: string, classes_parent: IClassesParent}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ClassesParentModificationStatus};","import { IContestSubmissionTeacher, ContestSubmissionTeacherModificationStatus } from \"../models/contest_submission_teacher.interface\";\r\n\r\n// register_successfull_contest_submission_teachers\r\nexport const ADD_CONTEST_SUBMISSION_TEACHER_NOT_GRADED: string = \"ADD_CONTEST_SUBMISSION_TEACHER_NOT_GRADED\";\r\nexport const EDIT_CONTEST_SUBMISSION_TEACHER_NOT_GRADED: string = \"EDIT_CONTEST_SUBMISSION_TEACHER_NOT_GRADED\";\r\nexport const REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED: string = \"REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED\";\r\nexport const CHANGE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_AMOUNT: string = \"CHANGE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_AMOUNT\";\r\nexport const CHANGE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT: string = \"CHANGE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT: string = \"CLEAR_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_ALL: string = \"REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_ALL\";\r\nexport const INITIAL_CONTEST_SUBMISSION_TEACHER_NOT_GRADED: string = \"INITIAL_CONTEST_SUBMISSION_TEACHER_NOT_GRADED\";\r\n\r\n// not_register_contest_submission_teachers\r\nexport const ADD_CONTEST_SUBMISSION_TEACHER_GRADED: string = \"ADD_CONTEST_SUBMISSION_TEACHER_GRADED\";\r\nexport const EDIT_CONTEST_SUBMISSION_TEACHER_GRADED: string = \"EDIT_CONTEST_SUBMISSION_TEACHER_GRADED\";\r\nexport const REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED: string = \"REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED\";\r\nexport const CHANGE_CONTEST_SUBMISSION_TEACHER_GRADED_AMOUNT: string = \"CHANGE_CONTEST_SUBMISSION_TEACHER_GRADED_AMOUNT\";\r\nexport const CHANGE_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT: string = \"CHANGE_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT: string = \"CLEAR_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT\";\r\nexport const REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED_ALL: string = \"REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED_ALL\";\r\nexport const INITIAL_CONTEST_SUBMISSION_TEACHER_GRADED: string = \"INITIAL_CONTEST_SUBMISSION_TEACHER_GRADED\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(contest_submission_teacher: IContestSubmissionTeacher) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        contest_submission_teacher\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialContestSubmissionNotGrade(contest_submission_teacher: IContestSubmissionTeacher): IInitialContestSubmissionNotGradeActionType {\r\n    return { type: INITIAL_CONTEST_SUBMISSION_TEACHER_NOT_GRADED, contest_submission_teacher: contest_submission_teacher };\r\n}\r\n\r\nexport function removeContestSubmissionNotGradeAll(): IRemoveContestSubmissionNotGradeAllActionType {\r\n    return { type: REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_ALL };\r\n}\r\n\r\nexport function addContestSubmissionNotGrade(contest_submission_teacher: IContestSubmissionTeacher): IAddContestSubmissionNotGradeActionType {\r\n    return { type: ADD_CONTEST_SUBMISSION_TEACHER_NOT_GRADED, contest_submission_teacher: contest_submission_teacher };\r\n}\r\n\r\nexport function editContestSubmissionNotGrade(contest_submission_teacher: IContestSubmissionTeacher): IEditContestSubmissionNotGradeActionType {\r\n    return { type: EDIT_CONTEST_SUBMISSION_TEACHER_NOT_GRADED, contest_submission_teacher: contest_submission_teacher };\r\n}\r\n\r\nexport function removeContestSubmissionNotGrade(id: any): IRemoveContestSubmissionNotGradeActionType {\r\n    return { type: REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED, id: id };\r\n}\r\n\r\nexport function changeSelectedContestSubmissionNotGrade(contest_submission_teacher: IContestSubmissionTeacher): IChangeSelectedContestSubmissionNotGradeActionType {\r\n    return { type: CHANGE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT, contest_submission_teacher: contest_submission_teacher };\r\n}\r\n\r\nexport function clearSelectedContestSubmissionNotGrade(): IClearSelectedContestSubmissionNotGradeActionType {\r\n    return { type: CLEAR_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialContestSubmissionGrade(contest_submission_teacher: IContestSubmissionTeacher): IInitialContestSubmissionGradeActionType {\r\n    return { type: INITIAL_CONTEST_SUBMISSION_TEACHER_GRADED, contest_submission_teacher: contest_submission_teacher };\r\n}\r\n\r\nexport function removeContestSubmissionGradeAll(): IRemoveContestSubmissionGradeAllActionType {\r\n    return { type: REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED_ALL };\r\n}\r\n\r\nexport function addContestSubmissionGrade(contest_submission_teacher: IContestSubmissionTeacher): IAddContestSubmissionGradeActionType {\r\n    return { type: ADD_CONTEST_SUBMISSION_TEACHER_GRADED, contest_submission_teacher: contest_submission_teacher };\r\n}\r\n\r\nexport function editContestSubmissionGrade(contest_submission_teacher: IContestSubmissionTeacher): IEditContestSubmissionGradeActionType {\r\n    return { type: EDIT_CONTEST_SUBMISSION_TEACHER_GRADED, contest_submission_teacher: contest_submission_teacher };\r\n}\r\n\r\nexport function removeContestSubmissionGrade(id: any): IRemoveContestSubmissionGradeActionType {\r\n    return { type: REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED, id: id };\r\n}\r\n\r\nexport function changeSelectedContestSubmissionGrade(contest_submission_teacher: IContestSubmissionTeacher): IChangeSelectedContestSubmissionGradeActionType {\r\n    return { type: CHANGE_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT, contest_submission_teacher: contest_submission_teacher };\r\n}\r\n\r\nexport function clearSelectedContestSubmissionGrade(): IClearSelectedContestSubmissionGradeActionType {\r\n    return { type: CLEAR_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ContestSubmissionTeacherModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_contest_submission_teachers\r\ninterface IAddContestSubmissionNotGradeActionType { type: string, contest_submission_teacher: IContestSubmissionTeacher };\r\ninterface IEditContestSubmissionNotGradeActionType { type: string, contest_submission_teacher: IContestSubmissionTeacher };\r\ninterface IRemoveContestSubmissionNotGradeActionType { type: string, id: any };\r\ninterface IChangeSelectedContestSubmissionNotGradeActionType { type: string, contest_submission_teacher: IContestSubmissionTeacher };\r\ninterface IClearSelectedContestSubmissionNotGradeActionType { type: string };\r\ninterface IRemoveContestSubmissionNotGradeAllActionType { type: string }\r\ninterface IInitialContestSubmissionNotGradeActionType {type: string, contest_submission_teacher: IContestSubmissionTeacher}\r\n\r\n// not_register_contest_submission_teachers\r\ninterface IAddContestSubmissionGradeActionType { type: string, contest_submission_teacher: IContestSubmissionTeacher };\r\ninterface IEditContestSubmissionGradeActionType { type: string, contest_submission_teacher: IContestSubmissionTeacher };\r\ninterface IRemoveContestSubmissionGradeActionType { type: string, id: any };\r\ninterface IChangeSelectedContestSubmissionGradeActionType { type: string, contest_submission_teacher: IContestSubmissionTeacher };\r\ninterface IClearSelectedContestSubmissionGradeActionType { type: string };\r\ninterface IRemoveContestSubmissionGradeAllActionType { type: string }\r\ninterface IInitialContestSubmissionGradeActionType {type: string, contest_submission_teacher: IContestSubmissionTeacher}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  ContestSubmissionTeacherModificationStatus};","import { ITurnover, TurnoverModificationStatus } from \"../models/turnover.interface\";\r\n\r\n// register_successfull_turnovers\r\nexport const ADD_TURNOVER_NOW: string = \"ADD_TURNOVER_NOW\";\r\nexport const EDIT_TURNOVER_NOW: string = \"EDIT_TURNOVER_NOW\";\r\nexport const REMOVE_TURNOVER_NOW: string = \"REMOVE_TURNOVER_NOW\";\r\nexport const CHANGE_TURNOVER_NOW_AMOUNT: string = \"CHANGE_TURNOVER_NOW_AMOUNT\";\r\nexport const CHANGE_TURNOVER_NOW_PENDING_EDIT: string = \"CHANGE_TURNOVER_NOW_PENDING_EDIT\";\r\nexport const CLEAR_TURNOVER_NOW_PENDING_EDIT: string = \"CLEAR_TURNOVER_NOW_PENDING_EDIT\";\r\nexport const REMOVE_TURNOVER_NOW_ALL: string = \"REMOVE_TURNOVER_NOW_ALL\";\r\nexport const INITIAL_TURNOVER_NOW: string = \"INITIAL_TURNOVER_NOW\";\r\n\r\n// not_register_turnovers\r\nexport const ADD_TURNOVER_LAST: string = \"ADD_TURNOVER_LAST\";\r\nexport const EDIT_TURNOVER_LAST: string = \"EDIT_TURNOVER_LAST\";\r\nexport const REMOVE_TURNOVER_LAST: string = \"REMOVE_TURNOVER_LAST\";\r\nexport const CHANGE_TURNOVER_LAST_AMOUNT: string = \"CHANGE_TURNOVER_LAST_AMOUNT\";\r\nexport const CHANGE_TURNOVER_LAST_PENDING_EDIT: string = \"CHANGE_TURNOVER_LAST_PENDING_EDIT\";\r\nexport const CLEAR_TURNOVER_LAST_PENDING_EDIT: string = \"CLEAR_TURNOVER_LAST_PENDING_EDIT\";\r\nexport const REMOVE_TURNOVER_LAST_ALL: string = \"REMOVE_TURNOVER_LAST_ALL\";\r\nexport const INITIAL_TURNOVER_LAST: string = \"INITIAL_TURNOVER_LAST\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(turnover: ITurnover) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        turnover\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialTurnoverNow(turnover: ITurnover): IInitialTurnoverNowActionType {\r\n    return { type: INITIAL_TURNOVER_NOW, turnover: turnover };\r\n}\r\n\r\nexport function removeTurnoverNowAll(): IRemoveTurnoverNowAllActionType {\r\n    return { type: REMOVE_TURNOVER_NOW_ALL };\r\n}\r\n\r\nexport function addTurnoverNow(turnover: ITurnover): IAddTurnoverNowActionType {\r\n    return { type: ADD_TURNOVER_NOW, turnover: turnover };\r\n}\r\n\r\nexport function editTurnoverNow(turnover: ITurnover): IEditTurnoverNowActionType {\r\n    return { type: EDIT_TURNOVER_NOW, turnover: turnover };\r\n}\r\n\r\nexport function removeTurnoverNow(id: any): IRemoveTurnoverNowActionType {\r\n    return { type: REMOVE_TURNOVER_NOW, id: id };\r\n}\r\n\r\nexport function changeSelectedTurnoverNow(turnover: ITurnover): IChangeSelectedTurnoverNowActionType {\r\n    return { type: CHANGE_TURNOVER_NOW_PENDING_EDIT, turnover: turnover };\r\n}\r\n\r\nexport function clearSelectedTurnoverNow(): IClearSelectedTurnoverNowActionType {\r\n    return { type: CLEAR_TURNOVER_NOW_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialTurnoverLast(turnover: ITurnover): IInitialTurnoverLastActionType {\r\n    return { type: INITIAL_TURNOVER_LAST, turnover: turnover };\r\n}\r\n\r\nexport function removeTurnoverLastAll(): IRemoveTurnoverLastAllActionType {\r\n    return { type: REMOVE_TURNOVER_LAST_ALL };\r\n}\r\n\r\nexport function addTurnoverLast(turnover: ITurnover): IAddTurnoverLastActionType {\r\n    return { type: ADD_TURNOVER_LAST, turnover: turnover };\r\n}\r\n\r\nexport function editTurnoverLast(turnover: ITurnover): IEditTurnoverLastActionType {\r\n    return { type: EDIT_TURNOVER_LAST, turnover: turnover };\r\n}\r\n\r\nexport function removeTurnoverLast(id: any): IRemoveTurnoverLastActionType {\r\n    return { type: REMOVE_TURNOVER_LAST, id: id };\r\n}\r\n\r\nexport function changeSelectedTurnoverLast(turnover: ITurnover): IChangeSelectedTurnoverLastActionType {\r\n    return { type: CHANGE_TURNOVER_LAST_PENDING_EDIT, turnover: turnover };\r\n}\r\n\r\nexport function clearSelectedTurnoverLast(): IClearSelectedTurnoverLastActionType {\r\n    return { type: CLEAR_TURNOVER_LAST_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: TurnoverModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_turnovers\r\ninterface IAddTurnoverNowActionType { type: string, turnover: ITurnover };\r\ninterface IEditTurnoverNowActionType { type: string, turnover: ITurnover };\r\ninterface IRemoveTurnoverNowActionType { type: string, id: any };\r\ninterface IChangeSelectedTurnoverNowActionType { type: string, turnover: ITurnover };\r\ninterface IClearSelectedTurnoverNowActionType { type: string };\r\ninterface IRemoveTurnoverNowAllActionType { type: string }\r\ninterface IInitialTurnoverNowActionType {type: string, turnover: ITurnover}\r\n\r\n// not_register_turnovers\r\ninterface IAddTurnoverLastActionType { type: string, turnover: ITurnover };\r\ninterface IEditTurnoverLastActionType { type: string, turnover: ITurnover };\r\ninterface IRemoveTurnoverLastActionType { type: string, id: any };\r\ninterface IChangeSelectedTurnoverLastActionType { type: string, turnover: ITurnover };\r\ninterface IClearSelectedTurnoverLastActionType { type: string };\r\ninterface IRemoveTurnoverLastAllActionType { type: string }\r\ninterface IInitialTurnoverLastActionType {type: string, turnover: ITurnover}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  TurnoverModificationStatus};","import { IUserReadNotification, UserReadNotificationModificationStatus } from \"../models/user_read_notification.interface\";\r\n\r\n// register_successfull_user_read_notifications\r\nexport const ADD_USER_READED_NOTIFICATION: string = \"ADD_USER_READED_NOTIFICATION\";\r\nexport const EDIT_USER_READED_NOTIFICATION: string = \"EDIT_USER_READED_NOTIFICATION\";\r\nexport const REMOVE_USER_READED_NOTIFICATION: string = \"REMOVE_USER_READED_NOTIFICATION\";\r\nexport const CHANGE_USER_READED_NOTIFICATION_AMOUNT: string = \"CHANGE_USER_READED_NOTIFICATION_AMOUNT\";\r\nexport const CHANGE_USER_READED_NOTIFICATION_PENDING_EDIT: string = \"CHANGE_USER_READED_NOTIFICATION_PENDING_EDIT\";\r\nexport const CLEAR_USER_READED_NOTIFICATION_PENDING_EDIT: string = \"CLEAR_USER_READED_NOTIFICATION_PENDING_EDIT\";\r\nexport const REMOVE_USER_READED_NOTIFICATION_ALL: string = \"REMOVE_USER_READED_NOTIFICATION_ALL\";\r\nexport const INITIAL_USER_READED_NOTIFICATION: string = \"INITIAL_USER_READED_NOTIFICATION\";\r\n\r\n// not_register_user_read_notifications\r\nexport const ADD_USER_NOT_READED_NOTIFICATION: string = \"ADD_USER_NOT_READED_NOTIFICATION\";\r\nexport const EDIT_USER_NOT_READED_NOTIFICATION: string = \"EDIT_USER_NOT_READED_NOTIFICATION\";\r\nexport const REMOVE_USER_NOT_READED_NOTIFICATION: string = \"REMOVE_USER_NOT_READED_NOTIFICATION\";\r\nexport const CHANGE_USER_NOT_READED_NOTIFICATION_AMOUNT: string = \"CHANGE_USER_NOT_READED_NOTIFICATION_AMOUNT\";\r\nexport const CHANGE_USER_NOT_READED_NOTIFICATION_PENDING_EDIT: string = \"CHANGE_USER_NOT_READED_NOTIFICATION_PENDING_EDIT\";\r\nexport const CLEAR_USER_NOT_READED_NOTIFICATION_PENDING_EDIT: string = \"CLEAR_USER_NOT_READED_NOTIFICATION_PENDING_EDIT\";\r\nexport const REMOVE_USER_NOT_READED_NOTIFICATION_ALL: string = \"REMOVE_USER_NOT_READED_NOTIFICATION_ALL\";\r\nexport const INITIAL_USER_NOT_READED_NOTIFICATION: string = \"INITIAL_USER_NOT_READED_NOTIFICATION\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(user_read_notification: IUserReadNotification) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        user_read_notification\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialUserReadedNotification(user_read_notification: IUserReadNotification): IInitialUserReadedNotificationActionType {\r\n    return { type: INITIAL_USER_READED_NOTIFICATION, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function removeUserReadedNotificationAll(): IRemoveUserReadedNotificationAllActionType {\r\n    return { type: REMOVE_USER_READED_NOTIFICATION_ALL };\r\n}\r\n\r\nexport function addUserReadedNotification(user_read_notification: IUserReadNotification): IAddUserReadedNotificationActionType {\r\n    return { type: ADD_USER_READED_NOTIFICATION, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function editUserReadedNotification(user_read_notification: IUserReadNotification): IEditUserReadedNotificationActionType {\r\n    return { type: EDIT_USER_READED_NOTIFICATION, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function removeUserReadedNotification(id: any): IRemoveUserReadedNotificationActionType {\r\n    return { type: REMOVE_USER_READED_NOTIFICATION, id: id };\r\n}\r\n\r\nexport function changeSelectedUserReadedNotification(user_read_notification: IUserReadNotification): IChangeSelectedUserReadedNotificationActionType {\r\n    return { type: CHANGE_USER_READED_NOTIFICATION_PENDING_EDIT, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function clearSelectedUserReadedNotification(): IClearSelectedUserReadedNotificationActionType {\r\n    return { type: CLEAR_USER_READED_NOTIFICATION_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialUserNotReadedNotification(user_read_notification: IUserReadNotification): IInitialUserNotReadedNotificationActionType {\r\n    return { type: INITIAL_USER_NOT_READED_NOTIFICATION, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function removeUserNotReadedNotificationAll(): IRemoveUserNotReadedNotificationAllActionType {\r\n    return { type: REMOVE_USER_NOT_READED_NOTIFICATION_ALL };\r\n}\r\n\r\nexport function addUserNotReadedNotification(user_read_notification: IUserReadNotification): IAddUserNotReadedNotificationActionType {\r\n    return { type: ADD_USER_NOT_READED_NOTIFICATION, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function editUserNotReadedNotification(user_read_notification: IUserReadNotification): IEditUserNotReadedNotificationActionType {\r\n    return { type: EDIT_USER_NOT_READED_NOTIFICATION, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function removeUserNotReadedNotification(id: any): IRemoveUserNotReadedNotificationActionType {\r\n    return { type: REMOVE_USER_NOT_READED_NOTIFICATION, id: id };\r\n}\r\n\r\nexport function changeSelectedUserNotReadedNotification(user_read_notification: IUserReadNotification): IChangeSelectedUserNotReadedNotificationActionType {\r\n    return { type: CHANGE_USER_NOT_READED_NOTIFICATION_PENDING_EDIT, user_read_notification: user_read_notification };\r\n}\r\n\r\nexport function clearSelectedUserNotReadedNotification(): IClearSelectedUserNotReadedNotificationActionType {\r\n    return { type: CLEAR_USER_NOT_READED_NOTIFICATION_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: UserReadNotificationModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_user_read_notifications\r\ninterface IAddUserReadedNotificationActionType { type: string, user_read_notification: IUserReadNotification };\r\ninterface IEditUserReadedNotificationActionType { type: string, user_read_notification: IUserReadNotification };\r\ninterface IRemoveUserReadedNotificationActionType { type: string, id: any };\r\ninterface IChangeSelectedUserReadedNotificationActionType { type: string, user_read_notification: IUserReadNotification };\r\ninterface IClearSelectedUserReadedNotificationActionType { type: string };\r\ninterface IRemoveUserReadedNotificationAllActionType { type: string }\r\ninterface IInitialUserReadedNotificationActionType {type: string, user_read_notification: IUserReadNotification}\r\n\r\n// not_register_user_read_notifications\r\ninterface IAddUserNotReadedNotificationActionType { type: string, user_read_notification: IUserReadNotification };\r\ninterface IEditUserNotReadedNotificationActionType { type: string, user_read_notification: IUserReadNotification };\r\ninterface IRemoveUserNotReadedNotificationActionType { type: string, id: any };\r\ninterface IChangeSelectedUserNotReadedNotificationActionType { type: string, user_read_notification: IUserReadNotification };\r\ninterface IClearSelectedUserNotReadedNotificationActionType { type: string };\r\ninterface IRemoveUserNotReadedNotificationAllActionType { type: string }\r\ninterface IInitialUserNotReadedNotificationActionType {type: string, user_read_notification: IUserReadNotification}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  UserReadNotificationModificationStatus};","import { ICourseParent, CourseParentModificationStatus } from \"../models/course_parent.interface\";\r\n\r\n// register_successfull_course_parents\r\nexport const ADD_DOING_COURSE: string = \"ADD_DOING_COURSE\";\r\nexport const EDIT_DOING_COURSE: string = \"EDIT_DOING_COURSE\";\r\nexport const REMOVE_DOING_COURSE: string = \"REMOVE_DOING_COURSE\";\r\nexport const CHANGE_DOING_COURSE_AMOUNT: string = \"CHANGE_DOING_COURSE_AMOUNT\";\r\nexport const CHANGE_DOING_COURSE_PENDING_EDIT: string = \"CHANGE_DOING_COURSE_PENDING_EDIT\";\r\nexport const CLEAR_DOING_COURSE_PENDING_EDIT: string = \"CLEAR_DOING_COURSE_PENDING_EDIT\";\r\nexport const REMOVE_DOING_COURSE_ALL: string = \"REMOVE_DOING_COURSE_ALL\";\r\nexport const INITIAL_DOING_COURSE: string = \"INITIAL_DOING_COURSE\";\r\n\r\n// not_register_course_parents\r\nexport const ADD_DONE_COURSE: string = \"ADD_DONE_COURSE\";\r\nexport const EDIT_DONE_COURSE: string = \"EDIT_DONE_COURSE\";\r\nexport const REMOVE_DONE_COURSE: string = \"REMOVE_DONE_COURSE\";\r\nexport const CHANGE_DONE_COURSE_AMOUNT: string = \"CHANGE_DONE_COURSE_AMOUNT\";\r\nexport const CHANGE_DONE_COURSE_PENDING_EDIT: string = \"CHANGE_DONE_COURSE_PENDING_EDIT\";\r\nexport const CLEAR_DONE_COURSE_PENDING_EDIT: string = \"CLEAR_DONE_COURSE_PENDING_EDIT\";\r\nexport const REMOVE_DONE_COURSE_ALL: string = \"REMOVE_DONE_COURSE_ALL\";\r\nexport const INITIAL_DONE_COURSE: string = \"INITIAL_DONE_COURSE\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course_parent: ICourseParent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course_parent\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCourseNotRegistedNow(course_parent: ICourseParent): IInitialCourseNotRegistedNowActionType {\r\n    return { type: INITIAL_DOING_COURSE, course_parent: course_parent };\r\n}\r\n\r\nexport function removeCourseNotRegistedNowAll(): IRemoveCourseNotRegistedNowAllActionType {\r\n    return { type: REMOVE_DOING_COURSE_ALL };\r\n}\r\n\r\nexport function addCourseNotRegistedNow(course_parent: ICourseParent): IAddCourseNotRegistedNowActionType {\r\n    return { type: ADD_DOING_COURSE, course_parent: course_parent };\r\n}\r\n\r\nexport function editCourseNotRegistedNow(course_parent: ICourseParent): IEditCourseNotRegistedNowActionType {\r\n    return { type: EDIT_DOING_COURSE, course_parent: course_parent };\r\n}\r\n\r\nexport function removeCourseNotRegistedNow(id: any): IRemoveCourseNotRegistedNowActionType {\r\n    return { type: REMOVE_DOING_COURSE, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseNotRegistedNow(course_parent: ICourseParent): IChangeSelectedCourseNotRegistedNowActionType {\r\n    return { type: CHANGE_DOING_COURSE_PENDING_EDIT, course_parent: course_parent };\r\n}\r\n\r\nexport function clearSelectedCourseNotRegistedNow(): IClearSelectedCourseNotRegistedNowActionType {\r\n    return { type: CLEAR_DOING_COURSE_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialCourseRegisted(course_parent: ICourseParent): IInitialCourseRegistedActionType {\r\n    return { type: INITIAL_DONE_COURSE, course_parent: course_parent };\r\n}\r\n\r\nexport function removeCourseRegistedAll(): IRemoveCourseRegistedAllActionType {\r\n    return { type: REMOVE_DONE_COURSE_ALL };\r\n}\r\n\r\nexport function addCourseRegisted(course_parent: ICourseParent): IAddCourseRegistedActionType {\r\n    return { type: ADD_DONE_COURSE, course_parent: course_parent };\r\n}\r\n\r\nexport function editCourseRegisted(course_parent: ICourseParent): IEditCourseRegistedActionType {\r\n    return { type: EDIT_DONE_COURSE, course_parent: course_parent };\r\n}\r\n\r\nexport function removeCourseRegisted(id: any): IRemoveCourseRegistedActionType {\r\n    return { type: REMOVE_DONE_COURSE, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseRegisted(course_parent: ICourseParent): IChangeSelectedCourseRegistedActionType {\r\n    return { type: CHANGE_DONE_COURSE_PENDING_EDIT, course_parent: course_parent };\r\n}\r\n\r\nexport function clearSelectedCourseRegisted(): IClearSelectedCourseRegistedActionType {\r\n    return { type: CLEAR_DONE_COURSE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseParentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_course_parents\r\ninterface IAddCourseNotRegistedNowActionType { type: string, course_parent: ICourseParent };\r\ninterface IEditCourseNotRegistedNowActionType { type: string, course_parent: ICourseParent };\r\ninterface IRemoveCourseNotRegistedNowActionType { type: string, id: any };\r\ninterface IChangeSelectedCourseNotRegistedNowActionType { type: string, course_parent: ICourseParent };\r\ninterface IClearSelectedCourseNotRegistedNowActionType { type: string };\r\ninterface IRemoveCourseNotRegistedNowAllActionType { type: string }\r\ninterface IInitialCourseNotRegistedNowActionType {type: string, course_parent: ICourseParent}\r\n\r\n// not_register_course_parents\r\ninterface IAddCourseRegistedActionType { type: string, course_parent: ICourseParent };\r\ninterface IEditCourseRegistedActionType { type: string, course_parent: ICourseParent };\r\ninterface IRemoveCourseRegistedActionType { type: string, id: any };\r\ninterface IChangeSelectedCourseRegistedActionType { type: string, course_parent: ICourseParent };\r\ninterface IClearSelectedCourseRegistedActionType { type: string };\r\ninterface IRemoveCourseRegistedAllActionType { type: string }\r\ninterface IInitialCourseRegistedActionType {type: string, course_parent: ICourseParent}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  CourseParentModificationStatus};","import { ITutorialPage, TutorialPageModificationStatus } from \"../models/tutorial_page.interface\";\r\nexport const ADD_TUTORIAL_PAGE: string = \"ADD_TUTORIAL_PAGE\";\r\nexport const EDIT_TUTORIAL_PAGE: string = \"EDIT_TUTORIAL_PAGE\";\r\nexport const REMOVE_TUTORIAL_PAGE: string = \"REMOVE_TUTORIAL_PAGE\";\r\nexport const REMOVE_TUTORIAL_PAGE_BY_NUMBER: string = \"REMOVE_TUTORIAL_PAGE_BY_NUMBER\";\r\nexport const CHANGE_TUTORIAL_PAGE_AMOUNT: string = \"CHANGE_TUTORIAL_PAGE_AMOUNT\";\r\nexport const CHANGE_TUTORIAL_PAGE_PENDING_EDIT: string = \"CHANGE_TUTORIAL_PAGE_PENDING_EDIT\";\r\nexport const CLEAR_TUTORIAL_PAGE_PENDING_EDIT: string = \"CLEAR_TUTORIAL_PAGE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_TUTORIAL_PAGE_ALL: string = \"REMOVE_TUTORIAL_PAGE_ALL\";\r\nexport const INITIAL_TUTORIAL_PAGE: string = \"INITIAL_TUTORIAL_PAGE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(tutorial_page: ITutorialPage) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        tutorial_page\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialTutorialPage(tutorial_page: ITutorialPage): IInitialTutorialPageActionType {\r\n    return { type: INITIAL_TUTORIAL_PAGE, tutorial_page: tutorial_page };\r\n}\r\n\r\nexport function removeTutorialPageAll(): IRemoveTutorialPageAllActionType {\r\n    return { type: REMOVE_TUTORIAL_PAGE_ALL };\r\n}\r\n\r\nexport function addTutorialPage(tutorial_page: ITutorialPage): IAddTutorialPageActionType {\r\n    return { type: ADD_TUTORIAL_PAGE, tutorial_page: tutorial_page };\r\n}\r\n\r\nexport function editTutorialPage(tutorial_page: ITutorialPage): IEditTutorialPageActionType {\r\n    return { type: EDIT_TUTORIAL_PAGE, tutorial_page: tutorial_page };\r\n}\r\n\r\nexport function removeTutorialPage(id: any): IRemoveTutorialPageActionType {\r\n    return { type: REMOVE_TUTORIAL_PAGE, id: id };\r\n}\r\n\r\nexport function removeTutorialPageByNumber(number: number): IRemoveTutorialPageByNumberActionType {\r\n    return { type: REMOVE_TUTORIAL_PAGE_BY_NUMBER, number: number };\r\n}\r\n\r\nexport function changeSelectedTutorialPage(tutorial_page: ITutorialPage): IChangeSelectedTutorialPageActionType {\r\n    return { type: CHANGE_TUTORIAL_PAGE_PENDING_EDIT, tutorial_page: tutorial_page };\r\n}\r\n\r\nexport function clearSelectedTutorialPage(): IClearSelectedTutorialPageActionType {\r\n    return { type: CLEAR_TUTORIAL_PAGE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateTutorialPage(value: TutorialPageModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddTutorialPageActionType { type: string, tutorial_page: ITutorialPage };\r\ninterface IEditTutorialPageActionType { type: string, tutorial_page: ITutorialPage };\r\ninterface IRemoveTutorialPageActionType { type: string, id: any };\r\ninterface IChangeSelectedTutorialPageActionType { type: string, tutorial_page: ITutorialPage };\r\ninterface IClearSelectedTutorialPageActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  TutorialPageModificationStatus};\r\ninterface IRemoveTutorialPageAllActionType { type: string }\r\ninterface IRemoveTutorialPageByNumberActionType { type: string, number: number }\r\ninterface IInitialTutorialPageActionType {type: string, tutorial_page: ITutorialPage}","import { ILesson, LessonModificationStatus } from \"../models/lesson.interface\";\r\nexport const ADD_LESSON: string = \"ADD_LESSON\";\r\nexport const EDIT_LESSON: string = \"EDIT_LESSON\";\r\nexport const REMOVE_LESSON: string = \"REMOVE_LESSON\";\r\nexport const CHANGE_LESSON_AMOUNT: string = \"CHANGE_LESSON_AMOUNT\";\r\nexport const CHANGE_LESSON_PENDING_EDIT: string = \"CHANGE_LESSON_PENDING_EDIT\";\r\nexport const CLEAR_LESSON_PENDING_EDIT: string = \"CLEAR_LESSON_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_LESSON_ALL: string = \"REMOVE_LESSON_ALL\";\r\nexport const INITIAL_LESSON: string = \"INITIAL_LESSON\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(lesson: ILesson) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        lesson\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialLesson(lesson: ILesson): IInitialLessonActionType {\r\n    return { type: INITIAL_LESSON, lesson: lesson };\r\n}\r\n\r\nexport function removeLessonAll(): IRemoveLessonAllActionType {\r\n    return { type: REMOVE_LESSON_ALL };\r\n}\r\n\r\nexport function addLesson(lesson: ILesson): IAddLessonActionType {\r\n    return { type: ADD_LESSON, lesson: lesson };\r\n}\r\n\r\nexport function editLesson(lesson: ILesson): IEditLessonActionType {\r\n    return { type: EDIT_LESSON, lesson: lesson };\r\n}\r\n\r\nexport function removeLesson(id: any): IRemoveLessonActionType {\r\n    return { type: REMOVE_LESSON, id: id };\r\n}\r\n\r\nexport function changeSelectedLesson(lesson: ILesson): IChangeSelectedLessonActionType {\r\n    return { type: CHANGE_LESSON_PENDING_EDIT, lesson: lesson };\r\n}\r\n\r\nexport function clearSelectedLesson(): IClearSelectedLessonActionType {\r\n    return { type: CLEAR_LESSON_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: LessonModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddLessonActionType { type: string, lesson: ILesson };\r\ninterface IEditLessonActionType { type: string, lesson: ILesson };\r\ninterface IRemoveLessonActionType { type: string, id: any };\r\ninterface IChangeSelectedLessonActionType { type: string, lesson: ILesson };\r\ninterface IClearSelectedLessonActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  LessonModificationStatus};\r\ninterface IRemoveLessonAllActionType { type: string }\r\ninterface IInitialLessonActionType {type: string, lesson: ILesson}","import { ISemesterClass, SemesterClassModificationStatus } from \"../models/semester_class.interface\";\r\nexport const ADD_SEMESTER_CLASS: string = \"ADD_SEMESTER_CLASS\";\r\nexport const EDIT_SEMESTER_CLASS: string = \"EDIT_SEMESTER_CLASS\";\r\nexport const REMOVE_SEMESTER_CLASS: string = \"REMOVE_SEMESTER_CLASS\";\r\nexport const CHANGE_SEMESTER_CLASS_AMOUNT: string = \"CHANGE_SEMESTER_CLASS_AMOUNT\";\r\nexport const CHANGE_SEMESTER_CLASS_PENDING_EDIT: string = \"CHANGE_SEMESTER_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_SEMESTER_CLASS_PENDING_EDIT: string = \"CLEAR_SEMESTER_CLASS_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SEMESTER_CLASS_ALL: string = \"REMOVE_SEMESTER_CLASS_ALL\";\r\nexport const INITIAL_SEMESTER_CLASS: string = \"INITIAL_SEMESTER_CLASS\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(semester_class: ISemesterClass) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        semester_class\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSemesterClass(semester_class: ISemesterClass): IInitialSemesterClassActionType {\r\n    return { type: INITIAL_SEMESTER_CLASS, semester_class: semester_class };\r\n}\r\n\r\nexport function removeSemesterClassAll(): IRemoveSemesterClassAllActionType {\r\n    return { type: REMOVE_SEMESTER_CLASS_ALL };\r\n}\r\n\r\nexport function addSemesterClass(semester_class: ISemesterClass): IAddSemesterClassActionType {\r\n    return { type: ADD_SEMESTER_CLASS, semester_class: semester_class };\r\n}\r\n\r\nexport function editSemesterClass(semester_class: ISemesterClass): IEditSemesterClassActionType {\r\n    return { type: EDIT_SEMESTER_CLASS, semester_class: semester_class };\r\n}\r\n\r\nexport function removeSemesterClass(id: any): IRemoveSemesterClassActionType {\r\n    return { type: REMOVE_SEMESTER_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClass(semester_class: ISemesterClass): IChangeSelectedSemesterClassActionType {\r\n    return { type: CHANGE_SEMESTER_CLASS_PENDING_EDIT, semester_class: semester_class };\r\n}\r\n\r\nexport function clearSelectedSemesterClass(): IClearSelectedSemesterClassActionType {\r\n    return { type: CLEAR_SEMESTER_CLASS_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateSemesterClass(value: SemesterClassModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddSemesterClassActionType { type: string, semester_class: ISemesterClass };\r\ninterface IEditSemesterClassActionType { type: string, semester_class: ISemesterClass };\r\ninterface IRemoveSemesterClassActionType { type: string, id: any };\r\ninterface IChangeSelectedSemesterClassActionType { type: string, semester_class: ISemesterClass };\r\ninterface IClearSelectedSemesterClassActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  SemesterClassModificationStatus};\r\ninterface IRemoveSemesterClassAllActionType { type: string }\r\ninterface IInitialSemesterClassActionType {type: string, semester_class: ISemesterClass}","import { IAnonymousNotification, AnonymousNotificationModificationStatus } from \"../models/anonymous_notification.interface\";\r\nexport const ADD_ANONYMOUS_NOTIFICATION: string = \"ADD_ANONYMOUS_NOTIFICATION\";\r\nexport const EDIT_ANONYMOUS_NOTIFICATION: string = \"EDIT_ANONYMOUS_NOTIFICATION\";\r\nexport const REMOVE_ANONYMOUS_NOTIFICATION: string = \"REMOVE_ANONYMOUS_NOTIFICATION\";\r\nexport const CHANGE_ANONYMOUS_NOTIFICATION_AMOUNT: string = \"CHANGE_ANONYMOUS_NOTIFICATION_AMOUNT\";\r\nexport const CHANGE_ANONYMOUS_NOTIFICATION_PENDING_EDIT: string = \"CHANGE_ANONYMOUS_NOTIFICATION_PENDING_EDIT\";\r\nexport const CLEAR_ANONYMOUS_NOTIFICATION_PENDING_EDIT: string = \"CLEAR_ANONYMOUS_NOTIFICATION_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_ANONYMOUS_NOTIFICATION_ALL: string = \"REMOVE_ANONYMOUS_NOTIFICATION_ALL\";\r\nexport const INITIAL_ANONYMOUS_NOTIFICATION: string = \"INITIAL_ANONYMOUS_NOTIFICATION\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(anonymous_notification: IAnonymousNotification) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        anonymous_notification\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialAnonymousNotification(anonymous_notification: IAnonymousNotification): IInitialAnonymousNotificationActionType {\r\n    return { type: INITIAL_ANONYMOUS_NOTIFICATION, anonymous_notification: anonymous_notification };\r\n}\r\n\r\nexport function removeAnonymousNotificationAll(): IRemoveAnonymousNotificationAllActionType {\r\n    return { type: REMOVE_ANONYMOUS_NOTIFICATION_ALL };\r\n}\r\n\r\nexport function addAnonymousNotification(anonymous_notification: IAnonymousNotification): IAddAnonymousNotificationActionType {\r\n    return { type: ADD_ANONYMOUS_NOTIFICATION, anonymous_notification: anonymous_notification };\r\n}\r\n\r\nexport function editAnonymousNotification(anonymous_notification: IAnonymousNotification): IEditAnonymousNotificationActionType {\r\n    return { type: EDIT_ANONYMOUS_NOTIFICATION, anonymous_notification: anonymous_notification };\r\n}\r\n\r\nexport function removeAnonymousNotification(id: any): IRemoveAnonymousNotificationActionType {\r\n    return { type: REMOVE_ANONYMOUS_NOTIFICATION, id: id };\r\n}\r\n\r\nexport function changeSelectedAnonymousNotification(anonymous_notification: IAnonymousNotification): IChangeSelectedAnonymousNotificationActionType {\r\n    return { type: CHANGE_ANONYMOUS_NOTIFICATION_PENDING_EDIT, anonymous_notification: anonymous_notification };\r\n}\r\n\r\nexport function clearSelectedAnonymousNotification(): IClearSelectedAnonymousNotificationActionType {\r\n    return { type: CLEAR_ANONYMOUS_NOTIFICATION_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateAnonymousNotification(value: AnonymousNotificationModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddAnonymousNotificationActionType { type: string, anonymous_notification: IAnonymousNotification };\r\ninterface IEditAnonymousNotificationActionType { type: string, anonymous_notification: IAnonymousNotification };\r\ninterface IRemoveAnonymousNotificationActionType { type: string, id: any };\r\ninterface IChangeSelectedAnonymousNotificationActionType { type: string, anonymous_notification: IAnonymousNotification };\r\ninterface IClearSelectedAnonymousNotificationActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  AnonymousNotificationModificationStatus};\r\ninterface IRemoveAnonymousNotificationAllActionType { type: string }\r\ninterface IInitialAnonymousNotificationActionType {type: string, anonymous_notification: IAnonymousNotification}","import { ISemester, SemesterModificationStatus } from \"../models/semester.interface\";\r\nexport const ADD_SEMESTER: string = \"ADD_SEMESTER\";\r\nexport const EDIT_SEMESTER: string = \"EDIT_SEMESTER\";\r\nexport const REMOVE_SEMESTER: string = \"REMOVE_SEMESTER\";\r\nexport const CHANGE_SEMESTER_AMOUNT: string = \"CHANGE_SEMESTER_AMOUNT\";\r\nexport const CHANGE_SEMESTER_PENDING_EDIT: string = \"CHANGE_SEMESTER_PENDING_EDIT\";\r\nexport const CLEAR_SEMESTER_PENDING_EDIT: string = \"CLEAR_SEMESTER_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SEMESTER_ALL: string = \"REMOVE_SEMESTER_ALL\";\r\nexport const INITIAL_SEMESTER: string = \"INITIAL_SEMESTER\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(semester: ISemester) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        semester\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSemester(semester: ISemester): IInitialSemesterActionType {\r\n    return { type: INITIAL_SEMESTER, semester: semester };\r\n}\r\n\r\nexport function removeSemesterAll(): IRemoveSemesterAllActionType {\r\n    return { type: REMOVE_SEMESTER_ALL };\r\n}\r\n\r\nexport function addSemester(semester: ISemester): IAddSemesterActionType {\r\n    return { type: ADD_SEMESTER, semester: semester };\r\n}\r\n\r\nexport function editSemester(semester: ISemester): IEditSemesterActionType {\r\n    return { type: EDIT_SEMESTER, semester: semester };\r\n}\r\n\r\nexport function removeSemester(id: any): IRemoveSemesterActionType {\r\n    return { type: REMOVE_SEMESTER, id: id };\r\n}\r\n\r\nexport function changeSelectedSemester(semester: ISemester): IChangeSelectedSemesterActionType {\r\n    return { type: CHANGE_SEMESTER_PENDING_EDIT, semester: semester };\r\n}\r\n\r\nexport function clearSelectedSemester(): IClearSelectedSemesterActionType {\r\n    return { type: CLEAR_SEMESTER_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: SemesterModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddSemesterActionType { type: string, semester: ISemester };\r\ninterface IEditSemesterActionType { type: string, semester: ISemester };\r\ninterface IRemoveSemesterActionType { type: string, id: any };\r\ninterface IChangeSelectedSemesterActionType { type: string, semester: ISemester };\r\ninterface IClearSelectedSemesterActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  SemesterModificationStatus};\r\ninterface IRemoveSemesterAllActionType { type: string }\r\ninterface IInitialSemesterActionType {type: string, semester: ISemester}","import { ICourse, CourseModificationStatus } from \"../models/course.interface\";\r\nexport const ADD_COURSE: string = \"ADD_COURSE\";\r\nexport const EDIT_COURSE: string = \"EDIT_COURSE\";\r\nexport const REMOVE_COURSE: string = \"REMOVE_COURSE\";\r\nexport const CHANGE_COURSE_AMOUNT: string = \"CHANGE_COURSE_AMOUNT\";\r\nexport const CHANGE_COURSE_PENDING_EDIT: string = \"CHANGE_COURSE_PENDING_EDIT\";\r\nexport const CLEAR_COURSE_PENDING_EDIT: string = \"CLEAR_COURSE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_COURSE_ALL: string = \"REMOVE_COURSE_ALL\";\r\nexport const INITIAL_COURSE: string = \"INITIAL_COURSE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course: ICourse) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCourse(course: ICourse): IInitialCourseActionType {\r\n    return { type: INITIAL_COURSE, course: course };\r\n}\r\n\r\nexport function removeCourseAll(): IRemoveCourseAllActionType {\r\n    return { type: REMOVE_COURSE_ALL };\r\n}\r\n\r\nexport function addCourse(course: ICourse): IAddCourseActionType {\r\n    return { type: ADD_COURSE, course: course };\r\n}\r\n\r\nexport function editCourse(course: ICourse): IEditCourseActionType {\r\n    return { type: EDIT_COURSE, course: course };\r\n}\r\n\r\nexport function removeCourse(id: any): IRemoveCourseActionType {\r\n    return { type: REMOVE_COURSE, id: id };\r\n}\r\n\r\nexport function changeSelectedCourse(course: ICourse): IChangeSelectedCourseActionType {\r\n    return { type: CHANGE_COURSE_PENDING_EDIT, course: course };\r\n}\r\n\r\nexport function clearSelectedCourse(): IClearSelectedCourseActionType {\r\n    return { type: CLEAR_COURSE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddCourseActionType { type: string, course: ICourse };\r\ninterface IEditCourseActionType { type: string, course: ICourse };\r\ninterface IRemoveCourseActionType { type: string, id: any };\r\ninterface IChangeSelectedCourseActionType { type: string, course: ICourse };\r\ninterface IClearSelectedCourseActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  CourseModificationStatus};\r\ninterface IRemoveCourseAllActionType { type: string }\r\ninterface IInitialCourseActionType {type: string, course: ICourse}","import { IMyClass, MyClassModificationStatus } from \"../models/my_class.interface\";\r\nexport const ADD_MY_CLASS: string = \"ADD_MY_CLASS\";\r\nexport const EDIT_MY_CLASS: string = \"EDIT_MY_CLASS\";\r\nexport const REMOVE_MY_CLASS: string = \"REMOVE_MY_CLASS\";\r\nexport const CHANGE_MY_CLASS_AMOUNT: string = \"CHANGE_MY_CLASS_AMOUNT\";\r\nexport const CHANGE_MY_CLASS_PENDING_EDIT: string = \"CHANGE_MY_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_MY_CLASS_PENDING_EDIT: string = \"CLEAR_MY_CLASS_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_MY_CLASS_ALL: string = \"REMOVE_MY_CLASS_ALL\";\r\nexport const INITIAL_MY_CLASS: string = \"INITIAL_MY_CLASS\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(myclass: IMyClass) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        myclass\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialMyClass(myclass: IMyClass): IInitialMyClassActionType {\r\n    return { type: INITIAL_MY_CLASS, myclass: myclass };\r\n}\r\n\r\nexport function removeMyClassAll(): IRemoveMyClassAllActionType {\r\n    return { type: REMOVE_MY_CLASS_ALL };\r\n}\r\n\r\nexport function addMyClass(myclass: IMyClass): IAddMyClassActionType {\r\n    return { type: ADD_MY_CLASS, myclass: myclass };\r\n}\r\n\r\nexport function editMyClass(myclass: IMyClass): IEditMyClassActionType {\r\n    return { type: EDIT_MY_CLASS, myclass: myclass };\r\n}\r\n\r\nexport function removeMyClass(id: any): IRemoveMyClassActionType {\r\n    return { type: REMOVE_MY_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedMyClass(myclass: IMyClass): IChangeSelectedMyClassActionType {\r\n    return { type: CHANGE_MY_CLASS_PENDING_EDIT, myclass: myclass };\r\n}\r\n\r\nexport function clearSelectedMyClass(): IClearSelectedMyClassActionType {\r\n    return { type: CLEAR_MY_CLASS_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: MyClassModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddMyClassActionType { type: string, myclass: IMyClass };\r\ninterface IEditMyClassActionType { type: string, myclass: IMyClass };\r\ninterface IRemoveMyClassActionType { type: string, id: any };\r\ninterface IChangeSelectedMyClassActionType { type: string, myclass: IMyClass };\r\ninterface IClearSelectedMyClassActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  MyClassModificationStatus};\r\ninterface IRemoveMyClassAllActionType { type: string }\r\ninterface IInitialMyClassActionType {type: string, myclass: IMyClass}","import { IArtAge, ArtAgeModificationStatus } from \"../models/art_age.interface\";\r\nexport const ADD_ART_AGE: string = \"ADD_ART_AGE\";\r\nexport const EDIT_ART_AGE: string = \"EDIT_ART_AGE\";\r\nexport const REMOVE_ART_AGE: string = \"REMOVE_ART_AGE\";\r\nexport const CHANGE_ART_AGE_AMOUNT: string = \"CHANGE_ART_AGE_AMOUNT\";\r\nexport const CHANGE_ART_AGE_PENDING_EDIT: string = \"CHANGE_ART_AGE_PENDING_EDIT\";\r\nexport const CLEAR_ART_AGE_PENDING_EDIT: string = \"CLEAR_ART_AGE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_ART_AGE_ALL: string = \"REMOVE_ART_AGE_ALL\";\r\nexport const INITIAL_ART_AGE: string = \"INITIAL_ART_AGE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(art_age: IArtAge) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        art_age\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialArtAge(art_age: IArtAge): IInitialArtAgeActionType {\r\n    return { type: INITIAL_ART_AGE, art_age: art_age };\r\n}\r\n\r\nexport function removeArtAgeAll(): IRemoveArtAgeAllActionType {\r\n    return { type: REMOVE_ART_AGE_ALL };\r\n}\r\n\r\nexport function addArtAge(art_age: IArtAge): IAddArtAgeActionType {\r\n    return { type: ADD_ART_AGE, art_age: art_age };\r\n}\r\n\r\nexport function editArtAge(art_age: IArtAge): IEditArtAgeActionType {\r\n    return { type: EDIT_ART_AGE, art_age: art_age };\r\n}\r\n\r\nexport function removeArtAge(id: any): IRemoveArtAgeActionType {\r\n    return { type: REMOVE_ART_AGE, id: id };\r\n}\r\n\r\nexport function changeSelectedArtAge(art_age: IArtAge): IChangeSelectedArtAgeActionType {\r\n    return { type: CHANGE_ART_AGE_PENDING_EDIT, art_age: art_age };\r\n}\r\n\r\nexport function clearSelectedArtAge(): IClearSelectedArtAgeActionType {\r\n    return { type: CLEAR_ART_AGE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateArtAge(value: ArtAgeModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddArtAgeActionType { type: string, art_age: IArtAge };\r\ninterface IEditArtAgeActionType { type: string, art_age: IArtAge };\r\ninterface IRemoveArtAgeActionType { type: string, id: any };\r\ninterface IChangeSelectedArtAgeActionType { type: string, art_age: IArtAge };\r\ninterface IClearSelectedArtAgeActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ArtAgeModificationStatus};\r\ninterface IRemoveArtAgeAllActionType { type: string }\r\ninterface IInitialArtAgeActionType {type: string, art_age: IArtAge}","import { IExercise, ExerciseModificationStatus } from \"../models/exercise.interface\";\r\nexport const ADD_EXERCISE: string = \"ADD_EXERCISE\";\r\nexport const EDIT_EXERCISE: string = \"EDIT_EXERCISE\";\r\nexport const REMOVE_EXERCISE: string = \"REMOVE_EXERCISE\";\r\nexport const CHANGE_EXERCISE_AMOUNT: string = \"CHANGE_EXERCISE_AMOUNT\";\r\nexport const CHANGE_EXERCISE_PENDING_EDIT: string = \"CHANGE_EXERCISE_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_PENDING_EDIT: string = \"CLEAR_EXERCISE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_EXERCISE_ALL: string = \"REMOVE_EXERCISE_ALL\";\r\nexport const INITIAL_EXERCISE: string = \"INITIAL_EXERCISE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(exercise: IExercise) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        exercise\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialExercise(exercise: IExercise): IInitialExerciseActionType {\r\n    return { type: INITIAL_EXERCISE, exercise: exercise };\r\n}\r\n\r\nexport function removeExerciseAll(): IRemoveExerciseAllActionType {\r\n    return { type: REMOVE_EXERCISE_ALL };\r\n}\r\n\r\nexport function addExercise(exercise: IExercise): IAddExerciseActionType {\r\n    return { type: ADD_EXERCISE, exercise: exercise };\r\n}\r\n\r\nexport function editExercise(exercise: IExercise): IEditExerciseActionType {\r\n    return { type: EDIT_EXERCISE, exercise: exercise };\r\n}\r\n\r\nexport function removeExercise(id: any): IRemoveExerciseActionType {\r\n    return { type: REMOVE_EXERCISE, id: id };\r\n}\r\n\r\nexport function changeSelectedExercise(exercise: IExercise): IChangeSelectedExerciseActionType {\r\n    return { type: CHANGE_EXERCISE_PENDING_EDIT, exercise: exercise };\r\n}\r\n\r\nexport function clearSelectedExercise(): IClearSelectedExerciseActionType {\r\n    return { type: CLEAR_EXERCISE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ExerciseModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddExerciseActionType { type: string, exercise: IExercise };\r\ninterface IEditExerciseActionType { type: string, exercise: IExercise };\r\ninterface IRemoveExerciseActionType { type: string, id: any };\r\ninterface IChangeSelectedExerciseActionType { type: string, exercise: IExercise };\r\ninterface IClearSelectedExerciseActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ExerciseModificationStatus};\r\ninterface IRemoveExerciseAllActionType { type: string }\r\ninterface IInitialExerciseActionType {type: string, exercise: IExercise}","import { IArtType, ArtTypeModificationStatus } from \"../models/art_type.interface\";\r\nexport const ADD_ART_TYPE: string = \"ADD_ART_TYPE\";\r\nexport const EDIT_ART_TYPE: string = \"EDIT_ART_TYPE\";\r\nexport const REMOVE_ART_TYPE: string = \"REMOVE_ART_TYPE\";\r\nexport const CHANGE_ART_TYPE_AMOUNT: string = \"CHANGE_ART_TYPE_AMOUNT\";\r\nexport const CHANGE_ART_TYPE_PENDING_EDIT: string = \"CHANGE_ART_TYPE_PENDING_EDIT\";\r\nexport const CLEAR_ART_TYPE_PENDING_EDIT: string = \"CLEAR_ART_TYPE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_ART_TYPE_ALL: string = \"REMOVE_ART_TYPE_ALL\";\r\nexport const INITIAL_ART_TYPE: string = \"INITIAL_ART_TYPE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(art_type: IArtType) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        art_type\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialArtType(art_type: IArtType): IInitialArtTypeActionType {\r\n    return { type: INITIAL_ART_TYPE, art_type: art_type };\r\n}\r\n\r\nexport function removeArtTypeAll(): IRemoveArtTypeAllActionType {\r\n    return { type: REMOVE_ART_TYPE_ALL };\r\n}\r\n\r\nexport function addArtType(art_type: IArtType): IAddArtTypeActionType {\r\n    return { type: ADD_ART_TYPE, art_type: art_type };\r\n}\r\n\r\nexport function editArtType(art_type: IArtType): IEditArtTypeActionType {\r\n    return { type: EDIT_ART_TYPE, art_type: art_type };\r\n}\r\n\r\nexport function removeArtType(id: any): IRemoveArtTypeActionType {\r\n    return { type: REMOVE_ART_TYPE, id: id };\r\n}\r\n\r\nexport function changeSelectedArtType(art_type: IArtType): IChangeSelectedArtTypeActionType {\r\n    return { type: CHANGE_ART_TYPE_PENDING_EDIT, art_type: art_type };\r\n}\r\n\r\nexport function clearSelectedArtType(): IClearSelectedArtTypeActionType {\r\n    return { type: CLEAR_ART_TYPE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ArtTypeModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddArtTypeActionType { type: string, art_type: IArtType };\r\ninterface IEditArtTypeActionType { type: string, art_type: IArtType };\r\ninterface IRemoveArtTypeActionType { type: string, id: any };\r\ninterface IChangeSelectedArtTypeActionType { type: string, art_type: IArtType };\r\ninterface IClearSelectedArtTypeActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ArtTypeModificationStatus};\r\ninterface IRemoveArtTypeAllActionType { type: string }\r\ninterface IInitialArtTypeActionType {type: string, art_type: IArtType}","import { ISchedule, ScheduleModificationStatus } from \"../models/schedule.interface\";\r\nexport const ADD_SCHEDULE: string = \"ADD_SCHEDULE\";\r\nexport const EDIT_SCHEDULE: string = \"EDIT_SCHEDULE\";\r\nexport const REMOVE_SCHEDULE: string = \"REMOVE_SCHEDULE\";\r\nexport const CHANGE_SCHEDULE_AMOUNT: string = \"CHANGE_SCHEDULE_AMOUNT\";\r\nexport const CHANGE_SCHEDULE_PENDING_EDIT: string = \"CHANGE_SCHEDULE_PENDING_EDIT\";\r\nexport const CLEAR_SCHEDULE_PENDING_EDIT: string = \"CLEAR_SCHEDULE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SCHEDULE_ALL: string = \"REMOVE_SCHEDULE_ALL\";\r\nexport const INITIAL_SCHEDULE: string = \"INITIAL_SCHEDULE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(schedule: ISchedule) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        schedule\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSchedule(schedule: ISchedule): IInitialScheduleActionType {\r\n    return { type: INITIAL_SCHEDULE, schedule: schedule };\r\n}\r\n\r\nexport function removeScheduleAll(): IRemoveScheduleAllActionType {\r\n    return { type: REMOVE_SCHEDULE_ALL };\r\n}\r\n\r\nexport function addSchedule(schedule: ISchedule): IAddScheduleActionType {\r\n    return { type: ADD_SCHEDULE, schedule: schedule };\r\n}\r\n\r\nexport function editSchedule(schedule: ISchedule): IEditScheduleActionType {\r\n    return { type: EDIT_SCHEDULE, schedule: schedule };\r\n}\r\n\r\nexport function removeSchedule(id: any): IRemoveScheduleActionType {\r\n    return { type: REMOVE_SCHEDULE, id: id };\r\n}\r\n\r\nexport function changeSelectedSchedule(schedule: ISchedule): IChangeSelectedScheduleActionType {\r\n    return { type: CHANGE_SCHEDULE_PENDING_EDIT, schedule: schedule };\r\n}\r\n\r\nexport function clearSelectedSchedule(): IClearSelectedScheduleActionType {\r\n    return { type: CLEAR_SCHEDULE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ScheduleModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddScheduleActionType { type: string, schedule: ISchedule };\r\ninterface IEditScheduleActionType { type: string, schedule: ISchedule };\r\ninterface IRemoveScheduleActionType { type: string, id: any };\r\ninterface IChangeSelectedScheduleActionType { type: string, schedule: ISchedule };\r\ninterface IClearSelectedScheduleActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ScheduleModificationStatus};\r\ninterface IRemoveScheduleAllActionType { type: string }\r\ninterface IInitialScheduleActionType {type: string, schedule: ISchedule}","import { IArtLevel, ArtLevelModificationStatus } from \"../models/art_level.interface\";\r\nexport const ADD_ART_LEVEL: string = \"ADD_ART_LEVEL\";\r\nexport const EDIT_ART_LEVEL: string = \"EDIT_ART_LEVEL\";\r\nexport const REMOVE_ART_LEVEL: string = \"REMOVE_ART_LEVEL\";\r\nexport const CHANGE_ART_LEVEL_AMOUNT: string = \"CHANGE_ART_LEVEL_AMOUNT\";\r\nexport const CHANGE_ART_LEVEL_PENDING_EDIT: string = \"CHANGE_ART_LEVEL_PENDING_EDIT\";\r\nexport const CLEAR_ART_LEVEL_PENDING_EDIT: string = \"CLEAR_ART_LEVEL_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_ART_LEVEL_ALL: string = \"REMOVE_ART_LEVEL_ALL\";\r\nexport const INITIAL_ART_LEVEL: string = \"INITIAL_ART_LEVEL\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(art_level: IArtLevel) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        art_level\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialArtLevel(art_level: IArtLevel): IInitialArtLevelActionType {\r\n    return { type: INITIAL_ART_LEVEL, art_level: art_level };\r\n}\r\n\r\nexport function removeArtLevelAll(): IRemoveArtLevelAllActionType {\r\n    return { type: REMOVE_ART_LEVEL_ALL };\r\n}\r\n\r\nexport function addArtLevel(art_level: IArtLevel): IAddArtLevelActionType {\r\n    return { type: ADD_ART_LEVEL, art_level: art_level };\r\n}\r\n\r\nexport function editArtLevel(art_level: IArtLevel): IEditArtLevelActionType {\r\n    return { type: EDIT_ART_LEVEL, art_level: art_level };\r\n}\r\n\r\nexport function removeArtLevel(id: any): IRemoveArtLevelActionType {\r\n    return { type: REMOVE_ART_LEVEL, id: id };\r\n}\r\n\r\nexport function changeSelectedArtLevel(art_level: IArtLevel): IChangeSelectedArtLevelActionType {\r\n    return { type: CHANGE_ART_LEVEL_PENDING_EDIT, art_level: art_level };\r\n}\r\n\r\nexport function clearSelectedArtLevel(): IClearSelectedArtLevelActionType {\r\n    return { type: CLEAR_ART_LEVEL_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateArtLevel(value: ArtLevelModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddArtLevelActionType { type: string, art_level: IArtLevel };\r\ninterface IEditArtLevelActionType { type: string, art_level: IArtLevel };\r\ninterface IRemoveArtLevelActionType { type: string, id: any };\r\ninterface IChangeSelectedArtLevelActionType { type: string, art_level: IArtLevel };\r\ninterface IClearSelectedArtLevelActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ArtLevelModificationStatus};\r\ninterface IRemoveArtLevelAllActionType { type: string }\r\ninterface IInitialArtLevelActionType {type: string, art_level: IArtLevel}","import { ISectionTemplate, SectionTemplateModificationStatus } from \"../models/section_template.interface\";\r\nexport const ADD_SECTION_TEMPLATE: string = \"ADD_SECTION_TEMPLATE\";\r\nexport const EDIT_SECTION_TEMPLATE: string = \"EDIT_SECTION_TEMPLATE\";\r\nexport const REMOVE_SECTION_TEMPLATE: string = \"REMOVE_SECTION_TEMPLATE\";\r\nexport const CHANGE_SECTION_TEMPLATE_AMOUNT: string = \"CHANGE_SECTION_TEMPLATE_AMOUNT\";\r\nexport const CHANGE_SECTION_TEMPLATE_PENDING_EDIT: string = \"CHANGE_SECTION_TEMPLATE_PENDING_EDIT\";\r\nexport const CLEAR_SECTION_TEMPLATE_PENDING_EDIT: string = \"CLEAR_SECTION_TEMPLATE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SECTION_TEMPLATE_ALL: string = \"REMOVE_SECTION_TEMPLATE_ALL\";\r\nexport const INITIAL_SECTION_TEMPLATE: string = \"INITIAL_SECTION_TEMPLATE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(section_template: ISectionTemplate) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        section_template\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSectionTemplate(section_template: ISectionTemplate): IInitialSectionTemplateActionType {\r\n    return { type: INITIAL_SECTION_TEMPLATE, section_template: section_template };\r\n}\r\n\r\nexport function removeSectionTemplateAll(): IRemoveSectionTemplateAllActionType {\r\n    return { type: REMOVE_SECTION_TEMPLATE_ALL };\r\n}\r\n\r\nexport function addSectionTemplate(section_template: ISectionTemplate): IAddSectionTemplateActionType {\r\n    return { type: ADD_SECTION_TEMPLATE, section_template: section_template };\r\n}\r\n\r\nexport function editSectionTemplate(section_template: ISectionTemplate): IEditSectionTemplateActionType {\r\n    return { type: EDIT_SECTION_TEMPLATE, section_template: section_template };\r\n}\r\n\r\nexport function removeSectionTemplate(id: any): IRemoveSectionTemplateActionType {\r\n    return { type: REMOVE_SECTION_TEMPLATE, id: id };\r\n}\r\n\r\nexport function changeSelectedSectionTemplate(section_template: ISectionTemplate): IChangeSelectedSectionTemplateActionType {\r\n    return { type: CHANGE_SECTION_TEMPLATE_PENDING_EDIT, section_template: section_template };\r\n}\r\n\r\nexport function clearSelectedSectionTemplate(): IClearSelectedSectionTemplateActionType {\r\n    return { type: CLEAR_SECTION_TEMPLATE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateSectionTemplate(value: SectionTemplateModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddSectionTemplateActionType { type: string, section_template: ISectionTemplate };\r\ninterface IEditSectionTemplateActionType { type: string, section_template: ISectionTemplate };\r\ninterface IRemoveSectionTemplateActionType { type: string, id: any };\r\ninterface IChangeSelectedSectionTemplateActionType { type: string, section_template: ISectionTemplate };\r\ninterface IClearSelectedSectionTemplateActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  SectionTemplateModificationStatus};\r\ninterface IRemoveSectionTemplateAllActionType { type: string }\r\ninterface IInitialSectionTemplateActionType {type: string, section_template: ISectionTemplate}","import { IUserRegisterTutorialPage, UserRegisterTutorialPageModificationStatus } from \"../models/user_register_tutorial_page.interface\";\r\nexport const ADD_USER_REGISTER_JOIN_SEMESTER: string = \"ADD_USER_REGISTER_JOIN_SEMESTER\";\r\nexport const EDIT_USER_REGISTER_JOIN_SEMESTER: string = \"EDIT_USER_REGISTER_JOIN_SEMESTER\";\r\nexport const REMOVE_USER_REGISTER_JOIN_SEMESTER: string = \"REMOVE_USER_REGISTER_JOIN_SEMESTER\";\r\nexport const CHANGE_USER_REGISTER_JOIN_SEMESTER_AMOUNT: string = \"CHANGE_USER_REGISTER_JOIN_SEMESTER_AMOUNT\";\r\nexport const CHANGE_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT: string = \"CHANGE_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT\";\r\nexport const CLEAR_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT: string = \"CLEAR_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_USER_REGISTER_JOIN_SEMESTER_ALL: string = \"REMOVE_USER_REGISTER_JOIN_SEMESTER_ALL\";\r\nexport const INITIAL_USER_REGISTER_JOIN_SEMESTER: string = \"INITIAL_USER_REGISTER_JOIN_SEMESTER\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(user_register_tutorial_page: IUserRegisterTutorialPage) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        user_register_tutorial_page\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialUserRegisterTutorialPage(user_register_tutorial_page: IUserRegisterTutorialPage): IInitialUserRegisterTutorialPageActionType {\r\n    return { type: INITIAL_USER_REGISTER_JOIN_SEMESTER, user_register_tutorial_page: user_register_tutorial_page };\r\n}\r\n\r\nexport function removeUserRegisterTutorialPageAll(): IRemoveUserRegisterTutorialPageAllActionType {\r\n    return { type: REMOVE_USER_REGISTER_JOIN_SEMESTER_ALL };\r\n}\r\n\r\nexport function addUserRegisterTutorialPage(user_register_tutorial_page: IUserRegisterTutorialPage): IAddUserRegisterTutorialPageActionType {\r\n    return { type: ADD_USER_REGISTER_JOIN_SEMESTER, user_register_tutorial_page: user_register_tutorial_page };\r\n}\r\n\r\nexport function editUserRegisterTutorialPage(user_register_tutorial_page: IUserRegisterTutorialPage): IEditUserRegisterTutorialPageActionType {\r\n    return { type: EDIT_USER_REGISTER_JOIN_SEMESTER, user_register_tutorial_page: user_register_tutorial_page };\r\n}\r\n\r\nexport function removeUserRegisterTutorialPage(id: any): IRemoveUserRegisterTutorialPageActionType {\r\n    return { type: REMOVE_USER_REGISTER_JOIN_SEMESTER, id: id };\r\n}\r\n\r\nexport function changeSelectedUserRegisterTutorialPage(user_register_tutorial_page: IUserRegisterTutorialPage): IChangeSelectedUserRegisterTutorialPageActionType {\r\n    return { type: CHANGE_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT, user_register_tutorial_page: user_register_tutorial_page };\r\n}\r\n\r\nexport function clearSelectedUserRegisterTutorialPage(): IClearSelectedUserRegisterTutorialPageActionType {\r\n    return { type: CLEAR_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateUserRegisterTutorialPage(value: UserRegisterTutorialPageModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddUserRegisterTutorialPageActionType { type: string, user_register_tutorial_page: IUserRegisterTutorialPage };\r\ninterface IEditUserRegisterTutorialPageActionType { type: string, user_register_tutorial_page: IUserRegisterTutorialPage };\r\ninterface IRemoveUserRegisterTutorialPageActionType { type: string, id: any };\r\ninterface IChangeSelectedUserRegisterTutorialPageActionType { type: string, user_register_tutorial_page: IUserRegisterTutorialPage };\r\ninterface IClearSelectedUserRegisterTutorialPageActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  UserRegisterTutorialPageModificationStatus};\r\ninterface IRemoveUserRegisterTutorialPageAllActionType { type: string }\r\ninterface IInitialUserRegisterTutorialPageActionType {type: string, user_register_tutorial_page: IUserRegisterTutorialPage}","import { ITutorialTemplatePage, TutorialTemplatePageModificationStatus } from \"../models/tutorial_template_page.interface\";\r\nexport const ADD_TUTORIAL_TEMPLATE_PAGE: string = \"ADD_TUTORIAL_TEMPLATE_PAGE\";\r\nexport const EDIT_TUTORIAL_TEMPLATE_PAGE: string = \"EDIT_TUTORIAL_TEMPLATE_PAGE\";\r\nexport const REMOVE_TUTORIAL_TEMPLATE_PAGE: string = \"REMOVE_TUTORIAL_TEMPLATE_PAGE\";\r\nexport const CHANGE_TUTORIAL_TEMPLATE_PAGE_AMOUNT: string = \"CHANGE_TUTORIAL_TEMPLATE_PAGE_AMOUNT\";\r\nexport const CHANGE_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT: string = \"CHANGE_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT\";\r\nexport const CLEAR_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT: string = \"CLEAR_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_TUTORIAL_TEMPLATE_PAGE_ALL: string = \"REMOVE_TUTORIAL_TEMPLATE_PAGE_ALL\";\r\nexport const INITIAL_TUTORIAL_TEMPLATE_PAGE: string = \"INITIAL_TUTORIAL_TEMPLATE_PAGE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(tutorial_template_page: ITutorialTemplatePage) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        tutorial_template_page\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialTutorialTemplatePage(tutorial_template_page: ITutorialTemplatePage): IInitialTutorialTemplatePageActionType {\r\n    return { type: INITIAL_TUTORIAL_TEMPLATE_PAGE, tutorial_template_page: tutorial_template_page };\r\n}\r\n\r\nexport function removeTutorialTemplatePageAll(): IRemoveTutorialTemplatePageAllActionType {\r\n    return { type: REMOVE_TUTORIAL_TEMPLATE_PAGE_ALL };\r\n}\r\n\r\nexport function addTutorialTemplatePage(tutorial_template_page: ITutorialTemplatePage): IAddTutorialTemplatePageActionType {\r\n    return { type: ADD_TUTORIAL_TEMPLATE_PAGE, tutorial_template_page: tutorial_template_page };\r\n}\r\n\r\nexport function editTutorialTemplatePage(tutorial_template_page: ITutorialTemplatePage): IEditTutorialTemplatePageActionType {\r\n    return { type: EDIT_TUTORIAL_TEMPLATE_PAGE, tutorial_template_page: tutorial_template_page };\r\n}\r\n\r\nexport function removeTutorialTemplatePage(id: any): IRemoveTutorialTemplatePageActionType {\r\n    return { type: REMOVE_TUTORIAL_TEMPLATE_PAGE, id: id };\r\n}\r\n\r\nexport function changeSelectedTutorialTemplatePage(tutorial_template_page: ITutorialTemplatePage): IChangeSelectedTutorialTemplatePageActionType {\r\n    return { type: CHANGE_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT, tutorial_template_page: tutorial_template_page };\r\n}\r\n\r\nexport function clearSelectedTutorialTemplatePage(): IClearSelectedTutorialTemplatePageActionType {\r\n    return { type: CLEAR_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateTutorialTemplatePage(value: TutorialTemplatePageModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddTutorialTemplatePageActionType { type: string, tutorial_template_page: ITutorialTemplatePage };\r\ninterface IEditTutorialTemplatePageActionType { type: string, tutorial_template_page: ITutorialTemplatePage };\r\ninterface IRemoveTutorialTemplatePageActionType { type: string, id: any };\r\ninterface IChangeSelectedTutorialTemplatePageActionType { type: string, tutorial_template_page: ITutorialTemplatePage };\r\ninterface IClearSelectedTutorialTemplatePageActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  TutorialTemplatePageModificationStatus};\r\ninterface IRemoveTutorialTemplatePageAllActionType { type: string }\r\ninterface IInitialTutorialTemplatePageActionType {type: string, tutorial_template_page: ITutorialTemplatePage}","import { ISection, SectionModificationStatus } from \"../models/section.interface\";\r\nexport const ADD_SECTION: string = \"ADD_SECTION\";\r\nexport const EDIT_SECTION: string = \"EDIT_SECTION\";\r\nexport const REMOVE_SECTION: string = \"REMOVE_SECTION\";\r\nexport const CHANGE_SECTION_AMOUNT: string = \"CHANGE_SECTION_AMOUNT\";\r\nexport const CHANGE_SECTION_PENDING_EDIT: string = \"CHANGE_SECTION_PENDING_EDIT\";\r\nexport const CLEAR_SECTION_PENDING_EDIT: string = \"CLEAR_SECTION_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SECTION_ALL: string = \"REMOVE_SECTION_ALL\";\r\nexport const INITIAL_SECTION: string = \"INITIAL_SECTION\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(section: ISection) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        section\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSection(section: ISection): IInitialSectionActionType {\r\n    return { type: INITIAL_SECTION, section: section };\r\n}\r\n\r\nexport function removeSectionAll(): IRemoveSectionAllActionType {\r\n    return { type: REMOVE_SECTION_ALL };\r\n}\r\n\r\nexport function addSection(section: ISection): IAddSectionActionType {\r\n    return { type: ADD_SECTION, section: section };\r\n}\r\n\r\nexport function editSection(section: ISection): IEditSectionActionType {\r\n    return { type: EDIT_SECTION, section: section };\r\n}\r\n\r\nexport function removeSection(id: any): IRemoveSectionActionType {\r\n    return { type: REMOVE_SECTION, id: id };\r\n}\r\n\r\nexport function changeSelectedSection(section: ISection): IChangeSelectedSectionActionType {\r\n    return { type: CHANGE_SECTION_PENDING_EDIT, section: section };\r\n}\r\n\r\nexport function clearSelectedSection(): IClearSelectedSectionActionType {\r\n    return { type: CLEAR_SECTION_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateSection(value: SectionModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddSectionActionType { type: string, section: ISection };\r\ninterface IEditSectionActionType { type: string, section: ISection };\r\ninterface IRemoveSectionActionType { type: string, id: any };\r\ninterface IChangeSelectedSectionActionType { type: string, section: ISection };\r\ninterface IClearSelectedSectionActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  SectionModificationStatus};\r\ninterface IRemoveSectionAllActionType { type: string }\r\ninterface IInitialSectionActionType {type: string, section: ISection}","import { IScheduleTimeClass, ScheduleTimeClassModificationStatus } from \"../models/schedule_time_class.interface\";\r\nexport const ADD_TIME_SCHEDULE: string = \"ADD_TIME_SCHEDULE\";\r\nexport const EDIT_TIME_SCHEDULE: string = \"EDIT_TIME_SCHEDULE\";\r\nexport const REMOVE_TIME_SCHEDULE: string = \"REMOVE_TIME_SCHEDULE\";\r\nexport const CHANGE_TIME_SCHEDULE_AMOUNT: string = \"CHANGE_TIME_SCHEDULE_AMOUNT\";\r\nexport const CHANGE_TIME_SCHEDULE_PENDING_EDIT: string = \"CHANGE_TIME_SCHEDULE_PENDING_EDIT\";\r\nexport const CLEAR_TIME_SCHEDULE_PENDING_EDIT: string = \"CLEAR_TIME_SCHEDULE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_TIME_SCHEDULE_ALL: string = \"REMOVE_TIME_SCHEDULE_ALL\";\r\nexport const INITIAL_TIME_SCHEDULE: string = \"INITIAL_TIME_SCHEDULE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(schedule_time_class: IScheduleTimeClass) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        schedule_time_class\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialScheduleTimeClass(schedule_time_class: IScheduleTimeClass): IInitialScheduleTimeClassActionType {\r\n    return { type: INITIAL_TIME_SCHEDULE, schedule_time_class: schedule_time_class };\r\n}\r\n\r\nexport function removeScheduleTimeClassAll(): IRemoveScheduleTimeClassAllActionType {\r\n    return { type: REMOVE_TIME_SCHEDULE_ALL };\r\n}\r\n\r\nexport function addScheduleTimeClass(schedule_time_class: IScheduleTimeClass): IAddScheduleTimeClassActionType {\r\n    return { type: ADD_TIME_SCHEDULE, schedule_time_class: schedule_time_class };\r\n}\r\n\r\nexport function editScheduleTimeClass(schedule_time_class: IScheduleTimeClass): IEditScheduleTimeClassActionType {\r\n    return { type: EDIT_TIME_SCHEDULE, schedule_time_class: schedule_time_class };\r\n}\r\n\r\nexport function removeScheduleTimeClass(id: any): IRemoveScheduleTimeClassActionType {\r\n    return { type: REMOVE_TIME_SCHEDULE, id: id };\r\n}\r\n\r\nexport function changeSelectedScheduleTimeClass(schedule_time_class: IScheduleTimeClass): IChangeSelectedScheduleTimeClassActionType {\r\n    return { type: CHANGE_TIME_SCHEDULE_PENDING_EDIT, schedule_time_class: schedule_time_class };\r\n}\r\n\r\nexport function clearSelectedScheduleTimeClass(): IClearSelectedScheduleTimeClassActionType {\r\n    return { type: CLEAR_TIME_SCHEDULE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ScheduleTimeClassModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddScheduleTimeClassActionType { type: string, schedule_time_class: IScheduleTimeClass };\r\ninterface IEditScheduleTimeClassActionType { type: string, schedule_time_class: IScheduleTimeClass };\r\ninterface IRemoveScheduleTimeClassActionType { type: string, id: any };\r\ninterface IChangeSelectedScheduleTimeClassActionType { type: string, schedule_time_class: IScheduleTimeClass };\r\ninterface IClearSelectedScheduleTimeClassActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ScheduleTimeClassModificationStatus};\r\ninterface IRemoveScheduleTimeClassAllActionType { type: string }\r\ninterface IInitialScheduleTimeClassActionType {type: string, schedule_time_class: IScheduleTimeClass}","import { IAttendance, AttendanceModificationStatus } from \"../models/attendance.interface\";\r\nexport const ADD_ATTENDANCE: string = \"ADD_ATTENDANCE\";\r\nexport const EDIT_ATTENDANCE: string = \"EDIT_ATTENDANCE\";\r\nexport const REMOVE_ATTENDANCE: string = \"REMOVE_ATTENDANCE\";\r\nexport const CHANGE_ATTENDANCE_AMOUNT: string = \"CHANGE_ATTENDANCE_AMOUNT\";\r\nexport const CHANGE_ATTENDANCE_PENDING_EDIT: string = \"CHANGE_ATTENDANCE_PENDING_EDIT\";\r\nexport const CLEAR_ATTENDANCE_PENDING_EDIT: string = \"CLEAR_ATTENDANCE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_ATTENDANCE_ALL: string = \"REMOVE_ATTENDANCE_ALL\";\r\nexport const INITIAL_ATTENDANCE: string = \"INITIAL_ATTENDANCE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(attendance: IAttendance) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        attendance\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialAttendance(attendance: IAttendance): IInitialAttendanceActionType {\r\n    return { type: INITIAL_ATTENDANCE, attendance: attendance };\r\n}\r\n\r\nexport function removeAttendanceAll(): IRemoveAttendanceAllActionType {\r\n    return { type: REMOVE_ATTENDANCE_ALL };\r\n}\r\n\r\nexport function addAttendance(attendance: IAttendance): IAddAttendanceActionType {\r\n    return { type: ADD_ATTENDANCE, attendance: attendance };\r\n}\r\n\r\nexport function editAttendance(attendance: IAttendance): IEditAttendanceActionType {\r\n    return { type: EDIT_ATTENDANCE, attendance: attendance };\r\n}\r\n\r\nexport function removeAttendance(id: any): IRemoveAttendanceActionType {\r\n    return { type: REMOVE_ATTENDANCE, id: id };\r\n}\r\n\r\nexport function changeSelectedAttendance(attendance: IAttendance): IChangeSelectedAttendanceActionType {\r\n    return { type: CHANGE_ATTENDANCE_PENDING_EDIT, attendance: attendance };\r\n}\r\n\r\nexport function clearSelectedAttendance(): IClearSelectedAttendanceActionType {\r\n    return { type: CLEAR_ATTENDANCE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: AttendanceModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddAttendanceActionType { type: string, attendance: IAttendance };\r\ninterface IEditAttendanceActionType { type: string, attendance: IAttendance };\r\ninterface IRemoveAttendanceActionType { type: string, id: any };\r\ninterface IChangeSelectedAttendanceActionType { type: string, attendance: IAttendance };\r\ninterface IClearSelectedAttendanceActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  AttendanceModificationStatus};\r\ninterface IRemoveAttendanceAllActionType { type: string }\r\ninterface IInitialAttendanceActionType {type: string, attendance: IAttendance}","import { IChild, ChildModificationStatus } from \"../models/child.interface\";\r\nexport const ADD_CHILD: string = \"ADD_CHILD\";\r\nexport const EDIT_CHILD: string = \"EDIT_CHILD\";\r\nexport const REMOVE_CHILD: string = \"REMOVE_CHILD\";\r\nexport const CHANGE_CHILD_AMOUNT: string = \"CHANGE_CHILD_AMOUNT\";\r\nexport const CHANGE_CHILD_PENDING_EDIT: string = \"CHANGE_CHILD_PENDING_EDIT\";\r\nexport const CLEAR_CHILD_PENDING_EDIT: string = \"CLEAR_CHILD_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_CHILD_ALL: string = \"REMOVE_CHILD_ALL\";\r\nexport const INITIAL_CHILD: string = \"INITIAL_CHILD\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(child: IChild) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        child\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialChild(child: IChild): IInitialChildActionType {\r\n    return { type: INITIAL_CHILD, child: child };\r\n}\r\n\r\nexport function removeChildAll(): IRemoveChildAllActionType {\r\n    return { type: REMOVE_CHILD_ALL };\r\n}\r\n\r\nexport function addChild(child: IChild): IAddChildActionType {\r\n    return { type: ADD_CHILD, child: child };\r\n}\r\n\r\nexport function editChild(child: IChild): IEditChildActionType {\r\n    return { type: EDIT_CHILD, child: child };\r\n}\r\n\r\nexport function removeChild(id: any): IRemoveChildActionType {\r\n    return { type: REMOVE_CHILD, id: id };\r\n}\r\n\r\nexport function changeSelectedChild(child: IChild): IChangeSelectedChildActionType {\r\n    return { type: CHANGE_CHILD_PENDING_EDIT, child: child };\r\n}\r\n\r\nexport function clearSelectedChild(): IClearSelectedChildActionType {\r\n    return { type: CLEAR_CHILD_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ChildModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddChildActionType { type: string, child: IChild };\r\ninterface IEditChildActionType { type: string, child: IChild };\r\ninterface IRemoveChildActionType { type: string, id: any };\r\ninterface IChangeSelectedChildActionType { type: string, child: IChild };\r\ninterface IClearSelectedChildActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ChildModificationStatus};\r\ninterface IRemoveChildAllActionType { type: string }\r\ninterface IInitialChildActionType {type: string, child: IChild}","import { IInformationClass, InformationClassModificationStatus } from \"../models/information_class.interface\";\r\nexport const ADD_INFORMATION_CLASS: string = \"ADD_INFORMATION_CLASS\";\r\nexport const EDIT_INFORMATION_CLASS: string = \"EDIT_INFORMATION_CLASS\";\r\nexport const REMOVE_INFORMATION_CLASS: string = \"REMOVE_INFORMATION_CLASS\";\r\nexport const CHANGE_INFORMATION_CLASS_AMOUNT: string = \"CHANGE_INFORMATION_CLASS_AMOUNT\";\r\nexport const CHANGE_INFORMATION_CLASS_PENDING_EDIT: string = \"CHANGE_INFORMATION_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_INFORMATION_CLASS_PENDING_EDIT: string = \"CLEAR_INFORMATION_CLASS_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_INFORMATION_CLASS_ALL: string = \"REMOVE_INFORMATION_CLASS_ALL\";\r\nexport const INITIAL_INFORMATION_CLASS: string = \"INITIAL_INFORMATION_CLASS\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(information_class: IInformationClass) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        information_class\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialInformationClass(information_class: IInformationClass): IInitialInformationClassActionType {\r\n    return { type: INITIAL_INFORMATION_CLASS, information_class: information_class };\r\n}\r\n\r\nexport function removeInformationClassAll(): IRemoveInformationClassAllActionType {\r\n    return { type: REMOVE_INFORMATION_CLASS_ALL };\r\n}\r\n\r\nexport function addInformationClass(information_class: IInformationClass): IAddInformationClassActionType {\r\n    return { type: ADD_INFORMATION_CLASS, information_class: information_class };\r\n}\r\n\r\nexport function editInformationClass(information_class: IInformationClass): IEditInformationClassActionType {\r\n    return { type: EDIT_INFORMATION_CLASS, information_class: information_class };\r\n}\r\n\r\nexport function removeInformationClass(id: any): IRemoveInformationClassActionType {\r\n    return { type: REMOVE_INFORMATION_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedInformationClass(information_class: IInformationClass): IChangeSelectedInformationClassActionType {\r\n    return { type: CHANGE_INFORMATION_CLASS_PENDING_EDIT, information_class: information_class };\r\n}\r\n\r\nexport function clearSelectedInformationClass(): IClearSelectedInformationClassActionType {\r\n    return { type: CLEAR_INFORMATION_CLASS_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: InformationClassModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddInformationClassActionType { type: string, information_class: IInformationClass };\r\ninterface IEditInformationClassActionType { type: string, information_class: IInformationClass };\r\ninterface IRemoveInformationClassActionType { type: string, id: any };\r\ninterface IChangeSelectedInformationClassActionType { type: string, information_class: IInformationClass };\r\ninterface IClearSelectedInformationClassActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  InformationClassModificationStatus};\r\ninterface IRemoveInformationClassAllActionType { type: string }\r\ninterface IInitialInformationClassActionType {type: string, information_class: IInformationClass}","import { ITimeSchedule, TimeScheduleModificationStatus } from \"../models/time_schedule.interface\";\r\nexport const ADD_TIME_SCHEDULE: string = \"ADD_TIME_SCHEDULE\";\r\nexport const EDIT_TIME_SCHEDULE: string = \"EDIT_TIME_SCHEDULE\";\r\nexport const REMOVE_TIME_SCHEDULE: string = \"REMOVE_TIME_SCHEDULE\";\r\nexport const CHANGE_TIME_SCHEDULE_AMOUNT: string = \"CHANGE_TIME_SCHEDULE_AMOUNT\";\r\nexport const CHANGE_TIME_SCHEDULE_PENDING_EDIT: string = \"CHANGE_TIME_SCHEDULE_PENDING_EDIT\";\r\nexport const CLEAR_TIME_SCHEDULE_PENDING_EDIT: string = \"CLEAR_TIME_SCHEDULE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_TIME_SCHEDULE_ALL: string = \"REMOVE_TIME_SCHEDULE_ALL\";\r\nexport const INITIAL_TIME_SCHEDULE: string = \"INITIAL_TIME_SCHEDULE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(time_schedule: ITimeSchedule) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        time_schedule\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialTimeSchedule(time_schedule: ITimeSchedule): IInitialTimeScheduleActionType {\r\n    return { type: INITIAL_TIME_SCHEDULE, time_schedule: time_schedule };\r\n}\r\n\r\nexport function removeTimeScheduleAll(): IRemoveTimeScheduleAllActionType {\r\n    return { type: REMOVE_TIME_SCHEDULE_ALL };\r\n}\r\n\r\nexport function addTimeSchedule(time_schedule: ITimeSchedule): IAddTimeScheduleActionType {\r\n    return { type: ADD_TIME_SCHEDULE, time_schedule: time_schedule };\r\n}\r\n\r\nexport function editTimeSchedule(time_schedule: ITimeSchedule): IEditTimeScheduleActionType {\r\n    return { type: EDIT_TIME_SCHEDULE, time_schedule: time_schedule };\r\n}\r\n\r\nexport function removeTimeSchedule(id: any): IRemoveTimeScheduleActionType {\r\n    return { type: REMOVE_TIME_SCHEDULE, id: id };\r\n}\r\n\r\nexport function changeSelectedTimeSchedule(time_schedule: ITimeSchedule): IChangeSelectedTimeScheduleActionType {\r\n    return { type: CHANGE_TIME_SCHEDULE_PENDING_EDIT, time_schedule: time_schedule };\r\n}\r\n\r\nexport function clearSelectedTimeSchedule(): IClearSelectedTimeScheduleActionType {\r\n    return { type: CLEAR_TIME_SCHEDULE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: TimeScheduleModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddTimeScheduleActionType { type: string, time_schedule: ITimeSchedule };\r\ninterface IEditTimeScheduleActionType { type: string, time_schedule: ITimeSchedule };\r\ninterface IRemoveTimeScheduleActionType { type: string, id: any };\r\ninterface IChangeSelectedTimeScheduleActionType { type: string, time_schedule: ITimeSchedule };\r\ninterface IClearSelectedTimeScheduleActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  TimeScheduleModificationStatus};\r\ninterface IRemoveTimeScheduleAllActionType { type: string }\r\ninterface IInitialTimeScheduleActionType {type: string, time_schedule: ITimeSchedule}","import { IUserGradeContestSubmission, UserGradeContestSubmissionModificationStatus } from \"../models/user_grade_contest_submission.interface\";\r\nexport const ADD_USER_GRADE_CONTEST_SUBMISSION: string = \"ADD_USER_GRADE_CONTEST_SUBMISSION\";\r\nexport const EDIT_USER_GRADE_CONTEST_SUBMISSION: string = \"EDIT_USER_GRADE_CONTEST_SUBMISSION\";\r\nexport const REMOVE_USER_GRADE_CONTEST_SUBMISSION: string = \"REMOVE_USER_GRADE_CONTEST_SUBMISSION\";\r\nexport const CHANGE_USER_GRADE_CONTEST_SUBMISSION_AMOUNT: string = \"CHANGE_USER_GRADE_CONTEST_SUBMISSION_AMOUNT\";\r\nexport const CHANGE_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT: string = \"CHANGE_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT\";\r\nexport const CLEAR_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT: string = \"CLEAR_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_USER_GRADE_CONTEST_SUBMISSION_ALL: string = \"REMOVE_USER_GRADE_CONTEST_SUBMISSION_ALL\";\r\nexport const INITIAL_USER_GRADE_CONTEST_SUBMISSION: string = \"INITIAL_USER_GRADE_CONTEST_SUBMISSION\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(user_grade_contest_submission: IUserGradeContestSubmission) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        user_grade_contest_submission\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialUserGradeContestSubmission(user_grade_contest_submission: IUserGradeContestSubmission): IInitialUserGradeContestSubmissionActionType {\r\n    return { type: INITIAL_USER_GRADE_CONTEST_SUBMISSION, user_grade_contest_submission: user_grade_contest_submission };\r\n}\r\n\r\nexport function removeUserGradeContestSubmissionAll(): IRemoveUserGradeContestSubmissionAllActionType {\r\n    return { type: REMOVE_USER_GRADE_CONTEST_SUBMISSION_ALL };\r\n}\r\n\r\nexport function addUserGradeContestSubmission(user_grade_contest_submission: IUserGradeContestSubmission): IAddUserGradeContestSubmissionActionType {\r\n    return { type: ADD_USER_GRADE_CONTEST_SUBMISSION, user_grade_contest_submission: user_grade_contest_submission };\r\n}\r\n\r\nexport function editUserGradeContestSubmission(user_grade_contest_submission: IUserGradeContestSubmission): IEditUserGradeContestSubmissionActionType {\r\n    return { type: EDIT_USER_GRADE_CONTEST_SUBMISSION, user_grade_contest_submission: user_grade_contest_submission };\r\n}\r\n\r\nexport function removeUserGradeContestSubmission(id: any): IRemoveUserGradeContestSubmissionActionType {\r\n    return { type: REMOVE_USER_GRADE_CONTEST_SUBMISSION, id: id };\r\n}\r\n\r\nexport function changeSelectedUserGradeContestSubmission(user_grade_contest_submission: IUserGradeContestSubmission): IChangeSelectedUserGradeContestSubmissionActionType {\r\n    return { type: CHANGE_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT, user_grade_contest_submission: user_grade_contest_submission };\r\n}\r\n\r\nexport function clearSelectedUserGradeContestSubmission(): IClearSelectedUserGradeContestSubmissionActionType {\r\n    return { type: CLEAR_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateUserGradeContestSubmission(value: UserGradeContestSubmissionModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddUserGradeContestSubmissionActionType { type: string, user_grade_contest_submission: IUserGradeContestSubmission };\r\ninterface IEditUserGradeContestSubmissionActionType { type: string, user_grade_contest_submission: IUserGradeContestSubmission };\r\ninterface IRemoveUserGradeContestSubmissionActionType { type: string, id: any };\r\ninterface IChangeSelectedUserGradeContestSubmissionActionType { type: string, user_grade_contest_submission: IUserGradeContestSubmission };\r\ninterface IClearSelectedUserGradeContestSubmissionActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  UserGradeContestSubmissionModificationStatus};\r\ninterface IRemoveUserGradeContestSubmissionAllActionType { type: string }\r\ninterface IInitialUserGradeContestSubmissionActionType {type: string, user_grade_contest_submission: IUserGradeContestSubmission}","import { IChildsClass, ChildsClassModificationStatus } from \"../models/childs_class.interface\";\r\nexport const ADD_CHILDS_CLASS: string = \"ADD_CHILDS_CLASS\";\r\nexport const EDIT_CHILDS_CLASS: string = \"EDIT_CHILDS_CLASS\";\r\nexport const REMOVE_CHILDS_CLASS: string = \"REMOVE_CHILDS_CLASS\";\r\nexport const CHANGE_CHILDS_CLASS_AMOUNT: string = \"CHANGE_CHILDS_CLASS_AMOUNT\";\r\nexport const CHANGE_CHILDS_CLASS_PENDING_EDIT: string = \"CHANGE_CHILDS_CLASS_PENDING_EDIT\";\r\nexport const CLEAR_CHILDS_CLASS_PENDING_EDIT: string = \"CLEAR_CHILDS_CLASS_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_CHILDS_CLASS_ALL: string = \"REMOVE_CHILDS_CLASS_ALL\";\r\nexport const INITIAL_CHILDS_CLASS: string = \"INITIAL_CHILDS_CLASS\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(childs_class: IChildsClass) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        childs_class\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialChildsClass(childs_class: IChildsClass): IInitialChildsClassActionType {\r\n    return { type: INITIAL_CHILDS_CLASS, childs_class: childs_class };\r\n}\r\n\r\nexport function removeChildsClassAll(): IRemoveChildsClassAllActionType {\r\n    return { type: REMOVE_CHILDS_CLASS_ALL };\r\n}\r\n\r\nexport function addChildsClass(childs_class: IChildsClass): IAddChildsClassActionType {\r\n    return { type: ADD_CHILDS_CLASS, childs_class: childs_class };\r\n}\r\n\r\nexport function editChildsClass(childs_class: IChildsClass): IEditChildsClassActionType {\r\n    return { type: EDIT_CHILDS_CLASS, childs_class: childs_class };\r\n}\r\n\r\nexport function removeChildsClass(id: any): IRemoveChildsClassActionType {\r\n    return { type: REMOVE_CHILDS_CLASS, id: id };\r\n}\r\n\r\nexport function changeSelectedChildsClass(childs_class: IChildsClass): IChangeSelectedChildsClassActionType {\r\n    return { type: CHANGE_CHILDS_CLASS_PENDING_EDIT, childs_class: childs_class };\r\n}\r\n\r\nexport function clearSelectedChildsClass(): IClearSelectedChildsClassActionType {\r\n    return { type: CLEAR_CHILDS_CLASS_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ChildsClassModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddChildsClassActionType { type: string, childs_class: IChildsClass };\r\ninterface IEditChildsClassActionType { type: string, childs_class: IChildsClass };\r\ninterface IRemoveChildsClassActionType { type: string, id: any };\r\ninterface IChangeSelectedChildsClassActionType { type: string, childs_class: IChildsClass };\r\ninterface IClearSelectedChildsClassActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ChildsClassModificationStatus};\r\ninterface IRemoveChildsClassAllActionType { type: string }\r\ninterface IInitialChildsClassActionType {type: string, childs_class: IChildsClass}","import { ITutorialTemplate, TutorialTemplateModificationStatus } from \"../models/tutorial_template.interface\";\r\nexport const ADD_TUTORIAL_TEMPLATE: string = \"ADD_TUTORIAL_TEMPLATE\";\r\nexport const EDIT_TUTORIAL_TEMPLATE: string = \"EDIT_TUTORIAL_TEMPLATE\";\r\nexport const REMOVE_TUTORIAL_TEMPLATE: string = \"REMOVE_TUTORIAL_TEMPLATE\";\r\nexport const CHANGE_TUTORIAL_TEMPLATE_AMOUNT: string = \"CHANGE_TUTORIAL_TEMPLATE_AMOUNT\";\r\nexport const CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT: string = \"CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT\";\r\nexport const CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT: string = \"CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_TUTORIAL_TEMPLATE_ALL: string = \"REMOVE_TUTORIAL_TEMPLATE_ALL\";\r\nexport const INITIAL_TUTORIAL_TEMPLATE: string = \"INITIAL_TUTORIAL_TEMPLATE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(tutorial_template: ITutorialTemplate) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        tutorial_template\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialTutorialTemplate(tutorial_template: ITutorialTemplate): IInitialTutorialTemplateActionType {\r\n    return { type: INITIAL_TUTORIAL_TEMPLATE, tutorial_template: tutorial_template };\r\n}\r\n\r\nexport function removeTutorialTemplateAll(): IRemoveTutorialTemplateAllActionType {\r\n    return { type: REMOVE_TUTORIAL_TEMPLATE_ALL };\r\n}\r\n\r\nexport function addTutorialTemplate(tutorial_template: ITutorialTemplate): IAddTutorialTemplateActionType {\r\n    return { type: ADD_TUTORIAL_TEMPLATE, tutorial_template: tutorial_template };\r\n}\r\n\r\nexport function editTutorialTemplate(tutorial_template: ITutorialTemplate): IEditTutorialTemplateActionType {\r\n    return { type: EDIT_TUTORIAL_TEMPLATE, tutorial_template: tutorial_template };\r\n}\r\n\r\nexport function removeTutorialTemplate(id: any): IRemoveTutorialTemplateActionType {\r\n    return { type: REMOVE_TUTORIAL_TEMPLATE, id: id };\r\n}\r\n\r\nexport function changeSelectedTutorialTemplate(tutorial_template: ITutorialTemplate): IChangeSelectedTutorialTemplateActionType {\r\n    return { type: CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT, tutorial_template: tutorial_template };\r\n}\r\n\r\nexport function clearSelectedTutorialTemplate(): IClearSelectedTutorialTemplateActionType {\r\n    return { type: CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateTutorialTemplate(value: TutorialTemplateModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddTutorialTemplateActionType { type: string, tutorial_template: ITutorialTemplate };\r\ninterface IEditTutorialTemplateActionType { type: string, tutorial_template: ITutorialTemplate };\r\ninterface IRemoveTutorialTemplateActionType { type: string, id: any };\r\ninterface IChangeSelectedTutorialTemplateActionType { type: string, tutorial_template: ITutorialTemplate };\r\ninterface IClearSelectedTutorialTemplateActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  TutorialTemplateModificationStatus};\r\ninterface IRemoveTutorialTemplateAllActionType { type: string }\r\ninterface IInitialTutorialTemplateActionType {type: string, tutorial_template: ITutorialTemplate}","import { IUserGradeContest, UserGradeContestModificationStatus } from \"../models/user_grade_contest.interface\";\r\nexport const ADD_TUTORIAL_TEMPLATE: string = \"ADD_TUTORIAL_TEMPLATE\";\r\nexport const EDIT_TUTORIAL_TEMPLATE: string = \"EDIT_TUTORIAL_TEMPLATE\";\r\nexport const REMOVE_TUTORIAL_TEMPLATE: string = \"REMOVE_TUTORIAL_TEMPLATE\";\r\nexport const CHANGE_TUTORIAL_TEMPLATE_AMOUNT: string = \"CHANGE_TUTORIAL_TEMPLATE_AMOUNT\";\r\nexport const CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT: string = \"CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT\";\r\nexport const CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT: string = \"CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_TUTORIAL_TEMPLATE_ALL: string = \"REMOVE_TUTORIAL_TEMPLATE_ALL\";\r\nexport const INITIAL_TUTORIAL_TEMPLATE: string = \"INITIAL_TUTORIAL_TEMPLATE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(user_grade_contest: IUserGradeContest) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        user_grade_contest\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialUserGradeContest(user_grade_contest: IUserGradeContest): IInitialUserGradeContestActionType {\r\n    return { type: INITIAL_TUTORIAL_TEMPLATE, user_grade_contest: user_grade_contest };\r\n}\r\n\r\nexport function removeUserGradeContestAll(): IRemoveUserGradeContestAllActionType {\r\n    return { type: REMOVE_TUTORIAL_TEMPLATE_ALL };\r\n}\r\n\r\nexport function addUserGradeContest(user_grade_contest: IUserGradeContest): IAddUserGradeContestActionType {\r\n    return { type: ADD_TUTORIAL_TEMPLATE, user_grade_contest: user_grade_contest };\r\n}\r\n\r\nexport function editUserGradeContest(user_grade_contest: IUserGradeContest): IEditUserGradeContestActionType {\r\n    return { type: EDIT_TUTORIAL_TEMPLATE, user_grade_contest: user_grade_contest };\r\n}\r\n\r\nexport function removeUserGradeContest(id: any): IRemoveUserGradeContestActionType {\r\n    return { type: REMOVE_TUTORIAL_TEMPLATE, id: id };\r\n}\r\n\r\nexport function changeSelectedUserGradeContest(user_grade_contest: IUserGradeContest): IChangeSelectedUserGradeContestActionType {\r\n    return { type: CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT, user_grade_contest: user_grade_contest };\r\n}\r\n\r\nexport function clearSelectedUserGradeContest(): IClearSelectedUserGradeContestActionType {\r\n    return { type: CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateUserGradeContest(value: UserGradeContestModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddUserGradeContestActionType { type: string, user_grade_contest: IUserGradeContest };\r\ninterface IEditUserGradeContestActionType { type: string, user_grade_contest: IUserGradeContest };\r\ninterface IRemoveUserGradeContestActionType { type: string, id: any };\r\ninterface IChangeSelectedUserGradeContestActionType { type: string, user_grade_contest: IUserGradeContest };\r\ninterface IClearSelectedUserGradeContestActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  UserGradeContestModificationStatus};\r\ninterface IRemoveUserGradeContestAllActionType { type: string }\r\ninterface IInitialUserGradeContestActionType {type: string, user_grade_contest: IUserGradeContest}","import { ITimeScheduleTeacher, TimeScheduleTeacherModificationStatus } from \"../models/time_schedule_teacher.interface\";\r\nexport const ADD_TIME_SCHEDULE_TEACHER: string = \"ADD_TIME_SCHEDULE_TEACHER\";\r\nexport const EDIT_TIME_SCHEDULE_TEACHER: string = \"EDIT_TIME_SCHEDULE_TEACHER\";\r\nexport const REMOVE_TIME_SCHEDULE_TEACHER: string = \"REMOVE_TIME_SCHEDULE_TEACHER\";\r\nexport const CHANGE_TIME_SCHEDULE_TEACHER_AMOUNT: string = \"CHANGE_TIME_SCHEDULE_TEACHER_AMOUNT\";\r\nexport const CHANGE_TIME_SCHEDULE_TEACHER_PENDING_EDIT: string = \"CHANGE_TIME_SCHEDULE_TEACHER_PENDING_EDIT\";\r\nexport const CLEAR_TIME_SCHEDULE_TEACHER_PENDING_EDIT: string = \"CLEAR_TIME_SCHEDULE_TEACHER_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_TIME_SCHEDULE_TEACHER_ALL: string = \"REMOVE_TIME_SCHEDULE_TEACHER_ALL\";\r\nexport const INITIAL_TIME_SCHEDULE_TEACHER: string = \"INITIAL_TIME_SCHEDULE_TEACHER\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(time_schedule_teacher: ITimeScheduleTeacher) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        time_schedule_teacher\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialTimeScheduleTeacher(time_schedule_teacher: ITimeScheduleTeacher): IInitialTimeScheduleActionType {\r\n    return { type: INITIAL_TIME_SCHEDULE_TEACHER, time_schedule_teacher: time_schedule_teacher };\r\n}\r\n\r\nexport function removeTimeScheduleTeacherAll(): IRemoveTimeScheduleAllActionType {\r\n    return { type: REMOVE_TIME_SCHEDULE_TEACHER_ALL };\r\n}\r\n\r\nexport function addTimeScheduleTeacher(time_schedule_teacher: ITimeScheduleTeacher): IAddTimeScheduleActionType {\r\n    return { type: ADD_TIME_SCHEDULE_TEACHER, time_schedule_teacher: time_schedule_teacher };\r\n}\r\n\r\nexport function editTimeScheduleTeacher(time_schedule_teacher: ITimeScheduleTeacher): IEditTimeScheduleActionType {\r\n    return { type: EDIT_TIME_SCHEDULE_TEACHER, time_schedule_teacher: time_schedule_teacher };\r\n}\r\n\r\nexport function removeTimeScheduleTeacher(id: any): IRemoveTimeScheduleActionType {\r\n    return { type: REMOVE_TIME_SCHEDULE_TEACHER, id: id };\r\n}\r\n\r\nexport function changeSelectedTimeScheduleTeacher(time_schedule_teacher: ITimeScheduleTeacher): IChangeSelectedTimeScheduleActionType {\r\n    return { type: CHANGE_TIME_SCHEDULE_TEACHER_PENDING_EDIT, time_schedule_teacher: time_schedule_teacher };\r\n}\r\n\r\nexport function clearSelectedTimeScheduleTeacher(): IClearSelectedTimeScheduleActionType {\r\n    return { type: CLEAR_TIME_SCHEDULE_TEACHER_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: TimeScheduleTeacherModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddTimeScheduleActionType { type: string, time_schedule_teacher: ITimeScheduleTeacher };\r\ninterface IEditTimeScheduleActionType { type: string, time_schedule_teacher: ITimeScheduleTeacher };\r\ninterface IRemoveTimeScheduleActionType { type: string, id: any };\r\ninterface IChangeSelectedTimeScheduleActionType { type: string, time_schedule_teacher: ITimeScheduleTeacher };\r\ninterface IClearSelectedTimeScheduleActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  TimeScheduleTeacherModificationStatus};\r\ninterface IRemoveTimeScheduleAllActionType { type: string }\r\ninterface IInitialTimeScheduleActionType {type: string, time_schedule_teacher: ITimeScheduleTeacher}","import { IReportUser, ReportUserModificationStatus } from \"../models/report_user.interface\";\r\nexport const ADD_REPORT_USER: string = \"ADD_REPORT_USER\";\r\nexport const EDIT_REPORT_USER: string = \"EDIT_REPORT_USER\";\r\nexport const REMOVE_REPORT_USER: string = \"REMOVE_REPORT_USER\";\r\nexport const CHANGE_REPORT_USER_AMOUNT: string = \"CHANGE_REPORT_USER_AMOUNT\";\r\nexport const CHANGE_REPORT_USER_PENDING_EDIT: string = \"CHANGE_REPORT_USER_PENDING_EDIT\";\r\nexport const CLEAR_REPORT_USER_PENDING_EDIT: string = \"CLEAR_REPORT_USER_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_REPORT_USER_ALL: string = \"REMOVE_REPORT_USER_ALL\";\r\nexport const INITIAL_REPORT_USER: string = \"INITIAL_REPORT_USER\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(report_user: IReportUser) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        report_user\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialReportUser(report_user: IReportUser): IInitialReportUserActionType {\r\n    return { type: INITIAL_REPORT_USER, report_user: report_user };\r\n}\r\n\r\nexport function removeReportUserAll(): IRemoveReportUserAllActionType {\r\n    return { type: REMOVE_REPORT_USER_ALL };\r\n}\r\n\r\nexport function addReportUser(report_user: IReportUser): IAddReportUserActionType {\r\n    return { type: ADD_REPORT_USER, report_user: report_user };\r\n}\r\n\r\nexport function editReportUser(report_user: IReportUser): IEditReportUserActionType {\r\n    return { type: EDIT_REPORT_USER, report_user: report_user };\r\n}\r\n\r\nexport function removeReportUser(id: any): IRemoveReportUserActionType {\r\n    return { type: REMOVE_REPORT_USER, id: id };\r\n}\r\n\r\nexport function changeSelectedReportUser(report_user: IReportUser): IChangeSelectedReportUserActionType {\r\n    return { type: CHANGE_REPORT_USER_PENDING_EDIT, report_user: report_user };\r\n}\r\n\r\nexport function clearSelectedReportUser(): IClearSelectedReportUserActionType {\r\n    return { type: CLEAR_REPORT_USER_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ReportUserModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddReportUserActionType { type: string, report_user: IReportUser };\r\ninterface IEditReportUserActionType { type: string, report_user: IReportUser };\r\ninterface IRemoveReportUserActionType { type: string, id: any };\r\ninterface IChangeSelectedReportUserActionType { type: string, report_user: IReportUser };\r\ninterface IClearSelectedReportUserActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ReportUserModificationStatus};\r\ninterface IRemoveReportUserAllActionType { type: string }\r\ninterface IInitialReportUserActionType {type: string, report_user: IReportUser}","import { ICourseReport, CourseReportModificationStatus } from \"../models/course_report.interface\";\r\nexport const ADD_COURSE_REPORT: string = \"ADD_COURSE_REPORT\";\r\nexport const EDIT_COURSE_REPORT: string = \"EDIT_COURSE_REPORT\";\r\nexport const REMOVE_COURSE_REPORT: string = \"REMOVE_COURSE_REPORT\";\r\nexport const CHANGE_COURSE_REPORT_AMOUNT: string = \"CHANGE_COURSE_REPORT_AMOUNT\";\r\nexport const CHANGE_COURSE_REPORT_PENDING_EDIT: string = \"CHANGE_COURSE_REPORT_PENDING_EDIT\";\r\nexport const CLEAR_COURSE_REPORT_PENDING_EDIT: string = \"CLEAR_COURSE_REPORT_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_COURSE_REPORT_ALL: string = \"REMOVE_COURSE_REPORT_ALL\";\r\nexport const INITIAL_COURSE_REPORT: string = \"INITIAL_COURSE_REPORT\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course_report: ICourseReport) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course_report\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCourseReport(course_report: ICourseReport): IInitialCourseReportActionType {\r\n    return { type: INITIAL_COURSE_REPORT, course_report: course_report };\r\n}\r\n\r\nexport function removeCourseReportAll(): IRemoveCourseReportAllActionType {\r\n    return { type: REMOVE_COURSE_REPORT_ALL };\r\n}\r\n\r\nexport function addCourseReport(course_report: ICourseReport): IAddCourseReportActionType {\r\n    return { type: ADD_COURSE_REPORT, course_report: course_report };\r\n}\r\n\r\nexport function editCourseReport(course_report: ICourseReport): IEditCourseReportActionType {\r\n    return { type: EDIT_COURSE_REPORT, course_report: course_report };\r\n}\r\n\r\nexport function removeCourseReport(id: any): IRemoveCourseReportActionType {\r\n    return { type: REMOVE_COURSE_REPORT, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseReport(course_report: ICourseReport): IChangeSelectedCourseReportActionType {\r\n    return { type: CHANGE_COURSE_REPORT_PENDING_EDIT, course_report: course_report };\r\n}\r\n\r\nexport function clearSelectedCourseReport(): IClearSelectedCourseReportActionType {\r\n    return { type: CLEAR_COURSE_REPORT_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseReportModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddCourseReportActionType { type: string, course_report: ICourseReport };\r\ninterface IEditCourseReportActionType { type: string, course_report: ICourseReport };\r\ninterface IRemoveCourseReportActionType { type: string, id: any };\r\ninterface IChangeSelectedCourseReportActionType { type: string, course_report: ICourseReport };\r\ninterface IClearSelectedCourseReportActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  CourseReportModificationStatus};\r\ninterface IRemoveCourseReportAllActionType { type: string }\r\ninterface IInitialCourseReportActionType {type: string, course_report: ICourseReport}","import { INotifyDb, NotifyDbModificationStatus } from \"../models/notify_db.interface\";\r\nexport const ADD_NOTIFY_DB: string = \"ADD_NOTIFY_DB\";\r\nexport const EDIT_NOTIFY_DB: string = \"EDIT_NOTIFY_DB\";\r\nexport const REMOVE_NOTIFY_DB: string = \"REMOVE_NOTIFY_DB\";\r\nexport const CHANGE_NOTIFY_DB_AMOUNT: string = \"CHANGE_NOTIFY_DB_AMOUNT\";\r\nexport const CHANGE_NOTIFY_DB_PENDING_EDIT: string = \"CHANGE_NOTIFY_DB_PENDING_EDIT\";\r\nexport const CLEAR_NOTIFY_DB_PENDING_EDIT: string = \"CLEAR_NOTIFY_DB_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_NOTIFY_DB_ALL: string = \"REMOVE_NOTIFY_DB_ALL\";\r\nexport const INITIAL_NOTIFY_DB: string = \"INITIAL_NOTIFY_DB\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(notify_db: INotifyDb) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        notify_db\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialNotifyDb(notify_db: INotifyDb): IInitialNotifyDbActionType {\r\n    return { type: INITIAL_NOTIFY_DB, notify_db: notify_db };\r\n}\r\n\r\nexport function removeNotifyDbAll(): IRemoveNotifyDbAllActionType {\r\n    return { type: REMOVE_NOTIFY_DB_ALL };\r\n}\r\n\r\nexport function addNotifyDb(notify_db: INotifyDb): IAddNotifyDbActionType {\r\n    return { type: ADD_NOTIFY_DB, notify_db: notify_db };\r\n}\r\n\r\nexport function editNotifyDb(notify_db: INotifyDb): IEditNotifyDbActionType {\r\n    return { type: EDIT_NOTIFY_DB, notify_db: notify_db };\r\n}\r\n\r\nexport function removeNotifyDb(id: any): IRemoveNotifyDbActionType {\r\n    return { type: REMOVE_NOTIFY_DB, id: id };\r\n}\r\n\r\nexport function changeSelectedNotifyDb(notify_db: INotifyDb): IChangeSelectedNotifyDbActionType {\r\n    return { type: CHANGE_NOTIFY_DB_PENDING_EDIT, notify_db: notify_db };\r\n}\r\n\r\nexport function clearSelectedNotifyDb(): IClearSelectedNotifyDbActionType {\r\n    return { type: CLEAR_NOTIFY_DB_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: NotifyDbModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddNotifyDbActionType { type: string, notify_db: INotifyDb };\r\ninterface IEditNotifyDbActionType { type: string, notify_db: INotifyDb };\r\ninterface IRemoveNotifyDbActionType { type: string, id: any };\r\ninterface IChangeSelectedNotifyDbActionType { type: string, notify_db: INotifyDb };\r\ninterface IClearSelectedNotifyDbActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  NotifyDbModificationStatus};\r\ninterface IRemoveNotifyDbAllActionType { type: string }\r\ninterface IInitialNotifyDbActionType {type: string, notify_db: INotifyDb}","import { INotify, NotifyModificationStatus } from \"../models/notify.interface\";\r\nexport const ADD_NOTIFY: string = \"ADD_NOTIFY\";\r\nexport const EDIT_NOTIFY: string = \"EDIT_NOTIFY\";\r\nexport const REMOVE_NOTIFY: string = \"REMOVE_NOTIFY\";\r\nexport const CHANGE_NOTIFY_AMOUNT: string = \"CHANGE_NOTIFY_AMOUNT\";\r\nexport const CHANGE_NOTIFY_PENDING_EDIT: string = \"CHANGE_NOTIFY_PENDING_EDIT\";\r\nexport const CLEAR_NOTIFY_PENDING_EDIT: string = \"CLEAR_NOTIFY_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_NOTIFY_ALL: string = \"REMOVE_NOTIFY_ALL\";\r\nexport const INITIAL_NOTIFY: string = \"INITIAL_NOTIFY\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(notify: INotify) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        notify\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialNotify(notify: INotify): IInitialNotifyActionType {\r\n    return { type: INITIAL_NOTIFY, notify: notify };\r\n}\r\n\r\nexport function removeNotifyAll(): IRemoveNotifyAllActionType {\r\n    return { type: REMOVE_NOTIFY_ALL };\r\n}\r\n\r\nexport function addNotify(notify: INotify): IAddNotifyActionType {\r\n    return { type: ADD_NOTIFY, notify: notify };\r\n}\r\n\r\nexport function editNotify(notify: INotify): IEditNotifyActionType {\r\n    return { type: EDIT_NOTIFY, notify: notify };\r\n}\r\n\r\nexport function removeNotify(id: any): IRemoveNotifyActionType {\r\n    return { type: REMOVE_NOTIFY, id: id };\r\n}\r\n\r\nexport function changeSelectedNotify(notify: INotify): IChangeSelectedNotifyActionType {\r\n    return { type: CHANGE_NOTIFY_PENDING_EDIT, notify: notify };\r\n}\r\n\r\nexport function clearSelectedNotify(): IClearSelectedNotifyActionType {\r\n    return { type: CLEAR_NOTIFY_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateNotify(value: NotifyModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddNotifyActionType { type: string, notify: INotify };\r\ninterface IEditNotifyActionType { type: string, notify: INotify };\r\ninterface IRemoveNotifyActionType { type: string, id: any };\r\ninterface IChangeSelectedNotifyActionType { type: string, notify: INotify };\r\ninterface IClearSelectedNotifyActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  NotifyModificationStatus};\r\ninterface IRemoveNotifyAllActionType { type: string }\r\ninterface IInitialNotifyActionType {type: string, notify: INotify}","import { ICart, CartModificationStatus } from \"../models/cart.interface\";\r\nexport const ADD_CART: string = \"ADD_CART\";\r\nexport const EDIT_CART: string = \"EDIT_CART\";\r\nexport const REMOVE_CART: string = \"REMOVE_CART\";\r\nexport const INCREASE_QUANTITY: string = \"INCREASE_QUANTITY\";\r\nexport const DECREASE_QUANTITY: string = \"DECREASE_QUANTITY\";\r\nexport const CHANGE_CART_AMOUNT: string = \"CHANGE_CART_AMOUNT\";\r\nexport const CHANGE_CART_PENDING_EDIT: string = \"CHANGE_CART_PENDING_EDIT\";\r\nexport const CLEAR_CART_PENDING_EDIT: string = \"CLEAR_CART_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_CART_ALL: string = \"REMOVE_CART_ALL\";\r\nexport const INITIAL_CART: string = \"INITIAL_CART\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(cart: ICart) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        cart\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCart(cart: ICart): IInitialCartActionType {\r\n    return { type: INITIAL_CART, cart: cart };\r\n}\r\n\r\nexport function removeCartAll(): IRemoveCartAllActionType {\r\n    return { type: REMOVE_CART_ALL };\r\n}\r\n\r\nexport function addCart(cart: ICart): IAddCartActionType {\r\n    return { type: ADD_CART, cart: cart };\r\n}\r\n\r\nexport function editCart(cart: ICart): IEditCartActionType {\r\n    return { type: EDIT_CART, cart: cart };\r\n}\r\n\r\nexport function removeCart(id: any): IRemoveCartActionType {\r\n    return { type: REMOVE_CART, id: id };\r\n}\r\n\r\nexport function increaseQuantiry(id: any): IIncreaseQuantityCartActionType {\r\n    return { type: INCREASE_QUANTITY, id: id };\r\n}\r\n\r\nexport function decreaseQuantiry(id: any): IDecreaseQuantityCartActionType {\r\n    return { type: DECREASE_QUANTITY, id: id };\r\n}\r\n\r\nexport function changeSelectedCart(cart: ICart): IChangeSelectedCartActionType {\r\n    return { type: CHANGE_CART_PENDING_EDIT, cart: cart };\r\n}\r\n\r\nexport function clearSelectedCart(): IClearSelectedCartActionType {\r\n    return { type: CLEAR_CART_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CartModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddCartActionType { type: string, cart: ICart };\r\ninterface IEditCartActionType { type: string, cart: ICart };\r\ninterface IRemoveCartActionType { type: string, id: any };\r\ninterface IChangeSelectedCartActionType { type: string, cart: ICart };\r\ninterface IIncreaseQuantityCartActionType {type: string, id: any};\r\ninterface IDecreaseQuantityCartActionType {type: string, id: any};\r\ninterface IClearSelectedCartActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  CartModificationStatus};\r\ninterface IRemoveCartAllActionType { type: string }\r\ninterface IInitialCartActionType {type: string, cart: ICart}","import { IProfile, ProfileModificationStatus } from \"../models/profile.interface\";\r\nexport const ADD_PROFILE: string = \"ADD_PROFILE\";\r\nexport const EDIT_PROFILE: string = \"EDIT_PROFILE\";\r\nexport const REMOVE_PROFILE: string = \"REMOVE_PROFILE\";\r\nexport const CHANGE_PROFILE_AMOUNT: string = \"CHANGE_PROFILE_AMOUNT\";\r\nexport const CHANGE_PROFILE_PENDING_EDIT: string = \"CHANGE_PROFILE_PENDING_EDIT\";\r\nexport const CLEAR_PROFILE_PENDING_EDIT: string = \"CLEAR_PROFILE_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_PROFILE_ALL: string = \"REMOVE_PROFILE_ALL\";\r\nexport const INITIAL_PROFILE: string = \"INITIAL_PROFILE\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(profile: IProfile) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        profile\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialProfile(profile: IProfile): IInitialProfileActionType {\r\n    return { type: INITIAL_PROFILE, profile: profile };\r\n}\r\n\r\nexport function removeProfileAll(): IRemoveProfileAllActionType {\r\n    return { type: REMOVE_PROFILE_ALL };\r\n}\r\n\r\nexport function addProfile(profile: IProfile): IAddProfileActionType {\r\n    return { type: ADD_PROFILE, profile: profile };\r\n}\r\n\r\nexport function editProfile(profile: IProfile): IEditProfileActionType {\r\n    return { type: EDIT_PROFILE, profile: profile };\r\n}\r\n\r\nexport function removeProfile(id: any): IRemoveProfileActionType {\r\n    return { type: REMOVE_PROFILE, id: id };\r\n}\r\n\r\nexport function changeSelectedProfile(profile: IProfile): IChangeSelectedProfileActionType {\r\n    return { type: CHANGE_PROFILE_PENDING_EDIT, profile: profile };\r\n}\r\n\r\nexport function clearSelectedProfile(): IClearSelectedProfileActionType {\r\n    return { type: CLEAR_PROFILE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateProfile(value: ProfileModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddProfileActionType { type: string, profile: IProfile };\r\ninterface IEditProfileActionType { type: string, profile: IProfile };\r\ninterface IRemoveProfileActionType { type: string, id: any };\r\ninterface IChangeSelectedProfileActionType { type: string, profile: IProfile };\r\ninterface IClearSelectedProfileActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ProfileModificationStatus};\r\ninterface IRemoveProfileAllActionType { type: string }\r\ninterface IInitialProfileActionType {type: string, profile: IProfile}","import { ICourseNew, CourseNewModificationStatus } from \"../models/course_new.interface\";\r\nexport const ADD_COURSE_NEW: string = \"ADD_COURSE_NEW\";\r\nexport const EDIT_COURSE_NEW: string = \"EDIT_COURSE_NEW\";\r\nexport const REMOVE_COURSE_NEW: string = \"REMOVE_COURSE_NEW\";\r\nexport const CHANGE_COURSE_NEW_AMOUNT: string = \"CHANGE_COURSE_NEW_AMOUNT\";\r\nexport const CHANGE_COURSE_NEW_PENDING_EDIT: string = \"CHANGE_COURSE_NEW_PENDING_EDIT\";\r\nexport const CLEAR_COURSE_NEW_PENDING_EDIT: string = \"CLEAR_COURSE_NEW_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_COURSE_NEW_ALL: string = \"REMOVE_COURSE_NEW_ALL\";\r\nexport const INITIAL_COURSE_NEW: string = \"INITIAL_COURSE_NEW\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course_new: ICourseNew) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course_new\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCourseNew(course_new: ICourseNew): IInitialCourseNewActionType {\r\n    return { type: INITIAL_COURSE_NEW, course_new: course_new };\r\n}\r\n\r\nexport function removeCourseNewAll(): IRemoveCourseNewAllActionType {\r\n    return { type: REMOVE_COURSE_NEW_ALL };\r\n}\r\n\r\nexport function addCourseNew(course_new: ICourseNew): IAddCourseNewActionType {\r\n    return { type: ADD_COURSE_NEW, course_new: course_new };\r\n}\r\n\r\nexport function editCourseNew(course_new: ICourseNew): IEditCourseNewActionType {\r\n    return { type: EDIT_COURSE_NEW, course_new: course_new };\r\n}\r\n\r\nexport function removeCourseNew(id: any): IRemoveCourseNewActionType {\r\n    return { type: REMOVE_COURSE_NEW, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseNew(course_new: ICourseNew): IChangeSelectedCourseNewActionType {\r\n    return { type: CHANGE_COURSE_NEW_PENDING_EDIT, course_new: course_new };\r\n}\r\n\r\nexport function clearSelectedCourseNew(): IClearSelectedCourseNewActionType {\r\n    return { type: CLEAR_COURSE_NEW_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseNewModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddCourseNewActionType { type: string, course_new: ICourseNew };\r\ninterface IEditCourseNewActionType { type: string, course_new: ICourseNew };\r\ninterface IRemoveCourseNewActionType { type: string, id: any };\r\ninterface IChangeSelectedCourseNewActionType { type: string, course_new: ICourseNew };\r\ninterface IClearSelectedCourseNewActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  CourseNewModificationStatus};\r\ninterface IRemoveCourseNewAllActionType { type: string }\r\ninterface IInitialCourseNewActionType {type: string, course_new: ICourseNew}","import { IClassHasRegisterJoinSemester, ClassHasRegisterJoinSemesterModificationStatus } from \"../models/class_has_register_join_semester.interface\";\r\nexport const ADD_CLASS_HAS_REGISTER_JOIN_SEMESTER: string = \"ADD_CLASS_HAS_REGISTER_JOIN_SEMESTER\";\r\nexport const EDIT_CLASS_HAS_REGISTER_JOIN_SEMESTER: string = \"EDIT_CLASS_HAS_REGISTER_JOIN_SEMESTER\";\r\nexport const REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER: string = \"REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER\";\r\nexport const CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_AMOUNT: string = \"CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_AMOUNT\";\r\nexport const CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT: string = \"CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT\";\r\nexport const CLEAR_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT: string = \"CLEAR_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER_ALL: string = \"REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER_ALL\";\r\nexport const INITIAL_CLASS_HAS_REGISTER_JOIN_SEMESTER: string = \"INITIAL_CLASS_HAS_REGISTER_JOIN_SEMESTER\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(class_has_register_join_semester: IClassHasRegisterJoinSemester) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        class_has_register_join_semester\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialClassHasRegisterJoinSemester(class_has_register_join_semester: IClassHasRegisterJoinSemester): IInitialClassHasRegisterJoinSemesterActionType {\r\n    return { type: INITIAL_CLASS_HAS_REGISTER_JOIN_SEMESTER, class_has_register_join_semester: class_has_register_join_semester };\r\n}\r\n\r\nexport function removeClassHasRegisterJoinSemesterAll(): IRemoveClassHasRegisterJoinSemesterAllActionType {\r\n    return { type: REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER_ALL };\r\n}\r\n\r\nexport function addClassHasRegisterJoinSemester(class_has_register_join_semester: IClassHasRegisterJoinSemester): IAddClassHasRegisterJoinSemesterActionType {\r\n    return { type: ADD_CLASS_HAS_REGISTER_JOIN_SEMESTER, class_has_register_join_semester: class_has_register_join_semester };\r\n}\r\n\r\nexport function editClassHasRegisterJoinSemester(class_has_register_join_semester: IClassHasRegisterJoinSemester): IEditClassHasRegisterJoinSemesterActionType {\r\n    return { type: EDIT_CLASS_HAS_REGISTER_JOIN_SEMESTER, class_has_register_join_semester: class_has_register_join_semester };\r\n}\r\n\r\nexport function removeClassHasRegisterJoinSemester(id: any): IRemoveClassHasRegisterJoinSemesterActionType {\r\n    return { type: REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER, id: id };\r\n}\r\n\r\nexport function changeSelectedClassHasRegisterJoinSemester(class_has_register_join_semester: IClassHasRegisterJoinSemester): IChangeSelectedClassHasRegisterJoinSemesterActionType {\r\n    return { type: CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT, class_has_register_join_semester: class_has_register_join_semester };\r\n}\r\n\r\nexport function clearSelectedClassHasRegisterJoinSemester(): IClearSelectedClassHasRegisterJoinSemesterActionType {\r\n    return { type: CLEAR_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ClassHasRegisterJoinSemesterModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddClassHasRegisterJoinSemesterActionType { type: string, class_has_register_join_semester: IClassHasRegisterJoinSemester };\r\ninterface IEditClassHasRegisterJoinSemesterActionType { type: string, class_has_register_join_semester: IClassHasRegisterJoinSemester };\r\ninterface IRemoveClassHasRegisterJoinSemesterActionType { type: string, id: any };\r\ninterface IChangeSelectedClassHasRegisterJoinSemesterActionType { type: string, class_has_register_join_semester: IClassHasRegisterJoinSemester };\r\ninterface IClearSelectedClassHasRegisterJoinSemesterActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ClassHasRegisterJoinSemesterModificationStatus};\r\ninterface IRemoveClassHasRegisterJoinSemesterAllActionType { type: string }\r\ninterface IInitialClassHasRegisterJoinSemesterActionType {type: string, class_has_register_join_semester: IClassHasRegisterJoinSemester}","import { ICourseParentNew, CourseParentNewModificationStatus } from \"../models/course_parent_new.interface\";\r\nexport const ADD_COURSE_PARENT_NEW: string = \"ADD_COURSE_PARENT_NEW\";\r\nexport const EDIT_COURSE_PARENT_NEW: string = \"EDIT_COURSE_PARENT_NEW\";\r\nexport const REMOVE_COURSE_PARENT_NEW: string = \"REMOVE_COURSE_PARENT_NEW\";\r\nexport const CHANGE_COURSE_PARENT_NEW_AMOUNT: string = \"CHANGE_COURSE_PARENT_NEW_AMOUNT\";\r\nexport const CHANGE_COURSE_PARENT_NEW_PENDING_EDIT: string = \"CHANGE_COURSE_PARENT_NEW_PENDING_EDIT\";\r\nexport const CLEAR_COURSE_PARENT_NEW_PENDING_EDIT: string = \"CLEAR_COURSE_PARENT_NEW_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_COURSE_PARENT_NEW_ALL: string = \"REMOVE_COURSE_PARENT_NEW_ALL\";\r\nexport const INITIAL_COURSE_PARENT_NEW: string = \"INITIAL_COURSE_PARENT_NEW\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course_parent_new: ICourseParentNew) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course_parent_new\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCourseParentNew(course_parent_new: ICourseParentNew): IInitialCourseParentNewActionType {\r\n    return { type: INITIAL_COURSE_PARENT_NEW, course_parent_new: course_parent_new };\r\n}\r\n\r\nexport function removeCourseParentNewAll(): IRemoveCourseParentNewAllActionType {\r\n    return { type: REMOVE_COURSE_PARENT_NEW_ALL };\r\n}\r\n\r\nexport function addCourseParentNew(course_parent_new: ICourseParentNew): IAddCourseParentNewActionType {\r\n    return { type: ADD_COURSE_PARENT_NEW, course_parent_new: course_parent_new };\r\n}\r\n\r\nexport function editCourseParentNew(course_parent_new: ICourseParentNew): IEditCourseParentNewActionType {\r\n    return { type: EDIT_COURSE_PARENT_NEW, course_parent_new: course_parent_new };\r\n}\r\n\r\nexport function removeCourseParentNew(id: any): IRemoveCourseParentNewActionType {\r\n    return { type: REMOVE_COURSE_PARENT_NEW, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseParentNew(course_parent_new: ICourseParentNew): IChangeSelectedCourseParentNewActionType {\r\n    return { type: CHANGE_COURSE_PARENT_NEW_PENDING_EDIT, course_parent_new: course_parent_new };\r\n}\r\n\r\nexport function clearSelectedCourseParentNew(): IClearSelectedCourseParentNewActionType {\r\n    return { type: CLEAR_COURSE_PARENT_NEW_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseParentNewModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddCourseParentNewActionType { type: string, course_parent_new: ICourseParentNew };\r\ninterface IEditCourseParentNewActionType { type: string, course_parent_new: ICourseParentNew };\r\ninterface IRemoveCourseParentNewActionType { type: string, id: any };\r\ninterface IChangeSelectedCourseParentNewActionType { type: string, course_parent_new: ICourseParentNew };\r\ninterface IClearSelectedCourseParentNewActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  CourseParentNewModificationStatus};\r\ninterface IRemoveCourseParentNewAllActionType { type: string }\r\ninterface IInitialCourseParentNewActionType {type: string, course_parent_new: ICourseParentNew}","import { IContestParentNew, ContestParentNewModificationStatus } from \"../models/contest_parent_new.interface\";\r\nexport const ADD_CONTEST_PARENT_NEW: string = \"ADD_CONTEST_PARENT_NEW\";\r\nexport const EDIT_CONTEST_PARENT_NEW: string = \"EDIT_CONTEST_PARENT_NEW\";\r\nexport const REMOVE_CONTEST_PARENT_NEW: string = \"REMOVE_CONTEST_PARENT_NEW\";\r\nexport const CHANGE_CONTEST_PARENT_NEW_AMOUNT: string = \"CHANGE_CONTEST_PARENT_NEW_AMOUNT\";\r\nexport const CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT: string = \"CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT\";\r\nexport const CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT: string = \"CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_CONTEST_PARENT_NEW_ALL: string = \"REMOVE_CONTEST_PARENT_NEW_ALL\";\r\nexport const INITIAL_CONTEST_PARENT_NEW: string = \"INITIAL_CONTEST_PARENT_NEW\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(contest_parent_new: IContestParentNew) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        contest_parent_new\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialContestParentNew(contest_parent_new: IContestParentNew): IInitialContestParentNewActionType {\r\n    return { type: INITIAL_CONTEST_PARENT_NEW, contest_parent_new: contest_parent_new };\r\n}\r\n\r\nexport function removeContestParentNewAll(): IRemoveContestParentNewAllActionType {\r\n    return { type: REMOVE_CONTEST_PARENT_NEW_ALL };\r\n}\r\n\r\nexport function addContestParentNew(contest_parent_new: IContestParentNew): IAddContestParentNewActionType {\r\n    return { type: ADD_CONTEST_PARENT_NEW, contest_parent_new: contest_parent_new };\r\n}\r\n\r\nexport function editContestParentNew(contest_parent_new: IContestParentNew): IEditContestParentNewActionType {\r\n    return { type: EDIT_CONTEST_PARENT_NEW, contest_parent_new: contest_parent_new };\r\n}\r\n\r\nexport function removeContestParentNew(id: any): IRemoveContestParentNewActionType {\r\n    return { type: REMOVE_CONTEST_PARENT_NEW, id: id };\r\n}\r\n\r\nexport function changeSelectedContestParentNew(contest_parent_new: IContestParentNew): IChangeSelectedContestParentNewActionType {\r\n    return { type: CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT, contest_parent_new: contest_parent_new };\r\n}\r\n\r\nexport function clearSelectedContestParentNew(): IClearSelectedContestParentNewActionType {\r\n    return { type: CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ContestParentNewModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddContestParentNewActionType { type: string, contest_parent_new: IContestParentNew };\r\ninterface IEditContestParentNewActionType { type: string, contest_parent_new: IContestParentNew };\r\ninterface IRemoveContestParentNewActionType { type: string, id: any };\r\ninterface IChangeSelectedContestParentNewActionType { type: string, contest_parent_new: IContestParentNew };\r\ninterface IClearSelectedContestParentNewActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ContestParentNewModificationStatus};\r\ninterface IRemoveContestParentNewAllActionType { type: string }\r\ninterface IInitialContestParentNewActionType {type: string, contest_parent_new: IContestParentNew}","import { ICourseTeacherNew, CourseTeacherNewModificationStatus } from \"../models/course_teacher_new.interface\";\r\nexport const ADD_COURSE_TEACHER_NEW: string = \"ADD_COURSE_TEACHER_NEW\";\r\nexport const EDIT_COURSE_TEACHER_NEW: string = \"EDIT_COURSE_TEACHER_NEW\";\r\nexport const REMOVE_COURSE_TEACHER_NEW: string = \"REMOVE_COURSE_TEACHER_NEW\";\r\nexport const CHANGE_COURSE_TEACHER_NEW_AMOUNT: string = \"CHANGE_COURSE_TEACHER_NEW_AMOUNT\";\r\nexport const CHANGE_COURSE_TEACHER_NEW_PENDING_EDIT: string = \"CHANGE_COURSE_TEACHER_NEW_PENDING_EDIT\";\r\nexport const CLEAR_COURSE_TEACHER_NEW_PENDING_EDIT: string = \"CLEAR_COURSE_TEACHER_NEW_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_COURSE_TEACHER_NEW_ALL: string = \"REMOVE_COURSE_TEACHER_NEW_ALL\";\r\nexport const INITIAL_COURSE_TEACHER_NEW: string = \"INITIAL_COURSE_TEACHER_NEW\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course_teacher_new: ICourseTeacherNew) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course_teacher_new\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCourseTeacherNew(course_teacher_new: ICourseTeacherNew): IInitialCourseTeacherNewActionType {\r\n    return { type: INITIAL_COURSE_TEACHER_NEW, course_teacher_new: course_teacher_new };\r\n}\r\n\r\nexport function removeCourseTeacherNewAll(): IRemoveCourseTeacherNewAllActionType {\r\n    return { type: REMOVE_COURSE_TEACHER_NEW_ALL };\r\n}\r\n\r\nexport function addCourseTeacherNew(course_teacher_new: ICourseTeacherNew): IAddCourseTeacherNewActionType {\r\n    return { type: ADD_COURSE_TEACHER_NEW, course_teacher_new: course_teacher_new };\r\n}\r\n\r\nexport function editCourseTeacherNew(course_teacher_new: ICourseTeacherNew): IEditCourseTeacherNewActionType {\r\n    return { type: EDIT_COURSE_TEACHER_NEW, course_teacher_new: course_teacher_new };\r\n}\r\n\r\nexport function removeCourseTeacherNew(id: any): IRemoveCourseTeacherNewActionType {\r\n    return { type: REMOVE_COURSE_TEACHER_NEW, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseTeacherNew(course_teacher_new: ICourseTeacherNew): IChangeSelectedCourseTeacherNewActionType {\r\n    return { type: CHANGE_COURSE_TEACHER_NEW_PENDING_EDIT, course_teacher_new: course_teacher_new };\r\n}\r\n\r\nexport function clearSelectedCourseTeacherNew(): IClearSelectedCourseTeacherNewActionType {\r\n    return { type: CLEAR_COURSE_TEACHER_NEW_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseTeacherNewModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddCourseTeacherNewActionType { type: string, course_teacher_new: ICourseTeacherNew };\r\ninterface IEditCourseTeacherNewActionType { type: string, course_teacher_new: ICourseTeacherNew };\r\ninterface IRemoveCourseTeacherNewActionType { type: string, id: any };\r\ninterface IChangeSelectedCourseTeacherNewActionType { type: string, course_teacher_new: ICourseTeacherNew };\r\ninterface IClearSelectedCourseTeacherNewActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  CourseTeacherNewModificationStatus};\r\ninterface IRemoveCourseTeacherNewAllActionType { type: string }\r\ninterface IInitialCourseTeacherNewActionType {type: string, course_teacher_new: ICourseTeacherNew}","import { ISemesterClassTeacher, SemesterClassTeacherModificationStatus } from \"../models/semester_class_teacher.interface\";\r\nexport const ADD_SEMESTER_CLASS_TEACHER: string = \"ADD_SEMESTER_CLASS_TEACHER\";\r\nexport const EDIT_SEMESTER_CLASS_TEACHER: string = \"EDIT_SEMESTER_CLASS_TEACHER\";\r\nexport const REMOVE_SEMESTER_CLASS_TEACHER: string = \"REMOVE_SEMESTER_CLASS_TEACHER\";\r\nexport const CHANGE_SEMESTER_CLASS_TEACHER_AMOUNT: string = \"CHANGE_SEMESTER_CLASS_TEACHER_AMOUNT\";\r\nexport const CHANGE_SEMESTER_CLASS_TEACHER_PENDING_EDIT: string = \"CHANGE_SEMESTER_CLASS_TEACHER_PENDING_EDIT\";\r\nexport const CLEAR_SEMESTER_CLASS_TEACHER_PENDING_EDIT: string = \"CLEAR_SEMESTER_CLASS_TEACHER_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SEMESTER_CLASS_TEACHER_ALL: string = \"REMOVE_SEMESTER_CLASS_TEACHER_ALL\";\r\nexport const INITIAL_SEMESTER_CLASS_TEACHER: string = \"INITIAL_SEMESTER_CLASS_TEACHER\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(semester_class_teacher: ISemesterClassTeacher) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        semester_class_teacher\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSemesterClassTeacher(semester_class_teacher: ISemesterClassTeacher): IInitialSemesterClassTeacherActionType {\r\n    return { type: INITIAL_SEMESTER_CLASS_TEACHER, semester_class_teacher: semester_class_teacher };\r\n}\r\n\r\nexport function removeSemesterClassTeacherAll(): IRemoveSemesterClassTeacherAllActionType {\r\n    return { type: REMOVE_SEMESTER_CLASS_TEACHER_ALL };\r\n}\r\n\r\nexport function addSemesterClassTeacher(semester_class_teacher: ISemesterClassTeacher): IAddSemesterClassTeacherActionType {\r\n    return { type: ADD_SEMESTER_CLASS_TEACHER, semester_class_teacher: semester_class_teacher };\r\n}\r\n\r\nexport function editSemesterClassTeacher(semester_class_teacher: ISemesterClassTeacher): IEditSemesterClassTeacherActionType {\r\n    return { type: EDIT_SEMESTER_CLASS_TEACHER, semester_class_teacher: semester_class_teacher };\r\n}\r\n\r\nexport function removeSemesterClassTeacher(id: any): IRemoveSemesterClassTeacherActionType {\r\n    return { type: REMOVE_SEMESTER_CLASS_TEACHER, id: id };\r\n}\r\n\r\nexport function changeSelectedSemesterClassTeacher(semester_class_teacher: ISemesterClassTeacher): IChangeSelectedSemesterClassTeacherActionType {\r\n    return { type: CHANGE_SEMESTER_CLASS_TEACHER_PENDING_EDIT, semester_class_teacher: semester_class_teacher };\r\n}\r\n\r\nexport function clearSelectedSemesterClassTeacher(): IClearSelectedSemesterClassTeacherActionType {\r\n    return { type: CLEAR_SEMESTER_CLASS_TEACHER_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateSemesterClassTeacher(value: SemesterClassTeacherModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddSemesterClassTeacherActionType { type: string, semester_class_teacher: ISemesterClassTeacher };\r\ninterface IEditSemesterClassTeacherActionType { type: string, semester_class_teacher: ISemesterClassTeacher };\r\ninterface IRemoveSemesterClassTeacherActionType { type: string, id: any };\r\ninterface IChangeSelectedSemesterClassTeacherActionType { type: string, semester_class_teacher: ISemesterClassTeacher };\r\ninterface IClearSelectedSemesterClassTeacherActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  SemesterClassTeacherModificationStatus};\r\ninterface IRemoveSemesterClassTeacherAllActionType { type: string }\r\ninterface IInitialSemesterClassTeacherActionType {type: string, semester_class_teacher: ISemesterClassTeacher}","import { IFinalScoreChild, FinalScoreChildModificationStatus } from \"../models/final_score_child.interface\";\r\nexport const ADD_FINAL_SCORE_CHILD: string = \"ADD_FINAL_SCORE_CHILD\";\r\nexport const EDIT_FINAL_SCORE_CHILD: string = \"EDIT_FINAL_SCORE_CHILD\";\r\nexport const REMOVE_FINAL_SCORE_CHILD: string = \"REMOVE_FINAL_SCORE_CHILD\";\r\nexport const CHANGE_FINAL_SCORE_CHILD_AMOUNT: string = \"CHANGE_FINAL_SCORE_CHILD_AMOUNT\";\r\nexport const CHANGE_FINAL_SCORE_CHILD_PENDING_EDIT: string = \"CHANGE_FINAL_SCORE_CHILD_PENDING_EDIT\";\r\nexport const CLEAR_FINAL_SCORE_CHILD_PENDING_EDIT: string = \"CLEAR_FINAL_SCORE_CHILD_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_FINAL_SCORE_CHILD_ALL: string = \"REMOVE_FINAL_SCORE_CHILD_ALL\";\r\nexport const INITIAL_FINAL_SCORE_CHILD: string = \"INITIAL_FINAL_SCORE_CHILD\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(final_score_child: IFinalScoreChild) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        final_score_child\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialFinalScoreChild(final_score_child: IFinalScoreChild): IInitialFinalScoreChildActionType {\r\n    return { type: INITIAL_FINAL_SCORE_CHILD, final_score_child: final_score_child };\r\n}\r\n\r\nexport function removeFinalScoreChildAll(): IRemoveFinalScoreChildAllActionType {\r\n    return { type: REMOVE_FINAL_SCORE_CHILD_ALL };\r\n}\r\n\r\nexport function addFinalScoreChild(final_score_child: IFinalScoreChild): IAddFinalScoreChildActionType {\r\n    return { type: ADD_FINAL_SCORE_CHILD, final_score_child: final_score_child };\r\n}\r\n\r\nexport function editFinalScoreChild(final_score_child: IFinalScoreChild): IEditFinalScoreChildActionType {\r\n    return { type: EDIT_FINAL_SCORE_CHILD, final_score_child: final_score_child };\r\n}\r\n\r\nexport function removeFinalScoreChild(id: any): IRemoveFinalScoreChildActionType {\r\n    return { type: REMOVE_FINAL_SCORE_CHILD, id: id };\r\n}\r\n\r\nexport function changeSelectedFinalScoreChild(final_score_child: IFinalScoreChild): IChangeSelectedFinalScoreChildActionType {\r\n    return { type: CHANGE_FINAL_SCORE_CHILD_PENDING_EDIT, final_score_child: final_score_child };\r\n}\r\n\r\nexport function clearSelectedFinalScoreChild(): IClearSelectedFinalScoreChildActionType {\r\n    return { type: CLEAR_FINAL_SCORE_CHILD_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: FinalScoreChildModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddFinalScoreChildActionType { type: string, final_score_child: IFinalScoreChild };\r\ninterface IEditFinalScoreChildActionType { type: string, final_score_child: IFinalScoreChild };\r\ninterface IRemoveFinalScoreChildActionType { type: string, id: any };\r\ninterface IChangeSelectedFinalScoreChildActionType { type: string, final_score_child: IFinalScoreChild };\r\ninterface IClearSelectedFinalScoreChildActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  FinalScoreChildModificationStatus};\r\ninterface IRemoveFinalScoreChildAllActionType { type: string }\r\ninterface IInitialFinalScoreChildActionType {type: string, final_score_child: IFinalScoreChild}","import { ISectionTeacher, SectionTeacherModificationStatus } from \"../models/section_teacher.interface\";\r\nexport const ADD_SECTION_TEACHER: string = \"ADD_SECTION_TEACHER\";\r\nexport const EDIT_SECTION_TEACHER: string = \"EDIT_SECTION_TEACHER\";\r\nexport const REMOVE_SECTION_TEACHER: string = \"REMOVE_SECTION_TEACHER\";\r\nexport const CHANGE_SECTION_TEACHER_AMOUNT: string = \"CHANGE_SECTION_TEACHER_AMOUNT\";\r\nexport const CHANGE_SECTION_TEACHER_PENDING_EDIT: string = \"CHANGE_SECTION_TEACHER_PENDING_EDIT\";\r\nexport const CLEAR_SECTION_TEACHER_PENDING_EDIT: string = \"CLEAR_SECTION_TEACHER_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SECTION_TEACHER_ALL: string = \"REMOVE_SECTION_TEACHER_ALL\";\r\nexport const INITIAL_SECTION_TEACHER: string = \"INITIAL_SECTION_TEACHER\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(section_teacher: ISectionTeacher) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        section_teacher\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialSectionTeacher(section_teacher: ISectionTeacher): IInitialSectionTeacherActionType {\r\n    return { type: INITIAL_SECTION_TEACHER, section_teacher: section_teacher };\r\n}\r\n\r\nexport function removeSectionTeacherAll(): IRemoveSectionTeacherAllActionType {\r\n    return { type: REMOVE_SECTION_TEACHER_ALL };\r\n}\r\n\r\nexport function addSectionTeacher(section_teacher: ISectionTeacher): IAddSectionTeacherActionType {\r\n    return { type: ADD_SECTION_TEACHER, section_teacher: section_teacher };\r\n}\r\n\r\nexport function editSectionTeacher(section_teacher: ISectionTeacher): IEditSectionTeacherActionType {\r\n    return { type: EDIT_SECTION_TEACHER, section_teacher: section_teacher };\r\n}\r\n\r\nexport function removeSectionTeacher(id: any): IRemoveSectionTeacherActionType {\r\n    return { type: REMOVE_SECTION_TEACHER, id: id };\r\n}\r\n\r\nexport function changeSelectedSectionTeacher(section_teacher: ISectionTeacher): IChangeSelectedSectionTeacherActionType {\r\n    return { type: CHANGE_SECTION_TEACHER_PENDING_EDIT, section_teacher: section_teacher };\r\n}\r\n\r\nexport function clearSelectedSectionTeacher(): IClearSelectedSectionTeacherActionType {\r\n    return { type: CLEAR_SECTION_TEACHER_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationStateSectionTeacher(value: SectionTeacherModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddSectionTeacherActionType { type: string, section_teacher: ISectionTeacher };\r\ninterface IEditSectionTeacherActionType { type: string, section_teacher: ISectionTeacher };\r\ninterface IRemoveSectionTeacherActionType { type: string, id: any };\r\ninterface IChangeSelectedSectionTeacherActionType { type: string, section_teacher: ISectionTeacher };\r\ninterface IClearSelectedSectionTeacherActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  SectionTeacherModificationStatus};\r\ninterface IRemoveSectionTeacherAllActionType { type: string }\r\ninterface IInitialSectionTeacherActionType {type: string, section_teacher: ISectionTeacher}","import { IProduct, ProductModificationStatus } from \"../models/product.interface\";\nexport const ADD_PRODUCT: string = \"ADD_PRODUCT\";\nexport const EDIT_PRODUCT: string = \"EDIT_PRODUCT\";\nexport const REMOVE_PRODUCT: string = \"REMOVE_PRODUCT\";\nexport const CHANGE_PRODUCT_AMOUNT: string = \"CHANGE_PRODUCT_AMOUNT\";\nexport const CHANGE_PRODUCT_PENDING_EDIT: string = \"CHANGE_PRODUCT_PENDING_EDIT\";\nexport const CLEAR_PRODUCT_PENDING_EDIT: string = \"CLEAR_PRODUCT_PENDING_EDIT\";\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\n\nexport function addProduct(product: IProduct): IAddProductActionType {\n    return { type: ADD_PRODUCT, product: product };\n}\n\nexport function editProduct(product: IProduct): IEditProductActionType {\n    return { type: EDIT_PRODUCT, product: product };\n}\n\nexport function removeProduct(id: any): IRemoveProductActionType {\n    return { type: REMOVE_PRODUCT, id: id };\n}\n\nexport function changeProductAmount(id: any, amount: number): IChangeProductAmountType {\n    return { type: CHANGE_PRODUCT_AMOUNT, id: id, amount: amount };\n}\n\nexport function changeSelectedProduct(product: IProduct): IChangeSelectedProductActionType {\n    return { type: CHANGE_PRODUCT_PENDING_EDIT, product: product };\n}\n\nexport function clearSelectedProduct(): IClearSelectedProductActionType {\n    return { type: CLEAR_PRODUCT_PENDING_EDIT };\n}\n\nexport function setModificationState(value: ProductModificationStatus): ISetModificationStateActionType {\n    return { type: SET_MODIFICATION_STATE, value: value };\n}\n\ninterface IAddProductActionType { type: string, product: IProduct };\ninterface IEditProductActionType { type: string, product: IProduct };\ninterface IRemoveProductActionType { type: string, id: any };\ninterface IChangeSelectedProductActionType { type: string, product: IProduct };\ninterface IClearSelectedProductActionType { type: string };\ninterface ISetModificationStateActionType { type: string, value:  ProductModificationStatus};\ninterface IChangeProductAmountType {type: string, id: any, amount: number};","export const LOG_IN: string = \"LOG_IN\";\nexport const LOG_OUT: string = \"LOG_OUT\";\n\nexport function login(username: string): ILogInActionType {\n    return { type: LOG_IN, username: username };\n}\n\nexport function logout(): ILogOutActionType {\n    return { type: LOG_OUT};\n}\n\ninterface ILogInActionType { type: string, username: string };\ninterface ILogOutActionType { type: string };\n","export const ADD_NOTIFICATION: string = \"ADD_NOTIFICATION\";\nexport const REMOVE_NOTIFICATION: string = \"REMOVE_NOTIFICATION\";\n\nexport function addNotification(title: string, text: string): IAddNotificationActionType {\n    return { type: ADD_NOTIFICATION, text: text, title: title };\n}\n\nexport function removeNotification(id: any): IRemoveNotificationActionType {\n    return { type: REMOVE_NOTIFICATION, id: id };\n}\n\ninterface IAddNotificationActionType { type: string, text: string, title: string };\ninterface IRemoveNotificationActionType { type: string, id: any };\n","export const UPDATE_CURRENT_PATH: string = \"UPDATE_CURRENT_PATH\";\n\nexport function updateCurrentPath(area: string, subArea: string): IUpdateCurrentPathActionType {\n    return { type: UPDATE_CURRENT_PATH, area: area, subArea: subArea };\n}\n\n\ninterface IUpdateCurrentPathActionType { type: string, area: string, subArea: string };","export interface IUser {\n    id: any,\n    username: string,\n    email: string,\n    password: string,\n    status: string,\n    firstName: string,\n    lastName: string,\n    dateOfBirth: string,\n    profile_image_url: string,\n    sex: string,\n    phone: string,\n    address: string,\n    parents: number,\n    parent: string,\n    student_ids: number[];\n    student_names: string[];\n    createTime: string\n}\n\nexport enum UserModificationStatus {\n    None = 0,\n    Create = 1,\n    Edit = 2,\n    Remove = 3,\n    ClosePopup = 4,\n    ImportFile = 5\n}","export interface IAnonymousNotification {\r\n    id: any,\r\n    name: string, \r\n    description: string,\r\n    time: string\r\n}\r\n\r\nexport enum AnonymousNotificationModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n} ","export interface ILesson {\r\n    id: any;\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\n\r\nexport enum LessonModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","export interface IStudentLeave {\r\n    id: any;\r\n    section_id: number;\r\n    section_name: string;\r\n    class_id: number;\r\n    class_name: string;\r\n    section_number: number;\r\n    student_id: number;\r\n    student_name: string;\r\n    reviewer_id: number;\r\n    description: string;\r\n    status: string;\r\n    time_approved: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum StudentLeaveModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","export interface IMyClass {\r\n    id: any;\r\n    course_id: number;\r\n    course_name: string;\r\n    semester_name: string;\r\n    semester_id: number;\r\n    total_student: number;\r\n    teacher_name: string;\r\n    user_register_teach_semester: number;\r\n    security_code: string;\r\n    name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n\r\n}\r\n\r\nexport enum MyClassModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","export interface ICourse {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    \r\n    art_type_id: number;\r\n    art_level_id: number;\r\n    art_age_id: number;\r\n    art_age_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    checked_tutoral: boolean;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum CourseModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","export interface ITeacherRegisterQuantification {\r\n    id: any;\r\n    teacher_id: number;\r\n    teacher_name: string;\r\n    reviewer_id: number;\r\n    course_id: number;\r\n    time_approved: string;\r\n    course_name: string;\r\n    art_age_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    degree_photo_url: string;\r\n    status: string;\r\n}\r\n\r\nexport enum TeacherRegisterQuantificationModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","export interface IProduct {\n    id: any;\n    name: string;\n    category: string;\n    description: string;\n    amount: number;\n    price: number;\n    hasExpiryDate: boolean;\n}\n\nexport enum ProductModificationStatus {\n    None = 0,\n    Create = 1,\n    Edit = 2\n}","export interface ISemester {\r\n    id: any;\r\n    number: number;\r\n    year: number;\r\n    name: string;\r\n    holiday: string[];\r\n    checked_genaration: boolean;\r\n    description: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum SemesterModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","export interface IArtType {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nexport enum ArtTypeModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","export interface IArtLevel {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nexport enum ArtLevelModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","export interface IArtAge {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nexport enum ArtAgeModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","export interface IContest {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    check_gen: boolean;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    total_contest_submission: number;\r\n    total_contest_submission_graded: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    \r\n    art_type_id: number;\r\n    art_age_id: number;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ContestModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","export interface ISemesterClass {\r\n    id: any;\r\n    name: string;\r\n    semester_id: number;\r\n    semester_name: string;\r\n    is_new: boolean;\r\n    total_register: number;\r\n    registration_time: string;\r\n    registration_expiration_time: string;\r\n    course_id: number;\r\n    course_name: string;\r\n    max_participant: number;\r\n}\r\n\r\nexport enum SemesterClassModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    Create1 = 5,\r\n    ClosePopup = 4\r\n}","export interface IExercise {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    deadline: string;\r\n    section_id: number;\r\n    section_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ExerciseModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4,\r\n    Create1 = 5\r\n}","export interface IUserRegisterTutorial {\r\n    id: any;\r\n    name: string;\r\n    number: number;\r\n    teacher_name: string;\r\n    class_id: number;\r\n    class_name: string;\r\n    status: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum UserRegisterTutorialModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","export interface ISectionTemplate {\r\n    id: any;\r\n    \r\n    course_id: number;\r\n    name: string;\r\n    number: number;\r\n    teaching_form: boolean;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum SectionTemplateModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","export interface IClassTeacher {\r\n    id: any;\r\n    name: string;\r\n    course_id: number;\r\n    review_star: number;\r\n    link_url: string;\r\n    semester_class_id: number;\r\n    user_register_teach_semester: number;\r\n    security_code: string;\r\n    total_student: number;\r\n    num_of_section: number;\r\n    course_name: string;\r\n    semester_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n}\r\n\r\nexport enum ClassTeacherModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","export interface IChild {\r\n    id: any,\r\n    username: string,\r\n    email: string,\r\n    password: string,\r\n    status: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    dateOfBirth: string,\r\n    profile_image_url: string,\r\n    sex: string,\r\n    phone: string,\r\n    total_course: number;\r\n    total_contest: number;\r\n    address: string,\r\n    parents: number,\r\n    createTime: string\r\n}\r\n\r\nexport enum ChildModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4,\r\n    ImportFile = 5\r\n}","export interface IClassesStudent {\r\n    id: any;\r\n    name: string;\r\n    link_url: string;\r\n    student_id: number;\r\n    student_name: string;\r\n    teacher_name: string;\r\n    teacher_id: number;\r\n    course_id: number;\r\n    url_image_course: string;\r\n    schedule_section_next: string;\r\n    semester_class_id: number;\r\n    semester_class_name: string;\r\n    user_register_teach_semester: number;\r\n    security_code: string;\r\n    total_section_studied: number;\r\n    total_student: number;\r\n    total_section: number;\r\n    course_name: string;\r\n    semester_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_type_id: number;\r\n    art_level_id: number;\r\n    art_age_id: number;\r\n    art_age_name: string;\r\n    user_register_join_semester_id: number;\r\n}\r\n\r\nexport enum ClassesStudentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","export interface IClassesParent {\r\n    id: any;\r\n    name: string;\r\n    link_url: string;\r\n    student_id: number;\r\n    student_name: string;\r\n    url_image_course: string;\r\n    teacher_name: string;\r\n    teacher_id: number;\r\n    course_id: number;\r\n    schedule_section_next: string;\r\n    semester_class_id: number;\r\n    semester_class_name: string;\r\n    user_register_teach_semester: number;\r\n    security_code: string;\r\n    total_section_studied: number;\r\n    total_student: number;\r\n    total_section: number;\r\n    course_name: string;\r\n    semester_name: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_type_id: number;\r\n    art_level_id: number;\r\n    art_age_id: number;\r\n    art_age_name: string;\r\n}\r\n\r\nexport enum ClassesParentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { Route, RouteProps } from \"react-router\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { IStateType } from \"../../store/models/root.interface\";\nimport { Redirect } from \"react-router-dom\";\n\n\nexport function PrivateRoute({ children, ...rest }: RouteProps): JSX.Element {\n\n    useSelector((state: IStateType) => state.account);\n\n    return (\n        <Route\n            {...rest}\n            render={() =>\n                localStorage.getItem('username') ? (\n                    children\n                ) : <Redirect\n                to={{\n                    pathname: \"/auth\"\n                }}\n            />\n            }\n        />\n    );\n}","import React, { lazy } from \"react\";\nimport \"./App.css\";\nimport \"./styles/sb-admin-2.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { PrivateRoute } from \"./common/components/PrivateRoute\";\n\nconst Routers = lazy(()=> import(\"./Routers/Routers\"));\nconst LandingPage = lazy(()=> import(\"./components/LandingPage/LandingPage\"));\nconst ForgotPassword = lazy(()=> import(\"./components/Account/ForgotPassword\"));\nconst UpdatePassword = lazy(()=> import(\"./components/Account/UpdatePassword\"));\nconst RegisterForm = lazy(()=> import(\"./components/Account/RegisterForm\"));\nconst PaymentSuccessfull = lazy(()=> import(\"./components/Discovery/PaymentSuccessfull\"));\nconst Login = lazy(()=> import(\"./components/Account/Login\"));\n\n\nconst App: React.FC = () => {\n  // Handle incoming messages. Called when:\n// - a message is received while the app has focus\n// - the user clicks on an app notification created by a service worker\n//   `messaging.onBackgroundMessage` handler.\n\n  return (\n    <div className=\"App\" id=\"wrapper\">\n      <Router>\n        <Switch>\n          <Route path=\"/landing-page\"><LandingPage /></Route>\n          <Route path={`/forgot-password`}><ForgotPassword /></Route>\n          <Route path={`/update-password`}><UpdatePassword /></Route>\n          <Route path={`/register`}><RegisterForm /></Route>\n          <Route path={`/payment-successfull`}><PaymentSuccessfull /></Route>\n          <Route path=\"/auth\"><Login /></Route>\n          <PrivateRoute path=\"/\">\n            <Routers />\n          </PrivateRoute>\n          {/* <Route path={`/aut`}><Login /></Route>\n          <Route path={`/landing-page`}><LandingPage /></Route>\n          <Route path={`/`}><Routers /></Route>\n          <Route path={`/`}>\n            <Redirect to=\"/landing-page\" />\n          </Route> */}\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { IProductState, IActionBase } from \"../models/root.interface\";\nimport { ADD_PRODUCT, CHANGE_PRODUCT_PENDING_EDIT, EDIT_PRODUCT, REMOVE_PRODUCT,\n    CLEAR_PRODUCT_PENDING_EDIT, SET_MODIFICATION_STATE, CHANGE_PRODUCT_AMOUNT} from \"../actions/products.action\";\nimport { IProduct, ProductModificationStatus } from \"../models/product.interface\";\n\n\n\nconst initialState: IProductState = {\n    modificationState: ProductModificationStatus.None,\n    selectedProduct: null,\n    products: []\n};\n\nfunction productsReducer(state: IProductState = initialState, action: IActionBase): IProductState {\n    switch (action.type) {\n        case ADD_PRODUCT: {\n            return { ...state, products: [...state.products, action.product]};\n        }\n        case EDIT_PRODUCT: {\n            const foundIndex: number = state.products.findIndex(pr => pr.id === action.product.id);\n            let products: IProduct[] = state.products;\n            products[foundIndex] = action.product;\n            return { ...state, products: products };\n        }\n        case REMOVE_PRODUCT: {\n            return { ...state, products: state.products.filter(pr => pr.id !== action.id) };\n        }\n        case CHANGE_PRODUCT_PENDING_EDIT: {\n            return { ...state, selectedProduct: action.product };\n        }\n        case CLEAR_PRODUCT_PENDING_EDIT: {\n            return { ...state, selectedProduct: null };\n        }\n        case SET_MODIFICATION_STATE: {\n            return { ...state, modificationState: action.value };\n        }\n        case CHANGE_PRODUCT_AMOUNT: {\n            const foundIndex: number = state.products.findIndex(pr => pr.id === action.id);\n            let products: IProduct[] = state.products;\n            products[foundIndex].amount = products[foundIndex].amount - action.amount;\n            return { ...state, products: products };\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport default productsReducer;","import { IActionBase, INotificationState } from \"../models/root.interface\";\nimport { ADD_NOTIFICATION, REMOVE_NOTIFICATION } from \"../actions/notifications.action\";\n\nconst initialState: INotificationState = {\n    notifications: [{id: 0, date: new Date(), text: \"\", title: \"Xin chào\"}]\n};\n\nfunction notificationReducer(state: INotificationState = initialState, action: IActionBase): INotificationState {\n    switch (action.type) {\n        case ADD_NOTIFICATION: {\n            return {...state, notifications: [...state.notifications, action.notification]};\n        }\n        case REMOVE_NOTIFICATION: {\n            return {...state, notifications: state.notifications\n                .filter(Notification => Notification.id !== action.id)};\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport default notificationReducer;","import { IUserState, IActionBase } from \"../models/root.interface\";\nimport { \n    ADD_ADMIN, EDIT_ADMIN, REMOVE_ADMIN,\n    ADD_TEACHER, EDIT_TEACHER, REMOVE_TEACHER,INITIAL_TEACHER, REMOVE_TEACHER_ALL, \n    ADD_STUDENT, EDIT_STUDENT, REMOVE_STUDENT, INITIAL_STUDENT, REMOVE_STUDENT_ALL, \n    ADD_PARENT, EDIT_PARENT, REMOVE_PARENT , INITIAL_PARENT, REMOVE_PARENT_ALL,\n    CHANGE_USER_PENDING_EDIT, CLEAR_USER_PENDING_EDIT, SET_MODIFICATION_STATE\n\n} from \"../actions/users.action\";\nimport { IUser, UserModificationStatus } from \"../models/user.interface\";\n\nconst initialState: IUserState = {\n    modificationState: UserModificationStatus.None,\n    selectedUser: null,\n    admins: [],\n    teachers: [],\n    students: [],\n    parents: []\n};\n\nfunction userReducer(state: IUserState = initialState, action: IActionBase): IUserState {\n    switch (action.type) {\n        case ADD_ADMIN: {\n            return { ...state, admins: [...state.admins, action.user]};\n        }\n        case EDIT_ADMIN: {\n            const foundIndex: number = state.admins.findIndex(pr => pr.username === action.user.username);\n            let admins: IUser[] = state.admins;\n            admins[foundIndex] = action.user;\n            return { ...state, admins: admins };\n        }\n        case REMOVE_ADMIN: {\n            return { ...state, admins: state.admins.filter(x=>x.username !== action.user.username)};\n        }\n\n        case INITIAL_TEACHER: {\n            return { ...state, teachers : [...state.teachers, action.user]};\n        }\n        case REMOVE_TEACHER_ALL: {\n            return { ...state, teachers: [] };\n        }\n        case ADD_TEACHER: {\n            return { ...state, teachers: [...state.teachers, action.user]};\n        }\n        case EDIT_TEACHER: {\n            const foundIndex: number = state.teachers.findIndex(pr => pr.username === action.user.username);\n            let teachers: IUser[] = state.teachers;\n            teachers[foundIndex] = action.user;\n            return { ...state, teachers: teachers };\n        }\n        case REMOVE_TEACHER: {\n            return { ...state, teachers: state.teachers.filter(x=>x.username !== action.user.username)};\n        }\n\n        case INITIAL_STUDENT: {\n            return { ...state, students : [...state.students, action.user]};\n        }\n        case REMOVE_STUDENT_ALL: {\n            return { ...state, students: [] };\n        }\n        case ADD_STUDENT: {\n            return { ...state, students: [...state.students, action.user]};\n        }\n        case EDIT_STUDENT: {\n            const foundIndex: number = state.students.findIndex(pr => pr.username === action.user.username);\n            let students: IUser[] = state.students;\n            students[foundIndex] = action.user;\n            return { ...state, students: students };\n        }\n        case REMOVE_STUDENT: {\n            return { ...state, students: state.students.filter(x=>x.username !== action.user.username)};\n        }\n\n        case INITIAL_PARENT: {\n            return { ...state, parents : [...state.parents, action.user]};\n        }\n        case REMOVE_PARENT_ALL: {\n            return { ...state, parents: [] };\n        }\n        case ADD_PARENT: {\n            return { ...state, parents: [...state.parents, action.user]};\n        }\n        case EDIT_PARENT: {\n            const foundIndex: number = state.parents.findIndex(pr => pr.username === action.user.username);\n            let parents: IUser[] = state.parents;\n            parents[foundIndex] = action.user;\n            return { ...state, parents: parents };\n        }\n        case REMOVE_PARENT: {\n            return { ...state, parents: state.parents.filter(x=>x.username !== action.user.username)};\n        }\n        \n        case CHANGE_USER_PENDING_EDIT: {\n            return { ...state, selectedUser: action.user };\n        }\n        case CLEAR_USER_PENDING_EDIT: {\n            return { ...state, selectedUser: null };\n        }\n        case SET_MODIFICATION_STATE: {\n            return { ...state, modificationState: action.value };\n        }\n        default:\n            return state;\n    }\n}\n\nexport default userReducer;","import { IOrder } from \"../models/order.interface\";\n\nexport const ADD_ORDER: string = \"ADD_ORDER\";\n\nexport function addOrder(order: IOrder): IAddOrderActionType {\n    return { type: ADD_ORDER, order: order };\n}\n\ninterface IAddOrderActionType { type: string, order: IOrder };\n","import { IOrdersState, IActionBase } from \"../models/root.interface\";\nimport { ADD_ORDER } from \"../actions/orders.actions\";\n\n\nconst initialState: IOrdersState = {\n    orders: []\n};\n\nfunction orderReducer(state: IOrdersState = initialState, action: IActionBase): IOrdersState {\n    switch (action.type) {\n        case ADD_ORDER: {\n            return {...state, orders: [...state.orders, {...action.order}]};\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport default orderReducer;","import { IActionBase } from \"../models/root.interface\";\nimport { IAccount } from \"../models/account.interface\";\nimport { LOG_IN, LOG_OUT } from \"../actions/account.actions\";\n\nvar username = localStorage.getItem('username')\n\nconst initialState: IAccount = {\n    username: username !== null ? username : \"\"\n};\n\nfunction accountReducer(state: IAccount = initialState, action: IActionBase): IAccount {\n    switch (action.type) {\n        case LOG_IN: {\n            return { ...state, username: (action.username)};\n        }\n        case LOG_OUT: {\n            return { ...state, username: \"\"};\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport default accountReducer;","import { ISemesterState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SEMESTER, CHANGE_SEMESTER_PENDING_EDIT, EDIT_SEMESTER, REMOVE_SEMESTER,\r\n    CLEAR_SEMESTER_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SEMESTER, REMOVE_SEMESTER_ALL} from \"../actions/semester.actions\";\r\nimport { ISemester, SemesterModificationStatus } from \"../models/semester.interface\";\r\n\r\n\r\n\r\nconst initialState: ISemesterState = {\r\n    modificationState: SemesterModificationStatus.None,\r\n    selectedSemester: null,\r\n    semesters: []\r\n};\r\n\r\nfunction semestersReducer(state: ISemesterState = initialState, action: IActionBase): ISemesterState {\r\n    switch (action.type) {\r\n        case INITIAL_SEMESTER: {\r\n            return { ...state, semesters : [...state.semesters, action.semester]};\r\n        }\r\n        case ADD_SEMESTER: {\r\n            return { ...state, semesters: [...state.semesters, action.semester]};\r\n        }\r\n        case EDIT_SEMESTER: {\r\n            const foundIndex: number = state.semesters.findIndex(pr => pr.id === action.semester.id);\r\n            let semesters: ISemester[] = state.semesters;\r\n            semesters[foundIndex] = action.semester;\r\n            return { ...state, semesters: semesters };\r\n        }\r\n        case REMOVE_SEMESTER: {\r\n            return { ...state, semesters: state.semesters.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SEMESTER_ALL: {\r\n            return { ...state, semesters: [] };\r\n        }\r\n        case CHANGE_SEMESTER_PENDING_EDIT: {\r\n            return { ...state, selectedSemester: action.semester };\r\n        }\r\n        case CLEAR_SEMESTER_PENDING_EDIT: {\r\n            return { ...state, selectedSemester: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default semestersReducer;","import { ILessonState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_LESSON, CHANGE_LESSON_PENDING_EDIT, EDIT_LESSON, REMOVE_LESSON,\r\n    CLEAR_LESSON_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_LESSON, REMOVE_LESSON_ALL} from \"../actions/lesson.action\";\r\nimport { ILesson, LessonModificationStatus } from \"../models/lesson.interface\";\r\n\r\n\r\n\r\nconst initialState: ILessonState = {\r\n    modificationState: LessonModificationStatus.None,\r\n    selectedLesson: null,\r\n    lessons: []\r\n};\r\n\r\nfunction lessonsReducer(state: ILessonState = initialState, action: IActionBase): ILessonState {\r\n    switch (action.type) {\r\n        case INITIAL_LESSON: {\r\n            return { ...state, lessons : [...state.lessons, action.lesson]};\r\n        }\r\n        case ADD_LESSON: {\r\n            return { ...state, lessons: [...state.lessons, action.lesson]};\r\n        }\r\n        case EDIT_LESSON: {\r\n            const foundIndex: number = state.lessons.findIndex(pr => pr.id === action.lesson.id);\r\n            let lessons: ILesson[] = state.lessons;\r\n            lessons[foundIndex] = action.lesson;\r\n            return { ...state, lessons: lessons };\r\n        }\r\n        case REMOVE_LESSON: {\r\n            return { ...state, lessons: state.lessons.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_LESSON_ALL: {\r\n            return { ...state, lessons: [] };\r\n        }\r\n        case CHANGE_LESSON_PENDING_EDIT: {\r\n            return { ...state, selectedLesson: action.lesson };\r\n        }\r\n        case CLEAR_LESSON_PENDING_EDIT: {\r\n            return { ...state, selectedLesson: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default lessonsReducer;","export interface ISchedule {\r\n    id: any;\r\n    lesson_time_id: number;\r\n    lesson_time: string;\r\n    semester_class_id: number;\r\n    date_of_week: number;\r\n}\r\n\r\nexport enum ScheduleModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IScheduleState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SCHEDULE, CHANGE_SCHEDULE_PENDING_EDIT, EDIT_SCHEDULE, REMOVE_SCHEDULE,\r\n    CLEAR_SCHEDULE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SCHEDULE, REMOVE_SCHEDULE_ALL} from \"../actions/schedule.action\";\r\nimport { ISchedule, ScheduleModificationStatus } from \"../models/schedule.interface\";\r\n\r\n\r\n\r\nconst initialState: IScheduleState = {\r\n    modificationState: ScheduleModificationStatus.None,\r\n    selectedSchedule: null,\r\n    schedules: []\r\n};\r\n\r\nfunction schedulesReducer(state: IScheduleState = initialState, action: IActionBase): IScheduleState {\r\n    switch (action.type) {\r\n        case INITIAL_SCHEDULE: {\r\n            return { ...state, schedules : [...state.schedules, action.schedule]};\r\n        }\r\n        case ADD_SCHEDULE: {\r\n            return { ...state, schedules: [...state.schedules, action.schedule]};\r\n        }\r\n        case EDIT_SCHEDULE: {\r\n            const foundIndex: number = state.schedules.findIndex(pr => pr.id === action.schedule.id);\r\n            let schedules: ISchedule[] = state.schedules;\r\n            schedules[foundIndex] = action.schedule;\r\n            return { ...state, schedules: schedules };\r\n        }\r\n        case REMOVE_SCHEDULE: {\r\n            return { ...state, schedules: state.schedules.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SCHEDULE_ALL: {\r\n            return { ...state, schedules: [] };\r\n        }\r\n        case CHANGE_SCHEDULE_PENDING_EDIT: {\r\n            return { ...state, selectedSchedule: action.schedule };\r\n        }\r\n        case CLEAR_SCHEDULE_PENDING_EDIT: {\r\n            return { ...state, selectedSchedule: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default schedulesReducer;","export interface IScheduleItem {\r\n    id: any;\r\n    schedule_id: number;\r\n    lesson_time: number;\r\n    date_of_week: number;\r\n}\r\n\r\nexport enum ScheduleItemModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IScheduleItem, ScheduleItemModificationStatus } from \"../models/schedule_item.interface\";\r\nexport const ADD_SCHEDULE_ITEM: string = \"ADD_SCHEDULE_ITEM\";\r\nexport const EDIT_SCHEDULE_ITEM: string = \"EDIT_SCHEDULE_ITEM\";\r\nexport const REMOVE_SCHEDULE_ITEM: string = \"REMOVE_SCHEDULE_ITEM\";\r\nexport const CHANGE_SCHEDULE_ITEM_AMOUNT: string = \"CHANGE_SCHEDULE_ITEM_AMOUNT\";\r\nexport const CHANGE_SCHEDULE_ITEM_PENDING_EDIT: string = \"CHANGE_SCHEDULE_ITEM_PENDING_EDIT\";\r\nexport const CLEAR_SCHEDULE_ITEM_PENDING_EDIT: string = \"CLEAR_SCHEDULE_ITEM_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_SCHEDULE_ITEM_ALL: string = \"REMOVE_SCHEDULE_ITEM_ALL\";\r\nexport const INITIAL_SCHEDULE_ITEM: string = \"INITIAL_SCHEDULE_ITEM\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(schedule_item: IScheduleItem) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        schedule_item\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialScheduleItem(schedule_item: IScheduleItem): IInitialScheduleItemActionType {\r\n    return { type: INITIAL_SCHEDULE_ITEM, schedule_item: schedule_item };\r\n}\r\n\r\nexport function removeScheduleItemAll(): IRemoveScheduleItemAllActionType {\r\n    return { type: REMOVE_SCHEDULE_ITEM_ALL };\r\n}\r\n\r\nexport function addScheduleItem(schedule_item: IScheduleItem): IAddScheduleItemActionType {\r\n    return { type: ADD_SCHEDULE_ITEM, schedule_item: schedule_item };\r\n}\r\n\r\nexport function editScheduleItem(schedule_item: IScheduleItem): IEditScheduleItemActionType {\r\n    return { type: EDIT_SCHEDULE_ITEM, schedule_item: schedule_item };\r\n}\r\n\r\nexport function removeScheduleItem(id: any): IRemoveScheduleItemActionType {\r\n    return { type: REMOVE_SCHEDULE_ITEM, id: id };\r\n}\r\n\r\nexport function changeSelectedScheduleItem(schedule_item: IScheduleItem): IChangeSelectedScheduleItemActionType {\r\n    return { type: CHANGE_SCHEDULE_ITEM_PENDING_EDIT, schedule_item: schedule_item };\r\n}\r\n\r\nexport function clearSelectedScheduleItem(): IClearSelectedScheduleItemActionType {\r\n    return { type: CLEAR_SCHEDULE_ITEM_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ScheduleItemModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddScheduleItemActionType { type: string, schedule_item: IScheduleItem };\r\ninterface IEditScheduleItemActionType { type: string, schedule_item: IScheduleItem };\r\ninterface IRemoveScheduleItemActionType { type: string, id: any };\r\ninterface IChangeSelectedScheduleItemActionType { type: string, schedule_item: IScheduleItem };\r\ninterface IClearSelectedScheduleItemActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ScheduleItemModificationStatus};\r\ninterface IRemoveScheduleItemAllActionType { type: string }\r\ninterface IInitialScheduleItemActionType {type: string, schedule_item: IScheduleItem}","import { IScheduleItemState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SCHEDULE_ITEM, CHANGE_SCHEDULE_ITEM_PENDING_EDIT, EDIT_SCHEDULE_ITEM, REMOVE_SCHEDULE_ITEM,\r\n    CLEAR_SCHEDULE_ITEM_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SCHEDULE_ITEM, REMOVE_SCHEDULE_ITEM_ALL} from \"../actions/schedule_item.action\";\r\nimport { IScheduleItem, ScheduleItemModificationStatus } from \"../models/schedule_item.interface\";\r\n\r\n\r\n\r\nconst initialState: IScheduleItemState = {\r\n    modificationState: ScheduleItemModificationStatus.None,\r\n    selectedScheduleItem: null,\r\n    schedule_items: []\r\n};\r\n\r\nfunction schedule_itemsReducer(state: IScheduleItemState = initialState, action: IActionBase): IScheduleItemState {\r\n    switch (action.type) {\r\n        case INITIAL_SCHEDULE_ITEM: {\r\n            return { ...state, schedule_items : [...state.schedule_items, action.schedule_item]};\r\n        }\r\n        case ADD_SCHEDULE_ITEM: {\r\n            return { ...state, schedule_items: [...state.schedule_items, action.schedule_item]};\r\n        }\r\n        case EDIT_SCHEDULE_ITEM: {\r\n            const foundIndex: number = state.schedule_items.findIndex(pr => pr.id === action.schedule_item.id);\r\n            let schedule_items: IScheduleItem[] = state.schedule_items;\r\n            schedule_items[foundIndex] = action.schedule_item;\r\n            return { ...state, schedule_items: schedule_items };\r\n        }\r\n        case REMOVE_SCHEDULE_ITEM: {\r\n            return { ...state, schedule_items: state.schedule_items.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SCHEDULE_ITEM_ALL: {\r\n            return { ...state, schedule_items: [] };\r\n        }\r\n        case CHANGE_SCHEDULE_ITEM_PENDING_EDIT: {\r\n            return { ...state, selectedScheduleItem: action.schedule_item };\r\n        }\r\n        case CLEAR_SCHEDULE_ITEM_PENDING_EDIT: {\r\n            return { ...state, selectedScheduleItem: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default schedule_itemsReducer;","import { IArtTypeState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_ART_TYPE, CHANGE_ART_TYPE_PENDING_EDIT, EDIT_ART_TYPE, REMOVE_ART_TYPE,\r\n    CLEAR_ART_TYPE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_ART_TYPE, REMOVE_ART_TYPE_ALL} from \"../actions/art_type.action\";\r\nimport { IArtType, ArtTypeModificationStatus } from \"../models/art_type.interface\";\r\n\r\n\r\n\r\nconst initialState: IArtTypeState = {\r\n    modificationState: ArtTypeModificationStatus.None,\r\n    selectedArtType: null,\r\n    artTypes: []\r\n};\r\n\r\nfunction artTypesReducer(state: IArtTypeState = initialState, action: IActionBase): IArtTypeState {\r\n    switch (action.type) {\r\n        case INITIAL_ART_TYPE: {\r\n            return { ...state, artTypes : [...state.artTypes, action.art_type]};\r\n        }\r\n        case ADD_ART_TYPE: {\r\n            return { ...state, artTypes: [...state.artTypes, action.art_type]};\r\n        }\r\n        case EDIT_ART_TYPE: {\r\n            const foundIndex: number = state.artTypes.findIndex(pr => pr.id === action.art_type.id);\r\n            let artTypes: IArtType[] = state.artTypes;\r\n            artTypes[foundIndex] = action.art_type;\r\n            return { ...state, artTypes: artTypes };\r\n        }\r\n        case REMOVE_ART_TYPE: {\r\n            return { ...state, artTypes: state.artTypes.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_ART_TYPE_ALL: {\r\n            return { ...state, artTypes: [] };\r\n        }\r\n        case CHANGE_ART_TYPE_PENDING_EDIT: {\r\n            return { ...state, selectedArtType: action.art_type };\r\n        }\r\n        case CLEAR_ART_TYPE_PENDING_EDIT: {\r\n            return { ...state, selectedArtType: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default artTypesReducer;","import { IArtLevelState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_ART_LEVEL, CHANGE_ART_LEVEL_PENDING_EDIT, EDIT_ART_LEVEL, REMOVE_ART_LEVEL,\r\n    CLEAR_ART_LEVEL_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_ART_LEVEL, REMOVE_ART_LEVEL_ALL} from \"../actions/art_level.action\";\r\nimport { IArtLevel, ArtLevelModificationStatus } from \"../models/art_level.interface\";\r\n\r\n\r\n\r\nconst initialState: IArtLevelState = {\r\n    modificationState: ArtLevelModificationStatus.None,\r\n    selectedArtLevel: null,\r\n    artLevels: []\r\n};\r\n\r\nfunction artLevelsReducer(state: IArtLevelState = initialState, action: IActionBase): IArtLevelState {\r\n    switch (action.type) {\r\n        case INITIAL_ART_LEVEL: {\r\n            return { ...state, artLevels : [...state.artLevels, action.art_level]};\r\n        }\r\n        case ADD_ART_LEVEL: {\r\n            return { ...state, artLevels: [...state.artLevels, action.art_level]};\r\n        }\r\n        case EDIT_ART_LEVEL: {\r\n            const foundIndex: number = state.artLevels.findIndex(pr => pr.id === action.art_level.id);\r\n            let artLevels: IArtLevel[] = state.artLevels;\r\n            artLevels[foundIndex] = action.art_level;\r\n            return { ...state, artLevels: artLevels };\r\n        }\r\n        case REMOVE_ART_LEVEL: {\r\n            return { ...state, artLevels: state.artLevels.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_ART_LEVEL_ALL: {\r\n            return { ...state, artLevels: [] };\r\n        }\r\n        case CHANGE_ART_LEVEL_PENDING_EDIT: {\r\n            return { ...state, selectedArtLevel: action.art_level };\r\n        }\r\n        case CLEAR_ART_LEVEL_PENDING_EDIT: {\r\n            return { ...state, selectedArtLevel: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default artLevelsReducer;","import { IArtAgeState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_ART_AGE, CHANGE_ART_AGE_PENDING_EDIT, EDIT_ART_AGE, REMOVE_ART_AGE,\r\n    CLEAR_ART_AGE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_ART_AGE, REMOVE_ART_AGE_ALL} from \"../actions/art_age.action\";\r\nimport { IArtAge, ArtAgeModificationStatus } from \"../models/art_age.interface\";\r\n\r\n\r\n\r\nconst initialState: IArtAgeState = {\r\n    modificationState: ArtAgeModificationStatus.None,\r\n    selectedArtAge: null,\r\n    artAges: []\r\n};\r\n\r\nfunction artAgesReducer(state: IArtAgeState = initialState, action: IActionBase): IArtAgeState {\r\n    switch (action.type) {\r\n        case INITIAL_ART_AGE: {\r\n            return { ...state, artAges : [...state.artAges, action.art_age]};\r\n        }\r\n        case ADD_ART_AGE: {\r\n            return { ...state, artAges: [...state.artAges, action.art_age]};\r\n        }\r\n        case EDIT_ART_AGE: {\r\n            const foundIndex: number = state.artAges.findIndex(pr => pr.id === action.art_age.id);\r\n            let artAges: IArtAge[] = state.artAges;\r\n            artAges[foundIndex] = action.art_age;\r\n            return { ...state, artAges: artAges };\r\n        }\r\n        case REMOVE_ART_AGE: {\r\n            return { ...state, artAges: state.artAges.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_ART_AGE_ALL: {\r\n            return { ...state, artAges: [] };\r\n        }\r\n        case CHANGE_ART_AGE_PENDING_EDIT: {\r\n            return { ...state, selectedArtAge: action.art_age };\r\n        }\r\n        case CLEAR_ART_AGE_PENDING_EDIT: {\r\n            return { ...state, selectedArtAge: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default artAgesReducer;","import { ICourseState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_COURSE, CHANGE_COURSE_PENDING_EDIT, EDIT_COURSE, REMOVE_COURSE,\r\n    CLEAR_COURSE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_COURSE, REMOVE_COURSE_ALL} from \"../actions/course.action\";\r\nimport { ICourse, CourseModificationStatus } from \"../models/course.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseState = {\r\n    modificationState: CourseModificationStatus.None,\r\n    selectedCourse: null,\r\n    courses: []\r\n};\r\n\r\nfunction coursesReducer(state: ICourseState = initialState, action: IActionBase): ICourseState {\r\n    switch (action.type) {\r\n        case INITIAL_COURSE: {\r\n            return { ...state, courses : [...state.courses, action.course]};\r\n        }\r\n        case ADD_COURSE: {\r\n            return { ...state, courses: [...state.courses, action.course]};\r\n        }\r\n        case EDIT_COURSE: {\r\n            const foundIndex: number = state.courses.findIndex(pr => pr.id === action.course.id);\r\n            let courses: ICourse[] = state.courses;\r\n            courses[foundIndex] = action.course;\r\n            return { ...state, courses: courses };\r\n        }\r\n        case REMOVE_COURSE: {\r\n            return { ...state, courses: state.courses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_COURSE_ALL: {\r\n            return { ...state, courses: [] };\r\n        }\r\n        case CHANGE_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourse: action.course };\r\n        }\r\n        case CLEAR_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourse: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default coursesReducer;","import { IContestState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CONTEST_OPENING, CHANGE_CONTEST_OPENING_PENDING_EDIT, EDIT_CONTEST_OPENING, REMOVE_CONTEST_OPENING,\r\n    CLEAR_CONTEST_OPENING_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_CONTEST_OPENING, REMOVE_CONTEST_OPENING_ALL, INITIAL_CONTEST_END, EDIT_CONTEST_END, ADD_CONTEST_END, REMOVE_CONTEST_END, REMOVE_CONTEST_END_ALL, CHANGE_CONTEST_END_PENDING_EDIT, CLEAR_CONTEST_END_PENDING_EDIT, INITIAL_CONTEST_NOT_OPEN_NOW, ADD_CONTEST_NOT_OPEN_NOW, EDIT_CONTEST_NOT_OPEN_NOW, REMOVE_CONTEST_NOT_OPEN_NOW, REMOVE_CONTEST_NOT_OPEN_NOW_ALL, CHANGE_CONTEST_NOT_OPEN_NOW_PENDING_EDIT, CLEAR_CONTEST_NOT_OPEN_NOW_PENDING_EDIT} from \"../actions/contest.action\";\r\nimport { IContest, ContestModificationStatus } from \"../models/contest.interface\";\r\n\r\n\r\n\r\nconst initialState: IContestState = {\r\n    modificationState: ContestModificationStatus.None,\r\n    selectedContest: null,\r\n    contest_opening: [],\r\n    contest_not_open_now: [],\r\n    contest_end: []\r\n};\r\n\r\nfunction contestsReducer(state: IContestState = initialState, action: IActionBase): IContestState {\r\n    switch (action.type) {\r\n        case INITIAL_CONTEST_OPENING: {\r\n            return { ...state, contest_opening : [...state.contest_opening, action.contest]};\r\n        }\r\n        case ADD_CONTEST_OPENING: {\r\n            return { ...state, contest_opening: [...state.contest_opening, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_OPENING: {\r\n            const foundIndex: number = state.contest_opening.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_opening: IContest[] = state.contest_opening;\r\n            contest_opening[foundIndex] = action.contest;\r\n            return { ...state, contest_opening: contest_opening };\r\n        }\r\n        case REMOVE_CONTEST_OPENING: {\r\n            return { ...state, contest_opening: state.contest_opening.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_OPENING_ALL: {\r\n            return { ...state, contest_opening: [] };\r\n        }\r\n        case CHANGE_CONTEST_OPENING_PENDING_EDIT: {\r\n            return { ...state, selectedContest: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_OPENING_PENDING_EDIT: {\r\n            return { ...state, selectedContest: null };\r\n        }\r\n\r\n\r\n        case INITIAL_CONTEST_END: {\r\n            return { ...state, contest_end : [...state.contest_end, action.contest]};\r\n        }\r\n        case ADD_CONTEST_END: {\r\n            return { ...state, contest_end: [...state.contest_end, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_END: {\r\n            const foundIndex: number = state.contest_end.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_end: IContest[] = state.contest_end;\r\n            contest_end[foundIndex] = action.contest;\r\n            return { ...state, contest_end: contest_end };\r\n        }\r\n        case REMOVE_CONTEST_END: {\r\n            return { ...state, contest_end: state.contest_end.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_END_ALL: {\r\n            return { ...state, contest_end: [] };\r\n        }\r\n        case CHANGE_CONTEST_END_PENDING_EDIT: {\r\n            return { ...state, selectedContest: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_END_PENDING_EDIT: {\r\n            return { ...state, selectedContest: null };\r\n        }\r\n\r\n\r\n\r\n        case INITIAL_CONTEST_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now : [...state.contest_not_open_now, action.contest]};\r\n        }\r\n        case ADD_CONTEST_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now: [...state.contest_not_open_now, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_NOT_OPEN_NOW: {\r\n            const foundIndex: number = state.contest_not_open_now.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_not_open_now: IContest[] = state.contest_not_open_now;\r\n            contest_not_open_now[foundIndex] = action.contest;\r\n            return { ...state, contest_not_open_now: contest_not_open_now };\r\n        }\r\n        case REMOVE_CONTEST_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now: state.contest_not_open_now.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_NOT_OPEN_NOW_ALL: {\r\n            return { ...state, contest_not_open_now: [] };\r\n        }\r\n        case CHANGE_CONTEST_NOT_OPEN_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedContest: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_NOT_OPEN_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedContest: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default contestsReducer;","import { ISectionTemplateState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SECTION_TEMPLATE, CHANGE_SECTION_TEMPLATE_PENDING_EDIT, EDIT_SECTION_TEMPLATE, REMOVE_SECTION_TEMPLATE,\r\n    CLEAR_SECTION_TEMPLATE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SECTION_TEMPLATE, REMOVE_SECTION_TEMPLATE_ALL} from \"../actions/section_template.action\";\r\nimport { ISectionTemplate, SectionTemplateModificationStatus } from \"../models/section_template.interface\";\r\n\r\n\r\n\r\nconst initialState: ISectionTemplateState = {\r\n    modificationState: SectionTemplateModificationStatus.None,\r\n    selectedSectionTemplate: null,\r\n    sectionTemplates: []\r\n};\r\n\r\nfunction sectionTemplatesReducer(state: ISectionTemplateState = initialState, action: IActionBase): ISectionTemplateState {\r\n    switch (action.type) {\r\n        case INITIAL_SECTION_TEMPLATE: {\r\n            return { ...state, sectionTemplates : [...state.sectionTemplates, action.section_template]};\r\n        }\r\n        case ADD_SECTION_TEMPLATE: {\r\n            return { ...state, sectionTemplates: [...state.sectionTemplates, action.section_template]};\r\n        }\r\n        case EDIT_SECTION_TEMPLATE: {\r\n            const foundIndex: number = state.sectionTemplates.findIndex(pr => pr.id === action.section_template.id);\r\n            let sectionTemplates: ISectionTemplate[] = state.sectionTemplates;\r\n            sectionTemplates[foundIndex] = action.section_template;\r\n            return { ...state, sectionTemplates: sectionTemplates };\r\n        }\r\n        case REMOVE_SECTION_TEMPLATE: {\r\n            return { ...state, sectionTemplates: state.sectionTemplates.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SECTION_TEMPLATE_ALL: {\r\n            return { ...state, sectionTemplates: [] };\r\n        }\r\n        case CHANGE_SECTION_TEMPLATE_PENDING_EDIT: {\r\n            return { ...state, selectedSectionTemplate: action.section_template };\r\n        }\r\n        case CLEAR_SECTION_TEMPLATE_PENDING_EDIT: {\r\n            return { ...state, selectedSectionTemplate: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default sectionTemplatesReducer;","export interface ITutorialTemplate {\r\n    id: any;\r\n    section_template_id: number;\r\n    name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum TutorialTemplateModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITutorialTemplateState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TUTORIAL_TEMPLATE, CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT, EDIT_TUTORIAL_TEMPLATE, REMOVE_TUTORIAL_TEMPLATE,\r\n    CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TUTORIAL_TEMPLATE, REMOVE_TUTORIAL_TEMPLATE_ALL} from \"../actions/tutorial_template.action\";\r\nimport { ITutorialTemplate, TutorialTemplateModificationStatus } from \"../models/tutorial_template.interface\";\r\n\r\n\r\n\r\nconst initialState: ITutorialTemplateState = {\r\n    modificationState: TutorialTemplateModificationStatus.None,\r\n    selectedTutorialTemplate: null,\r\n    tutorialTemplates: []\r\n};\r\n\r\nfunction tutorialTemplatesReducer(state: ITutorialTemplateState = initialState, action: IActionBase): ITutorialTemplateState {\r\n    switch (action.type) {\r\n        case INITIAL_TUTORIAL_TEMPLATE: {\r\n            return { ...state, tutorialTemplates : [...state.tutorialTemplates, action.tutorial_template]};\r\n        }\r\n        case ADD_TUTORIAL_TEMPLATE: {\r\n            return { ...state, tutorialTemplates: [...state.tutorialTemplates, action.tutorial_template]};\r\n        }\r\n        case EDIT_TUTORIAL_TEMPLATE: {\r\n            const foundIndex: number = state.tutorialTemplates.findIndex(pr => pr.id === action.tutorial_template.id);\r\n            let tutorialTemplates: ITutorialTemplate[] = state.tutorialTemplates;\r\n            tutorialTemplates[foundIndex] = action.tutorial_template;\r\n            return { ...state, tutorialTemplates: tutorialTemplates };\r\n        }\r\n        case REMOVE_TUTORIAL_TEMPLATE: {\r\n            return { ...state, tutorialTemplates: state.tutorialTemplates.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_TUTORIAL_TEMPLATE_ALL: {\r\n            return { ...state, tutorialTemplates: [] };\r\n        }\r\n        case CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT: {\r\n            return { ...state, selectedTutorialTemplate: action.tutorial_template };\r\n        }\r\n        case CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT: {\r\n            return { ...state, selectedTutorialTemplate: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default tutorialTemplatesReducer;","export interface IUserGradeContest {\r\n    id: any;\r\n    contest_id: number;\r\n    teacher_id: number;\r\n    teacher_name: string;\r\n    contest_name: string;\r\n}\r\n\r\nexport enum UserGradeContestModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IUserGradeContestState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TUTORIAL_TEMPLATE, CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT, EDIT_TUTORIAL_TEMPLATE, REMOVE_TUTORIAL_TEMPLATE,\r\n    CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TUTORIAL_TEMPLATE, REMOVE_TUTORIAL_TEMPLATE_ALL} from \"../actions/user_grade_contest.action\";\r\nimport { IUserGradeContest, UserGradeContestModificationStatus } from \"../models/user_grade_contest.interface\";\r\n\r\n\r\n\r\nconst initialState: IUserGradeContestState = {\r\n    modificationState: UserGradeContestModificationStatus.None,\r\n    selectedUserGradeContest: null,\r\n    userGradeContests: []\r\n};\r\n\r\nfunction userGradeContestsReducer(state: IUserGradeContestState = initialState, action: IActionBase): IUserGradeContestState {\r\n    switch (action.type) {\r\n        case INITIAL_TUTORIAL_TEMPLATE: {\r\n            return { ...state, userGradeContests : [...state.userGradeContests, action.user_grade_contest]};\r\n        }\r\n        case ADD_TUTORIAL_TEMPLATE: {\r\n            return { ...state, userGradeContests: [...state.userGradeContests, action.user_grade_contest]};\r\n        }\r\n        case EDIT_TUTORIAL_TEMPLATE: {\r\n            const foundIndex: number = state.userGradeContests.findIndex(pr => pr.id === action.user_grade_contest.id);\r\n            let userGradeContests: IUserGradeContest[] = state.userGradeContests;\r\n            userGradeContests[foundIndex] = action.user_grade_contest;\r\n            return { ...state, userGradeContests: userGradeContests };\r\n        }\r\n        case REMOVE_TUTORIAL_TEMPLATE: {\r\n            return { ...state, userGradeContests: state.userGradeContests.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_TUTORIAL_TEMPLATE_ALL: {\r\n            return { ...state, userGradeContests: [] };\r\n        }\r\n        case CHANGE_TUTORIAL_TEMPLATE_PENDING_EDIT: {\r\n            return { ...state, selectedUserGradeContest: action.user_grade_contest };\r\n        }\r\n        case CLEAR_TUTORIAL_TEMPLATE_PENDING_EDIT: {\r\n            return { ...state, selectedUserGradeContest: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default userGradeContestsReducer;","export interface ITutorialTemplatePage {\r\n    id: any;\r\n    section_template_id: number;\r\n    description: string;\r\n    number: number;\r\n}\r\n\r\nexport enum TutorialTemplatePageModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITutorialTemplatePageState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TUTORIAL_TEMPLATE_PAGE, CHANGE_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT, EDIT_TUTORIAL_TEMPLATE_PAGE, REMOVE_TUTORIAL_TEMPLATE_PAGE,\r\n    CLEAR_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TUTORIAL_TEMPLATE_PAGE, REMOVE_TUTORIAL_TEMPLATE_PAGE_ALL} from \"../actions/tutorial_template_page.action\";\r\nimport { ITutorialTemplatePage, TutorialTemplatePageModificationStatus } from \"../models/tutorial_template_page.interface\";\r\n\r\n\r\n\r\nconst initialState: ITutorialTemplatePageState = {\r\n    modificationState: TutorialTemplatePageModificationStatus.None,\r\n    selectedTutorialTemplatePage: null,\r\n    tutorialTemplatePages: []\r\n};\r\n\r\nfunction tutorialTemplatePagesReducer(state: ITutorialTemplatePageState = initialState, action: IActionBase): ITutorialTemplatePageState {\r\n    switch (action.type) {\r\n        case INITIAL_TUTORIAL_TEMPLATE_PAGE: {\r\n            return { ...state, tutorialTemplatePages : [...state.tutorialTemplatePages, action.tutorial_template_page]};\r\n        }\r\n        case ADD_TUTORIAL_TEMPLATE_PAGE: {\r\n            return { ...state, tutorialTemplatePages: [...state.tutorialTemplatePages, action.tutorial_template_page]};\r\n        }\r\n        case EDIT_TUTORIAL_TEMPLATE_PAGE: {\r\n            const foundIndex: number = state.tutorialTemplatePages.findIndex(pr => pr.id === action.tutorial_template_page.id);\r\n            let tutorialTemplatePages: ITutorialTemplatePage[] = state.tutorialTemplatePages;\r\n            tutorialTemplatePages[foundIndex] = action.tutorial_template_page;\r\n            return { ...state, tutorialTemplatePages: tutorialTemplatePages };\r\n        }\r\n        case REMOVE_TUTORIAL_TEMPLATE_PAGE: {\r\n            return { ...state, tutorialTemplatePages: state.tutorialTemplatePages.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_TUTORIAL_TEMPLATE_PAGE_ALL: {\r\n            return { ...state, tutorialTemplatePages: [] };\r\n        }\r\n        case CHANGE_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT: {\r\n            return { ...state, selectedTutorialTemplatePage: action.tutorial_template_page };\r\n        }\r\n        case CLEAR_TUTORIAL_TEMPLATE_PAGE_PENDING_EDIT: {\r\n            return { ...state, selectedTutorialTemplatePage: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default tutorialTemplatePagesReducer;","export interface ITeacherLeave {\r\n    id: any;\r\n    section_id: number;\r\n    section_name: string;\r\n    class_id: number;\r\n    class_name: string;\r\n    teacher_id: number;\r\n    teacher_name: string;\r\n    section_number: number;\r\n    reviewer_id: number;\r\n    start_time: string;\r\n    end_time: string;\r\n    substitute_teacher_id: number;\r\n    substitute_teacher_name: string;\r\n    description: string;\r\n    status: string;\r\n    time_approved: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum TeacherLeaveModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITeacherLeaveState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_LEAVES, EDIT_LEAVES, REMOVE_LEAVES,INITIAL_LEAVES, REMOVE_LEAVES_ALL, \r\n    ADD_ACCEPT_LEAVE, EDIT_ACCEPT_LEAVE, REMOVE_ACCEPT_LEAVE, INITIAL_ACCEPT_LEAVE, REMOVE_ACCEPT_LEAVE_ALL, \r\n    ADD_REMOVE_LEAVE, EDIT_REMOVE_LEAVE, REMOVE_REMOVE_LEAVE , INITIAL_REMOVE_LEAVE, REMOVE_REMOVE_LEAVE_ALL,\r\n    CHANGE_USER_PENDING_EDIT, CLEAR_USER_PENDING_EDIT, SET_MODIFICATION_STATE\r\n\r\n} from \"../actions/teacher_leave.action\";\r\nimport { ITeacherLeave, TeacherLeaveModificationStatus } from \"../models/teacher_leave.interface\";\r\n\r\nconst initialState: ITeacherLeaveState = {\r\n    modificationState: TeacherLeaveModificationStatus.None,\r\n    selectedTeacherLeave: null,\r\n    leaves: [],\r\n    acceptLeaves: [],\r\n    removeLeaves: []\r\n};\r\n\r\nfunction teacherLeaveReducer(state: ITeacherLeaveState = initialState, action: IActionBase): ITeacherLeaveState {\r\n    switch (action.type) {\r\n        case INITIAL_LEAVES: {\r\n            return { ...state, leaves : [...state.leaves, action.teacher_leave]};\r\n        }\r\n        case REMOVE_LEAVES_ALL: {\r\n            return { ...state, leaves: [] };\r\n        }\r\n        case ADD_LEAVES: {\r\n            return { ...state, leaves: [...state.leaves, action.teacher_leave]};\r\n        }\r\n        case EDIT_LEAVES: {\r\n            const foundIndex: number = state.leaves.findIndex(pr => pr.id === action.teacher_leave.id);\r\n            let leavess: ITeacherLeave[] = state.leaves;\r\n            leavess[foundIndex] = action.teacher_leave;\r\n            return { ...state, leaves: leavess };\r\n        }\r\n        case REMOVE_LEAVES: {\r\n            return { ...state, leaves: state.leaves.filter(x=>x.id !== action.teacher_leave.id)};\r\n        }\r\n\r\n        case INITIAL_ACCEPT_LEAVE: {\r\n            return { ...state, acceptLeaves : [...state.acceptLeaves, action.teacher_leave]};\r\n        }\r\n        case REMOVE_ACCEPT_LEAVE_ALL: {\r\n            return { ...state, acceptLeaves: [] };\r\n        }\r\n        case ADD_ACCEPT_LEAVE: {\r\n            return { ...state, acceptLeaves: [...state.acceptLeaves, action.teacher_leave]};\r\n        }\r\n        case EDIT_ACCEPT_LEAVE: {\r\n            const foundIndex: number = state.acceptLeaves.findIndex(pr => pr.id === action.teacher_leave.id);\r\n            let accept_leaves: ITeacherLeave[] = state.acceptLeaves;\r\n            accept_leaves[foundIndex] = action.teacher_leave;\r\n            return { ...state, acceptLeaves: accept_leaves };\r\n        }\r\n        case REMOVE_ACCEPT_LEAVE: {\r\n            return { ...state, acceptLeaves: state.acceptLeaves.filter(x=>x.id !== action.teacher_leave.id)};\r\n        }\r\n\r\n        case INITIAL_REMOVE_LEAVE: {\r\n            return { ...state, removeLeaves : [...state.removeLeaves, action.teacher_leave]};\r\n        }\r\n        case REMOVE_REMOVE_LEAVE_ALL: {\r\n            return { ...state, removeLeaves: [] };\r\n        }\r\n        case ADD_REMOVE_LEAVE: {\r\n            return { ...state, removeLeaves: [...state.removeLeaves, action.teacher_leave]};\r\n        }\r\n        case EDIT_REMOVE_LEAVE: {\r\n            const foundIndex: number = state.removeLeaves.findIndex(pr => pr.id === action.teacher_leave.id);\r\n            let remove_leaves: ITeacherLeave[] = state.removeLeaves;\r\n            remove_leaves[foundIndex] = action.teacher_leave;\r\n            return { ...state, removeLeaves: remove_leaves };\r\n        }\r\n        case REMOVE_REMOVE_LEAVE: {\r\n            return { ...state, removeLeaves: state.removeLeaves.filter(x=>x.id !== action.teacher_leave.id)};\r\n        }\r\n        \r\n        case CHANGE_USER_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherLeave: action.teacher_leave };\r\n        }\r\n        case CLEAR_USER_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherLeave: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default teacherLeaveReducer;","import { IStudentLeaveState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_STUDENT_LEAVE_NOT_APPROVED_NOW, EDIT_STUDENT_LEAVE_NOT_APPROVED_NOW, REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW,INITIAL_STUDENT_LEAVE_NOT_APPROVED_NOW, REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW_ALL, \r\n    ADD_STUDENT_LEAVE_APPROVED, EDIT_STUDENT_LEAVE_APPROVED, REMOVE_STUDENT_LEAVE_APPROVED, INITIAL_STUDENT_LEAVE_APPROVED, REMOVE_STUDENT_LEAVE_APPROVED_ALL, \r\n    ADD_STUDENT_LEAVE_NOT_APPROVED, EDIT_STUDENT_LEAVE_NOT_APPROVED, REMOVE_STUDENT_LEAVE_NOT_APPROVED , INITIAL_STUDENT_LEAVE_NOT_APPROVED, REMOVE_STUDENT_LEAVE_NOT_APPROVED_ALL,\r\n    CLEAR_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT, CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT, SET_MODIFICATION_STATE\r\n\r\n} from \"../actions/student_leave.action\";\r\nimport { IStudentLeave, StudentLeaveModificationStatus } from \"../models/student_leave.interface\";\r\n\r\nconst initialState: IStudentLeaveState = {\r\n    modificationState: StudentLeaveModificationStatus.None,\r\n    selectedStudentLeave: null,\r\n    leaves: [],\r\n    acceptLeaves: [],\r\n    removeLeaves: []\r\n};\r\n\r\nfunction studentLeaveReducer(state: IStudentLeaveState = initialState, action: IActionBase): IStudentLeaveState {\r\n    switch (action.type) {\r\n        case INITIAL_STUDENT_LEAVE_NOT_APPROVED_NOW: {\r\n            return { ...state, leaves : [...state.leaves, action.student_leave]};\r\n        }\r\n        case REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW_ALL: {\r\n            return { ...state, leaves: [] };\r\n        }\r\n        case ADD_STUDENT_LEAVE_NOT_APPROVED_NOW: {\r\n            return { ...state, leaves: [...state.leaves, action.student_leave]};\r\n        }\r\n        case EDIT_STUDENT_LEAVE_NOT_APPROVED_NOW: {\r\n            const foundIndex: number = state.leaves.findIndex(pr => pr.id === action.student_leave.id);\r\n            let leavess: IStudentLeave[] = state.leaves;\r\n            leavess[foundIndex] = action.student_leave;\r\n            return { ...state, leaves: leavess };\r\n        }\r\n        case REMOVE_STUDENT_LEAVE_NOT_APPROVED_NOW: {\r\n            return { ...state, leaves: state.leaves.filter(x=>x.id !== action.student_leave.id)};\r\n        }\r\n\r\n        case INITIAL_STUDENT_LEAVE_APPROVED: {\r\n            return { ...state, acceptLeaves : [...state.acceptLeaves, action.student_leave]};\r\n        }\r\n        case REMOVE_STUDENT_LEAVE_APPROVED_ALL: {\r\n            return { ...state, acceptLeaves: [] };\r\n        }\r\n        case ADD_STUDENT_LEAVE_APPROVED: {\r\n            return { ...state, acceptLeaves: [...state.acceptLeaves, action.student_leave]};\r\n        }\r\n        case EDIT_STUDENT_LEAVE_APPROVED: {\r\n            const foundIndex: number = state.acceptLeaves.findIndex(pr => pr.id === action.student_leave.id);\r\n            let accept_leaves: IStudentLeave[] = state.acceptLeaves;\r\n            accept_leaves[foundIndex] = action.student_leave;\r\n            return { ...state, acceptLeaves: accept_leaves };\r\n        }\r\n        case REMOVE_STUDENT_LEAVE_APPROVED: {\r\n            return { ...state, acceptLeaves: state.acceptLeaves.filter(x=>x.id !== action.student_leave.id)};\r\n        }\r\n\r\n        case INITIAL_STUDENT_LEAVE_NOT_APPROVED: {\r\n            return { ...state, removeLeaves : [...state.removeLeaves, action.student_leave]};\r\n        }\r\n        case REMOVE_STUDENT_LEAVE_NOT_APPROVED_ALL: {\r\n            return { ...state, removeLeaves: [] };\r\n        }\r\n        case ADD_STUDENT_LEAVE_NOT_APPROVED: {\r\n            return { ...state, removeLeaves: [...state.removeLeaves, action.student_leave]};\r\n        }\r\n        case EDIT_STUDENT_LEAVE_NOT_APPROVED: {\r\n            const foundIndex: number = state.removeLeaves.findIndex(pr => pr.id === action.student_leave.id);\r\n            let remove_leaves: IStudentLeave[] = state.removeLeaves;\r\n            remove_leaves[foundIndex] = action.student_leave;\r\n            return { ...state, removeLeaves: remove_leaves };\r\n        }\r\n        case REMOVE_STUDENT_LEAVE_NOT_APPROVED: {\r\n            return { ...state, removeLeaves: state.removeLeaves.filter(x=>x.id !== action.student_leave.id)};\r\n        }\r\n        \r\n        case CHANGE_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedStudentLeave: action.student_leave };\r\n        }\r\n        case CLEAR_STUDENT_LEAVE_NOT_APPROVED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedStudentLeave: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default studentLeaveReducer;","import { IMyClassState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_MY_CLASS, CHANGE_MY_CLASS_PENDING_EDIT, EDIT_MY_CLASS, REMOVE_MY_CLASS,\r\n    CLEAR_MY_CLASS_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_MY_CLASS, REMOVE_MY_CLASS_ALL} from \"../actions/my_class.action\";\r\nimport { IMyClass, MyClassModificationStatus } from \"../models/my_class.interface\";\r\n\r\n\r\n\r\nconst initialState: IMyClassState = {\r\n    modificationState: MyClassModificationStatus.None,\r\n    selectedMyClass: null,\r\n    myClasses: []\r\n};\r\n\r\nfunction myClassesReducer(state: IMyClassState = initialState, action: IActionBase): IMyClassState {\r\n    switch (action.type) {\r\n        case INITIAL_MY_CLASS: {\r\n            return { ...state, myClasses : [...state.myClasses, action.myclass]};\r\n        }\r\n        case ADD_MY_CLASS: {\r\n            return { ...state, myClasses: [...state.myClasses, action.myclass]};\r\n        }\r\n        case EDIT_MY_CLASS: {\r\n            const foundIndex: number = state.myClasses.findIndex(pr => pr.id === action.myclass.id);\r\n            let myClasses: IMyClass[] = state.myClasses;\r\n            myClasses[foundIndex] = action.myclass;\r\n            return { ...state, myClasses: myClasses };\r\n        }\r\n        case REMOVE_MY_CLASS: {\r\n            return { ...state, myClasses: state.myClasses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_MY_CLASS_ALL: {\r\n            return { ...state, myClasses: [] };\r\n        }\r\n        case CHANGE_MY_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedMyClass: action.myclass };\r\n        }\r\n        case CLEAR_MY_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedMyClass: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default myClassesReducer;","import { ITeacherRegisterQuantificationState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TEACHER_REGISTER_QUANTIFICATION_APPROVED, CHANGE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT, \r\n    EDIT_TEACHER_REGISTER_QUANTIFICATION_APPROVED, REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED,\r\n    CLEAR_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT,INITIAL_TEACHER_REGISTER_QUANTIFICATION_APPROVED, \r\n    REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_ALL,  \r\n    ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED, CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT, \r\n    EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED, REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED,\r\n    CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT,INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED, \r\n    REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_ALL,  \r\n    ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW, CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT, \r\n    EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW, REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW,\r\n    CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT,INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW, \r\n    REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_ALL, \r\n    SET_MODIFICATION_STATE} from \"../actions/teacher_register_quantification.action\";\r\nimport { ITeacherRegisterQuantification, TeacherRegisterQuantificationModificationStatus } from \"../models/teacher_register_quantification.interface\";\r\n\r\n\r\n\r\nconst initialState: ITeacherRegisterQuantificationState = {\r\n    modificationState: TeacherRegisterQuantificationModificationStatus.None,\r\n    selectedTeacherRegisterQuantification: null,\r\n    approveds: [],\r\n    not_approved_now: [],\r\n    not_approves: []\r\n};\r\n\r\nfunction teacher_register_quantificationsReducer(state: ITeacherRegisterQuantificationState = initialState, action: IActionBase): ITeacherRegisterQuantificationState {\r\n    switch (action.type) {\r\n        case INITIAL_TEACHER_REGISTER_QUANTIFICATION_APPROVED: {\r\n            return { ...state, approveds : [...state.approveds, action.teacher_register_quantification_approved]};\r\n        }\r\n        case ADD_TEACHER_REGISTER_QUANTIFICATION_APPROVED: {\r\n            return { ...state, approveds : [...state.approveds, action.teacher_register_quantification_approved]};\r\n        }\r\n        case EDIT_TEACHER_REGISTER_QUANTIFICATION_APPROVED: {\r\n            const foundIndex: number = state.approveds.findIndex(pr => pr.id === action.teacher_register_quantification_approved.id);\r\n            let approveds: ITeacherRegisterQuantification[] = state.approveds;\r\n            approveds[foundIndex] = action.teacher_register_quantification_approved;\r\n            return { ...state, approveds: approveds };\r\n        }\r\n        case REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED: {\r\n            return { ...state, approveds: state.approveds.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_ALL: {\r\n            return { ...state, approveds: [] };\r\n        }\r\n        case CHANGE_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherRegisterQuantification: action.teacher_register_quantification_approved };\r\n        }\r\n        case CLEAR_TEACHER_REGISTER_QUANTIFICATION_APPROVED_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherRegisterQuantification: null };\r\n        }\r\n\r\n        case INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: {\r\n            return { ...state, not_approves : [...state.not_approves, action.teacher_register_quantification_not_approved]};\r\n        }\r\n        case ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: {\r\n            return { ...state, not_approves : [...state.not_approves, action.teacher_register_quantification_not_approved]};\r\n        }\r\n        case EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: {\r\n            const foundIndex: number = state.not_approves.findIndex(pr => pr.id === action.teacher_register_quantification_not_approved.id);\r\n            let not_approveds: ITeacherRegisterQuantification[] = state.not_approves;\r\n            not_approveds[foundIndex] = action.teacher_register_quantification_not_approved;\r\n            return { ...state, not_approves: not_approveds };\r\n        }\r\n        case REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED: {\r\n            return { ...state, not_approves: state.not_approves.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_ALL: {\r\n            return { ...state, not_approves: [] };\r\n        }\r\n        case CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherRegisterQuantification: action.teacher_register_quantification_not_approved };\r\n        }\r\n        case CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherRegisterQuantification: null };\r\n        }\r\n\r\n\r\n        case INITIAL_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: {\r\n            return { ...state, not_approved_now : [...state.not_approved_now, action.teacher_register_quantification_not_approved_now]};\r\n        }\r\n        case ADD_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: {\r\n            return { ...state, not_approved_now : [...state.not_approved_now, action.teacher_register_quantification_not_approved_now]};\r\n        }\r\n        case EDIT_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: {\r\n            const foundIndex: number = state.not_approved_now.findIndex(pr => pr.id === action.teacher_register_quantification_not_approved_now.id);\r\n            let not_approved_now: ITeacherRegisterQuantification[] = state.not_approved_now;\r\n            not_approved_now[foundIndex] = action.teacher_register_quantification_not_approved_now;\r\n            return { ...state, not_approved_now: not_approved_now };\r\n        }\r\n        case REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW: {\r\n            return { ...state, not_approved_now: state.not_approved_now.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_ALL: {\r\n            return { ...state, not_approved_now: [] };\r\n        }\r\n        case CHANGE_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherRegisterQuantification: action.teacher_register_quantification_not_approved_now };\r\n        }\r\n        case CLEAR_TEACHER_REGISTER_QUANTIFICATION_NOT_APPROVED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedTeacherRegisterQuantification: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default teacher_register_quantificationsReducer;","export interface IInformationClass {\r\n    id: any,\r\n    name: string;\r\n    teacher: string;\r\n    security_code: string;\r\n    course: string;\r\n    art_age: string;\r\n    art_type: string;\r\n    art_level: string;\r\n    number_section: number;\r\n    number_student: number;\r\n}\r\n\r\nexport enum InformationClassModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IInformationClassState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_INFORMATION_CLASS, CHANGE_INFORMATION_CLASS_PENDING_EDIT, EDIT_INFORMATION_CLASS, REMOVE_INFORMATION_CLASS,\r\n    CLEAR_INFORMATION_CLASS_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_INFORMATION_CLASS, REMOVE_INFORMATION_CLASS_ALL} from \"../actions/information_class.action\";\r\nimport { IInformationClass, InformationClassModificationStatus } from \"../models/information_class.interface\";\r\n\r\n\r\n\r\nconst initialState: IInformationClassState = {\r\n    modificationState: InformationClassModificationStatus.None,\r\n    selectedInformationClass: null,\r\n    informationClasses: []\r\n};\r\n\r\nfunction informationClassesReducer(state: IInformationClassState = initialState, action: IActionBase): IInformationClassState {\r\n    switch (action.type) {\r\n        case INITIAL_INFORMATION_CLASS: {\r\n            return { ...state, informationClasses : [...state.informationClasses, action.information_class]};\r\n        }\r\n        case ADD_INFORMATION_CLASS: {\r\n            return { ...state, informationClasses: [...state.informationClasses, action.information_class]};\r\n        }\r\n        case EDIT_INFORMATION_CLASS: {\r\n            const foundIndex: number = state.informationClasses.findIndex(pr => pr.id === action.information_class.id);\r\n            let informationClasses: IInformationClass[] = state.informationClasses;\r\n            informationClasses[foundIndex] = action.information_class;\r\n            return { ...state, informationClasses: informationClasses };\r\n        }\r\n        case REMOVE_INFORMATION_CLASS: {\r\n            return { ...state, informationClasses: state.informationClasses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_INFORMATION_CLASS_ALL: {\r\n            return { ...state, informationClasses: [] };\r\n        }\r\n        case CHANGE_INFORMATION_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedInformationClass: action.information_class };\r\n        }\r\n        case CLEAR_INFORMATION_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedInformationClass: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default informationClassesReducer;","export interface ITimeSchedule {\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\n\r\nexport enum TimeScheduleModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITimeScheduleState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TIME_SCHEDULE, CHANGE_TIME_SCHEDULE_PENDING_EDIT, EDIT_TIME_SCHEDULE, REMOVE_TIME_SCHEDULE,\r\n    CLEAR_TIME_SCHEDULE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TIME_SCHEDULE, REMOVE_TIME_SCHEDULE_ALL} from \"../actions/time_schedule.action\";\r\nimport { ITimeSchedule, TimeScheduleModificationStatus } from \"../models/time_schedule.interface\";\r\n\r\n\r\n\r\nconst initialState: ITimeScheduleState = {\r\n    modificationState: TimeScheduleModificationStatus.None,\r\n    selectedTimeSchedule: null,\r\n    timeSchedules: []\r\n};\r\n\r\nfunction time_schedulesReducer(state: ITimeScheduleState = initialState, action: IActionBase): ITimeScheduleState {\r\n    switch (action.type) {\r\n        case INITIAL_TIME_SCHEDULE: {\r\n            return { ...state, timeSchedules : [...state.timeSchedules, action.time_schedule]};\r\n        }\r\n        case ADD_TIME_SCHEDULE: {\r\n            return { ...state, timeSchedules: [...state.timeSchedules, action.time_schedule]};\r\n        }\r\n        case EDIT_TIME_SCHEDULE: {\r\n            let time_schedules: ITimeSchedule[] = state.timeSchedules;\r\n            time_schedules[0] = action.time_schedule;\r\n            return { ...state, timeSchedules: time_schedules };\r\n        }\r\n        case REMOVE_TIME_SCHEDULE: {\r\n            return { ...state, timeSchedules: [] };\r\n        }\r\n        case REMOVE_TIME_SCHEDULE_ALL: {\r\n            return { ...state, timeSchedules: [] };\r\n        }\r\n        case CHANGE_TIME_SCHEDULE_PENDING_EDIT: {\r\n            return { ...state, selectedTimeSchedule: action.time_schedule };\r\n        }\r\n        case CLEAR_TIME_SCHEDULE_PENDING_EDIT: {\r\n            return { ...state, selectedTimeSchedule: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default time_schedulesReducer;","export interface ICourseTeacher {\r\n    id: any;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: number;\r\n    semester_class_id: number;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    semester_name: string;\r\n    image_url: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n    registration_deadline: string;\r\n}\r\n\r\nexport enum CourseTeacherModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICourseTeacherState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_REGISTER_SUCCESSFULL_COURSE, CHANGE_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT, EDIT_REGISTER_SUCCESSFULL_COURSE, REMOVE_REGISTER_SUCCESSFULL_COURSE,\r\n    CLEAR_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_REGISTER_SUCCESSFULL_COURSE, REMOVE_REGISTER_SUCCESSFULL_COURSE_ALL, INITIAL_NOT_REGISTER_COURSE, ADD_NOT_REGISTER_COURSE, EDIT_NOT_REGISTER_COURSE, REMOVE_NOT_REGISTER_COURSE, REMOVE_NOT_REGISTER_COURSE_ALL, CHANGE_NOT_REGISTER_COURSE_PENDING_EDIT, CLEAR_NOT_REGISTER_COURSE_PENDING_EDIT} from \"../actions/course_teacher.action\";\r\nimport { ICourseTeacher, CourseTeacherModificationStatus } from \"../models/course_teacher.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseTeacherState = {\r\n    modificationState: CourseTeacherModificationStatus.None,\r\n    selectedCourseTeacher: null,\r\n    register_successfull_courses: [],\r\n    not_register_courses: []\r\n};\r\n\r\nfunction courseTeachersReducer(state: ICourseTeacherState = initialState, action: IActionBase): ICourseTeacherState {\r\n    switch (action.type) {\r\n        case INITIAL_REGISTER_SUCCESSFULL_COURSE: {\r\n            return { ...state, register_successfull_courses : [...state.register_successfull_courses, action.course]};\r\n        }\r\n        case ADD_REGISTER_SUCCESSFULL_COURSE: {\r\n            return { ...state, register_successfull_courses: [...state.register_successfull_courses, action.course]};\r\n        }\r\n        case EDIT_REGISTER_SUCCESSFULL_COURSE: {\r\n            const foundIndex: number = state.register_successfull_courses.findIndex(pr => pr.id === action.course.id);\r\n            let register_successfull_courses: ICourseTeacher[] = state.register_successfull_courses;\r\n            register_successfull_courses[foundIndex] = action.course;\r\n            return { ...state, register_successfull_courses: register_successfull_courses };\r\n        }\r\n        case REMOVE_REGISTER_SUCCESSFULL_COURSE: {\r\n            return { ...state, register_successfull_courses: state.register_successfull_courses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_REGISTER_SUCCESSFULL_COURSE_ALL: {\r\n            return { ...state, register_successfull_courses: [] };\r\n        }\r\n        case CHANGE_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseTeacher: action.course };\r\n        }\r\n        case CLEAR_REGISTER_SUCCESSFULL_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseTeacher: null };\r\n        }\r\n\r\n        case INITIAL_NOT_REGISTER_COURSE: {\r\n            return { ...state, not_register_courses : [...state.not_register_courses, action.course]};\r\n        }\r\n        case ADD_NOT_REGISTER_COURSE: {\r\n            return { ...state, not_register_courses: [...state.not_register_courses, action.course]};\r\n        }\r\n        case EDIT_NOT_REGISTER_COURSE: {\r\n            const foundIndex: number = state.not_register_courses.findIndex(pr => pr.id === action.course.id);\r\n            let not_register_courses: ICourseTeacher[] = state.not_register_courses;\r\n            not_register_courses[foundIndex] = action.course;\r\n            return { ...state, not_register_courses: not_register_courses };\r\n        }\r\n        case REMOVE_NOT_REGISTER_COURSE: {\r\n            return { ...state, not_register_courses: state.not_register_courses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_NOT_REGISTER_COURSE_ALL: {\r\n            return { ...state, not_register_courses: [] };\r\n        }\r\n        case CHANGE_NOT_REGISTER_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseTeacher: action.course };\r\n        }\r\n        case CLEAR_NOT_REGISTER_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseTeacher: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default courseTeachersReducer;","export interface ITimeScheduleTeacher {\r\n    class_name: string;\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\n\r\nexport enum TimeScheduleTeacherModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITimeScheduleTeacherState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TIME_SCHEDULE_TEACHER, CHANGE_TIME_SCHEDULE_TEACHER_PENDING_EDIT, EDIT_TIME_SCHEDULE_TEACHER, REMOVE_TIME_SCHEDULE_TEACHER,\r\n    CLEAR_TIME_SCHEDULE_TEACHER_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TIME_SCHEDULE_TEACHER, REMOVE_TIME_SCHEDULE_TEACHER_ALL} from \"../actions/time_schedule_teacher.action\";\r\nimport { ITimeScheduleTeacher, TimeScheduleTeacherModificationStatus } from \"../models/time_schedule_teacher.interface\";\r\n\r\n\r\n\r\nconst initialState: ITimeScheduleTeacherState = {\r\n    modificationState: TimeScheduleTeacherModificationStatus.None,\r\n    selectedTimeScheduleTeacher: null,\r\n    timeScheduleTeachers: []\r\n};\r\n\r\nfunction time_schedule_teachersReducer(state: ITimeScheduleTeacherState = initialState, action: IActionBase): ITimeScheduleTeacherState {\r\n    switch (action.type) {\r\n        case INITIAL_TIME_SCHEDULE_TEACHER: {\r\n            return { ...state, timeScheduleTeachers : [...state.timeScheduleTeachers, action.time_schedule_teacher]};\r\n        }\r\n        case ADD_TIME_SCHEDULE_TEACHER: {\r\n            return { ...state, timeScheduleTeachers: [...state.timeScheduleTeachers, action.time_schedule_teacher]};\r\n        }\r\n        case EDIT_TIME_SCHEDULE_TEACHER: {\r\n            let time_schedule_teachers: ITimeScheduleTeacher[] = state.timeScheduleTeachers;\r\n            time_schedule_teachers[0] = action.time_schedule_teacher;\r\n            return { ...state, timeScheduleTeachers: time_schedule_teachers };\r\n        }\r\n        case REMOVE_TIME_SCHEDULE_TEACHER: {\r\n            return { ...state, timeScheduleTeachers: [] };\r\n        }\r\n        case REMOVE_TIME_SCHEDULE_TEACHER_ALL: {\r\n            return { ...state, timeScheduleTeachers: [] };\r\n        }\r\n        case CHANGE_TIME_SCHEDULE_TEACHER_PENDING_EDIT: {\r\n            return { ...state, selectedTimeScheduleTeacher: action.time_schedule_teacher };\r\n        }\r\n        case CLEAR_TIME_SCHEDULE_TEACHER_PENDING_EDIT: {\r\n            return { ...state, selectedTimeScheduleTeacher: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default time_schedule_teachersReducer;","import { IClassTeacherState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_DOING_CLASS, CHANGE_DOING_CLASS_PENDING_EDIT, EDIT_DOING_CLASS, REMOVE_DOING_CLASS,\r\n    CLEAR_DOING_CLASS_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_DOING_CLASS, REMOVE_DOING_CLASS_ALL, INITIAL_DONE_CLASS, ADD_DONE_CLASS, EDIT_DONE_CLASS, REMOVE_DONE_CLASS, REMOVE_DONE_CLASS_ALL, CHANGE_DONE_CLASS_PENDING_EDIT, CLEAR_DONE_CLASS_PENDING_EDIT} from \"../actions/class_teacher.action\";\r\nimport { IClassTeacher, ClassTeacherModificationStatus } from \"../models/class_teacher.interface\";\r\n\r\n\r\n\r\nconst initialState: IClassTeacherState = {\r\n    modificationState: ClassTeacherModificationStatus.None,\r\n    selectedClassTeacher: null,\r\n    class_doing: [],\r\n    class_done: []\r\n};\r\n\r\nfunction classTeachersReducer(state: IClassTeacherState = initialState, action: IActionBase): IClassTeacherState {\r\n    switch (action.type) {\r\n        case INITIAL_DOING_CLASS: {\r\n            return { ...state, class_doing : [...state.class_doing, action.class_teacher]};\r\n        }\r\n        case ADD_DOING_CLASS: {\r\n            return { ...state, class_doing: [...state.class_doing, action.class_teacher]};\r\n        }\r\n        case EDIT_DOING_CLASS: {\r\n            const foundIndex: number = state.class_doing.findIndex(pr => pr.id === action.class_teacher.id);\r\n            let class_doing: IClassTeacher[] = state.class_doing;\r\n            class_doing[foundIndex] = action.class_teacher;\r\n            return { ...state, class_doing: class_doing };\r\n        }\r\n        case REMOVE_DOING_CLASS: {\r\n            return { ...state, class_doing: state.class_doing.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DOING_CLASS_ALL: {\r\n            return { ...state, class_doing: [] };\r\n        }\r\n        case CHANGE_DOING_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassTeacher: action.class_teacher };\r\n        }\r\n        case CLEAR_DOING_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassTeacher: null };\r\n        }\r\n\r\n        case INITIAL_DONE_CLASS: {\r\n            return { ...state, class_done : [...state.class_done, action.class_teacher]};\r\n        }\r\n        case ADD_DONE_CLASS: {\r\n            return { ...state, class_done: [...state.class_done, action.class_teacher]};\r\n        }\r\n        case EDIT_DONE_CLASS: {\r\n            const foundIndex: number = state.class_done.findIndex(pr => pr.id === action.class_teacher.id);\r\n            let class_done: IClassTeacher[] = state.class_done;\r\n            class_done[foundIndex] = action.class_teacher;\r\n            return { ...state, class_done: class_done };\r\n        }\r\n        case REMOVE_DONE_CLASS: {\r\n            return { ...state, class_done: state.class_done.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DONE_CLASS_ALL: {\r\n            return { ...state, class_done: [] };\r\n        }\r\n        case CHANGE_DONE_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassTeacher: action.class_teacher };\r\n        }\r\n        case CLEAR_DONE_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassTeacher: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default classTeachersReducer;","export interface IContestTeacher{\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    total_contest_submission: number;\r\n    total_contest_submission_graded: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n}\r\n\r\nexport enum ContestTeacherModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IContestTeacherState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CONTEST_TEACHER_OPENING, CHANGE_CONTEST_TEACHER_OPENING_PENDING_EDIT, EDIT_CONTEST_TEACHER_OPENING, REMOVE_CONTEST_TEACHER_OPENING,\r\n    CLEAR_CONTEST_TEACHER_OPENING_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_CONTEST_TEACHER_OPENING, REMOVE_CONTEST_TEACHER_OPENING_ALL, INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, ADD_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, EDIT_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER, REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_ALL, CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT, CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT, INITIAL_CONTEST_TEACHER_END, EDIT_CONTEST_TEACHER_END, ADD_CONTEST_TEACHER_END, REMOVE_CONTEST_TEACHER_END, REMOVE_CONTEST_TEACHER_END_ALL, CHANGE_CONTEST_TEACHER_END_PENDING_EDIT, CLEAR_CONTEST_TEACHER_END_PENDING_EDIT, INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW, ADD_CONTEST_TEACHER_NOT_OPEN_NOW, EDIT_CONTEST_TEACHER_NOT_OPEN_NOW, REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW, REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_ALL, CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT, CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT} from \"../actions/contest_teacher.action\";\r\nimport { IContestTeacher, ContestTeacherModificationStatus } from \"../models/contest_teacher.interface\";\r\n\r\n\r\n\r\nconst initialState: IContestTeacherState = {\r\n    modificationState: ContestTeacherModificationStatus.None,\r\n    selectedContestTeacher: null,\r\n    contest_opening: [],\r\n    contest_not_open_now: [],\r\n    contest_end: [],\r\n    contest_not_open_now_not_teacher: []\r\n};\r\n\r\nfunction contestTeachersReducer(state: IContestTeacherState = initialState, action: IActionBase): IContestTeacherState {\r\n    switch (action.type) {\r\n        case INITIAL_CONTEST_TEACHER_OPENING: {\r\n            return { ...state, contest_opening : [...state.contest_opening, action.contest]};\r\n        }\r\n        case ADD_CONTEST_TEACHER_OPENING: {\r\n            return { ...state, contest_opening: [...state.contest_opening, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_TEACHER_OPENING: {\r\n            const foundIndex: number = state.contest_opening.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_opening: IContestTeacher[] = state.contest_opening;\r\n            contest_opening[foundIndex] = action.contest;\r\n            return { ...state, contest_opening: contest_opening };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_OPENING: {\r\n            return { ...state, contest_opening: state.contest_opening.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_OPENING_ALL: {\r\n            return { ...state, contest_opening: [] };\r\n        }\r\n        case CHANGE_CONTEST_TEACHER_OPENING_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_TEACHER_OPENING_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: null };\r\n        }\r\n\r\n\r\n        case INITIAL_CONTEST_TEACHER_END: {\r\n            return { ...state, contest_end : [...state.contest_end, action.contest]};\r\n        }\r\n        case ADD_CONTEST_TEACHER_END: {\r\n            return { ...state, contest_end: [...state.contest_end, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_TEACHER_END: {\r\n            const foundIndex: number = state.contest_end.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_end: IContestTeacher[] = state.contest_end;\r\n            contest_end[foundIndex] = action.contest;\r\n            return { ...state, contest_end: contest_end };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_END: {\r\n            return { ...state, contest_end: state.contest_end.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_END_ALL: {\r\n            return { ...state, contest_end: [] };\r\n        }\r\n        case CHANGE_CONTEST_TEACHER_END_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_TEACHER_END_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: null };\r\n        }\r\n\r\n\r\n\r\n        case INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now : [...state.contest_not_open_now, action.contest]};\r\n        }\r\n        case ADD_CONTEST_TEACHER_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now: [...state.contest_not_open_now, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_TEACHER_NOT_OPEN_NOW: {\r\n            const foundIndex: number = state.contest_not_open_now.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_not_open_now: IContestTeacher[] = state.contest_not_open_now;\r\n            contest_not_open_now[foundIndex] = action.contest;\r\n            return { ...state, contest_not_open_now: contest_not_open_now };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now: state.contest_not_open_now.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_ALL: {\r\n            return { ...state, contest_not_open_now: [] };\r\n        }\r\n        case CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: null };\r\n        }\r\n\r\n\r\n\r\n        case INITIAL_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: {\r\n            return { ...state, contest_not_open_now_not_teacher : [...state.contest_not_open_now_not_teacher, action.contest]};\r\n        }\r\n        case ADD_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: {\r\n            return { ...state, contest_not_open_now_not_teacher: [...state.contest_not_open_now_not_teacher, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: {\r\n            const foundIndex: number = state.contest_not_open_now_not_teacher.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_not_open_now_not_teacher: IContestTeacher[] = state.contest_not_open_now_not_teacher;\r\n            contest_not_open_now_not_teacher[foundIndex] = action.contest;\r\n            return { ...state, contest_not_open_now_not_teacher: contest_not_open_now_not_teacher };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER: {\r\n            return { ...state, contest_not_open_now_not_teacher: state.contest_not_open_now_not_teacher.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_ALL: {\r\n            return { ...state, contest_not_open_now_not_teacher: [] };\r\n        }\r\n        case CHANGE_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_TEACHER_NOT_OPEN_NOW_NOT_TEACHER_PENDING_EDIT: {\r\n            return { ...state, selectedContestTeacher: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default contestTeachersReducer;","import { ISemesterClassState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SEMESTER_CLASS, CHANGE_SEMESTER_CLASS_PENDING_EDIT, EDIT_SEMESTER_CLASS, REMOVE_SEMESTER_CLASS,\r\n    CLEAR_SEMESTER_CLASS_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SEMESTER_CLASS, REMOVE_SEMESTER_CLASS_ALL} from \"../actions/semester_class.action\";\r\nimport { ISemesterClass, SemesterClassModificationStatus } from \"../models/semester_class.interface\";\r\n\r\n\r\n\r\nconst initialState: ISemesterClassState = {\r\n    modificationState: SemesterClassModificationStatus.None,\r\n    selectedSemesterClass: null,\r\n    semesterClasses: []\r\n};\r\n\r\nfunction semesterClassesReducer(state: ISemesterClassState = initialState, action: IActionBase): ISemesterClassState {\r\n    switch (action.type) {\r\n        case INITIAL_SEMESTER_CLASS: {\r\n            return { ...state, semesterClasses : [...state.semesterClasses, action.semester_class]};\r\n        }\r\n        case ADD_SEMESTER_CLASS: {\r\n            return { ...state, semesterClasses: [...state.semesterClasses, action.semester_class]};\r\n        }\r\n        case EDIT_SEMESTER_CLASS: {\r\n            const foundIndex: number = state.semesterClasses.findIndex(pr => pr.id === action.semester_class.id);\r\n            let semesterClasses: ISemesterClass[] = state.semesterClasses;\r\n            semesterClasses[foundIndex] = action.semester_class;\r\n            return { ...state, semesterClasses: semesterClasses };\r\n        }\r\n        case REMOVE_SEMESTER_CLASS: {\r\n            return { ...state, semesterClasses: state.semesterClasses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SEMESTER_CLASS_ALL: {\r\n            return { ...state, semesterClasses: [] };\r\n        }\r\n        case CHANGE_SEMESTER_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClass: action.semester_class };\r\n        }\r\n        case CLEAR_SEMESTER_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClass: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default semesterClassesReducer;","import { IAnonymousNotificationState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_ANONYMOUS_NOTIFICATION, CHANGE_ANONYMOUS_NOTIFICATION_PENDING_EDIT, EDIT_ANONYMOUS_NOTIFICATION, REMOVE_ANONYMOUS_NOTIFICATION,\r\n    CLEAR_ANONYMOUS_NOTIFICATION_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_ANONYMOUS_NOTIFICATION, REMOVE_ANONYMOUS_NOTIFICATION_ALL} from \"../actions/anonymous_notification.action\";\r\nimport { IAnonymousNotification, AnonymousNotificationModificationStatus } from \"../models/anonymous_notification.interface\";\r\n\r\n\r\n\r\nconst initialState: IAnonymousNotificationState = {\r\n    modificationState: AnonymousNotificationModificationStatus.None,\r\n    selectedAnonymousNotification: null,\r\n    notifications: []\r\n};\r\n\r\nfunction anonymousNotificationsReducer(state: IAnonymousNotificationState = initialState, action: IActionBase): IAnonymousNotificationState {\r\n    switch (action.type) {\r\n        case INITIAL_ANONYMOUS_NOTIFICATION: {\r\n            return { ...state, notifications : [...state.notifications, action.anonymous_notification]};\r\n        }\r\n        case ADD_ANONYMOUS_NOTIFICATION: {\r\n            return { ...state, notifications: [...state.notifications, action.anonymous_notification]};\r\n        }\r\n        case EDIT_ANONYMOUS_NOTIFICATION: {\r\n            const foundIndex: number = state.notifications.findIndex(pr => pr.id === action.anonymous_notification.id);\r\n            let notifications: IAnonymousNotification[] = state.notifications;\r\n            notifications[foundIndex] = action.anonymous_notification;\r\n            return { ...state, notifications: notifications };\r\n        }\r\n        case REMOVE_ANONYMOUS_NOTIFICATION: {\r\n            return { ...state, notifications: state.notifications.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_ANONYMOUS_NOTIFICATION_ALL: {\r\n            return { ...state, notifications: [] };\r\n        }\r\n        case CHANGE_ANONYMOUS_NOTIFICATION_PENDING_EDIT: {\r\n            return { ...state, selectedAnonymousNotification: action.anonymous_notification };\r\n        }\r\n        case CLEAR_ANONYMOUS_NOTIFICATION_PENDING_EDIT: {\r\n            return { ...state, selectedAnonymousNotification: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default anonymousNotificationsReducer;","export interface ISection {\r\n    id: any;\r\n    class_id: number;\r\n    name: string;\r\n    status: string;\r\n    time_approved: string;\r\n    update_time: string;\r\n    create_time: string;\r\n    number: number;\r\n    teacher_name: string;\r\n    teach_form: boolean;\r\n    recording: string;\r\n    message: string;\r\n    total_exercise_not_submit: number;\r\n}\r\n\r\nexport enum SectionModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ISectionState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SECTION, CHANGE_SECTION_PENDING_EDIT, EDIT_SECTION, REMOVE_SECTION,\r\n    CLEAR_SECTION_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SECTION, REMOVE_SECTION_ALL} from \"../actions/section.action\";\r\nimport { ISection, SectionModificationStatus } from \"../models/section.interface\";\r\n\r\n\r\n\r\nconst initialState: ISectionState = {\r\n    modificationState: SectionModificationStatus.None,\r\n    selectedSection: null,\r\n    sections: []\r\n};\r\n\r\nfunction sectionsReducer(state: ISectionState = initialState, action: IActionBase): ISectionState {\r\n    switch (action.type) {\r\n        case INITIAL_SECTION: {\r\n            return { ...state, sections : [...state.sections, action.section]};\r\n        }\r\n        case ADD_SECTION: {\r\n            return { ...state, sections: [...state.sections, action.section]};\r\n        }\r\n        case EDIT_SECTION: {\r\n            const foundIndex: number = state.sections.findIndex(pr => pr.id === action.section.id);\r\n            let sections: ISection[] = state.sections;\r\n            sections[foundIndex] = action.section;\r\n            return { ...state, sections: sections };\r\n        }\r\n        case REMOVE_SECTION: {\r\n            return { ...state, sections: state.sections.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SECTION_ALL: {\r\n            return { ...state, sections: [] };\r\n        }\r\n        case CHANGE_SECTION_PENDING_EDIT: {\r\n            return { ...state, selectedSection: action.section };\r\n        }\r\n        case CLEAR_SECTION_PENDING_EDIT: {\r\n            return { ...state, selectedSection: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default sectionsReducer;","export interface ITutorialPage {\r\n    id: any;\r\n    section_id: number;\r\n    description: string;\r\n    number: number;\r\n}\r\n\r\nexport enum TutorialPageModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITutorialPageState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TUTORIAL_PAGE, CHANGE_TUTORIAL_PAGE_PENDING_EDIT, EDIT_TUTORIAL_PAGE, REMOVE_TUTORIAL_PAGE,\r\n    CLEAR_TUTORIAL_PAGE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TUTORIAL_PAGE, REMOVE_TUTORIAL_PAGE_ALL, REMOVE_TUTORIAL_PAGE_BY_NUMBER} from \"../actions/tutorial_page.action\";\r\nimport { ITutorialPage, TutorialPageModificationStatus } from \"../models/tutorial_page.interface\";\r\n\r\n\r\n\r\nconst initialState: ITutorialPageState = {\r\n    modificationState: TutorialPageModificationStatus.None,\r\n    selectedTutorialPage: null,\r\n    tutorialPages: []\r\n};\r\n\r\nfunction tutorialPagesReducer(state: ITutorialPageState = initialState, action: IActionBase): ITutorialPageState {\r\n    switch (action.type) {\r\n        case INITIAL_TUTORIAL_PAGE: {\r\n            return { ...state, tutorialPages : [...state.tutorialPages, action.tutorial_page]};\r\n        }\r\n        case ADD_TUTORIAL_PAGE: {\r\n            return { ...state, tutorialPages: [...state.tutorialPages, action.tutorial_page]};\r\n        }\r\n        case EDIT_TUTORIAL_PAGE: {\r\n            const foundIndex: number = state.tutorialPages.findIndex(pr => pr.id === action.tutorial_page.id);\r\n            let tutorialPages: ITutorialPage[] = state.tutorialPages;\r\n            tutorialPages[foundIndex] = action.tutorial_page;\r\n            return { ...state, tutorialPages: tutorialPages };\r\n        }\r\n        case REMOVE_TUTORIAL_PAGE: {\r\n            return { ...state, tutorialPages: state.tutorialPages.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_TUTORIAL_PAGE_BY_NUMBER: {\r\n            return { ...state, tutorialPages: state.tutorialPages.filter(pr => pr.number !== action.number) };\r\n        }\r\n        case REMOVE_TUTORIAL_PAGE_ALL: {\r\n            return { ...state, tutorialPages: [] };\r\n        }\r\n        case CHANGE_TUTORIAL_PAGE_PENDING_EDIT: {\r\n            return { ...state, selectedTutorialPage: action.tutorial_page };\r\n        }\r\n        case CLEAR_TUTORIAL_PAGE_PENDING_EDIT: {\r\n            return { ...state, selectedTutorialPage: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default tutorialPagesReducer;","import { IExerciseState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_EXERCISE, CHANGE_EXERCISE_PENDING_EDIT, EDIT_EXERCISE, REMOVE_EXERCISE,\r\n    CLEAR_EXERCISE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_EXERCISE, REMOVE_EXERCISE_ALL} from \"../actions/exercise.action\";\r\nimport { IExercise, ExerciseModificationStatus } from \"../models/exercise.interface\";\r\n\r\n\r\n\r\nconst initialState: IExerciseState = {\r\n    modificationState: ExerciseModificationStatus.None,\r\n    selectedExercise: null,\r\n    exercises: []\r\n};\r\n\r\nfunction exercisesReducer(state: IExerciseState = initialState, action: IActionBase): IExerciseState {\r\n    switch (action.type) {\r\n        case INITIAL_EXERCISE: {\r\n            return { ...state, exercises : [...state.exercises, action.exercise]};\r\n        }\r\n        case ADD_EXERCISE: {\r\n            return { ...state, exercises: [...state.exercises, action.exercise]};\r\n        }\r\n        case EDIT_EXERCISE: {\r\n            const foundIndex: number = state.exercises.findIndex(pr => pr.id === action.exercise.id);\r\n            let exercises: IExercise[] = state.exercises;\r\n            exercises[foundIndex] = action.exercise;\r\n            return { ...state, exercises: exercises };\r\n        }\r\n        case REMOVE_EXERCISE: {\r\n            return { ...state, exercises: state.exercises.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_EXERCISE_ALL: {\r\n            return { ...state, exercises: [] };\r\n        }\r\n        case CHANGE_EXERCISE_PENDING_EDIT: {\r\n            return { ...state, selectedExercise: action.exercise };\r\n        }\r\n        case CLEAR_EXERCISE_PENDING_EDIT: {\r\n            return { ...state, selectedExercise: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default exercisesReducer;","export interface IExerciseSubmission {\r\n    id: any;\r\n    student_id: number;\r\n    exercise_id: number;\r\n    student_name: string;\r\n    exercise_name: string;\r\n    exercise_description: string;\r\n    exercise_deadline: string;\r\n    image_url: string;\r\n    feedback: string;\r\n    score: number;\r\n    time: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ExerciseSubmissionModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IExerciseSubmissionState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_EXERCISE_SUBMISSION_NOT_GRADED, CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT, EDIT_EXERCISE_SUBMISSION_NOT_GRADED, REMOVE_EXERCISE_SUBMISSION_NOT_GRADED,\r\n    CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_EXERCISE_SUBMISSION_NOT_GRADED, REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL, INITIAL_EXERCISE_SUBMISSION_GRADED, ADD_EXERCISE_SUBMISSION_GRADED, EDIT_EXERCISE_SUBMISSION_GRADED, REMOVE_EXERCISE_SUBMISSION_GRADED, REMOVE_EXERCISE_SUBMISSION_GRADED_ALL, CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT, CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT} from \"../actions/exercise_submission.action\";\r\nimport { IExerciseSubmission, ExerciseSubmissionModificationStatus } from \"../models/exercise_submission.interface\";\r\n\r\n\r\n\r\nconst initialState: IExerciseSubmissionState = {\r\n    modificationState: ExerciseSubmissionModificationStatus.None,\r\n    selectedExerciseSubmission: null,\r\n    exercise_not_gradeds: [],\r\n    exercise_gradeds: []\r\n};\r\n\r\nfunction exerciseSubmissionsReducer(state: IExerciseSubmissionState = initialState, action: IActionBase): IExerciseSubmissionState {\r\n    switch (action.type) {\r\n        case INITIAL_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            return { ...state, exercise_not_gradeds : [...state.exercise_not_gradeds, action.exercise_submission]};\r\n        }\r\n        case ADD_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            return { ...state, exercise_not_gradeds: [...state.exercise_not_gradeds, action.exercise_submission]};\r\n        }\r\n        case EDIT_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            const foundIndex: number = state.exercise_not_gradeds.findIndex(pr => pr.id === action.exercise_submission.id);\r\n            let exercise_not_gradeds: IExerciseSubmission[] = state.exercise_not_gradeds;\r\n            exercise_not_gradeds[foundIndex] = action.exercise_submission;\r\n            return { ...state, exercise_not_gradeds: exercise_not_gradeds };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            return { ...state, exercise_not_gradeds: state.exercise_not_gradeds.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL: {\r\n            return { ...state, exercise_not_gradeds: [] };\r\n        }\r\n        case CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedExerciseSubmission: action.exercise_submission };\r\n        }\r\n        case CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedExerciseSubmission: null };\r\n        }\r\n\r\n        case INITIAL_EXERCISE_SUBMISSION_GRADED: {\r\n            return { ...state, exercise_gradeds : [...state.exercise_gradeds, action.exercise_submission]};\r\n        }\r\n        case ADD_EXERCISE_SUBMISSION_GRADED: {\r\n            return { ...state, exercise_gradeds: [...state.exercise_gradeds, action.exercise_submission]};\r\n        }\r\n        case EDIT_EXERCISE_SUBMISSION_GRADED: {\r\n            const foundIndex: number = state.exercise_gradeds.findIndex(pr => pr.id === action.exercise_submission.id);\r\n            let exercise_gradeds: IExerciseSubmission[] = state.exercise_gradeds;\r\n            exercise_gradeds[foundIndex] = action.exercise_submission;\r\n            return { ...state, exercise_gradeds: exercise_gradeds };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_GRADED: {\r\n            return { ...state, exercise_gradeds: state.exercise_gradeds.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_GRADED_ALL: {\r\n            return { ...state, exercise_gradeds: [] };\r\n        }\r\n        case CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedExerciseSubmission: action.exercise_submission };\r\n        }\r\n        case CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedExerciseSubmission: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default exerciseSubmissionsReducer;","export interface ITurnover {\r\n    turnover: number;\r\n}\r\n\r\nexport enum TurnoverModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITurnoverState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TURNOVER_NOW, CHANGE_TURNOVER_NOW_PENDING_EDIT, EDIT_TURNOVER_NOW, REMOVE_TURNOVER_NOW,\r\n    CLEAR_TURNOVER_NOW_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TURNOVER_NOW, REMOVE_TURNOVER_NOW_ALL, INITIAL_TURNOVER_LAST, ADD_TURNOVER_LAST, EDIT_TURNOVER_LAST, REMOVE_TURNOVER_LAST, REMOVE_TURNOVER_LAST_ALL, CHANGE_TURNOVER_LAST_PENDING_EDIT, CLEAR_TURNOVER_LAST_PENDING_EDIT} from \"../actions/turnover.action\";\r\nimport { ITurnover, TurnoverModificationStatus } from \"../models/turnover.interface\";\r\n\r\n\r\n\r\nconst initialState: ITurnoverState = {\r\n    modificationState: TurnoverModificationStatus.None,\r\n    selectedTurnover: null,\r\n    turnover_now: [],\r\n    turnover_last: []\r\n};\r\n\r\nfunction turnoversReducer(state: ITurnoverState = initialState, action: IActionBase): ITurnoverState {\r\n    switch (action.type) {\r\n        case INITIAL_TURNOVER_NOW: {\r\n            return { ...state, turnover_now : [...state.turnover_now, action.turnover]};\r\n        }\r\n        case ADD_TURNOVER_NOW: {\r\n            return { ...state, turnover_now: [...state.turnover_now, action.turnover]};\r\n        }\r\n        case EDIT_TURNOVER_NOW: {\r\n            const foundIndex: number = state.turnover_now.findIndex(pr => pr.turnover === action.turnover.turnover);\r\n            let turnover_now: ITurnover[] = state.turnover_now;\r\n            turnover_now[foundIndex] = action.turnover;\r\n            return { ...state, turnover_now: turnover_now };\r\n        }\r\n        case REMOVE_TURNOVER_NOW: {\r\n            return { ...state, turnover_now: state.turnover_now.filter(pr => pr.turnover !== action.turnover) };\r\n        }\r\n        case REMOVE_TURNOVER_NOW_ALL: {\r\n            return { ...state, turnover_now: [] };\r\n        }\r\n        case CHANGE_TURNOVER_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedTurnover: action.turnover };\r\n        }\r\n        case CLEAR_TURNOVER_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedTurnover: null };\r\n        }\r\n\r\n        case INITIAL_TURNOVER_LAST: {\r\n            return { ...state, turnover_last : [...state.turnover_last, action.turnover]};\r\n        }\r\n        case ADD_TURNOVER_LAST: {\r\n            return { ...state, turnover_last: [...state.turnover_last, action.turnover]};\r\n        }\r\n        case EDIT_TURNOVER_LAST: {\r\n            const foundIndex: number = state.turnover_last.findIndex(pr => pr.turnover === action.turnover.turnover);\r\n            let turnover_last: ITurnover[] = state.turnover_last;\r\n            turnover_last[foundIndex] = action.turnover;\r\n            return { ...state, turnover_last: turnover_last };\r\n        }\r\n        case REMOVE_TURNOVER_LAST: {\r\n            return { ...state, turnover_last: state.turnover_last.filter(pr => pr.turnover !== action.turnover) };\r\n        }\r\n        case REMOVE_TURNOVER_LAST_ALL: {\r\n            return { ...state, turnover_last: [] };\r\n        }\r\n        case CHANGE_TURNOVER_LAST_PENDING_EDIT: {\r\n            return { ...state, selectedTurnover: action.turnover };\r\n        }\r\n        case CLEAR_TURNOVER_LAST_PENDING_EDIT: {\r\n            return { ...state, selectedTurnover: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default turnoversReducer;","export interface IReportUser {\r\n    total: number;\r\n}\r\n\r\nexport enum ReportUserModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2\r\n}","import { IReportUserState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_REPORT_USER, CHANGE_REPORT_USER_PENDING_EDIT, EDIT_REPORT_USER, REMOVE_REPORT_USER,\r\n    CLEAR_REPORT_USER_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_REPORT_USER, REMOVE_REPORT_USER_ALL} from \"../actions/report_user.action\";\r\nimport { IReportUser, ReportUserModificationStatus } from \"../models/report_user.interface\";\r\n\r\n\r\n\r\nconst initialState: IReportUserState = {\r\n    modificationState: ReportUserModificationStatus.None,\r\n    selectedReportUser: null,\r\n    report_users: []\r\n};\r\n\r\nfunction report_usersReducer(state: IReportUserState = initialState, action: IActionBase): IReportUserState {\r\n    switch (action.type) {\r\n        case INITIAL_REPORT_USER: {\r\n            return { ...state, report_users : [...state.report_users, action.report_user]};\r\n        }\r\n        case ADD_REPORT_USER: {\r\n            return { ...state, report_users: [...state.report_users, action.report_user]};\r\n        }\r\n        case EDIT_REPORT_USER: {\r\n            const foundIndex: number = state.report_users.findIndex(pr => pr.total === action.report_user.id);\r\n            let report_users: IReportUser[] = state.report_users;\r\n            report_users[foundIndex] = action.report_user;\r\n            return { ...state, report_users: report_users };\r\n        }\r\n        case REMOVE_REPORT_USER: {\r\n            return { ...state, report_users: state.report_users.filter(pr => pr.total !== action.id) };\r\n        }\r\n        case REMOVE_REPORT_USER_ALL: {\r\n            return { ...state, report_users: [] };\r\n        }\r\n        case CHANGE_REPORT_USER_PENDING_EDIT: {\r\n            return { ...state, selectedReportUser: action.report_user };\r\n        }\r\n        case CLEAR_REPORT_USER_PENDING_EDIT: {\r\n            return { ...state, selectedReportUser: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default report_usersReducer;","export interface ICourseReport {\r\n    total_register: number;\r\n    name: string;\r\n}\r\n\r\nexport enum CourseReportModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICourseReportState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_COURSE_REPORT, CHANGE_COURSE_REPORT_PENDING_EDIT, EDIT_COURSE_REPORT, REMOVE_COURSE_REPORT,\r\n    CLEAR_COURSE_REPORT_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_COURSE_REPORT, REMOVE_COURSE_REPORT_ALL} from \"../actions/course_report.action\";\r\nimport { ICourseReport, CourseReportModificationStatus } from \"../models/course_report.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseReportState = {\r\n    modificationState: CourseReportModificationStatus.None,\r\n    selectedCourseReport: null,\r\n    course_reports: []\r\n};\r\n\r\nfunction course_reportsReducer(state: ICourseReportState = initialState, action: IActionBase): ICourseReportState {\r\n    switch (action.type) {\r\n        case INITIAL_COURSE_REPORT: {\r\n            return { ...state, course_reports : [...state.course_reports, action.course_report]};\r\n        }\r\n        case ADD_COURSE_REPORT: {\r\n            return { ...state, course_reports: [...state.course_reports, action.course_report]};\r\n        }\r\n        case EDIT_COURSE_REPORT: {\r\n            const foundIndex: number = state.course_reports.findIndex(pr => pr.total_register === action.course_report.id);\r\n            let course_reports: ICourseReport[] = state.course_reports;\r\n            course_reports[foundIndex] = action.course_report;\r\n            return { ...state, course_reports: course_reports };\r\n        }\r\n        case REMOVE_COURSE_REPORT: {\r\n            return { ...state, course_reports: state.course_reports.filter(pr => pr.total_register !== action.id) };\r\n        }\r\n        case REMOVE_COURSE_REPORT_ALL: {\r\n            return { ...state, course_reports: [] };\r\n        }\r\n        case CHANGE_COURSE_REPORT_PENDING_EDIT: {\r\n            return { ...state, selectedCourseReport: action.course_report };\r\n        }\r\n        case CLEAR_COURSE_REPORT_PENDING_EDIT: {\r\n            return { ...state, selectedCourseReport: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default course_reportsReducer;","export interface IExerciseLevel {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    weight: number;\r\n}\r\n\r\nexport enum ExerciseLevelModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IExerciseLevel, ExerciseLevelModificationStatus } from \"../models/exercise_level.interface\";\r\nexport const ADD_EXERCISE_LEVEL: string = \"ADD_EXERCISE_LEVEL\";\r\nexport const EDIT_EXERCISE_LEVEL: string = \"EDIT_EXERCISE_LEVEL\";\r\nexport const REMOVE_EXERCISE_LEVEL: string = \"REMOVE_EXERCISE_LEVEL\";\r\nexport const CHANGE_EXERCISE_LEVEL_AMOUNT: string = \"CHANGE_EXERCISE_LEVEL_AMOUNT\";\r\nexport const CHANGE_EXERCISE_LEVEL_PENDING_EDIT: string = \"CHANGE_EXERCISE_LEVEL_PENDING_EDIT\";\r\nexport const CLEAR_EXERCISE_LEVEL_PENDING_EDIT: string = \"CLEAR_EXERCISE_LEVEL_PENDING_EDIT\";\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\nexport const REMOVE_EXERCISE_LEVEL_ALL: string = \"REMOVE_EXERCISE_LEVEL_ALL\";\r\nexport const INITIAL_EXERCISE_LEVEL: string = \"INITIAL_EXERCISE_LEVEL\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(exercise_level: IExerciseLevel) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        exercise_level\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialExerciseLevel(exercise_level: IExerciseLevel): IInitialExerciseLevelActionType {\r\n    return { type: INITIAL_EXERCISE_LEVEL, exercise_level: exercise_level };\r\n}\r\n\r\nexport function removeExerciseLevelAll(): IRemoveExerciseLevelAllActionType {\r\n    return { type: REMOVE_EXERCISE_LEVEL_ALL };\r\n}\r\n\r\nexport function addExerciseLevel(exercise_level: IExerciseLevel): IAddExerciseLevelActionType {\r\n    return { type: ADD_EXERCISE_LEVEL, exercise_level: exercise_level };\r\n}\r\n\r\nexport function editExerciseLevel(exercise_level: IExerciseLevel): IEditExerciseLevelActionType {\r\n    return { type: EDIT_EXERCISE_LEVEL, exercise_level: exercise_level };\r\n}\r\n\r\nexport function removeExerciseLevel(id: any): IRemoveExerciseLevelActionType {\r\n    return { type: REMOVE_EXERCISE_LEVEL, id: id };\r\n}\r\n\r\nexport function changeSelectedExerciseLevel(exercise_level: IExerciseLevel): IChangeSelectedExerciseLevelActionType {\r\n    return { type: CHANGE_EXERCISE_LEVEL_PENDING_EDIT, exercise_level: exercise_level };\r\n}\r\n\r\nexport function clearSelectedExerciseLevel(): IClearSelectedExerciseLevelActionType {\r\n    return { type: CLEAR_EXERCISE_LEVEL_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: ExerciseLevelModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\ninterface IAddExerciseLevelActionType { type: string, exercise_level: IExerciseLevel };\r\ninterface IEditExerciseLevelActionType { type: string, exercise_level: IExerciseLevel };\r\ninterface IRemoveExerciseLevelActionType { type: string, id: any };\r\ninterface IChangeSelectedExerciseLevelActionType { type: string, exercise_level: IExerciseLevel };\r\ninterface IClearSelectedExerciseLevelActionType { type: string };\r\ninterface ISetModificationStateActionType { type: string, value:  ExerciseLevelModificationStatus};\r\ninterface IRemoveExerciseLevelAllActionType { type: string }\r\ninterface IInitialExerciseLevelActionType {type: string, exercise_level: IExerciseLevel}","import { IExerciseLevelState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_EXERCISE_LEVEL, CHANGE_EXERCISE_LEVEL_PENDING_EDIT, EDIT_EXERCISE_LEVEL, REMOVE_EXERCISE_LEVEL,\r\n    CLEAR_EXERCISE_LEVEL_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_EXERCISE_LEVEL, REMOVE_EXERCISE_LEVEL_ALL} from \"../actions/exercise_level.action\";\r\nimport { IExerciseLevel, ExerciseLevelModificationStatus } from \"../models/exercise_level.interface\";\r\n\r\n\r\n\r\nconst initialState: IExerciseLevelState = {\r\n    modificationState: ExerciseLevelModificationStatus.None,\r\n    selectedExerciseLevel: null,\r\n    exercise_levels: []\r\n};\r\n\r\nfunction exercise_levelsReducer(state: IExerciseLevelState = initialState, action: IActionBase): IExerciseLevelState {\r\n    switch (action.type) {\r\n        case INITIAL_EXERCISE_LEVEL: {\r\n            return { ...state, exercise_levels : [...state.exercise_levels, action.exercise_level]};\r\n        }\r\n        case ADD_EXERCISE_LEVEL: {\r\n            return { ...state, exercise_levels: [...state.exercise_levels, action.exercise_level]};\r\n        }\r\n        case EDIT_EXERCISE_LEVEL: {\r\n            const foundIndex: number = state.exercise_levels.findIndex(pr => pr.id === action.exercise_level.id);\r\n            let exercise_levels: IExerciseLevel[] = state.exercise_levels;\r\n            exercise_levels[foundIndex] = action.exercise_level;\r\n            return { ...state, exercise_levels: exercise_levels };\r\n        }\r\n        case REMOVE_EXERCISE_LEVEL: {\r\n            return { ...state, exercise_levels: state.exercise_levels.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_EXERCISE_LEVEL_ALL: {\r\n            return { ...state, exercise_levels: [] };\r\n        }\r\n        case CHANGE_EXERCISE_LEVEL_PENDING_EDIT: {\r\n            return { ...state, selectedExerciseLevel: action.exercise_level };\r\n        }\r\n        case CLEAR_EXERCISE_LEVEL_PENDING_EDIT: {\r\n            return { ...state, selectedExerciseLevel: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default exercise_levelsReducer;","export interface IExerciseStudent {\r\n    id: any;\r\n    name: string;\r\n    student_name: string;\r\n    student_id: number;\r\n    description: string;\r\n    section_id: number;\r\n    deadline: string;\r\n    time_submit:  string;\r\n    teacher_name: string;\r\n    section_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ExerciseStudentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IExerciseStudentState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_EXERCISE_NOT_SUBMIT, EDIT_EXERCISE_NOT_SUBMIT, REMOVE_EXERCISE_NOT_SUBMIT,INITIAL_EXERCISE_NOT_SUBMIT, REMOVE_EXERCISE_NOT_SUBMIT_ALL, \r\n    ADD_EXERCISE_SUBMITED_NOT_GRADE, EDIT_EXERCISE_SUBMITED_NOT_GRADE, REMOVE_EXERCISE_SUBMITED_NOT_GRADE, INITIAL_EXERCISE_SUBMITED_NOT_GRADE, REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL, \r\n    ADD_EXERCISE_SUBMITED_GRADED, EDIT_EXERCISE_SUBMITED_GRADED, REMOVE_EXERCISE_SUBMITED_GRADED , INITIAL_EXERCISE_SUBMITED_GRADED, REMOVE_EXERCISE_SUBMITED_GRADED_ALL,\r\n    SET_MODIFICATION_STATE\r\n\r\n} from \"../actions/exercise_student.action\";\r\nimport { IExerciseStudent, ExerciseStudentModificationStatus } from \"../models/exercise_student.interface\";\r\n\r\nconst initialState: IExerciseStudentState = {\r\n    modificationState: ExerciseStudentModificationStatus.None,\r\n    selectedExerciseStudent: null,\r\n    exercise_not_submit: [],\r\n    exercise_submitted_not_grade: [],\r\n    exercise_submitted_graded: []\r\n};\r\n\r\nfunction exerciseStudentReducer(state: IExerciseStudentState = initialState, action: IActionBase): IExerciseStudentState {\r\n    switch (action.type) {\r\n        case INITIAL_EXERCISE_NOT_SUBMIT: {\r\n            return { ...state, exercise_not_submit : [...state.exercise_not_submit, action.exercise_student]};\r\n        }\r\n        case REMOVE_EXERCISE_NOT_SUBMIT_ALL: {\r\n            return { ...state, exercise_not_submit: [] };\r\n        }\r\n        case ADD_EXERCISE_NOT_SUBMIT: {\r\n            return { ...state, exercise_not_submit: [...state.exercise_not_submit, action.exercise_student]};\r\n        }\r\n        case EDIT_EXERCISE_NOT_SUBMIT: {\r\n            const foundIndex: number = state.exercise_not_submit.findIndex(pr => pr.id === action.exercise_student.id);\r\n            let exercise_not_submits: IExerciseStudent[] = state.exercise_not_submit;\r\n            exercise_not_submits[foundIndex] = action.exercise_student;\r\n            return { ...state, exercise_not_submit: exercise_not_submits };\r\n        }\r\n        case REMOVE_EXERCISE_NOT_SUBMIT: {\r\n            return { ...state, exercise_not_submit: state.exercise_not_submit.filter(x=>x.id !== action.exercise_student.id)};\r\n        }\r\n\r\n        case INITIAL_EXERCISE_SUBMITED_NOT_GRADE: {\r\n            return { ...state, exercise_submitted_not_grade : [...state.exercise_submitted_not_grade, action.exercise_student]};\r\n        }\r\n        case REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL: {\r\n            return { ...state, exercise_submitted_not_grade: [] };\r\n        }\r\n        case ADD_EXERCISE_SUBMITED_NOT_GRADE: {\r\n            return { ...state, exercise_submitted_not_grade: [...state.exercise_submitted_not_grade, action.exercise_student]};\r\n        }\r\n        case EDIT_EXERCISE_SUBMITED_NOT_GRADE: {\r\n            const foundIndex: number = state.exercise_submitted_not_grade.findIndex(pr => pr.id === action.exercise_student.id);\r\n            let accept_exercise_not_submit: IExerciseStudent[] = state.exercise_submitted_not_grade;\r\n            accept_exercise_not_submit[foundIndex] = action.exercise_student;\r\n            return { ...state, exercise_submitted_not_grade: accept_exercise_not_submit };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMITED_NOT_GRADE: {\r\n            return { ...state, exercise_submitted_not_grade: state.exercise_submitted_not_grade.filter(x=>x.id !== action.exercise_student.id)};\r\n        }\r\n\r\n        case INITIAL_EXERCISE_SUBMITED_GRADED: {\r\n            return { ...state, exercise_submitted_graded : [...state.exercise_submitted_graded, action.exercise_student]};\r\n        }\r\n        case REMOVE_EXERCISE_SUBMITED_GRADED_ALL: {\r\n            return { ...state, exercise_submitted_graded: [] };\r\n        }\r\n        case ADD_EXERCISE_SUBMITED_GRADED: {\r\n            return { ...state, exercise_submitted_graded: [...state.exercise_submitted_graded, action.exercise_student]};\r\n        }\r\n        case EDIT_EXERCISE_SUBMITED_GRADED: {\r\n            const foundIndex: number = state.exercise_submitted_graded.findIndex(pr => pr.id === action.exercise_student.id);\r\n            let remove_exercise_not_submit: IExerciseStudent[] = state.exercise_submitted_graded;\r\n            remove_exercise_not_submit[foundIndex] = action.exercise_student;\r\n            return { ...state, exercise_submitted_graded: remove_exercise_not_submit };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMITED_GRADED: {\r\n            return { ...state, exercise_submitted_graded: state.exercise_submitted_graded.filter(x=>x.id !== action.exercise_student.id)};\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default exerciseStudentReducer;","export interface ITutorial {\r\n    id: any;\r\n    section_id: number;\r\n    \r\n    creator_name: string;\r\n    class_name: string;\r\n    class_id: number;\r\n    section_number: number;\r\n    name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum TutorialModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ITutorial, TutorialModificationStatus } from \"../models/tutorial.interface\";\r\n\r\n// register_successfull_tutorials\r\nexport const ADD_TUTORIAL: string = \"ADD_TUTORIAL\";\r\nexport const EDIT_TUTORIAL: string = \"EDIT_TUTORIAL\";\r\nexport const REMOVE_TUTORIAL: string = \"REMOVE_TUTORIAL\";\r\nexport const CHANGE_TUTORIAL_AMOUNT: string = \"CHANGE_TUTORIAL_AMOUNT\";\r\nexport const CHANGE_TUTORIAL_PENDING_EDIT: string = \"CHANGE_TUTORIAL_PENDING_EDIT\";\r\nexport const CLEAR_TUTORIAL_PENDING_EDIT: string = \"CLEAR_TUTORIAL_PENDING_EDIT\";\r\nexport const REMOVE_TUTORIAL_ALL: string = \"REMOVE_TUTORIAL_ALL\";\r\nexport const INITIAL_TUTORIAL: string = \"INITIAL_TUTORIAL\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(tutorial: ITutorial) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        tutorial\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialTutorial(tutorial: ITutorial): IInitialTutorialActionType {\r\n    return { type: INITIAL_TUTORIAL, tutorial: tutorial };\r\n}\r\n\r\nexport function removeTutorialAll(): IRemoveTutorialAllActionType {\r\n    return { type: REMOVE_TUTORIAL_ALL };\r\n}\r\n\r\nexport function addTutorial(tutorial: ITutorial): IAddTutorialActionType {\r\n    return { type: ADD_TUTORIAL, tutorial: tutorial };\r\n}\r\n\r\nexport function editTutorial(tutorial: ITutorial): IEditTutorialActionType {\r\n    return { type: EDIT_TUTORIAL, tutorial: tutorial };\r\n}\r\n\r\nexport function removeTutorial(id: any): IRemoveTutorialActionType {\r\n    return { type: REMOVE_TUTORIAL, id: id };\r\n}\r\n\r\nexport function changeSelectedTutorial(tutorial: ITutorial): IChangeSelectedTutorialActionType {\r\n    return { type: CHANGE_TUTORIAL_PENDING_EDIT, tutorial: tutorial };\r\n}\r\n\r\nexport function clearSelectedTutorial(): IClearSelectedTutorialActionType {\r\n    return { type: CLEAR_TUTORIAL_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function setModificationState(value: TutorialModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n\r\n// register_successfull_tutorials\r\ninterface IAddTutorialActionType { type: string, tutorial: ITutorial };\r\ninterface IEditTutorialActionType { type: string, tutorial: ITutorial };\r\ninterface IRemoveTutorialActionType { type: string, id: any };\r\ninterface IChangeSelectedTutorialActionType { type: string, tutorial: ITutorial };\r\ninterface IClearSelectedTutorialActionType { type: string };\r\ninterface IRemoveTutorialAllActionType { type: string }\r\ninterface IInitialTutorialActionType {type: string, tutorial: ITutorial}\r\ninterface ISetModificationStateActionType { type: string, value:  TutorialModificationStatus};","import { ITutorialState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_TUTORIAL, EDIT_TUTORIAL, REMOVE_TUTORIAL,INITIAL_TUTORIAL, REMOVE_TUTORIAL_ALL, \r\n    CLEAR_TUTORIAL_PENDING_EDIT, CHANGE_TUTORIAL_PENDING_EDIT, SET_MODIFICATION_STATE\r\n\r\n} from \"../actions/tutorial.action\";\r\nimport { ITutorial, TutorialModificationStatus } from \"../models/tutorial.interface\";\r\n\r\nconst initialState: ITutorialState = {\r\n    modificationState: TutorialModificationStatus.None,\r\n    selectedTutorial: null,\r\n    tutorials: []\r\n};\r\n\r\nfunction studentLeaveReducer(state: ITutorialState = initialState, action: IActionBase): ITutorialState {\r\n    switch (action.type) {\r\n        case INITIAL_TUTORIAL: {\r\n            return { ...state, tutorials : [...state.tutorials, action.tutorial]};\r\n        }\r\n        case REMOVE_TUTORIAL_ALL: {\r\n            return { ...state, tutorials: [] };\r\n        }\r\n        case ADD_TUTORIAL: {\r\n            return { ...state, tutorials: [...state.tutorials, action.tutorial]};\r\n        }\r\n        case EDIT_TUTORIAL: {\r\n            const foundIndex: number = state.tutorials.findIndex(pr => pr.id === action.tutorial.id);\r\n            let tutorials: ITutorial[] = state.tutorials;\r\n            tutorials[foundIndex] = action.tutorial;\r\n            return { ...state, tutorials: tutorials };\r\n        }\r\n        case REMOVE_TUTORIAL: {\r\n            return { ...state, tutorials: state.tutorials.filter(x=>x.id !== action.tutorial.id)};\r\n        }\r\n        \r\n        case CHANGE_TUTORIAL_PENDING_EDIT: {\r\n            return { ...state, selectedTutorial: action.tutorial };\r\n        }\r\n        case CLEAR_TUTORIAL_PENDING_EDIT: {\r\n            return { ...state, selectedTutorial: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default studentLeaveReducer;","export interface IUserGradeContestSubmission {\r\n    student_id: number;\r\n    teacher_name: string;\r\n    teacher_id: number;\r\n    student_name: string;\r\n    contest_id: number;\r\n    contest_name: string;\r\n    contest_submission_id: number;\r\n    url_conest_submission: string;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    feedback: string;\r\n    score: number;\r\n    time: string;\r\n}\r\n\r\nexport enum UserGradeContestSubmissionModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IUserGradeContestSubmissionState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_USER_GRADE_CONTEST_SUBMISSION, CHANGE_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT, EDIT_USER_GRADE_CONTEST_SUBMISSION, REMOVE_USER_GRADE_CONTEST_SUBMISSION,\r\n    CLEAR_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_USER_GRADE_CONTEST_SUBMISSION, REMOVE_USER_GRADE_CONTEST_SUBMISSION_ALL} from \"../actions/user_grade_contest_submission.action\";\r\nimport { IUserGradeContestSubmission, UserGradeContestSubmissionModificationStatus } from \"../models/user_grade_contest_submission.interface\";\r\n\r\n\r\n\r\nconst initialState: IUserGradeContestSubmissionState = {\r\n    modificationState: UserGradeContestSubmissionModificationStatus.None,\r\n    selectedUserGradeContestSubmission: null,\r\n    userGradeContestSubmissions: []\r\n};\r\n\r\nfunction userGradeContestSubmissionsReducer(state: IUserGradeContestSubmissionState = initialState, action: IActionBase): IUserGradeContestSubmissionState {\r\n    switch (action.type) {\r\n        case INITIAL_USER_GRADE_CONTEST_SUBMISSION: {\r\n            return { ...state, userGradeContestSubmissions : [...state.userGradeContestSubmissions, action.user_grade_contest_submission]};\r\n        }\r\n        case ADD_USER_GRADE_CONTEST_SUBMISSION: {\r\n            return { ...state, userGradeContestSubmissions: [...state.userGradeContestSubmissions, action.user_grade_contest_submission]};\r\n        }\r\n        case EDIT_USER_GRADE_CONTEST_SUBMISSION: {\r\n            const foundIndex: number = state.userGradeContestSubmissions.findIndex(pr => pr.student_id === action.user_grade_contest_submission.id);\r\n            let userGradeContestSubmissions: IUserGradeContestSubmission[] = state.userGradeContestSubmissions;\r\n            userGradeContestSubmissions[foundIndex] = action.user_grade_contest_submission;\r\n            return { ...state, userGradeContestSubmissions: userGradeContestSubmissions };\r\n        }\r\n        case REMOVE_USER_GRADE_CONTEST_SUBMISSION: {\r\n            return { ...state, userGradeContestSubmissions: state.userGradeContestSubmissions.filter(pr => pr.student_id !== action.id) };\r\n        }\r\n        case REMOVE_USER_GRADE_CONTEST_SUBMISSION_ALL: {\r\n            return { ...state, userGradeContestSubmissions: [] };\r\n        }\r\n        case CHANGE_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT: {\r\n            return { ...state, selectedUserGradeContestSubmission: action.user_grade_contest_submission };\r\n        }\r\n        case CLEAR_USER_GRADE_CONTEST_SUBMISSION_PENDING_EDIT: {\r\n            return { ...state, selectedUserGradeContestSubmission: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default userGradeContestSubmissionsReducer;","export interface IUserRegisterTutorialPage {\r\n    id: any;\r\n    section_id: number;\r\n    description: string;\r\n    number: number;\r\n}\r\n\r\nexport enum UserRegisterTutorialPageModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IUserRegisterTutorialPageState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_USER_REGISTER_JOIN_SEMESTER, CHANGE_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT, EDIT_USER_REGISTER_JOIN_SEMESTER, REMOVE_USER_REGISTER_JOIN_SEMESTER,\r\n    CLEAR_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_USER_REGISTER_JOIN_SEMESTER, REMOVE_USER_REGISTER_JOIN_SEMESTER_ALL} from \"../actions/user_register_tutorial_page.action\";\r\nimport { IUserRegisterTutorialPage, UserRegisterTutorialPageModificationStatus } from \"../models/user_register_tutorial_page.interface\";\r\n\r\n\r\n\r\nconst initialState: IUserRegisterTutorialPageState = {\r\n    modificationState: UserRegisterTutorialPageModificationStatus.None,\r\n    selectedUserRegisterTutorialPage: null,\r\n    user_register_tutorial_pages: []\r\n};\r\n\r\nfunction user_register_tutorial_pagesReducer(state: IUserRegisterTutorialPageState = initialState, action: IActionBase): IUserRegisterTutorialPageState {\r\n    switch (action.type) {\r\n        case INITIAL_USER_REGISTER_JOIN_SEMESTER: {\r\n            return { ...state, user_register_tutorial_pages : [...state.user_register_tutorial_pages, action.user_register_tutorial_page]};\r\n        }\r\n        case ADD_USER_REGISTER_JOIN_SEMESTER: {\r\n            return { ...state, user_register_tutorial_pages: [...state.user_register_tutorial_pages, action.user_register_tutorial_page]};\r\n        }\r\n        case EDIT_USER_REGISTER_JOIN_SEMESTER: {\r\n            const foundIndex: number = state.user_register_tutorial_pages.findIndex(pr => pr.id === action.user_register_tutorial_page.id);\r\n            let user_register_tutorial_pages: IUserRegisterTutorialPage[] = state.user_register_tutorial_pages;\r\n            user_register_tutorial_pages[foundIndex] = action.user_register_tutorial_page;\r\n            return { ...state, user_register_tutorial_pages: user_register_tutorial_pages };\r\n        }\r\n        case REMOVE_USER_REGISTER_JOIN_SEMESTER: {\r\n            return { ...state, user_register_tutorial_pages: state.user_register_tutorial_pages.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_USER_REGISTER_JOIN_SEMESTER_ALL: {\r\n            return { ...state, user_register_tutorial_pages: [] };\r\n        }\r\n        case CHANGE_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterTutorialPage: action.user_register_tutorial_page };\r\n        }\r\n        case CLEAR_USER_REGISTER_JOIN_SEMESTER_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterTutorialPage: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default user_register_tutorial_pagesReducer;","import { IUserRegisterTutorialState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW, EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW, REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW,INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW, REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_ALL, \r\n    ADD_USER_REGISTER_TUTORIAL_APPROVED, EDIT_USER_REGISTER_TUTORIAL_APPROVED, REMOVE_USER_REGISTER_TUTORIAL_APPROVED, INITIAL_USER_REGISTER_TUTORIAL_APPROVED, REMOVE_USER_REGISTER_TUTORIAL_APPROVED_ALL, \r\n    ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED, EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED, REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED , INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED, REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_ALL,\r\n    CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT, CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE, REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE, REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_ALL, ADD_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE, EDIT_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE\r\n\r\n} from \"../actions/user_register_tutorial.action\";\r\nimport { IUserRegisterTutorial, UserRegisterTutorialModificationStatus } from \"../models/user_register_tutorial.interface\";\r\n\r\nconst initialState: IUserRegisterTutorialState = {\r\n    modificationState: UserRegisterTutorialModificationStatus.None,\r\n    selectedUserRegisterTutorial: null,\r\n    user_register_tutorial_not_approved_nows: [],\r\n    user_register_tutorial_not_approveds: [],\r\n    user_register_tutorial_approveds: [],\r\n    user_register_tutorial_approved_to_tutorial_templates: []\r\n};\r\n\r\nfunction userRegisterTutorialReducer(state: IUserRegisterTutorialState = initialState, action: IActionBase): IUserRegisterTutorialState {\r\n    switch (action.type) {\r\n        case INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: {\r\n            return { ...state, user_register_tutorial_not_approved_nows : [...state.user_register_tutorial_not_approved_nows, action.user_register_tutorial]};\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_ALL: {\r\n            return { ...state, user_register_tutorial_not_approved_nows: [] };\r\n        }\r\n        case ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: {\r\n            return { ...state, user_register_tutorial_not_approved_nows: [...state.user_register_tutorial_not_approved_nows, action.user_register_tutorial]};\r\n        }\r\n        case EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: {\r\n            const foundIndex: number = state.user_register_tutorial_not_approved_nows.findIndex(pr => pr.id === action.user_register_tutorial.id);\r\n            let user_register_tutorial_not_approved_nows: IUserRegisterTutorial[] = state.user_register_tutorial_not_approved_nows;\r\n            user_register_tutorial_not_approved_nows[foundIndex] = action.user_register_tutorial;\r\n            return { ...state, user_register_tutorial_not_approved_nows: user_register_tutorial_not_approved_nows };\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW: {\r\n            return { ...state, user_register_tutorial_not_approved_nows: state.user_register_tutorial_not_approved_nows.filter(x=>x.id !== action.user_register_tutorial.id)};\r\n        }\r\n\r\n        case INITIAL_USER_REGISTER_TUTORIAL_APPROVED: {\r\n            return { ...state, user_register_tutorial_approveds : [...state.user_register_tutorial_approveds, action.user_register_tutorial]};\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_APPROVED_ALL: {\r\n            return { ...state, user_register_tutorial_approveds: [] };\r\n        }\r\n        case ADD_USER_REGISTER_TUTORIAL_APPROVED: {\r\n            return { ...state, user_register_tutorial_approveds: [...state.user_register_tutorial_approveds, action.user_register_tutorial]};\r\n        }\r\n        case EDIT_USER_REGISTER_TUTORIAL_APPROVED: {\r\n            const foundIndex: number = state.user_register_tutorial_approveds.findIndex(pr => pr.id === action.user_register_tutorials.id);\r\n            let user_register_tutorial_approveds: IUserRegisterTutorial[] = state.user_register_tutorial_approveds;\r\n            user_register_tutorial_approveds[foundIndex] = action.user_register_tutorial;\r\n            return { ...state, user_register_tutorial_approveds: user_register_tutorial_approveds };\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_APPROVED: {\r\n            return { ...state, user_register_tutorial_approveds: state.user_register_tutorial_approveds.filter(x=>x.id !== action.user_register_tutorial.id)};\r\n        }\r\n\r\n        case INITIAL_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: {\r\n            return { ...state, user_register_tutorial_approved_to_tutorial_templates : [...state.user_register_tutorial_approved_to_tutorial_templates, action.user_register_tutorial]};\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE_ALL: {\r\n            return { ...state, user_register_tutorial_approved_to_tutorial_templates: [] };\r\n        }\r\n        case ADD_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: {\r\n            return { ...state, user_register_tutorial_approved_to_tutorial_templates: [...state.user_register_tutorial_approved_to_tutorial_templates, action.user_register_tutorial]};\r\n        }\r\n        case EDIT_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: {\r\n            const foundIndex: number = state.user_register_tutorial_approved_to_tutorial_templates.findIndex(pr => pr.id === action.user_register_tutorials.id);\r\n            let user_register_tutorial_approved_to_tutorial_templates: IUserRegisterTutorial[] = state.user_register_tutorial_approved_to_tutorial_templates;\r\n            user_register_tutorial_approved_to_tutorial_templates[foundIndex] = action.user_register_tutorial;\r\n            return { ...state, user_register_tutorial_approved_to_tutorial_templates: user_register_tutorial_approved_to_tutorial_templates };\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_APPROVED_TO_TUTORIAL_TEMPLATE: {\r\n            return { ...state, user_register_tutorial_approved_to_tutorial_templates: state.user_register_tutorial_approved_to_tutorial_templates.filter(x=>x.id !== action.user_register_tutorial.id)};\r\n        }\r\n\r\n        case INITIAL_USER_REGISTER_TUTORIAL_NOT_APPROVED: {\r\n            return { ...state, user_register_tutorial_not_approveds : [...state.user_register_tutorial_not_approveds, action.user_register_tutorial]};\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED_ALL: {\r\n            return { ...state, user_register_tutorial_not_approveds: [] };\r\n        }\r\n        case ADD_USER_REGISTER_TUTORIAL_NOT_APPROVED: {\r\n            return { ...state, user_register_tutorial_not_approveds: [...state.user_register_tutorial_not_approveds, action.user_register_tutorial]};\r\n        }\r\n        case EDIT_USER_REGISTER_TUTORIAL_NOT_APPROVED: {\r\n            const foundIndex: number = state.user_register_tutorial_not_approveds.findIndex(pr => pr.id === action.user_register_tutorial.id);\r\n            let user_register_tutorial_not_approveds: IUserRegisterTutorial[] = state.user_register_tutorial_not_approveds;\r\n            user_register_tutorial_not_approveds[foundIndex] = action.user_register_tutorials;\r\n            return { ...state, user_register_tutorial_not_approveds: user_register_tutorial_not_approveds };\r\n        }\r\n        case REMOVE_USER_REGISTER_TUTORIAL_NOT_APPROVED: {\r\n            return { ...state, user_register_tutorial_not_approveds: state.user_register_tutorial_not_approveds.filter(x=>x.id !== action.user_register_tutorial.id)};\r\n        }\r\n        \r\n        case CHANGE_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterTutorial: action.user_register_tutorial };\r\n        }\r\n        case CLEAR_USER_REGISTER_TUTORIAL_NOT_APPROVED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterTutorial: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userRegisterTutorialReducer;","export interface IContestSubmission {\r\n    id: any;\r\n    student_id: number;\r\n    contest_id: number;\r\n    student_name: string;\r\n    contest_name: string;\r\n    image_url: string;\r\n    teacher_id: number;\r\n    teacher_name: string;\r\n    score: number;\r\n    feedback: string;\r\n    time: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ContestSubmissionModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IContestSubmissionState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_EXERCISE_SUBMISSION_NOT_GRADED, CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT, EDIT_EXERCISE_SUBMISSION_NOT_GRADED, REMOVE_EXERCISE_SUBMISSION_NOT_GRADED,\r\n    CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_EXERCISE_SUBMISSION_NOT_GRADED, REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL, INITIAL_EXERCISE_SUBMISSION_GRADED, ADD_EXERCISE_SUBMISSION_GRADED, EDIT_EXERCISE_SUBMISSION_GRADED, REMOVE_EXERCISE_SUBMISSION_GRADED, REMOVE_EXERCISE_SUBMISSION_GRADED_ALL, CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT, CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT} from \"../actions/contest_submission.action\";\r\nimport { IContestSubmission, ContestSubmissionModificationStatus } from \"../models/contest_submission.interface\";\r\n\r\n\r\n\r\nconst initialState: IContestSubmissionState = {\r\n    modificationState: ContestSubmissionModificationStatus.None,\r\n    selectedContestSubmission: null,\r\n    contest_not_gradeds: [],\r\n    contest_gradeds: []\r\n};\r\n\r\nfunction contestSubmissionsReducer(state: IContestSubmissionState = initialState, action: IActionBase): IContestSubmissionState {\r\n    switch (action.type) {\r\n        case INITIAL_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            return { ...state, contest_not_gradeds : [...state.contest_not_gradeds, action.contest_submission]};\r\n        }\r\n        case ADD_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            return { ...state, contest_not_gradeds: [...state.contest_not_gradeds, action.contest_submission]};\r\n        }\r\n        case EDIT_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            const foundIndex: number = state.contest_not_gradeds.findIndex(pr => pr.id === action.contest_submission.id);\r\n            let contest_not_gradeds: IContestSubmission[] = state.contest_not_gradeds;\r\n            contest_not_gradeds[foundIndex] = action.contest_submission;\r\n            return { ...state, contest_not_gradeds: contest_not_gradeds };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_NOT_GRADED: {\r\n            return { ...state, contest_not_gradeds: state.contest_not_gradeds.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_NOT_GRADED_ALL: {\r\n            return { ...state, contest_not_gradeds: [] };\r\n        }\r\n        case CHANGE_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedContestSubmission: action.contest_submission };\r\n        }\r\n        case CLEAR_EXERCISE_SUBMISSION_NOT_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedContestSubmission: null };\r\n        }\r\n\r\n        case INITIAL_EXERCISE_SUBMISSION_GRADED: {\r\n            return { ...state, contest_gradeds : [...state.contest_gradeds, action.contest_submission]};\r\n        }\r\n        case ADD_EXERCISE_SUBMISSION_GRADED: {\r\n            return { ...state, contest_gradeds: [...state.contest_gradeds, action.contest_submission]};\r\n        }\r\n        case EDIT_EXERCISE_SUBMISSION_GRADED: {\r\n            const foundIndex: number = state.contest_gradeds.findIndex(pr => pr.id === action.contest_submission.id);\r\n            let contest_gradeds: IContestSubmission[] = state.contest_gradeds;\r\n            contest_gradeds[foundIndex] = action.contest_submission;\r\n            return { ...state, contest_gradeds: contest_gradeds };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_GRADED: {\r\n            return { ...state, contest_gradeds: state.contest_gradeds.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMISSION_GRADED_ALL: {\r\n            return { ...state, contest_gradeds: [] };\r\n        }\r\n        case CHANGE_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedContestSubmission: action.contest_submission };\r\n        }\r\n        case CLEAR_EXERCISE_SUBMISSION_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedContestSubmission: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default contestSubmissionsReducer;","export interface IScheduleTimeClass {\r\n    class_name: string;\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\n\r\nexport enum ScheduleTimeClassModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IScheduleTimeClassState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_TIME_SCHEDULE, CHANGE_TIME_SCHEDULE_PENDING_EDIT, EDIT_TIME_SCHEDULE, REMOVE_TIME_SCHEDULE,\r\n    CLEAR_TIME_SCHEDULE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_TIME_SCHEDULE, REMOVE_TIME_SCHEDULE_ALL} from \"../actions/schedule_time_class.action\";\r\nimport { IScheduleTimeClass, ScheduleTimeClassModificationStatus } from \"../models/schedule_time_class.interface\";\r\n\r\n\r\n\r\nconst initialState: IScheduleTimeClassState = {\r\n    modificationState: ScheduleTimeClassModificationStatus.None,\r\n    selectedScheduleTimeClass: null,\r\n    schedule_time_classes: []\r\n};\r\n\r\nfunction schedule_time_classsReducer(state: IScheduleTimeClassState = initialState, action: IActionBase): IScheduleTimeClassState {\r\n    switch (action.type) {\r\n        case INITIAL_TIME_SCHEDULE: {\r\n            return { ...state, schedule_time_classes : [...state.schedule_time_classes, action.schedule_time_class]};\r\n        }\r\n        case ADD_TIME_SCHEDULE: {\r\n            return { ...state, schedule_time_classes: [...state.schedule_time_classes, action.schedule_time_class]};\r\n        }\r\n        case EDIT_TIME_SCHEDULE: {\r\n            let schedule_time_classs: IScheduleTimeClass[] = state.schedule_time_classes;\r\n            schedule_time_classs[0] = action.schedule_time_class;\r\n            return { ...state, schedule_time_classes: schedule_time_classs };\r\n        }\r\n        case REMOVE_TIME_SCHEDULE: {\r\n            return { ...state, schedule_time_classes: [] };\r\n        }\r\n        case REMOVE_TIME_SCHEDULE_ALL: {\r\n            return { ...state, schedule_time_classes: [] };\r\n        }\r\n        case CHANGE_TIME_SCHEDULE_PENDING_EDIT: {\r\n            return { ...state, selectedScheduleTimeClass: action.schedule_time_class };\r\n        }\r\n        case CLEAR_TIME_SCHEDULE_PENDING_EDIT: {\r\n            return { ...state, selectedScheduleTimeClass: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default schedule_time_classsReducer;","export interface INotifyDb {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    time: string;\r\n}\r\n\r\nexport enum NotifyDbModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { INotifyDbState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_NOTIFY_DB, CHANGE_NOTIFY_DB_PENDING_EDIT, EDIT_NOTIFY_DB, REMOVE_NOTIFY_DB,\r\n    CLEAR_NOTIFY_DB_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_NOTIFY_DB, REMOVE_NOTIFY_DB_ALL} from \"../actions/notify_db.action\";\r\nimport { INotifyDb, NotifyDbModificationStatus } from \"../models/notify_db.interface\";\r\n\r\n\r\n\r\nconst initialState: INotifyDbState = {\r\n    modificationState: NotifyDbModificationStatus.None,\r\n    selectedNotifyDb: null,\r\n    notify_dbs: []\r\n};\r\n\r\nfunction notify_dbsReducer(state: INotifyDbState = initialState, action: IActionBase): INotifyDbState {\r\n    switch (action.type) {\r\n        case INITIAL_NOTIFY_DB: {\r\n            return { ...state, notify_dbs : [...state.notify_dbs, action.notify_db]};\r\n        }\r\n        case ADD_NOTIFY_DB: {\r\n            return { ...state, notify_dbs: [...state.notify_dbs, action.notify_db]};\r\n        }\r\n        case EDIT_NOTIFY_DB: {\r\n            const foundIndex: number = state.notify_dbs.findIndex(pr => pr.id === action.notify_db.id);\r\n            let notify_dbs: INotifyDb[] = state.notify_dbs;\r\n            notify_dbs[foundIndex] = action.notify_db;\r\n            return { ...state, notify_dbs: notify_dbs };\r\n        }\r\n        case REMOVE_NOTIFY_DB: {\r\n            return { ...state, notify_dbs: state.notify_dbs.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_NOTIFY_DB_ALL: {\r\n            return { ...state, notify_dbs: [] };\r\n        }\r\n        case CHANGE_NOTIFY_DB_PENDING_EDIT: {\r\n            return { ...state, selectedNotifyDb: action.notify_db };\r\n        }\r\n        case CLEAR_NOTIFY_DB_PENDING_EDIT: {\r\n            return { ...state, selectedNotifyDb: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default notify_dbsReducer;","export interface IUserReadNotification {\r\n    notification_id: number;\r\n    user_id: number;\r\n    is_read: boolean;\r\n}\r\n\r\nexport enum UserReadNotificationModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IUserReadNotificationState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_USER_READED_NOTIFICATION, CHANGE_USER_READED_NOTIFICATION_PENDING_EDIT, EDIT_USER_READED_NOTIFICATION, REMOVE_USER_READED_NOTIFICATION,\r\n    CLEAR_USER_READED_NOTIFICATION_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_USER_READED_NOTIFICATION, REMOVE_USER_READED_NOTIFICATION_ALL, INITIAL_USER_NOT_READED_NOTIFICATION, ADD_USER_NOT_READED_NOTIFICATION, EDIT_USER_NOT_READED_NOTIFICATION, REMOVE_USER_NOT_READED_NOTIFICATION, REMOVE_USER_NOT_READED_NOTIFICATION_ALL, CHANGE_USER_NOT_READED_NOTIFICATION_PENDING_EDIT, CLEAR_USER_NOT_READED_NOTIFICATION_PENDING_EDIT} from \"../actions/user_read_notification.action\";\r\nimport { IUserReadNotification, UserReadNotificationModificationStatus } from \"../models/user_read_notification.interface\";\r\n\r\n\r\n\r\nconst initialState: IUserReadNotificationState = {\r\n    modificationState: UserReadNotificationModificationStatus.None,\r\n    selectedUserReadNotification: null,\r\n    user_readed_notifications: [],\r\n    user_not_readed_notifications: []\r\n};\r\n\r\nfunction userReadNotificationsReducer(state: IUserReadNotificationState = initialState, action: IActionBase): IUserReadNotificationState {\r\n    switch (action.type) {\r\n        case INITIAL_USER_READED_NOTIFICATION: {\r\n            return { ...state, user_readed_notifications : [...state.user_readed_notifications, action.user_read_notification]};\r\n        }\r\n        case ADD_USER_READED_NOTIFICATION: {\r\n            return { ...state, user_readed_notifications: [...state.user_readed_notifications, action.user_read_notification]};\r\n        }\r\n        case EDIT_USER_READED_NOTIFICATION: {\r\n            const foundIndex: number = state.user_readed_notifications.findIndex(pr => pr.notification_id === action.user_read_notification.notification_id);\r\n            let user_readed_notifications: IUserReadNotification[] = state.user_readed_notifications;\r\n            user_readed_notifications[foundIndex] = action.user_read_notification;\r\n            return { ...state, user_readed_notifications: user_readed_notifications };\r\n        }\r\n        case REMOVE_USER_READED_NOTIFICATION: {\r\n            return { ...state, user_readed_notifications: state.user_readed_notifications.filter(pr => pr.notification_id !== action.notification_id) };\r\n        }\r\n        case REMOVE_USER_READED_NOTIFICATION_ALL: {\r\n            return { ...state, user_readed_notifications: [] };\r\n        }\r\n        case CHANGE_USER_READED_NOTIFICATION_PENDING_EDIT: {\r\n            return { ...state, selectedUserReadNotification: action.user_read_notification };\r\n        }\r\n        case CLEAR_USER_READED_NOTIFICATION_PENDING_EDIT: {\r\n            return { ...state, selectedUserReadNotification: null };\r\n        }\r\n\r\n        case INITIAL_USER_NOT_READED_NOTIFICATION: {\r\n            return { ...state, user_not_readed_notifications : [...state.user_not_readed_notifications, action.user_read_notification]};\r\n        }\r\n        case ADD_USER_NOT_READED_NOTIFICATION: {\r\n            return { ...state, user_not_readed_notifications: [...state.user_not_readed_notifications, action.user_read_notification]};\r\n        }\r\n        case EDIT_USER_NOT_READED_NOTIFICATION: {\r\n            const foundIndex: number = state.user_not_readed_notifications.findIndex(pr => pr.notification_id === action.user_read_notification.notification_id);\r\n            let user_not_readed_notifications: IUserReadNotification[] = state.user_not_readed_notifications;\r\n            user_not_readed_notifications[foundIndex] = action.user_read_notification;\r\n            return { ...state, user_not_readed_notifications: user_not_readed_notifications };\r\n        }\r\n        case REMOVE_USER_NOT_READED_NOTIFICATION: {\r\n            return { ...state, user_not_readed_notifications: state.user_not_readed_notifications.filter(pr => pr.notification_id !== action.notification_id) };\r\n        }\r\n        case REMOVE_USER_NOT_READED_NOTIFICATION_ALL: {\r\n            return { ...state, user_not_readed_notifications: [] };\r\n        }\r\n        case CHANGE_USER_NOT_READED_NOTIFICATION_PENDING_EDIT: {\r\n            return { ...state, selectedUserReadNotification: action.user_read_notification };\r\n        }\r\n        case CLEAR_USER_NOT_READED_NOTIFICATION_PENDING_EDIT: {\r\n            return { ...state, selectedUserReadNotification: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default userReadNotificationsReducer;","export interface INotify {\r\n    idx: number;\r\n    name: string;\r\n    description: string;\r\n    time: string;\r\n}\r\n\r\nexport enum NotifyModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { INotifyState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_NOTIFY, CHANGE_NOTIFY_PENDING_EDIT, EDIT_NOTIFY, REMOVE_NOTIFY,\r\n    CLEAR_NOTIFY_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_NOTIFY, REMOVE_NOTIFY_ALL} from \"../actions/notify.action\";\r\nimport { INotify, NotifyModificationStatus } from \"../models/notify.interface\";\r\n\r\n\r\n\r\nconst initialState: INotifyState = {\r\n    modificationState: NotifyModificationStatus.None,\r\n    selectedNotify: null,\r\n    notifys: []\r\n};\r\n\r\nfunction notifysReducer(state: INotifyState = initialState, action: IActionBase): INotifyState {\r\n    switch (action.type) {\r\n        case INITIAL_NOTIFY: {\r\n            return { ...state, notifys: [...state.notifys, action.notify]};\r\n        }\r\n        case ADD_NOTIFY: {\r\n            return { ...state, notifys: [...state.notifys, action.notify]};\r\n        }\r\n        case EDIT_NOTIFY: {\r\n            const foundIndex: number = state.notifys.findIndex(pr => pr.idx === action.notify.id);\r\n            let notifys: INotify[] = state.notifys;\r\n            notifys[foundIndex] = action.notify;\r\n            return { ...state, notifys: notifys };\r\n        }\r\n        case REMOVE_NOTIFY: {\r\n            return { ...state, notifys: state.notifys.filter(pr => pr.idx !== action.id) };\r\n        }\r\n        case REMOVE_NOTIFY_ALL: {\r\n            return { ...state, notifys: [] };\r\n        }\r\n        case CHANGE_NOTIFY_PENDING_EDIT: {\r\n            return { ...state, selectedNotify: action.notify };\r\n        }\r\n        case CLEAR_NOTIFY_PENDING_EDIT: {\r\n            return { ...state, selectedNotify: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default notifysReducer;","import { IClassesStudentState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_DOING_CLASS, CHANGE_DOING_CLASS_PENDING_EDIT, EDIT_DOING_CLASS, REMOVE_DOING_CLASS,\r\n    CLEAR_DOING_CLASS_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_DOING_CLASS, REMOVE_DOING_CLASS_ALL, INITIAL_DONE_CLASS, ADD_DONE_CLASS, EDIT_DONE_CLASS, REMOVE_DONE_CLASS, REMOVE_DONE_CLASS_ALL, CHANGE_DONE_CLASS_PENDING_EDIT, CLEAR_DONE_CLASS_PENDING_EDIT} from \"../actions/classes_student.action\";\r\nimport { IClassesStudent, ClassesStudentModificationStatus } from \"../models/classes_student.interface\";\r\n\r\n\r\n\r\nconst initialState: IClassesStudentState = {\r\n    modificationState: ClassesStudentModificationStatus.None,\r\n    selectedClassesStudent: null,\r\n    classes_doing: [],\r\n    classes_done: []\r\n};\r\n\r\nfunction classesStudentsReducer(state: IClassesStudentState = initialState, action: IActionBase): IClassesStudentState {\r\n    switch (action.type) {\r\n        case INITIAL_DOING_CLASS: {\r\n            return { ...state, classes_doing : [...state.classes_doing, action.classes_student]};\r\n        }\r\n        case ADD_DOING_CLASS: {\r\n            return { ...state, classes_doing: [...state.classes_doing, action.classes_student]};\r\n        }\r\n        case EDIT_DOING_CLASS: {\r\n            const foundIndex: number = state.classes_doing.findIndex(pr => pr.id === action.classes_student.id);\r\n            let classes_doing: IClassesStudent[] = state.classes_doing;\r\n            classes_doing[foundIndex] = action.classes_student;\r\n            return { ...state, classes_doing: classes_doing };\r\n        }\r\n        case REMOVE_DOING_CLASS: {\r\n            return { ...state, classes_doing: state.classes_doing.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DOING_CLASS_ALL: {\r\n            return { ...state, classes_doing: [] };\r\n        }\r\n        case CHANGE_DOING_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesStudent: action.classes_student };\r\n        }\r\n        case CLEAR_DOING_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesStudent: null };\r\n        }\r\n\r\n        case INITIAL_DONE_CLASS: {\r\n            return { ...state, classes_done : [...state.classes_done, action.classes_student]};\r\n        }\r\n        case ADD_DONE_CLASS: {\r\n            return { ...state, classes_done: [...state.classes_done, action.classes_student]};\r\n        }\r\n        case EDIT_DONE_CLASS: {\r\n            const foundIndex: number = state.classes_done.findIndex(pr => pr.id === action.classes_student.id);\r\n            let classes_done: IClassesStudent[] = state.classes_done;\r\n            classes_done[foundIndex] = action.classes_student;\r\n            return { ...state, classes_done: classes_done };\r\n        }\r\n        case REMOVE_DONE_CLASS: {\r\n            return { ...state, classes_done: state.classes_done.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DONE_CLASS_ALL: {\r\n            return { ...state, classes_done: [] };\r\n        }\r\n        case CHANGE_DONE_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesStudent: action.classes_student };\r\n        }\r\n        case CLEAR_DONE_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesStudent: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default classesStudentsReducer;","import { IClassesParentState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_DOING_CLASS, CHANGE_DOING_CLASS_PENDING_EDIT, EDIT_DOING_CLASS, REMOVE_DOING_CLASS,\r\n    CLEAR_DOING_CLASS_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_DOING_CLASS, REMOVE_DOING_CLASS_ALL, INITIAL_DONE_CLASS, ADD_DONE_CLASS, EDIT_DONE_CLASS, REMOVE_DONE_CLASS, REMOVE_DONE_CLASS_ALL, CHANGE_DONE_CLASS_PENDING_EDIT, CLEAR_DONE_CLASS_PENDING_EDIT} from \"../actions/classes_parent.action\";\r\nimport { IClassesParent, ClassesParentModificationStatus } from \"../models/classes_parent.interface\";\r\n\r\n\r\n\r\nconst initialState: IClassesParentState = {\r\n    modificationState: ClassesParentModificationStatus.None,\r\n    selectedClassesParent: null,\r\n    classes_doing: [],\r\n    classes_done: []\r\n};\r\n\r\nfunction classesParentsReducer(state: IClassesParentState = initialState, action: IActionBase): IClassesParentState {\r\n    switch (action.type) {\r\n        case INITIAL_DOING_CLASS: {\r\n            return { ...state, classes_doing : [...state.classes_doing, action.classes_parent]};\r\n        }\r\n        case ADD_DOING_CLASS: {\r\n            return { ...state, classes_doing: [...state.classes_doing, action.classes_parent]};\r\n        }\r\n        case EDIT_DOING_CLASS: {\r\n            const foundIndex: number = state.classes_doing.findIndex(pr => pr.id === action.classes_parent.id);\r\n            let classes_doing: IClassesParent[] = state.classes_doing;\r\n            classes_doing[foundIndex] = action.classes_parent;\r\n            return { ...state, classes_doing: classes_doing };\r\n        }\r\n        case REMOVE_DOING_CLASS: {\r\n            return { ...state, classes_doing: state.classes_doing.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DOING_CLASS_ALL: {\r\n            return { ...state, classes_doing: [] };\r\n        }\r\n        case CHANGE_DOING_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesParent: action.classes_parent };\r\n        }\r\n        case CLEAR_DOING_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesParent: null };\r\n        }\r\n\r\n        case INITIAL_DONE_CLASS: {\r\n            return { ...state, classes_done : [...state.classes_done, action.classes_parent]};\r\n        }\r\n        case ADD_DONE_CLASS: {\r\n            return { ...state, classes_done: [...state.classes_done, action.classes_parent]};\r\n        }\r\n        case EDIT_DONE_CLASS: {\r\n            const foundIndex: number = state.classes_done.findIndex(pr => pr.id === action.classes_parent.id);\r\n            let classes_done: IClassesParent[] = state.classes_done;\r\n            classes_done[foundIndex] = action.classes_parent;\r\n            return { ...state, classes_done: classes_done };\r\n        }\r\n        case REMOVE_DONE_CLASS: {\r\n            return { ...state, classes_done: state.classes_done.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DONE_CLASS_ALL: {\r\n            return { ...state, classes_done: [] };\r\n        }\r\n        case CHANGE_DONE_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesParent: action.classes_parent };\r\n        }\r\n        case CLEAR_DONE_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedClassesParent: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default classesParentsReducer;","export interface ICourseParent {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    \r\n    art_type_id: number;\r\n    art_type_name: string;\r\n    art_level_id: number;\r\n    art_level_name: string;\r\n    art_age_id: number;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum CourseParentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICourseParentState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_DOING_COURSE, CHANGE_DOING_COURSE_PENDING_EDIT, EDIT_DOING_COURSE, REMOVE_DOING_COURSE,\r\n    CLEAR_DOING_COURSE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_DOING_COURSE, REMOVE_DOING_COURSE_ALL, INITIAL_DONE_COURSE, ADD_DONE_COURSE, EDIT_DONE_COURSE, REMOVE_DONE_COURSE, REMOVE_DONE_COURSE_ALL, CHANGE_DONE_COURSE_PENDING_EDIT, CLEAR_DONE_COURSE_PENDING_EDIT} from \"../actions/course_parent.action\";\r\nimport { ICourseParent, CourseParentModificationStatus } from \"../models/course_parent.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseParentState = {\r\n    modificationState: CourseParentModificationStatus.None,\r\n    selectedCourseParent: null,\r\n    courses_registed: [],\r\n    courses_not_registed_now: []\r\n};\r\n\r\nfunction courseParentsReducer(state: ICourseParentState = initialState, action: IActionBase): ICourseParentState {\r\n    switch (action.type) {\r\n        case INITIAL_DOING_COURSE: {\r\n            return { ...state, courses_not_registed_now : [...state.courses_not_registed_now, action.course_parent]};\r\n        }\r\n        case ADD_DOING_COURSE: {\r\n            return { ...state, courses_not_registed_now: [...state.courses_not_registed_now, action.course_parent]};\r\n        }\r\n        case EDIT_DOING_COURSE: {\r\n            const foundIndex: number = state.courses_not_registed_now.findIndex(pr => pr.id === action.course_parent.id);\r\n            let courses_not_registed_now: ICourseParent[] = state.courses_not_registed_now;\r\n            courses_not_registed_now[foundIndex] = action.course_parent;\r\n            return { ...state, courses_not_registed_now: courses_not_registed_now };\r\n        }\r\n        case REMOVE_DOING_COURSE: {\r\n            return { ...state, courses_not_registed_now: state.courses_not_registed_now.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DOING_COURSE_ALL: {\r\n            return { ...state, courses_not_registed_now: [] };\r\n        }\r\n        case CHANGE_DOING_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseParent: action.course_parent };\r\n        }\r\n        case CLEAR_DOING_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseParent: null };\r\n        }\r\n\r\n        case INITIAL_DONE_COURSE: {\r\n            return { ...state, courses_registed : [...state.courses_registed, action.course_parent]};\r\n        }\r\n        case ADD_DONE_COURSE: {\r\n            return { ...state, courses_registed: [...state.courses_registed, action.course_parent]};\r\n        }\r\n        case EDIT_DONE_COURSE: {\r\n            const foundIndex: number = state.courses_registed.findIndex(pr => pr.id === action.course_parent.id);\r\n            let courses_registed: ICourseParent[] = state.courses_not_registed_now;\r\n            courses_registed[foundIndex] = action.course_parent;\r\n            return { ...state, courses_registed: courses_registed };\r\n        }\r\n        case REMOVE_DONE_COURSE: {\r\n            return { ...state, courses_registed: state.courses_registed.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DONE_COURSE_ALL: {\r\n            return { ...state, courses_registed: [] };\r\n        }\r\n        case CHANGE_DONE_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseParent: action.course_parent };\r\n        }\r\n        case CLEAR_DONE_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseParent: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default courseParentsReducer;","export interface IContestStudent{\r\n    id: any;\r\n    name: string;\r\n    student_id: number;\r\n    student_name: string;\r\n    description: string;\r\n    status: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    total_contest_submission: number;\r\n    total_contest_submission_graded: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    \r\n    art_type_id: number;\r\n    art_age_id: number;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ContestStudentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IContestStudentState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CONTEST_STUDENT_OPENING, CHANGE_CONTEST_STUDENT_OPENING_PENDING_EDIT, EDIT_CONTEST_STUDENT_OPENING, REMOVE_CONTEST_STUDENT_OPENING,\r\n    CLEAR_CONTEST_STUDENT_OPENING_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_CONTEST_STUDENT_OPENING, REMOVE_CONTEST_STUDENT_OPENING_ALL, INITIAL_CONTEST_STUDENT_NEW, ADD_CONTEST_STUDENT_NEW, EDIT_CONTEST_STUDENT_NEW, REMOVE_CONTEST_STUDENT_NEW, REMOVE_CONTEST_STUDENT_NEW_ALL, CHANGE_CONTEST_STUDENT_NEW_PENDING_EDIT, CLEAR_CONTEST_STUDENT_NEW_PENDING_EDIT, INITIAL_CONTEST_STUDENT_END, EDIT_CONTEST_STUDENT_END, ADD_CONTEST_STUDENT_END, REMOVE_CONTEST_STUDENT_END, REMOVE_CONTEST_STUDENT_END_ALL, CHANGE_CONTEST_STUDENT_END_PENDING_EDIT, CLEAR_CONTEST_STUDENT_END_PENDING_EDIT, INITIAL_CONTEST_STUDENT_NOT_OPEN_NOW, ADD_CONTEST_STUDENT_NOT_OPEN_NOW, EDIT_CONTEST_STUDENT_NOT_OPEN_NOW, REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW, REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW_ALL, CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT, CLEAR_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT} from \"../actions/contest_student.action\";\r\nimport { IContestStudent, ContestStudentModificationStatus } from \"../models/contest_student.interface\";\r\n\r\n\r\n\r\nconst initialState: IContestStudentState = {\r\n    modificationState: ContestStudentModificationStatus.None,\r\n    selectedContestStudent: null,\r\n    contest_opening: [],\r\n    contest_not_open_now: [],\r\n    contest_end: [],\r\n    contest_new: []\r\n};\r\n\r\nfunction contestStudentsReducer(state: IContestStudentState = initialState, action: IActionBase): IContestStudentState {\r\n    switch (action.type) {\r\n        case INITIAL_CONTEST_STUDENT_OPENING: {\r\n            return { ...state, contest_opening : [...state.contest_opening, action.contest]};\r\n        }\r\n        case ADD_CONTEST_STUDENT_OPENING: {\r\n            return { ...state, contest_opening: [...state.contest_opening, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_STUDENT_OPENING: {\r\n            const foundIndex: number = state.contest_opening.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_opening: IContestStudent[] = state.contest_opening;\r\n            contest_opening[foundIndex] = action.contest;\r\n            return { ...state, contest_opening: contest_opening };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_OPENING: {\r\n            return { ...state, contest_opening: state.contest_opening.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_OPENING_ALL: {\r\n            return { ...state, contest_opening: [] };\r\n        }\r\n        case CHANGE_CONTEST_STUDENT_OPENING_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_STUDENT_OPENING_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: null };\r\n        }\r\n\r\n\r\n        case INITIAL_CONTEST_STUDENT_END: {\r\n            return { ...state, contest_end : [...state.contest_end, action.contest]};\r\n        }\r\n        case ADD_CONTEST_STUDENT_END: {\r\n            return { ...state, contest_end: [...state.contest_end, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_STUDENT_END: {\r\n            const foundIndex: number = state.contest_end.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_end: IContestStudent[] = state.contest_end;\r\n            contest_end[foundIndex] = action.contest;\r\n            return { ...state, contest_end: contest_end };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_END: {\r\n            return { ...state, contest_end: state.contest_end.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_END_ALL: {\r\n            return { ...state, contest_end: [] };\r\n        }\r\n        case CHANGE_CONTEST_STUDENT_END_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_STUDENT_END_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: null };\r\n        }\r\n\r\n\r\n\r\n        case INITIAL_CONTEST_STUDENT_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now : [...state.contest_not_open_now, action.contest]};\r\n        }\r\n        case ADD_CONTEST_STUDENT_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now: [...state.contest_not_open_now, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_STUDENT_NOT_OPEN_NOW: {\r\n            const foundIndex: number = state.contest_not_open_now.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_not_open_now: IContestStudent[] = state.contest_not_open_now;\r\n            contest_not_open_now[foundIndex] = action.contest;\r\n            return { ...state, contest_not_open_now: contest_not_open_now };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now: state.contest_not_open_now.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_NOT_OPEN_NOW_ALL: {\r\n            return { ...state, contest_not_open_now: [] };\r\n        }\r\n        case CHANGE_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_STUDENT_NOT_OPEN_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: null };\r\n        }\r\n\r\n\r\n\r\n        case INITIAL_CONTEST_STUDENT_NEW: {\r\n            return { ...state, contest_new : [...state.contest_new, action.contest]};\r\n        }\r\n        case ADD_CONTEST_STUDENT_NEW: {\r\n            return { ...state, contest_new: [...state.contest_new, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_STUDENT_NEW: {\r\n            const foundIndex: number = state.contest_new.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_new: IContestStudent[] = state.contest_new;\r\n            contest_new[foundIndex] = action.contest;\r\n            return { ...state, contest_new: contest_new };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_NEW: {\r\n            return { ...state, contest_new: state.contest_new.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_STUDENT_NEW_ALL: {\r\n            return { ...state, contest_new: [] };\r\n        }\r\n        case CHANGE_CONTEST_STUDENT_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_STUDENT_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedContestStudent: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default contestStudentsReducer;","export interface ICart {\r\n    id: any;\r\n    name: string;\r\n    image: string;\r\n    student_id: number;\r\n    student_name: string;\r\n    price: number;\r\n    quantity: number;\r\n}\r\n\r\nexport enum CartModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICartState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CART, CHANGE_CART_PENDING_EDIT, EDIT_CART, REMOVE_CART,\r\n    CLEAR_CART_PENDING_EDIT, SET_MODIFICATION_STATE, INCREASE_QUANTITY, DECREASE_QUANTITY} from \"../actions/cart.action\";\r\nimport { ICart, CartModificationStatus } from \"../models/cart.interface\";\r\n\r\n\r\n\r\nconst initialState: ICartState = {\r\n    modificationState: CartModificationStatus.None,\r\n    selectedCart: null,\r\n    carts: []\r\n};\r\n\r\nfunction cartReducer(state: ICartState = initialState, action: IActionBase): ICartState {\r\n    switch (action.type) {\r\n        case ADD_CART: {\r\n            return { ...state, carts: [...state.carts, action.cart]};\r\n        }\r\n        case EDIT_CART: {\r\n            const foundIndex: number = state.carts.findIndex(pr => pr.id === action.cart.id);\r\n            let cart: ICart[] = state.carts;\r\n            cart[foundIndex] = action.cart;\r\n            return { ...state, carts: cart };\r\n        }\r\n        case REMOVE_CART: {\r\n            return { ...state, carts: state.carts.filter(pr => pr.id !== action.id) };\r\n        }\r\n        \r\n        case INCREASE_QUANTITY: {\r\n            const foundIndex: number = state.carts.findIndex(pr => pr.id === action.id);\r\n            let cart: ICart[] = state.carts;\r\n            cart[foundIndex].quantity += 1;\r\n            return { ...state, carts: cart };\r\n        }\r\n\r\n        case DECREASE_QUANTITY: {\r\n            const foundIndex: number = state.carts.findIndex(pr => pr.id === action.id);\r\n            let cart: ICart[] = state.carts;\r\n            cart[foundIndex].quantity -= 1;\r\n            return { ...state, carts: cart };\r\n        }\r\n\r\n        case CHANGE_CART_PENDING_EDIT: {\r\n            return { ...state, selectedCart: action.cart };\r\n        }\r\n        case CLEAR_CART_PENDING_EDIT: {\r\n            return { ...state, selectedCart: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default cartReducer;","export interface IAttendance {\r\n    id: any;\r\n    student_id: number;\r\n    section_id: number;\r\n    status: boolean;\r\n    section_number: number;\r\n    email: string;\r\n    course_name: string;\r\n    course_id: number;\r\n    student_name: string;\r\n    section_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum AttendanceModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IAttendanceState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_ATTENDANCE, CHANGE_ATTENDANCE_PENDING_EDIT, EDIT_ATTENDANCE, REMOVE_ATTENDANCE,\r\n    CLEAR_ATTENDANCE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_ATTENDANCE, REMOVE_ATTENDANCE_ALL} from \"../actions/attendance.action\";\r\nimport { IAttendance, AttendanceModificationStatus } from \"../models/attendance.interface\";\r\n\r\n\r\n\r\nconst initialState: IAttendanceState = {\r\n    modificationState: AttendanceModificationStatus.None,\r\n    selectedAttendance: null,\r\n    attendances: []\r\n};\r\n\r\nfunction attendancesReducer(state: IAttendanceState = initialState, action: IActionBase): IAttendanceState {\r\n    switch (action.type) {\r\n        case INITIAL_ATTENDANCE: {\r\n            return { ...state, attendances : [...state.attendances, action.attendance]};\r\n        }\r\n        case ADD_ATTENDANCE: {\r\n            return { ...state, attendances: [...state.attendances, action.attendance]};\r\n        }\r\n        case EDIT_ATTENDANCE: {\r\n            const foundIndex: number = state.attendances.findIndex(pr => pr.id === action.attendance.id);\r\n            let attendances: IAttendance[] = state.attendances;\r\n            attendances[foundIndex] = action.attendance;\r\n            return { ...state, attendances: attendances };\r\n        }\r\n        case REMOVE_ATTENDANCE: {\r\n            return { ...state, attendances: state.attendances.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_ATTENDANCE_ALL: {\r\n            return { ...state, attendances: [] };\r\n        }\r\n        case CHANGE_ATTENDANCE_PENDING_EDIT: {\r\n            return { ...state, selectedAttendance: action.attendance };\r\n        }\r\n        case CLEAR_ATTENDANCE_PENDING_EDIT: {\r\n            return { ...state, selectedAttendance: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default attendancesReducer;","export interface IProfile {\r\n    id: any;\r\n    profile_image_url: string;\r\n}\r\n\r\nexport enum ProfileModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2\r\n}","import { IProfileState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_PROFILE, CHANGE_PROFILE_PENDING_EDIT, EDIT_PROFILE, REMOVE_PROFILE,\r\n    CLEAR_PROFILE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_PROFILE, REMOVE_PROFILE_ALL} from \"../actions/profile.action\";\r\nimport { IProfile, ProfileModificationStatus } from \"../models/profile.interface\";\r\n\r\n\r\n\r\nconst initialState: IProfileState = {\r\n    modificationState: ProfileModificationStatus.None,\r\n    selectedProfile: null,\r\n    profiles: []\r\n};\r\n\r\nfunction profilesReducer(state: IProfileState = initialState, action: IActionBase): IProfileState {\r\n    switch (action.type) {\r\n        case INITIAL_PROFILE: {\r\n            return { ...state, profiles : [...state.profiles, action.profile]};\r\n        }\r\n        case ADD_PROFILE: {\r\n            return { ...state, profiles: [...state.profiles, action.profile]};\r\n        }\r\n        case EDIT_PROFILE: {\r\n            const foundIndex: number = state.profiles.findIndex(pr => pr.id === action.profile.id);\r\n            let profiles: IProfile[] = state.profiles;\r\n            profiles[foundIndex] = action.profile;\r\n            return { ...state, profiles: profiles };\r\n        }\r\n        case REMOVE_PROFILE: {\r\n            return { ...state, profiles: state.profiles.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_PROFILE_ALL: {\r\n            return { ...state, profiles: [] };\r\n        }\r\n        case CHANGE_PROFILE_PENDING_EDIT: {\r\n            return { ...state, selectedProfile: action.profile };\r\n        }\r\n        case CLEAR_PROFILE_PENDING_EDIT: {\r\n            return { ...state, selectedProfile: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default profilesReducer;","export interface IUserRegisterJoinSemester {\r\n    id: any;\r\n    student_id: number;\r\n    semester_class_id: number;\r\n    student_name: string;\r\n    link_url: string;\r\n    status: string;\r\n    payer_id: number;\r\n    semester_name: string;\r\n    payer_name: string;\r\n    course_name: string;\r\n    price: number;\r\n    time: string;\r\n}\r\n\r\nexport enum UserRegisterJoinSemesterModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IUserRegisterJoinSemesterState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_COMPLETED, CHANGE_COMPLETED_PENDING_EDIT, EDIT_COMPLETED, REMOVE_COMPLETED,\r\n    CLEAR_COMPLETED_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_COMPLETED, REMOVE_COMPLETED_ALL, INITIAL_WAITING, ADD_WAITING, EDIT_WAITING, REMOVE_WAITING, REMOVE_WAITING_ALL, CHANGE_WAITING_PENDING_EDIT, CLEAR_WAITING_PENDING_EDIT} from \"../actions/user_register_join_semester.action\";\r\nimport { IUserRegisterJoinSemester, UserRegisterJoinSemesterModificationStatus } from \"../models/user_register_join_semester.interface\";\r\n\r\n\r\n\r\nconst initialState: IUserRegisterJoinSemesterState = {\r\n    modificationState: UserRegisterJoinSemesterModificationStatus.None,\r\n    selectedUserRegisterJoinSemester: null,\r\n    completed: [],\r\n    waiting: []\r\n};\r\n\r\nfunction user_register_join_semestersReducer(state: IUserRegisterJoinSemesterState = initialState, action: IActionBase): IUserRegisterJoinSemesterState {\r\n    switch (action.type) {\r\n        case INITIAL_COMPLETED: {\r\n            return { ...state, completed : [...state.completed, action.user_register_join_semester]};\r\n        }\r\n        case ADD_COMPLETED: {\r\n            return { ...state, completed: [...state.completed, action.user_register_join_semester]};\r\n        }\r\n        case EDIT_COMPLETED: {\r\n            const foundIndex: number = state.completed.findIndex(pr => pr.id === action.user_register_join_semester.id);\r\n            let completed: IUserRegisterJoinSemester[] = state.completed;\r\n            completed[foundIndex] = action.user_register_join_semester;\r\n            return { ...state, completed: completed };\r\n        }\r\n        case REMOVE_COMPLETED: {\r\n            return { ...state, completed: state.completed.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_COMPLETED_ALL: {\r\n            return { ...state, completed: [] };\r\n        }\r\n        case CHANGE_COMPLETED_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterJoinSemester: action.user_register_join_semester };\r\n        }\r\n        case CLEAR_COMPLETED_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterJoinSemester: null };\r\n        }\r\n\r\n        case INITIAL_WAITING: {\r\n            return { ...state, waiting : [...state.waiting, action.user_register_join_semester]};\r\n        }\r\n        case ADD_WAITING: {\r\n            return { ...state, waiting: [...state.waiting, action.user_register_join_semester]};\r\n        }\r\n        case EDIT_WAITING: {\r\n            const foundIndex: number = state.waiting.findIndex(pr => pr.id === action.user_register_join_semester.id);\r\n            let waiting: IUserRegisterJoinSemester[] = state.waiting;\r\n            waiting[foundIndex] = action.user_register_join_semester;\r\n            return { ...state, waiting: waiting };\r\n        }\r\n        case REMOVE_WAITING: {\r\n            return { ...state, waiting: state.waiting.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_WAITING_ALL: {\r\n            return { ...state, waiting: [] };\r\n        }\r\n        case CHANGE_WAITING_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterJoinSemester: action.user_register_join_semester };\r\n        }\r\n        case CLEAR_WAITING_PENDING_EDIT: {\r\n            return { ...state, selectedUserRegisterJoinSemester: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default user_register_join_semestersReducer;","export interface ICourseStudent {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    \r\n    art_type_id: number;\r\n    art_type_name: string;\r\n    art_level_id: number;\r\n    art_level_name: string;\r\n    art_age_id: number;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum CourseStudentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICourseStudent, CourseStudentModificationStatus } from \"../models/course_student.interface\";\r\n\r\n// register_successfull_course_students\r\nexport const ADD_DOING_COURSE: string = \"ADD_DOING_COURSE\";\r\nexport const EDIT_DOING_COURSE: string = \"EDIT_DOING_COURSE\";\r\nexport const REMOVE_DOING_COURSE: string = \"REMOVE_DOING_COURSE\";\r\nexport const CHANGE_DOING_COURSE_AMOUNT: string = \"CHANGE_DOING_COURSE_AMOUNT\";\r\nexport const CHANGE_DOING_COURSE_PENDING_EDIT: string = \"CHANGE_DOING_COURSE_PENDING_EDIT\";\r\nexport const CLEAR_DOING_COURSE_PENDING_EDIT: string = \"CLEAR_DOING_COURSE_PENDING_EDIT\";\r\nexport const REMOVE_DOING_COURSE_ALL: string = \"REMOVE_DOING_COURSE_ALL\";\r\nexport const INITIAL_DOING_COURSE: string = \"INITIAL_DOING_COURSE\";\r\n\r\n// not_register_course_students\r\nexport const ADD_DONE_COURSE: string = \"ADD_DONE_COURSE\";\r\nexport const EDIT_DONE_COURSE: string = \"EDIT_DONE_COURSE\";\r\nexport const REMOVE_DONE_COURSE: string = \"REMOVE_DONE_COURSE\";\r\nexport const CHANGE_DONE_COURSE_AMOUNT: string = \"CHANGE_DONE_COURSE_AMOUNT\";\r\nexport const CHANGE_DONE_COURSE_PENDING_EDIT: string = \"CHANGE_DONE_COURSE_PENDING_EDIT\";\r\nexport const CLEAR_DONE_COURSE_PENDING_EDIT: string = \"CLEAR_DONE_COURSE_PENDING_EDIT\";\r\nexport const REMOVE_DONE_COURSE_ALL: string = \"REMOVE_DONE_COURSE_ALL\";\r\nexport const INITIAL_DONE_COURSE: string = \"INITIAL_DONE_COURSE\";\r\n\r\n\r\nexport const SET_MODIFICATION_STATE: string = \"SET_MODIFICATION_STATE\";\r\nexport const FETCH_DATA_REQUEST: string = \"FETCH_DATA_REQUEST\";\r\nexport const FETCH_DATA_SUCCESS: string = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_ERROR: string = \"FETCH_DATA_ERROR\";\r\n\r\nexport function fetchDataRequest() {\r\n    return {\r\n        type: FETCH_DATA_REQUEST\r\n    };\r\n}\r\n\r\nexport function fetchDataSuccess(course_student: ICourseStudent) {\r\n    return {\r\n        type: FETCH_DATA_SUCCESS,\r\n        course_student\r\n    };\r\n}\r\n\r\nexport function fetchDataError(error: any) {\r\n    return {\r\n        type: FETCH_DATA_ERROR,\r\n        payload: { error }\r\n    };\r\n}\r\n\r\nexport function initialCourseNotRegistedNow(course_student: ICourseStudent): IInitialCourseNotRegistedNowActionType {\r\n    return { type: INITIAL_DOING_COURSE, course_student: course_student };\r\n}\r\n\r\nexport function removeCourseNotRegistedNowAll(): IRemoveCourseNotRegistedNowAllActionType {\r\n    return { type: REMOVE_DOING_COURSE_ALL };\r\n}\r\n\r\nexport function addCourseNotRegistedNow(course_student: ICourseStudent): IAddCourseNotRegistedNowActionType {\r\n    return { type: ADD_DOING_COURSE, course_student: course_student };\r\n}\r\n\r\nexport function editCourseNotRegistedNow(course_student: ICourseStudent): IEditCourseNotRegistedNowActionType {\r\n    return { type: EDIT_DOING_COURSE, course_student: course_student };\r\n}\r\n\r\nexport function removeCourseNotRegistedNow(id: any): IRemoveCourseNotRegistedNowActionType {\r\n    return { type: REMOVE_DOING_COURSE, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseNotRegistedNow(course_student: ICourseStudent): IChangeSelectedCourseNotRegistedNowActionType {\r\n    return { type: CHANGE_DOING_COURSE_PENDING_EDIT, course_student: course_student };\r\n}\r\n\r\nexport function clearSelectedCourseNotRegistedNow(): IClearSelectedCourseNotRegistedNowActionType {\r\n    return { type: CLEAR_DOING_COURSE_PENDING_EDIT };\r\n}\r\n\r\n\r\nexport function initialCourseRegisted(course_student: ICourseStudent): IInitialCourseRegistedActionType {\r\n    return { type: INITIAL_DONE_COURSE, course_student: course_student };\r\n}\r\n\r\nexport function removeCourseRegistedAll(): IRemoveCourseRegistedAllActionType {\r\n    return { type: REMOVE_DONE_COURSE_ALL };\r\n}\r\n\r\nexport function addCourseRegisted(course_student: ICourseStudent): IAddCourseRegistedActionType {\r\n    return { type: ADD_DONE_COURSE, course_student: course_student };\r\n}\r\n\r\nexport function editCourseRegisted(course_student: ICourseStudent): IEditCourseRegistedActionType {\r\n    return { type: EDIT_DONE_COURSE, course_student: course_student };\r\n}\r\n\r\nexport function removeCourseRegisted(id: any): IRemoveCourseRegistedActionType {\r\n    return { type: REMOVE_DONE_COURSE, id: id };\r\n}\r\n\r\nexport function changeSelectedCourseRegisted(course_student: ICourseStudent): IChangeSelectedCourseRegistedActionType {\r\n    return { type: CHANGE_DONE_COURSE_PENDING_EDIT, course_student: course_student };\r\n}\r\n\r\nexport function clearSelectedCourseRegisted(): IClearSelectedCourseRegistedActionType {\r\n    return { type: CLEAR_DONE_COURSE_PENDING_EDIT };\r\n}\r\n\r\nexport function setModificationState(value: CourseStudentModificationStatus): ISetModificationStateActionType {\r\n    return { type: SET_MODIFICATION_STATE, value: value };\r\n}\r\n\r\n// register_successfull_course_students\r\ninterface IAddCourseNotRegistedNowActionType { type: string, course_student: ICourseStudent };\r\ninterface IEditCourseNotRegistedNowActionType { type: string, course_student: ICourseStudent };\r\ninterface IRemoveCourseNotRegistedNowActionType { type: string, id: any };\r\ninterface IChangeSelectedCourseNotRegistedNowActionType { type: string, course_student: ICourseStudent };\r\ninterface IClearSelectedCourseNotRegistedNowActionType { type: string };\r\ninterface IRemoveCourseNotRegistedNowAllActionType { type: string }\r\ninterface IInitialCourseNotRegistedNowActionType {type: string, course_student: ICourseStudent}\r\n\r\n// not_register_course_students\r\ninterface IAddCourseRegistedActionType { type: string, course_student: ICourseStudent };\r\ninterface IEditCourseRegistedActionType { type: string, course_student: ICourseStudent };\r\ninterface IRemoveCourseRegistedActionType { type: string, id: any };\r\ninterface IChangeSelectedCourseRegistedActionType { type: string, course_student: ICourseStudent };\r\ninterface IClearSelectedCourseRegistedActionType { type: string };\r\ninterface IRemoveCourseRegistedAllActionType { type: string }\r\ninterface IInitialCourseRegistedActionType {type: string, course_student: ICourseStudent}\r\n\r\n\r\n\r\ninterface ISetModificationStateActionType { type: string, value:  CourseStudentModificationStatus};","import { ICourseStudentState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_DOING_COURSE, CHANGE_DOING_COURSE_PENDING_EDIT, EDIT_DOING_COURSE, REMOVE_DOING_COURSE,\r\n    CLEAR_DOING_COURSE_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_DOING_COURSE, REMOVE_DOING_COURSE_ALL, INITIAL_DONE_COURSE, ADD_DONE_COURSE, EDIT_DONE_COURSE, REMOVE_DONE_COURSE, REMOVE_DONE_COURSE_ALL, CHANGE_DONE_COURSE_PENDING_EDIT, CLEAR_DONE_COURSE_PENDING_EDIT} from \"../actions/course_student.action\";\r\nimport { ICourseStudent, CourseStudentModificationStatus } from \"../models/course_student.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseStudentState = {\r\n    modificationState: CourseStudentModificationStatus.None,\r\n    selectedCourseStudent: null,\r\n    courses_registed: [],\r\n    courses_not_registed_now: []\r\n};\r\n\r\nfunction courseStudentsReducer(state: ICourseStudentState = initialState, action: IActionBase): ICourseStudentState {\r\n    switch (action.type) {\r\n        case INITIAL_DOING_COURSE: {\r\n            return { ...state, courses_not_registed_now : [...state.courses_not_registed_now, action.course_student]};\r\n        }\r\n        case ADD_DOING_COURSE: {\r\n            return { ...state, courses_not_registed_now: [...state.courses_not_registed_now, action.course_student]};\r\n        }\r\n        case EDIT_DOING_COURSE: {\r\n            const foundIndex: number = state.courses_not_registed_now.findIndex(pr => pr.id === action.course_student.id);\r\n            let courses_not_registed_now: ICourseStudent[] = state.courses_not_registed_now;\r\n            courses_not_registed_now[foundIndex] = action.course_student;\r\n            return { ...state, courses_not_registed_now: courses_not_registed_now };\r\n        }\r\n        case REMOVE_DOING_COURSE: {\r\n            return { ...state, courses_not_registed_now: state.courses_not_registed_now.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DOING_COURSE_ALL: {\r\n            return { ...state, courses_not_registed_now: [] };\r\n        }\r\n        case CHANGE_DOING_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseStudent: action.course_student };\r\n        }\r\n        case CLEAR_DOING_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseStudent: null };\r\n        }\r\n\r\n        case INITIAL_DONE_COURSE: {\r\n            return { ...state, courses_registed : [...state.courses_registed, action.course_student]};\r\n        }\r\n        case ADD_DONE_COURSE: {\r\n            return { ...state, courses_registed: [...state.courses_registed, action.course_student]};\r\n        }\r\n        case EDIT_DONE_COURSE: {\r\n            const foundIndex: number = state.courses_registed.findIndex(pr => pr.id === action.course_student.id);\r\n            let courses_registed: ICourseStudent[] = state.courses_not_registed_now;\r\n            courses_registed[foundIndex] = action.course_student;\r\n            return { ...state, courses_registed: courses_registed };\r\n        }\r\n        case REMOVE_DONE_COURSE: {\r\n            return { ...state, courses_registed: state.courses_registed.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_DONE_COURSE_ALL: {\r\n            return { ...state, courses_registed: [] };\r\n        }\r\n        case CHANGE_DONE_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseStudent: action.course_student };\r\n        }\r\n        case CLEAR_DONE_COURSE_PENDING_EDIT: {\r\n            return { ...state, selectedCourseStudent: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default courseStudentsReducer;","export interface ICourseNew {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    \r\n    art_type_id: number;\r\n    art_level_id: number;\r\n    art_age_id: number;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    total: number;\r\n    total_register: number;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum CourseNewModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICourseNewState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_COURSE_NEW, CHANGE_COURSE_NEW_PENDING_EDIT, EDIT_COURSE_NEW, REMOVE_COURSE_NEW,\r\n    CLEAR_COURSE_NEW_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_COURSE_NEW, REMOVE_COURSE_NEW_ALL} from \"../actions/course_new.action\";\r\nimport { ICourseNew, CourseNewModificationStatus } from \"../models/course_new.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseNewState = {\r\n    modificationState: CourseNewModificationStatus.None,\r\n    selectedCourseNew: null,\r\n    course_news: []\r\n};\r\n\r\nfunction course_newsReducer(state: ICourseNewState = initialState, action: IActionBase): ICourseNewState {\r\n    switch (action.type) {\r\n        case INITIAL_COURSE_NEW: {\r\n            return { ...state, course_news : [...state.course_news, action.course_new]};\r\n        }\r\n        case ADD_COURSE_NEW: {\r\n            return { ...state, course_news: [...state.course_news, action.course_new]};\r\n        }\r\n        case EDIT_COURSE_NEW: {\r\n            const foundIndex: number = state.course_news.findIndex(pr => pr.id === action.course_new.id);\r\n            let course_news: ICourseNew[] = state.course_news;\r\n            course_news[foundIndex] = action.course_new;\r\n            return { ...state, course_news: course_news };\r\n        }\r\n        case REMOVE_COURSE_NEW: {\r\n            return { ...state, course_news: state.course_news.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_COURSE_NEW_ALL: {\r\n            return { ...state, course_news: [] };\r\n        }\r\n        case CHANGE_COURSE_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedCourseNew: action.course_new };\r\n        }\r\n        case CLEAR_COURSE_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedCourseNew: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default course_newsReducer;","export interface ISemesterClassStudent {\r\n    id: any;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: number;\r\n    semester_class_id: number;\r\n    start_date: string;\r\n    registration_expiration_time: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    semester_name: string;\r\n    semester_id: number;\r\n    status: string;\r\n    image_url: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    total_register: number;\r\n    schedule: string;\r\n    registration_deadline: string;\r\n}\r\n\r\nexport enum SemesterClassStudentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ISemesterClassStudentState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_NOT_PAYED_NOW, EDIT_NOT_PAYED_NOW, REMOVE_NOT_PAYED_NOW,INITIAL_NOT_PAYED_NOW, REMOVE_NOT_PAYED_NOW_ALL, \r\n    ADD_PAYED, EDIT_PAYED, REMOVE_PAYED, INITIAL_PAYED, REMOVE_PAYED_ALL, \r\n    ADD_NOT_PAYED, EDIT_NOT_PAYED, REMOVE_NOT_PAYED , INITIAL_NOT_PAYED, REMOVE_NOT_PAYED_ALL,\r\n    CLEAR_NOT_PAYED_NOW_PENDING_EDIT, CHANGE_NOT_PAYED_NOW_PENDING_EDIT, SET_MODIFICATION_STATE\r\n\r\n} from \"../actions/semester_class_student.action\";\r\nimport { ISemesterClassStudent, SemesterClassStudentModificationStatus } from \"../models/semester_class_student.interface\";\r\n\r\nconst initialState: ISemesterClassStudentState = {\r\n    modificationState: SemesterClassStudentModificationStatus.None,\r\n    selectedSemesterClassStudent: null,\r\n    not_payed_now: [],\r\n    payed: [],\r\n    not_payed: []\r\n};\r\n\r\nfunction semesterClassStudentReducer(state: ISemesterClassStudentState = initialState, action: IActionBase): ISemesterClassStudentState {\r\n    switch (action.type) {\r\n        case INITIAL_NOT_PAYED_NOW: {\r\n            return { ...state, not_payed_now : [...state.not_payed_now, action.semester_class_student]};\r\n        }\r\n        case REMOVE_NOT_PAYED_NOW_ALL: {\r\n            return { ...state, not_payed_now: [] };\r\n        }\r\n        case ADD_NOT_PAYED_NOW: {\r\n            return { ...state, not_payed_now: [...state.not_payed_now, action.semester_class_student]};\r\n        }\r\n        case EDIT_NOT_PAYED_NOW: {\r\n            const foundIndex: number = state.not_payed_now.findIndex(pr => pr.id === action.semester_class_student.id);\r\n            let not_payed_now: ISemesterClassStudent[] = state.not_payed_now;\r\n            not_payed_now[foundIndex] = action.semester_class_student;\r\n            return { ...state, not_payed_now: not_payed_now };\r\n        }\r\n        case REMOVE_NOT_PAYED_NOW: {\r\n            return { ...state, not_payed_now: state.not_payed_now.filter(x=>x.id !== action.semester_class_student.id)};\r\n        }\r\n\r\n        case INITIAL_PAYED: {\r\n            return { ...state, payed : [...state.payed, action.semester_class_student]};\r\n        }\r\n        case REMOVE_PAYED_ALL: {\r\n            return { ...state, payed: [] };\r\n        }\r\n        case ADD_PAYED: {\r\n            return { ...state, payed: [...state.payed, action.semester_class_student]};\r\n        }\r\n        case EDIT_PAYED: {\r\n            const foundIndex: number = state.payed.findIndex(pr => pr.id === action.semester_class_student.id);\r\n            let accept_not_payed_now: ISemesterClassStudent[] = state.payed;\r\n            accept_not_payed_now[foundIndex] = action.semester_class_student;\r\n            return { ...state, payed: accept_not_payed_now };\r\n        }\r\n        case REMOVE_PAYED: {\r\n            return { ...state, payed: state.payed.filter(x=>x.id !== action.semester_class_student.id)};\r\n        }\r\n\r\n        case INITIAL_NOT_PAYED: {\r\n            return { ...state, not_payed : [...state.not_payed, action.semester_class_student]};\r\n        }\r\n        case REMOVE_NOT_PAYED_ALL: {\r\n            return { ...state, not_payed: [] };\r\n        }\r\n        case ADD_NOT_PAYED: {\r\n            return { ...state, not_payed: [...state.not_payed, action.semester_class_student]};\r\n        }\r\n        case EDIT_NOT_PAYED: {\r\n            const foundIndex: number = state.not_payed.findIndex(pr => pr.id === action.semester_class_student.id);\r\n            let remove_not_payed_now: ISemesterClassStudent[] = state.not_payed;\r\n            remove_not_payed_now[foundIndex] = action.semester_class_student;\r\n            return { ...state, not_payed: remove_not_payed_now };\r\n        }\r\n        case REMOVE_NOT_PAYED: {\r\n            return { ...state, not_payed: state.not_payed.filter(x=>x.id !== action.semester_class_student.id)};\r\n        }\r\n        \r\n        case CHANGE_NOT_PAYED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClassStudent: action.semester_class_student };\r\n        }\r\n        case CLEAR_NOT_PAYED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClassStudent: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default semesterClassStudentReducer;","export interface IClassHasRegisterJoinSemester {\r\n    classes_id: number;\r\n    user_register_join_semester_id: number;\r\n    review_star: number;\r\n    student_feedback: string;\r\n    teacher_feedback: string;\r\n}\r\n\r\nexport enum ClassHasRegisterJoinSemesterModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IClassHasRegisterJoinSemesterState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CLASS_HAS_REGISTER_JOIN_SEMESTER, CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT, EDIT_CLASS_HAS_REGISTER_JOIN_SEMESTER, REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER,\r\n    CLEAR_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_CLASS_HAS_REGISTER_JOIN_SEMESTER, REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER_ALL} from \"../actions/class_has_register_join_semester.action\";\r\nimport { IClassHasRegisterJoinSemester, ClassHasRegisterJoinSemesterModificationStatus } from \"../models/class_has_register_join_semester.interface\";\r\n\r\n\r\n\r\nconst initialState: IClassHasRegisterJoinSemesterState = {\r\n    modificationState: ClassHasRegisterJoinSemesterModificationStatus.None,\r\n    selectedClassHasRegisterJoinSemester: null,\r\n    class_has_register_join_semesters: []\r\n};\r\n\r\nfunction class_has_register_join_semestersReducer(state: IClassHasRegisterJoinSemesterState = initialState, action: IActionBase): IClassHasRegisterJoinSemesterState {\r\n    switch (action.type) {\r\n        case INITIAL_CLASS_HAS_REGISTER_JOIN_SEMESTER: {\r\n            return { ...state, class_has_register_join_semesters : [...state.class_has_register_join_semesters, action.class_has_register_join_semester]};\r\n        }\r\n        case ADD_CLASS_HAS_REGISTER_JOIN_SEMESTER: {\r\n            return { ...state, class_has_register_join_semesters: [...state.class_has_register_join_semesters, action.class_has_register_join_semester]};\r\n        }\r\n        case EDIT_CLASS_HAS_REGISTER_JOIN_SEMESTER: {\r\n            const foundIndex: number = state.class_has_register_join_semesters.findIndex(pr => pr.classes_id === action.class_has_register_join_semester.classes_id);\r\n            let class_has_register_join_semesters: IClassHasRegisterJoinSemester[] = state.class_has_register_join_semesters;\r\n            class_has_register_join_semesters[foundIndex] = action.class_has_register_join_semester;\r\n            return { ...state, class_has_register_join_semesters: class_has_register_join_semesters };\r\n        }\r\n        case REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER: {\r\n            return { ...state, class_has_register_join_semesters: state.class_has_register_join_semesters.filter(pr => pr.classes_id !== action.id) };\r\n        }\r\n        case REMOVE_CLASS_HAS_REGISTER_JOIN_SEMESTER_ALL: {\r\n            return { ...state, class_has_register_join_semesters: [] };\r\n        }\r\n        case CHANGE_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT: {\r\n            return { ...state, selectedClassHasRegisterJoinSemester: action.class_has_register_join_semester };\r\n        }\r\n        case CLEAR_CLASS_HAS_REGISTER_JOIN_SEMESTER_PENDING_EDIT: {\r\n            return { ...state, selectedClassHasRegisterJoinSemester: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default class_has_register_join_semestersReducer;","export interface ICourseParentNew {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    \r\n    art_type_id: number;\r\n    art_level_id: number;\r\n    art_age_id: number;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    total: number;\r\n    total_register: number;\r\n    student_name: string;\r\n    student_id: number;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum CourseParentNewModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICourseParentNewState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_COURSE_PARENT_NEW, CHANGE_COURSE_PARENT_NEW_PENDING_EDIT, EDIT_COURSE_PARENT_NEW, REMOVE_COURSE_PARENT_NEW,\r\n    CLEAR_COURSE_PARENT_NEW_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_COURSE_PARENT_NEW, REMOVE_COURSE_PARENT_NEW_ALL} from \"../actions/course_parent_new.action\";\r\nimport { ICourseParentNew, CourseParentNewModificationStatus } from \"../models/course_parent_new.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseParentNewState = {\r\n    modificationState: CourseParentNewModificationStatus.None,\r\n    selectedCourseParentNew: null,\r\n    courses: []\r\n};\r\n\r\nfunction course_parent_newsReducer(state: ICourseParentNewState = initialState, action: IActionBase): ICourseParentNewState {\r\n    switch (action.type) {\r\n        case INITIAL_COURSE_PARENT_NEW: {\r\n            return { ...state, courses : [...state.courses, action.course_parent_new]};\r\n        }\r\n        case ADD_COURSE_PARENT_NEW: {\r\n            return { ...state, courses: [...state.courses, action.course_parent_new]};\r\n        }\r\n        case EDIT_COURSE_PARENT_NEW: {\r\n            const foundIndex: number = state.courses.findIndex(pr => pr.id === action.course_parent_new.id);\r\n            let courses: ICourseParentNew[] = state.courses;\r\n            courses[foundIndex] = action.course_parent_new;\r\n            return { ...state, courses: courses };\r\n        }\r\n        case REMOVE_COURSE_PARENT_NEW: {\r\n            return { ...state, courses: state.courses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_COURSE_PARENT_NEW_ALL: {\r\n            return { ...state, courses: [] };\r\n        }\r\n        case CHANGE_COURSE_PARENT_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedCourseParentNew: action.course_parent_new };\r\n        }\r\n        case CLEAR_COURSE_PARENT_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedCourseParentNew: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default course_parent_newsReducer;","export interface ISemesterClassParent {\r\n    id: any;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: number;\r\n    semester_class_id: number;\r\n    start_date: string;\r\n    registration_expiration_time: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    semester_name: string;\r\n    semester_id: number;\r\n    status: string;\r\n    image_url: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    total_register: number;\r\n    schedule: string;\r\n    student_id: number;\r\n    student_name: string;\r\n    registration_deadline: string;\r\n}\r\n\r\nexport enum SemesterClassParentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ISemesterClassParentState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_NOT_PAYED_NOW, EDIT_NOT_PAYED_NOW, REMOVE_NOT_PAYED_NOW,INITIAL_NOT_PAYED_NOW, REMOVE_NOT_PAYED_NOW_ALL, \r\n    ADD_PAYED, EDIT_PAYED, REMOVE_PAYED, INITIAL_PAYED, REMOVE_PAYED_ALL, \r\n    ADD_NOT_PAYED, EDIT_NOT_PAYED, REMOVE_NOT_PAYED , INITIAL_NOT_PAYED, REMOVE_NOT_PAYED_ALL,\r\n    CLEAR_NOT_PAYED_NOW_PENDING_EDIT, CHANGE_NOT_PAYED_NOW_PENDING_EDIT, SET_MODIFICATION_STATE\r\n\r\n} from \"../actions/semester_class_parent.action\";\r\nimport { ISemesterClassParent, SemesterClassParentModificationStatus } from \"../models/semester_class_parent.interface\";\r\n\r\nconst initialState: ISemesterClassParentState = {\r\n    modificationState: SemesterClassParentModificationStatus.None,\r\n    selectedSemesterClassParent: null,\r\n    not_payed_now: [],\r\n    payed: [],\r\n    not_payed: []\r\n};\r\n\r\nfunction semesterClassParentReducer(state: ISemesterClassParentState = initialState, action: IActionBase): ISemesterClassParentState {\r\n    switch (action.type) {\r\n        case INITIAL_NOT_PAYED_NOW: {\r\n            return { ...state, not_payed_now : [...state.not_payed_now, action.semester_class_parent]};\r\n        }\r\n        case REMOVE_NOT_PAYED_NOW_ALL: {\r\n            return { ...state, not_payed_now: [] };\r\n        }\r\n        case ADD_NOT_PAYED_NOW: {\r\n            return { ...state, not_payed_now: [...state.not_payed_now, action.semester_class_parent]};\r\n        }\r\n        case EDIT_NOT_PAYED_NOW: {\r\n            const foundIndex: number = state.not_payed_now.findIndex(pr => pr.id === action.semester_class_parent.id);\r\n            let not_payed_now: ISemesterClassParent[] = state.not_payed_now;\r\n            not_payed_now[foundIndex] = action.semester_class_parent;\r\n            return { ...state, not_payed_now: not_payed_now };\r\n        }\r\n        case REMOVE_NOT_PAYED_NOW: {\r\n            return { ...state, not_payed_now: state.not_payed_now.filter(x=>x.id !== action.semester_class_parent.id)};\r\n        }\r\n\r\n        case INITIAL_PAYED: {\r\n            return { ...state, payed : [...state.payed, action.semester_class_parent]};\r\n        }\r\n        case REMOVE_PAYED_ALL: {\r\n            return { ...state, payed: [] };\r\n        }\r\n        case ADD_PAYED: {\r\n            return { ...state, payed: [...state.payed, action.semester_class_parent]};\r\n        }\r\n        case EDIT_PAYED: {\r\n            const foundIndex: number = state.payed.findIndex(pr => pr.id === action.semester_class_parent.id);\r\n            let accept_not_payed_now: ISemesterClassParent[] = state.payed;\r\n            accept_not_payed_now[foundIndex] = action.semester_class_parent;\r\n            return { ...state, payed: accept_not_payed_now };\r\n        }\r\n        case REMOVE_PAYED: {\r\n            return { ...state, payed: state.payed.filter(x=>x.id !== action.semester_class_parent.id)};\r\n        }\r\n\r\n        case INITIAL_NOT_PAYED: {\r\n            return { ...state, not_payed : [...state.not_payed, action.semester_class_parent]};\r\n        }\r\n        case REMOVE_NOT_PAYED_ALL: {\r\n            return { ...state, not_payed: [] };\r\n        }\r\n        case ADD_NOT_PAYED: {\r\n            return { ...state, not_payed: [...state.not_payed, action.semester_class_parent]};\r\n        }\r\n        case EDIT_NOT_PAYED: {\r\n            const foundIndex: number = state.not_payed.findIndex(pr => pr.id === action.semester_class_parent.id);\r\n            let remove_not_payed_now: ISemesterClassParent[] = state.not_payed;\r\n            remove_not_payed_now[foundIndex] = action.semester_class_parent;\r\n            return { ...state, not_payed: remove_not_payed_now };\r\n        }\r\n        case REMOVE_NOT_PAYED: {\r\n            return { ...state, not_payed: state.not_payed.filter(x=>x.id !== action.semester_class_parent.id)};\r\n        }\r\n        \r\n        case CHANGE_NOT_PAYED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClassParent: action.semester_class_parent };\r\n        }\r\n        case CLEAR_NOT_PAYED_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClassParent: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default semesterClassParentReducer;","export interface IContestParentNew{\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    \r\n    art_type_id: number;\r\n    art_age_id: number;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n    student_name: string;\r\n    student_id: number;\r\n}\r\n\r\nexport enum ContestParentNewModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IContestParentNewState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CONTEST_PARENT_NEW, CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT, EDIT_CONTEST_PARENT_NEW, REMOVE_CONTEST_PARENT_NEW,\r\n    CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_CONTEST_PARENT_NEW, REMOVE_CONTEST_PARENT_NEW_ALL} from \"../actions/contest_parent_new.action\";\r\nimport { IContestParentNew, ContestParentNewModificationStatus } from \"../models/contest_parent_new.interface\";\r\n\r\n\r\n\r\nconst initialState: IContestParentNewState = {\r\n    modificationState: ContestParentNewModificationStatus.None,\r\n    selectedContestParentNew: null,\r\n    contests: []\r\n};\r\n\r\nfunction contest_parent_newsReducer(state: IContestParentNewState = initialState, action: IActionBase): IContestParentNewState {\r\n    switch (action.type) {\r\n        case INITIAL_CONTEST_PARENT_NEW: {\r\n            return { ...state, contests : [...state.contests, action.contest_parent_new]};\r\n        }\r\n        case ADD_CONTEST_PARENT_NEW: {\r\n            return { ...state, contests: [...state.contests, action.contest_parent_new]};\r\n        }\r\n        case EDIT_CONTEST_PARENT_NEW: {\r\n            const foundIndex: number = state.contests.findIndex(pr => pr.id === action.contest_parent_new.id);\r\n            let contests: IContestParentNew[] = state.contests;\r\n            contests[foundIndex] = action.contest_parent_new;\r\n            return { ...state, contests: contests };\r\n        }\r\n        case REMOVE_CONTEST_PARENT_NEW: {\r\n            return { ...state, contests: state.contests.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_PARENT_NEW_ALL: {\r\n            return { ...state, contests: [] };\r\n        }\r\n        case CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedContestParentNew: action.contest_parent_new };\r\n        }\r\n        case CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedContestParentNew: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default contest_parent_newsReducer;","export interface ICourseTeacherNew {\r\n    id: any;\r\n    name: string;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    image_url: string;\r\n    is_enabled: boolean;\r\n    art_type_id: number;\r\n    art_level_id: number;\r\n    art_age_id: number;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    total: number;\r\n    total_registed: number;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum CourseTeacherNewModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ICourseTeacherNewState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_COURSE_TEACHER_NEW, CHANGE_COURSE_TEACHER_NEW_PENDING_EDIT, EDIT_COURSE_TEACHER_NEW, REMOVE_COURSE_TEACHER_NEW,\r\n    CLEAR_COURSE_TEACHER_NEW_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_COURSE_TEACHER_NEW, REMOVE_COURSE_TEACHER_NEW_ALL} from \"../actions/course_teacher_new.action\";\r\nimport { ICourseTeacherNew, CourseTeacherNewModificationStatus } from \"../models/course_teacher_new.interface\";\r\n\r\n\r\n\r\nconst initialState: ICourseTeacherNewState = {\r\n    modificationState: CourseTeacherNewModificationStatus.None,\r\n    selectedCourseTeacherNew: null,\r\n    courses: []\r\n};\r\n\r\nfunction course_teacher_newsReducer(state: ICourseTeacherNewState = initialState, action: IActionBase): ICourseTeacherNewState {\r\n    switch (action.type) {\r\n        case INITIAL_COURSE_TEACHER_NEW: {\r\n            return { ...state, courses : [...state.courses, action.course_teacher_new]};\r\n        }\r\n        case ADD_COURSE_TEACHER_NEW: {\r\n            return { ...state, courses: [...state.courses, action.course_teacher_new]};\r\n        }\r\n        case EDIT_COURSE_TEACHER_NEW: {\r\n            const foundIndex: number = state.courses.findIndex(pr => pr.id === action.course_teacher_new.id);\r\n            let courses: ICourseTeacherNew[] = state.courses;\r\n            courses[foundIndex] = action.course_teacher_new;\r\n            return { ...state, courses: courses };\r\n        }\r\n        case REMOVE_COURSE_TEACHER_NEW: {\r\n            return { ...state, courses: state.courses.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_COURSE_TEACHER_NEW_ALL: {\r\n            return { ...state, courses: [] };\r\n        }\r\n        case CHANGE_COURSE_TEACHER_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedCourseTeacherNew: action.course_teacher_new };\r\n        }\r\n        case CLEAR_COURSE_TEACHER_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedCourseTeacherNew: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default course_teacher_newsReducer;","export interface ISemesterClassTeacher {\r\n    id: any;\r\n    name: string;\r\n    course_name: string;\r\n    course_id: number;\r\n    description: string;\r\n    max_participant: number;\r\n    num_of_section: number;\r\n    price: number;\r\n    semester_name: string;\r\n    semester_id: number;\r\n    image_url: string;\r\n    art_type_name: string;\r\n    art_level_name: string;\r\n    art_age_name: string;\r\n    schedule: string;\r\n    total_register: number;\r\n    registration_deadline: string;\r\n    status: string;\r\n}\r\n\r\nexport enum SemesterClassTeacherModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ISemesterClassTeacherState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SEMESTER_CLASS_TEACHER, CHANGE_SEMESTER_CLASS_TEACHER_PENDING_EDIT, EDIT_SEMESTER_CLASS_TEACHER, REMOVE_SEMESTER_CLASS_TEACHER,\r\n    CLEAR_SEMESTER_CLASS_TEACHER_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SEMESTER_CLASS_TEACHER, REMOVE_SEMESTER_CLASS_TEACHER_ALL} from \"../actions/semester_class_teacher.action\";\r\nimport { ISemesterClassTeacher, SemesterClassTeacherModificationStatus } from \"../models/semester_class_teacher.interface\";\r\n\r\n\r\n\r\nconst initialState: ISemesterClassTeacherState = {\r\n    modificationState: SemesterClassTeacherModificationStatus.None,\r\n    selectedSemesterClassTeacher: null,\r\n    semester_class_teachers: []\r\n};\r\n\r\nfunction semester_class_teachersReducer(state: ISemesterClassTeacherState = initialState, action: IActionBase): ISemesterClassTeacherState {\r\n    switch (action.type) {\r\n        case INITIAL_SEMESTER_CLASS_TEACHER: {\r\n            return { ...state, semester_class_teachers : [...state.semester_class_teachers, action.semester_class_teacher]};\r\n        }\r\n        case ADD_SEMESTER_CLASS_TEACHER: {\r\n            return { ...state, semester_class_teachers: [...state.semester_class_teachers, action.semester_class_teacher]};\r\n        }\r\n        case EDIT_SEMESTER_CLASS_TEACHER: {\r\n            const foundIndex: number = state.semester_class_teachers.findIndex(pr => pr.id === action.semester_class_teacher.id);\r\n            let semester_class_teachers: ISemesterClassTeacher[] = state.semester_class_teachers;\r\n            semester_class_teachers[foundIndex] = action.semester_class_teacher;\r\n            return { ...state, semester_class_teachers: semester_class_teachers };\r\n        }\r\n        case REMOVE_SEMESTER_CLASS_TEACHER: {\r\n            return { ...state, semester_class_teachers: state.semester_class_teachers.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SEMESTER_CLASS_TEACHER_ALL: {\r\n            return { ...state, semester_class_teachers: [] };\r\n        }\r\n        case CHANGE_SEMESTER_CLASS_TEACHER_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClassTeacher: action.semester_class_teacher };\r\n        }\r\n        case CLEAR_SEMESTER_CLASS_TEACHER_PENDING_EDIT: {\r\n            return { ...state, selectedSemesterClassTeacher: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default semester_class_teachersReducer;","export interface IContestSubmissionTeacher {\r\n    id: any;\r\n    student_id: number;\r\n    contest_id: number;\r\n    student_name: string;\r\n    contest_name: string;\r\n    teacher_id: number;\r\n    teacher_name: string;\r\n    image_url: string;\r\n    score: number;\r\n    feedback: string;\r\n    time: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ContestSubmissionTeacherModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IContestSubmissionTeacherState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CONTEST_SUBMISSION_TEACHER_NOT_GRADED, CHANGE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT, EDIT_CONTEST_SUBMISSION_TEACHER_NOT_GRADED, REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED,\r\n    CLEAR_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_CONTEST_SUBMISSION_TEACHER_NOT_GRADED, REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_ALL, INITIAL_CONTEST_SUBMISSION_TEACHER_GRADED, ADD_CONTEST_SUBMISSION_TEACHER_GRADED, EDIT_CONTEST_SUBMISSION_TEACHER_GRADED, REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED, REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED_ALL, CHANGE_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT, CLEAR_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT} from \"../actions/contest_submission_teacher.action\";\r\nimport { IContestSubmissionTeacher, ContestSubmissionTeacherModificationStatus } from \"../models/contest_submission_teacher.interface\";\r\n\r\n\r\n\r\nconst initialState: IContestSubmissionTeacherState = {\r\n    modificationState: ContestSubmissionTeacherModificationStatus.None,\r\n    selectedContestSubmissionTeacher: null,\r\n    contest_submission_not_grade: [],\r\n    contest_submission_grade: []\r\n};\r\n\r\nfunction contestSubmissionTeachersReducer(state: IContestSubmissionTeacherState = initialState, action: IActionBase): IContestSubmissionTeacherState {\r\n    switch (action.type) {\r\n        case INITIAL_CONTEST_SUBMISSION_TEACHER_NOT_GRADED: {\r\n            return { ...state, contest_submission_not_grade : [...state.contest_submission_not_grade, action.contest_submission_teacher]};\r\n        }\r\n        case ADD_CONTEST_SUBMISSION_TEACHER_NOT_GRADED: {\r\n            return { ...state, contest_submission_not_grade: [...state.contest_submission_not_grade, action.contest_submission_teacher]};\r\n        }\r\n        case EDIT_CONTEST_SUBMISSION_TEACHER_NOT_GRADED: {\r\n            const foundIndex: number = state.contest_submission_not_grade.findIndex(pr => pr.id === action.contest_submission_teacher.id);\r\n            let contest_submission_not_grade: IContestSubmissionTeacher[] = state.contest_submission_not_grade;\r\n            contest_submission_not_grade[foundIndex] = action.contest_submission_teacher;\r\n            return { ...state, contest_submission_not_grade: contest_submission_not_grade };\r\n        }\r\n        case REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED: {\r\n            return { ...state, contest_submission_not_grade: state.contest_submission_not_grade.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_ALL: {\r\n            return { ...state, contest_submission_not_grade: [] };\r\n        }\r\n        case CHANGE_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedContestSubmissionTeacher: action.contest_submission_teacher };\r\n        }\r\n        case CLEAR_CONTEST_SUBMISSION_TEACHER_NOT_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedContestSubmissionTeacher: null };\r\n        }\r\n\r\n        case INITIAL_CONTEST_SUBMISSION_TEACHER_GRADED: {\r\n            return { ...state, contest_submission_grade : [...state.contest_submission_grade, action.contest_submission_teacher]};\r\n        }\r\n        case ADD_CONTEST_SUBMISSION_TEACHER_GRADED: {\r\n            return { ...state, contest_submission_grade: [...state.contest_submission_grade, action.contest_submission_teacher]};\r\n        }\r\n        case EDIT_CONTEST_SUBMISSION_TEACHER_GRADED: {\r\n            const foundIndex: number = state.contest_submission_grade.findIndex(pr => pr.id === action.contest_submission_teacher.id);\r\n            let contest_submission_grade: IContestSubmissionTeacher[] = state.contest_submission_grade;\r\n            contest_submission_grade[foundIndex] = action.contest_submission_teacher;\r\n            return { ...state, contest_submission_grade: contest_submission_grade };\r\n        }\r\n        case REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED: {\r\n            return { ...state, contest_submission_grade: state.contest_submission_grade.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_SUBMISSION_TEACHER_GRADED_ALL: {\r\n            return { ...state, contest_submission_grade: [] };\r\n        }\r\n        case CHANGE_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedContestSubmissionTeacher: action.contest_submission_teacher };\r\n        }\r\n        case CLEAR_CONTEST_SUBMISSION_TEACHER_GRADED_PENDING_EDIT: {\r\n            return { ...state, selectedContestSubmissionTeacher: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default contestSubmissionTeachersReducer;","import { IChildState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CHILD, CHANGE_CHILD_PENDING_EDIT, EDIT_CHILD, REMOVE_CHILD,\r\n    CLEAR_CHILD_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_CHILD, REMOVE_CHILD_ALL} from \"../actions/child.action\";\r\nimport { IChild, ChildModificationStatus } from \"../models/child.interface\";\r\n\r\n\r\n\r\nconst initialState: IChildState = {\r\n    modificationState: ChildModificationStatus.None,\r\n    selectedChild: null,\r\n    childs: []\r\n};\r\n\r\nfunction childsReducer(state: IChildState = initialState, action: IActionBase): IChildState {\r\n    switch (action.type) {\r\n        case INITIAL_CHILD: {\r\n            return { ...state, childs : [...state.childs, action.child]};\r\n        }\r\n        case ADD_CHILD: {\r\n            return { ...state, childs: [...state.childs, action.child]};\r\n        }\r\n        case EDIT_CHILD: {\r\n            const foundIndex: number = state.childs.findIndex(pr => pr.id === action.child.id);\r\n            let childs: IChild[] = state.childs;\r\n            childs[foundIndex] = action.child;\r\n            return { ...state, childs: childs };\r\n        }\r\n        case REMOVE_CHILD: {\r\n            return { ...state, childs: state.childs.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CHILD_ALL: {\r\n            return { ...state, childs: [] };\r\n        }\r\n        case CHANGE_CHILD_PENDING_EDIT: {\r\n            return { ...state, selectedChild: action.child };\r\n        }\r\n        case CLEAR_CHILD_PENDING_EDIT: {\r\n            return { ...state, selectedChild: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default childsReducer;","export interface IFinalScoreChild {\r\n    course_id: number;\r\n    course_name: string;\r\n    final_score: number;\r\n}\r\n\r\nexport enum FinalScoreChildModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4,\r\n    Create1 = 5\r\n}","import { IFinalScoreChildState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_FINAL_SCORE_CHILD, CHANGE_FINAL_SCORE_CHILD_PENDING_EDIT, EDIT_FINAL_SCORE_CHILD, REMOVE_FINAL_SCORE_CHILD,\r\n    CLEAR_FINAL_SCORE_CHILD_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_FINAL_SCORE_CHILD, REMOVE_FINAL_SCORE_CHILD_ALL} from \"../actions/final_score_child.action\";\r\nimport { IFinalScoreChild, FinalScoreChildModificationStatus } from \"../models/final_score_child.interface\";\r\n\r\n\r\n\r\nconst initialState: IFinalScoreChildState = {\r\n    modificationState: FinalScoreChildModificationStatus.None,\r\n    selectedFinalScoreChild: null,\r\n    final_score_childs: []\r\n};\r\n\r\nfunction final_score_childsReducer(state: IFinalScoreChildState = initialState, action: IActionBase): IFinalScoreChildState {\r\n    switch (action.type) {\r\n        case INITIAL_FINAL_SCORE_CHILD: {\r\n            return { ...state, final_score_childs : [...state.final_score_childs, action.final_score_child]};\r\n        }\r\n        case ADD_FINAL_SCORE_CHILD: {\r\n            return { ...state, final_score_childs: [...state.final_score_childs, action.final_score_child]};\r\n        }\r\n        case EDIT_FINAL_SCORE_CHILD: {\r\n            const foundIndex: number = state.final_score_childs.findIndex(pr => pr.course_id === action.final_score_child.course_id);\r\n            let final_score_childs: IFinalScoreChild[] = state.final_score_childs;\r\n            final_score_childs[foundIndex] = action.final_score_child;\r\n            return { ...state, final_score_childs: final_score_childs };\r\n        }\r\n        case REMOVE_FINAL_SCORE_CHILD: {\r\n            return { ...state, final_score_childs: state.final_score_childs.filter(pr => pr.course_id !== action.course_id) };\r\n        }\r\n        case REMOVE_FINAL_SCORE_CHILD_ALL: {\r\n            return { ...state, final_score_childs: [] };\r\n        }\r\n        case CHANGE_FINAL_SCORE_CHILD_PENDING_EDIT: {\r\n            return { ...state, selectedFinalScoreChild: action.final_score_child };\r\n        }\r\n        case CLEAR_FINAL_SCORE_CHILD_PENDING_EDIT: {\r\n            return { ...state, selectedFinalScoreChild: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default final_score_childsReducer;","export interface IExerciseTeacher {\r\n    id: any;\r\n    name: string;\r\n    status: string;\r\n    description: string;\r\n    section_id: number;\r\n    deadline: string;\r\n    teacher_name: string;\r\n    section_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ExerciseTeacherModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IExerciseTeacherState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_EXERCISE_NO_SUBMISSION, EDIT_EXERCISE_NO_SUBMISSION, REMOVE_EXERCISE_NO_SUBMISSION,INITIAL_EXERCISE_NO_SUBMISSION, REMOVE_EXERCISE_NO_SUBMISSION_ALL, \r\n    ADD_EXERCISE_SCORING, EDIT_EXERCISE_SCORING, REMOVE_EXERCISE_SCORING, INITIAL_EXERCISE_SCORING, REMOVE_EXERCISE_SCORING_ALL, \r\n    ADD_EXERCISE_SCORING_DONE, EDIT_EXERCISE_SCORING_DONE, REMOVE_EXERCISE_SCORING_DONE , INITIAL_EXERCISE_SCORING_DONE, REMOVE_EXERCISE_SCORING_DONE_ALL,\r\n    SET_MODIFICATION_STATE\r\n\r\n} from \"../actions/exercise_teacher.action\";\r\nimport { IExerciseTeacher, ExerciseTeacherModificationStatus } from \"../models/exercise_teacher.interface\";\r\n\r\nconst initialState: IExerciseTeacherState = {\r\n    modificationState: ExerciseTeacherModificationStatus.None,\r\n    selectedExerciseTeacher: null,\r\n    exercise_no_submissions: [],\r\n    exercise_scoring: [],\r\n    exercise_scroring_done: []\r\n};\r\n\r\nfunction exerciseTeacherReducer(state: IExerciseTeacherState = initialState, action: IActionBase): IExerciseTeacherState {\r\n    switch (action.type) {\r\n        case INITIAL_EXERCISE_NO_SUBMISSION: {\r\n            return { ...state, exercise_no_submissions : [...state.exercise_no_submissions, action.exercise_teacher]};\r\n        }\r\n        case REMOVE_EXERCISE_NO_SUBMISSION_ALL: {\r\n            return { ...state, exercise_no_submissions: [] };\r\n        }\r\n        case ADD_EXERCISE_NO_SUBMISSION: {\r\n            return { ...state, exercise_no_submissions: [...state.exercise_no_submissions, action.exercise_teacher]};\r\n        }\r\n        case EDIT_EXERCISE_NO_SUBMISSION: {\r\n            const foundIndex: number = state.exercise_no_submissions.findIndex(pr => pr.id === action.exercise_teacher.id);\r\n            let exercise_no_submissionss: IExerciseTeacher[] = state.exercise_no_submissions;\r\n            exercise_no_submissionss[foundIndex] = action.exercise_teacher;\r\n            return { ...state, exercise_no_submissions: exercise_no_submissionss };\r\n        }\r\n        case REMOVE_EXERCISE_NO_SUBMISSION: {\r\n            return { ...state, exercise_no_submissions: state.exercise_no_submissions.filter(x=>x.id !== action.exercise_teacher.id)};\r\n        }\r\n\r\n        case INITIAL_EXERCISE_SCORING: {\r\n            return { ...state, exercise_scoring : [...state.exercise_scoring, action.exercise_teacher]};\r\n        }\r\n        case REMOVE_EXERCISE_SCORING_ALL: {\r\n            return { ...state, exercise_scoring: [] };\r\n        }\r\n        case ADD_EXERCISE_SCORING: {\r\n            return { ...state, exercise_scoring: [...state.exercise_scoring, action.exercise_teacher]};\r\n        }\r\n        case EDIT_EXERCISE_SCORING: {\r\n            const foundIndex: number = state.exercise_scoring.findIndex(pr => pr.id === action.exercise_teacher.id);\r\n            let accept_exercise_no_submissions: IExerciseTeacher[] = state.exercise_scoring;\r\n            accept_exercise_no_submissions[foundIndex] = action.exercise_teacher;\r\n            return { ...state, exercise_scoring: accept_exercise_no_submissions };\r\n        }\r\n        case REMOVE_EXERCISE_SCORING: {\r\n            return { ...state, exercise_scoring: state.exercise_scoring.filter(x=>x.id !== action.exercise_teacher.id)};\r\n        }\r\n\r\n        case INITIAL_EXERCISE_SCORING_DONE: {\r\n            return { ...state, exercise_scroring_done : [...state.exercise_scroring_done, action.exercise_teacher]};\r\n        }\r\n        case REMOVE_EXERCISE_SCORING_DONE_ALL: {\r\n            return { ...state, exercise_scroring_done: [] };\r\n        }\r\n        case ADD_EXERCISE_SCORING_DONE: {\r\n            return { ...state, exercise_scroring_done: [...state.exercise_scroring_done, action.exercise_teacher]};\r\n        }\r\n        case EDIT_EXERCISE_SCORING_DONE: {\r\n            const foundIndex: number = state.exercise_scroring_done.findIndex(pr => pr.id === action.exercise_teacher.id);\r\n            let remove_exercise_no_submissions: IExerciseTeacher[] = state.exercise_scroring_done;\r\n            remove_exercise_no_submissions[foundIndex] = action.exercise_teacher;\r\n            return { ...state, exercise_scroring_done: remove_exercise_no_submissions };\r\n        }\r\n        case REMOVE_EXERCISE_SCORING_DONE: {\r\n            return { ...state, exercise_scroring_done: state.exercise_scroring_done.filter(x=>x.id !== action.exercise_teacher.id)};\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default exerciseTeacherReducer;","export interface IContestParent{\r\n    id: any;\r\n    name: string;\r\n    student_id: number;\r\n    student_name: string;\r\n    description: string;\r\n    status: string;\r\n    max_participant: number;\r\n    total_register_contest: number;\r\n    total_contest_submission: number;\r\n    total_contest_submission_graded: number;\r\n    registration_time: string;\r\n    image_url: string;\r\n    start_time: string;\r\n    end_time: string;\r\n    is_enabled: boolean;\r\n    \r\n    art_type_id: number;\r\n    art_age_id: number;\r\n    art_type_name: string;\r\n    art_age_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ContestParentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IContestParentState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CONTEST_PARENT_OPENING, CHANGE_CONTEST_PARENT_OPENING_PENDING_EDIT, EDIT_CONTEST_PARENT_OPENING, REMOVE_CONTEST_PARENT_OPENING,\r\n    CLEAR_CONTEST_PARENT_OPENING_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_CONTEST_PARENT_OPENING, REMOVE_CONTEST_PARENT_OPENING_ALL, INITIAL_CONTEST_PARENT_NEW, ADD_CONTEST_PARENT_NEW, EDIT_CONTEST_PARENT_NEW, REMOVE_CONTEST_PARENT_NEW, REMOVE_CONTEST_PARENT_NEW_ALL, CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT, CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT, INITIAL_CONTEST_PARENT_END, EDIT_CONTEST_PARENT_END, ADD_CONTEST_PARENT_END, REMOVE_CONTEST_PARENT_END, REMOVE_CONTEST_PARENT_END_ALL, CHANGE_CONTEST_PARENT_END_PENDING_EDIT, CLEAR_CONTEST_PARENT_END_PENDING_EDIT, INITIAL_CONTEST_PARENT_NOT_OPEN_NOW, ADD_CONTEST_PARENT_NOT_OPEN_NOW, EDIT_CONTEST_PARENT_NOT_OPEN_NOW, REMOVE_CONTEST_PARENT_NOT_OPEN_NOW, REMOVE_CONTEST_PARENT_NOT_OPEN_NOW_ALL, CHANGE_CONTEST_PARENT_NOT_OPEN_NOW_PENDING_EDIT, CLEAR_CONTEST_PARENT_NOT_OPEN_NOW_PENDING_EDIT} from \"../actions/contest_parent.action\";\r\nimport { IContestParent, ContestParentModificationStatus } from \"../models/contest_parent.interface\";\r\n\r\n\r\n\r\nconst initialState: IContestParentState = {\r\n    modificationState: ContestParentModificationStatus.None,\r\n    selectedContestParent: null,\r\n    contest_opening: [],\r\n    contest_not_open_now: [],\r\n    contest_end: [],\r\n    contest_new: []\r\n};\r\n\r\nfunction contestParentsReducer(state: IContestParentState = initialState, action: IActionBase): IContestParentState {\r\n    switch (action.type) {\r\n        case INITIAL_CONTEST_PARENT_OPENING: {\r\n            return { ...state, contest_opening : [...state.contest_opening, action.contest]};\r\n        }\r\n        case ADD_CONTEST_PARENT_OPENING: {\r\n            return { ...state, contest_opening: [...state.contest_opening, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_PARENT_OPENING: {\r\n            const foundIndex: number = state.contest_opening.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_opening: IContestParent[] = state.contest_opening;\r\n            contest_opening[foundIndex] = action.contest;\r\n            return { ...state, contest_opening: contest_opening };\r\n        }\r\n        case REMOVE_CONTEST_PARENT_OPENING: {\r\n            return { ...state, contest_opening: state.contest_opening.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_PARENT_OPENING_ALL: {\r\n            return { ...state, contest_opening: [] };\r\n        }\r\n        case CHANGE_CONTEST_PARENT_OPENING_PENDING_EDIT: {\r\n            return { ...state, selectedContestParent: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_PARENT_OPENING_PENDING_EDIT: {\r\n            return { ...state, selectedContestParent: null };\r\n        }\r\n\r\n\r\n        case INITIAL_CONTEST_PARENT_END: {\r\n            return { ...state, contest_end : [...state.contest_end, action.contest]};\r\n        }\r\n        case ADD_CONTEST_PARENT_END: {\r\n            return { ...state, contest_end: [...state.contest_end, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_PARENT_END: {\r\n            const foundIndex: number = state.contest_end.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_end: IContestParent[] = state.contest_end;\r\n            contest_end[foundIndex] = action.contest;\r\n            return { ...state, contest_end: contest_end };\r\n        }\r\n        case REMOVE_CONTEST_PARENT_END: {\r\n            return { ...state, contest_end: state.contest_end.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_PARENT_END_ALL: {\r\n            return { ...state, contest_end: [] };\r\n        }\r\n        case CHANGE_CONTEST_PARENT_END_PENDING_EDIT: {\r\n            return { ...state, selectedContestParent: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_PARENT_END_PENDING_EDIT: {\r\n            return { ...state, selectedContestParent: null };\r\n        }\r\n\r\n\r\n\r\n        case INITIAL_CONTEST_PARENT_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now : [...state.contest_not_open_now, action.contest]};\r\n        }\r\n        case ADD_CONTEST_PARENT_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now: [...state.contest_not_open_now, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_PARENT_NOT_OPEN_NOW: {\r\n            const foundIndex: number = state.contest_not_open_now.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_not_open_now: IContestParent[] = state.contest_not_open_now;\r\n            contest_not_open_now[foundIndex] = action.contest;\r\n            return { ...state, contest_not_open_now: contest_not_open_now };\r\n        }\r\n        case REMOVE_CONTEST_PARENT_NOT_OPEN_NOW: {\r\n            return { ...state, contest_not_open_now: state.contest_not_open_now.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_PARENT_NOT_OPEN_NOW_ALL: {\r\n            return { ...state, contest_not_open_now: [] };\r\n        }\r\n        case CHANGE_CONTEST_PARENT_NOT_OPEN_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedContestParent: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_PARENT_NOT_OPEN_NOW_PENDING_EDIT: {\r\n            return { ...state, selectedContestParent: null };\r\n        }\r\n\r\n\r\n\r\n        case INITIAL_CONTEST_PARENT_NEW: {\r\n            return { ...state, contest_new : [...state.contest_new, action.contest]};\r\n        }\r\n        case ADD_CONTEST_PARENT_NEW: {\r\n            return { ...state, contest_new: [...state.contest_new, action.contest]};\r\n        }\r\n        case EDIT_CONTEST_PARENT_NEW: {\r\n            const foundIndex: number = state.contest_new.findIndex(pr => pr.id === action.contest.id);\r\n            let contest_new: IContestParent[] = state.contest_new;\r\n            contest_new[foundIndex] = action.contest;\r\n            return { ...state, contest_new: contest_new };\r\n        }\r\n        case REMOVE_CONTEST_PARENT_NEW: {\r\n            return { ...state, contest_new: state.contest_new.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_CONTEST_PARENT_NEW_ALL: {\r\n            return { ...state, contest_new: [] };\r\n        }\r\n        case CHANGE_CONTEST_PARENT_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedContestParent: action.contest };\r\n        }\r\n        case CLEAR_CONTEST_PARENT_NEW_PENDING_EDIT: {\r\n            return { ...state, selectedContestParent: null };\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default contestParentsReducer;","export interface IExerciseParent {\r\n    id: any;\r\n    name: string;\r\n    \r\n    student_id: number;\r\n    student_name: string;\r\n    description: string;\r\n    section_id: number;\r\n    deadline: string;\r\n    time_submit:  string;\r\n    teacher_name: string;\r\n    section_name: string;\r\n    create_time: string;\r\n    update_time: string;\r\n}\r\n\r\nexport enum ExerciseParentModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { IExerciseParentState, IActionBase } from \"../models/root.interface\";\r\nimport { \r\n    ADD_EXERCISE_NOT_SUBMIT, EDIT_EXERCISE_NOT_SUBMIT, REMOVE_EXERCISE_NOT_SUBMIT,INITIAL_EXERCISE_NOT_SUBMIT, REMOVE_EXERCISE_NOT_SUBMIT_ALL, \r\n    ADD_EXERCISE_SUBMITED_NOT_GRADE, EDIT_EXERCISE_SUBMITED_NOT_GRADE, REMOVE_EXERCISE_SUBMITED_NOT_GRADE, INITIAL_EXERCISE_SUBMITED_NOT_GRADE, REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL, \r\n    ADD_EXERCISE_SUBMITED_GRADED, EDIT_EXERCISE_SUBMITED_GRADED, REMOVE_EXERCISE_SUBMITED_GRADED , INITIAL_EXERCISE_SUBMITED_GRADED, REMOVE_EXERCISE_SUBMITED_GRADED_ALL,\r\n    SET_MODIFICATION_STATE\r\n\r\n} from \"../actions/exercise_parent.action\";\r\nimport { IExerciseParent, ExerciseParentModificationStatus } from \"../models/exercise_parent.interface\";\r\n\r\nconst initialState: IExerciseParentState = {\r\n    modificationState: ExerciseParentModificationStatus.None,\r\n    selectedExerciseParent: null,\r\n    exercise_not_submit: [],\r\n    exercise_submitted_not_grade: [],\r\n    exercise_submitted_graded: []\r\n};\r\n\r\nfunction exerciseParentReducer(state: IExerciseParentState = initialState, action: IActionBase): IExerciseParentState {\r\n    switch (action.type) {\r\n        case INITIAL_EXERCISE_NOT_SUBMIT: {\r\n            return { ...state, exercise_not_submit : [...state.exercise_not_submit, action.exercise_parent]};\r\n        }\r\n        case REMOVE_EXERCISE_NOT_SUBMIT_ALL: {\r\n            return { ...state, exercise_not_submit: [] };\r\n        }\r\n        case ADD_EXERCISE_NOT_SUBMIT: {\r\n            return { ...state, exercise_not_submit: [...state.exercise_not_submit, action.exercise_parent]};\r\n        }\r\n        case EDIT_EXERCISE_NOT_SUBMIT: {\r\n            const foundIndex: number = state.exercise_not_submit.findIndex(pr => pr.id === action.exercise_parent.id);\r\n            let exercise_not_submits: IExerciseParent[] = state.exercise_not_submit;\r\n            exercise_not_submits[foundIndex] = action.exercise_parent;\r\n            return { ...state, exercise_not_submit: exercise_not_submits };\r\n        }\r\n        case REMOVE_EXERCISE_NOT_SUBMIT: {\r\n            return { ...state, exercise_not_submit: state.exercise_not_submit.filter(x=>x.id !== action.exercise_parent.id)};\r\n        }\r\n\r\n        case INITIAL_EXERCISE_SUBMITED_NOT_GRADE: {\r\n            return { ...state, exercise_submitted_not_grade : [...state.exercise_submitted_not_grade, action.exercise_parent]};\r\n        }\r\n        case REMOVE_EXERCISE_SUBMITED_NOT_GRADE_ALL: {\r\n            return { ...state, exercise_submitted_not_grade: [] };\r\n        }\r\n        case ADD_EXERCISE_SUBMITED_NOT_GRADE: {\r\n            return { ...state, exercise_submitted_not_grade: [...state.exercise_submitted_not_grade, action.exercise_parent]};\r\n        }\r\n        case EDIT_EXERCISE_SUBMITED_NOT_GRADE: {\r\n            const foundIndex: number = state.exercise_submitted_not_grade.findIndex(pr => pr.id === action.exercise_parent.id);\r\n            let accept_exercise_not_submit: IExerciseParent[] = state.exercise_submitted_not_grade;\r\n            accept_exercise_not_submit[foundIndex] = action.exercise_parent;\r\n            return { ...state, exercise_submitted_not_grade: accept_exercise_not_submit };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMITED_NOT_GRADE: {\r\n            return { ...state, exercise_submitted_not_grade: state.exercise_submitted_not_grade.filter(x=>x.id !== action.exercise_parent.id)};\r\n        }\r\n\r\n        case INITIAL_EXERCISE_SUBMITED_GRADED: {\r\n            return { ...state, exercise_submitted_graded : [...state.exercise_submitted_graded, action.exercise_parent]};\r\n        }\r\n        case REMOVE_EXERCISE_SUBMITED_GRADED_ALL: {\r\n            return { ...state, exercise_submitted_graded: [] };\r\n        }\r\n        case ADD_EXERCISE_SUBMITED_GRADED: {\r\n            return { ...state, exercise_submitted_graded: [...state.exercise_submitted_graded, action.exercise_parent]};\r\n        }\r\n        case EDIT_EXERCISE_SUBMITED_GRADED: {\r\n            const foundIndex: number = state.exercise_submitted_graded.findIndex(pr => pr.id === action.exercise_parent.id);\r\n            let remove_exercise_not_submit: IExerciseParent[] = state.exercise_submitted_graded;\r\n            remove_exercise_not_submit[foundIndex] = action.exercise_parent;\r\n            return { ...state, exercise_submitted_graded: remove_exercise_not_submit };\r\n        }\r\n        case REMOVE_EXERCISE_SUBMITED_GRADED: {\r\n            return { ...state, exercise_submitted_graded: state.exercise_submitted_graded.filter(x=>x.id !== action.exercise_parent.id)};\r\n        }\r\n\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default exerciseParentReducer;","export interface IChildsClass {\r\n    student_id: any,\r\n    student_name: string,\r\n    dateOfBirth: string,\r\n    sex: string,\r\n}\r\n\r\nexport enum ChildsClassModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4,\r\n    ImportFile = 5\r\n}","import { IChildsClassState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_CHILDS_CLASS, CHANGE_CHILDS_CLASS_PENDING_EDIT, EDIT_CHILDS_CLASS, REMOVE_CHILDS_CLASS,\r\n    CLEAR_CHILDS_CLASS_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_CHILDS_CLASS, REMOVE_CHILDS_CLASS_ALL} from \"../actions/childs_class.action\";\r\nimport { IChildsClass, ChildsClassModificationStatus } from \"../models/childs_class.interface\";\r\n\r\n\r\n\r\nconst initialState: IChildsClassState = {\r\n    modificationState: ChildsClassModificationStatus.None,\r\n    selectedChildsClass: null,\r\n    childs_class: []\r\n};\r\n\r\nfunction childs_classReducer(state: IChildsClassState = initialState, action: IActionBase): IChildsClassState {\r\n    switch (action.type) {\r\n        case INITIAL_CHILDS_CLASS: {\r\n            return { ...state, childs_class : [...state.childs_class, action.childs_class]};\r\n        }\r\n        case ADD_CHILDS_CLASS: {\r\n            return { ...state, childs_class: [...state.childs_class, action.childs_class]};\r\n        }\r\n        case EDIT_CHILDS_CLASS: {\r\n            const foundIndex: number = state.childs_class.findIndex(pr => pr.student_id === action.childs_class.id);\r\n            let childs_class: IChildsClass[] = state.childs_class;\r\n            childs_class[foundIndex] = action.childs_class;\r\n            return { ...state, childs_class: childs_class };\r\n        }\r\n        case REMOVE_CHILDS_CLASS: {\r\n            return { ...state, childs_class: state.childs_class.filter(pr => pr.student_id !== action.id) };\r\n        }\r\n        case REMOVE_CHILDS_CLASS_ALL: {\r\n            return { ...state, childs_class: [] };\r\n        }\r\n        case CHANGE_CHILDS_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedChildsClass: action.childs_class };\r\n        }\r\n        case CLEAR_CHILDS_CLASS_PENDING_EDIT: {\r\n            return { ...state, selectedChildsClass: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default childs_classReducer;","export interface ISectionTeacher {\r\n    id: any;\r\n    class_id: number;\r\n    name: string;\r\n    number: number;\r\n    teacher_name: string;\r\n    teach_form: boolean;\r\n    recording: string;\r\n    message: string;\r\n    total_exercise_submission: number;\r\n    total_user_grade_exercise_submission: number;\r\n}\r\n\r\nexport enum SectionTeacherModificationStatus {\r\n    None = 0,\r\n    Create = 1,\r\n    Edit = 2,\r\n    Remove = 3,\r\n    ClosePopup = 4\r\n}","import { ISectionTeacherState, IActionBase } from \"../models/root.interface\";\r\nimport { ADD_SECTION_TEACHER, CHANGE_SECTION_TEACHER_PENDING_EDIT, EDIT_SECTION_TEACHER, REMOVE_SECTION_TEACHER,\r\n    CLEAR_SECTION_TEACHER_PENDING_EDIT, SET_MODIFICATION_STATE, INITIAL_SECTION_TEACHER, REMOVE_SECTION_TEACHER_ALL} from \"../actions/section_teacher.action\";\r\nimport { ISectionTeacher, SectionTeacherModificationStatus } from \"../models/section_teacher.interface\";\r\n\r\n\r\n\r\nconst initialState: ISectionTeacherState = {\r\n    modificationState: SectionTeacherModificationStatus.None,\r\n    selectedSectionTeacher: null,\r\n    sections: []\r\n};\r\n\r\nfunction section_teachersReducer(state: ISectionTeacherState = initialState, action: IActionBase): ISectionTeacherState {\r\n    switch (action.type) {\r\n        case INITIAL_SECTION_TEACHER: {\r\n            return { ...state, sections : [...state.sections, action.section_teacher]};\r\n        }\r\n        case ADD_SECTION_TEACHER: {\r\n            return { ...state, sections: [...state.sections, action.section_teacher]};\r\n        }\r\n        case EDIT_SECTION_TEACHER: {\r\n            const foundIndex: number = state.sections.findIndex(pr => pr.id === action.section_teacher.id);\r\n            let section: ISectionTeacher[] = state.sections;\r\n            section[foundIndex] = action.section_teacher;\r\n            return { ...state, sections: section };\r\n        }\r\n        case REMOVE_SECTION_TEACHER: {\r\n            return { ...state, sections: state.sections.filter(pr => pr.id !== action.id) };\r\n        }\r\n        case REMOVE_SECTION_TEACHER_ALL: {\r\n            return { ...state, sections: [] };\r\n        }\r\n        case CHANGE_SECTION_TEACHER_PENDING_EDIT: {\r\n            return { ...state, selectedSectionTeacher: action.section_teacher };\r\n        }\r\n        case CLEAR_SECTION_TEACHER_PENDING_EDIT: {\r\n            return { ...state, selectedSectionTeacher: null };\r\n        }\r\n        case SET_MODIFICATION_STATE: {\r\n            return { ...state, modificationState: action.value };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default section_teachersReducer;","import { combineReducers, Reducer } from \"redux\";\nimport { UPDATE_CURRENT_PATH } from \"../actions/root.actions\";\nimport { IRootStateType, IActionBase, IStateType } from \"../models/root.interface\";\nimport productsReducer from \"./products.reducer\";\nimport notificationReducer from \"./notification.reducer\";\nimport userReducer from \"./users.reducer\";\nimport orderReducer from \"./order.reducer\";\nimport accountReducer from \"./account.reducer\";\nimport semestersReducer from \"./semester.reducer\";\nimport lessonsReducer from \"./lesson.reducer\";\nimport schedulesReducer from \"./schedule.reducer\";\nimport schedule_itemsReducer from \"./schedule_item.reducer\";\nimport artTypesReducer from \"./art_type.reducer\";\nimport artLevelsReducer from \"./art_level.reducer\";\nimport artAgesReducer from \"./art_age.reducer\";\nimport coursesReducer from \"./course.reducer\";\nimport contestsReducer from \"./contest.reducer\";\nimport sectionTemplatesReducer from \"./section_template.reducer\";\nimport tutorialTemplatesReducer from \"./tutorial_template.reducer\";\nimport userGradeContestsReducer from \"./user_grade_contest.reducer\";\nimport tutorialTemplatePagesReducer from \"./tutorial_template_page.reducer\";\nimport teacherLeaveReducer from \"./teacher_leave.reducer\";\nimport studentLeaveReducer from \"./student_leave.reducer\";\nimport myClassesReducer from \"./my_class.reducer\";\nimport teacher_register_quantificationsReducer from \"./teacher_register_quantification.reducer\";\nimport informationClassesReducer from \"./information_class.reducer\";\nimport time_schedulesReducer from \"./time_schedule.reducer\";\nimport courseTeachersReducer from \"./course_teacher.reducer\";\nimport time_schedule_teachersReducer from \"./time_schedule_teacher.reducer\";\nimport classTeachersReducer from \"./class_teacher.reducer\";\nimport contestTeachersReducer from \"./contest_teacher.reducer\";\nimport semesterClassesReducer from \"./semester_class.reducer\";\nimport anonymousNotificationsReducer from \"./anonymous_notification.reducer\";\nimport sectionsReducer from \"./section.reducer\";\nimport tutorialPagesReducer from \"./tutorial_page.reducer\";\nimport exercisesReducer from \"./exercise.reducer\";\nimport exerciseSubmissionsReducer from \"./exercise_submission.reducer\";\nimport turnoversReducer from \"./turnover.reducer\";\nimport report_usersReducer from \"./report_user.reducer\";\nimport course_reportsReducer from \"./course_report.reducer\";\nimport exercise_levelsReducer from \"./exercise_level.reducer\";\nimport exerciseStudentsReducer from \"./exercise_student.reducer\";\nimport tutorialsReducer from \"./tutorial.reducer\";\nimport userGradeContestSubmissionsReducer from \"./user_grade_contest_submission.reducer\";\nimport user_register_tutorial_pagesReducer from \"./user_register_tutorial_page.reducer\";\nimport userRegisterTutorialReducer from \"./user_register_tutorial.reducer\";\nimport contestSubmissionsReducer from \"./contest_submission.reducer\";\nimport schedule_time_classsReducer from \"./schedule_time_class.reducer\";\nimport notify_dbsReducer from \"./notify_db.reducer\";\nimport userReadNotificationsReducer from \"./user_read_notification.reducer\";\nimport notifysReducer from \"./notify.reducer\";\nimport classes_studentsReducer from \"./classes_student.reducer\";\nimport classesParentsReducer from \"./classes_parent.reducer\";\nimport courseParentsReducer from \"./course_parent.reducer\";\nimport contestStudentsReducer from \"./contest_student.reducer\";\nimport cartReducer from \"./cart.reducer\";\nimport attendancesReducer from \"./attendance.reducer\";\nimport profilesReducer from \"./profile.reducer\";\nimport user_register_join_semestersReducer from \"./user_register_join_semester.reducer\";\nimport courseStudentsReducer from \"./course_student.reducer\";\nimport course_newsReducer from \"./course_new.reducer\";\nimport semesterClassStudentReducer from \"./semester_class_student.reducer\";\nimport class_has_register_join_semestersReducer from \"./class_has_register_join_semester.reducer\";\nimport course_parent_newsReducer from \"./course_parent_new.reducer\";\nimport semesterClassParentReducer from \"./semester_class_parent.reducer\";\nimport contest_parent_newsReducer from \"./contest_parent_new.reducer\";\nimport course_teacher_newsReducer from \"./course_teacher_new.reducer\";\nimport semester_class_teachersReducer from \"./semester_class_teacher.reducer\";\nimport contestSubmissionTeachersReducer from \"./contest_submission_teacher.reducer\";\nimport childsReducer from \"./child.reducer\";\nimport final_score_childsReducer from \"./final_score_child.reducer\";\nimport exerciseTeacherReducer from \"./exercise_teacher.reducer\";\nimport contestParentsReducer from \"./contest_parent.reducer\";\nimport exerciseParentReducer from \"./exercise_parent.reducer\";\nimport childs_classReducer from \"./childs_class.reducer\";\nimport section_teachersReducer from \"./section_teacher.reducer\";\n\n\nconst initialState: IRootStateType = {\n    page: {area: \"Trang chủ\", subArea: \"\"}\n};\n\nfunction rootReducer(state: IRootStateType = initialState, action: IActionBase): IRootStateType {\n    switch (action.type) {\n        case UPDATE_CURRENT_PATH:\n            return { ...state, page: {area: action.area, subArea: action.subArea}};\n        default:\n            return state;\n    }\n}\n\nconst rootReducers: Reducer<IStateType> = combineReducers({root: rootReducer,\n    products: productsReducer,\n    notifications: notificationReducer,\n    users: userReducer,\n    orders: orderReducer,\n    account: accountReducer,\n    semesters: semestersReducer,\n    lessons: lessonsReducer,\n    schedules: schedulesReducer,\n    schedule_items: schedule_itemsReducer,\n    art_types: artTypesReducer,\n    art_levels: artLevelsReducer,\n    art_ages: artAgesReducer,\n    courses: coursesReducer,\n    semester_classes: semesterClassesReducer,\n    contests: contestsReducer,\n    section_templates: sectionTemplatesReducer,\n    tutorial_templates: tutorialTemplatesReducer,\n    user_grade_contests: userGradeContestsReducer,\n    tutorial_template_pages: tutorialTemplatePagesReducer,\n    teacher_leaves: teacherLeaveReducer,\n    student_leaves: studentLeaveReducer,\n    user_register_join_semesters: user_register_join_semestersReducer,\n    myclasses: myClassesReducer,\n    teacher_register_quantifications: teacher_register_quantificationsReducer,\n    information_classes: informationClassesReducer,\n    time_schedules: time_schedulesReducer,\n    course_teachers: courseTeachersReducer,\n    time_schedule_teachers: time_schedule_teachersReducer,\n    class_teachers: classTeachersReducer,\n    contest_teachers: contestTeachersReducer,\n    anonymous_notifications: anonymousNotificationsReducer,\n    sections: sectionsReducer,\n    tutorial_pages: tutorialPagesReducer,\n    exercises: exercisesReducer,\n    exercise_submissions: exerciseSubmissionsReducer,\n    turnovers: turnoversReducer,\n    report_users: report_usersReducer,\n    course_reports: course_reportsReducer,\n    exercise_levels: exercise_levelsReducer,\n    exercise_students: exerciseStudentsReducer,\n    tutorials: tutorialsReducer,\n    user_grade_contest_submissions: userGradeContestSubmissionsReducer,\n    user_register_tutorial_pages: user_register_tutorial_pagesReducer,\n    user_register_tutorials: userRegisterTutorialReducer,\n    contest_submissions: contestSubmissionsReducer,\n    schedule_time_classes: schedule_time_classsReducer,\n    notify_dbs: notify_dbsReducer,\n    user_read_notifications: userReadNotificationsReducer,\n    notifys: notifysReducer,\n    classes_students: classes_studentsReducer,\n    classes_parents: classesParentsReducer,\n    course_parents: courseParentsReducer,\n    contest_students: contestStudentsReducer,\n    carts: cartReducer,\n    attendances: attendancesReducer,\n    profiles: profilesReducer,\n    course_students: courseStudentsReducer,\n    course_news: course_newsReducer,\n    semester_class_student: semesterClassStudentReducer,\n    class_has_register_join_semesters: class_has_register_join_semestersReducer,\n    course_parent_news: course_parent_newsReducer,\n    semester_class_parent: semesterClassParentReducer,\n    contest_parent_new: contest_parent_newsReducer,\n    course_teacher_new: course_teacher_newsReducer,\n    semester_class_teachers: semester_class_teachersReducer,\n    contest_submission_teacher: contestSubmissionTeachersReducer,\n    childs: childsReducer,\n    final_score_childs: final_score_childsReducer,\n    exercise_teachers: exerciseTeacherReducer,\n    contest_parents: contestParentsReducer,\n    exercise_parents: exerciseParentReducer,\n    childs_classes: childs_classReducer,\n    section_teachers: section_teachersReducer,\n});\n\n\n\nexport default rootReducers;","import { createStore, applyMiddleware, Store  } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport rootReducers from \"./reducers/root.reducer\";\n\n\nconst store: Store = createStore(rootReducers, applyMiddleware(\n    thunkMiddleware\n));\n\nstore.subscribe(() => {});\nexport default store;","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\nimport Loading from \"react-loading\";\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Suspense fallback={\n            <div className=\"loader1\"></div>\n        }>\n            <App />\n        </Suspense>\n    </Provider>\n, document.getElementById('root'));\n\n// f you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}