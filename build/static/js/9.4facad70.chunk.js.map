{"version":3,"sources":["common/service/Aut/RefreshToken.tsx","common/service/User/UpdateStatusUser.tsx","components/Discovery/PaymentSuccessfull.tsx","common/service/UserRegisterJoinSemester/PostStatusUserRegisterJoinSemester.tsx"],"names":["postRefreshToken","refresh_token","localStorage","getItem","dispatch","fetch","process","method","headers","body","JSON","stringify","then","response","ok","status","Error","statusText","id","putStatusUser","removeItem","logout","json","data","setItem","accessToken","refreshToken","catch","error","console","log","bearer","fetchDataRequest","val","fetchDataSuccess","fetchDataError","PaymentSuccessfull","useDispatch","queryString","window","location","search","ids","URLSearchParams","get","useEffect","postStatusUserRegisterJoinSemester","className","aria-hidden","href"],"mappings":"wHAAA,uDAGO,SAASA,IACZ,IAAIC,EAAgBC,aAAaC,QAAQ,iBAEzC,OAAO,SAACC,GACJC,MAAM,GAAD,OACMC,yCADN,iBACoD,CAC7CC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB,aAAeV,MAI1BW,MAAM,SAAAC,GACH,IAAKA,EAASC,GAAI,CACd,GAAwB,MAApBD,EAASE,OAeT,MAAMC,MAAMH,EAASI,YAdrB,IAAIC,EAAKhB,aAAaC,QAAQ,MAC9BC,EAASe,YAAcD,EAAI,CACvBH,OAAQ,QAEZb,aAAakB,WAAW,gBACxBlB,aAAakB,WAAW,iBACxBlB,aAAakB,WAAW,YACxBlB,aAAakB,WAAW,QACxBlB,aAAakB,WAAW,MACxBlB,aAAakB,WAAW,cACxBlB,aAAakB,WAAW,eACxBhB,EAASiB,eAMjB,OAAOR,EAASS,UAEnBV,MAAM,SAAAW,GACHrB,aAAakB,WAAW,gBACxBlB,aAAakB,WAAW,iBACxBlB,aAAasB,QAAQ,eAAgBD,EAAKE,aAC1CvB,aAAasB,QAAQ,gBAAiBD,EAAKG,iBAE9CC,OAAM,SAAAC,GACHC,QAAQC,IAAI,e,iCC/C5B,uDAGO,SAASX,EAAcD,EAASK,GACnC,IAAIQ,EAAS,UAAY7B,aAAaC,QAAQ,gBAE9C,OAAO,SAACC,GACJA,EAAS4B,eACT3B,MAAM,GAAD,OACMC,yCADN,wBACmDY,GAAM,CAClDX,OAAQ,MACRC,QAAS,CACL,cAAiBuB,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCzB,yBAClC,mCAAoC,QAExCG,KAAMC,KAAKC,UAAUY,KAG5BX,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBb,EAASJ,eACTI,EAASe,EAAcD,EAAGK,OAUrCX,MAAM,SAAAqB,GACHJ,QAAQC,IAAIG,GACZJ,QAAQC,IAAIZ,GACZd,EAAS8B,YAAiBX,OAE7BI,OAAM,SAAAC,GACHxB,EAAS+B,YAAeP,IACxBC,QAAQC,IAAI,e,iHCGbM,UArCsB,WACjC,IAAMhC,EAA0BiC,cAE1BC,EAAcC,OAAOC,SAASC,OAG9BC,EAFY,IAAIC,gBAAgBL,GAEhBM,IAAI,OAO1B,OANAf,QAAQC,IAAIY,GAEZG,qBAAU,WACNzC,ECdD,SAAS0C,EAAmCJ,GAC/C,IAAIX,EAAS,UAAY7B,aAAaC,QAAQ,gBAC9C,OAAO,SAACC,GACJA,EAAS4B,eACT3B,MAAM,GAAD,OACMC,yCADN,uDACkFoC,GAAO,CAClFnC,OAAQ,OACRC,QAAS,CACL,cAAiBuB,EACjB,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCzB,yBAClC,mCAAoC,UAI/CM,MAAM,SAAAC,GACH,GAAKA,EAASC,GAUV,OAAOD,EATP,GAAwB,MAApBA,EAASE,OAKT,MAAMC,MAAMH,EAASI,YAJrBb,EAASJ,eACTI,EAAS0C,EAAmCJ,OAUvD9B,MAAM,SAAAW,GACHM,QAAQC,IAAIP,MAEfI,OAAM,SAAAC,GACHxB,EAAS+B,YAAeP,IACxBC,QAAQC,IAAI,aDpBXgB,CAAmCJ,MAC7C,CAACtC,EAAUsC,IAGV,kBAAC,WAAD,KAEI,yBAAKK,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,SAAQ,uBAAGA,UAAU,cAAcC,cAAY,WAElE,yBAAKD,UAAU,WACX,gEACA,+MACA,uBAAGE,KAAK,SAAR","file":"static/js/9.4facad70.chunk.js","sourcesContent":["import { logout } from \"../../../store/actions/account.actions\";\r\nimport { putStatusUser } from \"../User/UpdateStatusUser\";\r\n\r\nexport function postRefreshToken() {\r\n    var refresh_token = localStorage.getItem(\"refresh_token\");\r\n\r\n    return (dispatch: any) => {\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/auth/refresh`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        \"refreshToken\":refresh_token\r\n                    })\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 500){\r\n                        let id = localStorage.getItem('id');\r\n                        dispatch(putStatusUser(id, {\r\n                            status: null\r\n                          }))\r\n                        localStorage.removeItem('access_token') // Authorization\r\n                        localStorage.removeItem('refresh_token')\r\n                        localStorage.removeItem('username')\r\n                        localStorage.removeItem('role')\r\n                        localStorage.removeItem('id')\r\n                        localStorage.removeItem('contest_id')\r\n                        localStorage.removeItem('schedule_id')\r\n                        dispatch(logout())\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                return response.json()\r\n            })\r\n            .then (data => {\r\n                localStorage.removeItem('access_token') // Authorization\r\n                localStorage.removeItem('refresh_token')\r\n                localStorage.setItem('access_token', data.accessToken) // Authorization\r\n                localStorage.setItem('refresh_token', data.refreshToken)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataRequest, fetchDataSuccess, fetchDataError } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function putStatusUser(id: any, data: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/status/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putStatusUser(id,data))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                console.log(id)\r\n                dispatch(fetchDataSuccess(data))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { Dispatch, Fragment, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { postStatusUserRegisterJoinSemester } from \"../../common/service/UserRegisterJoinSemester/PostStatusUserRegisterJoinSemester\";\r\n\r\nimport \"./PaymentSuccessfull.css\"\r\n\r\n\r\nconst PaymentSuccessfull: React.FC = () => {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    \r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n\r\n    const ids = urlParams.get('ids')\r\n    console.log(ids);\r\n\r\n    useEffect(() => {\r\n        dispatch(postStatusUserRegisterJoinSemester(ids))\r\n    }, [dispatch, ids])\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 mx-auto mt-5\">\r\n                        <div className=\"payment\">\r\n                            <div className=\"payment_header\">\r\n                                <div className=\"check\"><i className=\"fa fa-check\" aria-hidden=\"true\"></i></div>\r\n                            </div>\r\n                            <div className=\"content\">\r\n                                <h1>Thanh toán thành công !</h1>\r\n                                <p>Chúc mừng bạn đã thanh toán thành công đơn hàng. Vui lòng lòng quay lại trang chủ để trải nghiệm!</p>\r\n                                <a href=\"/Home\">Go to Home</a>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default PaymentSuccessfull;\r\n","import { fetchDataRequest, fetchDataError } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postStatusUserRegisterJoinSemester(ids: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-join-semester/payment/v2?ids=${ids}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postStatusUserRegisterJoinSemester(ids))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (data => {\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}"],"sourceRoot":""}