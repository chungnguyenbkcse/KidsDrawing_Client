{"version":3,"sources":["components/Home/NotificationForm.tsx","common/service/AnonymousNotification/PostAnonymousNotification.tsx","common/service/ScheduleTimeClass/GetScheduleTimeClass.tsx","common/service/UserRegisterJoinSemester/GetTotalMoney.tsx","common/service/Teacher/GetTotalTeacher.tsx","common/service/Parent/GetTotalParent.tsx","common/service/Student/GetTotalStudent.tsx","common/service/Course/GetTotalCourse.tsx","common/service/Contest/GetTotalContest.tsx","components/Home/Home.tsx"],"names":["TeachAgeForm","props","dispatch","useDispatch","notifications","useSelector","state","anonymous_notifications","notification","selectedAnonymousNotification","isCreate","modificationState","AnonymousNotificationModificationStatus","Create","id","name","description","time","useState","error","value","type_send","formState","setFormState","hasFormValueChanged","model","field","isFormInvalid","className","onSubmit","e","preventDefault","isCheck","saveUserFn","addAnonymousNotification","editAnonymousNotification","saveFn","idx","toast","loading","position","POSITION","TOP_CENTER","postAnonymousNotification","recipient","data","bearer","localStorage","getItem","fetchDataRequest","fetch","process","method","headers","body","JSON","stringify","then","response","ok","status","Error","statusText","postRefreshToken","console","log","update","render","type","isLoading","autoClose","catch","fetchDataError","closeButton","subject","msgBody","attachment","clearSelectedAnonymousNotification","setModificationStateAnonymousNotification","None","saveForm","TextInput","onChange","required","maxLength","label","placeholder","SelectKeyValue","options","onClick","getScheduleTimeClass","json","fetchDataSuccess","removeScheduleTimeClassAll","schedule","map","ele","index","x","Object","values","y","keys","ele_1","ele_2","ele_3","ele_4","length","class_name","start_time","end_time","addScheduleTimeClass","getTotalMoney","removeItem","setItem","total_money","getTotalTeacher","user","getTotalParent","getTotalStudent","getTotalCourse","course","getTotalContest","contest","Home","promiseInProgress","usePromiseTracker","popup1","setPopup1","onRemovePopup1","id_x","numberStudentsCount","parseInt","id_y","numberParentsCount","id_z","numberTeachersCount","id_k","numberCoursesCount","id_l","numberContestsCount","id_m","parseFloat","schedule_time_classes","undefined","push","Id","Subject","StartTime","Date","EndTime","IsAllDay","updateCurrentPath","access_token","refresh_token","useEffect","access_token_decode","jwt_decode","refresh_token_decode","exp_access_token_decode","exp","exp_refresh_token_decode","now_time","now","logout","trackPromise","TopCard","title","text","icon","class","open","onClose","closeOnDocumentClick","NotificationForm","height","currentView","selectedDate","eventSettings","dataSource","fields","isAllDay","startTime","endTime","option","services","Day","Week","Month"],"mappings":"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","file":"static/js/18.cdda8557.chunk.js","sourcesContent":["import React, { useState, FormEvent, Dispatch, Fragment } from \"react\";\r\nimport { IStateType, IAnonymousNotificationState } from \"../../store/models/root.interface\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { IAnonymousNotification, AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\r\nimport TextInput from \"../../common/components/TextInput\";\r\nimport { editAnonymousNotification, clearSelectedAnonymousNotification, setModificationStateAnonymousNotification, addAnonymousNotification } from \"../../store/actions/anonymous_notification.action\";\r\nimport { OnChangeModel, IAnonymousNotificationFormState } from \"../../common/types/Form.types\";\r\nimport { postAnonymousNotification } from \"../../common/service/AnonymousNotification/PostAnonymousNotification\";\r\nimport SelectKeyValue from \"../../common/components/SelectKeyValue\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport type artAgeListProps = {\r\n    isCheck: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n};\r\n\r\n\r\nfunction TeachAgeForm(props: artAgeListProps): JSX.Element {\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n    const notifications: IAnonymousNotificationState | null = useSelector((state: IStateType) => state.anonymous_notifications);\r\n    let notification: IAnonymousNotification | null = notifications.selectedAnonymousNotification;\r\n    const isCreate: boolean = (notifications.modificationState === AnonymousNotificationModificationStatus.Create);\r\n\r\n    if (!notification || isCreate) {\r\n        notification = { id: 0, name: \"\", description: \"\", time: \"\" };\r\n    }\r\n\r\n    const [formState, setFormState] = useState({\r\n        name: { error: \"\", value: notification.name },\r\n        description: { error: \"\", value: notification.description },\r\n        type_send: { error: \"\", value: \"Chon gửi tới\" },\r\n    });\r\n\r\n    function hasFormValueChanged(model: OnChangeModel): void {\r\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\r\n    }\r\n\r\n    function saveUser(e: FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n        if (isFormInvalid()) {\r\n            return;\r\n        }\r\n        props.isCheck(false);\r\n        let saveUserFn: Function = (isCreate) ? addAnonymousNotification : editAnonymousNotification;\r\n        saveForm(formState, saveUserFn);\r\n    }\r\n\r\n    function saveForm(formState: IAnonymousNotificationFormState, saveFn: Function): void {\r\n        if (notification) {\r\n            const idx = toast.loading(\"Đang xử lý yêu cầu. Vui lòng đợi giây lát...\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            \r\n            if (saveFn === addAnonymousNotification) {\r\n                dispatch(postAnonymousNotification(formState.type_send.value, {\r\n                    subject: formState.name.value,\r\n                    msgBody: formState.description.value,\r\n                    attachment: \"\"\r\n                }, idx))\r\n            }\r\n\r\n            console.log({\r\n                name: formState.name.value,\r\n                description: formState.description.value,\r\n                type_send: formState.type_send\r\n            })\r\n\r\n            dispatch(clearSelectedAnonymousNotification());\r\n            dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.None));\r\n        }\r\n    }\r\n\r\n    function cancelForm(): void {\r\n        props.isCheck(false);\r\n        dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.None));\r\n    }\r\n\r\n    function getDisabledClass(): string {\r\n        let isError: boolean = isFormInvalid();\r\n        return isError ? \"disabled\" : \"\";\r\n    }\r\n\r\n    function isFormInvalid(): boolean {\r\n        return (formState.name.error || !formState.name.value) as boolean;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row text-left\">\r\n                <div className=\"col-xl-12 col-lg-12\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-green\">{(isCreate ? \"Tạo\" : \"Sửa\")} độ tuổi</h6>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveUser}>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_email\"\r\n                                        value={formState.name.value}\r\n                                        field=\"name\"\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        maxLength={20000}\r\n                                        label=\"Tên\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <TextInput id=\"input_description\"\r\n                                        field=\"description\"\r\n                                        value={formState.description.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={false}\r\n                                        maxLength={100000}\r\n                                        label=\"Miêu tả\"\r\n                                        placeholder=\"\" />\r\n                                </div>\r\n\r\n                                <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-6\">\r\n                                    <SelectKeyValue id=\"input_type_send\"\r\n                                        field=\"type_send\"\r\n                                        value={formState.type_send.value}\r\n                                        onChange={hasFormValueChanged}\r\n                                        required={true}\r\n                                        label=\"Gửi tới\"\r\n                                        options={[\r\n                                            {\r\n                                                name: \"Toàn hệ thống\",\r\n                                                value: \"admin\"\r\n                                            },\r\n                                            {\r\n                                                name: \"Chỉ giáo viên\",\r\n                                                value: \"teacher\"\r\n                                            },\r\n                                            {\r\n                                                name: \"Học viên và phụ huynh\",\r\n                                                value: \"student\"\r\n                                            }\r\n                                        ]}\r\n                                    />\r\n                                </div>\r\n                                </div>\r\n\r\n                                <button className=\"btn btn-danger\" onClick={() => cancelForm()}>Hủy</button>\r\n                                <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Lưu</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default TeachAgeForm;\r\n","import { toast } from \"react-toastify\";\r\nimport { fetchDataRequest, fetchDataError } from \"../../../store/actions/art_age.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function postAnonymousNotification(recipient: any, data: any, idx: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/sendEmail/${recipient}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Authorization': bearer,\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                'Access-Control-Allow-Credentials': 'true'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }\r\n        )\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(postAnonymousNotification(recipient,data, idx))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then(data => {\r\n                console.log(data)\r\n                toast.update(idx, { render: \"Gửi thông báo thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 1000 });\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                toast.update(idx, { render: \"Gửi thông báo không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, closeButton: true });\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import { fetchDataSuccess, fetchDataError, addScheduleTimeClass, removeScheduleTimeClassAll } from \"../../../store/actions/schedule_time_class.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\ninterface ScheduleTimeClass {\r\n    class_name: string;\r\n    start_time: string;\r\n    end_time: string;\r\n}\r\nexport function getScheduleTimeClass(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/classes/schedule-all`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getScheduleTimeClass(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                dispatch(removeScheduleTimeClassAll())\r\n                //console.log(data.body.schedule_time)\r\n                data.body.schedule.map((ele: any, index: any) => {\r\n                    let x = Object.values(ele)\r\n                    let y = Object.keys(ele)\r\n                    return x.map((ele_1: any, idx: any) => {\r\n                        console.log(ele_1)\r\n                        return Object.values(ele_1).map((ele_2: any) => {\r\n                            //console.log(ele_2)\r\n                            let x_1 = Object.values(ele_2)\r\n                            return x_1.map((ele_3: any) => {\r\n                                return ele_3.map((ele_4: any) => {\r\n                                    console.log(ele_4)\r\n                                    if (ele_4.length !== 0){\r\n                                        let time: ScheduleTimeClass = {\r\n                                            class_name: y[0],\r\n                                            start_time: ele_4[0],\r\n                                            end_time: ele_4[1]\r\n                                        }\r\n                                        dispatch(addScheduleTimeClass(time))\r\n                                    }\r\n                                    return ele_4\r\n                                })\r\n                            })\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalMoney(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/user-register-join-semester/total-money`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalMoney(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                localStorage.removeItem('total_money');\r\n                localStorage.setItem('total_money', data.body.total_money)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n            });\r\n}","import { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalTeacher(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/teacher/total`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalTeacher(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                localStorage.removeItem('total_teacher');\r\n                localStorage.setItem('total_teacher', data.body.user)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n            });\r\n}","import { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalParent(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/parent/total`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalParent(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                localStorage.removeItem('total_parent');\r\n                localStorage.setItem('total_parent', data.body.user)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n            });\r\n}","import { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalStudent(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/student/total`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalStudent(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                localStorage.removeItem('total_student');\r\n                localStorage.setItem('total_student', data.body.user)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n            });\r\n}","import { fetchDataSuccess, fetchDataError } from \"../../../store/actions/course.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalCourse(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/course/total`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalCourse(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                localStorage.removeItem('total_course');\r\n                localStorage.setItem('total_course', data.body.course)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import { fetchDataSuccess, fetchDataError } from \"../../../store/actions/contest.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function getTotalContest(dispatch: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    return fetch(\r\n                `${process.env.REACT_APP_API_URL}/contest/total`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    }\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(getTotalContest(dispatch))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response.json()\r\n                }\r\n            })\r\n            .then (data => {\r\n                dispatch(fetchDataSuccess(data))\r\n                localStorage.removeItem('total_contest');\r\n                localStorage.setItem('total_contest', data.body.contest)\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n}","import React, { Fragment, Dispatch, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateCurrentPath } from \"../../store/actions/root.actions\";\nimport TopCard from \"../../common/components/TopCard\";\nimport { IAnonymousNotificationState, IScheduleTimeClassState, IStateType} from \"../../store/models/root.interface\";\nimport { logout } from \"../../store/actions/account.actions\";\nimport jwt_decode from \"jwt-decode\";\nimport { setModificationStateAnonymousNotification } from \"../../store/actions/anonymous_notification.action\";\nimport { AnonymousNotificationModificationStatus } from \"../../store/models/anonymous_notification.interface\";\nimport NotificationForm from \"./NotificationForm\";\nimport Popup from \"reactjs-popup\";\nimport { ToastContainer } from \"react-toastify\";\nimport { getScheduleTimeClass } from \"../../common/service/ScheduleTimeClass/GetScheduleTimeClass\";\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, ViewsDirective, ViewDirective } from \"@syncfusion/ej2-react-schedule\";\n\nimport \"@syncfusion/ej2-base/styles/material.css\";\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\nimport \"@syncfusion/ej2-lists/styles/material.css\";\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\nimport \"@syncfusion/ej2-popups/styles/material.css\";\nimport \"@syncfusion/ej2-splitbuttons/styles/material.css\";\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\n\nimport { trackPromise, usePromiseTracker } from 'react-promise-tracker';\nimport Loading from \"../../common/components/Loading\";\nimport { getTotalMoney } from \"../../common/service/UserRegisterJoinSemester/GetTotalMoney\";\nimport { getTotalTeacher } from \"../../common/service/Teacher/GetTotalTeacher\";\nimport { getTotalParent } from \"../../common/service/Parent/GetTotalParent\";\nimport { getTotalStudent } from \"../../common/service/Student/GetTotalStudent\";\nimport { getTotalCourse } from \"../../common/service/Course/GetTotalCourse\";\nimport { getTotalContest } from \"../../common/service/Contest/GetTotalContest\";\n\n\n\n\n\nconst Home: React.FC = () => {\n  const { promiseInProgress } = usePromiseTracker();\n\n  const [popup1, setPopup1] = useState(false);\n\n  function onAnonymousNotificationRemove() {\n    setPopup1(true);\n  }\n\n  function onRemovePopup1(value: boolean) {\n    setPopup1(false);\n  }\n\n  const anonymous_notifications: IAnonymousNotificationState | null = useSelector((state: IStateType) => state.anonymous_notifications);\n\n  var id_x = localStorage.getItem('total_student');\n  let  numberStudentsCount: number = 0;\n\n  if (id_x !== null) {\n    numberStudentsCount = parseInt(id_x)\n  }\n\n  var id_y = localStorage.getItem('total_parent');\n  let  numberParentsCount: number = 0;\n\n  if (id_y !== null) {\n    numberParentsCount = parseInt(id_y)\n  }\n\n  var id_z = localStorage.getItem('total_teacher');\n  let  numberTeachersCount: number = 0;\n\n  if (id_z !== null) {\n    numberTeachersCount = parseInt(id_z)\n  }\n\n  var id_k = localStorage.getItem('total_course');\n  let  numberCoursesCount: number = 0;\n\n  if (id_k !== null) {\n    numberCoursesCount = parseInt(id_k)\n  }\n\n  var id_l = localStorage.getItem('total_contest');\n  let  numberContestsCount: number = 0;\n\n  if (id_l !== null) {\n    numberContestsCount = parseInt(id_l)\n  }\n\n  var id_m = localStorage.getItem('total_money');\n  let  total_money: number = 0;\n\n  if (id_m !== null) {\n    total_money = parseFloat(id_m)\n  }\n  \n\n\n  const schedule_time_classes: IScheduleTimeClassState = useSelector((state: IStateType) => state.schedule_time_classes);\n  console.log(schedule_time_classes)\n\n  let data: object[] = []\n\n  schedule_time_classes.schedule_time_classes.map((ele, index) => {\n    if (ele !== undefined && ele != null) {\n      return data.push({\n        Id: index,\n        Subject: ele.class_name !== undefined && ele.class_name !== null ? ele.class_name : \"\",\n        StartTime: new Date(ele.start_time),\n        EndTime: new Date(ele.end_time),\n        IsAllDay: false\n      })\n    }\n    return 1\n  })\n\n  console.log(data)\n\n  const dispatch: Dispatch<any> = useDispatch();\n  dispatch(updateCurrentPath(\"Trang chủ\", \"\"));\n  localStorage.setItem('path', '/')\n\n  let access_token = localStorage.getItem(\"access_token\");\n  let refresh_token = localStorage.getItem(\"refresh_token\");\n  useEffect(() => {\n    if (access_token !== null && refresh_token !== null && access_token !== undefined && refresh_token !== undefined) {\n      let access_token_decode: any = jwt_decode(access_token)\n      let refresh_token_decode: any = jwt_decode(refresh_token)\n      let exp_access_token_decode = access_token_decode.exp;\n      let exp_refresh_token_decode = refresh_token_decode.exp;\n      let now_time = Date.now() / 1000;\n      console.log(exp_access_token_decode)\n      console.log(now_time)\n      if (exp_access_token_decode < now_time) {\n        if (exp_refresh_token_decode < now_time) {\n          localStorage.removeItem('access_token') // Authorization\n          localStorage.removeItem('refresh_token')\n          localStorage.removeItem('username')\n          localStorage.removeItem('role')\n          localStorage.removeItem('id')\n          localStorage.removeItem('contest_id')\n          localStorage.removeItem('schedule_id')\n          dispatch(logout())\n        }\n        else {\n          trackPromise(getTotalMoney(dispatch))\n          trackPromise(getTotalTeacher(dispatch))\n          trackPromise(getTotalParent(dispatch))\n          trackPromise(getTotalStudent(dispatch))\n          trackPromise(getTotalCourse(dispatch))\n          trackPromise(getTotalContest(dispatch))\n          trackPromise(getScheduleTimeClass(dispatch))\n        }\n      }\n      else {\n        trackPromise(getTotalMoney(dispatch))\n        trackPromise(getTotalTeacher(dispatch))\n        trackPromise(getTotalParent(dispatch))\n        trackPromise(getTotalStudent(dispatch))\n        trackPromise(getTotalCourse(dispatch))\n        trackPromise(getTotalContest(dispatch))\n        trackPromise(getScheduleTimeClass(dispatch))\n      }\n    }\n  }, [dispatch, access_token, refresh_token])\n\n  return (\n    promiseInProgress ?\n      <div className=\"loader\"></div> : <Fragment>\n        <ToastContainer />\n        <h1 className=\"h3 mb-2 text-gray-800\">Trang chủ</h1>\n\n        <div className=\"row\">\n          <TopCard title=\"KHÓA HỌC\" text={`${numberCoursesCount}`} icon=\"book\" class=\"primary\" />\n          <TopCard title=\"CUỘC THI\" text={`${numberContestsCount}`} icon=\"book\" class=\"danger\" />\n          <TopCard title=\"DOANH THU\" text={`$${total_money}`} icon=\"dollar-sign\" class=\"success\" />\n        </div>\n\n        <div className=\"row\">\n          <TopCard title=\"HỌC VIÊN\" text={`${numberStudentsCount}`} icon=\"user\" class=\"primary\" />\n          <TopCard title=\"GIÁO VIÊN\" text={`${numberTeachersCount}`} icon=\"user\" class=\"danger\" />\n          <TopCard title=\"PHỤ HUYNH\" text={`${numberParentsCount}`} icon=\"user\" class=\"danger\" />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-xl-6 col-md-4 mb-4\">\n            <button\n              className=\"btn btn-success btn-green\"\n              onClick={() => {\n                dispatch(setModificationStateAnonymousNotification(AnonymousNotificationModificationStatus.Create))\n                onAnonymousNotificationRemove()\n              }}\n            >\n              <i className=\"fas fa fa-plus\"></i>\n              Gửi thông báo\n            </button>\n          </div>\n        </div>\n\n        <Popup\n          open={popup1}\n          onClose={() => setPopup1(false)}\n          closeOnDocumentClick\n        >\n          <>\n            {\n              function () {\n                if ((anonymous_notifications.modificationState === AnonymousNotificationModificationStatus.Create)) {\n                  return <NotificationForm isCheck={onRemovePopup1} />\n                }\n              }()\n            }\n          </>\n        </Popup>\n\n\n        <div className=\"row\">\n          <div className=\"col-xl-12 col-lg-12\">\n            <div className=\"card shadow mb-4\">\n              <div className=\"card-header py-3\">\n                <h6 className=\"m-0 font-weight-bold text-green\">Lịch học chi tiết</h6>\n              </div>\n              <div className=\"card-body\">\n              <ScheduleComponent height='550px' currentView=\"Month\" selectedDate={new Date()} eventSettings={{\n                          dataSource: data, fields: {\n                            id: 'Id',\n                            subject: { name: 'Subject' },\n                            isAllDay: { name: 'IsAllDay' },\n                            startTime: { name: 'StartTime' },\n                            endTime: { name: 'EndTime' }\n                          }\n                        }}>\n\n                            <ViewsDirective>\n                                <ViewDirective option='Day'/>\n                                <ViewDirective option='Week'/>\n                                <ViewDirective option='Month'/>\n                            </ViewsDirective>\n                          <Inject services={[Day, Week, Month]}/>\n                        </ScheduleComponent>;\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </Fragment>\n  );\n}\n\nexport default Home;\n"],"sourceRoot":""}