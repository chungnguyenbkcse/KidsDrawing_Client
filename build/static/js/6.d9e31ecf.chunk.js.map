{"version":3,"sources":["common/service/Aut/RefreshToken.tsx","../node_modules/jwt-decode/build/jwt-decode.esm.js","common/components/TextInput.tsx","common/service/User/UpdateStatusUser.tsx","components/Account/Login.tsx","common/service/Aut/Login.tsx"],"names":["postRefreshToken","refresh_token","localStorage","getItem","dispatch","fetch","process","method","headers","body","JSON","stringify","then","response","ok","status","Error","statusText","id","putStatusUser","removeItem","logout","json","data","setItem","accessToken","refreshToken","catch","error","console","log","e","this","message","prototype","name","r","window","atob","bind","t","String","replace","length","n","o","a","i","c","charAt","fromCharCode","indexOf","decodeURIComponent","charCodeAt","toString","toUpperCase","header","parse","split","TextInput","props","useState","touched","setTouch","setError","htmlClass","setHtmlClass","setValue","htmlFor","label","value","type","onChange","event","target","validClass","elementValue","required","maxLength","field","className","inputClass","placeholder","bearer","fetchDataRequest","val","fetchDataSuccess","fetchDataError","Login","useDispatch","history","useHistory","username","password","formState","setFormState","changeRouteHome","push","hasFormValueChanged","model","isFormInvalid","onClick","src","alt","onSubmit","preventDefault","toast","loading","position","POSITION","TOP_CENTER","clear","token","decoded","jwt_decode","role","profile_image_url","login","update","render","isLoading","autoClose","setTimeout","openRequest","indexedDB","open","onerror","onsuccess","db","result","onversionchange","close","alert","query","transaction","objectStore","getAll","token_object","closeButton","postAut","style","color"],"mappings":"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","file":"static/js/6.d9e31ecf.chunk.js","sourcesContent":["import { logout } from \"../../../store/actions/account.actions\";\r\nimport { putStatusUser } from \"../User/UpdateStatusUser\";\r\n\r\nexport function postRefreshToken() {\r\n    var refresh_token = localStorage.getItem(\"refresh_token\");\r\n\r\n    return (dispatch: any) => {\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/auth/refresh`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        \"refreshToken\":refresh_token\r\n                    })\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 500){\r\n                        let id = localStorage.getItem('id');\r\n                        dispatch(putStatusUser(id, {\r\n                            status: null\r\n                          }))\r\n                        localStorage.removeItem('access_token') // Authorization\r\n                        localStorage.removeItem('refresh_token')\r\n                        localStorage.removeItem('username')\r\n                        localStorage.removeItem('role')\r\n                        localStorage.removeItem('id')\r\n                        localStorage.removeItem('contest_id')\r\n                        localStorage.removeItem('schedule_id')\r\n                        dispatch(logout())\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                return response.json()\r\n            })\r\n            .then (data => {\r\n                localStorage.removeItem('access_token') // Authorization\r\n                localStorage.removeItem('refresh_token')\r\n                localStorage.setItem('access_token', data.accessToken) // Authorization\r\n                localStorage.setItem('refresh_token', data.refreshToken)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","function e(e) {\n  this.message = e;\n}\n\ne.prototype = new Error(), e.prototype.name = \"InvalidCharacterError\";\n\nvar r = \"undefined\" != typeof window && window.atob && window.atob.bind(window) || function (r) {\n  var t = String(r).replace(/=+$/, \"\");\n  if (t.length % 4 == 1) throw new e(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n\n  for (var n, o, a = 0, i = 0, c = \"\"; o = t.charAt(i++); ~o && (n = a % 4 ? 64 * n + o : o, a++ % 4) ? c += String.fromCharCode(255 & n >> (-2 * a & 6)) : 0) {\n    o = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(o);\n  }\n\n  return c;\n};\n\nfunction t(e) {\n  var t = e.replace(/-/g, \"+\").replace(/_/g, \"/\");\n\n  switch (t.length % 4) {\n    case 0:\n      break;\n\n    case 2:\n      t += \"==\";\n      break;\n\n    case 3:\n      t += \"=\";\n      break;\n\n    default:\n      throw \"Illegal base64url string!\";\n  }\n\n  try {\n    return function (e) {\n      return decodeURIComponent(r(e).replace(/(.)/g, function (e, r) {\n        var t = r.charCodeAt(0).toString(16).toUpperCase();\n        return t.length < 2 && (t = \"0\" + t), \"%\" + t;\n      }));\n    }(t);\n  } catch (e) {\n    return r(t);\n  }\n}\n\nfunction n(e) {\n  this.message = e;\n}\n\nfunction o(e, r) {\n  if (\"string\" != typeof e) throw new n(\"Invalid token specified\");\n  var o = !0 === (r = r || {}).header ? 0 : 1;\n\n  try {\n    return JSON.parse(t(e.split(\".\")[o]));\n  } catch (e) {\n    throw new n(\"Invalid token specified: \" + e.message);\n  }\n}\n\nn.prototype = new Error(), n.prototype.name = \"InvalidTokenError\";\nexport default o;\nexport { n as InvalidTokenError };","import React, { useState, ChangeEvent } from \"react\";\nimport { TextInputProps } from \"../types/TextInput.types\";\n\nfunction TextInput(props: TextInputProps): JSX.Element {\n    const [touched, setTouch] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [htmlClass, setHtmlClass] = useState(\"\");\n    const [, setValue] = useState(\"\");\n\n\n    function onValueChanged(event: ChangeEvent<HTMLInputElement>): void {\n        let [error, validClass, elementValue] = [\"\", \"\", event.target.value];\n\n        [error, validClass] = (!elementValue && props.required) ?\n            [\"Value cannot be empty\", \"is-invalid\"] : [\"\", \"is-valid\"];\n\n        if (!error) {\n            [error, validClass] = (props.maxLength && elementValue && elementValue.length > (props.maxLength)) ?\n            [`Value can't have more than ${props.maxLength} characters`, \"is-invalid\"] : [\"\", \"is-valid\"];\n        }\n\n        props.onChange({ value: elementValue, error: error, touched: touched, field: props.field });\n\n        setTouch(true);\n        setError(error);\n        setHtmlClass(validClass);\n        setValue(elementValue);\n    }\n\n    return (\n        <div>\n            <label htmlFor={props.id.toString()}>{props.label}</label>\n            <input\n                value={props.value}\n                type={props.type}\n                onChange={onValueChanged}\n                className={`form-control ${props.inputClass} ${htmlClass}`}\n                id={`id_${props.label}`}\n                placeholder={props.placeholder} />\n            {error ?\n                <div className=\"invalid-feedback\">\n                    {error}\n                </div> : null\n            }\n        </div>\n    );\n}\n\nexport default TextInput;","import { fetchDataRequest, fetchDataSuccess, fetchDataError } from \"../../../store/actions/users.action\";\r\nimport { postRefreshToken } from \"../Aut/RefreshToken\";\r\n\r\nexport function putStatusUser(id: any, data: any) {\r\n    var bearer = 'Bearer ' + localStorage.getItem(\"access_token\");\r\n    \r\n    return (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        fetch(\r\n                `${process.env.REACT_APP_API_URL}/user/status/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        'Authorization': bearer,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                        'Access-Control-Allow-Credentials': 'true'\r\n                    },\r\n                    body: JSON.stringify(data)\r\n                }\r\n            )\r\n            .then( response => {\r\n                if (!response.ok) {\r\n                    if (response.status === 403) {\r\n                        dispatch(postRefreshToken())\r\n                        dispatch(putStatusUser(id,data))\r\n                    }\r\n                    else {\r\n                        throw Error(response.statusText);\r\n                    }\r\n                }\r\n                else {\r\n                    return response\r\n                }\r\n            })\r\n            .then (val => {\r\n                console.log(val)\r\n                console.log(id)\r\n                dispatch(fetchDataSuccess(data))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataError(error));\r\n                console.log(\"error\")\r\n            });\r\n    };\r\n}","import React, { useState, FormEvent, Dispatch } from \"react\";\nimport { OnChangeModel } from \"../../common/types/Form.types\";\nimport { useDispatch } from \"react-redux\";\nimport TextInput from \"../../common/components/TextInput\";\nimport '../../assets/css/Login.css'\nimport { postAut } from \"../../common/service/Aut/Login\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useHistory } from \"react-router-dom\";\n\nconst Login: React.FC = () => {\n  const dispatch: Dispatch<any> = useDispatch();\n  const history = useHistory()\n\n  const [formState, setFormState] = useState({\n    username: { error: \"\", value: \"\" },\n    password: { error: \"\", value: \"\" }\n  });\n\n  function changeRouteHome(value: boolean) {\n    if (value === true){\n      history.push('/')\n    }\n  }\n\n  function routeRegister() {\n      history.push('/register')\n  }\n\n  function routeForgetPassword() {\n    history.push('/forgot-password')\n}\n\n  function hasFormValueChanged(model: OnChangeModel): void {\n    setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\n  }\n\n  function submit(e: FormEvent<HTMLFormElement>): void {\n    e.preventDefault();\n    if(isFormInvalid()) { return; }\n    const id = toast.loading(\"Đang xác thực. Vui lòng đợi giây lát...\", {\n      position: toast.POSITION.TOP_CENTER\n    });\n    dispatch(postAut(formState.username.value, formState.password.value, changeRouteHome, id))\n  }\n\n  function isFormInvalid() {\n    return (formState.username.error || formState.password.error\n      || !formState.username.value || !formState.password.value);\n  }\n\n  function getDisabledClass(): string {\n    let isError: boolean = isFormInvalid() as boolean;\n    return isError ? \"disabled\" : \"\";\n  }\n\n  const changeRoute = () => {\n    history.push('/landing-page')\n  }\n\n  return (\n\n    <div className=\"container-fluid \" id=\"login-page\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-xl-10 col-lg-10 col-md-9\">\n          <h2 id=\"text-logo\" onClick={changeRoute}>KidsDrawing</h2>\n        </div>\n      </div>\n      <ToastContainer />\n      <div className=\"row justify-content-center\">\n        <div className=\"col-xl-10 col-lg-12 col-md-9\">\n          <div className=\"card o-hidden border-0  my-5\">\n            <div className=\"card-body p-0\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 d-none d-lg-block text-center\" id=\"image-login-page\">\n                  <img src=\"https://res.cloudinary.com/djtmwajiu/image/upload/v1667290306/o0ymcs4lblpy2hfmisyq.png\" alt=\"First slide\" />\n                </div>\n                <div className=\"col-lg-6 shadow-lg\">\n                  <div className=\"p-5\">\n                    <div className=\"text-center\">\n                      <h1 className=\"h4 text-gray-900 mb-4\">Đăng nhập</h1>\n                    </div>\n                    <form className=\"user\" onSubmit={submit}>\n                      <div className=\"form-group\">\n\n                        <TextInput id=\"input_username\"\n                          field=\"username\"\n                          value={formState.username.value}\n                          onChange={hasFormValueChanged}\n                          required={true}\n                          maxLength={100}\n                          label=\"Tên đăng nhập\"\n                          placeholder=\"\" />\n                      </div>\n                      <div className=\"form-group\">\n                        <TextInput id=\"input_password\"\n                          field=\"password\"\n                          value={formState.password.value}\n                          onChange={hasFormValueChanged}\n                          required={true}\n                          maxLength={100}\n                          type=\"password\"\n                          label=\"Mật khẩu\"\n                          placeholder=\"\" />\n                      </div>\n                      \n                      <button\n                        className={`btn btn-primary btn-user btn-block ${getDisabledClass()}`}\n                        type=\"submit\">\n                        Đăng nhập\n                      </button>\n                    </form>\n                    <div className=\"justify-content-center text-center\">\n                      <p className=\"link\" style={{color: '#0066FF'}} onClick={() => {routeForgetPassword()}}>Quên mật khẩu?</p>\n                    </div>\n                    <div className=\"justify-content-center text-center\">\n                      <p>Bạn chưa có tài khoản? <span style={{color: '#0066FF'}}><span className=\"link\" style={{color: '#0066FF'}} onClick={() => {routeRegister()}}>Đăng kí</span></span></p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import jwt_decode from \"jwt-decode\";\r\nimport { login } from \"../../../store/actions/account.actions\";\r\nimport { toast } from 'react-toastify';\r\nimport { putStatusUser } from \"../User/UpdateStatusUser\";\r\n\r\nexport function postAut(username: string, password: string, changeRouteHome: any, id: any) {\r\n    \r\n    return (dispatch: any) => {\r\n        fetch(\r\n            `${process.env.REACT_APP_API_URL}/auth`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': `${process.env.REACT_APP_API_LOCAL}`,\r\n                'Access-Control-Allow-Credentials': 'true'\r\n            },\r\n            body: JSON.stringify({\r\n                \"username\": username,\r\n                \"password\": password\r\n            })\r\n        }\r\n        )\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw Error(response.statusText);\r\n                }\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                localStorage.clear();\r\n                localStorage.setItem('access_token', data.accessToken) // Authorization\r\n                localStorage.setItem('refresh_token', data.refreshToken)\r\n                localStorage.setItem('username', username)\r\n                const token: string = data.accessToken;\r\n                const decoded: any = jwt_decode(token);\r\n                console.log(decoded)\r\n                localStorage.setItem('role', decoded.role)\r\n                localStorage.setItem('id', decoded.id)\r\n                localStorage.setItem('link_profile', decoded.profile_image_url)\r\n                dispatch(login(username));\r\n                toast.update(id, { render: \"Đăng nhập thành công\", type: \"success\", isLoading: false, position: toast.POSITION.TOP_CENTER, autoClose: 1000 });\r\n                setTimeout(function () {\r\n                    changeRouteHome(true);\r\n                }, 1000); \r\n                let openRequest = indexedDB.open(\"firebase-messaging-database\", 1);\r\n                openRequest.onerror = function() {\r\n                    console.error(\"Error\", openRequest.error);\r\n                };\r\n\r\n                localStorage.setItem('path', '/')\r\n                \r\n                openRequest.onsuccess = function() {\r\n                    let db = openRequest.result;\r\n                    db.onversionchange = function() {\r\n                        db.close();\r\n                        alert(\"Database is outdated, please reload the page.\")\r\n                    };\r\n                    // continue working with database using db object\r\n                    console.log(db)\r\n                    const txn = db.transaction('firebase-messaging-store', 'readwrite');\r\n                    const store = txn.objectStore('firebase-messaging-store');\r\n\r\n                    let query = store.getAll();\r\n\r\n                    query.onerror = function() {\r\n                        console.error(\"Error\", openRequest.error);\r\n                    };\r\n\r\n                    query.onsuccess = (event: any) => {\r\n                        if (!event.target.result) {\r\n                            console.log(`The firebase device token with 0 not found`);\r\n                        } else {\r\n                            console.log(event.target.result);\r\n                            let token_object = event.target.result[0];\r\n                            dispatch(putStatusUser(localStorage.getItem('id'), {\r\n                                status: token_object.token\r\n                            }))\r\n                        }\r\n                    };\r\n                };            \r\n            })\r\n            .catch(error => {\r\n                toast.update(id, { render: \"Đăng nhập không thành công\", type: \"error\", isLoading: false, position: toast.POSITION.TOP_CENTER, closeButton: true });\r\n            });\r\n    };\r\n}"],"sourceRoot":""}